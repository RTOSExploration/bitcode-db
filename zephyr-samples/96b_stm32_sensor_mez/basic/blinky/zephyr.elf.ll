; ModuleID = 'build/96b_stm32_sensor_mez/basic/blinky/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.gpio_driver_data }
%struct.gpio_driver_data = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.gpio_driver_data }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.gpio_driver_data, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.gpio_driver_data, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.gpio_driver_data, %struct.gpio_driver_data }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.gpio_driver_data, %struct.gpio_driver_data, %struct.gpio_driver_data, %struct.gpio_driver_data, %struct.gpio_driver_data, %struct.gpio_driver_data, %struct.gpio_driver_data, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.gpio_driver_data*, %struct.gpio_driver_data* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230712 to i8*), void (i8*)* inttoptr (i32 134228831 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230712 to i8*), void (i8*)* inttoptr (i32 134228811 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230712 to i8*), void (i8*)* inttoptr (i32 134228801 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230712 to i8*), void (i8*)* inttoptr (i32 134228901 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230712 to i8*), void (i8*)* inttoptr (i32 134228891 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230712 to i8*), void (i8*)* inttoptr (i32 134228881 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230712 to i8*), void (i8*)* inttoptr (i32 134228871 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230712 to i8*), void (i8*)* inttoptr (i32 134228861 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230712 to i8*), void (i8*)* inttoptr (i32 134228851 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230712 to i8*), void (i8*)* inttoptr (i32 134228841 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230712 to i8*), void (i8*)* inttoptr (i32 134228821 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !166
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.gpio_driver_data { i32 101384192 } }], align 4, !dbg !195
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !203
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !349
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !385
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i32 0, i32 0), %struct.gpio_driver_data { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), %struct.gpio_driver_data { i32 285933600 } }], align 4, !dbg !395
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !400
@.str.25 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !420
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !622
@.str.26 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !583
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !566
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !539
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !555
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !585
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !599
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !601
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !603
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !605
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !607
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !609
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !611
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !613
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !615
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !617
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !627
@.str.28 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !660
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !758
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !747
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !799
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !647
@.str.39 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !865
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1144
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1114
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1100
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1045
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !645
@.str.1.40 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1146
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1118
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1116
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1059
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !643
@.str.2 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1159
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1122
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1120
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1065
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !641
@.str.3 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1161
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1126
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1124
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1074
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !639
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1163
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1130
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1128
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1080
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !637
@.str.5 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1165
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1134
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1132
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1086
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !635
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1167
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1138
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1136
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1092
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !633
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.gpio_driver_data { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1169
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1142
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1140
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1098
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !655
@.str.46 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1171
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1390
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1345
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1392
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1318
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1320
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !653
@.str.1.47 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1399
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1347
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1424
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.47, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1329
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1331
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !651
@.str.2.48 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1426
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1349
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1436
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.48, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1335
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1337
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !649
@.str.3.51 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1438
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1351
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1448
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.51, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1341
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1343
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1353
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1361
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1384
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1387
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !731
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1416
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1418
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1420
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1422
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1428
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1430
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1432
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1434
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1440
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1442
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1444
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1446
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1450
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1561
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1563
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1559
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1530
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1565
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1043
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.40, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1057
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1063
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1072
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1078
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1084
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1090
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1096
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1655
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1699
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1702
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1709
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1716
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1926
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1935
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1942
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1947
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.101 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.104, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.105, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.106, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.107, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.108, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.102, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.109, i32 0, i32 0)], align 4, !dbg !1975
@.str.103 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.104 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.105 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.106 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.107 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.108 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.102 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.109 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2087
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2100
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2208
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2211
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2213
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1940
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1937
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2215
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2251
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1804
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2249
@.str.164 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2907 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2911, !srcloc !2912
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2913, !srcloc !2914
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2915, !srcloc !2916
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2917, !srcloc !2918
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2919, !srcloc !2920
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2921, !srcloc !2922
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2923, !srcloc !2924
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2925, !srcloc !2926
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2927, !srcloc !2928
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2929, !srcloc !2930
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2931, !srcloc !2932
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2933, !srcloc !2934
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2935, !srcloc !2936
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2937, !srcloc !2938
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2939, !srcloc !2940
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2941, !srcloc !2942
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2943, !srcloc !2944
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2945, !srcloc !2946
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2947, !srcloc !2948
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2949, !srcloc !2950
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2951, !srcloc !2952
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2953, !srcloc !2954
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2955, !srcloc !2956
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2957, !srcloc !2958
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2959, !srcloc !2960
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2961, !srcloc !2962
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2963, !srcloc !2964
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2965, !srcloc !2968
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2969, !srcloc !2970
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2971, !srcloc !2972
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2973, !srcloc !2974
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2975, !srcloc !2976
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2977, !srcloc !2978
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2979, !srcloc !2980
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !2981, !srcloc !2982
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !2983, !srcloc !2984
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !2985, !srcloc !2986
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2987, !srcloc !2988
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2989, !srcloc !2990
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2991, !srcloc !2992
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2993, !srcloc !2994
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2995, !srcloc !2996
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2997, !srcloc !2998
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !2999, !srcloc !3000
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3001, !srcloc !3002
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3003, !srcloc !3004
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3005, !srcloc !3006
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3007, !srcloc !3008
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3009, !srcloc !3010
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3011, !srcloc !3012
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3013, !srcloc !3014
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !3015, !srcloc !3016
  ret void, !dbg !3017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3020 {
  %1 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !3023
  br i1 %1, label %2, label %11, !dbg !3025

2:                                                ; preds = %0
  %3 = tail call fastcc i32 @gpio_pin_configure_dt() #24, !dbg !3026
  call void @llvm.dbg.value(metadata i32 %3, metadata !3022, metadata !DIExpression()), !dbg !3027
  %4 = icmp slt i32 %3, 0, !dbg !3028
  br i1 %4, label %11, label %5, !dbg !3030

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @gpio_pin_toggle_dt() #24, !dbg !3031
  call void @llvm.dbg.value(metadata i32 %6, metadata !3022, metadata !DIExpression()), !dbg !3027
  %7 = icmp slt i32 %6, 0, !dbg !3033
  br i1 %7, label %11, label %8, !dbg !3035

8:                                                ; preds = %5, %8
  tail call fastcc void @k_msleep() #24, !dbg !3036
  %9 = tail call fastcc i32 @gpio_pin_toggle_dt() #24, !dbg !3031
  call void @llvm.dbg.value(metadata i32 %9, metadata !3022, metadata !DIExpression()), !dbg !3027
  %10 = icmp slt i32 %9, 0, !dbg !3033
  br i1 %10, label %11, label %8, !dbg !3035, !llvm.loop !3037

11:                                               ; preds = %8, %5, %2, %0
  ret void, !dbg !3040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !3041 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_19, metadata !3046, metadata !DIExpression()), !dbg !3047
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3048, !srcloc !3050
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !3051
  ret i1 %1, !dbg !3052
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure_dt() unnamed_addr #1 !dbg !3053 {
  call void @llvm.dbg.value(metadata i32 1703936, metadata !3059, metadata !DIExpression()), !dbg !3060
  %1 = tail call fastcc i32 @gpio_pin_configure() #24, !dbg !3061
  ret i32 %1, !dbg !3062
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_toggle_dt() unnamed_addr #1 !dbg !3063 {
  %1 = tail call fastcc i32 @gpio_pin_toggle() #24, !dbg !3068
  ret i32 %1, !dbg !3069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3070 {
  call void @llvm.dbg.value(metadata i32 1000, metadata !3074, metadata !DIExpression()), !dbg !3075
  tail call fastcc void @k_sleep([1 x i64] [i64 10000]) #24, !dbg !3076
  ret void, !dbg !3077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3078 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3087, metadata !DIExpression()), !dbg !3088
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3089, !srcloc !3091
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3092
  ret void, !dbg !3093
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_toggle() unnamed_addr #1 !dbg !3094 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_19, metadata !3098, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.value(metadata i8 10, metadata !3099, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.value(metadata i8* undef, metadata !3100, metadata !DIExpression()), !dbg !3102
  %1 = tail call fastcc i32 @gpio_port_toggle_bits() #24, !dbg !3103
  ret i32 %1, !dbg !3104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_port_toggle_bits() unnamed_addr #1 !dbg !3105 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_19, metadata !3108, metadata !DIExpression()), !dbg !3110
  call void @llvm.dbg.value(metadata i32 1024, metadata !3109, metadata !DIExpression()), !dbg !3110
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3111, !srcloc !3113
  %1 = tail call fastcc i32 @z_impl_gpio_port_toggle_bits() #24, !dbg !3114
  ret i32 %1, !dbg !3115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_port_toggle_bits() unnamed_addr #1 !dbg !3116 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_19, metadata !3118, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.value(metadata i32 1024, metadata !3119, metadata !DIExpression()), !dbg !3121
  %1 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_19, i32 0, i32 2) to %struct.gpio_driver_api**), align 4, !dbg !3122
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %1, metadata !3120, metadata !DIExpression()), !dbg !3121
  %2 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %1, i32 0, i32 5, !dbg !3123
  %3 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %2, align 4, !dbg !3123
  %4 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_19, i32 noundef 1024) #25, !dbg !3124
  ret i32 %4, !dbg !3125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure() unnamed_addr #1 !dbg !3126 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_19, metadata !3128, metadata !DIExpression()), !dbg !3131
  call void @llvm.dbg.value(metadata i8 10, metadata !3129, metadata !DIExpression()), !dbg !3131
  call void @llvm.dbg.value(metadata i32 1703936, metadata !3130, metadata !DIExpression()), !dbg !3131
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3132, !srcloc !3134
  %1 = tail call fastcc i32 @z_impl_gpio_pin_configure() #24, !dbg !3135
  ret i32 %1, !dbg !3136
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_pin_configure() unnamed_addr #1 !dbg !3137 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_19, metadata !3139, metadata !DIExpression()), !dbg !3145
  call void @llvm.dbg.value(metadata i8 10, metadata !3140, metadata !DIExpression()), !dbg !3145
  call void @llvm.dbg.value(metadata i32 1703936, metadata !3141, metadata !DIExpression()), !dbg !3145
  %1 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_19, i32 0, i32 2) to %struct.gpio_driver_api**), align 4, !dbg !3146
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %1, metadata !3142, metadata !DIExpression()), !dbg !3145
  call void @llvm.dbg.value(metadata i8* undef, metadata !3143, metadata !DIExpression()), !dbg !3145
  %2 = load %struct.gpio_driver_data*, %struct.gpio_driver_data** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_19, i32 0, i32 4) to %struct.gpio_driver_data**), align 4, !dbg !3147
  call void @llvm.dbg.value(metadata %struct.gpio_driver_data* %2, metadata !3144, metadata !DIExpression()), !dbg !3145
  call void @llvm.dbg.value(metadata i32 1703936, metadata !3141, metadata !DIExpression()), !dbg !3145
  call void @llvm.dbg.value(metadata i32 655360, metadata !3141, metadata !DIExpression()), !dbg !3145
  %3 = getelementptr inbounds %struct.gpio_driver_data, %struct.gpio_driver_data* %2, i32 0, i32 0, !dbg !3148
  %4 = load i32, i32* %3, align 4, !dbg !3151
  %5 = and i32 %4, -1025, !dbg !3151
  store i32 %5, i32* %3, align 4, !dbg !3151
  %6 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %1, i32 0, i32 0, !dbg !3152
  %7 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %6, align 4, !dbg !3152
  %8 = tail call i32 %7(%struct.device* noundef nonnull @__device_dts_ord_19, i8 noundef zeroext 10, i32 noundef 655360) #25, !dbg !3153
  ret i32 %8, !dbg !3154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !3155 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_19, metadata !3157, metadata !DIExpression()), !dbg !3158
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_19) #25, !dbg !3159
  ret i1 %1, !dbg !3160
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3163, metadata !DIExpression()), !dbg !3164
  ret i32 0, !dbg !3165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #3 !dbg !3166 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3170, metadata !DIExpression()), !dbg !3171
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3172
  ret void, !dbg !3173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !3174 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3177
  ret i8* %1, !dbg !3178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3179 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i8* %0, metadata !3190, metadata !DIExpression()), !dbg !3202
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !3203
  ret void, !dbg !3205
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3210, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.value(metadata i8* %1, metadata !3211, metadata !DIExpression()), !dbg !3212
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3213
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3213
  ret i32 %4, !dbg !3214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3215 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3227, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3224, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i8* %1, metadata !3225, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i8* %2, metadata !3226, metadata !DIExpression()), !dbg !3228
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3229
  ret void, !dbg !3230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3231 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3235, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.value(metadata i32 %1, metadata !3236, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.value(metadata i32 0, metadata !3237, metadata !DIExpression()), !dbg !3238
  %3 = icmp eq i32 %1, 0, !dbg !3239
  br i1 %3, label %13, label %4, !dbg !3242

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3237, metadata !DIExpression()), !dbg !3238
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3243
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3245
  %8 = load i8, i8* %7, align 1, !dbg !3245
  %9 = zext i8 %8 to i32, !dbg !3245
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3243
  %11 = add nuw i32 %5, 1, !dbg !3246
  call void @llvm.dbg.value(metadata i32 %11, metadata !3237, metadata !DIExpression()), !dbg !3238
  %12 = icmp eq i32 %11, %1, !dbg !3239
  br i1 %12, label %13, label %4, !dbg !3242, !llvm.loop !3247

13:                                               ; preds = %4, %2
  ret void, !dbg !3249
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3250 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3254, metadata !DIExpression()), !dbg !3256
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3257
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3257
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3255, metadata !DIExpression()), !dbg !3258
  call void @llvm.va_start(i8* nonnull %3), !dbg !3259
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3260
  %5 = load i32, i32* %4, align 4, !dbg !3260
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3260
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !3260
  call void @llvm.va_end(i8* nonnull %3), !dbg !3261
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3262
  ret void, !dbg !3262
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3263 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3267, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.value(metadata i32 %1, metadata !3268, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.value(metadata i8* %2, metadata !3269, metadata !DIExpression()), !dbg !3272
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3273
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3273
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3270, metadata !DIExpression()), !dbg !3274
  call void @llvm.va_start(i8* nonnull %5), !dbg !3275
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3276
  %7 = load i32, i32* %6, align 4, !dbg !3276
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3276
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !3276
  call void @llvm.dbg.value(metadata i32 %9, metadata !3271, metadata !DIExpression()), !dbg !3272
  call void @llvm.va_end(i8* nonnull %5), !dbg !3277
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3278
  ret i32 %9, !dbg !3279
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3280 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3287, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i8* %0, metadata !3284, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i32 %1, metadata !3285, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.value(metadata i8* %2, metadata !3286, metadata !DIExpression()), !dbg !3294
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3295
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3295
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3288, metadata !DIExpression()), !dbg !3296
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3297
  store i8* %0, i8** %7, align 4, !dbg !3297
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3297
  store i32 %1, i32* %8, align 4, !dbg !3297
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3297
  store i32 0, i32* %9, align 4, !dbg !3297
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !3298
  %10 = load i32, i32* %9, align 4, !dbg !3299
  %11 = load i32, i32* %8, align 4, !dbg !3301
  %12 = icmp slt i32 %10, %11, !dbg !3302
  br i1 %12, label %13, label %15, !dbg !3303

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3304
  store i8 0, i8* %14, align 1, !dbg !3306
  br label %15, !dbg !3307

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3308
  ret i32 %10, !dbg !3309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3310 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3315, metadata !DIExpression()), !dbg !3317
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3316, metadata !DIExpression()), !dbg !3317
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3318
  %4 = load i8*, i8** %3, align 4, !dbg !3318
  %5 = icmp eq i8* %4, null, !dbg !3320
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3321
  br i1 %5, label %12, label %8, !dbg !3322

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3323
  %10 = load i32, i32* %9, align 4, !dbg !3323
  %11 = icmp slt i32 %7, %10, !dbg !3324
  br i1 %11, label %15, label %12, !dbg !3325

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3326
  %14 = add nsw i32 %7, 1, !dbg !3328
  store i32 %14, i32* %13, align 4, !dbg !3328
  br label %25, !dbg !3329

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3330
  %17 = icmp eq i32 %7, %16, !dbg !3332
  br i1 %17, label %18, label %21, !dbg !3333

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3334
  store i32 %19, i32* %6, align 4, !dbg !3334
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3336
  store i8 0, i8* %20, align 1, !dbg !3337
  br label %25, !dbg !3338

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3339
  %23 = add nsw i32 %7, 1, !dbg !3341
  store i32 %23, i32* %6, align 4, !dbg !3341
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3342
  store i8 %22, i8* %24, align 1, !dbg !3343
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3344
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3345 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3355, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.value(metadata i8* %1, metadata !3356, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.value(metadata i8* %2, metadata !3357, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.value(metadata i8* %3, metadata !3358, metadata !DIExpression()), !dbg !3359
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3360
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3361
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !3362
  unreachable, !dbg !3363
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3364 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3468
  ret %struct.k_thread* %1, !dbg !3469
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3474, metadata !DIExpression()), !dbg !3475
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3476, !srcloc !3478
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3479
  ret void, !dbg !3480
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3481 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3482, !srcloc !3484
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3485
  ret %struct.k_thread* %1, !dbg !3486
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3487 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3500, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3497, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i8* %1, metadata !3498, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i8* %2, metadata !3499, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %4, metadata !3501, metadata !DIExpression()), !dbg !3628
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !3629
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3629
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !3502, metadata !DIExpression()), !dbg !3630
  call void @llvm.dbg.value(metadata i32 0, metadata !3506, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i1 undef, metadata !3508, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3628
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !3631

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !3631

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !3632
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !3500, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i8* %30, metadata !3499, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %29, metadata !3506, metadata !DIExpression()), !dbg !3628
  %31 = load i8, i8* %30, align 1, !dbg !3633
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !3631

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !3633
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !3634
  call void @llvm.dbg.value(metadata i8* %34, metadata !3499, metadata !DIExpression()), !dbg !3628
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !3634
  call void @llvm.dbg.value(metadata i32 %35, metadata !3510, metadata !DIExpression()), !dbg !3635
  %36 = icmp slt i32 %35, 0, !dbg !3636
  %37 = add i32 %29, 1, !dbg !3634
  call void @llvm.dbg.value(metadata i32 undef, metadata !3506, metadata !DIExpression()), !dbg !3628
  br i1 %36, label %365, label %28, !llvm.loop !3638

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3640
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3515, metadata !DIExpression()), !dbg !3641
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !3641
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !3560, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3563, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8* %30, metadata !3566, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i32 -1, metadata !3567, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i32 -1, metadata !3568, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8* null, metadata !3569, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8* %14, metadata !3570, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8 0, metadata !3571, metadata !DIExpression()), !dbg !3642
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !3643
  call void @llvm.dbg.value(metadata i8* %39, metadata !3499, metadata !DIExpression()), !dbg !3628
  %40 = load i24, i24* %15, align 8, !dbg !3644
  %41 = and i24 %40, 256, !dbg !3644
  %42 = icmp eq i24 %41, 0, !dbg !3644
  br i1 %42, label %51, label %43, !dbg !3646

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !3647
  call void @llvm.dbg.value(metadata i8* %44, metadata !3500, metadata !DIExpression()), !dbg !3628
  %45 = bitcast i8* %27 to i32*, !dbg !3647
  %46 = load i32, i32* %45, align 4, !dbg !3647
  call void @llvm.dbg.value(metadata i32 %46, metadata !3567, metadata !DIExpression()), !dbg !3642
  %47 = icmp slt i32 %46, 0, !dbg !3649
  br i1 %47, label %48, label %56, !dbg !3651

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !3652
  store i24 %49, i24* %15, align 8, !dbg !3652
  %50 = sub nsw i32 0, %46, !dbg !3654
  call void @llvm.dbg.value(metadata i32 %50, metadata !3567, metadata !DIExpression()), !dbg !3642
  br label %56, !dbg !3655

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !3656
  %53 = icmp eq i24 %52, 0, !dbg !3656
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !3658
  br label %56, !dbg !3658

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !3659
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !3642
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3500, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %58, metadata !3567, metadata !DIExpression()), !dbg !3642
  %60 = and i24 %57, 1024, !dbg !3659
  %61 = icmp eq i24 %60, 0, !dbg !3659
  br i1 %61, label %69, label %62, !dbg !3660

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !3661
  call void @llvm.dbg.value(metadata i8* %63, metadata !3500, metadata !DIExpression()), !dbg !3628
  %64 = bitcast i8* %59 to i32*, !dbg !3661
  %65 = load i32, i32* %64, align 4, !dbg !3661
  call void @llvm.dbg.value(metadata i32 %65, metadata !3572, metadata !DIExpression()), !dbg !3662
  %66 = icmp slt i32 %65, 0, !dbg !3663
  br i1 %66, label %67, label %74, !dbg !3665

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !3666
  store i24 %68, i24* %15, align 8, !dbg !3666
  br label %74, !dbg !3668

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !3669
  %71 = icmp eq i24 %70, 0, !dbg !3669
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !3671
  br label %74, !dbg !3671

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !3672
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !3642
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !3642
  call void @llvm.dbg.value(metadata i8* %77, metadata !3500, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %76, metadata !3568, metadata !DIExpression()), !dbg !3642
  store i32 0, i32* %16, align 4, !dbg !3673
  store i32 0, i32* %17, align 8, !dbg !3674
  %78 = lshr i24 %75, 16, !dbg !3672
  call void @llvm.dbg.value(metadata i24 %78, metadata !3575, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3642
  %79 = lshr i24 %75, 11, !dbg !3675
  %80 = and i24 %79, 15, !dbg !3675
  %81 = zext i24 %80 to i32, !dbg !3675
  call void @llvm.dbg.value(metadata i32 %81, metadata !3576, metadata !DIExpression()), !dbg !3642
  %82 = trunc i24 %78 to i3, !dbg !3676
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !3676

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !3677

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3680
  call void @llvm.dbg.value(metadata i8* %85, metadata !3500, metadata !DIExpression()), !dbg !3628
  %86 = bitcast i8* %77 to i32*, !dbg !3680
  %87 = load i32, i32* %86, align 4, !dbg !3680
  %88 = sext i32 %87 to i64, !dbg !3680
  store i64 %88, i64* %20, align 8, !dbg !3682
  br label %115, !dbg !3683

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3684
  call void @llvm.dbg.value(metadata i8* %90, metadata !3500, metadata !DIExpression()), !dbg !3628
  %91 = bitcast i8* %77 to i32*, !dbg !3684
  %92 = load i32, i32* %91, align 4, !dbg !3684
  %93 = sext i32 %92 to i64, !dbg !3684
  store i64 %93, i64* %20, align 8, !dbg !3687
  br label %115, !dbg !3688

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !3689
  %96 = add i32 %95, 7, !dbg !3689
  %97 = and i32 %96, -8, !dbg !3689
  %98 = inttoptr i32 %97 to i8*, !dbg !3689
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3689
  call void @llvm.dbg.value(metadata i8* %99, metadata !3500, metadata !DIExpression()), !dbg !3628
  %100 = inttoptr i32 %97 to i64*, !dbg !3689
  %101 = load i64, i64* %100, align 8, !dbg !3689
  store i64 %101, i64* %20, align 8, !dbg !3690
  br label %115, !dbg !3691

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !3692
  %104 = add i32 %103, 7, !dbg !3692
  %105 = and i32 %104, -8, !dbg !3692
  %106 = inttoptr i32 %105 to i8*, !dbg !3692
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !3692
  call void @llvm.dbg.value(metadata i8* %107, metadata !3500, metadata !DIExpression()), !dbg !3628
  %108 = inttoptr i32 %105 to i64*, !dbg !3692
  %109 = load i64, i64* %108, align 8, !dbg !3692
  store i64 %109, i64* %20, align 8, !dbg !3693
  br label %115, !dbg !3694

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3695
  call void @llvm.dbg.value(metadata i8* %111, metadata !3500, metadata !DIExpression()), !dbg !3628
  %112 = bitcast i8* %77 to i32*, !dbg !3695
  %113 = load i32, i32* %112, align 4, !dbg !3695
  %114 = sext i32 %113 to i64, !dbg !3696
  store i64 %114, i64* %20, align 8, !dbg !3697
  br label %115, !dbg !3698

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !3699
  call void @llvm.dbg.value(metadata i8* %117, metadata !3500, metadata !DIExpression()), !dbg !3628
  %118 = trunc i24 %79 to i4, !dbg !3700
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !3700

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !3701
  %121 = ashr exact i64 %120, 56, !dbg !3701
  store i64 %121, i64* %20, align 8, !dbg !3704
  br label %177, !dbg !3705

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !3706
  %124 = ashr exact i64 %123, 48, !dbg !3706
  store i64 %124, i64* %20, align 8, !dbg !3709
  br label %177, !dbg !3710

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !3711

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3714
  call void @llvm.dbg.value(metadata i8* %127, metadata !3500, metadata !DIExpression()), !dbg !3628
  %128 = bitcast i8* %77 to i32*, !dbg !3714
  %129 = load i32, i32* %128, align 4, !dbg !3714
  %130 = zext i32 %129 to i64, !dbg !3714
  store i64 %130, i64* %20, align 8, !dbg !3716
  br label %157, !dbg !3717

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3718
  call void @llvm.dbg.value(metadata i8* %132, metadata !3500, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i8* %132, metadata !3500, metadata !DIExpression()), !dbg !3628
  %133 = bitcast i8* %77 to i32*, !dbg !3718
  %134 = load i32, i32* %133, align 4, !dbg !3718
  %135 = zext i32 %134 to i64, !dbg !3718
  store i64 %135, i64* %20, align 8, !dbg !3718
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !3720
  %138 = add i32 %137, 7, !dbg !3720
  %139 = and i32 %138, -8, !dbg !3720
  %140 = inttoptr i32 %139 to i8*, !dbg !3720
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !3720
  call void @llvm.dbg.value(metadata i8* %141, metadata !3500, metadata !DIExpression()), !dbg !3628
  %142 = inttoptr i32 %139 to i64*, !dbg !3720
  %143 = load i64, i64* %142, align 8, !dbg !3720
  store i64 %143, i64* %20, align 8, !dbg !3721
  br label %157, !dbg !3722

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !3723
  %146 = add i32 %145, 7, !dbg !3723
  %147 = and i32 %146, -8, !dbg !3723
  %148 = inttoptr i32 %147 to i8*, !dbg !3723
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !3723
  call void @llvm.dbg.value(metadata i8* %149, metadata !3500, metadata !DIExpression()), !dbg !3628
  %150 = inttoptr i32 %147 to i64*, !dbg !3723
  %151 = load i64, i64* %150, align 8, !dbg !3723
  store i64 %151, i64* %20, align 8, !dbg !3724
  br label %157, !dbg !3725

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3726
  call void @llvm.dbg.value(metadata i8* %153, metadata !3500, metadata !DIExpression()), !dbg !3628
  %154 = bitcast i8* %77 to i32*, !dbg !3726
  %155 = load i32, i32* %154, align 4, !dbg !3726
  %156 = zext i32 %155 to i64, !dbg !3727
  store i64 %156, i64* %20, align 8, !dbg !3728
  br label %157, !dbg !3729

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !3730
  call void @llvm.dbg.value(metadata i8* %159, metadata !3500, metadata !DIExpression()), !dbg !3628
  %160 = trunc i24 %79 to i4, !dbg !3731
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !3731

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !3732
  store i64 %162, i64* %20, align 8, !dbg !3735
  br label %177, !dbg !3736

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !3737
  store i64 %164, i64* %20, align 8, !dbg !3740
  br label %177, !dbg !3741

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !3742
  %167 = add i32 %166, 7, !dbg !3742
  %168 = and i32 %167, -8, !dbg !3742
  %169 = inttoptr i32 %168 to i8*, !dbg !3742
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !3742
  call void @llvm.dbg.value(metadata i8* %170, metadata !3500, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i8* %170, metadata !3500, metadata !DIExpression()), !dbg !3628
  %171 = inttoptr i32 %168 to double*, !dbg !3742
  %172 = load double, double* %171, align 8, !dbg !3742
  store double %172, double* %19, align 8, !dbg !3742
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3746
  call void @llvm.dbg.value(metadata i8* %174, metadata !3500, metadata !DIExpression()), !dbg !3628
  %175 = bitcast i8* %77 to i8**, !dbg !3746
  %176 = load i8*, i8** %175, align 4, !dbg !3746
  store i8* %176, i8** %18, align 8, !dbg !3749
  br label %177, !dbg !3750

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !3642
  call void @llvm.dbg.value(metadata i8* %178, metadata !3500, metadata !DIExpression()), !dbg !3628
  %179 = and i24 %75, 3, !dbg !3751
  %180 = icmp eq i24 %179, 0, !dbg !3751
  br i1 %180, label %185, label %181, !dbg !3751

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !3752
  call void @llvm.dbg.value(metadata i32 %182, metadata !3577, metadata !DIExpression()), !dbg !3753
  %183 = icmp slt i32 %182, 0, !dbg !3754
  %184 = add i32 %182, %29, !dbg !3752
  call void @llvm.dbg.value(metadata i32 undef, metadata !3506, metadata !DIExpression()), !dbg !3628
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !3756
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !3757

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !3758
  call void @llvm.dbg.value(metadata i32 %188, metadata !3581, metadata !DIExpression()), !dbg !3759
  %189 = icmp slt i32 %188, 0, !dbg !3760
  %190 = add i32 %29, 1, !dbg !3758
  call void @llvm.dbg.value(metadata i32 undef, metadata !3506, metadata !DIExpression()), !dbg !3628
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !3762
  call void @llvm.dbg.value(metadata i8* %192, metadata !3569, metadata !DIExpression()), !dbg !3642
  %193 = icmp sgt i32 %76, -1, !dbg !3763
  br i1 %193, label %194, label %196, !dbg !3765

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !3766
  call void @llvm.dbg.value(metadata i32 %195, metadata !3584, metadata !DIExpression()), !dbg !3768
  br label %241, !dbg !3769

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !3770
  call void @llvm.dbg.value(metadata i32 %197, metadata !3584, metadata !DIExpression()), !dbg !3768
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !3569, metadata !DIExpression()), !dbg !3642
  %199 = load i64, i64* %20, align 8, !dbg !3772
  %200 = trunc i64 %199 to i8, !dbg !3773
  store i8 %200, i8* %10, align 1, !dbg !3774
  call void @llvm.dbg.value(metadata i8* %23, metadata !3570, metadata !DIExpression()), !dbg !3642
  br label %245, !dbg !3775

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !3776
  %203 = icmp eq i24 %202, 0, !dbg !3776
  %204 = trunc i24 %75 to i8, !dbg !3778
  %205 = shl i8 %204, 1, !dbg !3778
  %206 = and i8 %205, 32, !dbg !3778
  %207 = select i1 %203, i8 %206, i8 43, !dbg !3778
  call void @llvm.dbg.value(metadata i8 %207, metadata !3571, metadata !DIExpression()), !dbg !3642
  %208 = load i64, i64* %20, align 8, !dbg !3779
  call void @llvm.dbg.value(metadata i64 %208, metadata !3507, metadata !DIExpression()), !dbg !3628
  %209 = icmp slt i64 %208, 0, !dbg !3780
  br i1 %209, label %210, label %212, !dbg !3782

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !3571, metadata !DIExpression()), !dbg !3642
  %211 = sub nsw i64 0, %208, !dbg !3783
  store i64 %211, i64* %20, align 8, !dbg !3785
  br label %212, !dbg !3786

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !3642
  call void @llvm.dbg.value(metadata i8 %213, metadata !3571, metadata !DIExpression()), !dbg !3642
  %214 = load i64, i64* %20, align 8, !dbg !3787
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !3788
  call void @llvm.dbg.value(metadata i8* %215, metadata !3569, metadata !DIExpression()), !dbg !3642
  br label %216, !dbg !3789

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !3790
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !3791
  call void @llvm.dbg.value(metadata i8* %218, metadata !3569, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8 %217, metadata !3571, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.label(metadata !3627), !dbg !3792
  %219 = icmp sgt i32 %76, -1, !dbg !3793
  br i1 %219, label %222, label %220, !dbg !3794

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !3795
  br label %245, !dbg !3794

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !3797
  %224 = sub i32 %22, %223, !dbg !3797
  call void @llvm.dbg.value(metadata i32 %224, metadata !3586, metadata !DIExpression()), !dbg !3798
  %225 = load i24, i24* %15, align 8, !dbg !3799
  %226 = and i24 %225, -65, !dbg !3799
  store i24 %226, i24* %15, align 8, !dbg !3799
  %227 = icmp ugt i32 %76, %224, !dbg !3800
  br i1 %227, label %228, label %245, !dbg !3802

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !3803
  store i32 %229, i32* %16, align 4, !dbg !3805
  br label %245, !dbg !3806

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !3807
  %232 = icmp eq i8* %231, null, !dbg !3809
  br i1 %232, label %245, label %233, !dbg !3810

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !3811
  %235 = zext i32 %234 to i64, !dbg !3811
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !3813
  call void @llvm.dbg.value(metadata i8* %236, metadata !3569, metadata !DIExpression()), !dbg !3642
  %237 = load i24, i24* %15, align 8, !dbg !3814
  %238 = or i24 %237, 1048576, !dbg !3814
  store i24 %238, i24* %15, align 8, !dbg !3814
  store i8 120, i8* %21, align 1, !dbg !3815
  br label %216, !dbg !3816

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !3817
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !3820
  br label %363, !dbg !3821

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !3822
  call void @llvm.dbg.value(metadata i32 %242, metadata !3584, metadata !DIExpression()), !dbg !3768
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !3823
  call void @llvm.dbg.value(metadata i32 -1, metadata !3568, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i32 %29, metadata !3506, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i8* %192, metadata !3569, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8* %243, metadata !3570, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8 0, metadata !3571, metadata !DIExpression()), !dbg !3642
  %244 = icmp eq i8* %192, null, !dbg !3824
  br i1 %244, label %363, label %245, !dbg !3826, !llvm.loop !3638

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !3795
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !3589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3642
  call void @llvm.dbg.value(metadata i32 0, metadata !3590, metadata !DIExpression()), !dbg !3642
  %250 = zext i8 %249 to i32, !dbg !3827
  %251 = icmp eq i8 %249, 0, !dbg !3829
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !3589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  call void @llvm.dbg.value(metadata i32 undef, metadata !3589, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  call void @llvm.dbg.value(metadata i32 undef, metadata !3589, metadata !DIExpression()), !dbg !3642
  %252 = icmp sgt i32 %58, 0, !dbg !3830
  br i1 %252, label %253, label %302, !dbg !3831

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !3795
  %255 = icmp eq i24 %254, 0, !dbg !3795
  %256 = ptrtoint i8* %248 to i32, !dbg !3832
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !3589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %257 = ptrtoint i8* %247 to i32, !dbg !3832
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !3589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !3589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %258 = xor i1 %251, true, !dbg !3833
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %259 = sext i1 %258 to i32, !dbg !3833
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !3589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %260 = lshr i24 %246, 19, !dbg !3834
  %261 = and i24 %260, 1, !dbg !3834
  %262 = select i1 %255, i24 %261, i24 2, !dbg !3834
  %263 = zext i24 %262 to i32, !dbg !3834
  %264 = add i32 %257, %259, !dbg !3834
  %265 = add i32 %256, %263, !dbg !3834
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !3589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  %266 = and i24 %246, 4194304, !dbg !3835
  %267 = icmp eq i24 %266, 0, !dbg !3835
  %268 = load i32, i32* %16, align 4, !dbg !3837
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !3589, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3642
  call void @llvm.dbg.value(metadata i32 undef, metadata !3589, metadata !DIExpression()), !dbg !3642
  %269 = load i32, i32* %17, align 8, !dbg !3838
  %270 = select i1 %267, i32 0, i32 %269, !dbg !3838
  call void @llvm.dbg.value(metadata i32 undef, metadata !3589, metadata !DIExpression()), !dbg !3642
  %271 = add i32 %264, %58, !dbg !3838
  %272 = add i32 %265, %268, !dbg !3838
  %273 = add i32 %272, %270, !dbg !3839
  %274 = sub i32 %271, %273, !dbg !3839
  call void @llvm.dbg.value(metadata i32 %274, metadata !3567, metadata !DIExpression()), !dbg !3642
  %275 = and i24 %246, 4, !dbg !3840
  %276 = icmp eq i24 %275, 0, !dbg !3840
  br i1 %276, label %277, label %302, !dbg !3841

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !3591, metadata !DIExpression()), !dbg !3842
  %278 = and i24 %246, 64, !dbg !3843
  %279 = icmp eq i24 %278, 0, !dbg !3843
  %280 = select i1 %279, i1 true, i1 %251, !dbg !3844
  %281 = select i1 %279, i8 %249, i8 0, !dbg !3844
  %282 = select i1 %279, i32 32, i32 48, !dbg !3844
  br i1 %280, label %287, label %283, !dbg !3844

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !3845
  call void @llvm.dbg.value(metadata i32 %284, metadata !3596, metadata !DIExpression()), !dbg !3846
  %285 = icmp slt i32 %284, 0, !dbg !3847
  %286 = add i32 %29, 1, !dbg !3845
  call void @llvm.dbg.value(metadata i32 undef, metadata !3506, metadata !DIExpression()), !dbg !3628
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !3642
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !3632
  call void @llvm.dbg.value(metadata i32 %290, metadata !3506, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i8 undef, metadata !3591, metadata !DIExpression()), !dbg !3842
  call void @llvm.dbg.value(metadata i8 %288, metadata !3571, metadata !DIExpression()), !dbg !3642
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !3849
  %292 = add i32 %291, -1, !dbg !3849
  br label %293, !dbg !3849

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !3850
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !3632
  call void @llvm.dbg.value(metadata i32 %295, metadata !3506, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %294, metadata !3567, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i32 %294, metadata !3567, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3642
  %296 = icmp sgt i32 %294, 0, !dbg !3851
  br i1 %296, label %297, label %302, !dbg !3849

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !3852
  call void @llvm.dbg.value(metadata i32 %298, metadata !3567, metadata !DIExpression()), !dbg !3642
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !3853
  call void @llvm.dbg.value(metadata i32 %299, metadata !3602, metadata !DIExpression()), !dbg !3854
  %300 = icmp slt i32 %299, 0, !dbg !3855
  %301 = add i32 %295, 1, !dbg !3853
  call void @llvm.dbg.value(metadata i32 undef, metadata !3506, metadata !DIExpression()), !dbg !3628
  br i1 %300, label %361, label %293, !llvm.loop !3857

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !3642
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !3642
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !3632
  call void @llvm.dbg.value(metadata i32 %305, metadata !3506, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %304, metadata !3567, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i8 %303, metadata !3571, metadata !DIExpression()), !dbg !3642
  %306 = icmp eq i8 %303, 0, !dbg !3859
  br i1 %306, label %312, label %307, !dbg !3860

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !3861
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !3862
  call void @llvm.dbg.value(metadata i32 %309, metadata !3605, metadata !DIExpression()), !dbg !3863
  %310 = icmp slt i32 %309, 0, !dbg !3864
  %311 = add i32 %305, 1, !dbg !3862
  call void @llvm.dbg.value(metadata i32 undef, metadata !3506, metadata !DIExpression()), !dbg !3628
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !3632
  call void @llvm.dbg.value(metadata i32 %313, metadata !3506, metadata !DIExpression()), !dbg !3628
  %314 = lshr i24 %246, 20, !dbg !3866
  %315 = lshr i24 %246, 19, !dbg !3867
  %316 = or i24 %314, %315, !dbg !3868
  %317 = and i24 %316, 1, !dbg !3868
  %318 = icmp eq i24 %317, 0, !dbg !3868
  br i1 %318, label %323, label %319, !dbg !3869

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !3870
  call void @llvm.dbg.value(metadata i32 %320, metadata !3609, metadata !DIExpression()), !dbg !3871
  %321 = icmp slt i32 %320, 0, !dbg !3872
  %322 = add i32 %313, 1, !dbg !3870
  call void @llvm.dbg.value(metadata i32 undef, metadata !3506, metadata !DIExpression()), !dbg !3628
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !3632
  call void @llvm.dbg.value(metadata i32 %324, metadata !3506, metadata !DIExpression()), !dbg !3628
  %325 = and i24 %246, 1048576, !dbg !3874
  %326 = icmp eq i24 %325, 0, !dbg !3874
  br i1 %326, label %333, label %327, !dbg !3875

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !3876
  %329 = zext i8 %328 to i32, !dbg !3876
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !3876
  call void @llvm.dbg.value(metadata i32 %330, metadata !3615, metadata !DIExpression()), !dbg !3877
  %331 = icmp slt i32 %330, 0, !dbg !3878
  %332 = add i32 %324, 1, !dbg !3876
  call void @llvm.dbg.value(metadata i32 undef, metadata !3506, metadata !DIExpression()), !dbg !3628
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !3632
  call void @llvm.dbg.value(metadata i32 %334, metadata !3506, metadata !DIExpression()), !dbg !3628
  %335 = load i32, i32* %16, align 4, !dbg !3880
  call void @llvm.dbg.value(metadata i32 %335, metadata !3590, metadata !DIExpression()), !dbg !3642
  br label %336, !dbg !3881

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !3882
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !3632
  call void @llvm.dbg.value(metadata i32 %338, metadata !3506, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %337, metadata !3590, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3642
  %339 = icmp sgt i32 %337, 0, !dbg !3883
  br i1 %339, label %340, label %345, !dbg !3881

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !3884
  call void @llvm.dbg.value(metadata i32 %341, metadata !3590, metadata !DIExpression()), !dbg !3642
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !3885
  call void @llvm.dbg.value(metadata i32 %342, metadata !3619, metadata !DIExpression()), !dbg !3886
  %343 = icmp slt i32 %342, 0, !dbg !3887
  %344 = add i32 %338, 1, !dbg !3885
  call void @llvm.dbg.value(metadata i32 undef, metadata !3506, metadata !DIExpression()), !dbg !3628
  br i1 %343, label %361, label %336, !llvm.loop !3889

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !3891
  call void @llvm.dbg.value(metadata i32 %346, metadata !3622, metadata !DIExpression()), !dbg !3892
  %347 = icmp slt i32 %346, 0, !dbg !3893
  call void @llvm.dbg.value(metadata i32 undef, metadata !3506, metadata !DIExpression()), !dbg !3628
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !3891
  call void @llvm.dbg.value(metadata i32 %349, metadata !3506, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %304, metadata !3567, metadata !DIExpression()), !dbg !3642
  %350 = icmp sgt i32 %304, 0, !dbg !3895
  br i1 %350, label %351, label %363, !dbg !3896

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !3896
  %353 = add i32 %352, %338, !dbg !3896
  br label %354, !dbg !3896

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3506, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %355, metadata !3567, metadata !DIExpression()), !dbg !3642
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !3897
  call void @llvm.dbg.value(metadata i32 %356, metadata !3624, metadata !DIExpression()), !dbg !3898
  %357 = icmp slt i32 %356, 0, !dbg !3899
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !3901
  call void @llvm.dbg.value(metadata i32 undef, metadata !3506, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3628
  call void @llvm.dbg.value(metadata i32 %359, metadata !3567, metadata !DIExpression()), !dbg !3642
  %360 = icmp sgt i32 %355, 1, !dbg !3895
  br i1 %360, label %354, label %363, !dbg !3896, !llvm.loop !3902

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !3506, metadata !DIExpression()), !dbg !3628
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3639
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !3632
  call void @llvm.dbg.value(metadata i32 %364, metadata !3506, metadata !DIExpression()), !dbg !3628
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3639
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !3628
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3904
  ret i32 %366, !dbg !3904
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3905 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3909, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i8* %1, metadata !3910, metadata !DIExpression()), !dbg !3911
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !3912
  store i24 0, i24* %3, align 4, !dbg !3912
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3912
  store i8 0, i8* %4, align 1, !dbg !3912
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3912
  store i32 0, i32* %5, align 4, !dbg !3912
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3912
  store i32 0, i32* %6, align 4, !dbg !3912
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3913
  call void @llvm.dbg.value(metadata i8* %7, metadata !3910, metadata !DIExpression()), !dbg !3911
  %8 = load i8, i8* %7, align 1, !dbg !3914
  %9 = icmp eq i8 %8, 37, !dbg !3916
  br i1 %9, label %10, label %12, !dbg !3917

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3918
  call void @llvm.dbg.value(metadata i8* %11, metadata !3910, metadata !DIExpression()), !dbg !3911
  store i8 37, i8* %4, align 1, !dbg !3920
  br label %18, !dbg !3921

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !3922
  call void @llvm.dbg.value(metadata i8* %13, metadata !3910, metadata !DIExpression()), !dbg !3911
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !3923
  call void @llvm.dbg.value(metadata i8* %14, metadata !3910, metadata !DIExpression()), !dbg !3911
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !3924
  call void @llvm.dbg.value(metadata i8* %15, metadata !3910, metadata !DIExpression()), !dbg !3911
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !3925
  call void @llvm.dbg.value(metadata i8* %16, metadata !3910, metadata !DIExpression()), !dbg !3911
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !3926
  call void @llvm.dbg.value(metadata i8* %17, metadata !3910, metadata !DIExpression()), !dbg !3911
  br label %18, !dbg !3927

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !3911
  ret i8* %19, !dbg !3928
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !3929 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3933, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8* %1, metadata !3934, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8* %2, metadata !3935, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8* %3, metadata !3936, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 0, metadata !3937, metadata !DIExpression()), !dbg !3940
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !3941

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !3942
  call void @llvm.dbg.value(metadata i32 %9, metadata !3937, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8* %8, metadata !3935, metadata !DIExpression()), !dbg !3940
  %10 = icmp ult i8* %8, %3, !dbg !3943
  br i1 %10, label %11, label %13, !dbg !3944

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !3945
  br label %17, !dbg !3944

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !3946

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !3947
  %16 = icmp eq i8 %15, 0, !dbg !3946
  br i1 %16, label %24, label %17, !dbg !3941

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !3945
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3948
  call void @llvm.dbg.value(metadata i8* %19, metadata !3935, metadata !DIExpression()), !dbg !3940
  %20 = zext i8 %18 to i32, !dbg !3949
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !3950
  call void @llvm.dbg.value(metadata i32 %21, metadata !3938, metadata !DIExpression()), !dbg !3951
  %22 = icmp slt i32 %21, 0, !dbg !3952
  %23 = add i32 %9, 1, !dbg !3954
  call void @llvm.dbg.value(metadata i32 undef, metadata !3937, metadata !DIExpression()), !dbg !3940
  br i1 %22, label %24, label %7, !llvm.loop !3955

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !3940
  ret i32 %25, !dbg !3957
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #11 !dbg !3958 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3962, metadata !DIExpression()), !dbg !3972
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !3963, metadata !DIExpression()), !dbg !3972
  call void @llvm.dbg.value(metadata i8* %2, metadata !3964, metadata !DIExpression()), !dbg !3972
  call void @llvm.dbg.value(metadata i8* %3, metadata !3965, metadata !DIExpression()), !dbg !3972
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !3973
  %6 = load i8, i8* %5, align 1, !dbg !3973
  %7 = zext i8 %6 to i32, !dbg !3974
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !3975
  %9 = icmp eq i32 %8, 0, !dbg !3975
  call void @llvm.dbg.value(metadata i1 %9, metadata !3966, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3972
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !3976
  call void @llvm.dbg.value(metadata i32 %10, metadata !3967, metadata !DIExpression()), !dbg !3972
  %11 = ptrtoint i8* %3 to i32, !dbg !3977
  %12 = ptrtoint i8* %2 to i32, !dbg !3977
  %13 = sub i32 %11, %12, !dbg !3977
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !3978
  call void @llvm.dbg.value(metadata i8* %14, metadata !3969, metadata !DIExpression()), !dbg !3972
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !3979

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !3972
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !3962, metadata !DIExpression()), !dbg !3972
  call void @llvm.dbg.value(metadata i8* %18, metadata !3969, metadata !DIExpression()), !dbg !3972
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !3980
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !3981
  call void @llvm.dbg.value(metadata i32 %25, metadata !3970, metadata !DIExpression()), !dbg !3982
  %26 = icmp ult i32 %25, 10, !dbg !3983
  %27 = select i1 %26, i32 48, i32 %16, !dbg !3984
  %28 = add i32 %27, %25, !dbg !3982
  %29 = trunc i32 %28 to i8, !dbg !3984
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !3985
  call void @llvm.dbg.value(metadata i8* %30, metadata !3969, metadata !DIExpression()), !dbg !3972
  store i8 %29, i8* %30, align 1, !dbg !3986
  call void @llvm.dbg.value(metadata i64 %22, metadata !3962, metadata !DIExpression()), !dbg !3972
  %31 = icmp uge i64 %19, %15, !dbg !3987
  %32 = icmp ugt i8* %30, %2, !dbg !3988
  %33 = and i1 %31, %32, !dbg !3988
  br i1 %33, label %17, label %34, !dbg !3989, !llvm.loop !3990

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !3992
  %36 = load i24, i24* %35, align 4, !dbg !3992
  %37 = and i24 %36, 32, !dbg !3992
  %38 = icmp eq i24 %37, 0, !dbg !3992
  br i1 %38, label %44, label %39, !dbg !3994

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !3995

40:                                               ; preds = %39
  br label %41, !dbg !3997

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4001
  store i24 %43, i24* %35, align 4, !dbg !4001
  br label %44, !dbg !4002

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4002
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !4003 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4009, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i8* %1, metadata !4010, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.value(metadata i32 %2, metadata !4011, metadata !DIExpression()), !dbg !4012
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4013
  %5 = load i24, i24* %4, align 4, !dbg !4013
  %6 = lshr i24 %5, 11, !dbg !4013
  %7 = and i24 %6, 15, !dbg !4013
  %8 = zext i24 %7 to i32, !dbg !4013
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4014

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4015
  store i32 %2, i32* %10, align 4, !dbg !4017
  br label %28, !dbg !4018

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4019
  store i8 %12, i8* %1, align 1, !dbg !4020
  br label %28, !dbg !4021

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4022
  %15 = bitcast i8* %1 to i16*, !dbg !4023
  store i16 %14, i16* %15, align 2, !dbg !4024
  br label %28, !dbg !4025

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4026
  store i32 %2, i32* %17, align 4, !dbg !4027
  br label %28, !dbg !4028

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4029
  %20 = bitcast i8* %1 to i64*, !dbg !4030
  store i64 %19, i64* %20, align 8, !dbg !4031
  br label %28, !dbg !4032

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4033
  %23 = bitcast i8* %1 to i64*, !dbg !4034
  store i64 %22, i64* %23, align 8, !dbg !4035
  br label %28, !dbg !4036

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4037
  store i32 %2, i32* %25, align 4, !dbg !4038
  br label %28, !dbg !4039

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4040
  store i32 %2, i32* %27, align 4, !dbg !4041
  br label %28, !dbg !4042

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4043
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #12 !dbg !4044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4047, metadata !DIExpression()), !dbg !4048
  %2 = add i32 %0, -65, !dbg !4049
  %3 = icmp ult i32 %2, 26, !dbg !4050
  %4 = zext i1 %3 to i32, !dbg !4050
  ret i32 %4, !dbg !4051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #12 !dbg !4052 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4056, metadata !DIExpression()), !dbg !4057
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4058

2:                                                ; preds = %1
  br label %4, !dbg !4059

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4061

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4062
  ret i32 %5, !dbg !4063
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !4064 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4066, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.value(metadata i8* %1, metadata !4067, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.value(metadata i8 1, metadata !4068, metadata !DIExpression()), !dbg !4069
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4070

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4068, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.value(metadata i8* %5, metadata !4067, metadata !DIExpression()), !dbg !4069
  %6 = load i8, i8* %5, align 1, !dbg !4071
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4073

7:                                                ; preds = %4
  br label %11, !dbg !4074

8:                                                ; preds = %4
  br label %11, !dbg !4076

9:                                                ; preds = %4
  br label %11, !dbg !4077

10:                                               ; preds = %4
  br label %11, !dbg !4078

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4079
  %14 = or i24 %13, %12, !dbg !4079
  store i24 %14, i24* %3, align 4, !dbg !4079
  call void @llvm.dbg.value(metadata i8 poison, metadata !4068, metadata !DIExpression()), !dbg !4069
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4067, metadata !DIExpression()), !dbg !4069
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4068, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.value(metadata i8* %15, metadata !4067, metadata !DIExpression()), !dbg !4069
  %17 = load i24, i24* %3, align 4, !dbg !4080
  %18 = and i24 %17, 68, !dbg !4082
  %19 = icmp eq i24 %18, 68, !dbg !4082
  br i1 %19, label %20, label %22, !dbg !4082

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4083
  store i24 %21, i24* %3, align 4, !dbg !4083
  br label %22, !dbg !4085

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4086
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4087 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4089, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.value(metadata i8* %1, metadata !4090, metadata !DIExpression()), !dbg !4093
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4094
  %5 = load i24, i24* %4, align 4, !dbg !4095
  %6 = or i24 %5, 128, !dbg !4095
  store i24 %6, i24* %4, align 4, !dbg !4095
  call void @llvm.dbg.value(metadata i8* %1, metadata !4090, metadata !DIExpression()), !dbg !4093
  %7 = load i8, i8* %1, align 1, !dbg !4096
  %8 = icmp eq i8 %7, 42, !dbg !4098
  br i1 %8, label %9, label %12, !dbg !4099

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4100
  store i24 %10, i24* %4, align 4, !dbg !4100
  call void @llvm.dbg.value(metadata i8* %1, metadata !4090, metadata !DIExpression()), !dbg !4093
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4102
  call void @llvm.dbg.value(metadata i8* %11, metadata !4090, metadata !DIExpression()), !dbg !4093
  store i8* %11, i8** %3, align 4, !dbg !4102
  br label %29, !dbg !4103

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4091, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.value(metadata i8** %3, metadata !4090, metadata !DIExpression(DW_OP_deref)), !dbg !4093
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !4104
  call void @llvm.dbg.value(metadata i32 %13, metadata !4092, metadata !DIExpression()), !dbg !4093
  %14 = load i8*, i8** %3, align 4, !dbg !4105
  call void @llvm.dbg.value(metadata i8* %14, metadata !4090, metadata !DIExpression()), !dbg !4093
  %15 = icmp eq i8* %14, %1, !dbg !4107
  br i1 %15, label %29, label %16, !dbg !4108

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4109
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4111
  store i32 %13, i32* %18, align 4, !dbg !4112
  %19 = lshr i32 %13, 31, !dbg !4113
  %20 = lshr i24 %17, 1, !dbg !4114
  %21 = and i24 %20, 1, !dbg !4114
  %22 = zext i24 %21 to i32, !dbg !4114
  %23 = or i32 %19, %22, !dbg !4114
  %24 = trunc i32 %23 to i24, !dbg !4114
  %25 = shl nuw nsw i24 %24, 1, !dbg !4114
  %26 = and i24 %17, -131, !dbg !4114
  %27 = or i24 %26, 128, !dbg !4114
  %28 = or i24 %25, %27, !dbg !4114
  store i24 %28, i24* %4, align 4, !dbg !4114
  br label %29, !dbg !4115

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4093
  ret i8* %30, !dbg !4116
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4117 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4119, metadata !DIExpression()), !dbg !4122
  call void @llvm.dbg.value(metadata i8* %1, metadata !4120, metadata !DIExpression()), !dbg !4122
  %4 = load i8, i8* %1, align 1, !dbg !4123
  %5 = icmp eq i8 %4, 46, !dbg !4124
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4125
  %7 = load i24, i24* %6, align 4, !dbg !4126
  %8 = select i1 %5, i24 512, i24 0, !dbg !4126
  %9 = and i24 %7, -513, !dbg !4126
  %10 = or i24 %9, %8, !dbg !4126
  store i24 %10, i24* %6, align 4, !dbg !4126
  br i1 %5, label %11, label %32, !dbg !4127

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4120, metadata !DIExpression()), !dbg !4122
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4128
  call void @llvm.dbg.value(metadata i8* %12, metadata !4120, metadata !DIExpression()), !dbg !4122
  store i8* %12, i8** %3, align 4, !dbg !4128
  %13 = load i8, i8* %12, align 1, !dbg !4129
  %14 = icmp eq i8 %13, 42, !dbg !4131
  br i1 %14, label %15, label %18, !dbg !4132

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4133
  store i24 %16, i24* %6, align 4, !dbg !4133
  call void @llvm.dbg.value(metadata i8* %12, metadata !4120, metadata !DIExpression()), !dbg !4122
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4135
  call void @llvm.dbg.value(metadata i8* %17, metadata !4120, metadata !DIExpression()), !dbg !4122
  store i8* %17, i8** %3, align 4, !dbg !4135
  br label %32, !dbg !4136

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4120, metadata !DIExpression(DW_OP_deref)), !dbg !4122
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !4137
  call void @llvm.dbg.value(metadata i32 %19, metadata !4121, metadata !DIExpression()), !dbg !4122
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4138
  store i32 %19, i32* %20, align 4, !dbg !4139
  %21 = lshr i32 %19, 31, !dbg !4140
  %22 = load i24, i24* %6, align 4, !dbg !4141
  %23 = lshr i24 %22, 1, !dbg !4141
  %24 = and i24 %23, 1, !dbg !4141
  %25 = zext i24 %24 to i32, !dbg !4141
  %26 = or i32 %21, %25, !dbg !4141
  %27 = trunc i32 %26 to i24, !dbg !4141
  %28 = shl nuw nsw i24 %27, 1, !dbg !4141
  %29 = and i24 %22, -3, !dbg !4141
  %30 = or i24 %28, %29, !dbg !4141
  store i24 %30, i24* %6, align 4, !dbg !4141
  %31 = load i8*, i8** %3, align 4, !dbg !4142
  call void @llvm.dbg.value(metadata i8* %31, metadata !4120, metadata !DIExpression()), !dbg !4122
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4122
  ret i8* %33, !dbg !4143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4144 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4146, metadata !DIExpression()), !dbg !4148
  call void @llvm.dbg.value(metadata i8* %1, metadata !4147, metadata !DIExpression()), !dbg !4148
  %3 = load i8, i8* %1, align 1, !dbg !4149
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4150

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4151
  call void @llvm.dbg.value(metadata i8* %5, metadata !4147, metadata !DIExpression()), !dbg !4148
  %6 = load i8, i8* %5, align 1, !dbg !4154
  %7 = icmp eq i8 %6, 104, !dbg !4155
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4156
  %9 = load i24, i24* %8, align 4, !dbg !4156
  %10 = and i24 %9, -30721, !dbg !4156
  br i1 %7, label %11, label %14, !dbg !4157

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4158
  store i24 %12, i24* %8, align 4, !dbg !4158
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4160
  call void @llvm.dbg.value(metadata i8* %13, metadata !4147, metadata !DIExpression()), !dbg !4148
  br label %56, !dbg !4161

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4162
  store i24 %15, i24* %8, align 4, !dbg !4162
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4164
  call void @llvm.dbg.value(metadata i8* %17, metadata !4147, metadata !DIExpression()), !dbg !4148
  %18 = load i8, i8* %17, align 1, !dbg !4166
  %19 = icmp eq i8 %18, 108, !dbg !4167
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4168
  %21 = load i24, i24* %20, align 4, !dbg !4168
  %22 = and i24 %21, -30721, !dbg !4168
  br i1 %19, label %23, label %26, !dbg !4169

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4170
  store i24 %24, i24* %20, align 4, !dbg !4170
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4172
  call void @llvm.dbg.value(metadata i8* %25, metadata !4147, metadata !DIExpression()), !dbg !4148
  br label %56, !dbg !4173

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4174
  store i24 %27, i24* %20, align 4, !dbg !4174
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4176
  %30 = load i24, i24* %29, align 4, !dbg !4177
  %31 = and i24 %30, -30721, !dbg !4177
  %32 = or i24 %31, 10240, !dbg !4177
  store i24 %32, i24* %29, align 4, !dbg !4177
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4178
  call void @llvm.dbg.value(metadata i8* %33, metadata !4147, metadata !DIExpression()), !dbg !4148
  br label %56, !dbg !4179

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4180
  %36 = load i24, i24* %35, align 4, !dbg !4181
  %37 = and i24 %36, -30721, !dbg !4181
  %38 = or i24 %37, 12288, !dbg !4181
  store i24 %38, i24* %35, align 4, !dbg !4181
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4182
  call void @llvm.dbg.value(metadata i8* %39, metadata !4147, metadata !DIExpression()), !dbg !4148
  br label %56, !dbg !4183

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4184
  %42 = load i24, i24* %41, align 4, !dbg !4185
  %43 = and i24 %42, -30721, !dbg !4185
  %44 = or i24 %43, 14336, !dbg !4185
  store i24 %44, i24* %41, align 4, !dbg !4185
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4186
  call void @llvm.dbg.value(metadata i8* %45, metadata !4147, metadata !DIExpression()), !dbg !4148
  br label %56, !dbg !4187

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4188
  %48 = load i24, i24* %47, align 4, !dbg !4189
  %49 = and i24 %48, -30723, !dbg !4189
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4190
  call void @llvm.dbg.value(metadata i8* %50, metadata !4147, metadata !DIExpression()), !dbg !4148
  %51 = or i24 %49, 16386, !dbg !4191
  store i24 %51, i24* %47, align 4, !dbg !4191
  br label %56, !dbg !4192

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4193
  %54 = load i24, i24* %53, align 4, !dbg !4194
  %55 = and i24 %54, -30721, !dbg !4194
  store i24 %55, i24* %53, align 4, !dbg !4194
  br label %56, !dbg !4195

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4147, metadata !DIExpression()), !dbg !4148
  ret i8* %57, !dbg !4196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4197 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4199, metadata !DIExpression()), !dbg !4204
  call void @llvm.dbg.value(metadata i8* %1, metadata !4200, metadata !DIExpression()), !dbg !4204
  call void @llvm.dbg.value(metadata i8 0, metadata !4201, metadata !DIExpression()), !dbg !4204
  call void @llvm.dbg.value(metadata i8* %1, metadata !4200, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4204
  %3 = load i8, i8* %1, align 1, !dbg !4205
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4206
  store i8 %3, i8* %4, align 1, !dbg !4207
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4208

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4209

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4210
  %9 = load i24, i24* %8, align 4, !dbg !4210
  %10 = and i24 %9, -458753, !dbg !4210
  %11 = or i24 %10, %7, !dbg !4210
  call void @llvm.dbg.label(metadata !4202), !dbg !4211
  %12 = and i24 %9, 30720, !dbg !4212
  %13 = icmp eq i24 %12, 16384, !dbg !4212
  %14 = zext i1 %13 to i24, !dbg !4214
  %15 = or i24 %11, %14, !dbg !4214
  %16 = icmp eq i8 %3, 99, !dbg !4215
  br i1 %16, label %17, label %43, !dbg !4217

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4218
  %19 = icmp ne i24 %18, 0, !dbg !4218
  call void @llvm.dbg.value(metadata i1 %19, metadata !4201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4204
  br label %43, !dbg !4220

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4221
  %22 = load i24, i24* %21, align 4, !dbg !4222
  %23 = and i24 %22, -458753, !dbg !4222
  %24 = or i24 %23, 262144, !dbg !4222
  call void @llvm.dbg.value(metadata i8 1, metadata !4201, metadata !DIExpression()), !dbg !4204
  br label %43, !dbg !4223

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4226
  %27 = load i24, i24* %26, align 4, !dbg !4227
  %28 = and i24 %27, -458753, !dbg !4227
  %29 = or i24 %28, 196608, !dbg !4227
  %30 = and i24 %27, 30720, !dbg !4228
  %31 = icmp eq i24 %30, 16384, !dbg !4228
  br label %43, !dbg !4230

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4231
  %34 = load i24, i24* %33, align 4, !dbg !4232
  %35 = and i24 %34, -458753, !dbg !4232
  %36 = or i24 %35, 196608, !dbg !4232
  %37 = and i24 %34, 30720, !dbg !4233
  %38 = icmp ne i24 %37, 0, !dbg !4233
  br label %43, !dbg !4235

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4236
  %41 = load i24, i24* %40, align 4, !dbg !4237
  %42 = or i24 %41, 1, !dbg !4237
  br label %43, !dbg !4238

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4239
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4240
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4241
  call void @llvm.dbg.value(metadata i8* %48, metadata !4200, metadata !DIExpression()), !dbg !4204
  call void @llvm.dbg.value(metadata i8 poison, metadata !4201, metadata !DIExpression()), !dbg !4204
  %49 = lshr i24 %44, 1, !dbg !4239
  %50 = and i24 %49, 1, !dbg !4239
  %51 = zext i24 %50 to i32, !dbg !4239
  %52 = or i32 %51, %47, !dbg !4239
  %53 = trunc i32 %52 to i24, !dbg !4239
  %54 = shl nuw nsw i24 %53, 1, !dbg !4239
  %55 = and i24 %44, -3, !dbg !4239
  %56 = or i24 %54, %55, !dbg !4239
  store i24 %56, i24* %46, align 4, !dbg !4239
  ret i8* %48, !dbg !4242
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #11 !dbg !4243 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4248, metadata !DIExpression()), !dbg !4251
  %2 = load i8*, i8** %0, align 4, !dbg !4252
  call void @llvm.dbg.value(metadata i8* %2, metadata !4249, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i32 0, metadata !4250, metadata !DIExpression()), !dbg !4251
  %3 = load i8, i8* %2, align 1, !dbg !4253
  %4 = zext i8 %3 to i32, !dbg !4254
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !4255
  %6 = icmp eq i32 %5, 0, !dbg !4256
  br i1 %6, label %19, label %7, !dbg !4256

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4250, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.value(metadata i8* %10, metadata !4249, metadata !DIExpression()), !dbg !4251
  %11 = mul i32 %9, 10, !dbg !4257
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4259
  call void @llvm.dbg.value(metadata i8* %12, metadata !4249, metadata !DIExpression()), !dbg !4251
  %13 = add i32 %11, -48, !dbg !4260
  %14 = add i32 %13, %8, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %14, metadata !4250, metadata !DIExpression()), !dbg !4251
  %15 = load i8, i8* %12, align 1, !dbg !4253
  %16 = zext i8 %15 to i32, !dbg !4254
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !4255
  %18 = icmp eq i32 %17, 0, !dbg !4256
  br i1 %18, label %19, label %7, !dbg !4256, !llvm.loop !4262

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4251
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4251
  store i8* %20, i8** %0, align 4, !dbg !4264
  ret i32 %21, !dbg !4265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #12 !dbg !4266 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4268, metadata !DIExpression()), !dbg !4269
  %2 = add i32 %0, -48, !dbg !4270
  %3 = icmp ult i32 %2, 10, !dbg !4271
  %4 = zext i1 %3 to i32, !dbg !4271
  ret i32 %4, !dbg !4272
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4273 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4275, !srcloc !4276
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4277, !srcloc !4278
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4279, !srcloc !4280
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4281, !srcloc !4282
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4283, !srcloc !4284
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4285, !srcloc !4286
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4287, !srcloc !4288
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4289, !srcloc !4290
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4291, !srcloc !4292
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4293, !srcloc !4294
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4295, !srcloc !4296
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4297, !srcloc !4298
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4299, !srcloc !4300
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4301, !srcloc !4302
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4303, !srcloc !4304
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4305, !srcloc !4306
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4307, !srcloc !4308
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4309, !srcloc !4310
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4311, !srcloc !4312
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4313, !srcloc !4314
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4315, !srcloc !4316
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4317, !srcloc !4318
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4319, !srcloc !4320
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4321, !srcloc !4322
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4323, !srcloc !4324
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4325, !srcloc !4326
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !4327, !srcloc !4328
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4329, !srcloc !4330
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4331, !srcloc !4332
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !4333, !srcloc !4334
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4335, !srcloc !4336
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4337, !srcloc !4338
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4339, !srcloc !4340
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #23, !dbg !4341, !srcloc !4342
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !4343, !srcloc !4344
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !4345, !srcloc !4346
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !4347, !srcloc !4348
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4349, !srcloc !4350
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4351, !srcloc !4352
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4353, !srcloc !4354
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !4355, !srcloc !4356
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4357, !srcloc !4358
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !4359, !srcloc !4360
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4361, !srcloc !4362
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4363, !srcloc !4364
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !4365, !srcloc !4366
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4367, !srcloc !4368
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4369, !srcloc !4370
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4371, !srcloc !4372
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !4373, !srcloc !4374
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4375, !srcloc !4376
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4377, !srcloc !4378
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4379, !srcloc !4380
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4381, !srcloc !4382
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !4383, !srcloc !4384
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4385, !srcloc !4386
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4387, !srcloc !4388
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4389, !srcloc !4390
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4391, !srcloc !4392
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4393, !srcloc !4394
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4395, !srcloc !4396
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4397, !srcloc !4398
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4399, !srcloc !4400
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4401, !srcloc !4402
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4403, !srcloc !4404
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4405, !srcloc !4406
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4407, !srcloc !4408
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4409, !srcloc !4410
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4411, !srcloc !4412
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4413, !srcloc !4414
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4415, !srcloc !4416
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4417, !srcloc !4418
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4419, !srcloc !4420
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4421, !srcloc !4422
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4423, !srcloc !4424
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4425, !srcloc !4426
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4427, !srcloc !4428
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4429, !srcloc !4430
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4431, !srcloc !4432
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4433, !srcloc !4434
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4435, !srcloc !4436
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4437, !srcloc !4438
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4439, !srcloc !4440
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4441, !srcloc !4442
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4443, !srcloc !4444
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4445, !srcloc !4446
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4447, !srcloc !4448
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4449, !srcloc !4450
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #23, !dbg !4451, !srcloc !4452
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !4453, !srcloc !4454
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4455, !srcloc !4456
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4457, !srcloc !4458
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4459, !srcloc !4460
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4461, !srcloc !4462
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #23, !dbg !4463, !srcloc !4464
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4465, !srcloc !4466
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4467, !srcloc !4468
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4469, !srcloc !4470
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4471, !srcloc !4472
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4473, !srcloc !4474
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4475, !srcloc !4476
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4477, !srcloc !4478
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4479, !srcloc !4480
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4481, !srcloc !4482
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4483, !srcloc !4484
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4485, !srcloc !4486
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !4487, !srcloc !4488
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4489, !srcloc !4490
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4491, !srcloc !4492
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4493, !srcloc !4494
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4495, !srcloc !4496
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4497, !srcloc !4498
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4499, !srcloc !4500
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !4501, !srcloc !4502
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4503, !srcloc !4504
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4505, !srcloc !4506
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4507, !srcloc !4508
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4509, !srcloc !4510
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4511, !srcloc !4512
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4513, !srcloc !4514
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4515, !srcloc !4516
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4517, !srcloc !4518
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4519, !srcloc !4520
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4521, !srcloc !4522
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4523, !srcloc !4524
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4525, !srcloc !4526
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4527, !srcloc !4528
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4529, !srcloc !4530
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4531, !srcloc !4532
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4533, !srcloc !4534
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4535, !srcloc !4536
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4537, !srcloc !4538
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4539, !srcloc !4540
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4541, !srcloc !4542
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4543, !srcloc !4544
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4545, !srcloc !4546
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4547, !srcloc !4548
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4549, !srcloc !4550
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4551, !srcloc !4552
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4553, !srcloc !4554
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4555, !srcloc !4556
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4557, !srcloc !4558
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4559, !srcloc !4560
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4561, !srcloc !4562
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !4563, !srcloc !4564
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !4565, !srcloc !4566
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !4567, !srcloc !4568
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4569, !srcloc !4570
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !4571, !srcloc !4572
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !4573, !srcloc !4574
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !4575, !srcloc !4576
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !4577, !srcloc !4578
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !4579, !srcloc !4580
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !4581, !srcloc !4582
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !4583, !srcloc !4584
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !4585, !srcloc !4586
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !4587, !srcloc !4588
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !4589, !srcloc !4590
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !4591, !srcloc !4592
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !4593, !srcloc !4594
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !4595, !srcloc !4596
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !4597, !srcloc !4598
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !4599, !srcloc !4600
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !4601, !srcloc !4602
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !4603, !srcloc !4604
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !4605, !srcloc !4606
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !4607, !srcloc !4608
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !4609, !srcloc !4610
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !4611, !srcloc !4612
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !4613, !srcloc !4614
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !4615, !srcloc !4616
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !4617, !srcloc !4618
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !4619, !srcloc !4620
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !4621, !srcloc !4622
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !4623, !srcloc !4624
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !4625, !srcloc !4626
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !4627, !srcloc !4628
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !4629, !srcloc !4630
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !4631, !srcloc !4632
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !4633, !srcloc !4634
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !4635, !srcloc !4636
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !4637, !srcloc !4638
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !4639, !srcloc !4640
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !4641, !srcloc !4642
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !4643, !srcloc !4644
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !4645, !srcloc !4646
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !4647, !srcloc !4648
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !4649, !srcloc !4650
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !4651, !srcloc !4652
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !4653, !srcloc !4654
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !4655, !srcloc !4656
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !4657, !srcloc !4658
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !4659, !srcloc !4660
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4661, !srcloc !4662
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !4663, !srcloc !4664
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !4665, !srcloc !4666
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !4667, !srcloc !4668
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !4669, !srcloc !4670
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !4671, !srcloc !4672
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !4673, !srcloc !4674
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !4675, !srcloc !4676
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !4677, !srcloc !4678
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !4679, !srcloc !4680
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !4681, !srcloc !4682
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !4683, !srcloc !4684
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !4685, !srcloc !4686
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !4687, !srcloc !4688
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !4689, !srcloc !4690
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !4691, !srcloc !4692
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !4693, !srcloc !4694
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !4695, !srcloc !4696
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !4697, !srcloc !4698
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !4699, !srcloc !4700
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !4701, !srcloc !4702
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !4703, !srcloc !4704
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !4705, !srcloc !4706
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4707, !srcloc !4708
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !4709, !srcloc !4710
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4711, !srcloc !4712
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !4713, !srcloc !4714
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !4715, !srcloc !4716
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !4717, !srcloc !4718
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !4719, !srcloc !4720
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !4721, !srcloc !4722
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !4723, !srcloc !4724
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !4725, !srcloc !4726
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !4727, !srcloc !4728
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !4729, !srcloc !4730
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !4731, !srcloc !4732
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !4733, !srcloc !4734
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !4735, !srcloc !4736
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !4737, !srcloc !4738
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !4739, !srcloc !4740
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !4741, !srcloc !4742
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !4743, !srcloc !4744
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !4745, !srcloc !4746
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !4747, !srcloc !4748
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !4749, !srcloc !4750
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !4751, !srcloc !4752
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !4753, !srcloc !4754
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !4755, !srcloc !4756
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !4757, !srcloc !4758
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !4759, !srcloc !4760
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !4761, !srcloc !4762
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !4763, !srcloc !4764
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !4765, !srcloc !4766
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !4767, !srcloc !4768
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !4769, !srcloc !4770
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !4771, !srcloc !4772
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !4773, !srcloc !4774
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !4775, !srcloc !4776
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !4777, !srcloc !4778
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !4779, !srcloc !4780
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !4781, !srcloc !4782
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !4783, !srcloc !4784
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4785, !srcloc !4786
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !4787, !srcloc !4788
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4789, !srcloc !4790
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4791, !srcloc !4792
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !4793, !srcloc !4794
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !4795, !srcloc !4796
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !4797, !srcloc !4798
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !4799, !srcloc !4800
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !4801, !srcloc !4802
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !4803, !srcloc !4804
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !4805, !srcloc !4806
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !4807, !srcloc !4808
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !4809, !srcloc !4810
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !4811, !srcloc !4812
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !4813, !srcloc !4814
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !4815, !srcloc !4816
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !4817, !srcloc !4818
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !4819, !srcloc !4820
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !4821, !srcloc !4822
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !4823, !srcloc !4824
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !4825, !srcloc !4826
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !4827, !srcloc !4828
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !4829, !srcloc !4830
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !4831, !srcloc !4832
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !4833, !srcloc !4834
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !4835, !srcloc !4836
  ret void, !dbg !4837
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !4838 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4840, metadata !DIExpression()), !dbg !4842
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !4843
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !4844
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4845, !srcloc !4854
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !4845
  call void @llvm.dbg.value(metadata i32 %3, metadata !4851, metadata !DIExpression()) #23, !dbg !4855
  call void @llvm.dbg.value(metadata i32 undef, metadata !4852, metadata !DIExpression()) #23, !dbg !4855
  call void @llvm.dbg.value(metadata i32 %3, metadata !4841, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata i32 %3, metadata !4856, metadata !DIExpression()) #23, !dbg !4861
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !4863, !srcloc !4864
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !4865
  ret i32 0, !dbg !4866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #13 !dbg !4867 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4869
  %2 = or i32 %1, 512, !dbg !4869
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4869
  ret void, !dbg !4870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #13 !dbg !4871 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4872
  %2 = or i32 %1, 1024, !dbg !4872
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4872
  ret void, !dbg !4873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #12 !dbg !4874 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4876, metadata !DIExpression()), !dbg !4877
  ret i32 0, !dbg !4878
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !4879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4928, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !4929, metadata !DIExpression()), !dbg !4930
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !4931
  ret void, !dbg !4932
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !4933 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !4950, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !4951, metadata !DIExpression()), !dbg !4953
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !4954
  %4 = load i32, i32* %3, align 4, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %4, metadata !4952, metadata !DIExpression()), !dbg !4953
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !4955
  ret void, !dbg !4956
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !4957 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4961, metadata !DIExpression()), !dbg !4964
  call void @llvm.dbg.value(metadata i8* %0, metadata !4962, metadata !DIExpression()), !dbg !4964
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !4965
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !4965
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !4963, metadata !DIExpression()), !dbg !4966
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !4966
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4967
  %5 = bitcast i8* %4 to i32*, !dbg !4967
  %6 = load i32, i32* %5, align 4, !dbg !4967
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !4968
  store i32 %6, i32* %7, align 4, !dbg !4969
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !4970
  unreachable, !dbg !4971
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !4972 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4975, metadata !DIExpression()), !dbg !4976
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !4977
  ret void, !dbg !4978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4983, metadata !DIExpression()), !dbg !4984
  %2 = icmp sgt i32 %0, -1, !dbg !4985
  br i1 %2, label %3, label %8, !dbg !4987

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4988, !srcloc !4990
  %4 = and i32 %0, 31, !dbg !4991
  %5 = shl nuw i32 1, %4, !dbg !4992
  %6 = lshr i32 %0, 5, !dbg !4993
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4994
  store volatile i32 %5, i32* %7, align 4, !dbg !4995
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4996, !srcloc !4997
  br label %8, !dbg !4998

8:                                                ; preds = %3, %1
  ret void, !dbg !4999
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5000 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5002, metadata !DIExpression()), !dbg !5003
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !5004
  ret void, !dbg !5005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5008, metadata !DIExpression()), !dbg !5009
  %2 = icmp sgt i32 %0, -1, !dbg !5010
  br i1 %2, label %3, label %8, !dbg !5012

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5013
  %5 = shl nuw i32 1, %4, !dbg !5015
  %6 = lshr i32 %0, 5, !dbg !5016
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5017
  store volatile i32 %5, i32* %7, align 4, !dbg !5018
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5019, !srcloc !5023
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5024, !srcloc !5027
  br label %8, !dbg !5028

8:                                                ; preds = %3, %1
  ret void, !dbg !5029
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #14 !dbg !5030 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5034, metadata !DIExpression()), !dbg !5035
  %2 = lshr i32 %0, 5, !dbg !5036
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5037
  %4 = load volatile i32, i32* %3, align 4, !dbg !5037
  %5 = and i32 %0, 31, !dbg !5038
  %6 = shl nuw i32 1, %5, !dbg !5038
  %7 = and i32 %4, %6, !dbg !5039
  ret i32 %7, !dbg !5040
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !5041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5045, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i32 %1, metadata !5046, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.value(metadata i32 %2, metadata !5047, metadata !DIExpression()), !dbg !5048
  %4 = add i32 %1, 1, !dbg !5049
  call void @llvm.dbg.value(metadata i32 %4, metadata !5046, metadata !DIExpression()), !dbg !5048
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !5052
  ret void, !dbg !5053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5058, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.value(metadata i32 %1, metadata !5059, metadata !DIExpression()), !dbg !5060
  %3 = trunc i32 %1 to i8, !dbg !5061
  %4 = shl i8 %3, 4, !dbg !5061
  %5 = and i32 %0, 15, !dbg !5063
  %6 = add nsw i32 %5, -4, !dbg !5063
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5063
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5063
  %9 = icmp slt i32 %0, 0, !dbg !5063
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5063
  store volatile i8 %4, i8* %10, align 1, !dbg !5061
  ret void, !dbg !5064
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5065 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5067, metadata !DIExpression()), !dbg !5068
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !5069
  ret void, !dbg !5070
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5071 {
  tail call void @z_SysNmiOnReset() #25, !dbg !5073
  tail call void @z_arm_int_exit() #25, !dbg !5074
  ret void, !dbg !5075
}

; Function Attrs: optsize
declare !dbg !5076 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5077 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !5079 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !5081
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !5082
  tail call void @z_bss_zero() #25, !dbg !5083
  tail call void @z_data_copy() #25, !dbg !5084
  tail call void @z_arm_interrupt_init() #25, !dbg !5085
  tail call void @z_cstart() #27, !dbg !5086
  unreachable, !dbg !5086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !5087 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !5088
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5089, !srcloc !5092
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5093, !srcloc !5096
  ret void, !dbg !5097
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !5098 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5099
  %2 = and i32 %1, -15728641, !dbg !5099
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5099
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !5100, !srcloc !5107
  call void @llvm.dbg.value(metadata i32 %3, metadata !5105, metadata !DIExpression()) #23, !dbg !5108
  %4 = and i32 %3, -5, !dbg !5109
  call void @llvm.dbg.value(metadata i32 %4, metadata !5110, metadata !DIExpression()) #23, !dbg !5115
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !5117, !srcloc !5118
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5119, !srcloc !5096
  ret void, !dbg !5121
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5122 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5125, metadata !DIExpression()), !dbg !5126
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5127
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !5128
  store i32 %0, i32* %3, align 4, !dbg !5129
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5130
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !5131
  store i32 %4, i32* %5, align 4, !dbg !5132
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5133
  %7 = or i32 %6, 268435456, !dbg !5133
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5133
  call void @llvm.dbg.value(metadata i32 0, metadata !5134, metadata !DIExpression()) #23, !dbg !5137
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5139, !srcloc !5140
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5141
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !5142
  %10 = load i32, i32* %9, align 4, !dbg !5142
  ret i32 %10, !dbg !5143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #3 !dbg !5144 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5254, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5255, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i8* %2, metadata !5256, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5257, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i8* %4, metadata !5258, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i8* %5, metadata !5259, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i8* %6, metadata !5260, metadata !DIExpression()), !dbg !5262
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5263
  call void @llvm.dbg.value(metadata i8* %8, metadata !5261, metadata !DIExpression()), !dbg !5262
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5264
  %10 = bitcast i8* %9 to i32*, !dbg !5264
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5265
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5266
  %12 = bitcast i8* %8 to i32*, !dbg !5267
  store i32 %11, i32* %12, align 4, !dbg !5268
  %13 = ptrtoint i8* %4 to i32, !dbg !5269
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5270
  %15 = bitcast i8* %14 to i32*, !dbg !5270
  store i32 %13, i32* %15, align 4, !dbg !5271
  %16 = ptrtoint i8* %5 to i32, !dbg !5272
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5273
  %18 = bitcast i8* %17 to i32*, !dbg !5273
  store i32 %16, i32* %18, align 4, !dbg !5274
  %19 = ptrtoint i8* %6 to i32, !dbg !5275
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5276
  %21 = bitcast i8* %20 to i32*, !dbg !5276
  store i32 %19, i32* %21, align 4, !dbg !5277
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5278
  %23 = bitcast i8* %22 to i32*, !dbg !5278
  store i32 16777216, i32* %23, align 4, !dbg !5279
  %24 = ptrtoint i8* %8 to i32, !dbg !5280
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5281
  store i32 %24, i32* %25, align 8, !dbg !5282
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !5283
  store i32 0, i32* %26, align 4, !dbg !5284
  ret void, !dbg !5285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !5286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5291, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.value(metadata i32 %1, metadata !5292, metadata !DIExpression()), !dbg !5297
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5298
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5293, metadata !DIExpression()), !dbg !5297
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5299
  br i1 %4, label %19, label %5, !dbg !5301

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5296, metadata !DIExpression()), !dbg !5297
  %6 = icmp eq i32 %0, -22, !dbg !5302
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !5302
  %8 = load i32, i32* %7, align 4, !dbg !5302
  br i1 %6, label %16, label %9, !dbg !5304

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5302
  %11 = icmp ule i32 %10, %0, !dbg !5302
  %12 = icmp ugt i32 %8, %0, !dbg !5302
  %13 = and i1 %12, %11, !dbg !5302
  %14 = icmp ugt i32 %8, %1, !dbg !5302
  %15 = and i1 %14, %13, !dbg !5302
  br i1 %15, label %18, label %19, !dbg !5302

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5302
  br i1 %17, label %18, label %19, !dbg !5304

18:                                               ; preds = %9, %16
  br label %19, !dbg !5305

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5297
  ret i32 %20, !dbg !5307
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !5308 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5312, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.value(metadata i8* %1, metadata !5313, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5314, metadata !DIExpression()), !dbg !5315
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5316
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !5317
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5318, !srcloc !5319
  unreachable, !dbg !5320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5321 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5339, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i32 %1, metadata !5340, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i32 %2, metadata !5341, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5342, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i32 0, metadata !5343, metadata !DIExpression()), !dbg !5349
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5350
  %9 = and i32 %8, 511, !dbg !5351
  call void @llvm.dbg.value(metadata i32 %9, metadata !5344, metadata !DIExpression()), !dbg !5349
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5352
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5352
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5353
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5353
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5348, metadata !DIExpression()), !dbg !5354
  call void @llvm.dbg.value(metadata i32 0, metadata !5355, metadata !DIExpression()) #23, !dbg !5358
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5360, !srcloc !5361
  call void @llvm.dbg.value(metadata i8* %6, metadata !5346, metadata !DIExpression(DW_OP_deref)), !dbg !5349
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !5362
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5347, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i8* %5, metadata !5345, metadata !DIExpression(DW_OP_deref)), !dbg !5349
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #24, !dbg !5363
  call void @llvm.dbg.value(metadata i32 %12, metadata !5343, metadata !DIExpression()), !dbg !5349
  %13 = load i8, i8* %5, align 1, !dbg !5364, !range !5366
  call void @llvm.dbg.value(metadata i8 %13, metadata !5345, metadata !DIExpression()), !dbg !5349
  %14 = icmp eq i8 %13, 0, !dbg !5364
  br i1 %14, label %15, label %32, !dbg !5367

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5368
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !5369
  %18 = load i8, i8* %6, align 1, !dbg !5370, !range !5366
  call void @llvm.dbg.value(metadata i8 %18, metadata !5346, metadata !DIExpression()), !dbg !5349
  %19 = icmp eq i8 %18, 0, !dbg !5370
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5372
  %21 = load i32, i32* %20, align 4, !dbg !5372
  br i1 %19, label %27, label %22, !dbg !5373

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5374
  %24 = icmp eq i32 %23, 0, !dbg !5377
  br i1 %24, label %25, label %31, !dbg !5378

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5379
  br label %29, !dbg !5381

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5382
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5372
  br label %31, !dbg !5384

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !5384
  br label %32, !dbg !5385

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5385
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5385
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5385
  ret void, !dbg !5385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #3 !dbg !5386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5391, metadata !DIExpression()), !dbg !5397
  call void @llvm.dbg.value(metadata i32 %1, metadata !5392, metadata !DIExpression()), !dbg !5397
  call void @llvm.dbg.value(metadata i32 %2, metadata !5393, metadata !DIExpression()), !dbg !5397
  call void @llvm.dbg.value(metadata i8* %3, metadata !5394, metadata !DIExpression()), !dbg !5397
  call void @llvm.dbg.value(metadata i8 0, metadata !5395, metadata !DIExpression()), !dbg !5397
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5396, metadata !DIExpression()), !dbg !5397
  store i8 0, i8* %3, align 1, !dbg !5398
  %5 = icmp ult i32 %2, -16777216, !dbg !5399
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5401
  br i1 %8, label %16, label %9, !dbg !5401

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5402
  %11 = icmp eq i32 %10, 0, !dbg !5402
  br i1 %11, label %12, label %13, !dbg !5404

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5396, metadata !DIExpression()), !dbg !5397
  store i8 1, i8* %3, align 1, !dbg !5407
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5397
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5396, metadata !DIExpression()), !dbg !5397
  br label %16, !dbg !5410

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5397
  ret %struct.__esf* %17, !dbg !5411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5412 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5416, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.value(metadata i32 %1, metadata !5417, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.value(metadata i8* %2, metadata !5418, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.value(metadata i32 0, metadata !5419, metadata !DIExpression()), !dbg !5420
  store i8 0, i8* %2, align 1, !dbg !5421
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5422

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !5423
  call void @llvm.dbg.value(metadata i32 %5, metadata !5419, metadata !DIExpression()), !dbg !5420
  br label %11, !dbg !5425

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5426
  call void @llvm.dbg.value(metadata i32 %7, metadata !5419, metadata !DIExpression()), !dbg !5420
  br label %11, !dbg !5427

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !5428
  call void @llvm.dbg.value(metadata i32 0, metadata !5419, metadata !DIExpression()), !dbg !5420
  br label %11, !dbg !5429

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !5430
  call void @llvm.dbg.value(metadata i32 0, metadata !5419, metadata !DIExpression()), !dbg !5420
  br label %11, !dbg !5431

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !5432
  br label %11, !dbg !5433

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5434
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5435 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5439, metadata !DIExpression()), !dbg !5442
  call void @llvm.dbg.value(metadata i8* %1, metadata !5440, metadata !DIExpression()), !dbg !5442
  call void @llvm.dbg.value(metadata i32 0, metadata !5441, metadata !DIExpression()), !dbg !5442
  store i8 0, i8* %1, align 1, !dbg !5443
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5444
  %4 = and i32 %3, 2, !dbg !5446
  %5 = icmp eq i32 %4, 0, !dbg !5447
  br i1 %5, label %6, label %33, !dbg !5448

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5449
  %8 = icmp sgt i32 %7, -1, !dbg !5451
  br i1 %8, label %9, label %33, !dbg !5452

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5453
  %11 = and i32 %10, 1073741824, !dbg !5455
  %12 = icmp eq i32 %11, 0, !dbg !5456
  br i1 %12, label %33, label %13, !dbg !5457

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !5458
  br i1 %14, label %15, label %18, !dbg !5461

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5462
  %17 = load i32, i32* %16, align 4, !dbg !5462
  call void @llvm.dbg.value(metadata i32 %17, metadata !5441, metadata !DIExpression()), !dbg !5442
  br label %33, !dbg !5464

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5465
  %20 = and i32 %19, 255, !dbg !5467
  %21 = icmp eq i32 %20, 0, !dbg !5468
  br i1 %21, label %24, label %22, !dbg !5469

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5470
  call void @llvm.dbg.value(metadata i32 %23, metadata !5441, metadata !DIExpression()), !dbg !5442
  br label %33, !dbg !5472

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5473
  %26 = and i32 %25, 65280, !dbg !5475
  %27 = icmp eq i32 %26, 0, !dbg !5476
  br i1 %27, label %29, label %28, !dbg !5477

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !5478
  call void @llvm.dbg.value(metadata i32 0, metadata !5441, metadata !DIExpression()), !dbg !5442
  br label %33, !dbg !5480

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5481
  %31 = icmp ult i32 %30, 65536, !dbg !5483
  br i1 %31, label %33, label %32, !dbg !5484

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #24, !dbg !5485
  call void @llvm.dbg.value(metadata i32 0, metadata !5441, metadata !DIExpression()), !dbg !5442
  br label %33, !dbg !5487

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5442
  call void @llvm.dbg.value(metadata i32 %34, metadata !5441, metadata !DIExpression()), !dbg !5442
  ret i32 %34, !dbg !5488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5489 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5491, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.value(metadata i32 %1, metadata !5492, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.value(metadata i8* %2, metadata !5493, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.value(metadata i32 0, metadata !5494, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.value(metadata i32 -22, metadata !5495, metadata !DIExpression()), !dbg !5504
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5505
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5507
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5509
  %7 = and i32 %6, 2, !dbg !5510
  %8 = icmp eq i32 %7, 0, !dbg !5511
  br i1 %8, label %19, label %9, !dbg !5512

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5513
  call void @llvm.dbg.value(metadata i32 %10, metadata !5496, metadata !DIExpression()), !dbg !5514
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5515
  %12 = and i32 %11, 128, !dbg !5517
  %13 = icmp eq i32 %12, 0, !dbg !5518
  br i1 %13, label %19, label %14, !dbg !5519

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5495, metadata !DIExpression()), !dbg !5504
  %15 = icmp eq i32 %1, 0, !dbg !5520
  br i1 %15, label %19, label %16, !dbg !5523

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5524
  %18 = and i32 %17, -129, !dbg !5524
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5524
  br label %19, !dbg !5526

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5504
  call void @llvm.dbg.value(metadata i32 %20, metadata !5495, metadata !DIExpression()), !dbg !5504
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5527
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5529
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5531
  %24 = and i32 %23, 16, !dbg !5532
  %25 = icmp eq i32 %24, 0, !dbg !5532
  br i1 %25, label %26, label %30, !dbg !5533

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5534
  %28 = and i32 %27, 2, !dbg !5535
  %29 = icmp eq i32 %28, 0, !dbg !5535
  br i1 %29, label %39, label %30, !dbg !5536

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5537
  %32 = and i32 %31, 2048, !dbg !5538
  %33 = icmp eq i32 %32, 0, !dbg !5538
  br i1 %33, label %39, label %34, !dbg !5539

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !5540
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !5541
  call void @llvm.dbg.value(metadata i32 %36, metadata !5499, metadata !DIExpression()), !dbg !5542
  %37 = icmp eq i32 %36, 0, !dbg !5543
  br i1 %37, label %39, label %38, !dbg !5545

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !5546, metadata !DIExpression()) #23, !dbg !5549
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !5552, !srcloc !5553
  call void @llvm.dbg.value(metadata i32 2, metadata !5494, metadata !DIExpression()), !dbg !5504
  br label %39, !dbg !5554

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !5504
  call void @llvm.dbg.value(metadata i32 %40, metadata !5494, metadata !DIExpression()), !dbg !5504
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5555
  %42 = and i32 %41, 32, !dbg !5557
  %43 = icmp eq i32 %42, 0, !dbg !5558
  br i1 %43, label %47, label %44, !dbg !5559

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5560
  %46 = and i32 %45, -8193, !dbg !5560
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5560
  br label %47, !dbg !5562

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5563
  %49 = or i32 %48, 255, !dbg !5563
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5563
  store i8 0, i8* %2, align 1, !dbg !5564
  ret i32 %40, !dbg !5565
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !5566 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5570, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.value(metadata i32 %0, metadata !5571, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.value(metadata i8* %1, metadata !5572, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.value(metadata i32 0, metadata !5573, metadata !DIExpression()), !dbg !5577
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5578
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5580
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5582
  %6 = and i32 %5, 512, !dbg !5583
  %7 = icmp eq i32 %6, 0, !dbg !5583
  br i1 %7, label %18, label %8, !dbg !5584

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5585
  call void @llvm.dbg.value(metadata i32 %9, metadata !5574, metadata !DIExpression()), !dbg !5586
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5587
  %11 = and i32 %10, 32768, !dbg !5589
  %12 = icmp ne i32 %11, 0, !dbg !5590
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5591
  br i1 %14, label %15, label %18, !dbg !5591

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5592
  %17 = and i32 %16, -32769, !dbg !5592
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5592
  br label %18, !dbg !5596

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5597
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5599
  %21 = and i32 %20, 256, !dbg !5601
  %22 = icmp eq i32 %21, 0, !dbg !5602
  br i1 %22, label %23, label %25, !dbg !5603

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5604
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5606
  %27 = or i32 %26, 65280, !dbg !5606
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5606
  store i8 0, i8* %1, align 1, !dbg !5607
  ret void, !dbg !5608
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #13 !dbg !5609 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5615, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 0, metadata !5616, metadata !DIExpression()), !dbg !5617
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5618
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5620
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5622
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5624
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5626
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5628
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5630
  %8 = or i32 %7, -65536, !dbg !5630
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5630
  ret void, !dbg !5631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !5632 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5636, metadata !DIExpression()), !dbg !5638
  call void @llvm.dbg.value(metadata i8* %0, metadata !5637, metadata !DIExpression()), !dbg !5638
  store i8 0, i8* %0, align 1, !dbg !5639
  ret void, !dbg !5640
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5641 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5645, metadata !DIExpression()), !dbg !5648
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5649
  %3 = load i32, i32* %2, align 4, !dbg !5649
  %4 = inttoptr i32 %3 to i16*, !dbg !5650
  call void @llvm.dbg.value(metadata i16* %4, metadata !5646, metadata !DIExpression()), !dbg !5648
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5651
  %6 = or i32 %5, 256, !dbg !5651
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5651
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5652, !srcloc !5655
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5656, !srcloc !5659
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !5660
  %8 = load i16, i16* %7, align 2, !dbg !5661
  call void @llvm.dbg.value(metadata i16 %8, metadata !5647, metadata !DIExpression()), !dbg !5648
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5662
  %10 = and i32 %9, -257, !dbg !5662
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5662
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5663, !srcloc !5655
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5665, !srcloc !5659
  %11 = icmp eq i16 %8, -8446, !dbg !5667
  ret i1 %11, !dbg !5669
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #13 !dbg !5670 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5671
  %2 = or i32 %1, 16, !dbg !5671
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5671
  ret void, !dbg !5672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #13 !dbg !5673 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5676, metadata !DIExpression()), !dbg !5677
  br label %1, !dbg !5678

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5676, metadata !DIExpression()), !dbg !5677
  tail call fastcc void @__NVIC_SetPriority.8(i32 noundef %2) #24, !dbg !5680
  %3 = add nuw nsw i32 %2, 1, !dbg !5683
  call void @llvm.dbg.value(metadata i32 %3, metadata !5676, metadata !DIExpression()), !dbg !5677
  %4 = icmp eq i32 %3, 97, !dbg !5684
  br i1 %4, label %5, label %1, !dbg !5678, !llvm.loop !5685

5:                                                ; preds = %1
  ret void, !dbg !5687
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.8(i32 noundef %0) unnamed_addr #13 !dbg !5688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5690, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.value(metadata i32 1, metadata !5691, metadata !DIExpression()), !dbg !5692
  %2 = and i32 %0, 15, !dbg !5693
  %3 = add nsw i32 %2, -4, !dbg !5693
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !5693
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5693
  %6 = icmp slt i32 %0, 0, !dbg !5693
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !5693
  store volatile i8 16, i8* %7, align 1, !dbg !5694
  ret void, !dbg !5696
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !5697 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5803, metadata !DIExpression()), !dbg !5804
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5805
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !5807
  br i1 %3, label %4, label %12, !dbg !5808

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !5809, !srcloc !5821
  call void @llvm.dbg.value(metadata i32 %5, metadata !5812, metadata !DIExpression()) #23, !dbg !5822
  %6 = icmp eq i32 %5, 0, !dbg !5823
  br i1 %6, label %12, label %7, !dbg !5824

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5825
  %9 = or i32 %8, 268435456, !dbg !5825
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5825
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5827
  %11 = and i32 %10, -32769, !dbg !5827
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5827
  br label %12, !dbg !5828

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !5829
  ret void, !dbg !5830
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !5831 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !5832
  ret void, !dbg !5833
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !329, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i8 0, metadata !330, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.value(metadata i32 64, metadata !332, metadata !DIExpression()), !dbg !5834
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !5835
  %3 = load i32, i32* %2, align 4, !dbg !5835
  %4 = add i32 %3, -64, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %4, metadata !331, metadata !DIExpression()), !dbg !5834
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !5838
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !5839
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !5840
  call void @llvm.dbg.value(metadata i8 1, metadata !330, metadata !DIExpression()), !dbg !5834
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !5841
  ret void, !dbg !5842
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !5843 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5844
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5845, !srcloc !5848
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5849, !srcloc !5852
  ret void, !dbg !5853
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !5854 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !5855, !srcloc !5858
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5859
  ret void, !dbg !5860
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !5861 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5876, metadata !DIExpression()), !dbg !5880
  call void @llvm.dbg.value(metadata i8 %1, metadata !5877, metadata !DIExpression()), !dbg !5880
  call void @llvm.dbg.value(metadata i32 %2, metadata !5878, metadata !DIExpression()), !dbg !5880
  call void @llvm.dbg.value(metadata i32 %3, metadata !5879, metadata !DIExpression()), !dbg !5880
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !5881
  ret void, !dbg !5883
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5884 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5889, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.value(metadata i8 %1, metadata !5890, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.value(metadata i32 undef, metadata !5891, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.value(metadata i32 undef, metadata !5892, metadata !DIExpression()), !dbg !5894
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5895
  call void @llvm.dbg.value(metadata i8 %3, metadata !5893, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5894
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !5896
  call void @llvm.dbg.value(metadata i32 %4, metadata !5893, metadata !DIExpression()), !dbg !5894
  %5 = trunc i32 %4 to i8, !dbg !5897
  store i8 %5, i8* @static_regions_num, align 1, !dbg !5898
  ret void, !dbg !5899
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !5900 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5904, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata i8 %1, metadata !5905, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata i8 %2, metadata !5906, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata i1 %3, metadata !5907, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5910
  %5 = zext i8 %2 to i32, !dbg !5911
  call void @llvm.dbg.value(metadata i32 %5, metadata !5909, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata i32 0, metadata !5908, metadata !DIExpression()), !dbg !5910
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !5909, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata i32 0, metadata !5908, metadata !DIExpression()), !dbg !5910
  %7 = icmp eq i8 %1, 0, !dbg !5912
  br i1 %7, label %29, label %8, !dbg !5915

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5909, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata i32 %10, metadata !5908, metadata !DIExpression()), !dbg !5910
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !5916
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !5919
  %13 = load i32, i32* %12, align 4, !dbg !5919
  %14 = icmp eq i32 %13, 0, !dbg !5920
  br i1 %14, label %25, label %15, !dbg !5921

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !5922

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !5924
  %18 = icmp eq i32 %17, 0, !dbg !5924
  br i1 %18, label %29, label %19, !dbg !5925

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !5926
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !5927
  call void @llvm.dbg.value(metadata i32 %21, metadata !5909, metadata !DIExpression()), !dbg !5910
  %22 = icmp eq i32 %21, -22, !dbg !5928
  br i1 %22, label %29, label %23, !dbg !5930

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !5931
  call void @llvm.dbg.value(metadata i32 %24, metadata !5909, metadata !DIExpression()), !dbg !5910
  br label %25, !dbg !5932

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !5910
  call void @llvm.dbg.value(metadata i32 %26, metadata !5909, metadata !DIExpression()), !dbg !5910
  %27 = add nuw nsw i32 %10, 1, !dbg !5933
  call void @llvm.dbg.value(metadata i32 %27, metadata !5908, metadata !DIExpression()), !dbg !5910
  %28 = icmp eq i32 %27, %6, !dbg !5912
  br i1 %28, label %29, label %8, !dbg !5915, !llvm.loop !5934

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !5910
  ret i32 %30, !dbg !5936
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !5937 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5941, metadata !DIExpression()), !dbg !5943
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !5944
  %3 = load i32, i32* %2, align 4, !dbg !5944
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !5945, !range !5946
  %5 = icmp ult i32 %4, 2, !dbg !5945
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !5947
  br i1 %7, label %8, label %15, !dbg !5947

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !5948
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !5949
  %11 = load i32, i32* %10, align 4, !dbg !5949
  %12 = and i32 %11, %9, !dbg !5950
  %13 = icmp eq i32 %12, 0, !dbg !5951
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !5942, metadata !DIExpression()), !dbg !5943
  ret i32 %16, !dbg !5952
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !5953 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !5957, metadata !DIExpression()), !dbg !5960
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !5958, metadata !DIExpression()), !dbg !5960
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !5961
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5961
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !5959, metadata !DIExpression()), !dbg !5962
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !5963
  %6 = load i32, i32* %5, align 4, !dbg !5963
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !5964
  store i32 %6, i32* %7, align 4, !dbg !5965
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !5966
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !5967
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !5968
  %11 = load i32, i32* %10, align 4, !dbg !5968
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.gpio_driver_data* noundef nonnull %8, %struct.gpio_driver_data* noundef nonnull %9, i32 noundef %11) #24, !dbg !5969
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !5970
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5971
  ret i32 %12, !dbg !5972
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.gpio_driver_data* nocapture noundef writeonly %0, %struct.gpio_driver_data* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !5973 {
  call void @llvm.dbg.value(metadata %struct.gpio_driver_data* %0, metadata !5980, metadata !DIExpression()), !dbg !5984
  call void @llvm.dbg.value(metadata %struct.gpio_driver_data* %1, metadata !5981, metadata !DIExpression()), !dbg !5984
  call void @llvm.dbg.value(metadata i32 undef, metadata !5982, metadata !DIExpression()), !dbg !5984
  call void @llvm.dbg.value(metadata i32 %2, metadata !5983, metadata !DIExpression()), !dbg !5984
  %4 = getelementptr inbounds %struct.gpio_driver_data, %struct.gpio_driver_data* %1, i32 0, i32 0, !dbg !5985
  %5 = load i32, i32* %4, align 4, !dbg !5985
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !5986
  %7 = or i32 %6, %5, !dbg !5987
  %8 = getelementptr inbounds %struct.gpio_driver_data, %struct.gpio_driver_data* %0, i32 0, i32 0, !dbg !5988
  store i32 %7, i32* %8, align 4, !dbg !5989
  ret void, !dbg !5990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5991 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5995, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5996, metadata !DIExpression()), !dbg !5997
  %3 = zext i8 %0 to i32, !dbg !5998
  %4 = icmp ugt i8 %0, 7, !dbg !6000
  br i1 %4, label %6, label %5, !dbg !6001

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !6002
  br label %6, !dbg !6003

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !5997
  ret i32 %7, !dbg !6004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !6005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6009, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6010, metadata !DIExpression()), !dbg !6011
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !6012
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !6013
  %4 = load i32, i32* %3, align 4, !dbg !6013
  %5 = and i32 %4, -32, !dbg !6014
  %6 = or i32 %5, %0, !dbg !6015
  %7 = or i32 %6, 16, !dbg !6015
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !6016
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !6017
  %9 = load i32, i32* %8, align 4, !dbg !6017
  %10 = or i32 %9, 1, !dbg !6018
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6019
  ret void, !dbg !6020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #13 !dbg !6021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6024, metadata !DIExpression()), !dbg !6025
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6026
  ret void, !dbg !6027
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !6028 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6032, metadata !DIExpression()), !dbg !6033
  %2 = icmp ult i32 %0, 33, !dbg !6034
  br i1 %2, label %11, label %3, !dbg !6036

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !6037
  br i1 %4, label %11, label %5, !dbg !6039

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !6040
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !6041, !range !5946
  %8 = mul nsw i32 %7, -2, !dbg !6042
  %9 = add nsw i32 %8, 62, !dbg !6042
  %10 = and i32 %9, 62, !dbg !6043
  br label %11, !dbg !6044

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !6033
  ret i32 %12, !dbg !6045
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !6046 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6050, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.value(metadata i8 %1, metadata !6051, metadata !DIExpression()), !dbg !6052
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !6053
  ret void, !dbg !6055
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !6056 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6060, metadata !DIExpression()), !dbg !6067
  call void @llvm.dbg.value(metadata i8 %1, metadata !6061, metadata !DIExpression()), !dbg !6067
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6068
  call void @llvm.dbg.value(metadata i8 %3, metadata !6062, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6067
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !6069
  call void @llvm.dbg.value(metadata i32 %4, metadata !6062, metadata !DIExpression()), !dbg !6067
  %5 = icmp ne i32 %4, -22, !dbg !6070
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !6071
  call void @llvm.dbg.value(metadata i32 %4, metadata !6063, metadata !DIExpression()), !dbg !6072
  br i1 %7, label %8, label %12, !dbg !6071

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6063, metadata !DIExpression()), !dbg !6072
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !6073
  %10 = add i32 %9, 1, !dbg !6076
  call void @llvm.dbg.value(metadata i32 %10, metadata !6063, metadata !DIExpression()), !dbg !6072
  %11 = icmp eq i32 %10, 8, !dbg !6077
  br i1 %11, label %12, label %8, !dbg !6078, !llvm.loop !6079

12:                                               ; preds = %8, %2
  ret void, !dbg !6081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #13 !dbg !6082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6085, metadata !DIExpression()), !dbg !6086
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6087
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6088
  ret void, !dbg !6089
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !6090 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !6095
  %2 = icmp ugt i32 %1, 8, !dbg !6097
  br i1 %2, label %14, label %3, !dbg !6098

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !6099
  call void @llvm.dbg.value(metadata i32 0, metadata !6094, metadata !DIExpression()), !dbg !6100
  %4 = icmp eq i32 %1, 0, !dbg !6101
  br i1 %4, label %12, label %5, !dbg !6104

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !6104

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6094, metadata !DIExpression()), !dbg !6100
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !6105
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #24, !dbg !6107
  %10 = add nuw i32 %8, 1, !dbg !6108
  call void @llvm.dbg.value(metadata i32 %10, metadata !6094, metadata !DIExpression()), !dbg !6100
  %11 = icmp eq i32 %10, %1, !dbg !6101
  br i1 %11, label %12, label %7, !dbg !6104, !llvm.loop !6109

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !6111
  store i8 %13, i8* @static_regions_num, align 1, !dbg !6112
  tail call void @arm_core_mpu_enable() #24, !dbg !6113
  br label %14, !dbg !6114

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !6100
  ret i32 %15, !dbg !6115
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6116 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6123, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8* %1, metadata !6124, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8* %0, metadata !6125, metadata !DIExpression()), !dbg !6126
  %3 = load i8, i8* %1, align 1, !dbg !6127
  %4 = icmp eq i8 %3, 0, !dbg !6128
  br i1 %4, label %13, label %5, !dbg !6129

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6123, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i8* %8, metadata !6124, metadata !DIExpression()), !dbg !6126
  store i8 %6, i8* %7, align 1, !dbg !6130
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6132
  call void @llvm.dbg.value(metadata i8* %9, metadata !6123, metadata !DIExpression()), !dbg !6126
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6133
  call void @llvm.dbg.value(metadata i8* %10, metadata !6124, metadata !DIExpression()), !dbg !6126
  %11 = load i8, i8* %10, align 1, !dbg !6127
  %12 = icmp eq i8 %11, 0, !dbg !6128
  br i1 %12, label %13, label %5, !dbg !6129, !llvm.loop !6134

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6136
  ret i8* %0, !dbg !6137
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6138 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6142, metadata !DIExpression()), !dbg !6146
  call void @llvm.dbg.value(metadata i8* %1, metadata !6143, metadata !DIExpression()), !dbg !6146
  call void @llvm.dbg.value(metadata i32 %2, metadata !6144, metadata !DIExpression()), !dbg !6146
  call void @llvm.dbg.value(metadata i8* %0, metadata !6145, metadata !DIExpression()), !dbg !6146
  %4 = icmp eq i32 %2, 0, !dbg !6147
  br i1 %4, label %22, label %5, !dbg !6148

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6142, metadata !DIExpression()), !dbg !6146
  call void @llvm.dbg.value(metadata i32 %7, metadata !6144, metadata !DIExpression()), !dbg !6146
  call void @llvm.dbg.value(metadata i8* %8, metadata !6143, metadata !DIExpression()), !dbg !6146
  %9 = load i8, i8* %8, align 1, !dbg !6149
  %10 = icmp eq i8 %9, 0, !dbg !6150
  br i1 %10, label %16, label %11, !dbg !6151

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6152
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6154
  call void @llvm.dbg.value(metadata i8* %12, metadata !6143, metadata !DIExpression()), !dbg !6146
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6155
  call void @llvm.dbg.value(metadata i8* %13, metadata !6142, metadata !DIExpression()), !dbg !6146
  %14 = add i32 %7, -1, !dbg !6156
  call void @llvm.dbg.value(metadata i32 %14, metadata !6144, metadata !DIExpression()), !dbg !6146
  %15 = icmp eq i32 %14, 0, !dbg !6147
  br i1 %15, label %22, label %5, !dbg !6148, !llvm.loop !6157

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6142, metadata !DIExpression()), !dbg !6146
  call void @llvm.dbg.value(metadata i32 %18, metadata !6144, metadata !DIExpression()), !dbg !6146
  store i8 0, i8* %17, align 1, !dbg !6159
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6161
  call void @llvm.dbg.value(metadata i8* %19, metadata !6142, metadata !DIExpression()), !dbg !6146
  %20 = add i32 %18, -1, !dbg !6162
  call void @llvm.dbg.value(metadata i32 %20, metadata !6144, metadata !DIExpression()), !dbg !6146
  %21 = icmp eq i32 %20, 0, !dbg !6163
  br i1 %21, label %22, label %16, !dbg !6164, !llvm.loop !6165

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6167
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6168 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6172, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.value(metadata i32 %1, metadata !6173, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.value(metadata i32 %1, metadata !6174, metadata !DIExpression()), !dbg !6175
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6176

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6172, metadata !DIExpression()), !dbg !6175
  %6 = load i8, i8* %5, align 1, !dbg !6177
  %7 = icmp eq i8 %6, %3, !dbg !6178
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6179
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6180
  call void @llvm.dbg.value(metadata i8* %10, metadata !6172, metadata !DIExpression()), !dbg !6175
  br i1 %9, label %11, label %4, !dbg !6179, !llvm.loop !6182

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6184
  ret i8* %12, !dbg !6185
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6186 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6188, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.value(metadata i32 %1, metadata !6189, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.value(metadata i8* null, metadata !6190, metadata !DIExpression()), !dbg !6191
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6192

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6191
  call void @llvm.dbg.value(metadata i8* %6, metadata !6190, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.value(metadata i8* %5, metadata !6188, metadata !DIExpression()), !dbg !6191
  %7 = load i8, i8* %5, align 1, !dbg !6193
  %8 = icmp eq i8 %7, %3, !dbg !6196
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6197
  call void @llvm.dbg.value(metadata i8* %9, metadata !6190, metadata !DIExpression()), !dbg !6191
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6198
  call void @llvm.dbg.value(metadata i8* %10, metadata !6188, metadata !DIExpression()), !dbg !6191
  %11 = icmp eq i8 %7, 0, !dbg !6199
  br i1 %11, label %12, label %4, !dbg !6199, !llvm.loop !6200

12:                                               ; preds = %4
  ret i8* %9, !dbg !6202
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !6203 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6207, metadata !DIExpression()), !dbg !6209
  call void @llvm.dbg.value(metadata i32 0, metadata !6208, metadata !DIExpression()), !dbg !6209
  %2 = load i8, i8* %0, align 1, !dbg !6210
  %3 = icmp eq i8 %2, 0, !dbg !6211
  br i1 %3, label %11, label %4, !dbg !6212

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6208, metadata !DIExpression()), !dbg !6209
  call void @llvm.dbg.value(metadata i8* %6, metadata !6207, metadata !DIExpression()), !dbg !6209
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6213
  call void @llvm.dbg.value(metadata i8* %7, metadata !6207, metadata !DIExpression()), !dbg !6209
  %8 = add i32 %5, 1, !dbg !6215
  call void @llvm.dbg.value(metadata i32 %8, metadata !6208, metadata !DIExpression()), !dbg !6209
  %9 = load i8, i8* %7, align 1, !dbg !6210
  %10 = icmp eq i8 %9, 0, !dbg !6211
  br i1 %10, label %11, label %4, !dbg !6212, !llvm.loop !6216

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6209
  ret i32 %12, !dbg !6218
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6219 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6223, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i32 %1, metadata !6224, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i32 0, metadata !6225, metadata !DIExpression()), !dbg !6226
  %3 = load i8, i8* %0, align 1, !dbg !6227
  %4 = icmp ne i8 %3, 0, !dbg !6228
  %5 = icmp ne i32 %1, 0, !dbg !6229
  %6 = and i1 %4, %5, !dbg !6229
  br i1 %6, label %7, label %16, !dbg !6230

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6225, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i8* %9, metadata !6223, metadata !DIExpression()), !dbg !6226
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6231
  call void @llvm.dbg.value(metadata i8* %10, metadata !6223, metadata !DIExpression()), !dbg !6226
  %11 = add nuw i32 %8, 1, !dbg !6233
  call void @llvm.dbg.value(metadata i32 %11, metadata !6225, metadata !DIExpression()), !dbg !6226
  %12 = load i8, i8* %10, align 1, !dbg !6227
  %13 = icmp ne i8 %12, 0, !dbg !6228
  %14 = icmp ult i32 %11, %1, !dbg !6229
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6229
  br i1 %15, label %7, label %16, !dbg !6230, !llvm.loop !6234

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6226
  ret i32 %17, !dbg !6236
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !6237 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6241, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.value(metadata i8* %1, metadata !6242, metadata !DIExpression()), !dbg !6243
  %3 = load i8, i8* %0, align 1, !dbg !6244
  %4 = load i8, i8* %1, align 1, !dbg !6245
  %5 = icmp ne i8 %3, %4, !dbg !6246
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6247
  br i1 %7, label %18, label %8, !dbg !6247

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6242, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.value(metadata i8* %10, metadata !6241, metadata !DIExpression()), !dbg !6243
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6248
  call void @llvm.dbg.value(metadata i8* %11, metadata !6241, metadata !DIExpression()), !dbg !6243
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6250
  call void @llvm.dbg.value(metadata i8* %12, metadata !6242, metadata !DIExpression()), !dbg !6243
  %13 = load i8, i8* %11, align 1, !dbg !6244
  %14 = load i8, i8* %12, align 1, !dbg !6245
  %15 = icmp ne i8 %13, %14, !dbg !6246
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6247
  br i1 %17, label %18, label %8, !dbg !6247, !llvm.loop !6251

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6244
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6245
  %21 = zext i8 %19 to i32, !dbg !6254
  %22 = zext i8 %20 to i32, !dbg !6255
  %23 = sub nsw i32 %21, %22, !dbg !6256
  ret i32 %23, !dbg !6257
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6258 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6262, metadata !DIExpression()), !dbg !6265
  call void @llvm.dbg.value(metadata i8* %1, metadata !6263, metadata !DIExpression()), !dbg !6265
  call void @llvm.dbg.value(metadata i32 %2, metadata !6264, metadata !DIExpression()), !dbg !6265
  %4 = icmp eq i32 %2, 0, !dbg !6266
  br i1 %4, label %23, label %5, !dbg !6266

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6264, metadata !DIExpression()), !dbg !6265
  call void @llvm.dbg.value(metadata i8* %7, metadata !6263, metadata !DIExpression()), !dbg !6265
  call void @llvm.dbg.value(metadata i8* %8, metadata !6262, metadata !DIExpression()), !dbg !6265
  %9 = load i8, i8* %8, align 1, !dbg !6267
  %10 = load i8, i8* %7, align 1, !dbg !6268
  %11 = icmp ne i8 %9, %10, !dbg !6269
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6270
  br i1 %13, label %19, label %14, !dbg !6270

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6271
  call void @llvm.dbg.value(metadata i8* %15, metadata !6262, metadata !DIExpression()), !dbg !6265
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6273
  call void @llvm.dbg.value(metadata i8* %16, metadata !6263, metadata !DIExpression()), !dbg !6265
  %17 = add i32 %6, -1, !dbg !6274
  call void @llvm.dbg.value(metadata i32 %17, metadata !6264, metadata !DIExpression()), !dbg !6265
  %18 = icmp eq i32 %17, 0, !dbg !6266
  br i1 %18, label %23, label %5, !dbg !6266, !llvm.loop !6275

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6278
  %21 = zext i8 %10 to i32, !dbg !6279
  %22 = sub nsw i32 %20, %21, !dbg !6280
  br label %23, !dbg !6281

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6281
  ret i32 %24, !dbg !6282
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #11 !dbg !6283 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6288, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.value(metadata i8* %1, metadata !6289, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.value(metadata i8** %2, metadata !6290, metadata !DIExpression()), !dbg !6293
  %4 = icmp eq i8* %0, null, !dbg !6294
  br i1 %4, label %5, label %7, !dbg !6294

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6295
  br label %7, !dbg !6294

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6294
  call void @llvm.dbg.value(metadata i8* %8, metadata !6291, metadata !DIExpression()), !dbg !6293
  %9 = load i8, i8* %8, align 1, !dbg !6296
  %10 = icmp eq i8 %9, 0, !dbg !6296
  br i1 %10, label %33, label %11, !dbg !6297

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6291, metadata !DIExpression()), !dbg !6293
  %14 = zext i8 %12 to i32, !dbg !6296
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !6298
  %16 = icmp eq i8* %15, null, !dbg !6297
  br i1 %16, label %21, label %17, !dbg !6299

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6300
  call void @llvm.dbg.value(metadata i8* %18, metadata !6291, metadata !DIExpression()), !dbg !6293
  %19 = load i8, i8* %18, align 1, !dbg !6296
  %20 = icmp eq i8 %19, 0, !dbg !6296
  br i1 %20, label %33, label %11, !dbg !6297, !llvm.loop !6302

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6292, metadata !DIExpression()), !dbg !6293
  %24 = zext i8 %22 to i32, !dbg !6304
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !6305
  %26 = icmp eq i8* %25, null, !dbg !6306
  br i1 %26, label %27, label %31, !dbg !6307

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6308
  call void @llvm.dbg.value(metadata i8* %28, metadata !6292, metadata !DIExpression()), !dbg !6293
  %29 = load i8, i8* %28, align 1, !dbg !6304
  %30 = icmp eq i8 %29, 0, !dbg !6304
  br i1 %30, label %33, label %21, !dbg !6310, !llvm.loop !6311

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6313
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6316
  br label %33, !dbg !6317

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6293
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6293
  store i8* %34, i8** %2, align 4, !dbg !6293
  ret i8* %35, !dbg !6318
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6319 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i8* %1, metadata !6322, metadata !DIExpression()), !dbg !6323
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6324
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6325
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !6326
  ret i8* %0, !dbg !6327
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6330, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i8* %1, metadata !6331, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 %2, metadata !6332, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i8* %0, metadata !6333, metadata !DIExpression()), !dbg !6335
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6336
  call void @llvm.dbg.value(metadata i32 %4, metadata !6334, metadata !DIExpression()), !dbg !6335
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6337
  call void @llvm.dbg.value(metadata i8* %5, metadata !6330, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i8* %1, metadata !6331, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 %2, metadata !6332, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 %2, metadata !6332, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6335
  %6 = icmp eq i32 %2, 0, !dbg !6338
  br i1 %6, label %18, label %7, !dbg !6339

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6340
  call void @llvm.dbg.value(metadata i8* %9, metadata !6330, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i8* %10, metadata !6331, metadata !DIExpression()), !dbg !6335
  %12 = load i8, i8* %10, align 1, !dbg !6341
  %13 = icmp eq i8 %12, 0, !dbg !6342
  br i1 %13, label %18, label %14, !dbg !6343

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6344
  call void @llvm.dbg.value(metadata i8* %15, metadata !6331, metadata !DIExpression()), !dbg !6335
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6346
  call void @llvm.dbg.value(metadata i8* %16, metadata !6330, metadata !DIExpression()), !dbg !6335
  store i8 %12, i8* %9, align 1, !dbg !6347
  call void @llvm.dbg.value(metadata i32 %11, metadata !6332, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.value(metadata i32 %11, metadata !6332, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6335
  %17 = icmp eq i32 %11, 0, !dbg !6338
  br i1 %17, label %18, label %7, !dbg !6339, !llvm.loop !6348

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6335
  store i8 0, i8* %19, align 1, !dbg !6350
  ret i8* %0, !dbg !6351
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6352 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6356, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i8* %1, metadata !6357, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i32 %2, metadata !6358, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i8* %0, metadata !6359, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i8* %1, metadata !6360, metadata !DIExpression()), !dbg !6361
  %4 = icmp eq i32 %2, 0, !dbg !6362
  br i1 %4, label %31, label %5, !dbg !6364

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6360, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i8* %0, metadata !6359, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i32 %2, metadata !6358, metadata !DIExpression()), !dbg !6361
  %6 = add i32 %2, -1, !dbg !6365
  call void @llvm.dbg.value(metadata i32 %6, metadata !6358, metadata !DIExpression()), !dbg !6361
  %7 = icmp eq i32 %6, 0, !dbg !6366
  br i1 %7, label %23, label %8, !dbg !6367

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6368
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6368
  br label %11, !dbg !6368

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6360, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i8* %14, metadata !6359, metadata !DIExpression()), !dbg !6361
  %15 = load i8, i8* %14, align 1, !dbg !6369
  %16 = load i8, i8* %13, align 1, !dbg !6370
  %17 = icmp eq i8 %15, %16, !dbg !6371
  br i1 %17, label %18, label %23, !dbg !6368

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6372
  call void @llvm.dbg.value(metadata i8* %19, metadata !6359, metadata !DIExpression()), !dbg !6361
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6374
  call void @llvm.dbg.value(metadata i8* %20, metadata !6360, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i32 %12, metadata !6358, metadata !DIExpression()), !dbg !6361
  %21 = add i32 %12, -1, !dbg !6365
  call void @llvm.dbg.value(metadata i32 %21, metadata !6358, metadata !DIExpression()), !dbg !6361
  %22 = icmp eq i32 %21, 0, !dbg !6366
  br i1 %22, label %23, label %11, !dbg !6367, !llvm.loop !6375

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6361
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6361
  %26 = load i8, i8* %24, align 1, !dbg !6377
  %27 = zext i8 %26 to i32, !dbg !6377
  %28 = load i8, i8* %25, align 1, !dbg !6378
  %29 = zext i8 %28 to i32, !dbg !6378
  %30 = sub nsw i32 %27, %29, !dbg !6379
  br label %31, !dbg !6380

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6361
  ret i32 %32, !dbg !6381
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6382 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6386, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i8* %1, metadata !6387, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i32 %2, metadata !6388, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i8* %0, metadata !6389, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i8* %1, metadata !6390, metadata !DIExpression()), !dbg !6391
  %4 = ptrtoint i8* %0 to i32, !dbg !6392
  %5 = ptrtoint i8* %1 to i32, !dbg !6392
  %6 = sub i32 %4, %5, !dbg !6392
  %7 = icmp ult i32 %6, %2, !dbg !6394
  br i1 %7, label %10, label %8, !dbg !6395

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6390, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i8* %0, metadata !6389, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i32 %2, metadata !6388, metadata !DIExpression()), !dbg !6391
  %9 = icmp eq i32 %2, 0, !dbg !6396
  br i1 %9, label %26, label %17, !dbg !6398

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6388, metadata !DIExpression()), !dbg !6391
  %12 = add i32 %11, -1, !dbg !6399
  call void @llvm.dbg.value(metadata i32 %12, metadata !6388, metadata !DIExpression()), !dbg !6391
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6402
  %14 = load i8, i8* %13, align 1, !dbg !6402
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6403
  store i8 %14, i8* %15, align 1, !dbg !6404
  %16 = icmp eq i32 %12, 0, !dbg !6405
  br i1 %16, label %26, label %10, !dbg !6406, !llvm.loop !6407

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6390, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i8* %19, metadata !6389, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i32 %20, metadata !6388, metadata !DIExpression()), !dbg !6391
  %21 = load i8, i8* %18, align 1, !dbg !6409
  store i8 %21, i8* %19, align 1, !dbg !6411
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6412
  call void @llvm.dbg.value(metadata i8* %22, metadata !6389, metadata !DIExpression()), !dbg !6391
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6413
  call void @llvm.dbg.value(metadata i8* %23, metadata !6390, metadata !DIExpression()), !dbg !6391
  %24 = add i32 %20, -1, !dbg !6414
  call void @llvm.dbg.value(metadata i32 %24, metadata !6388, metadata !DIExpression()), !dbg !6391
  %25 = icmp eq i32 %24, 0, !dbg !6396
  br i1 %25, label %26, label %17, !dbg !6398, !llvm.loop !6415

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6417
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6418 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6424, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i8* %1, metadata !6425, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i32 %2, metadata !6426, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i8* %0, metadata !6427, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i8* %1, metadata !6428, metadata !DIExpression()), !dbg !6429
  %4 = icmp eq i32 %2, 0, !dbg !6430
  br i1 %4, label %14, label %5, !dbg !6431

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6428, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i8* %7, metadata !6427, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i32 %8, metadata !6426, metadata !DIExpression()), !dbg !6429
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6432
  call void @llvm.dbg.value(metadata i8* %9, metadata !6428, metadata !DIExpression()), !dbg !6429
  %10 = load i8, i8* %6, align 1, !dbg !6434
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6435
  call void @llvm.dbg.value(metadata i8* %11, metadata !6427, metadata !DIExpression()), !dbg !6429
  store i8 %10, i8* %7, align 1, !dbg !6436
  %12 = add i32 %8, -1, !dbg !6437
  call void @llvm.dbg.value(metadata i32 %12, metadata !6426, metadata !DIExpression()), !dbg !6429
  %13 = icmp eq i32 %12, 0, !dbg !6430
  br i1 %13, label %14, label %5, !dbg !6431, !llvm.loop !6438

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6440
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6441 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6445, metadata !DIExpression()), !dbg !6450
  call void @llvm.dbg.value(metadata i32 %1, metadata !6446, metadata !DIExpression()), !dbg !6450
  call void @llvm.dbg.value(metadata i32 %2, metadata !6447, metadata !DIExpression()), !dbg !6450
  call void @llvm.dbg.value(metadata i8* %0, metadata !6448, metadata !DIExpression()), !dbg !6450
  %4 = trunc i32 %1 to i8, !dbg !6451
  call void @llvm.dbg.value(metadata i8 %4, metadata !6449, metadata !DIExpression()), !dbg !6450
  call void @llvm.dbg.value(metadata i32 %2, metadata !6447, metadata !DIExpression()), !dbg !6450
  call void @llvm.dbg.value(metadata i8* %0, metadata !6448, metadata !DIExpression()), !dbg !6450
  %5 = icmp eq i32 %2, 0, !dbg !6452
  br i1 %5, label %12, label %6, !dbg !6453

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6447, metadata !DIExpression()), !dbg !6450
  call void @llvm.dbg.value(metadata i8* %8, metadata !6448, metadata !DIExpression()), !dbg !6450
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6454
  call void @llvm.dbg.value(metadata i8* %9, metadata !6448, metadata !DIExpression()), !dbg !6450
  store i8 %4, i8* %8, align 1, !dbg !6456
  %10 = add i32 %7, -1, !dbg !6457
  call void @llvm.dbg.value(metadata i32 %10, metadata !6447, metadata !DIExpression()), !dbg !6450
  %11 = icmp eq i32 %10, 0, !dbg !6452
  br i1 %11, label %12, label %6, !dbg !6453, !llvm.loop !6458

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6460
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6461 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6465, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 %1, metadata !6466, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i32 %2, metadata !6467, metadata !DIExpression()), !dbg !6471
  %4 = icmp eq i32 %2, 0, !dbg !6472
  br i1 %4, label %17, label %5, !dbg !6473

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6474

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6475
  call void @llvm.dbg.value(metadata i8* %9, metadata !6468, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i32 %8, metadata !6467, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.value(metadata i8* %9, metadata !6468, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6475
  %10 = load i8, i8* %9, align 1, !dbg !6476
  %11 = icmp eq i8 %10, %6, !dbg !6479
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6480
  call void @llvm.dbg.value(metadata i8* %12, metadata !6468, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.value(metadata i32 %13, metadata !6467, metadata !DIExpression()), !dbg !6471
  br i1 %15, label %16, label %7, !dbg !6480, !llvm.loop !6481

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6483

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6471
  ret i8* %19, !dbg !6484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #3 !dbg !6485 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6487, metadata !DIExpression()), !dbg !6488
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6489
  ret void, !dbg !6490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #12 !dbg !6491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6493, metadata !DIExpression()), !dbg !6494
  ret i32 -1, !dbg !6495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6500, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.value(metadata i32* %1, metadata !6501, metadata !DIExpression()), !dbg !6502
  %3 = ptrtoint i32* %1 to i32, !dbg !6503
  %4 = and i32 %3, -2, !dbg !6503
  %5 = icmp eq i32 %4, 2, !dbg !6503
  br i1 %5, label %6, label %9, !dbg !6503

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6504
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !6504
  br label %9, !dbg !6505

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6505
  ret i32 %10, !dbg !6506
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6509, metadata !DIExpression()), !dbg !6511
  call void @llvm.dbg.value(metadata i32* %1, metadata !6510, metadata !DIExpression()), !dbg !6511
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6512
  ret i32 %3, !dbg !6513
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6517, metadata !DIExpression()), !dbg !6519
  call void @llvm.dbg.value(metadata i32* %1, metadata !6518, metadata !DIExpression()), !dbg !6519
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6520, !srcloc !6522
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !6523
  ret i32 %3, !dbg !6524
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6525 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6530, metadata !DIExpression()), !dbg !6534
  call void @llvm.dbg.value(metadata i32* %1, metadata !6531, metadata !DIExpression()), !dbg !6534
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6535
  call void @llvm.dbg.value(metadata i32 %3, metadata !6532, metadata !DIExpression()), !dbg !6534
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !6536
  call void @llvm.dbg.value(metadata i32 %4, metadata !6533, metadata !DIExpression()), !dbg !6534
  %5 = icmp ne i32 %3, %4, !dbg !6537
  %6 = sext i1 %5 to i32, !dbg !6538
  ret i32 %6, !dbg !6539
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6540 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6544, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.value(metadata i32 %1, metadata !6545, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.value(metadata i32 %2, metadata !6546, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.value(metadata i32* %3, metadata !6547, metadata !DIExpression()), !dbg !6548
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6549
  ret i32 %5, !dbg !6550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6551 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6553, metadata !DIExpression()), !dbg !6557
  call void @llvm.dbg.value(metadata i32 %1, metadata !6554, metadata !DIExpression()), !dbg !6557
  call void @llvm.dbg.value(metadata i32 %2, metadata !6555, metadata !DIExpression()), !dbg !6557
  call void @llvm.dbg.value(metadata i32* %3, metadata !6556, metadata !DIExpression()), !dbg !6557
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6558, !srcloc !6560
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !6561
  ret i32 %5, !dbg !6562
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6563 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6565, metadata !DIExpression()), !dbg !6573
  call void @llvm.dbg.value(metadata i32 %1, metadata !6566, metadata !DIExpression()), !dbg !6573
  call void @llvm.dbg.value(metadata i32 %2, metadata !6567, metadata !DIExpression()), !dbg !6573
  call void @llvm.dbg.value(metadata i32* %3, metadata !6568, metadata !DIExpression()), !dbg !6573
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6574
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6576
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6576
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6576
  br i1 %11, label %33, label %12, !dbg !6576

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6573
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6573
  call void @llvm.dbg.value(metadata i8* %14, metadata !6571, metadata !DIExpression()), !dbg !6573
  call void @llvm.dbg.value(metadata i32 %13, metadata !6569, metadata !DIExpression()), !dbg !6573
  call void @llvm.dbg.value(metadata i32 %1, metadata !6570, metadata !DIExpression()), !dbg !6573
  br label %15, !dbg !6577

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6579
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6573
  call void @llvm.dbg.value(metadata i8* %17, metadata !6571, metadata !DIExpression()), !dbg !6573
  call void @llvm.dbg.value(metadata i32 %16, metadata !6570, metadata !DIExpression()), !dbg !6573
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6580
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6583
  call void @llvm.dbg.value(metadata i8* %19, metadata !6571, metadata !DIExpression()), !dbg !6573
  %20 = load i8, i8* %17, align 1, !dbg !6584
  %21 = zext i8 %20 to i32, !dbg !6585
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !6580
  %23 = icmp eq i32 %22, -1, !dbg !6586
  br i1 %23, label %30, label %24, !dbg !6587

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6588
  call void @llvm.dbg.value(metadata i32 %25, metadata !6570, metadata !DIExpression()), !dbg !6573
  %26 = icmp eq i32 %25, 0, !dbg !6589
  br i1 %26, label %27, label %15, !dbg !6590, !llvm.loop !6591

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6593
  call void @llvm.dbg.value(metadata i32 %28, metadata !6569, metadata !DIExpression()), !dbg !6573
  %29 = icmp eq i32 %28, 0, !dbg !6594
  br i1 %29, label %30, label %12, !dbg !6595, !llvm.loop !6596

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6573
  call void @llvm.dbg.value(metadata i32 %31, metadata !6569, metadata !DIExpression()), !dbg !6573
  call void @llvm.dbg.label(metadata !6572), !dbg !6599
  %32 = sub i32 %2, %31, !dbg !6600
  br label %33, !dbg !6601

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6573
  ret i32 %34, !dbg !6602
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6603 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6607, metadata !DIExpression()), !dbg !6608
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6609
  %3 = icmp eq i32 %2, -1, !dbg !6611
  br i1 %3, label %8, label %4, !dbg !6612

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !6613
  %6 = icmp eq i32 %5, -1, !dbg !6614
  %7 = sext i1 %6 to i32, !dbg !6613
  br label %8, !dbg !6615

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6608
  ret i32 %9, !dbg !6616
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !6617 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6619, metadata !DIExpression()), !dbg !6620
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !6621
  ret void, !dbg !6622
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !6623 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6627, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata i32 %1, metadata !6628, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !6629, metadata !DIExpression()), !dbg !6633
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !6634
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !6634
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !6634
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !6630, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata i32 %0, metadata !6632, metadata !DIExpression()), !dbg !6633
  %7 = icmp slt i32 %0, %1, !dbg !6635
  br i1 %7, label %8, label %22, !dbg !6638

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6632, metadata !DIExpression()), !dbg !6633
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !6639
  %11 = icmp eq i32 %10, 0, !dbg !6639
  br i1 %11, label %19, label %12, !dbg !6642

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !6643
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !6645
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !6645
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !6647
  br i1 %15, label %19, label %16, !dbg !6648

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !6649
  %18 = load i8*, i8** %17, align 4, !dbg !6649
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !6650
  br label %19, !dbg !6651

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !6652
  call void @llvm.dbg.value(metadata i32 %20, metadata !6632, metadata !DIExpression()), !dbg !6633
  %21 = icmp eq i32 %20, %1, !dbg !6635
  br i1 %21, label %22, label %8, !dbg !6638, !llvm.loop !6653

22:                                               ; preds = %19, %3
  ret void, !dbg !6655
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #14 !dbg !6656 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6658, metadata !DIExpression()), !dbg !6659
  %2 = shl nuw i32 1, %0, !dbg !6660
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !6663
  ret i32 %3, !dbg !6664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #13 !dbg !6665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6669, metadata !DIExpression()), !dbg !6670
  %2 = shl nuw i32 1, %0, !dbg !6671
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !6674
  ret void, !dbg !6675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6679, metadata !DIExpression()), !dbg !6680
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6681
  ret void, !dbg !6682
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6683 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6685, metadata !DIExpression()), !dbg !6686
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6687
  %3 = and i32 %2, %0, !dbg !6687
  %4 = icmp eq i32 %3, %0, !dbg !6688
  %5 = zext i1 %4 to i32, !dbg !6688
  ret i32 %5, !dbg !6689
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !6690 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6692, metadata !DIExpression()), !dbg !6693
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !6694
  ret void, !dbg !6695
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !6696 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6698, metadata !DIExpression()), !dbg !6699
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !6700
  ret void, !dbg !6701
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !6702 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6704, metadata !DIExpression()), !dbg !6705
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !6706
  ret void, !dbg !6707
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !6708 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6710, metadata !DIExpression()), !dbg !6711
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !6712
  ret void, !dbg !6713
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !6714 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6716, metadata !DIExpression()), !dbg !6717
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !6718
  ret void, !dbg !6719
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !6720 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6722, metadata !DIExpression()), !dbg !6723
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !6724
  ret void, !dbg !6725
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !6726 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6728, metadata !DIExpression()), !dbg !6729
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !6730
  ret void, !dbg !6731
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !6732 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6734, metadata !DIExpression()), !dbg !6735
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !6736
  ret void, !dbg !6737
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !6738 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6740, metadata !DIExpression()), !dbg !6741
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !6742
  ret void, !dbg !6743
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !6744 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6746, metadata !DIExpression()), !dbg !6747
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !6748
  ret void, !dbg !6749
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6750 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6752, metadata !DIExpression()), !dbg !6753
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !6754
  ret i32 0, !dbg !6755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !587 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !591, metadata !DIExpression()), !dbg !6756
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !6757
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !6759
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !6761
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !6763
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !6765
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !6767
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !6769
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !6771
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !6773
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !6775
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !6777
  ret void, !dbg !6779
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6782, metadata !DIExpression()), !dbg !6784
  call void @llvm.dbg.value(metadata i32 0, metadata !6783, metadata !DIExpression()), !dbg !6784
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !6785
  %3 = load i32, i32* %2, align 4, !dbg !6785
  call void @llvm.dbg.value(metadata i32 %3, metadata !6783, metadata !DIExpression()), !dbg !6784
  %4 = shl nuw i32 1, %0, !dbg !6786
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !6787
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !6788
  ret void, !dbg !6789
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6792, metadata !DIExpression()), !dbg !6793
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6794
  %3 = or i32 %2, %0, !dbg !6794
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6794
  ret void, !dbg !6795
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #13 !dbg !6796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6798, metadata !DIExpression()), !dbg !6799
  %2 = icmp slt i32 %0, 32, !dbg !6800
  br i1 %2, label %3, label %5, !dbg !6802

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !6803
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !6805
  br label %5, !dbg !6806

5:                                                ; preds = %1, %3
  ret void, !dbg !6807
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6810, metadata !DIExpression()), !dbg !6811
  %2 = xor i32 %0, -1, !dbg !6812
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6812
  %4 = and i32 %3, %2, !dbg !6812
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6812
  ret void, !dbg !6813
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !6814 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6818, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.value(metadata i32 %1, metadata !6819, metadata !DIExpression()), !dbg !6820
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !6821

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !6822
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !6824
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !6825
  br label %11, !dbg !6826

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !6827
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !6828
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !6829
  br label %11, !dbg !6830

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !6831
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !6832
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !6833
  br label %11, !dbg !6834

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !6835
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !6836
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !6837
  br label %11, !dbg !6838

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !6839
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6842, metadata !DIExpression()), !dbg !6843
  %2 = xor i32 %0, -1, !dbg !6844
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6844
  %4 = and i32 %3, %2, !dbg !6844
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6844
  ret void, !dbg !6845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6848, metadata !DIExpression()), !dbg !6849
  %2 = xor i32 %0, -1, !dbg !6850
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6850
  %4 = and i32 %3, %2, !dbg !6850
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6850
  ret void, !dbg !6851
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6854, metadata !DIExpression()), !dbg !6855
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6856
  %3 = or i32 %2, %0, !dbg !6856
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6856
  ret void, !dbg !6857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6860, metadata !DIExpression()), !dbg !6861
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6862
  %3 = or i32 %2, %0, !dbg !6862
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6862
  ret void, !dbg !6863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !6864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6868, metadata !DIExpression()), !dbg !6874
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6869, metadata !DIExpression()), !dbg !6874
  call void @llvm.dbg.value(metadata i8* %2, metadata !6870, metadata !DIExpression()), !dbg !6874
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !6871, metadata !DIExpression()), !dbg !6874
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6873, metadata !DIExpression()), !dbg !6874
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6875
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !6875
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !6877
  br i1 %6, label %7, label %9, !dbg !6878

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !6879
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6880
  store i8* %2, i8** %8, align 4, !dbg !6881
  br label %9, !dbg !6882

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !6874
  ret i32 %10, !dbg !6883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #3 !dbg !6884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6886, metadata !DIExpression()), !dbg !6889
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !6887, metadata !DIExpression()), !dbg !6889
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6888, metadata !DIExpression()), !dbg !6889
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6890
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !6891
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6892
  store i8* null, i8** %3, align 4, !dbg !6893
  ret void, !dbg !6894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6895 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6897, metadata !DIExpression()), !dbg !6902
  call void @llvm.dbg.value(metadata i8* %1, metadata !6898, metadata !DIExpression()), !dbg !6902
  call void @llvm.dbg.value(metadata i8* %1, metadata !6899, metadata !DIExpression()), !dbg !6902
  %3 = bitcast i8* %1 to i32*, !dbg !6903
  %4 = load i32, i32* %3, align 4, !dbg !6903
  %5 = add i32 %4, -169, !dbg !6903
  %6 = icmp ult i32 %5, -121, !dbg !6903
  br i1 %6, label %15, label %7, !dbg !6905

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6906
  %9 = inttoptr i32 %8 to i32*, !dbg !6907
  call void @llvm.dbg.value(metadata i32* %9, metadata !6900, metadata !DIExpression()), !dbg !6902
  %10 = load volatile i32, i32* %9, align 4, !dbg !6908
  call void @llvm.dbg.value(metadata i32 %10, metadata !6901, metadata !DIExpression()), !dbg !6902
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6909
  %12 = bitcast i8* %11 to i32*, !dbg !6909
  %13 = load i32, i32* %12, align 4, !dbg !6909
  %14 = or i32 %13, %10, !dbg !6910
  call void @llvm.dbg.value(metadata i32 %14, metadata !6901, metadata !DIExpression()), !dbg !6902
  store volatile i32 %14, i32* %9, align 4, !dbg !6911
  br label %15, !dbg !6912

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6902
  ret i32 %16, !dbg !6913
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6914 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6916, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.value(metadata i8* %1, metadata !6917, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.value(metadata i8* %1, metadata !6918, metadata !DIExpression()), !dbg !6921
  %3 = bitcast i8* %1 to i32*, !dbg !6922
  %4 = load i32, i32* %3, align 4, !dbg !6922
  %5 = add i32 %4, -169, !dbg !6922
  %6 = icmp ult i32 %5, -121, !dbg !6922
  br i1 %6, label %16, label %7, !dbg !6924

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6925
  %9 = inttoptr i32 %8 to i32*, !dbg !6926
  call void @llvm.dbg.value(metadata i32* %9, metadata !6919, metadata !DIExpression()), !dbg !6921
  %10 = load volatile i32, i32* %9, align 4, !dbg !6927
  call void @llvm.dbg.value(metadata i32 %10, metadata !6920, metadata !DIExpression()), !dbg !6921
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6928
  %12 = bitcast i8* %11 to i32*, !dbg !6928
  %13 = load i32, i32* %12, align 4, !dbg !6928
  %14 = xor i32 %13, -1, !dbg !6929
  %15 = and i32 %10, %14, !dbg !6930
  call void @llvm.dbg.value(metadata i32 %15, metadata !6920, metadata !DIExpression()), !dbg !6921
  store volatile i32 %15, i32* %9, align 4, !dbg !6931
  br label %16, !dbg !6932

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6921
  ret i32 %17, !dbg !6933
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !6934 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6936, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.value(metadata i8* %1, metadata !6937, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.value(metadata i32* %2, metadata !6938, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.value(metadata i8* %1, metadata !6939, metadata !DIExpression()), !dbg !6944
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !6945
  call void @llvm.dbg.value(metadata i32 %4, metadata !6940, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.value(metadata i32 undef, metadata !6941, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.value(metadata i32 undef, metadata !6942, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.value(metadata i32 %4, metadata !6943, metadata !DIExpression()), !dbg !6944
  %5 = bitcast i8* %1 to i32*, !dbg !6946
  %6 = load i32, i32* %5, align 4, !dbg !6946
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !6947

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !6948
  call void @llvm.dbg.value(metadata i32 %8, metadata !6941, metadata !DIExpression()), !dbg !6944
  br label %19, !dbg !6949

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !6951
  call void @llvm.dbg.value(metadata i32 %10, metadata !6942, metadata !DIExpression()), !dbg !6944
  br label %19, !dbg !6952

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !6953
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !6954
  br label %19, !dbg !6955

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !6956
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #24, !dbg !6957
  br label %19, !dbg !6958

17:                                               ; preds = %3
  br label %19, !dbg !6959

18:                                               ; preds = %3
  br label %19, !dbg !6960

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !6961
  br label %21, !dbg !6962

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !6944
  ret i32 %22, !dbg !6962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #13 !dbg !6963 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6965, metadata !DIExpression()), !dbg !6973
  call void @llvm.dbg.value(metadata i8* %1, metadata !6966, metadata !DIExpression()), !dbg !6973
  call void @llvm.dbg.value(metadata i8* %2, metadata !6967, metadata !DIExpression()), !dbg !6973
  call void @llvm.dbg.value(metadata i8* %1, metadata !6968, metadata !DIExpression()), !dbg !6973
  %4 = bitcast i8* %1 to i32*, !dbg !6974
  %5 = load i32, i32* %4, align 4, !dbg !6974
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !6975
  call void @llvm.dbg.value(metadata i32 %6, metadata !6972, metadata !DIExpression()), !dbg !6973
  %7 = icmp slt i32 %6, 0, !dbg !6976
  br i1 %7, label %22, label %8, !dbg !6978

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6968, metadata !DIExpression()), !dbg !6973
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6979
  %10 = bitcast i8* %9 to i32*, !dbg !6979
  %11 = load i32, i32* %10, align 4, !dbg !6979
  %12 = lshr i32 %11, 16, !dbg !6979
  %13 = and i32 %12, 7, !dbg !6979
  %14 = lshr i32 %11, 8, !dbg !6980
  %15 = and i32 %14, 31, !dbg !6980
  %16 = shl i32 %13, %15, !dbg !6981
  call void @llvm.dbg.value(metadata i32 %16, metadata !6971, metadata !DIExpression()), !dbg !6973
  %17 = and i32 %11, 255, !dbg !6982
  %18 = or i32 %17, 1073887232, !dbg !6983
  %19 = inttoptr i32 %18 to i32*, !dbg !6984
  call void @llvm.dbg.value(metadata i32* %19, metadata !6969, metadata !DIExpression()), !dbg !6973
  %20 = load volatile i32, i32* %19, align 4, !dbg !6985
  call void @llvm.dbg.value(metadata i32 %20, metadata !6970, metadata !DIExpression()), !dbg !6973
  %21 = or i32 %16, %20, !dbg !6986
  call void @llvm.dbg.value(metadata i32 %21, metadata !6970, metadata !DIExpression()), !dbg !6973
  store volatile i32 %21, i32* %19, align 4, !dbg !6987
  br label %22, !dbg !6988

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !6973
  ret i32 %23, !dbg !6989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #12 !dbg !6990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6994, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i32 0, metadata !6995, metadata !DIExpression()), !dbg !6996
  %2 = add i32 %0, -1, !dbg !6997
  %3 = icmp ult i32 %2, 6, !dbg !6997
  br i1 %3, label %4, label %7, !dbg !6997

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !6997
  %6 = load i32, i32* %5, align 4, !dbg !6997
  call void @llvm.dbg.value(metadata i32 %6, metadata !6995, metadata !DIExpression()), !dbg !6996
  br label %7, !dbg !6998

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !6996
  ret i32 %8, !dbg !6999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !7000 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7004, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i32 %1, metadata !7005, metadata !DIExpression()), !dbg !7006
  %3 = udiv i32 %0, %1, !dbg !7007
  ret i32 %3, !dbg !7008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !7009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7013, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.value(metadata i32 8, metadata !7014, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.value(metadata i32 84, metadata !7015, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.value(metadata i32 %1, metadata !7016, metadata !DIExpression()), !dbg !7017
  %3 = mul i32 %0, 84, !dbg !7018
  %4 = shl nsw i32 %1, 3, !dbg !7019
  %5 = udiv i32 %3, %4, !dbg !7020
  ret i32 %5, !dbg !7021
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !7022 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !7024, metadata !DIExpression()), !dbg !7027
  tail call void @config_enable_default_clocks() #25, !dbg !7028
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !7029
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !7029
  %4 = lshr i32 %3, 4, !dbg !7029
  %5 = and i32 %4, 15, !dbg !7029
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !7029
  %7 = load i8, i8* %6, align 1, !dbg !7029
  %8 = zext i8 %7 to i32, !dbg !7029
  %9 = lshr i32 %2, %8, !dbg !7029
  call void @llvm.dbg.value(metadata i32 %9, metadata !7025, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !7026, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !7027
  %10 = icmp ult i32 %9, 84000000, !dbg !7030
  br i1 %10, label %11, label %13, !dbg !7032

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !7033
  br label %13, !dbg !7035

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !7036
  tail call fastcc void @set_up_plls() #24, !dbg !7037
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !7038
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !7041
  br label %14, !dbg !7042

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7043
  %16 = icmp eq i32 %15, 8, !dbg !7044
  br i1 %16, label %17, label %14, !dbg !7042, !llvm.loop !7045

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !7047
  br i1 %18, label %19, label %21, !dbg !7049

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !7050
  br label %21, !dbg !7052

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !7053
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !7054
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !7055
  ret i32 0, !dbg !7056
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #14 !dbg !7057 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7059
  %2 = and i32 %1, 240, !dbg !7059
  ret i32 %2, !dbg !7060
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #13 !dbg !7061 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !7062
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !7067
  br label %1, !dbg !7068

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !7069
  %3 = icmp eq i32 %2, 1, !dbg !7070
  br i1 %3, label %4, label %1, !dbg !7068, !llvm.loop !7071

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !7073
  br label %5, !dbg !7076

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !7077
  %7 = icmp eq i32 %6, 1, !dbg !7078
  br i1 %7, label %8, label %5, !dbg !7076, !llvm.loop !7079

8:                                                ; preds = %5
  ret void, !dbg !7081
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !7082 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7083
  %2 = icmp eq i32 %1, 8, !dbg !7085
  br i1 %2, label %3, label %4, !dbg !7086

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !7087
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !7089
  br label %4, !dbg !7090

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !7091
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7092
  %6 = and i32 %5, -196609, !dbg !7092
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7092
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7093
  %8 = and i32 %7, -251658241, !dbg !7093
  %9 = or i32 %8, 134217728, !dbg !7093
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7093
  tail call void @config_pll_sysclock() #25, !dbg !7094
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !7095
  br label %10, !dbg !7096

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !7097
  %12 = icmp eq i32 %11, 1, !dbg !7098
  br i1 %12, label %13, label %10, !dbg !7096, !llvm.loop !7099

13:                                               ; preds = %10
  ret void, !dbg !7101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #13 !dbg !7102 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7104, metadata !DIExpression()), !dbg !7105
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7106
  %2 = and i32 %1, -241, !dbg !7106
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7106
  ret void, !dbg !7107
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #13 !dbg !7108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7110, metadata !DIExpression()), !dbg !7111
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7112
  %3 = and i32 %2, -4, !dbg !7112
  %4 = or i32 %3, %0, !dbg !7112
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7112
  ret void, !dbg !7113
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #14 !dbg !7114 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7115
  %2 = and i32 %1, 12, !dbg !7115
  ret i32 %2, !dbg !7116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #13 !dbg !7117 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !7119, metadata !DIExpression()), !dbg !7120
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7121
  %2 = and i32 %1, -7169, !dbg !7121
  %3 = or i32 %2, 4096, !dbg !7121
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7121
  ret void, !dbg !7122
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #13 !dbg !7123 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7125, metadata !DIExpression()), !dbg !7126
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7127
  %2 = and i32 %1, -57345, !dbg !7127
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7127
  ret void, !dbg !7128
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #13 !dbg !7129 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7130
  %2 = icmp eq i32 %1, 1, !dbg !7132
  br i1 %2, label %7, label %3, !dbg !7133

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !7134
  br label %4, !dbg !7136

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !7137
  %6 = icmp eq i32 %5, 1, !dbg !7138
  br i1 %6, label %7, label %4, !dbg !7136, !llvm.loop !7139

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !7141
  br label %8, !dbg !7142

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !7143
  %10 = icmp eq i32 %9, 0, !dbg !7144
  br i1 %10, label %11, label %8, !dbg !7142, !llvm.loop !7145

11:                                               ; preds = %8
  ret void, !dbg !7147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #13 !dbg !7148 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7149
  %2 = and i32 %1, -16777217, !dbg !7149
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7149
  ret void, !dbg !7150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #13 !dbg !7151 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7152
  %2 = or i32 %1, 16777216, !dbg !7152
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7152
  ret void, !dbg !7153
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #14 !dbg !7154 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7155
  %2 = lshr i32 %1, 25, !dbg !7156
  %3 = and i32 %2, 1, !dbg !7156
  ret i32 %3, !dbg !7157
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #14 !dbg !7158 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7159
  %2 = lshr i32 %1, 1, !dbg !7160
  %3 = and i32 %2, 1, !dbg !7160
  ret i32 %3, !dbg !7161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #13 !dbg !7162 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7163
  %2 = or i32 %1, 1, !dbg !7163
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7163
  ret void, !dbg !7164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #13 !dbg !7165 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7166
  %2 = and i32 %1, -262145, !dbg !7166
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7166
  ret void, !dbg !7167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #13 !dbg !7168 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7169
  %2 = or i32 %1, 65536, !dbg !7169
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7169
  ret void, !dbg !7170
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #14 !dbg !7171 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7172
  %2 = lshr i32 %1, 17, !dbg !7173
  %3 = and i32 %2, 1, !dbg !7173
  ret i32 %3, !dbg !7174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #13 !dbg !7175 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7176
  %2 = or i32 %1, 1, !dbg !7176
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7176
  ret void, !dbg !7177
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #14 !dbg !7178 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7179
  %2 = lshr i32 %1, 1, !dbg !7180
  %3 = and i32 %2, 1, !dbg !7180
  ret i32 %3, !dbg !7181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #12 !dbg !7182 {
  ret i32 16000000, !dbg !7184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #13 !dbg !7188 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !7189
  ret void, !dbg !7190
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #13 !dbg !7191 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !7195, metadata !DIExpression()), !dbg !7199
  call void @llvm.dbg.value(metadata i32 8, metadata !7196, metadata !DIExpression()), !dbg !7199
  call void @llvm.dbg.value(metadata i32 84, metadata !7197, metadata !DIExpression()), !dbg !7199
  call void @llvm.dbg.value(metadata i32 0, metadata !7198, metadata !DIExpression()), !dbg !7199
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7200
  %2 = and i32 %1, -4227072, !dbg !7200
  %3 = or i32 %2, 4199688, !dbg !7200
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7200
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7201
  %5 = and i32 %4, -196609, !dbg !7201
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7201
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7202
  %7 = and i32 %6, -1879048193, !dbg !7202
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7202
  ret void, !dbg !7203
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !7204 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !7205
  ret void, !dbg !7206
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !7207 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !7210, metadata !DIExpression()), !dbg !7212
  %2 = bitcast i32* %1 to i8*, !dbg !7213
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7213
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7211, metadata !DIExpression()), !dbg !7214
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7215
  %4 = or i32 %3, 268435456, !dbg !7215
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7215
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7216
  %6 = and i32 %5, 268435456, !dbg !7216
  store volatile i32 %6, i32* %1, align 4, !dbg !7217
  %7 = load volatile i32, i32* %1, align 4, !dbg !7218
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7219
  ret void, !dbg !7219
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7220 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7222, metadata !DIExpression()), !dbg !7223
  %2 = tail call fastcc zeroext i1 @device_is_ready.37() #24, !dbg !7224
  br i1 %2, label %3, label %4, !dbg !7226

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !7227
  br label %4, !dbg !7228

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7223
  ret i32 %5, !dbg !7229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.37() unnamed_addr #1 !dbg !7230 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7234, metadata !DIExpression()), !dbg !7235
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7236, !srcloc !7238
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.38() #24, !dbg !7239
  ret i1 %1, !dbg !7240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7241 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7242
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7243
  ret void, !dbg !7244
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7247, metadata !DIExpression()), !dbg !7248
  %2 = icmp eq i32 %0, 10, !dbg !7249
  br i1 %2, label %3, label %4, !dbg !7251

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !7252
  br label %4, !dbg !7254

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7255
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !7256
  ret i32 %0, !dbg !7257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7258 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7261, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.value(metadata i8 %0, metadata !7262, metadata !DIExpression()), !dbg !7263
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7264, !srcloc !7266
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !7267
  ret void, !dbg !7268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7269 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7271, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata i8 %0, metadata !7272, metadata !DIExpression()), !dbg !7274
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7275
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7273, metadata !DIExpression()), !dbg !7274
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7276
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7276
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #25, !dbg !7277
  ret void, !dbg !7278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.38() unnamed_addr #1 !dbg !7279 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !7281, metadata !DIExpression()), !dbg !7282
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !7283
  ret i1 %1, !dbg !7284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #12 !dbg !7285 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7332, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7333, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7334, metadata !DIExpression()), !dbg !7335
  ret void, !dbg !7336
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7337 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7339, metadata !DIExpression()), !dbg !7344
  call void @llvm.dbg.value(metadata i8 %1, metadata !7340, metadata !DIExpression()), !dbg !7344
  call void @llvm.dbg.value(metadata i32 %2, metadata !7341, metadata !DIExpression()), !dbg !7344
  %5 = bitcast i32* %4 to i8*, !dbg !7345
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7345
  call void @llvm.dbg.value(metadata i32* %4, metadata !7343, metadata !DIExpression(DW_OP_deref)), !dbg !7344
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !7346
  call void @llvm.dbg.value(metadata i32 %6, metadata !7342, metadata !DIExpression()), !dbg !7344
  %7 = icmp eq i32 %6, 0, !dbg !7347
  br i1 %7, label %8, label %31, !dbg !7349

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7342, metadata !DIExpression()), !dbg !7344
  %9 = and i32 %2, 131072, !dbg !7350
  %10 = icmp eq i32 %9, 0, !dbg !7352
  br i1 %10, label %28, label %11, !dbg !7353

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7354
  %13 = icmp eq i32 %12, 0, !dbg !7357
  br i1 %13, label %18, label %14, !dbg !7358

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7359
  %16 = shl nuw i32 1, %15, !dbg !7359
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !7361
  br label %25, !dbg !7362

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7363
  %20 = icmp eq i32 %19, 0, !dbg !7365
  %21 = zext i8 %1 to i32, !dbg !7344
  br i1 %20, label %25, label %22, !dbg !7366

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7367
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !7369
  br label %25, !dbg !7370

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7371
  %27 = load i32, i32* %4, align 4, !dbg !7372
  call void @llvm.dbg.value(metadata i32 %30, metadata !7343, metadata !DIExpression()), !dbg !7344
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !7373
  br label %31, !dbg !7374

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7371
  %30 = load i32, i32* %4, align 4, !dbg !7372
  call void @llvm.dbg.value(metadata i32 %30, metadata !7343, metadata !DIExpression()), !dbg !7344
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !7373
  call void @llvm.dbg.value(metadata i32 0, metadata !7342, metadata !DIExpression()), !dbg !7344
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7375
  ret i32 %6, !dbg !7375
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #14 !dbg !7376 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7380, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i32* %1, metadata !7381, metadata !DIExpression()), !dbg !7385
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7386
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7386
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7386
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7382, metadata !DIExpression()), !dbg !7385
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7387
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7387
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7387
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7384, metadata !DIExpression()), !dbg !7385
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !7388
  store i32 %9, i32* %1, align 4, !dbg !7389
  ret i32 0, !dbg !7390
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #13 !dbg !7391 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7393, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.value(metadata i32 %1, metadata !7394, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.value(metadata i32 %2, metadata !7395, metadata !DIExpression()), !dbg !7399
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7400
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7400
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7400
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7396, metadata !DIExpression()), !dbg !7399
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7401
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7401
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7401
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7397, metadata !DIExpression()), !dbg !7399
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !7402
  call void @llvm.dbg.value(metadata i32 %10, metadata !7398, metadata !DIExpression()), !dbg !7399
  %11 = xor i32 %1, -1, !dbg !7403
  %12 = and i32 %10, %11, !dbg !7404
  %13 = and i32 %2, %1, !dbg !7405
  %14 = or i32 %12, %13, !dbg !7406
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !7407
  ret i32 0, !dbg !7408
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7409 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7411, metadata !DIExpression()), !dbg !7415
  call void @llvm.dbg.value(metadata i32 %1, metadata !7412, metadata !DIExpression()), !dbg !7415
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7416
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7416
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7416
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7413, metadata !DIExpression()), !dbg !7415
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7417
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7417
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7417
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7414, metadata !DIExpression()), !dbg !7415
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7418
  store volatile i32 %1, i32* %9, align 4, !dbg !7418
  ret i32 0, !dbg !7419
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7420 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7422, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.value(metadata i32 %1, metadata !7423, metadata !DIExpression()), !dbg !7426
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7427
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7427
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7427
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7424, metadata !DIExpression()), !dbg !7426
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7428
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7428
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7428
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7425, metadata !DIExpression()), !dbg !7426
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !7429
  ret i32 0, !dbg !7430
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7431 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7433, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.value(metadata i32 %1, metadata !7434, metadata !DIExpression()), !dbg !7437
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7438
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7438
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7438
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7435, metadata !DIExpression()), !dbg !7437
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7439
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7439
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7439
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7436, metadata !DIExpression()), !dbg !7437
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7440
  %10 = load volatile i32, i32* %9, align 4, !dbg !7440
  %11 = xor i32 %10, %1, !dbg !7440
  store volatile i32 %11, i32* %9, align 4, !dbg !7440
  ret i32 0, !dbg !7441
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7442 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7444, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i8 %1, metadata !7445, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i32 %2, metadata !7446, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i32 %3, metadata !7447, metadata !DIExpression()), !dbg !7454
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7455
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7455
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7455
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7448, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i8* undef, metadata !7449, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i32 0, metadata !7451, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i32 0, metadata !7452, metadata !DIExpression()), !dbg !7454
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7456

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7457
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !7461
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7462
  %12 = load i32, i32* %11, align 4, !dbg !7462
  %13 = icmp eq i32 %10, %12, !dbg !7463
  br i1 %13, label %14, label %29, !dbg !7464

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !7465
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !7467
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !7468
  br label %29, !dbg !7469

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7470
  %17 = load i8*, i8** %16, align 4, !dbg !7470
  call void @llvm.dbg.value(metadata i8* %17, metadata !7449, metadata !DIExpression()), !dbg !7454
  %18 = zext i8 %1 to i32, !dbg !7471
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !7473
  %20 = icmp eq i32 %19, 0, !dbg !7474
  br i1 %20, label %21, label %29, !dbg !7475

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7476
  %23 = load i32, i32* %22, align 4, !dbg !7476
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !7477
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7478

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7451, metadata !DIExpression()), !dbg !7454
  br label %27, !dbg !7479

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7451, metadata !DIExpression()), !dbg !7454
  br label %27, !dbg !7481

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7451, metadata !DIExpression()), !dbg !7454
  br label %27, !dbg !7482

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7454
  call void @llvm.dbg.value(metadata i32 %28, metadata !7451, metadata !DIExpression()), !dbg !7454
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !7483
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !7484
  br label %29, !dbg !7484

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7454
  call void @llvm.dbg.value(metadata i32 %30, metadata !7452, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.label(metadata !7453), !dbg !7485
  ret i32 %30, !dbg !7486
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #11 !dbg !7487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7489, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7490, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.value(metadata i1 %2, metadata !7491, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7493
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7494
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7494
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7494
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7492, metadata !DIExpression()), !dbg !7493
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7495
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !7496
  ret i32 %8, !dbg !7497
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !7498 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7504, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7505, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.value(metadata i1 %2, metadata !7506, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7507
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !7508
  br i1 %4, label %10, label %5, !dbg !7510

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7511
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #24, !dbg !7514
  %8 = or i1 %7, %2, !dbg !7515
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7515
  br i1 %2, label %11, label %13, !dbg !7515

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7516

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7517
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #24, !dbg !7520
  br label %13, !dbg !7521

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7507
  ret i32 %14, !dbg !7522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7523 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7527, metadata !DIExpression()), !dbg !7528
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7529
  %3 = icmp eq %struct._snode* %2, null, !dbg !7529
  ret i1 %3, !dbg !7529
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !7530 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7534, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7535, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7536, metadata !DIExpression()), !dbg !7538
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7539
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7537, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7536, metadata !DIExpression()), !dbg !7538
  %4 = icmp eq %struct._snode* %3, null, !dbg !7541
  br i1 %4, label %15, label %5, !dbg !7539

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7537, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7536, metadata !DIExpression()), !dbg !7538
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7543
  br i1 %6, label %9, label %11, !dbg !7546

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7537, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7536, metadata !DIExpression()), !dbg !7538
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7543
  br i1 %8, label %9, label %11, !dbg !7546, !llvm.loop !7547

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !7548
  br label %15, !dbg !7548

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7537, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7536, metadata !DIExpression()), !dbg !7538
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !7541
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7537, metadata !DIExpression()), !dbg !7538
  %14 = icmp eq %struct._snode* %13, null, !dbg !7541
  br i1 %14, label %15, label %7, !dbg !7539, !llvm.loop !7547

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !7551 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7555, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7556, metadata !DIExpression()), !dbg !7557
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7558
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !7558
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !7558
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7559
  %5 = icmp eq %struct._snode* %4, null, !dbg !7559
  br i1 %5, label %6, label %8, !dbg !7558

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7561
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !7561
  br label %8, !dbg !7561

8:                                                ; preds = %6, %2
  ret void, !dbg !7558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7563 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7567, metadata !DIExpression()), !dbg !7568
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7569
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7569
  ret %struct._snode* %3, !dbg !7570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7571 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7575, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7576, metadata !DIExpression()), !dbg !7577
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7578
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7579
  ret void, !dbg !7580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7581 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7583, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7584, metadata !DIExpression()), !dbg !7585
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7586
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7587
  ret void, !dbg !7588
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7589 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7591, metadata !DIExpression()), !dbg !7592
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7593
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7593
  ret %struct._snode* %3, !dbg !7594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7595 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7597, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7598, metadata !DIExpression()), !dbg !7599
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7600
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7601
  ret void, !dbg !7602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !7603 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7607, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7608, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7609, metadata !DIExpression()), !dbg !7610
  %4 = icmp eq %struct._snode* %1, null, !dbg !7611
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !7613
  br i1 %4, label %6, label %11, !dbg !7614

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !7615
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7617
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7617
  br i1 %8, label %9, label %15, !dbg !7615

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7619
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !7619
  br label %15, !dbg !7619

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !7621
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !7623
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7623
  br i1 %13, label %14, label %15, !dbg !7621

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !7625
  br label %15, !dbg !7625

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !7614
  ret void, !dbg !7614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !7627 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7631, metadata !DIExpression()), !dbg !7632
  %2 = icmp eq %struct._snode* %0, null, !dbg !7633
  br i1 %2, label %5, label %3, !dbg !7633

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !7633
  br label %5, !dbg !7633

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7633
  ret %struct._snode* %6, !dbg !7633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7634 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7636, metadata !DIExpression()), !dbg !7637
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !7638
  ret %struct._snode* %2, !dbg !7638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7639 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7641, metadata !DIExpression()), !dbg !7642
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7643
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7643
  ret %struct._snode* %3, !dbg !7644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !7645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7647, metadata !DIExpression()), !dbg !7650
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !7651, !range !7652
  call void @llvm.dbg.value(metadata i32 %2, metadata !7648, metadata !DIExpression()), !dbg !7650
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !7653
  call void @llvm.dbg.value(metadata i32 %3, metadata !7649, metadata !DIExpression()), !dbg !7650
  ret i32 %3, !dbg !7654
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !7655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7657, metadata !DIExpression()), !dbg !7660
  call void @llvm.dbg.value(metadata i8* %1, metadata !7658, metadata !DIExpression()), !dbg !7660
  call void @llvm.dbg.value(metadata i8* %1, metadata !7659, metadata !DIExpression()), !dbg !7660
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !7661
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !7661
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7662
  %6 = bitcast i8* %5 to %struct.device**, !dbg !7662
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !7662
  %8 = shl nuw i32 1, %0, !dbg !7663
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !7664
  ret void, !dbg !7665
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7666 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !7670, metadata !DIExpression()), !dbg !7676
  call void @llvm.dbg.value(metadata i32 %1, metadata !7671, metadata !DIExpression()), !dbg !7676
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7672, metadata !DIExpression()), !dbg !7676
  %4 = bitcast i64* %3 to i8*, !dbg !7677
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7677
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !7674, metadata !DIExpression()), !dbg !7676
  store i64 70368744177732, i64* %3, align 8, !dbg !7678
  call void @llvm.dbg.value(metadata i64* %3, metadata !7674, metadata !DIExpression(DW_OP_deref)), !dbg !7676
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !7679
  call void @llvm.dbg.value(metadata i32 %5, metadata !7675, metadata !DIExpression()), !dbg !7676
  %6 = icmp eq i32 %5, 0, !dbg !7680
  br i1 %6, label %7, label %8, !dbg !7682

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !7683
  br label %8, !dbg !7684

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7685
  ret void, !dbg !7685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !7686 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7688, metadata !DIExpression()), !dbg !7691
  call void @llvm.dbg.value(metadata i8* %0, metadata !7689, metadata !DIExpression()), !dbg !7691
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !7692
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !7690, metadata !DIExpression()), !dbg !7691
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !7693
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !7693
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !7694
  ret i32 %5, !dbg !7695
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7698, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.value(metadata i32 %1, metadata !7699, metadata !DIExpression()), !dbg !7701
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !7702
  call void @llvm.dbg.value(metadata i32 %3, metadata !7700, metadata !DIExpression()), !dbg !7701
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !7703
  ret void, !dbg !7704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #12 !dbg !7705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7709, metadata !DIExpression()), !dbg !7710
  %2 = sdiv i32 %0, 4, !dbg !7711
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !7712
  %6 = add nsw i32 %5, 16, !dbg !7713
  %7 = shl i32 15, %6, !dbg !7714
  %8 = or i32 %7, %2, !dbg !7715
  ret i32 %8, !dbg !7716
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7721, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.value(metadata i32 %1, metadata !7722, metadata !DIExpression()), !dbg !7723
  %3 = and i32 %1, 255, !dbg !7724
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !7724
  %5 = load volatile i32, i32* %4, align 4, !dbg !7724
  %6 = lshr i32 %1, 16, !dbg !7724
  %7 = xor i32 %6, -1, !dbg !7724
  %8 = and i32 %5, %7, !dbg !7724
  call void @llvm.dbg.value(metadata i32 %6, metadata !7725, metadata !DIExpression()) #23, !dbg !7729
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7731, !srcloc !7732
  call void @llvm.dbg.value(metadata i32 %9, metadata !7728, metadata !DIExpression()) #23, !dbg !7729
  call void @llvm.dbg.value(metadata i32 %9, metadata !7733, metadata !DIExpression()) #23, !dbg !7738
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !7740, !range !5946
  %11 = shl i32 %0, %10, !dbg !7724
  %12 = or i32 %11, %8, !dbg !7724
  store volatile i32 %12, i32* %4, align 4, !dbg !7724
  ret void, !dbg !7741
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7742 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7746, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7747, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata i32 %2, metadata !7748, metadata !DIExpression()), !dbg !7751
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !7752
  %5 = icmp eq %struct._snode* %4, null, !dbg !7752
  br i1 %5, label %21, label %6, !dbg !7752

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !7754
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7750, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !7749, metadata !DIExpression()), !dbg !7751
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7755
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !7755
  %11 = load i32, i32* %10, align 4, !dbg !7755
  %12 = and i32 %11, %2, !dbg !7759
  %13 = icmp eq i32 %12, 0, !dbg !7759
  br i1 %13, label %19, label %14, !dbg !7760

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !7749, metadata !DIExpression()), !dbg !7751
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7761
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7761
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7761
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !7763
  br label %19, !dbg !7764

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7749, metadata !DIExpression()), !dbg !7751
  %20 = icmp eq %struct._snode* %8, null, !dbg !7765
  br i1 %20, label %21, label %6, !dbg !7765

21:                                               ; preds = %19, %3
  ret void, !dbg !7766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !7767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7769, metadata !DIExpression()), !dbg !7770
  %2 = and i32 %0, 255, !dbg !7771
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !7771
  %4 = load volatile i32, i32* %3, align 4, !dbg !7771
  %5 = lshr i32 %0, 16, !dbg !7771
  %6 = and i32 %4, %5, !dbg !7771
  call void @llvm.dbg.value(metadata i32 %5, metadata !7725, metadata !DIExpression()) #23, !dbg !7772
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !7774, !srcloc !7732
  call void @llvm.dbg.value(metadata i32 %7, metadata !7728, metadata !DIExpression()) #23, !dbg !7772
  call void @llvm.dbg.value(metadata i32 %7, metadata !7733, metadata !DIExpression()) #23, !dbg !7775
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7777, !range !5946
  %9 = lshr i32 %6, %8, !dbg !7778
  ret i32 %9, !dbg !7779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7780 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7785, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata i32 %1, metadata !7786, metadata !DIExpression()), !dbg !7787
  %3 = shl i32 %1, 16, !dbg !7788
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !7788
  store volatile i32 %3, i32* %4, align 4, !dbg !7788
  ret void, !dbg !7789
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7790 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7794, metadata !DIExpression()), !dbg !7795
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7796
  %3 = load volatile i32, i32* %2, align 4, !dbg !7796
  ret i32 %3, !dbg !7797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7798 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7800, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.value(metadata i32 %1, metadata !7801, metadata !DIExpression()), !dbg !7802
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7803
  store volatile i32 %1, i32* %3, align 4, !dbg !7803
  ret void, !dbg !7804
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7805 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7807, metadata !DIExpression()), !dbg !7808
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !7809
  %3 = load volatile i32, i32* %2, align 4, !dbg !7809
  ret i32 %3, !dbg !7810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !7811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7815, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32* %1, metadata !7816, metadata !DIExpression()), !dbg !7817
  %3 = and i32 %0, 131072, !dbg !7818
  %4 = icmp eq i32 %3, 0, !dbg !7820
  br i1 %4, label %22, label %5, !dbg !7821

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !7822
  %6 = and i32 %0, 2, !dbg !7824
  %7 = icmp eq i32 %6, 0, !dbg !7826
  br i1 %7, label %11, label %8, !dbg !7827

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !7828
  %10 = icmp eq i32 %9, 0, !dbg !7828
  br i1 %10, label %33, label %11, !dbg !7831

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !7832
  store i32 %12, i32* %1, align 4, !dbg !7832
  %13 = and i32 %0, 16, !dbg !7833
  %14 = icmp eq i32 %13, 0, !dbg !7835
  br i1 %14, label %17, label %15, !dbg !7836

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !7837
  br label %31, !dbg !7839

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !7840
  %19 = icmp eq i32 %18, 0, !dbg !7842
  br i1 %19, label %33, label %20, !dbg !7843

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !7844
  br label %31, !dbg !7846

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !7847
  %24 = icmp eq i32 %23, 0, !dbg !7849
  br i1 %24, label %31, label %25, !dbg !7850

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !7851
  %27 = icmp eq i32 %26, 0, !dbg !7854
  br i1 %27, label %28, label %31, !dbg !7855

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !7856
  br label %33, !dbg !7857

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !7817
  ret i32 %34, !dbg !7857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !7858 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7862, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i32 %1, metadata !7863, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i32 %2, metadata !7864, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i32 %3, metadata !7865, metadata !DIExpression()), !dbg !7873
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7874
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7874
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7874
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7866, metadata !DIExpression()), !dbg !7873
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !7875
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !7875
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !7875
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !7867, metadata !DIExpression()), !dbg !7873
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !7876
  call void @llvm.dbg.value(metadata i32 %11, metadata !7868, metadata !DIExpression()), !dbg !7873
  %12 = and i32 %2, 48, !dbg !7877
  call void @llvm.dbg.value(metadata i32 %12, metadata !7869, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i32 %2, metadata !7870, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !7873
  call void @llvm.dbg.value(metadata i32 %2, metadata !7871, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !7873
  call void @llvm.dbg.value(metadata i32 %2, metadata !7872, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !7873
  %13 = lshr i32 %2, 6, !dbg !7878
  %14 = and i32 %13, 1, !dbg !7878
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !7879
  %15 = lshr i32 %2, 7, !dbg !7880
  %16 = and i32 %15, 3, !dbg !7880
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !7881
  %17 = lshr i32 %2, 9, !dbg !7882
  %18 = and i32 %17, 3, !dbg !7882
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !7883
  %19 = icmp eq i32 %12, 32, !dbg !7884
  br i1 %19, label %20, label %24, !dbg !7886

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !7887
  br i1 %21, label %22, label %23, !dbg !7890

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !7891
  br label %24, !dbg !7893

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !7894
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !7896
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !7897
  ret void, !dbg !7898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #12 !dbg !7899 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7901, metadata !DIExpression()), !dbg !7903
  %2 = shl nuw i32 1, %0, !dbg !7904
  call void @llvm.dbg.value(metadata i32 %2, metadata !7902, metadata !DIExpression()), !dbg !7903
  ret i32 %2, !dbg !7905
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !7906 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7910, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i32 %1, metadata !7911, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i32 %2, metadata !7912, metadata !DIExpression()), !dbg !7913
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !7914
  %5 = load volatile i32, i32* %4, align 4, !dbg !7914
  %6 = xor i32 %1, -1, !dbg !7914
  %7 = and i32 %5, %6, !dbg !7914
  %8 = mul i32 %2, %1, !dbg !7914
  %9 = or i32 %7, %8, !dbg !7914
  store volatile i32 %9, i32* %4, align 4, !dbg !7914
  ret void, !dbg !7915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7916 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7918, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i32 %1, metadata !7919, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.value(metadata i32 %2, metadata !7920, metadata !DIExpression()), !dbg !7921
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !7922
  %5 = load volatile i32, i32* %4, align 4, !dbg !7922
  call void @llvm.dbg.value(metadata i32 %1, metadata !7725, metadata !DIExpression()) #23, !dbg !7923
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7925, !srcloc !7732
  call void @llvm.dbg.value(metadata i32 %6, metadata !7728, metadata !DIExpression()) #23, !dbg !7923
  call void @llvm.dbg.value(metadata i32 %6, metadata !7733, metadata !DIExpression()) #23, !dbg !7926
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7928, !range !5946
  %8 = shl nuw nsw i32 %7, 1, !dbg !7922
  %9 = shl i32 3, %8, !dbg !7922
  %10 = xor i32 %9, -1, !dbg !7922
  %11 = and i32 %5, %10, !dbg !7922
  call void @llvm.dbg.value(metadata i32 %1, metadata !7725, metadata !DIExpression()) #23, !dbg !7929
  call void @llvm.dbg.value(metadata i32 %6, metadata !7728, metadata !DIExpression()) #23, !dbg !7929
  call void @llvm.dbg.value(metadata i32 %6, metadata !7733, metadata !DIExpression()) #23, !dbg !7931
  %12 = shl i32 %2, %8, !dbg !7922
  %13 = or i32 %11, %12, !dbg !7922
  store volatile i32 %13, i32* %4, align 4, !dbg !7922
  ret void, !dbg !7933
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7934 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7936, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i32 %1, metadata !7937, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i32 %2, metadata !7938, metadata !DIExpression()), !dbg !7939
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !7940
  %5 = load volatile i32, i32* %4, align 4, !dbg !7940
  call void @llvm.dbg.value(metadata i32 %1, metadata !7725, metadata !DIExpression()) #23, !dbg !7941
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7943, !srcloc !7732
  call void @llvm.dbg.value(metadata i32 %6, metadata !7728, metadata !DIExpression()) #23, !dbg !7941
  call void @llvm.dbg.value(metadata i32 %6, metadata !7733, metadata !DIExpression()) #23, !dbg !7944
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7946, !range !5946
  %8 = shl nuw nsw i32 %7, 1, !dbg !7940
  %9 = shl i32 3, %8, !dbg !7940
  %10 = xor i32 %9, -1, !dbg !7940
  %11 = and i32 %5, %10, !dbg !7940
  call void @llvm.dbg.value(metadata i32 %1, metadata !7725, metadata !DIExpression()) #23, !dbg !7947
  call void @llvm.dbg.value(metadata i32 %6, metadata !7728, metadata !DIExpression()) #23, !dbg !7947
  call void @llvm.dbg.value(metadata i32 %6, metadata !7733, metadata !DIExpression()) #23, !dbg !7949
  %12 = shl i32 %2, %8, !dbg !7940
  %13 = or i32 %11, %12, !dbg !7940
  store volatile i32 %13, i32* %4, align 4, !dbg !7940
  ret void, !dbg !7951
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7952 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7954, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 %1, metadata !7955, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 %2, metadata !7956, metadata !DIExpression()), !dbg !7957
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !7958
  %5 = load volatile i32, i32* %4, align 4, !dbg !7958
  call void @llvm.dbg.value(metadata i32 %1, metadata !7725, metadata !DIExpression()) #23, !dbg !7959
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7961, !srcloc !7732
  call void @llvm.dbg.value(metadata i32 %6, metadata !7728, metadata !DIExpression()) #23, !dbg !7959
  call void @llvm.dbg.value(metadata i32 %6, metadata !7733, metadata !DIExpression()) #23, !dbg !7962
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7964, !range !5946
  %8 = shl nuw nsw i32 %7, 2, !dbg !7958
  %9 = shl i32 15, %8, !dbg !7958
  %10 = xor i32 %9, -1, !dbg !7958
  %11 = and i32 %5, %10, !dbg !7958
  call void @llvm.dbg.value(metadata i32 %1, metadata !7725, metadata !DIExpression()) #23, !dbg !7965
  call void @llvm.dbg.value(metadata i32 %6, metadata !7728, metadata !DIExpression()) #23, !dbg !7965
  call void @llvm.dbg.value(metadata i32 %6, metadata !7733, metadata !DIExpression()) #23, !dbg !7967
  %12 = shl i32 %2, %8, !dbg !7958
  %13 = or i32 %11, %12, !dbg !7958
  store volatile i32 %13, i32* %4, align 4, !dbg !7958
  ret void, !dbg !7969
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7970 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7972, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i32 %1, metadata !7973, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i32 %2, metadata !7974, metadata !DIExpression()), !dbg !7975
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !7976
  %5 = load volatile i32, i32* %4, align 4, !dbg !7976
  %6 = lshr i32 %1, 8, !dbg !7976
  call void @llvm.dbg.value(metadata i32 %6, metadata !7725, metadata !DIExpression()) #23, !dbg !7977
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7979, !srcloc !7732
  call void @llvm.dbg.value(metadata i32 %7, metadata !7728, metadata !DIExpression()) #23, !dbg !7977
  call void @llvm.dbg.value(metadata i32 %7, metadata !7733, metadata !DIExpression()) #23, !dbg !7980
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7982, !range !5946
  %9 = shl nuw nsw i32 %8, 2, !dbg !7976
  %10 = shl i32 15, %9, !dbg !7976
  %11 = xor i32 %10, -1, !dbg !7976
  %12 = and i32 %5, %11, !dbg !7976
  call void @llvm.dbg.value(metadata i32 %6, metadata !7725, metadata !DIExpression()) #23, !dbg !7983
  call void @llvm.dbg.value(metadata i32 %7, metadata !7728, metadata !DIExpression()) #23, !dbg !7983
  call void @llvm.dbg.value(metadata i32 %7, metadata !7733, metadata !DIExpression()) #23, !dbg !7985
  %13 = shl i32 %2, %9, !dbg !7976
  %14 = or i32 %12, %13, !dbg !7976
  store volatile i32 %14, i32* %4, align 4, !dbg !7976
  ret void, !dbg !7987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7988 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7990, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.value(metadata i32 %1, metadata !7991, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.value(metadata i32 %2, metadata !7992, metadata !DIExpression()), !dbg !7993
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !7994
  %5 = load volatile i32, i32* %4, align 4, !dbg !7994
  call void @llvm.dbg.value(metadata i32 %1, metadata !7725, metadata !DIExpression()) #23, !dbg !7995
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7997, !srcloc !7732
  call void @llvm.dbg.value(metadata i32 %6, metadata !7728, metadata !DIExpression()) #23, !dbg !7995
  call void @llvm.dbg.value(metadata i32 %6, metadata !7733, metadata !DIExpression()) #23, !dbg !7998
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !8000, !range !5946
  %8 = shl nuw nsw i32 %7, 1, !dbg !7994
  %9 = shl i32 3, %8, !dbg !7994
  %10 = xor i32 %9, -1, !dbg !7994
  %11 = and i32 %5, %10, !dbg !7994
  call void @llvm.dbg.value(metadata i32 %1, metadata !7725, metadata !DIExpression()) #23, !dbg !8001
  call void @llvm.dbg.value(metadata i32 %6, metadata !7728, metadata !DIExpression()) #23, !dbg !8001
  call void @llvm.dbg.value(metadata i32 %6, metadata !7733, metadata !DIExpression()) #23, !dbg !8003
  %12 = shl i32 %2, %8, !dbg !7994
  %13 = or i32 %11, %12, !dbg !7994
  store volatile i32 %13, i32* %4, align 4, !dbg !7994
  ret void, !dbg !8005
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !8006 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8008, metadata !DIExpression()), !dbg !8011
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8012
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !8012
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !8012
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !8009, metadata !DIExpression()), !dbg !8011
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !8013
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !8014
  %6 = tail call fastcc zeroext i1 @device_is_ready.44() #24, !dbg !8015
  br i1 %6, label %7, label %11, !dbg !8017

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !8018
  call void @llvm.dbg.value(metadata i32 %8, metadata !8010, metadata !DIExpression()), !dbg !8011
  %9 = icmp slt i32 %8, 0, !dbg !8019
  %10 = select i1 %9, i32 %8, i32 0, !dbg !8021
  br label %11, !dbg !8021

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !8011
  ret i32 %12, !dbg !8022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.44() unnamed_addr #1 !dbg !8023 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8027, metadata !DIExpression()), !dbg !8028
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8029, !srcloc !8031
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.45() #24, !dbg !8032
  ret i1 %1, !dbg !8033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8034 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8038, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i8 1, metadata !8039, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !8040, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i32 0, metadata !8041, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8042, metadata !DIExpression()), !dbg !8043
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8044
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !8044
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !8044
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !8040, metadata !DIExpression()), !dbg !8043
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !8045
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !8048
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !8049
  call void @llvm.dbg.value(metadata i32 %7, metadata !8041, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.value(metadata i32 %7, metadata !8041, metadata !DIExpression()), !dbg !8043
  ret i32 %7, !dbg !8050
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.45() unnamed_addr #1 !dbg !8051 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8053, metadata !DIExpression()), !dbg !8054
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !8055
  ret i1 %1, !dbg !8056
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8057 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8061, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 %1, metadata !8062, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 %2, metadata !8063, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 %3, metadata !8064, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i32 0, metadata !8065, metadata !DIExpression()), !dbg !8069
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !8070
  %5 = icmp eq i32 %3, 17, !dbg !8071
  br i1 %5, label %6, label %14, !dbg !8072

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !8073
  call void @llvm.dbg.value(metadata i32 %7, metadata !8066, metadata !DIExpression()), !dbg !8074
  %8 = icmp eq i32 %7, 0, !dbg !8075
  %9 = shl nuw i32 1, %1, !dbg !8077
  br i1 %8, label %12, label %10, !dbg !8078

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !8079
  br label %14, !dbg !8081

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !8082
  br label %14, !dbg !8085

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !8086
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !8087 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8089, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata i8* %1, metadata !8090, metadata !DIExpression()), !dbg !8093
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8094
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8094
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8094
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8091, metadata !DIExpression()), !dbg !8093
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8095
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8095
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !8097
  %9 = icmp eq i32 %8, 0, !dbg !8097
  br i1 %9, label %12, label %10, !dbg !8098

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8099
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !8101
  br label %12, !dbg !8102

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8103
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !8105
  %15 = icmp eq i32 %14, 0, !dbg !8105
  br i1 %15, label %19, label %16, !dbg !8106

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8107
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !8108
  store i8 %18, i8* %1, align 1, !dbg !8109
  br label %19, !dbg !8110

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !8093
  ret i32 %20, !dbg !8111
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !8112 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8114, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i8 %1, metadata !8115, metadata !DIExpression()), !dbg !8118
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8119
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8119
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8119
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8116, metadata !DIExpression()), !dbg !8118
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !8120

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8121
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !8124
  %10 = icmp eq i32 %9, 0, !dbg !8124
  br i1 %10, label %18, label %11, !dbg !8125

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8126, !srcloc !8133
  call void @llvm.dbg.value(metadata i32 undef, metadata !8129, metadata !DIExpression()) #23, !dbg !8134
  call void @llvm.dbg.value(metadata i32 undef, metadata !8130, metadata !DIExpression()) #23, !dbg !8134
  call void @llvm.dbg.value(metadata i32 undef, metadata !8117, metadata !DIExpression()), !dbg !8118
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8135
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !8137
  %15 = icmp eq i32 %14, 0, !dbg !8137
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !8126
  br i1 %15, label %17, label %19, !dbg !8138

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !8129, metadata !DIExpression()) #23, !dbg !8134
  call void @llvm.dbg.value(metadata i32 %16, metadata !8117, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i32 undef, metadata !8139, metadata !DIExpression()) #23, !dbg !8142
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !8144, !srcloc !8145
  br label %18, !dbg !8146

18:                                               ; preds = %17, %7
  br label %7, !dbg !8121, !llvm.loop !8147

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !8126
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8149
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !8150
  call void @llvm.dbg.value(metadata i32 %20, metadata !8139, metadata !DIExpression()) #23, !dbg !8151
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !8153, !srcloc !8145
  ret void, !dbg !8154
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !8155 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8157, metadata !DIExpression()), !dbg !8160
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8161
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8161
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8161
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8158, metadata !DIExpression()), !dbg !8160
  call void @llvm.dbg.value(metadata i32 0, metadata !8159, metadata !DIExpression()), !dbg !8160
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8162
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8162
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !8164
  %8 = icmp ne i32 %7, 0, !dbg !8164
  %9 = zext i1 %8 to i32, !dbg !8165
  call void @llvm.dbg.value(metadata i32 %9, metadata !8159, metadata !DIExpression()), !dbg !8160
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8166
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !8168
  %12 = icmp eq i32 %11, 0, !dbg !8168
  %13 = or i32 %9, 2, !dbg !8169
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !8169
  call void @llvm.dbg.value(metadata i32 %14, metadata !8159, metadata !DIExpression()), !dbg !8160
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8170
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !8172
  %17 = icmp eq i32 %16, 0, !dbg !8172
  %18 = or i32 %14, 4, !dbg !8173
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !8173
  call void @llvm.dbg.value(metadata i32 %19, metadata !8159, metadata !DIExpression()), !dbg !8160
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8174
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !8176
  %22 = icmp eq i32 %21, 0, !dbg !8176
  %23 = or i32 %19, 8, !dbg !8177
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !8177
  call void @llvm.dbg.value(metadata i32 %24, metadata !8159, metadata !DIExpression()), !dbg !8160
  %25 = and i32 %24, 8, !dbg !8178
  %26 = icmp eq i32 %25, 0, !dbg !8178
  br i1 %26, label %29, label %27, !dbg !8180

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8181
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !8183
  br label %29, !dbg !8184

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !8185
  %31 = icmp eq i32 %30, 0, !dbg !8185
  br i1 %31, label %34, label %32, !dbg !8187

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8188
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !8190
  br label %34, !dbg !8191

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !8192
  %36 = icmp eq i32 %35, 0, !dbg !8192
  br i1 %36, label %39, label %37, !dbg !8194

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8195
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !8197
  br label %39, !dbg !8198

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !8199
  %41 = icmp eq i32 %40, 0, !dbg !8199
  br i1 %41, label %44, label %42, !dbg !8201

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8202
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !8204
  br label %44, !dbg !8205

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8206
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !8207
  ret i32 %24, !dbg !8208
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !8209 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8211, metadata !DIExpression()), !dbg !8220
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8212, metadata !DIExpression()), !dbg !8220
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8221
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8221
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8221
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8213, metadata !DIExpression()), !dbg !8220
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8222
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !8222
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !8222
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !8214, metadata !DIExpression()), !dbg !8220
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8223
  %10 = load i8, i8* %9, align 4, !dbg !8223
  %11 = zext i8 %10 to i32, !dbg !8224
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !8225
  call void @llvm.dbg.value(metadata i32 %12, metadata !8216, metadata !DIExpression()), !dbg !8220
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8226
  %14 = load i8, i8* %13, align 1, !dbg !8226
  %15 = zext i8 %14 to i32, !dbg !8227
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !8228
  call void @llvm.dbg.value(metadata i32 %16, metadata !8217, metadata !DIExpression()), !dbg !8220
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8229
  %18 = load i8, i8* %17, align 2, !dbg !8229
  %19 = zext i8 %18 to i32, !dbg !8230
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !8231
  call void @llvm.dbg.value(metadata i32 %20, metadata !8218, metadata !DIExpression()), !dbg !8220
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8232
  %22 = load i8, i8* %21, align 1, !dbg !8232
  %23 = zext i8 %22 to i32, !dbg !8233
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !8234
  call void @llvm.dbg.value(metadata i32 %24, metadata !8219, metadata !DIExpression()), !dbg !8220
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !8235

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !8237
  br i1 %26, label %69, label %27, !dbg !8239

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !8240

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !8241
  br i1 %29, label %65, label %30, !dbg !8241

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !8243
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !8220
  br i1 %31, label %38, label %34, !dbg !8245

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !8246
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !8246

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !8249
  br i1 %37, label %38, label %69, !dbg !8250

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8251
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !8252
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !8253
  %41 = icmp eq i32 %12, %40, !dbg !8255
  br i1 %41, label %43, label %42, !dbg !8256

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !8257
  br label %43, !dbg !8259

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !8260
  %45 = icmp eq i32 %16, %44, !dbg !8262
  br i1 %45, label %47, label %46, !dbg !8263

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !8264
  br label %47, !dbg !8266

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !8267
  %49 = icmp eq i32 %20, %48, !dbg !8269
  br i1 %49, label %51, label %50, !dbg !8270

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !8271
  br label %51, !dbg !8273

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !8274
  %53 = icmp eq i32 %24, %52, !dbg !8276
  br i1 %53, label %55, label %54, !dbg !8277

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !8278
  br label %55, !dbg !8280

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8281
  %57 = load i32, i32* %56, align 4, !dbg !8281
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !8283
  %59 = load i32, i32* %58, align 4, !dbg !8283
  %60 = icmp eq i32 %57, %59, !dbg !8284
  br i1 %60, label %63, label %61, !dbg !8285

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !8286
  %62 = load i32, i32* %56, align 4, !dbg !8288
  store i32 %62, i32* %58, align 4, !dbg !8289
  br label %63, !dbg !8290

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !8291
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !8292
  br label %69, !dbg !8293

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !8241
  %67 = and i8 %66, 1, !dbg !8241
  %68 = icmp eq i8 %67, 0, !dbg !8241
  br i1 %68, label %30, label %69, !dbg !8241

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !8220
  ret i32 %70, !dbg !8294
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !8295 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8297, metadata !DIExpression()), !dbg !8300
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8298, metadata !DIExpression()), !dbg !8300
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8301
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !8301
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !8301
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !8299, metadata !DIExpression()), !dbg !8300
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !8302
  %7 = load i32, i32* %6, align 4, !dbg !8302
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8303
  store i32 %7, i32* %8, align 4, !dbg !8304
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !8305, !range !8306
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !8307
  %11 = trunc i32 %10 to i8, !dbg !8307
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8308
  store i8 %11, i8* %12, align 4, !dbg !8309
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !8310, !range !8311
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !8312
  %15 = trunc i32 %14 to i8, !dbg !8312
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8313
  store i8 %15, i8* %16, align 1, !dbg !8314
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !8315
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !8316, !range !8306
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !8317
  %20 = trunc i32 %19 to i8, !dbg !8317
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8318
  store i8 %20, i8* %21, align 2, !dbg !8319
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !8320, !range !8321
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !8322
  %24 = trunc i32 %23 to i8, !dbg !8322
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8323
  store i8 %24, i8* %25, align 1, !dbg !8324
  ret i32 0, !dbg !8325
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8326 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8330, metadata !DIExpression()), !dbg !8332
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8333
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8333
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8333
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8331, metadata !DIExpression()), !dbg !8332
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8334
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8334
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !8335
  ret i32 %7, !dbg !8336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #12 !dbg !8337 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8341, metadata !DIExpression()), !dbg !8342
  %2 = icmp eq i32 %0, 1024, !dbg !8343
  %3 = select i1 %2, i32 2, i32 0, !dbg !8343
  %4 = icmp eq i32 %0, 1536, !dbg !8343
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8343
  ret i32 %5, !dbg !8344
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8345 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8347, metadata !DIExpression()), !dbg !8349
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8350
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8350
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8350
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8348, metadata !DIExpression()), !dbg !8349
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8351
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8351
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !8352
  ret i32 %7, !dbg !8353
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !8354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8358, metadata !DIExpression()), !dbg !8359
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8360
  %3 = icmp ult i32 %2, 4, !dbg !8360
  br i1 %3, label %4, label %7, !dbg !8360

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8360
  %6 = load i32, i32* %5, align 4, !dbg !8360
  br label %7, !dbg !8360

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8361
  ret i32 %8, !dbg !8363
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8364 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8366, metadata !DIExpression()), !dbg !8368
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8369
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8369
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8369
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8367, metadata !DIExpression()), !dbg !8368
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8370
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8370
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !8371
  ret i32 %7, !dbg !8372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8377, metadata !DIExpression()), !dbg !8379
  call void @llvm.dbg.value(metadata i32 %1, metadata !8378, metadata !DIExpression()), !dbg !8379
  %3 = icmp eq i32 %0, 4096, !dbg !8380
  %4 = icmp eq i32 %1, 0, !dbg !8380
  %5 = select i1 %4, i32 4, i32 3, !dbg !8380
  %6 = select i1 %4, i32 3, i32 2, !dbg !8380
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8380
  ret i32 %7, !dbg !8381
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8382 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8384, metadata !DIExpression()), !dbg !8386
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8387
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8387
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8387
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8385, metadata !DIExpression()), !dbg !8386
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8388
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8388
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !8389
  ret i32 %7, !dbg !8390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8395, metadata !DIExpression()), !dbg !8396
  %2 = icmp eq i32 %0, 768, !dbg !8397
  %3 = zext i1 %2 to i32, !dbg !8396
  ret i32 %3, !dbg !8399
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8400 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8405, metadata !DIExpression()), !dbg !8406
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8407
  %3 = load volatile i32, i32* %2, align 4, !dbg !8407
  %4 = and i32 %3, 768, !dbg !8407
  ret i32 %4, !dbg !8408
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8409 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8411, metadata !DIExpression()), !dbg !8412
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8413
  %3 = load volatile i32, i32* %2, align 4, !dbg !8413
  %4 = and i32 %3, 4096, !dbg !8413
  ret i32 %4, !dbg !8414
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8415 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8417, metadata !DIExpression()), !dbg !8418
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8419
  %3 = load volatile i32, i32* %2, align 4, !dbg !8419
  %4 = and i32 %3, 12288, !dbg !8419
  ret i32 %4, !dbg !8420
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8421 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8423, metadata !DIExpression()), !dbg !8424
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8425
  %3 = load volatile i32, i32* %2, align 4, !dbg !8425
  %4 = and i32 %3, 1536, !dbg !8425
  ret i32 %4, !dbg !8426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #12 !dbg !8427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8431, metadata !DIExpression()), !dbg !8432
  %2 = icmp eq i32 %0, 2, !dbg !8433
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8433
  %4 = icmp eq i32 %0, 1, !dbg !8433
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8433
  ret i32 %5, !dbg !8434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !8435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8439, metadata !DIExpression()), !dbg !8440
  %2 = icmp ult i32 %0, 3, !dbg !8441
  br i1 %2, label %3, label %6, !dbg !8441

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8441
  %5 = load i32, i32* %4, align 4, !dbg !8441
  br label %6, !dbg !8441

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8442
  ret i32 %7, !dbg !8444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8449, metadata !DIExpression()), !dbg !8451
  call void @llvm.dbg.value(metadata i32 %1, metadata !8450, metadata !DIExpression()), !dbg !8451
  %3 = icmp eq i32 %0, 4, !dbg !8452
  %4 = icmp eq i32 %1, 0, !dbg !8452
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8452
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8452
  ret i32 %6, !dbg !8453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8458, metadata !DIExpression()), !dbg !8459
  %2 = icmp eq i32 %0, 1, !dbg !8460
  %3 = select i1 %2, i32 768, i32 0, !dbg !8459
  ret i32 %3, !dbg !8462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8463 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8467, metadata !DIExpression()), !dbg !8468
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8469
  %3 = load volatile i32, i32* %2, align 4, !dbg !8469
  %4 = and i32 %3, -8193, !dbg !8469
  store volatile i32 %4, i32* %2, align 4, !dbg !8469
  ret void, !dbg !8470
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8471 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8475, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.value(metadata i32 %1, metadata !8476, metadata !DIExpression()), !dbg !8478
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8479
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8479
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8479
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8477, metadata !DIExpression()), !dbg !8478
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8480
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8480
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8481
  ret void, !dbg !8482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8483 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8485, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i32 %1, metadata !8486, metadata !DIExpression()), !dbg !8488
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8489
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8489
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8489
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8487, metadata !DIExpression()), !dbg !8488
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8490
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8490
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8491
  ret void, !dbg !8492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8493 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8495, metadata !DIExpression()), !dbg !8498
  call void @llvm.dbg.value(metadata i32 %1, metadata !8496, metadata !DIExpression()), !dbg !8498
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8499
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8499
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8499
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8497, metadata !DIExpression()), !dbg !8498
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8500
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8500
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8501
  ret void, !dbg !8502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8503 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8505, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.value(metadata i32 %1, metadata !8506, metadata !DIExpression()), !dbg !8508
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8509
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8509
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8509
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8507, metadata !DIExpression()), !dbg !8508
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8510
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8510
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !8511
  ret void, !dbg !8512
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8513 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8515, metadata !DIExpression()), !dbg !8520
  call void @llvm.dbg.value(metadata i32 %1, metadata !8516, metadata !DIExpression()), !dbg !8520
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8521
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !8521
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !8521
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !8517, metadata !DIExpression()), !dbg !8520
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8522
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !8522
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !8522
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !8518, metadata !DIExpression()), !dbg !8520
  %10 = bitcast i32* %3 to i8*, !dbg !8523
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8523
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !8524
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !8524
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !8528
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8528
  %15 = load i8*, i8** %14, align 4, !dbg !8528
  call void @llvm.dbg.value(metadata i32* %3, metadata !8519, metadata !DIExpression(DW_OP_deref)), !dbg !8520
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !8529
  %17 = icmp slt i32 %16, 0, !dbg !8530
  br i1 %17, label %23, label %18, !dbg !8531

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !8532
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8532
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #24, !dbg !8533
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8534
  %22 = load i32, i32* %3, align 4, !dbg !8535
  call void @llvm.dbg.value(metadata i32 %22, metadata !8519, metadata !DIExpression()), !dbg !8520
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #24, !dbg !8536
  br label %23, !dbg !8537

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8537
  ret void, !dbg !8537
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8538 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8540, metadata !DIExpression()), !dbg !8541
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8542
  %3 = load volatile i32, i32* %2, align 4, !dbg !8542
  %4 = or i32 %3, 8192, !dbg !8542
  store volatile i32 %4, i32* %2, align 4, !dbg !8542
  ret void, !dbg !8543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !8544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8546, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.value(metadata i8* %1, metadata !8547, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.value(metadata i32* %2, metadata !8548, metadata !DIExpression()), !dbg !8550
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8551
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !8551
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !8551
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !8549, metadata !DIExpression()), !dbg !8550
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !8552
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !8552
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !8554
  br i1 %9, label %12, label %10, !dbg !8555

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !8556
  br label %12, !dbg !8557

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !8550
  ret i32 %13, !dbg !8558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8559 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8563, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.value(metadata i32 0, metadata !8564, metadata !DIExpression()), !dbg !8565
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8566
  %3 = load volatile i32, i32* %2, align 4, !dbg !8566
  %4 = and i32 %3, -32769, !dbg !8566
  store volatile i32 %4, i32* %2, align 4, !dbg !8566
  ret void, !dbg !8567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8568 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8572, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.value(metadata i32 %1, metadata !8573, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.value(metadata i32 0, metadata !8574, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.value(metadata i32 %2, metadata !8575, metadata !DIExpression()), !dbg !8576
  %4 = zext i32 %1 to i64, !dbg !8577
  %5 = mul nuw nsw i64 %4, 25, !dbg !8577
  %6 = zext i32 %2 to i64, !dbg !8577
  %7 = shl nuw nsw i64 %6, 2, !dbg !8577
  %8 = udiv i64 %5, %7, !dbg !8577
  %9 = trunc i64 %8 to i32, !dbg !8577
  %10 = udiv i32 %9, 100, !dbg !8577
  %11 = shl nuw nsw i32 %10, 4, !dbg !8577
  %12 = mul i32 %10, -100, !dbg !8577
  %13 = add i32 %12, %9, !dbg !8577
  %14 = shl i32 %13, 4, !dbg !8577
  %15 = add i32 %14, 50, !dbg !8577
  %16 = udiv i32 %15, 100, !dbg !8577
  %17 = and i32 %16, 240, !dbg !8577
  %18 = add nuw nsw i32 %17, %11, !dbg !8577
  %19 = and i32 %16, 15, !dbg !8577
  %20 = and i32 %18, 65520, !dbg !8580
  %21 = or i32 %20, %19, !dbg !8580
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !8581
  store volatile i32 %21, i32* %22, align 4, !dbg !8582
  ret void, !dbg !8583
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8584 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8586, metadata !DIExpression()), !dbg !8588
  call void @llvm.dbg.value(metadata i32 %1, metadata !8587, metadata !DIExpression()), !dbg !8588
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8589
  %4 = load volatile i32, i32* %3, align 4, !dbg !8589
  %5 = and i32 %4, -769, !dbg !8589
  %6 = or i32 %5, %1, !dbg !8589
  store volatile i32 %6, i32* %3, align 4, !dbg !8589
  ret void, !dbg !8590
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8591 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8593, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.value(metadata i32 %1, metadata !8594, metadata !DIExpression()), !dbg !8595
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8596
  %4 = load volatile i32, i32* %3, align 4, !dbg !8596
  %5 = and i32 %4, -4097, !dbg !8596
  %6 = or i32 %5, %1, !dbg !8596
  store volatile i32 %6, i32* %3, align 4, !dbg !8596
  ret void, !dbg !8597
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8598 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8600, metadata !DIExpression()), !dbg !8602
  call void @llvm.dbg.value(metadata i32 %1, metadata !8601, metadata !DIExpression()), !dbg !8602
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8603
  %4 = load volatile i32, i32* %3, align 4, !dbg !8603
  %5 = and i32 %4, -12289, !dbg !8603
  %6 = or i32 %5, %1, !dbg !8603
  store volatile i32 %6, i32* %3, align 4, !dbg !8603
  ret void, !dbg !8604
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8605 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8607, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata i32 %1, metadata !8608, metadata !DIExpression()), !dbg !8609
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8610
  %4 = load volatile i32, i32* %3, align 4, !dbg !8610
  %5 = and i32 %4, -1537, !dbg !8610
  %6 = or i32 %5, %1, !dbg !8610
  store volatile i32 %6, i32* %3, align 4, !dbg !8610
  ret void, !dbg !8611
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8612 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8614, metadata !DIExpression()), !dbg !8615
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8616
  %3 = load volatile i32, i32* %2, align 4, !dbg !8616
  %4 = lshr i32 %3, 3, !dbg !8617
  %5 = and i32 %4, 1, !dbg !8617
  ret i32 %5, !dbg !8618
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8619 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8621, metadata !DIExpression()), !dbg !8622
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8623
  %3 = load volatile i32, i32* %2, align 4, !dbg !8623
  %4 = and i32 %3, 1, !dbg !8623
  ret i32 %4, !dbg !8624
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8625 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8627, metadata !DIExpression()), !dbg !8628
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8629
  %3 = load volatile i32, i32* %2, align 4, !dbg !8629
  %4 = lshr i32 %3, 1, !dbg !8630
  %5 = and i32 %4, 1, !dbg !8630
  ret i32 %5, !dbg !8631
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8632 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8634, metadata !DIExpression()), !dbg !8635
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8636
  %3 = load volatile i32, i32* %2, align 4, !dbg !8636
  %4 = lshr i32 %3, 8, !dbg !8637
  %5 = and i32 %4, 1, !dbg !8637
  ret i32 %5, !dbg !8638
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8639 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8641, metadata !DIExpression()), !dbg !8642
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8643
  store volatile i32 -257, i32* %2, align 4, !dbg !8643
  ret void, !dbg !8644
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8645 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8647, metadata !DIExpression()), !dbg !8649
  %3 = bitcast i32* %2 to i8*, !dbg !8650
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8650
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8648, metadata !DIExpression()), !dbg !8651
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8652
  %5 = load volatile i32, i32* %4, align 4, !dbg !8652
  store volatile i32 %5, i32* %2, align 4, !dbg !8653
  %6 = load volatile i32, i32* %2, align 4, !dbg !8654
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8655
  %8 = load volatile i32, i32* %7, align 4, !dbg !8655
  store volatile i32 %8, i32* %2, align 4, !dbg !8656
  %9 = load volatile i32, i32* %2, align 4, !dbg !8657
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8658
  ret void, !dbg !8658
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8659 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8661, metadata !DIExpression()), !dbg !8663
  %3 = bitcast i32* %2 to i8*, !dbg !8664
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8664
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8662, metadata !DIExpression()), !dbg !8665
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8666
  %5 = load volatile i32, i32* %4, align 4, !dbg !8666
  store volatile i32 %5, i32* %2, align 4, !dbg !8667
  %6 = load volatile i32, i32* %2, align 4, !dbg !8668
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8669
  %8 = load volatile i32, i32* %7, align 4, !dbg !8669
  store volatile i32 %8, i32* %2, align 4, !dbg !8670
  %9 = load volatile i32, i32* %2, align 4, !dbg !8671
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8672
  ret void, !dbg !8672
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8673 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8675, metadata !DIExpression()), !dbg !8677
  %3 = bitcast i32* %2 to i8*, !dbg !8678
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8678
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8676, metadata !DIExpression()), !dbg !8679
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8680
  %5 = load volatile i32, i32* %4, align 4, !dbg !8680
  store volatile i32 %5, i32* %2, align 4, !dbg !8681
  %6 = load volatile i32, i32* %2, align 4, !dbg !8682
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8683
  %8 = load volatile i32, i32* %7, align 4, !dbg !8683
  store volatile i32 %8, i32* %2, align 4, !dbg !8684
  %9 = load volatile i32, i32* %2, align 4, !dbg !8685
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8686
  ret void, !dbg !8686
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8687 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8689, metadata !DIExpression()), !dbg !8691
  %3 = bitcast i32* %2 to i8*, !dbg !8692
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8692
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8690, metadata !DIExpression()), !dbg !8693
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8694
  %5 = load volatile i32, i32* %4, align 4, !dbg !8694
  store volatile i32 %5, i32* %2, align 4, !dbg !8695
  %6 = load volatile i32, i32* %2, align 4, !dbg !8696
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8697
  %8 = load volatile i32, i32* %7, align 4, !dbg !8697
  store volatile i32 %8, i32* %2, align 4, !dbg !8698
  %9 = load volatile i32, i32* %2, align 4, !dbg !8699
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8700
  ret void, !dbg !8700
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8701 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8703, metadata !DIExpression()), !dbg !8704
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8705
  %3 = load volatile i32, i32* %2, align 4, !dbg !8705
  %4 = lshr i32 %3, 7, !dbg !8706
  %5 = and i32 %4, 1, !dbg !8706
  ret i32 %5, !dbg !8707
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !8708 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8712, metadata !DIExpression()), !dbg !8714
  call void @llvm.dbg.value(metadata i8 %1, metadata !8713, metadata !DIExpression()), !dbg !8714
  %3 = zext i8 %1 to i32, !dbg !8715
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8716
  store volatile i32 %3, i32* %4, align 4, !dbg !8717
  ret void, !dbg !8718
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8719 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8721, metadata !DIExpression()), !dbg !8722
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8723
  %3 = load volatile i32, i32* %2, align 4, !dbg !8723
  %4 = lshr i32 %3, 5, !dbg !8724
  %5 = and i32 %4, 1, !dbg !8724
  ret i32 %5, !dbg !8725
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8726 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8730, metadata !DIExpression()), !dbg !8731
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8732
  %3 = load volatile i32, i32* %2, align 4, !dbg !8732
  %4 = trunc i32 %3 to i8, !dbg !8733
  ret i8 %4, !dbg !8734
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !8735 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8737, metadata !DIExpression()), !dbg !8743
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8744
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8744
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8744
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8738, metadata !DIExpression()), !dbg !8743
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8745
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !8745
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !8745
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !8739, metadata !DIExpression()), !dbg !8743
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !8746
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !8747
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !8747
  %10 = tail call fastcc zeroext i1 @device_is_ready.53(%struct.device* noundef %9) #24, !dbg !8749
  br i1 %10, label %11, label %49, !dbg !8750

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !8751
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !8752
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8752
  %15 = load i8*, i8** %14, align 4, !dbg !8752
  %16 = tail call fastcc i32 @clock_control_on.54(%struct.device* noundef %12, i8* noundef %15) #24, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %16, metadata !8742, metadata !DIExpression()), !dbg !8743
  %17 = icmp eq i32 %16, 0, !dbg !8754
  br i1 %17, label %18, label %49, !dbg !8756

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !8757
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !8757
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #24, !dbg !8758
  call void @llvm.dbg.value(metadata i32 %21, metadata !8742, metadata !DIExpression()), !dbg !8743
  %22 = icmp slt i32 %21, 0, !dbg !8759
  br i1 %22, label %49, label %23, !dbg !8761

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8762
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8762
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #24, !dbg !8763
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8764
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #24, !dbg !8765
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !8766
  %28 = load i32, i32* %27, align 4, !dbg !8766
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !8768

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !8740, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i32 4096, metadata !8741, metadata !DIExpression()), !dbg !8743
  br label %31, !dbg !8769

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !8740, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i32 0, metadata !8741, metadata !DIExpression()), !dbg !8743
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !8772
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !8772
  call void @llvm.dbg.value(metadata i32 %33, metadata !8741, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i32 %32, metadata !8740, metadata !DIExpression()), !dbg !8743
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8773
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #24, !dbg !8774
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !8775
  %36 = load i8, i8* %35, align 4, !dbg !8775, !range !5366
  %37 = icmp eq i8 %36, 0, !dbg !8775
  br i1 %37, label %39, label %38, !dbg !8777

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !8778
  br label %39, !dbg !8780

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !8781
  %41 = load i32, i32* %40, align 4, !dbg !8781
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #24, !dbg !8782
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !8783
  %43 = load i8, i8* %42, align 4, !dbg !8783, !range !5366
  %44 = icmp eq i8 %43, 0, !dbg !8783
  br i1 %44, label %47, label %45, !dbg !8785

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8786
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #24, !dbg !8788
  br label %47, !dbg !8789

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8790
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #24, !dbg !8791
  br label %49, !dbg !8792

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !8743
  ret i32 %50, !dbg !8793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8794 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8798, metadata !DIExpression()), !dbg !8802
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8803
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !8803
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !8803
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !8799, metadata !DIExpression()), !dbg !8802
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8800, metadata !DIExpression()), !dbg !8802
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !8804
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !8805
  ret void, !dbg !8806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.53(%struct.device* noundef %0) unnamed_addr #1 !dbg !8807 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8811, metadata !DIExpression()), !dbg !8812
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8813, !srcloc !8815
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.55(%struct.device* noundef %0) #24, !dbg !8816
  ret i1 %2, !dbg !8817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.54(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8818 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8820, metadata !DIExpression()), !dbg !8823
  call void @llvm.dbg.value(metadata i8* %1, metadata !8821, metadata !DIExpression()), !dbg !8823
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8824
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !8824
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !8824
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !8822, metadata !DIExpression()), !dbg !8823
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !8825
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !8825
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !8826
  ret i32 %8, !dbg !8827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8828 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8832, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i8 0, metadata !8833, metadata !DIExpression()), !dbg !8836
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8837
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8837
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8835, metadata !DIExpression(DW_OP_deref)), !dbg !8836
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !8838
  call void @llvm.dbg.value(metadata i32 %4, metadata !8834, metadata !DIExpression()), !dbg !8836
  %5 = icmp slt i32 %4, 0, !dbg !8839
  br i1 %5, label %9, label %6, !dbg !8841

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8842
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8835, metadata !DIExpression()), !dbg !8836
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !8843
  br label %9, !dbg !8844

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8836
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8845
  ret i32 %10, !dbg !8845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !8846 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8848, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 12, metadata !8849, metadata !DIExpression()), !dbg !8852
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !8853

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !8854, metadata !DIExpression()) #23, !dbg !8860
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !8863, !srcloc !8864
  call void @llvm.dbg.value(metadata i32 %4, metadata !8859, metadata !DIExpression()) #23, !dbg !8860
  %5 = or i32 %4, 12, !dbg !8865
  call void @llvm.dbg.value(metadata i32 %5, metadata !8850, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.value(metadata i32 %5, metadata !8867, metadata !DIExpression()) #23, !dbg !8874
  call void @llvm.dbg.value(metadata i32* %2, metadata !8872, metadata !DIExpression()) #23, !dbg !8874
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !8876, !srcloc !8877
  call void @llvm.dbg.value(metadata i32 %6, metadata !8873, metadata !DIExpression()) #23, !dbg !8874
  %7 = icmp eq i32 %6, 0, !dbg !8853
  br i1 %7, label %8, label %3, !dbg !8865, !llvm.loop !8878

8:                                                ; preds = %3
  ret void, !dbg !8879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8880 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8882, metadata !DIExpression()), !dbg !8886
  call void @llvm.dbg.value(metadata i32 %1, metadata !8883, metadata !DIExpression()), !dbg !8886
  call void @llvm.dbg.value(metadata i32 %2, metadata !8884, metadata !DIExpression()), !dbg !8886
  call void @llvm.dbg.value(metadata i32 0, metadata !8885, metadata !DIExpression()), !dbg !8886
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8887
  %5 = load volatile i32, i32* %4, align 4, !dbg !8887
  %6 = and i32 %5, -5633, !dbg !8887
  %7 = or i32 %2, %1, !dbg !8887
  %8 = or i32 %7, %6, !dbg !8887
  store volatile i32 %8, i32* %4, align 4, !dbg !8887
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8888
  %10 = load volatile i32, i32* %9, align 4, !dbg !8888
  %11 = and i32 %10, -12289, !dbg !8888
  store volatile i32 %11, i32* %9, align 4, !dbg !8888
  ret void, !dbg !8889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8890 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8892, metadata !DIExpression()), !dbg !8893
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8894
  %3 = load volatile i32, i32* %2, align 4, !dbg !8894
  %4 = or i32 %3, 8, !dbg !8894
  store volatile i32 %4, i32* %2, align 4, !dbg !8894
  ret void, !dbg !8895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8896 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8900, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8901, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.value(metadata i32 0, metadata !8902, metadata !DIExpression()), !dbg !8903
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8904
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !8904
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8905
  %5 = load i8, i8* %4, align 4, !dbg !8905
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !8906
  ret i32 %6, !dbg !8907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.55(%struct.device* noundef %0) unnamed_addr #1 !dbg !8908 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8910, metadata !DIExpression()), !dbg !8911
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !8912
  ret i1 %2, !dbg !8913
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #13 !dbg !8914 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8916, metadata !DIExpression()), !dbg !8917
  tail call fastcc void @__NVIC_SetPriority.57() #24, !dbg !8918
  store i32 8399, i32* @last_load, align 4, !dbg !8919
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8920
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8921
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8922
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8923
  %3 = or i32 %2, 7, !dbg !8923
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8923
  ret i32 0, !dbg !8924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.57() unnamed_addr #13 !dbg !8925 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8927, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 1, metadata !8928, metadata !DIExpression()), !dbg !8929
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8930
  ret void, !dbg !8933
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8934 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8936, metadata !DIExpression()), !dbg !8938
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !8939
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8940
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8941
  %5 = add i32 %4, %3, !dbg !8941
  store i32 %5, i32* @cycle_count, align 4, !dbg !8941
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8942
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8943
  %7 = sub i32 %5, %6, !dbg !8946
  %8 = udiv i32 %7, 8400, !dbg !8947
  call void @llvm.dbg.value(metadata i32 %8, metadata !8937, metadata !DIExpression()), !dbg !8938
  %9 = mul nuw i32 %8, 8400, !dbg !8948
  %10 = add i32 %9, %6, !dbg !8949
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8949
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !8950
  tail call void @z_arm_int_exit() #25, !dbg !8951
  ret void, !dbg !8952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #13 !dbg !8953 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8958
  call void @llvm.dbg.value(metadata i32 %1, metadata !8955, metadata !DIExpression()), !dbg !8959
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8960
  call void @llvm.dbg.value(metadata i32 %2, metadata !8956, metadata !DIExpression()), !dbg !8959
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8961
  call void @llvm.dbg.value(metadata i32 %3, metadata !8957, metadata !DIExpression()), !dbg !8959
  %4 = and i32 %2, 65536, !dbg !8962
  %5 = icmp ne i32 %4, 0, !dbg !8962
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8964
  %8 = load i32, i32* @last_load, align 4, !dbg !8959
  br i1 %7, label %9, label %13, !dbg !8964

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8965
  %11 = add i32 %10, %8, !dbg !8965
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8965
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8967
  br label %13, !dbg !8968

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8969
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8970
  %16 = add i32 %14, %15, !dbg !8971
  ret i32 %16, !dbg !8972
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8977, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata i1 %1, metadata !8978, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8990
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8991
  br i1 %4, label %5, label %8, !dbg !8991

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8993
  %7 = and i32 %6, -2, !dbg !8993
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8993
  store i32 -16777216, i32* @last_load, align 4, !dbg !8995
  br label %54, !dbg !8996

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8997
  call void @llvm.dbg.value(metadata i32 %9, metadata !8982, metadata !DIExpression()), !dbg !8990
  br i1 %3, label %18, label %10, !dbg !8998

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8998
  call void @llvm.dbg.value(metadata i32 undef, metadata !8977, metadata !DIExpression()), !dbg !8990
  %12 = icmp slt i32 %11, 1, !dbg !8999
  br i1 %12, label %18, label %13, !dbg !8999

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !8999
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !8999
  %16 = mul nuw nsw i32 %15, 8400, !dbg !8999
  %17 = add nuw nsw i32 %16, 8399, !dbg !8999
  br label %18, !dbg !8999

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8977, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9000, metadata !DIExpression()) #23, !dbg !9007
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9009, !srcloc !9015
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !9009
  call void @llvm.dbg.value(metadata i32 %21, metadata !9012, metadata !DIExpression()) #23, !dbg !9016
  call void @llvm.dbg.value(metadata i32 undef, metadata !9013, metadata !DIExpression()) #23, !dbg !9016
  call void @llvm.dbg.value(metadata i32 %21, metadata !9006, metadata !DIExpression()) #23, !dbg !9007
  call void @llvm.dbg.value(metadata i32 %21, metadata !8983, metadata !DIExpression()), !dbg !8990
  %22 = tail call fastcc i32 @elapsed() #24, !dbg !9017
  call void @llvm.dbg.value(metadata i32 %22, metadata !8988, metadata !DIExpression()), !dbg !8990
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9018
  call void @llvm.dbg.value(metadata i32 %23, metadata !8980, metadata !DIExpression()), !dbg !8990
  %24 = load i32, i32* @cycle_count, align 4, !dbg !9019
  %25 = add i32 %24, %22, !dbg !9019
  store i32 %25, i32* @cycle_count, align 4, !dbg !9019
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9020
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !9021
  %27 = sub i32 %25, %26, !dbg !9022
  call void @llvm.dbg.value(metadata i32 %27, metadata !8989, metadata !DIExpression()), !dbg !8990
  %28 = icmp slt i32 %27, 0, !dbg !9023
  br i1 %28, label %38, label %29, !dbg !9025

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !8979, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata i32 undef, metadata !8979, metadata !DIExpression()), !dbg !8990
  %30 = add nuw i32 %19, %27, !dbg !9026
  %31 = urem i32 %30, 8400, !dbg !9028
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !8979, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8990
  %32 = sub nuw nsw i32 %19, %31, !dbg !9029
  call void @llvm.dbg.value(metadata i32 %32, metadata !8979, metadata !DIExpression()), !dbg !8990
  %33 = icmp ugt i32 %32, 1024, !dbg !9030
  br i1 %33, label %34, label %36, !dbg !9030

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !8979, metadata !DIExpression()), !dbg !8990
  %35 = icmp ugt i32 %32, 16766400, !dbg !9031
  br i1 %35, label %38, label %36, !dbg !9033

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !9034
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9035
  call void @llvm.dbg.value(metadata i32 %40, metadata !8981, metadata !DIExpression()), !dbg !8990
  %41 = add nsw i32 %39, -1, !dbg !9036
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9037
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9038
  %42 = icmp ult i32 %23, %40, !dbg !9039
  br i1 %42, label %43, label %48, !dbg !9041

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !9042
  %45 = add i32 %23, %9, !dbg !9044
  %46 = sub i32 %45, %40, !dbg !9045
  %47 = add i32 %46, %44, !dbg !9042
  br label %52, !dbg !9046

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !9047
  %50 = load i32, i32* @cycle_count, align 4, !dbg !9049
  %51 = add i32 %49, %50, !dbg !9049
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !9050
  store i32 %53, i32* @cycle_count, align 4, !dbg !9050
  call void @llvm.dbg.value(metadata i32 %21, metadata !9051, metadata !DIExpression()) #23, !dbg !9057
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9056, metadata !DIExpression()) #23, !dbg !9057
  call void @llvm.dbg.value(metadata i32 %21, metadata !9059, metadata !DIExpression()) #23, !dbg !9062
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !9064, !srcloc !9065
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !9066
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !9067 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9000, metadata !DIExpression()) #23, !dbg !9071
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9073, !srcloc !9015
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9073
  call void @llvm.dbg.value(metadata i32 %2, metadata !9012, metadata !DIExpression()) #23, !dbg !9075
  call void @llvm.dbg.value(metadata i32 undef, metadata !9013, metadata !DIExpression()) #23, !dbg !9075
  call void @llvm.dbg.value(metadata i32 %2, metadata !9006, metadata !DIExpression()) #23, !dbg !9071
  call void @llvm.dbg.value(metadata i32 %2, metadata !9069, metadata !DIExpression()), !dbg !9076
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9077
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9078
  %5 = add i32 %4, %3, !dbg !9079
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9080
  %7 = sub i32 %5, %6, !dbg !9081
  call void @llvm.dbg.value(metadata i32 %7, metadata !9070, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32 %2, metadata !9051, metadata !DIExpression()) #23, !dbg !9082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9056, metadata !DIExpression()) #23, !dbg !9082
  call void @llvm.dbg.value(metadata i32 %2, metadata !9059, metadata !DIExpression()) #23, !dbg !9084
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9086, !srcloc !9065
  %8 = udiv i32 %7, 8400, !dbg !9087
  ret i32 %8, !dbg !9088
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !9089 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9000, metadata !DIExpression()) #23, !dbg !9093
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9095, !srcloc !9015
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9095
  call void @llvm.dbg.value(metadata i32 %2, metadata !9012, metadata !DIExpression()) #23, !dbg !9097
  call void @llvm.dbg.value(metadata i32 undef, metadata !9013, metadata !DIExpression()) #23, !dbg !9097
  call void @llvm.dbg.value(metadata i32 %2, metadata !9006, metadata !DIExpression()) #23, !dbg !9093
  call void @llvm.dbg.value(metadata i32 %2, metadata !9091, metadata !DIExpression()), !dbg !9098
  %3 = tail call fastcc i32 @elapsed() #24, !dbg !9099
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9100
  %5 = add i32 %4, %3, !dbg !9101
  call void @llvm.dbg.value(metadata i32 %5, metadata !9092, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.value(metadata i32 %2, metadata !9051, metadata !DIExpression()) #23, !dbg !9102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9056, metadata !DIExpression()) #23, !dbg !9102
  call void @llvm.dbg.value(metadata i32 %2, metadata !9059, metadata !DIExpression()) #23, !dbg !9104
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9106, !srcloc !9065
  ret i32 %5, !dbg !9107
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #13 !dbg !9108 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9109
  %2 = icmp eq i32 %1, -16777216, !dbg !9111
  br i1 %2, label %3, label %6, !dbg !9112

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9113
  %5 = or i32 %4, 1, !dbg !9113
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9113
  br label %6, !dbg !9115

6:                                                ; preds = %3, %0
  ret void, !dbg !9116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #13 !dbg !9117 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9118
  %2 = and i32 %1, -2, !dbg !9118
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9118
  ret void, !dbg !9119
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !9120 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9146, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata i8 %1, metadata !9147, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9148, metadata !DIExpression()), !dbg !9149
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9150
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9150
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9149
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9151
  %8 = load i8, i8* %6, align 4, !dbg !9152
  %9 = zext i8 %8 to i32, !dbg !9153
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9153
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9154
  br i1 %11, label %18, label %24, !dbg !9155

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9149
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9151
  %14 = load i8, i8* %6, align 4, !dbg !9152
  %15 = zext i8 %14 to i32, !dbg !9153
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9153
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9154
  br i1 %17, label %18, label %24, !dbg !9155, !llvm.loop !9156

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9158
  %21 = load i8, i8* %20, align 1, !dbg !9158
  %22 = icmp eq i8 %21, %1, !dbg !9161
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9162
  br i1 %22, label %24, label %12, !dbg !9163

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9149
  ret i32 %25, !dbg !9164
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9165 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !9176, metadata !DIExpression()), !dbg !9192
  call void @llvm.dbg.value(metadata i8 %1, metadata !9177, metadata !DIExpression()), !dbg !9192
  call void @llvm.dbg.value(metadata i32 %2, metadata !9178, metadata !DIExpression()), !dbg !9192
  call void @llvm.dbg.value(metadata i32 0, metadata !9181, metadata !DIExpression()), !dbg !9192
  call void @llvm.dbg.value(metadata i32 0, metadata !9182, metadata !DIExpression()), !dbg !9192
  call void @llvm.dbg.value(metadata i8 0, metadata !9183, metadata !DIExpression()), !dbg !9193
  %4 = icmp eq i8 %1, 0, !dbg !9194
  br i1 %4, label %35, label %5, !dbg !9195

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9194
  br label %9, !dbg !9195

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !9183, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.value(metadata i32 %29, metadata !9181, metadata !DIExpression()), !dbg !9192
  %8 = icmp eq i32 %34, %6, !dbg !9194
  br i1 %8, label %35, label %9, !dbg !9195, !llvm.loop !9196

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9183, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.value(metadata i32 %11, metadata !9181, metadata !DIExpression()), !dbg !9192
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !9198
  %13 = load i32, i32* %12, align 4, !dbg !9198
  call void @llvm.dbg.value(metadata i32 %13, metadata !9180, metadata !DIExpression()), !dbg !9192
  %14 = and i32 %13, 31, !dbg !9199
  %15 = icmp ult i32 %14, 16, !dbg !9200
  br i1 %15, label %16, label %20, !dbg !9201

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9202
  %18 = load i32, i32* %17, align 4, !dbg !9202
  %19 = or i32 %18, 32, !dbg !9204
  call void @llvm.dbg.value(metadata i32 %19, metadata !9181, metadata !DIExpression()), !dbg !9192
  br label %28, !dbg !9205

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !9206

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9207
  %23 = load i32, i32* %22, align 4, !dbg !9207
  call void @llvm.dbg.value(metadata i32 %23, metadata !9185, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !9208
  %24 = lshr i32 %23, 7, !dbg !9209
  %25 = and i32 %24, 16, !dbg !9209
  %26 = or i32 %25, %23, !dbg !9209
  call void @llvm.dbg.value(metadata i32 %26, metadata !9181, metadata !DIExpression()), !dbg !9192
  br label %28, !dbg !9210

27:                                               ; preds = %20
  br label %28, !dbg !9211

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !9192
  call void @llvm.dbg.value(metadata i32 %29, metadata !9181, metadata !DIExpression()), !dbg !9192
  %30 = lshr i32 %13, 5, !dbg !9211
  %31 = and i32 %30, 255, !dbg !9211
  call void @llvm.dbg.value(metadata i32 %31, metadata !9179, metadata !DIExpression()), !dbg !9192
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !9212
  call void @llvm.dbg.value(metadata i32 %32, metadata !9182, metadata !DIExpression()), !dbg !9192
  %33 = icmp slt i32 %32, 0, !dbg !9213
  %34 = add nuw nsw i32 %10, 1, !dbg !9215
  call void @llvm.dbg.value(metadata i32 %34, metadata !9183, metadata !DIExpression()), !dbg !9193
  br i1 %33, label %35, label %7, !dbg !9216

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !9217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9222, metadata !DIExpression()), !dbg !9226
  call void @llvm.dbg.value(metadata i32 %1, metadata !9223, metadata !DIExpression()), !dbg !9226
  call void @llvm.dbg.value(metadata i32 %2, metadata !9224, metadata !DIExpression()), !dbg !9226
  %4 = icmp ugt i32 %0, 175, !dbg !9227
  br i1 %4, label %16, label %5, !dbg !9229

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !9230
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !9231
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !9231
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9225, metadata !DIExpression()), !dbg !9226
  %9 = add nsw i32 %6, -8, !dbg !9232
  %10 = icmp ult i32 %9, 3, !dbg !9232
  br i1 %10, label %16, label %11, !dbg !9234

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.62(%struct.device* noundef %8) #24, !dbg !9235
  br i1 %12, label %13, label %16, !dbg !9236

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !9237
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !9238
  br label %16, !dbg !9239

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !9226
  ret i32 %17, !dbg !9240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.62(%struct.device* noundef %0) unnamed_addr #1 !dbg !9241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9245, metadata !DIExpression()), !dbg !9246
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9247, !srcloc !9249
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.63(%struct.device* noundef %0) #24, !dbg !9250
  ret i1 %2, !dbg !9251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.63(%struct.device* noundef %0) unnamed_addr #1 !dbg !9252 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9254, metadata !DIExpression()), !dbg !9255
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !9256
  ret i1 %2, !dbg !9257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #12 !dbg !9258 {
  ret void, !dbg !9259
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !9260 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9262, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.value(metadata i32 0, metadata !9263, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.value(metadata i32 2, metadata !9264, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.value(metadata i32 0, metadata !9265, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.value(metadata i32 2, metadata !9266, metadata !DIExpression()), !dbg !9267
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9268
  %2 = and i32 %1, 12, !dbg !9269
  call void @llvm.dbg.value(metadata i32 %2, metadata !9262, metadata !DIExpression()), !dbg !9267
  %3 = icmp eq i32 %2, 8, !dbg !9270
  br i1 %3, label %4, label %18, !dbg !9270

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9271
  call void @llvm.dbg.value(metadata i32 %5, metadata !9265, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !9267
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9273
  %7 = and i32 %6, 63, !dbg !9274
  call void @llvm.dbg.value(metadata i32 %7, metadata !9266, metadata !DIExpression()), !dbg !9267
  %8 = udiv i32 16000000, %7, !dbg !9275
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9275
  %10 = lshr i32 %9, 6, !dbg !9275
  %11 = and i32 %10, 511, !dbg !9275
  %12 = mul i32 %11, %8, !dbg !9275
  call void @llvm.dbg.value(metadata i32 %12, metadata !9263, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.value(metadata i32 %12, metadata !9263, metadata !DIExpression()), !dbg !9267
  call void @llvm.dbg.value(metadata i32 %12, metadata !9263, metadata !DIExpression()), !dbg !9267
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9277
  %14 = lshr i32 %13, 15, !dbg !9278
  %15 = and i32 %14, 6, !dbg !9278
  %16 = add nuw nsw i32 %15, 2, !dbg !9278
  call void @llvm.dbg.value(metadata i32 %16, metadata !9264, metadata !DIExpression()), !dbg !9267
  %17 = udiv i32 %12, %16, !dbg !9279
  br label %18, !dbg !9280

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !9281
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9282
  %21 = lshr i32 %20, 4, !dbg !9283
  %22 = and i32 %21, 15, !dbg !9283
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !9284
  %24 = load i8, i8* %23, align 1, !dbg !9284
  %25 = zext i8 %24 to i32, !dbg !9284
  call void @llvm.dbg.value(metadata i32 %25, metadata !9262, metadata !DIExpression()), !dbg !9267
  %26 = lshr i32 %19, %25, !dbg !9285
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !9285
  ret void, !dbg !9286
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !9287 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !9329, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i32 0, metadata !9330, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i32 0, metadata !9331, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i32 0, metadata !9332, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i32 0, metadata !9333, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i32 0, metadata !9334, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i32 0, metadata !9335, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i32 0, metadata !9336, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i32 0, metadata !9337, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i32 0, metadata !9338, metadata !DIExpression()), !dbg !9343
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !9344
  %4 = load i32, i32* %3, align 4, !dbg !9344
  %5 = and i32 %4, 1, !dbg !9346
  %6 = icmp eq i32 %5, 0, !dbg !9347
  br i1 %6, label %17, label %7, !dbg !9348

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9349
  %9 = and i32 %8, -100663297, !dbg !9349
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9349
  %11 = load i32, i32* %10, align 4, !dbg !9349
  %12 = or i32 %9, %11, !dbg !9349
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9349
  %13 = load i32, i32* %10, align 4, !dbg !9351
  %14 = icmp eq i32 %13, 0, !dbg !9353
  %15 = zext i1 %14 to i32, !dbg !9354
  %16 = load i32, i32* %3, align 4, !dbg !9355
  br label %17, !dbg !9354

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !9355
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !9343
  call void @llvm.dbg.value(metadata i32 %19, metadata !9337, metadata !DIExpression()), !dbg !9343
  %20 = and i32 %18, 2, !dbg !9357
  %21 = icmp eq i32 %20, 0, !dbg !9358
  br i1 %21, label %32, label %22, !dbg !9359

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9360
  %24 = and i32 %23, -402653185, !dbg !9360
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9360
  %26 = load i32, i32* %25, align 4, !dbg !9360
  %27 = or i32 %24, %26, !dbg !9360
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9360
  %28 = load i32, i32* %25, align 4, !dbg !9362
  %29 = icmp eq i32 %28, 0, !dbg !9364
  %30 = select i1 %29, i32 1, i32 %19, !dbg !9365
  %31 = load i32, i32* %3, align 4, !dbg !9366
  br label %32, !dbg !9365

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !9366
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !9343
  call void @llvm.dbg.value(metadata i32 %34, metadata !9337, metadata !DIExpression()), !dbg !9343
  %35 = and i32 %33, 4, !dbg !9368
  %36 = icmp eq i32 %35, 0, !dbg !9369
  br i1 %36, label %49, label %37, !dbg !9370

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9371
  %39 = and i32 %38, -3145729, !dbg !9371
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9371
  %41 = load i32, i32* %40, align 4, !dbg !9371
  %42 = or i32 %39, %41, !dbg !9371
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9371
  %43 = load i32, i32* %40, align 4, !dbg !9373
  %44 = icmp eq i32 %43, 1048576, !dbg !9375
  %45 = select i1 %44, i32 1, i32 %34, !dbg !9376
  call void @llvm.dbg.value(metadata i32 %45, metadata !9337, metadata !DIExpression()), !dbg !9343
  %46 = icmp eq i32 %43, 0, !dbg !9377
  %47 = zext i1 %46 to i32, !dbg !9379
  %48 = load i32, i32* %3, align 4, !dbg !9380
  br label %49, !dbg !9379

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !9380
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !9343
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !9343
  call void @llvm.dbg.value(metadata i32 %52, metadata !9338, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i32 %51, metadata !9337, metadata !DIExpression()), !dbg !9343
  %53 = and i32 %50, 8, !dbg !9382
  %54 = icmp eq i32 %53, 0, !dbg !9383
  br i1 %54, label %67, label %55, !dbg !9384

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9385
  %57 = and i32 %56, -12582913, !dbg !9385
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9385
  %59 = load i32, i32* %58, align 4, !dbg !9385
  %60 = or i32 %57, %59, !dbg !9385
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9385
  %61 = load i32, i32* %58, align 4, !dbg !9387
  %62 = icmp eq i32 %61, 4194304, !dbg !9389
  %63 = select i1 %62, i32 1, i32 %51, !dbg !9390
  call void @llvm.dbg.value(metadata i32 %63, metadata !9337, metadata !DIExpression()), !dbg !9343
  %64 = icmp eq i32 %61, 0, !dbg !9391
  %65 = select i1 %64, i32 1, i32 %52, !dbg !9393
  %66 = load i32, i32* %3, align 4, !dbg !9394
  br label %67, !dbg !9393

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !9394
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !9343
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !9343
  call void @llvm.dbg.value(metadata i32 %70, metadata !9338, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.value(metadata i32 %69, metadata !9337, metadata !DIExpression()), !dbg !9343
  %71 = and i32 %68, 32, !dbg !9395
  %72 = icmp eq i32 %71, 0, !dbg !9396
  br i1 %72, label %131, label %73, !dbg !9397

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !9398
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !9398
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9339, metadata !DIExpression()), !dbg !9398
  store volatile i32 0, i32* %2, align 4, !dbg !9398
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9398
  %76 = or i32 %75, 268435456, !dbg !9398
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9398
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9398
  %78 = and i32 %77, 268435456, !dbg !9398
  store volatile i32 %78, i32* %2, align 4, !dbg !9398
  %79 = load volatile i32, i32* %2, align 4, !dbg !9398
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !9399
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9400
  %81 = or i32 %80, 256, !dbg !9400
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9400
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !9401
  call void @llvm.dbg.value(metadata i32 %82, metadata !9330, metadata !DIExpression()), !dbg !9343
  br label %83, !dbg !9402

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9403
  %85 = and i32 %84, 256, !dbg !9404
  %86 = icmp eq i32 %85, 0, !dbg !9405
  br i1 %86, label %87, label %91, !dbg !9402

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #25, !dbg !9406
  %89 = sub i32 %88, %82, !dbg !9409
  %90 = icmp ugt i32 %89, 2, !dbg !9410
  br i1 %90, label %439, label %83, !dbg !9411, !llvm.loop !9412

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9414
  %93 = and i32 %92, 768, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %93, metadata !9331, metadata !DIExpression()), !dbg !9343
  %94 = icmp eq i32 %93, 0, !dbg !9416
  br i1 %94, label %116, label %95, !dbg !9418

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9419
  %97 = load i32, i32* %96, align 4, !dbg !9419
  %98 = and i32 %97, 768, !dbg !9420
  %99 = icmp eq i32 %93, %98, !dbg !9421
  br i1 %99, label %116, label %100, !dbg !9422

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9423
  %102 = and i32 %101, -769, !dbg !9425
  call void @llvm.dbg.value(metadata i32 %102, metadata !9331, metadata !DIExpression()), !dbg !9343
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !9426
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !9427
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9428
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9429
  %104 = and i32 %103, 1, !dbg !9429
  %105 = icmp eq i32 %104, 0, !dbg !9429
  br i1 %105, label %116, label %106, !dbg !9431

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #25, !dbg !9432
  call void @llvm.dbg.value(metadata i32 %107, metadata !9330, metadata !DIExpression()), !dbg !9343
  br label %108, !dbg !9434

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9435
  %110 = and i32 %109, 2, !dbg !9436
  %111 = icmp eq i32 %110, 0, !dbg !9436
  br i1 %111, label %112, label %116, !dbg !9434

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #25, !dbg !9437
  %114 = sub i32 %113, %107, !dbg !9440
  %115 = icmp ugt i32 %114, 5000, !dbg !9441
  br i1 %115, label %439, label %108, !dbg !9442, !llvm.loop !9443

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9445
  %118 = load i32, i32* %117, align 4, !dbg !9445
  %119 = and i32 %118, 768, !dbg !9445
  %120 = icmp eq i32 %119, 768, !dbg !9445
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9445
  %122 = and i32 %121, -2031617, !dbg !9445
  %123 = and i32 %118, 268434687, !dbg !9445
  %124 = select i1 %120, i32 %123, i32 0, !dbg !9445
  %125 = or i32 %122, %124, !dbg !9445
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9445
  %126 = load i32, i32* %117, align 4, !dbg !9445
  %127 = and i32 %126, 4095, !dbg !9445
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9445
  %129 = or i32 %128, %127, !dbg !9445
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9445
  %130 = load i32, i32* %3, align 4, !dbg !9447
  br label %131, !dbg !9449

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !9447
  %133 = and i32 %132, 16, !dbg !9450
  %134 = icmp eq i32 %133, 0, !dbg !9451
  br i1 %134, label %140, label %135, !dbg !9452

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !9453
  %137 = load i8, i8* %136, align 4, !dbg !9453
  %138 = zext i8 %137 to i32, !dbg !9453
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !9453
  %139 = load i32, i32* %3, align 4, !dbg !9455
  br label %140, !dbg !9457

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !9455
  %142 = and i32 %141, 128, !dbg !9458
  %143 = icmp eq i32 %142, 0, !dbg !9459
  br i1 %143, label %151, label %144, !dbg !9460

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9461
  %146 = and i32 %145, -12582913, !dbg !9461
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !9461
  %148 = load i32, i32* %147, align 4, !dbg !9461
  %149 = or i32 %146, %148, !dbg !9461
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9461
  %150 = load i32, i32* %3, align 4, !dbg !9463
  br label %151, !dbg !9465

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !9463
  %153 = and i32 %152, 64, !dbg !9466
  %154 = icmp eq i32 %153, 0, !dbg !9467
  br i1 %154, label %162, label %155, !dbg !9468

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9469
  %157 = and i32 %156, -67108865, !dbg !9469
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !9469
  %159 = load i32, i32* %158, align 4, !dbg !9469
  %160 = or i32 %157, %159, !dbg !9469
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9469
  %161 = load i32, i32* %3, align 4, !dbg !9471
  br label %162, !dbg !9473

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !9471
  %164 = and i32 %163, 256, !dbg !9474
  %165 = icmp eq i32 %164, 0, !dbg !9475
  br i1 %165, label %176, label %166, !dbg !9476

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9477
  %168 = and i32 %167, -134217729, !dbg !9477
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9477
  %170 = load i32, i32* %169, align 4, !dbg !9477
  %171 = or i32 %168, %170, !dbg !9477
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9477
  %172 = load i32, i32* %169, align 4, !dbg !9479
  %173 = icmp eq i32 %172, 134217728, !dbg !9481
  %174 = select i1 %173, i32 1, i32 %70, !dbg !9482
  %175 = load i32, i32* %3, align 4, !dbg !9483
  br label %176, !dbg !9482

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !9483
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !9343
  call void @llvm.dbg.value(metadata i32 %178, metadata !9338, metadata !DIExpression()), !dbg !9343
  %179 = and i32 %177, 512, !dbg !9485
  %180 = icmp eq i32 %179, 0, !dbg !9486
  br i1 %180, label %188, label %181, !dbg !9487

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9488
  %183 = and i32 %182, -268435457, !dbg !9488
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !9488
  %185 = load i32, i32* %184, align 4, !dbg !9488
  %186 = or i32 %183, %185, !dbg !9488
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9488
  %187 = load i32, i32* %3, align 4, !dbg !9490
  br label %188, !dbg !9492

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !9490
  %190 = and i32 %189, 1024, !dbg !9493
  %191 = icmp eq i32 %190, 0, !dbg !9494
  br i1 %191, label %204, label %192, !dbg !9495

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9496
  %194 = and i32 %193, -536870913, !dbg !9496
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9496
  %196 = load i32, i32* %195, align 4, !dbg !9496
  %197 = or i32 %194, %196, !dbg !9496
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9496
  %198 = load i32, i32* %195, align 4, !dbg !9498
  %199 = icmp eq i32 %198, 536870912, !dbg !9500
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !9501
  call void @llvm.dbg.value(metadata i32 %69, metadata !9337, metadata !DIExpression()), !dbg !9343
  br i1 %201, label %209, label %202, !dbg !9501

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !9502
  br label %206, !dbg !9501

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !9337, metadata !DIExpression()), !dbg !9343
  %205 = icmp eq i32 %69, 1, !dbg !9504
  br i1 %205, label %209, label %206, !dbg !9505

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !9502
  %208 = icmp eq i32 %207, 2048, !dbg !9506
  br i1 %208, label %209, label %356, !dbg !9507

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9508
  %210 = tail call i32 @HAL_GetTick() #25, !dbg !9510
  call void @llvm.dbg.value(metadata i32 %210, metadata !9330, metadata !DIExpression()), !dbg !9343
  br label %211, !dbg !9511

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9512
  %213 = and i32 %212, 134217728, !dbg !9512
  %214 = icmp eq i32 %213, 0, !dbg !9512
  br i1 %214, label %219, label %215, !dbg !9511

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !9513
  %217 = sub i32 %216, %210, !dbg !9516
  %218 = icmp ugt i32 %217, 2, !dbg !9517
  br i1 %218, label %439, label %211, !dbg !9518, !llvm.loop !9519

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !9521
  %221 = and i32 %220, 1, !dbg !9523
  %222 = icmp eq i32 %221, 0, !dbg !9524
  br i1 %222, label %227, label %223, !dbg !9525

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9526
  %225 = load i32, i32* %224, align 4, !dbg !9526
  %226 = icmp eq i32 %225, 0, !dbg !9527
  br i1 %226, label %234, label %227, !dbg !9528

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !9529
  %229 = icmp eq i32 %228, 0, !dbg !9530
  br i1 %229, label %252, label %230, !dbg !9531

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9532
  %232 = load i32, i32* %231, align 4, !dbg !9532
  %233 = icmp eq i32 %232, 0, !dbg !9533
  br i1 %233, label %234, label %252, !dbg !9534

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9535
  %236 = and i32 %235, 196608, !dbg !9537
  call void @llvm.dbg.value(metadata i32 %236, metadata !9332, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9343
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9538
  %238 = and i32 %237, 251658240, !dbg !9539
  call void @llvm.dbg.value(metadata i32 %238, metadata !9333, metadata !DIExpression()), !dbg !9343
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9540
  %240 = load i32, i32* %239, align 4, !dbg !9540
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9540
  %242 = load i32, i32* %241, align 4, !dbg !9540
  %243 = shl i32 %242, 6, !dbg !9540
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9540
  %245 = load i32, i32* %244, align 4, !dbg !9540
  %246 = shl i32 %245, 28, !dbg !9540
  %247 = or i32 %240, %236, !dbg !9540
  %248 = or i32 %247, %238, !dbg !9540
  %249 = or i32 %248, %243, !dbg !9540
  %250 = or i32 %249, %246, !dbg !9540
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9540
  %251 = load i32, i32* %3, align 4, !dbg !9541
  br label %252, !dbg !9543

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !9541
  %254 = and i32 %253, 4, !dbg !9544
  %255 = icmp eq i32 %254, 0, !dbg !9545
  br i1 %255, label %260, label %256, !dbg !9546

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9547
  %258 = load i32, i32* %257, align 4, !dbg !9547
  %259 = icmp eq i32 %258, 1048576, !dbg !9548
  br i1 %259, label %267, label %260, !dbg !9549

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !9550
  %262 = icmp eq i32 %261, 0, !dbg !9551
  br i1 %262, label %291, label %263, !dbg !9552

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9553
  %265 = load i32, i32* %264, align 4, !dbg !9553
  %266 = icmp eq i32 %265, 4194304, !dbg !9554
  br i1 %266, label %267, label %291, !dbg !9555

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9556
  %269 = and i32 %268, 196608, !dbg !9558
  call void @llvm.dbg.value(metadata i32 %269, metadata !9332, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9343
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9559
  %271 = and i32 %270, 1879048192, !dbg !9560
  call void @llvm.dbg.value(metadata i32 %271, metadata !9334, metadata !DIExpression()), !dbg !9343
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9561
  %273 = load i32, i32* %272, align 4, !dbg !9561
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9561
  %275 = load i32, i32* %274, align 4, !dbg !9561
  %276 = shl i32 %275, 6, !dbg !9561
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9561
  %278 = load i32, i32* %277, align 4, !dbg !9561
  %279 = shl i32 %278, 24, !dbg !9561
  %280 = or i32 %273, %269, !dbg !9561
  %281 = or i32 %280, %271, !dbg !9561
  %282 = or i32 %281, %276, !dbg !9561
  %283 = or i32 %282, %279, !dbg !9561
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9561
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9562
  %285 = and i32 %284, -32, !dbg !9562
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !9562
  %287 = load i32, i32* %286, align 4, !dbg !9562
  %288 = add i32 %287, -1, !dbg !9562
  %289 = or i32 %288, %285, !dbg !9562
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9562
  %290 = load i32, i32* %3, align 4, !dbg !9563
  br label %291, !dbg !9565

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !9563
  %293 = and i32 %292, 1024, !dbg !9566
  %294 = icmp eq i32 %293, 0, !dbg !9567
  br i1 %294, label %321, label %295, !dbg !9568

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9569
  %297 = load i32, i32* %296, align 4, !dbg !9569
  %298 = icmp eq i32 %297, 536870912, !dbg !9570
  br i1 %298, label %299, label %321, !dbg !9571

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9572
  call void @llvm.dbg.value(metadata i32 %300, metadata !9333, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9343
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9574
  %302 = and i32 %301, 1879048192, !dbg !9575
  call void @llvm.dbg.value(metadata i32 %302, metadata !9334, metadata !DIExpression()), !dbg !9343
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9576
  %304 = load i32, i32* %303, align 4, !dbg !9576
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9576
  %306 = load i32, i32* %305, align 4, !dbg !9576
  %307 = shl i32 %306, 6, !dbg !9576
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9576
  %309 = load i32, i32* %308, align 4, !dbg !9576
  %310 = shl i32 %309, 15, !dbg !9576
  %311 = add i32 %310, -65536, !dbg !9576
  %312 = and i32 %311, -65536, !dbg !9576
  %313 = shl i32 %300, 9, !dbg !9576
  %314 = and i32 %313, 100663296, !dbg !9576
  %315 = add nuw nsw i32 %314, 33554432, !dbg !9576
  %316 = or i32 %302, %304, !dbg !9576
  %317 = or i32 %316, %315, !dbg !9576
  %318 = or i32 %317, %307, !dbg !9576
  %319 = or i32 %318, %312, !dbg !9576
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9576
  %320 = load i32, i32* %3, align 4, !dbg !9577
  br label %321, !dbg !9579

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !9577
  %323 = and i32 %322, 2048, !dbg !9580
  %324 = icmp eq i32 %323, 0, !dbg !9581
  br i1 %324, label %346, label %325, !dbg !9582

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9583
  %327 = load i32, i32* %326, align 4, !dbg !9583
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9583
  %329 = load i32, i32* %328, align 4, !dbg !9583
  %330 = shl i32 %329, 6, !dbg !9583
  %331 = or i32 %330, %327, !dbg !9583
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9583
  %333 = load i32, i32* %332, align 4, !dbg !9583
  %334 = shl i32 %333, 15, !dbg !9583
  %335 = add i32 %334, -65536, !dbg !9583
  %336 = and i32 %335, -65536, !dbg !9583
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9583
  %338 = load i32, i32* %337, align 4, !dbg !9583
  %339 = shl i32 %338, 24, !dbg !9583
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9583
  %341 = load i32, i32* %340, align 4, !dbg !9583
  %342 = shl i32 %341, 28, !dbg !9583
  %343 = or i32 %331, %339, !dbg !9583
  %344 = or i32 %343, %336, !dbg !9583
  %345 = or i32 %344, %342, !dbg !9583
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9583
  br label %346, !dbg !9585

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9586
  %347 = tail call i32 @HAL_GetTick() #25, !dbg !9587
  call void @llvm.dbg.value(metadata i32 %347, metadata !9330, metadata !DIExpression()), !dbg !9343
  br label %348, !dbg !9588

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9589
  %350 = and i32 %349, 134217728, !dbg !9590
  %351 = icmp eq i32 %350, 0, !dbg !9590
  br i1 %351, label %352, label %356, !dbg !9588

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #25, !dbg !9591
  %354 = sub i32 %353, %347, !dbg !9594
  %355 = icmp ugt i32 %354, 2, !dbg !9595
  br i1 %355, label %439, label %348, !dbg !9596, !llvm.loop !9597

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !9599
  br i1 %357, label %358, label %439, !dbg !9601

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9602
  %359 = tail call i32 @HAL_GetTick() #25, !dbg !9604
  call void @llvm.dbg.value(metadata i32 %359, metadata !9330, metadata !DIExpression()), !dbg !9343
  br label %360, !dbg !9605

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9606
  %362 = and i32 %361, 536870912, !dbg !9606
  %363 = icmp eq i32 %362, 0, !dbg !9606
  br i1 %363, label %368, label %364, !dbg !9605

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #25, !dbg !9607
  %366 = sub i32 %365, %359, !dbg !9610
  %367 = icmp ugt i32 %366, 2, !dbg !9611
  br i1 %367, label %439, label %360, !dbg !9612, !llvm.loop !9613

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !9615
  %370 = and i32 %369, 4, !dbg !9617
  %371 = icmp eq i32 %370, 0, !dbg !9618
  br i1 %371, label %376, label %372, !dbg !9619

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9620
  %374 = load i32, i32* %373, align 4, !dbg !9620
  %375 = icmp eq i32 %374, 0, !dbg !9621
  br i1 %375, label %383, label %376, !dbg !9622

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !9623
  %378 = icmp eq i32 %377, 0, !dbg !9624
  br i1 %378, label %405, label %379, !dbg !9625

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9626
  %381 = load i32, i32* %380, align 4, !dbg !9626
  %382 = icmp eq i32 %381, 0, !dbg !9627
  br i1 %382, label %383, label %405, !dbg !9628

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9629
  %385 = and i32 %384, 196608, !dbg !9631
  call void @llvm.dbg.value(metadata i32 %385, metadata !9335, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !9343
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9632
  %387 = load i32, i32* %386, align 4, !dbg !9632
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9632
  %389 = load i32, i32* %388, align 4, !dbg !9632
  %390 = shl i32 %389, 6, !dbg !9632
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !9632
  %392 = load i32, i32* %391, align 4, !dbg !9632
  %393 = shl i32 %392, 24, !dbg !9632
  %394 = or i32 %385, %387, !dbg !9632
  %395 = or i32 %394, %390, !dbg !9632
  %396 = or i32 %395, %393, !dbg !9632
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9632
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9633
  %398 = and i32 %397, -7937, !dbg !9633
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !9633
  %400 = load i32, i32* %399, align 4, !dbg !9633
  %401 = shl i32 %400, 8, !dbg !9633
  %402 = add i32 %401, -256, !dbg !9633
  %403 = or i32 %402, %398, !dbg !9633
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9633
  %404 = load i32, i32* %3, align 4, !dbg !9634
  br label %405, !dbg !9636

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !9634
  %407 = and i32 %406, 256, !dbg !9637
  %408 = icmp eq i32 %407, 0, !dbg !9638
  br i1 %408, label %429, label %409, !dbg !9639

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9640
  %411 = load i32, i32* %410, align 4, !dbg !9640
  %412 = icmp eq i32 %411, 134217728, !dbg !9641
  br i1 %412, label %413, label %429, !dbg !9642

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9643
  %415 = and i32 %414, 251658240, !dbg !9645
  call void @llvm.dbg.value(metadata i32 %415, metadata !9336, metadata !DIExpression()), !dbg !9343
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9646
  %417 = load i32, i32* %416, align 4, !dbg !9646
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9646
  %419 = load i32, i32* %418, align 4, !dbg !9646
  %420 = shl i32 %419, 6, !dbg !9646
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !9646
  %422 = load i32, i32* %421, align 4, !dbg !9646
  %423 = shl i32 %422, 15, !dbg !9646
  %424 = add i32 %423, -65536, !dbg !9646
  %425 = and i32 %424, -65536, !dbg !9646
  %426 = or i32 %415, %417, !dbg !9646
  %427 = or i32 %426, %420, !dbg !9646
  %428 = or i32 %427, %425, !dbg !9646
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9646
  br label %429, !dbg !9647

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9648
  %430 = tail call i32 @HAL_GetTick() #25, !dbg !9649
  call void @llvm.dbg.value(metadata i32 %430, metadata !9330, metadata !DIExpression()), !dbg !9343
  br label %431, !dbg !9650

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9651
  %433 = and i32 %432, 536870912, !dbg !9652
  %434 = icmp eq i32 %433, 0, !dbg !9652
  br i1 %434, label %435, label %439, !dbg !9650

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #25, !dbg !9653
  %437 = sub i32 %436, %430, !dbg !9656
  %438 = icmp ugt i32 %437, 2, !dbg !9657
  br i1 %438, label %439, label %431, !dbg !9658, !llvm.loop !9659

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !9343
  ret i32 %440, !dbg !9661
}

; Function Attrs: optsize
declare !dbg !9662 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #14 !dbg !9664 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !9668, metadata !DIExpression()), !dbg !9670
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !9671
  store i32 2047, i32* %2, align 4, !dbg !9672
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9673
  %4 = and i32 %3, 63, !dbg !9674
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !9675
  store i32 %4, i32* %5, align 4, !dbg !9676
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9677
  %7 = lshr i32 %6, 6, !dbg !9678
  %8 = and i32 %7, 511, !dbg !9678
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !9679
  store i32 %8, i32* %9, align 4, !dbg !9680
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9681
  %11 = lshr i32 %10, 15, !dbg !9682
  %12 = and i32 %11, 6, !dbg !9682
  %13 = add nuw nsw i32 %12, 2, !dbg !9682
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !9683
  store i32 %13, i32* %14, align 4, !dbg !9684
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9685
  %16 = lshr i32 %15, 24, !dbg !9686
  %17 = and i32 %16, 15, !dbg !9686
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !9687
  store i32 %17, i32* %18, align 4, !dbg !9688
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9689
  %20 = lshr i32 %19, 28, !dbg !9690
  %21 = and i32 %20, 7, !dbg !9690
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !9691
  store i32 %21, i32* %22, align 4, !dbg !9692
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9693
  %24 = and i32 %23, 63, !dbg !9694
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !9695
  store i32 %24, i32* %25, align 4, !dbg !9696
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9697
  %27 = lshr i32 %26, 6, !dbg !9698
  %28 = and i32 %27, 511, !dbg !9698
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !9699
  store i32 %28, i32* %29, align 4, !dbg !9700
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9701
  %31 = lshr i32 %30, 15, !dbg !9702
  %32 = and i32 %31, 6, !dbg !9702
  %33 = add nuw nsw i32 %32, 2, !dbg !9702
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !9703
  store i32 %33, i32* %34, align 4, !dbg !9704
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9705
  %36 = lshr i32 %35, 24, !dbg !9706
  %37 = and i32 %36, 15, !dbg !9706
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !9707
  store i32 %37, i32* %38, align 4, !dbg !9708
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9709
  %40 = and i32 %39, 31, !dbg !9710
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !9711
  store i32 %40, i32* %41, align 4, !dbg !9712
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9713
  %43 = lshr i32 %42, 8, !dbg !9714
  %44 = and i32 %43, 31, !dbg !9714
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !9715
  store i32 %44, i32* %45, align 4, !dbg !9716
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9717
  %47 = and i32 %46, 3145728, !dbg !9717
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !9718
  store i32 %47, i32* %48, align 4, !dbg !9719
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9720
  %50 = and i32 %49, 12582912, !dbg !9720
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !9721
  store i32 %50, i32* %51, align 4, !dbg !9722
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9723
  %53 = and i32 %52, 100663296, !dbg !9723
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !9724
  store i32 %53, i32* %54, align 4, !dbg !9725
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9726
  %56 = and i32 %55, 402653184, !dbg !9726
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !9727
  store i32 %56, i32* %57, align 4, !dbg !9728
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9729
  %59 = and i32 %58, 2031616, !dbg !9730
  call void @llvm.dbg.value(metadata i32 %59, metadata !9669, metadata !DIExpression()), !dbg !9670
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9731
  %61 = and i32 %60, 768, !dbg !9732
  %62 = or i32 %61, %59, !dbg !9733
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !9734
  store i32 %62, i32* %63, align 4, !dbg !9735
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9736
  %65 = and i32 %64, 67108864, !dbg !9736
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !9737
  store i32 %65, i32* %66, align 4, !dbg !9738
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9739
  %68 = and i32 %67, 12582912, !dbg !9739
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !9740
  store i32 %68, i32* %69, align 4, !dbg !9741
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9742
  %71 = and i32 %70, 134217728, !dbg !9742
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !9743
  store i32 %71, i32* %72, align 4, !dbg !9744
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9745
  %74 = and i32 %73, 268435456, !dbg !9745
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !9746
  store i32 %74, i32* %75, align 4, !dbg !9747
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !9748
  %77 = and i32 %76, 536870912, !dbg !9748
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !9749
  store i32 %77, i32* %78, align 4, !dbg !9750
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9751
  %80 = lshr i32 %79, 24, !dbg !9753
  %81 = trunc i32 %80 to i8, !dbg !9753
  %82 = and i8 %81, 1, !dbg !9753
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !9754
  store i8 %82, i8* %83, align 4, !dbg !9756
  ret void, !dbg !9757
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #14 !dbg !9758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9760, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 0, metadata !9761, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 0, metadata !9762, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 0, metadata !9763, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 0, metadata !9764, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 0, metadata !9765, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 0, metadata !9766, metadata !DIExpression()), !dbg !9767
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !9768

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9769
  call void @llvm.dbg.value(metadata i32 %3, metadata !9764, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 %3, metadata !9764, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !9767
  %4 = lshr i32 %3, 20, !dbg !9772
  %5 = and i32 %4, 15, !dbg !9772
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !9772

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9773
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9777
  %9 = and i32 %8, 63, !dbg !9777
  %10 = udiv i32 16000000, %9, !dbg !9777
  call void @llvm.dbg.value(metadata i32 %10, metadata !9763, metadata !DIExpression()), !dbg !9767
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9778
  %12 = lshr i32 %11, 24, !dbg !9779
  %13 = and i32 %12, 15, !dbg !9779
  call void @llvm.dbg.value(metadata i32 %13, metadata !9761, metadata !DIExpression()), !dbg !9767
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9780
  %15 = lshr i32 %14, 6, !dbg !9781
  %16 = and i32 %15, 511, !dbg !9781
  %17 = mul i32 %16, %10, !dbg !9782
  %18 = udiv i32 %17, %13, !dbg !9783
  call void @llvm.dbg.value(metadata i32 %18, metadata !9762, metadata !DIExpression()), !dbg !9767
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9784
  %20 = lshr i32 %19, 8, !dbg !9785
  %21 = and i32 %20, 31, !dbg !9785
  %22 = add nuw nsw i32 %21, 1, !dbg !9786
  call void @llvm.dbg.value(metadata i32 %22, metadata !9761, metadata !DIExpression()), !dbg !9767
  %23 = udiv i32 %18, %22, !dbg !9787
  call void @llvm.dbg.value(metadata i32 %23, metadata !9762, metadata !DIExpression()), !dbg !9767
  br label %123, !dbg !9788

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9789
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9792
  %27 = and i32 %26, 63, !dbg !9792
  %28 = udiv i32 16000000, %27, !dbg !9792
  call void @llvm.dbg.value(metadata i32 %28, metadata !9763, metadata !DIExpression()), !dbg !9767
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9793
  %30 = lshr i32 %29, 24, !dbg !9794
  %31 = and i32 %30, 15, !dbg !9794
  call void @llvm.dbg.value(metadata i32 %31, metadata !9761, metadata !DIExpression()), !dbg !9767
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9795
  %33 = lshr i32 %32, 6, !dbg !9796
  %34 = and i32 %33, 511, !dbg !9796
  %35 = mul i32 %34, %28, !dbg !9797
  %36 = udiv i32 %35, %31, !dbg !9798
  call void @llvm.dbg.value(metadata i32 %36, metadata !9762, metadata !DIExpression()), !dbg !9767
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9799
  %38 = and i32 %37, 31, !dbg !9800
  %39 = add nuw nsw i32 %38, 1, !dbg !9801
  call void @llvm.dbg.value(metadata i32 %39, metadata !9761, metadata !DIExpression()), !dbg !9767
  %40 = udiv i32 %36, %39, !dbg !9802
  call void @llvm.dbg.value(metadata i32 %40, metadata !9762, metadata !DIExpression()), !dbg !9767
  br label %123, !dbg !9803

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9804
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9807
  %44 = and i32 %43, 63, !dbg !9807
  %45 = udiv i32 16000000, %44, !dbg !9807
  call void @llvm.dbg.value(metadata i32 %45, metadata !9763, metadata !DIExpression()), !dbg !9767
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9808
  %47 = lshr i32 %46, 28, !dbg !9809
  %48 = and i32 %47, 7, !dbg !9809
  call void @llvm.dbg.value(metadata i32 %48, metadata !9761, metadata !DIExpression()), !dbg !9767
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9810
  %50 = lshr i32 %49, 6, !dbg !9811
  %51 = and i32 %50, 511, !dbg !9811
  %52 = mul i32 %51, %45, !dbg !9812
  %53 = udiv i32 %52, %48, !dbg !9813
  call void @llvm.dbg.value(metadata i32 %53, metadata !9762, metadata !DIExpression()), !dbg !9767
  br label %123, !dbg !9814

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !9762, metadata !DIExpression()), !dbg !9767
  br label %123, !dbg !9815

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9817
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9762, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9762, metadata !DIExpression()), !dbg !9767
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9820
  call void @llvm.dbg.value(metadata i32 %58, metadata !9765, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !9767
  %59 = lshr i32 %58, 25, !dbg !9822
  %60 = and i32 %59, 3, !dbg !9822
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !9822

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9823
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9827
  %64 = and i32 %63, 63, !dbg !9827
  %65 = udiv i32 16000000, %64, !dbg !9827
  call void @llvm.dbg.value(metadata i32 %65, metadata !9763, metadata !DIExpression()), !dbg !9767
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9828
  %67 = lshr i32 %66, 6, !dbg !9829
  %68 = and i32 %67, 511, !dbg !9829
  %69 = mul i32 %68, %65, !dbg !9830
  call void @llvm.dbg.value(metadata i32 %69, metadata !9766, metadata !DIExpression()), !dbg !9767
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9831
  %71 = lshr i32 %70, 28, !dbg !9832
  %72 = and i32 %71, 7, !dbg !9832
  %73 = udiv i32 %69, %72, !dbg !9833
  call void @llvm.dbg.value(metadata i32 %73, metadata !9762, metadata !DIExpression()), !dbg !9767
  br label %123, !dbg !9834

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9835
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9838
  %77 = and i32 %76, 63, !dbg !9838
  %78 = udiv i32 16000000, %77, !dbg !9838
  call void @llvm.dbg.value(metadata i32 %78, metadata !9763, metadata !DIExpression()), !dbg !9767
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9839
  %80 = lshr i32 %79, 6, !dbg !9840
  %81 = and i32 %80, 511, !dbg !9840
  %82 = mul i32 %81, %78, !dbg !9841
  call void @llvm.dbg.value(metadata i32 %82, metadata !9766, metadata !DIExpression()), !dbg !9767
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9842
  %84 = lshr i32 %83, 28, !dbg !9843
  %85 = and i32 %84, 7, !dbg !9843
  %86 = udiv i32 %82, %85, !dbg !9844
  call void @llvm.dbg.value(metadata i32 %86, metadata !9762, metadata !DIExpression()), !dbg !9767
  br label %123, !dbg !9845

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9846
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9762, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9762, metadata !DIExpression()), !dbg !9767
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !9849
  call void @llvm.dbg.value(metadata i32 %91, metadata !9765, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !9767
  %92 = lshr i32 %91, 27, !dbg !9851
  %93 = and i32 %92, 3, !dbg !9851
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !9851

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9852
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9856
  %97 = and i32 %96, 63, !dbg !9856
  %98 = udiv i32 16000000, %97, !dbg !9856
  call void @llvm.dbg.value(metadata i32 %98, metadata !9763, metadata !DIExpression()), !dbg !9767
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9857
  %100 = lshr i32 %99, 6, !dbg !9858
  %101 = and i32 %100, 511, !dbg !9858
  %102 = mul i32 %101, %98, !dbg !9859
  call void @llvm.dbg.value(metadata i32 %102, metadata !9766, metadata !DIExpression()), !dbg !9767
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9860
  %104 = lshr i32 %103, 28, !dbg !9861
  %105 = and i32 %104, 7, !dbg !9861
  %106 = udiv i32 %102, %105, !dbg !9862
  call void @llvm.dbg.value(metadata i32 %106, metadata !9762, metadata !DIExpression()), !dbg !9767
  br label %123, !dbg !9863

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9864
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 undef, metadata !9763, metadata !DIExpression()), !dbg !9767
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9867
  %110 = and i32 %109, 63, !dbg !9867
  %111 = udiv i32 16000000, %110, !dbg !9867
  call void @llvm.dbg.value(metadata i32 %111, metadata !9763, metadata !DIExpression()), !dbg !9767
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9868
  %113 = lshr i32 %112, 6, !dbg !9869
  %114 = and i32 %113, 511, !dbg !9869
  %115 = mul i32 %114, %111, !dbg !9870
  call void @llvm.dbg.value(metadata i32 %115, metadata !9766, metadata !DIExpression()), !dbg !9767
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9871
  %117 = lshr i32 %116, 28, !dbg !9872
  %118 = and i32 %117, 7, !dbg !9872
  %119 = udiv i32 %115, %118, !dbg !9873
  call void @llvm.dbg.value(metadata i32 %119, metadata !9762, metadata !DIExpression()), !dbg !9767
  br label %123, !dbg !9874

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9875
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9762, metadata !DIExpression()), !dbg !9767
  call void @llvm.dbg.value(metadata i32 16000000, metadata !9762, metadata !DIExpression()), !dbg !9767
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !9767
  call void @llvm.dbg.value(metadata i32 %124, metadata !9762, metadata !DIExpression()), !dbg !9767
  ret i32 %124, !dbg !9878
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #13 !dbg !9879 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9883, metadata !DIExpression()), !dbg !9884
  %2 = icmp eq i8 %0, 1, !dbg !9885
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9887
  %4 = and i32 %3, -9, !dbg !9888
  %5 = select i1 %2, i32 8, i32 0, !dbg !9888
  %6 = or i32 %4, %5, !dbg !9888
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9887
  ret void, !dbg !9889
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9890 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !9895, metadata !DIExpression()), !dbg !9897
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9898
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !9899
  call void @llvm.dbg.value(metadata i32 %2, metadata !9896, metadata !DIExpression()), !dbg !9897
  br label %3, !dbg !9900

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9901
  %5 = and i32 %4, 134217728, !dbg !9901
  %6 = icmp eq i32 %5, 0, !dbg !9901
  br i1 %6, label %11, label %7, !dbg !9900

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !9902
  %9 = sub i32 %8, %2, !dbg !9905
  %10 = icmp ugt i32 %9, 2, !dbg !9906
  br i1 %10, label %41, label %3, !dbg !9907, !llvm.loop !9908

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !9910
  %13 = load i32, i32* %12, align 4, !dbg !9910
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !9910
  %15 = load i32, i32* %14, align 4, !dbg !9910
  %16 = shl i32 %15, 6, !dbg !9910
  %17 = or i32 %16, %13, !dbg !9910
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !9910
  %19 = load i32, i32* %18, align 4, !dbg !9910
  %20 = shl i32 %19, 15, !dbg !9910
  %21 = add i32 %20, -65536, !dbg !9910
  %22 = and i32 %21, -65536, !dbg !9910
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !9910
  %24 = load i32, i32* %23, align 4, !dbg !9910
  %25 = shl i32 %24, 24, !dbg !9910
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !9910
  %27 = load i32, i32* %26, align 4, !dbg !9910
  %28 = shl i32 %27, 28, !dbg !9910
  %29 = or i32 %17, %25, !dbg !9910
  %30 = or i32 %29, %22, !dbg !9910
  %31 = or i32 %30, %28, !dbg !9910
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !9910
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9911
  %32 = tail call i32 @HAL_GetTick() #25, !dbg !9912
  call void @llvm.dbg.value(metadata i32 %32, metadata !9896, metadata !DIExpression()), !dbg !9897
  br label %33, !dbg !9913

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9914
  %35 = and i32 %34, 134217728, !dbg !9915
  %36 = icmp eq i32 %35, 0, !dbg !9915
  br i1 %36, label %37, label %41, !dbg !9913

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #25, !dbg !9916
  %39 = sub i32 %38, %32, !dbg !9919
  %40 = icmp ugt i32 %39, 2, !dbg !9920
  br i1 %40, label %41, label %33, !dbg !9921, !llvm.loop !9922

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !9897
  ret i32 %42, !dbg !9924
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !9925 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !9930
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !9931
  call void @llvm.dbg.value(metadata i32 %1, metadata !9929, metadata !DIExpression()), !dbg !9932
  br label %2, !dbg !9933

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9934
  %4 = and i32 %3, 134217728, !dbg !9934
  %5 = icmp eq i32 %4, 0, !dbg !9935
  br i1 %5, label %10, label %6, !dbg !9933

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !9936
  %8 = sub i32 %7, %1, !dbg !9939
  %9 = icmp ugt i32 %8, 2, !dbg !9940
  br i1 %9, label %10, label %2, !dbg !9941, !llvm.loop !9942

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !9932
  ret i32 %11, !dbg !9944
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !9945 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !9950, metadata !DIExpression()), !dbg !9952
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9953
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !9954
  call void @llvm.dbg.value(metadata i32 %2, metadata !9951, metadata !DIExpression()), !dbg !9952
  br label %3, !dbg !9955

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9956
  %5 = and i32 %4, 536870912, !dbg !9956
  %6 = icmp eq i32 %5, 0, !dbg !9956
  br i1 %6, label %11, label %7, !dbg !9955

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !9957
  %9 = sub i32 %8, %2, !dbg !9960
  %10 = icmp ugt i32 %9, 2, !dbg !9961
  br i1 %10, label %37, label %3, !dbg !9962, !llvm.loop !9963

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !9965
  %13 = load i32, i32* %12, align 4, !dbg !9965
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !9965
  %15 = load i32, i32* %14, align 4, !dbg !9965
  %16 = shl i32 %15, 6, !dbg !9965
  %17 = or i32 %16, %13, !dbg !9965
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !9965
  %19 = load i32, i32* %18, align 4, !dbg !9965
  %20 = shl i32 %19, 15, !dbg !9965
  %21 = add i32 %20, -65536, !dbg !9965
  %22 = and i32 %21, -65536, !dbg !9965
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !9965
  %24 = load i32, i32* %23, align 4, !dbg !9965
  %25 = shl i32 %24, 24, !dbg !9965
  %26 = or i32 %17, %25, !dbg !9965
  %27 = or i32 %26, %22, !dbg !9965
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !9965
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9966
  %28 = tail call i32 @HAL_GetTick() #25, !dbg !9967
  call void @llvm.dbg.value(metadata i32 %28, metadata !9951, metadata !DIExpression()), !dbg !9952
  br label %29, !dbg !9968

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9969
  %31 = and i32 %30, 536870912, !dbg !9970
  %32 = icmp eq i32 %31, 0, !dbg !9970
  br i1 %32, label %33, label %37, !dbg !9968

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #25, !dbg !9971
  %35 = sub i32 %34, %28, !dbg !9974
  %36 = icmp ugt i32 %35, 2, !dbg !9975
  br i1 %36, label %37, label %29, !dbg !9976, !llvm.loop !9977

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !9952
  ret i32 %38, !dbg !9979
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !9980 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9983
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !9984
  call void @llvm.dbg.value(metadata i32 %1, metadata !9982, metadata !DIExpression()), !dbg !9985
  br label %2, !dbg !9986

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9987
  %4 = and i32 %3, 536870912, !dbg !9987
  %5 = icmp eq i32 %4, 0, !dbg !9987
  br i1 %5, label %10, label %6, !dbg !9986

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !9988
  %8 = sub i32 %7, %1, !dbg !9991
  %9 = icmp ugt i32 %8, 2, !dbg !9992
  br i1 %9, label %10, label %2, !dbg !9993, !llvm.loop !9994

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !9985
  ret i32 %11, !dbg !9996
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #14 !dbg !9997 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9999, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i32 0, metadata !10000, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i32 0, metadata !10001, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i32 0, metadata !10002, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i32 0, metadata !10003, metadata !DIExpression()), !dbg !10004
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10005
  %2 = lshr i32 %1, 2, !dbg !10006
  %3 = and i32 %2, 3, !dbg !10006
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !10006

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10007
  %6 = and i32 %5, 63, !dbg !10010
  call void @llvm.dbg.value(metadata i32 %6, metadata !9999, metadata !DIExpression()), !dbg !10004
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10011
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10013
  %9 = lshr i32 %8, 6, !dbg !10013
  %10 = and i32 %9, 511, !dbg !10013
  %11 = zext i32 %10 to i64, !dbg !10013
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !10013
  %13 = zext i32 %6 to i64, !dbg !10013
  %14 = udiv i64 %12, %13, !dbg !10013
  %15 = trunc i64 %14 to i32, !dbg !10013
  call void @llvm.dbg.value(metadata i32 %15, metadata !10000, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i32 %15, metadata !10000, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i32 %15, metadata !10000, metadata !DIExpression()), !dbg !10004
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10014
  %17 = lshr i32 %16, 15, !dbg !10015
  %18 = and i32 %17, 6, !dbg !10015
  %19 = add nuw nsw i32 %18, 2, !dbg !10015
  call void @llvm.dbg.value(metadata i32 %19, metadata !10001, metadata !DIExpression()), !dbg !10004
  %20 = udiv i32 %15, %19, !dbg !10016
  call void @llvm.dbg.value(metadata i32 %20, metadata !10003, metadata !DIExpression()), !dbg !10004
  br label %38, !dbg !10017

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10018
  %23 = and i32 %22, 63, !dbg !10020
  call void @llvm.dbg.value(metadata i32 %23, metadata !9999, metadata !DIExpression()), !dbg !10004
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10021
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10023
  %26 = lshr i32 %25, 6, !dbg !10023
  %27 = and i32 %26, 511, !dbg !10023
  %28 = zext i32 %27 to i64, !dbg !10023
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !10023
  %30 = zext i32 %23 to i64, !dbg !10023
  %31 = udiv i64 %29, %30, !dbg !10023
  %32 = trunc i64 %31 to i32, !dbg !10023
  call void @llvm.dbg.value(metadata i32 %32, metadata !10000, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i32 %32, metadata !10000, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i32 %32, metadata !10000, metadata !DIExpression()), !dbg !10004
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10024
  %34 = lshr i32 %33, 28, !dbg !10025
  %35 = and i32 %34, 7, !dbg !10025
  call void @llvm.dbg.value(metadata i32 %35, metadata !10002, metadata !DIExpression()), !dbg !10004
  %36 = udiv i32 %32, %35, !dbg !10026
  call void @llvm.dbg.value(metadata i32 %36, metadata !10003, metadata !DIExpression()), !dbg !10004
  br label %38, !dbg !10027

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !10028
  call void @llvm.dbg.value(metadata i32 %39, metadata !10003, metadata !DIExpression()), !dbg !10004
  ret i32 %39, !dbg !10029
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10030 {
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !10033
  call void @llvm.dbg.value(metadata i32 %1, metadata !10032, metadata !DIExpression()), !dbg !10034
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10035
  %3 = or i32 %2, 1, !dbg !10035
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10035
  br label %4, !dbg !10036

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10037
  %6 = and i32 %5, 2, !dbg !10037
  %7 = icmp eq i32 %6, 0, !dbg !10038
  br i1 %7, label %8, label %12, !dbg !10036

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #25, !dbg !10039
  %10 = sub i32 %9, %1, !dbg !10042
  %11 = icmp ugt i32 %10, 2, !dbg !10043
  br i1 %11, label %89, label %4, !dbg !10044, !llvm.loop !10045

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10047
  %14 = or i32 %13, 128, !dbg !10047
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10047
  %15 = tail call i32 @HAL_GetTick() #25, !dbg !10048
  call void @llvm.dbg.value(metadata i32 %15, metadata !10032, metadata !DIExpression()), !dbg !10034
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10049
  br label %16, !dbg !10050

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10051
  %18 = and i32 %17, 12, !dbg !10051
  %19 = icmp eq i32 %18, 0, !dbg !10052
  %20 = tail call i32 @HAL_GetTick() #25, !dbg !10034
  br i1 %19, label %24, label %21, !dbg !10050

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !10053
  %23 = icmp ugt i32 %22, 5000, !dbg !10056
  br i1 %23, label %89, label %16, !dbg !10057, !llvm.loop !10058

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !10032, metadata !DIExpression()), !dbg !10034
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10060
  %26 = and i32 %25, -851969, !dbg !10060
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10060
  br label %27, !dbg !10061

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10062
  %29 = and i32 %28, 131072, !dbg !10062
  %30 = icmp eq i32 %29, 0, !dbg !10063
  %31 = tail call i32 @HAL_GetTick() #25, !dbg !10034
  br i1 %30, label %35, label %32, !dbg !10061

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !10064
  %34 = icmp ugt i32 %33, 100, !dbg !10067
  br i1 %34, label %89, label %27, !dbg !10068, !llvm.loop !10069

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !10032, metadata !DIExpression()), !dbg !10034
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10071
  %37 = and i32 %36, -16777217, !dbg !10071
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10071
  br label %38, !dbg !10072

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10073
  %40 = and i32 %39, 33554432, !dbg !10073
  %41 = icmp eq i32 %40, 0, !dbg !10074
  %42 = tail call i32 @HAL_GetTick() #25, !dbg !10034
  br i1 %41, label %46, label %43, !dbg !10072

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !10075
  %45 = icmp ugt i32 %44, 2, !dbg !10078
  br i1 %45, label %89, label %38, !dbg !10079, !llvm.loop !10080

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !10032, metadata !DIExpression()), !dbg !10034
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10082
  %48 = and i32 %47, -67108865, !dbg !10082
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10082
  br label %49, !dbg !10083

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10084
  %51 = and i32 %50, 134217728, !dbg !10084
  %52 = icmp eq i32 %51, 0, !dbg !10085
  %53 = tail call i32 @HAL_GetTick() #25, !dbg !10034
  br i1 %52, label %57, label %54, !dbg !10083

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !10086
  %56 = icmp ugt i32 %55, 2, !dbg !10089
  br i1 %56, label %89, label %49, !dbg !10090, !llvm.loop !10091

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !10032, metadata !DIExpression()), !dbg !10034
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10093
  %59 = and i32 %58, -268435457, !dbg !10093
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10093
  br label %60, !dbg !10094

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10095
  %62 = and i32 %61, 536870912, !dbg !10095
  %63 = icmp eq i32 %62, 0, !dbg !10096
  br i1 %63, label %68, label %64, !dbg !10094

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #25, !dbg !10097
  %66 = sub i32 %65, %53, !dbg !10100
  %67 = icmp ugt i32 %66, 2, !dbg !10101
  br i1 %67, label %89, label %60, !dbg !10102, !llvm.loop !10103

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10105
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10106
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10107
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10108
  %70 = and i32 %69, -7937, !dbg !10108
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10108
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10109
  %72 = and i32 %71, -8193, !dbg !10109
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10109
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10110
  %74 = and i32 %73, -16385, !dbg !10110
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10110
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10111
  %76 = or i32 %75, 10420224, !dbg !10111
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10111
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10112
  %78 = or i32 %77, 2097152, !dbg !10112
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10112
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10113
  %80 = or i32 %79, 4194304, !dbg !10113
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !10113
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10114
  %82 = and i32 %81, -2, !dbg !10114
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10114
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10115
  %84 = or i32 %83, 16777216, !dbg !10115
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10115
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !10116
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !10117
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #25, !dbg !10119
  %87 = icmp ne i32 %86, 0, !dbg !10120
  %88 = zext i1 %87 to i32, !dbg !10121
  br label %89, !dbg !10121

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !10034
  ret i32 %90, !dbg !10122
}

; Function Attrs: optsize
declare !dbg !10123 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !10126 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10152, metadata !DIExpression()), !dbg !10163
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10164
  br i1 %3, label %337, label %4, !dbg !10166

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10167
  %6 = load i32, i32* %5, align 4, !dbg !10167
  %7 = and i32 %6, 1, !dbg !10169
  %8 = icmp eq i32 %7, 0, !dbg !10170
  br i1 %8, label %74, label %9, !dbg !10171

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10172
  %11 = and i32 %10, 12, !dbg !10172
  %12 = icmp eq i32 %11, 4, !dbg !10175
  br i1 %12, label %29, label %13, !dbg !10176

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10177
  %15 = and i32 %14, 12, !dbg !10177
  %16 = icmp eq i32 %15, 8, !dbg !10178
  br i1 %16, label %17, label %21, !dbg !10179

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10180
  %19 = and i32 %18, 4194304, !dbg !10181
  %20 = icmp eq i32 %19, 0, !dbg !10182
  br i1 %20, label %21, label %29, !dbg !10183

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10184
  %23 = and i32 %22, 12, !dbg !10184
  %24 = icmp eq i32 %23, 12, !dbg !10185
  br i1 %24, label %25, label %37, !dbg !10186

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10187
  %27 = and i32 %26, 4194304, !dbg !10188
  %28 = icmp eq i32 %27, 0, !dbg !10189
  br i1 %28, label %37, label %29, !dbg !10190

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10191
  %31 = and i32 %30, 131072, !dbg !10191
  %32 = icmp eq i32 %31, 0, !dbg !10191
  br i1 %32, label %74, label %33, !dbg !10194

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10195
  %35 = load i32, i32* %34, align 4, !dbg !10195
  %36 = icmp eq i32 %35, 0, !dbg !10196
  br i1 %36, label %337, label %74, !dbg !10197

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10198
  %39 = load i32, i32* %38, align 4, !dbg !10198
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !10202

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10203
  %42 = or i32 %41, 65536, !dbg !10203
  br label %53, !dbg !10203

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10205
  %45 = or i32 %44, 262144, !dbg !10205
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10205
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10205
  %47 = or i32 %46, 65536, !dbg !10205
  br label %53, !dbg !10205

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10208
  %50 = and i32 %49, -65537, !dbg !10208
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10208
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10208
  %52 = and i32 %51, -262145, !dbg !10208
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10210
  %55 = load i32, i32* %38, align 4, !dbg !10211
  %56 = icmp eq i32 %55, 0, !dbg !10213
  %57 = tail call i32 @HAL_GetTick() #25, !dbg !10214
  call void @llvm.dbg.value(metadata i32 %57, metadata !10153, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata i32 %57, metadata !10153, metadata !DIExpression()), !dbg !10163
  br i1 %56, label %66, label %58, !dbg !10215

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10216
  %60 = and i32 %59, 131072, !dbg !10218
  %61 = icmp eq i32 %60, 0, !dbg !10218
  br i1 %61, label %62, label %74, !dbg !10219

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !10220
  %64 = sub i32 %63, %57, !dbg !10223
  %65 = icmp ugt i32 %64, 100, !dbg !10224
  br i1 %65, label %337, label %58, !dbg !10225, !llvm.loop !10226

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10228
  %68 = and i32 %67, 131072, !dbg !10228
  %69 = icmp eq i32 %68, 0, !dbg !10228
  br i1 %69, label %74, label %70, !dbg !10230

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #25, !dbg !10231
  %72 = sub i32 %71, %57, !dbg !10234
  %73 = icmp ugt i32 %72, 100, !dbg !10235
  br i1 %73, label %337, label %66, !dbg !10236, !llvm.loop !10237

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !10239
  %76 = and i32 %75, 2, !dbg !10241
  %77 = icmp eq i32 %76, 0, !dbg !10242
  br i1 %77, label %137, label %78, !dbg !10243

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10244
  %80 = and i32 %79, 12, !dbg !10244
  %81 = icmp eq i32 %80, 0, !dbg !10247
  br i1 %81, label %98, label %82, !dbg !10248

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10249
  %84 = and i32 %83, 12, !dbg !10249
  %85 = icmp eq i32 %84, 8, !dbg !10250
  br i1 %85, label %86, label %90, !dbg !10251

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10252
  %88 = and i32 %87, 4194304, !dbg !10253
  %89 = icmp eq i32 %88, 0, !dbg !10254
  br i1 %89, label %98, label %90, !dbg !10255

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10256
  %92 = and i32 %91, 12, !dbg !10256
  %93 = icmp eq i32 %92, 12, !dbg !10257
  br i1 %93, label %94, label %106, !dbg !10258

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10259
  %96 = and i32 %95, 4194304, !dbg !10260
  %97 = icmp eq i32 %96, 0, !dbg !10261
  br i1 %97, label %98, label %106, !dbg !10262

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10263
  %100 = and i32 %99, 2, !dbg !10263
  %101 = icmp eq i32 %100, 0, !dbg !10263
  br i1 %101, label %130, label %102, !dbg !10266

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10267
  %104 = load i32, i32* %103, align 4, !dbg !10267
  %105 = icmp eq i32 %104, 1, !dbg !10268
  br i1 %105, label %130, label %337, !dbg !10269

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10270
  %108 = load i32, i32* %107, align 4, !dbg !10270
  %109 = icmp eq i32 %108, 0, !dbg !10273
  br i1 %109, label %120, label %110, !dbg !10274

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10275
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !10277
  call void @llvm.dbg.value(metadata i32 %111, metadata !10153, metadata !DIExpression()), !dbg !10163
  br label %112, !dbg !10278

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10279
  %114 = and i32 %113, 2, !dbg !10280
  %115 = icmp eq i32 %114, 0, !dbg !10280
  br i1 %115, label %116, label %130, !dbg !10278

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #25, !dbg !10281
  %118 = sub i32 %117, %111, !dbg !10284
  %119 = icmp ugt i32 %118, 2, !dbg !10285
  br i1 %119, label %337, label %112, !dbg !10286, !llvm.loop !10287

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10289
  %121 = tail call i32 @HAL_GetTick() #25, !dbg !10291
  call void @llvm.dbg.value(metadata i32 %121, metadata !10153, metadata !DIExpression()), !dbg !10163
  br label %122, !dbg !10292

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10293
  %124 = and i32 %123, 2, !dbg !10293
  %125 = icmp eq i32 %124, 0, !dbg !10293
  br i1 %125, label %137, label %126, !dbg !10292

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #25, !dbg !10294
  %128 = sub i32 %127, %121, !dbg !10297
  %129 = icmp ugt i32 %128, 2, !dbg !10298
  br i1 %129, label %337, label %122, !dbg !10299, !llvm.loop !10300

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10302
  %132 = and i32 %131, -249, !dbg !10302
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10302
  %134 = load i32, i32* %133, align 4, !dbg !10302
  %135 = shl i32 %134, 3, !dbg !10302
  %136 = or i32 %135, %132, !dbg !10302
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10302
  br label %137, !dbg !10303

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !10303
  %139 = and i32 %138, 8, !dbg !10305
  %140 = icmp eq i32 %139, 0, !dbg !10306
  br i1 %140, label %165, label %141, !dbg !10307

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10308
  %143 = load i32, i32* %142, align 4, !dbg !10308
  %144 = icmp eq i32 %143, 0, !dbg !10311
  br i1 %144, label %155, label %145, !dbg !10312

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10313
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !10315
  call void @llvm.dbg.value(metadata i32 %146, metadata !10153, metadata !DIExpression()), !dbg !10163
  br label %147, !dbg !10316

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10317
  %149 = and i32 %148, 2, !dbg !10318
  %150 = icmp eq i32 %149, 0, !dbg !10318
  br i1 %150, label %151, label %165, !dbg !10316

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #25, !dbg !10319
  %153 = sub i32 %152, %146, !dbg !10322
  %154 = icmp ugt i32 %153, 2, !dbg !10323
  br i1 %154, label %337, label %147, !dbg !10324, !llvm.loop !10325

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10327
  %156 = tail call i32 @HAL_GetTick() #25, !dbg !10329
  call void @llvm.dbg.value(metadata i32 %156, metadata !10153, metadata !DIExpression()), !dbg !10163
  br label %157, !dbg !10330

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10331
  %159 = and i32 %158, 2, !dbg !10331
  %160 = icmp eq i32 %159, 0, !dbg !10331
  br i1 %160, label %165, label %161, !dbg !10330

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #25, !dbg !10332
  %163 = sub i32 %162, %156, !dbg !10335
  %164 = icmp ugt i32 %163, 2, !dbg !10336
  br i1 %164, label %337, label %157, !dbg !10337, !llvm.loop !10338

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !10340
  %167 = and i32 %166, 4, !dbg !10341
  %168 = icmp eq i32 %167, 0, !dbg !10342
  br i1 %168, label %237, label %169, !dbg !10343

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !10155, metadata !DIExpression()), !dbg !10344
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10345
  %171 = and i32 %170, 268435456, !dbg !10345
  %172 = icmp eq i32 %171, 0, !dbg !10345
  br i1 %172, label %173, label %180, !dbg !10346

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !10347
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !10347
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10159, metadata !DIExpression()), !dbg !10347
  store volatile i32 0, i32* %2, align 4, !dbg !10347
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10347
  %176 = or i32 %175, 268435456, !dbg !10347
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10347
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10347
  %178 = and i32 %177, 268435456, !dbg !10347
  store volatile i32 %178, i32* %2, align 4, !dbg !10347
  %179 = load volatile i32, i32* %2, align 4, !dbg !10347
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !10348
  call void @llvm.dbg.value(metadata i32 1, metadata !10155, metadata !DIExpression()), !dbg !10344
  br label %180, !dbg !10349

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !10155, metadata !DIExpression()), !dbg !10344
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10350
  %182 = and i32 %181, 256, !dbg !10350
  %183 = icmp eq i32 %182, 0, !dbg !10350
  br i1 %183, label %184, label %196, !dbg !10352

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10353
  %186 = or i32 %185, 256, !dbg !10353
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10353
  %187 = tail call i32 @HAL_GetTick() #25, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %187, metadata !10153, metadata !DIExpression()), !dbg !10163
  br label %188, !dbg !10356

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10357
  %190 = and i32 %189, 256, !dbg !10357
  %191 = icmp eq i32 %190, 0, !dbg !10357
  br i1 %191, label %192, label %196, !dbg !10356

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #25, !dbg !10358
  %194 = sub i32 %193, %187, !dbg !10361
  %195 = icmp ugt i32 %194, 2, !dbg !10362
  br i1 %195, label %337, label %188, !dbg !10363, !llvm.loop !10364

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10366
  %198 = load i32, i32* %197, align 4, !dbg !10366
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !10369

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10370
  %201 = or i32 %200, 1, !dbg !10370
  br label %212, !dbg !10370

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10372
  %204 = or i32 %203, 4, !dbg !10372
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10372
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10372
  %206 = or i32 %205, 1, !dbg !10372
  br label %212, !dbg !10372

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10375
  %209 = and i32 %208, -2, !dbg !10375
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10375
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10375
  %211 = and i32 %210, -5, !dbg !10375
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10377
  %214 = load i32, i32* %197, align 4, !dbg !10378
  %215 = icmp eq i32 %214, 0, !dbg !10380
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !10381
  call void @llvm.dbg.value(metadata i32 %216, metadata !10153, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata i32 %216, metadata !10153, metadata !DIExpression()), !dbg !10163
  br i1 %215, label %225, label %217, !dbg !10382

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10383
  %219 = and i32 %218, 2, !dbg !10385
  %220 = icmp eq i32 %219, 0, !dbg !10385
  br i1 %220, label %221, label %233, !dbg !10386

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #25, !dbg !10387
  %223 = sub i32 %222, %216, !dbg !10390
  %224 = icmp ugt i32 %223, 5000, !dbg !10391
  br i1 %224, label %337, label %217, !dbg !10392, !llvm.loop !10393

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10395
  %227 = and i32 %226, 2, !dbg !10395
  %228 = icmp eq i32 %227, 0, !dbg !10395
  br i1 %228, label %233, label %229, !dbg !10397

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !10398
  %231 = sub i32 %230, %216, !dbg !10401
  %232 = icmp ugt i32 %231, 5000, !dbg !10402
  br i1 %232, label %337, label %225, !dbg !10403, !llvm.loop !10404

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !10406

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10407
  %236 = and i32 %235, -268435457, !dbg !10407
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10407
  br label %237, !dbg !10410

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10411
  %239 = load i32, i32* %238, align 4, !dbg !10411
  %240 = icmp eq i32 %239, 0, !dbg !10413
  br i1 %240, label %336, label %241, !dbg !10414

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10415
  %243 = and i32 %242, 12, !dbg !10415
  %244 = icmp eq i32 %243, 8, !dbg !10418
  br i1 %244, label %297, label %245, !dbg !10419

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !10420
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10423
  %247 = tail call i32 @HAL_GetTick() #25, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %247, metadata !10153, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata i32 %247, metadata !10153, metadata !DIExpression()), !dbg !10163
  br i1 %246, label %248, label %289, !dbg !10424

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10425
  %250 = and i32 %249, 33554432, !dbg !10425
  %251 = icmp eq i32 %250, 0, !dbg !10425
  br i1 %251, label %256, label %252, !dbg !10427

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #25, !dbg !10428
  %254 = sub i32 %253, %247, !dbg !10431
  %255 = icmp ugt i32 %254, 2, !dbg !10432
  br i1 %255, label %337, label %248, !dbg !10433, !llvm.loop !10434

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10436
  %258 = load i32, i32* %257, align 4, !dbg !10436
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10436
  %260 = load i32, i32* %259, align 4, !dbg !10436
  %261 = or i32 %260, %258, !dbg !10436
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10436
  %263 = load i32, i32* %262, align 4, !dbg !10436
  %264 = shl i32 %263, 6, !dbg !10436
  %265 = or i32 %261, %264, !dbg !10436
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10436
  %267 = load i32, i32* %266, align 4, !dbg !10436
  %268 = shl i32 %267, 15, !dbg !10436
  %269 = add i32 %268, -65536, !dbg !10436
  %270 = and i32 %269, -65536, !dbg !10436
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10436
  %272 = load i32, i32* %271, align 4, !dbg !10436
  %273 = shl i32 %272, 24, !dbg !10436
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10436
  %275 = load i32, i32* %274, align 4, !dbg !10436
  %276 = shl i32 %275, 28, !dbg !10436
  %277 = or i32 %265, %273, !dbg !10436
  %278 = or i32 %277, %270, !dbg !10436
  %279 = or i32 %278, %276, !dbg !10436
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10436
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10437
  %280 = tail call i32 @HAL_GetTick() #25, !dbg !10438
  call void @llvm.dbg.value(metadata i32 %280, metadata !10153, metadata !DIExpression()), !dbg !10163
  br label %281, !dbg !10439

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10440
  %283 = and i32 %282, 33554432, !dbg !10441
  %284 = icmp eq i32 %283, 0, !dbg !10441
  br i1 %284, label %285, label %336, !dbg !10439

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #25, !dbg !10442
  %287 = sub i32 %286, %280, !dbg !10445
  %288 = icmp ugt i32 %287, 2, !dbg !10446
  br i1 %288, label %337, label %281, !dbg !10447, !llvm.loop !10448

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10450
  %291 = and i32 %290, 33554432, !dbg !10450
  %292 = icmp eq i32 %291, 0, !dbg !10450
  br i1 %292, label %336, label %293, !dbg !10452

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #25, !dbg !10453
  %295 = sub i32 %294, %247, !dbg !10456
  %296 = icmp ugt i32 %295, 2, !dbg !10457
  br i1 %296, label %337, label %289, !dbg !10458, !llvm.loop !10459

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !10461
  br i1 %298, label %337, label %299, !dbg !10464

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10465
  call void @llvm.dbg.value(metadata i32 %300, metadata !10154, metadata !DIExpression()), !dbg !10163
  %301 = and i32 %300, 4194304, !dbg !10467
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10469
  %303 = load i32, i32* %302, align 4, !dbg !10469
  %304 = icmp eq i32 %301, %303, !dbg !10470
  br i1 %304, label %305, label %337, !dbg !10471

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !10472
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10473
  %308 = load i32, i32* %307, align 4, !dbg !10473
  %309 = icmp eq i32 %306, %308, !dbg !10474
  br i1 %309, label %310, label %337, !dbg !10475

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !10476
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10477
  %313 = load i32, i32* %312, align 4, !dbg !10477
  %314 = shl i32 %313, 6, !dbg !10478
  %315 = icmp eq i32 %311, %314, !dbg !10479
  br i1 %315, label %316, label %337, !dbg !10480

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !10481
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10482
  %319 = load i32, i32* %318, align 4, !dbg !10482
  %320 = shl i32 %319, 15, !dbg !10483
  %321 = add i32 %320, -65536, !dbg !10483
  %322 = and i32 %321, -65536, !dbg !10483
  %323 = icmp eq i32 %317, %322, !dbg !10484
  br i1 %323, label %324, label %337, !dbg !10485

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !10486
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10487
  %327 = load i32, i32* %326, align 4, !dbg !10487
  %328 = shl i32 %327, 24, !dbg !10488
  %329 = icmp eq i32 %325, %328, !dbg !10489
  br i1 %329, label %330, label %337, !dbg !10490

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !10491
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10492
  %333 = load i32, i32* %332, align 4, !dbg !10492
  %334 = shl i32 %333, 28, !dbg !10493
  %335 = icmp eq i32 %331, %334, !dbg !10494
  br i1 %335, label %336, label %337, !dbg !10495

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !10496

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !10163
  ret i32 %338, !dbg !10497
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !10498 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10502, metadata !DIExpression()), !dbg !10503
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10504
  store i32 15, i32* %2, align 4, !dbg !10505
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10506
  %4 = and i32 %3, 262144, !dbg !10508
  %5 = icmp eq i32 %4, 0, !dbg !10509
  br i1 %5, label %8, label %6, !dbg !10510

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10511
  store i32 327680, i32* %7, align 4, !dbg !10513
  br label %15, !dbg !10514

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10515
  %10 = and i32 %9, 65536, !dbg !10517
  %11 = icmp eq i32 %10, 0, !dbg !10518
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10519
  br i1 %11, label %14, label %13, !dbg !10520

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !10521
  br label %15, !dbg !10523

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !10524
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10526
  %17 = and i32 %16, 1, !dbg !10528
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10529
  store i32 %17, i32* %18, align 4, !dbg !10531
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10532
  %20 = lshr i32 %19, 3, !dbg !10533
  %21 = and i32 %20, 31, !dbg !10533
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10534
  store i32 %21, i32* %22, align 4, !dbg !10535
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10536
  %24 = and i32 %23, 4, !dbg !10538
  %25 = icmp eq i32 %24, 0, !dbg !10539
  br i1 %25, label %28, label %26, !dbg !10540

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10541
  store i32 5, i32* %27, align 4, !dbg !10543
  br label %35, !dbg !10544

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10545
  %30 = and i32 %29, 1, !dbg !10547
  %31 = icmp eq i32 %30, 0, !dbg !10548
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10549
  br i1 %31, label %34, label %33, !dbg !10550

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !10551
  br label %35, !dbg !10553

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !10554
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10556
  %37 = and i32 %36, 1, !dbg !10558
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10559
  store i32 %37, i32* %38, align 4, !dbg !10561
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10562
  %40 = and i32 %39, 16777216, !dbg !10564
  %41 = icmp eq i32 %40, 0, !dbg !10565
  %42 = select i1 %41, i32 1, i32 2, !dbg !10566
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10567
  store i32 %42, i32* %43, align 4, !dbg !10569
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10570
  %45 = and i32 %44, 4194304, !dbg !10571
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10572
  store i32 %45, i32* %46, align 4, !dbg !10573
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10574
  %48 = and i32 %47, 63, !dbg !10575
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10576
  store i32 %48, i32* %49, align 4, !dbg !10577
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10578
  %51 = lshr i32 %50, 6, !dbg !10579
  %52 = and i32 %51, 511, !dbg !10579
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10580
  store i32 %52, i32* %53, align 4, !dbg !10581
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10582
  %55 = shl i32 %54, 1, !dbg !10583
  %56 = and i32 %55, 393216, !dbg !10583
  %57 = add nuw nsw i32 %56, 131072, !dbg !10583
  %58 = lshr exact i32 %57, 16, !dbg !10584
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10585
  store i32 %58, i32* %59, align 4, !dbg !10586
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10587
  %61 = lshr i32 %60, 24, !dbg !10588
  %62 = and i32 %61, 15, !dbg !10588
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10589
  store i32 %62, i32* %63, align 4, !dbg !10590
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10591
  %65 = lshr i32 %64, 28, !dbg !10592
  %66 = and i32 %65, 7, !dbg !10592
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10593
  store i32 %66, i32* %67, align 4, !dbg !10594
  ret void, !dbg !10595
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #13 !dbg !10596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10599, metadata !DIExpression()), !dbg !10600
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !10601
  ret void, !dbg !10602
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #13 !dbg !10603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10606, metadata !DIExpression()), !dbg !10608
  call void @llvm.dbg.value(metadata i32 1000, metadata !10607, metadata !DIExpression()), !dbg !10608
  %2 = udiv i32 %0, 1000, !dbg !10609
  %3 = add nsw i32 %2, -1, !dbg !10610
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10611
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10612
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10613
  ret void, !dbg !10614
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !10615 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10617, metadata !DIExpression()), !dbg !10619
  %3 = bitcast i32* %2 to i8*, !dbg !10620
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10620
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10618, metadata !DIExpression()), !dbg !10621
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10622
  store volatile i32 %4, i32* %2, align 4, !dbg !10621
  %5 = load volatile i32, i32* %2, align 4, !dbg !10623
  %6 = icmp eq i32 %0, -1, !dbg !10624
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10617, metadata !DIExpression()), !dbg !10619
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !10619
  call void @llvm.dbg.value(metadata i32 %8, metadata !10617, metadata !DIExpression()), !dbg !10619
  br label %9, !dbg !10626

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10617, metadata !DIExpression()), !dbg !10619
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10627
  call void @llvm.dbg.value(metadata i32 undef, metadata !10617, metadata !DIExpression()), !dbg !10619
  %12 = shl i32 %11, 15, !dbg !10619
  %13 = ashr i32 %12, 31, !dbg !10619
  %14 = add i32 %13, %10, !dbg !10619
  call void @llvm.dbg.value(metadata i32 %14, metadata !10617, metadata !DIExpression()), !dbg !10619
  %15 = icmp eq i32 %14, 0, !dbg !10626
  br i1 %15, label %16, label %9, !dbg !10626

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10630
  ret void, !dbg !10630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #3 !dbg !10631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10633, metadata !DIExpression()), !dbg !10634
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !10635
  ret void, !dbg !10636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #13 !dbg !10637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10642, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 0, metadata !10645, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 0, metadata !10646, metadata !DIExpression()), !dbg !10647
  %2 = icmp eq i32 %0, 0, !dbg !10648
  br i1 %2, label %72, label %3, !dbg !10650

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10651
  %5 = icmp eq i32 %4, 49152, !dbg !10654
  br i1 %5, label %6, label %21, !dbg !10655

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !10656
  %8 = select i1 %7, i32 0, i32 5, !dbg !10659
  call void @llvm.dbg.value(metadata i32 %8, metadata !10645, metadata !DIExpression()), !dbg !10647
  %9 = add i32 %0, -120000001, !dbg !10660
  %10 = icmp ult i32 %9, 30000000, !dbg !10660
  %11 = select i1 %10, i32 4, i32 %8, !dbg !10660
  call void @llvm.dbg.value(metadata i32 %11, metadata !10645, metadata !DIExpression()), !dbg !10647
  %12 = icmp ult i32 %9, -30000000, !dbg !10662
  %13 = select i1 %12, i32 %11, i32 3, !dbg !10662
  call void @llvm.dbg.value(metadata i32 %13, metadata !10645, metadata !DIExpression()), !dbg !10647
  %14 = icmp ugt i32 %0, 60000000, !dbg !10664
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !10666
  br i1 %16, label %21, label %17, !dbg !10666

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !10667
  %19 = and i1 %18, %15, !dbg !10670
  %20 = select i1 %19, i32 1, i32 %13, !dbg !10670
  br label %21, !dbg !10670

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !10647
  call void @llvm.dbg.value(metadata i32 %22, metadata !10645, metadata !DIExpression()), !dbg !10647
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10671
  %24 = icmp eq i32 %23, 32768, !dbg !10673
  br i1 %24, label %25, label %45, !dbg !10674

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !10675
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !10678
  %29 = select i1 %28, i32 5, i32 %22, !dbg !10678
  call void @llvm.dbg.value(metadata i32 %29, metadata !10645, metadata !DIExpression()), !dbg !10647
  %30 = icmp ugt i32 %0, 12000000, !dbg !10679
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !10681
  %33 = select i1 %32, i32 4, i32 %29, !dbg !10681
  call void @llvm.dbg.value(metadata i32 %33, metadata !10645, metadata !DIExpression()), !dbg !10647
  %34 = icmp ugt i32 %0, 90000000, !dbg !10682
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !10684
  %37 = select i1 %36, i32 3, i32 %33, !dbg !10684
  call void @llvm.dbg.value(metadata i32 %37, metadata !10645, metadata !DIExpression()), !dbg !10647
  %38 = icmp ugt i32 %0, 60000000, !dbg !10685
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !10687
  br i1 %40, label %45, label %41, !dbg !10687

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !10688
  %43 = select i1 %42, i1 %39, i1 false, !dbg !10691
  %44 = select i1 %43, i32 1, i32 %37, !dbg !10691
  br label %45, !dbg !10691

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !10692
  call void @llvm.dbg.value(metadata i32 %46, metadata !10645, metadata !DIExpression()), !dbg !10647
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !10693
  %48 = icmp eq i32 %47, 16384, !dbg !10695
  br i1 %48, label %49, label %61, !dbg !10696

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !10697
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !10700
  %53 = select i1 %52, i32 3, i32 %46, !dbg !10700
  call void @llvm.dbg.value(metadata i32 %53, metadata !10645, metadata !DIExpression()), !dbg !10647
  %54 = icmp ugt i32 %0, 60000000, !dbg !10701
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !10703
  br i1 %56, label %61, label %57, !dbg !10703

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !10704
  %59 = select i1 %58, i1 %55, i1 false, !dbg !10707
  %60 = select i1 %59, i32 1, i32 %53, !dbg !10707
  br label %61, !dbg !10707

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !10692
  call void @llvm.dbg.value(metadata i32 %62, metadata !10645, metadata !DIExpression()), !dbg !10647
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #24, !dbg !10708
  call void @llvm.dbg.value(metadata i32 2, metadata !10643, metadata !DIExpression()), !dbg !10647
  br label %63, !dbg !10709

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !10692
  call void @llvm.dbg.value(metadata i32 %64, metadata !10643, metadata !DIExpression()), !dbg !10647
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !10710
  call void @llvm.dbg.value(metadata i32 %65, metadata !10644, metadata !DIExpression()), !dbg !10647
  %66 = add nsw i32 %64, -1, !dbg !10712
  call void @llvm.dbg.value(metadata i32 %66, metadata !10643, metadata !DIExpression()), !dbg !10647
  %67 = icmp ne i32 %65, %62, !dbg !10713
  %68 = icmp ne i32 %66, 0, !dbg !10714
  %69 = select i1 %67, i1 %68, i1 false, !dbg !10714
  br i1 %69, label %63, label %70, !dbg !10715, !llvm.loop !10716

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !10718
  call void @llvm.dbg.value(metadata i32 %73, metadata !10646, metadata !DIExpression()), !dbg !10647
  ret i32 %73, !dbg !10719
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #14 !dbg !10720 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10722
  %2 = and i32 %1, 49152, !dbg !10722
  ret i32 %2, !dbg !10723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #13 !dbg !10724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10726, metadata !DIExpression()), !dbg !10727
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10728
  %3 = and i32 %2, -16, !dbg !10728
  %4 = or i32 %3, %0, !dbg !10728
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10728
  ret void, !dbg !10729
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #14 !dbg !10730 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10731
  %2 = and i32 %1, 15, !dbg !10731
  ret i32 %2, !dbg !10732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !10733 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10751, metadata !DIExpression()), !dbg !10755
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10752, metadata !DIExpression()), !dbg !10755
  call void @llvm.dbg.value(metadata i32 0, metadata !10753, metadata !DIExpression()), !dbg !10755
  call void @llvm.dbg.value(metadata i32 0, metadata !10754, metadata !DIExpression()), !dbg !10755
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !10756
  %4 = icmp eq i32 %3, 0, !dbg !10758
  br i1 %4, label %5, label %21, !dbg !10759

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !10760
  call void @llvm.dbg.value(metadata i32 %6, metadata !10754, metadata !DIExpression()), !dbg !10755
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.72() #24, !dbg !10762
  %8 = icmp eq i32 %7, 1, !dbg !10764
  br i1 %8, label %13, label %9, !dbg !10765

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.73() #24, !dbg !10766
  br label %10, !dbg !10768

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.72() #24, !dbg !10769
  %12 = icmp eq i32 %11, 1, !dbg !10770
  br i1 %12, label %13, label %10, !dbg !10768, !llvm.loop !10771

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !10773
  %15 = load i32, i32* %14, align 4, !dbg !10773
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !10774
  %17 = load i32, i32* %16, align 4, !dbg !10774
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !10775
  %19 = load i32, i32* %18, align 4, !dbg !10775
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.74(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !10776
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !10777
  call void @llvm.dbg.value(metadata i32 %20, metadata !10753, metadata !DIExpression()), !dbg !10755
  br label %21, !dbg !10778

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !10779
  call void @llvm.dbg.value(metadata i32 %22, metadata !10753, metadata !DIExpression()), !dbg !10755
  ret i32 %22, !dbg !10780
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #14 !dbg !10781 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10785, metadata !DIExpression()), !dbg !10786
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.76() #24, !dbg !10787
  %2 = icmp ne i32 %1, 0, !dbg !10789
  call void @llvm.dbg.value(metadata i1 %2, metadata !10785, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10786
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #24, !dbg !10790
  %4 = icmp ne i32 %3, 0, !dbg !10792
  call void @llvm.dbg.value(metadata i1 undef, metadata !10785, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10786
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !10793
  %6 = icmp ne i32 %5, 0, !dbg !10795
  %7 = select i1 %6, i1 true, i1 %4, !dbg !10796
  %8 = select i1 %7, i1 true, i1 %2, !dbg !10796
  %9 = zext i1 %8 to i32, !dbg !10796
  call void @llvm.dbg.value(metadata i32 %9, metadata !10785, metadata !DIExpression()), !dbg !10786
  ret i32 %9, !dbg !10797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #4 !dbg !10798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10802, metadata !DIExpression()), !dbg !10805
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10803, metadata !DIExpression()), !dbg !10805
  call void @llvm.dbg.value(metadata i32 0, metadata !10804, metadata !DIExpression()), !dbg !10805
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10806
  %4 = load i32, i32* %3, align 4, !dbg !10806
  %5 = and i32 %4, 63, !dbg !10807
  %6 = udiv i32 %0, %5, !dbg !10808
  call void @llvm.dbg.value(metadata i32 %6, metadata !10804, metadata !DIExpression()), !dbg !10805
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10809
  %8 = load i32, i32* %7, align 4, !dbg !10809
  %9 = and i32 %8, 511, !dbg !10810
  %10 = mul i32 %9, %6, !dbg !10811
  call void @llvm.dbg.value(metadata i32 %10, metadata !10804, metadata !DIExpression()), !dbg !10805
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10812
  %12 = load i32, i32* %11, align 4, !dbg !10812
  %13 = lshr i32 %12, 15, !dbg !10813
  %14 = and i32 %13, 131070, !dbg !10813
  %15 = add nuw nsw i32 %14, 2, !dbg !10813
  %16 = udiv i32 %10, %15, !dbg !10814
  call void @llvm.dbg.value(metadata i32 %16, metadata !10804, metadata !DIExpression()), !dbg !10805
  ret i32 %16, !dbg !10815
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.72() unnamed_addr #14 !dbg !10816 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10817
  %2 = lshr i32 %1, 1, !dbg !10818
  %3 = and i32 %2, 1, !dbg !10818
  ret i32 %3, !dbg !10819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.73() unnamed_addr #13 !dbg !10820 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10821
  %2 = or i32 %1, 1, !dbg !10821
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10821
  ret void, !dbg !10822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.74(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 !dbg !10823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10825, metadata !DIExpression()), !dbg !10829
  call void @llvm.dbg.value(metadata i32 %1, metadata !10826, metadata !DIExpression()), !dbg !10829
  call void @llvm.dbg.value(metadata i32 %2, metadata !10827, metadata !DIExpression()), !dbg !10829
  call void @llvm.dbg.value(metadata i32 %3, metadata !10828, metadata !DIExpression()), !dbg !10829
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10830
  %6 = and i32 %5, -4227072, !dbg !10830
  %7 = or i32 %1, %0, !dbg !10830
  %8 = shl i32 %2, 6, !dbg !10830
  %9 = or i32 %7, %8, !dbg !10830
  %10 = or i32 %9, %6, !dbg !10830
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10830
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10831
  %12 = and i32 %11, -196609, !dbg !10831
  %13 = or i32 %12, %3, !dbg !10831
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10831
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10832
  %15 = and i32 %14, -1879048193, !dbg !10832
  %16 = or i32 %15, %3, !dbg !10832
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10832
  ret void, !dbg !10833
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !10834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10838, metadata !DIExpression()), !dbg !10842
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10839, metadata !DIExpression()), !dbg !10842
  call void @llvm.dbg.value(metadata i32 0, metadata !10840, metadata !DIExpression()), !dbg !10842
  call void @llvm.dbg.value(metadata i32 0, metadata !10841, metadata !DIExpression()), !dbg !10842
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10843
  %4 = load i32, i32* %3, align 4, !dbg !10843
  %5 = lshr i32 %4, 4, !dbg !10843
  %6 = and i32 %5, 15, !dbg !10843
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !10843
  %8 = load i8, i8* %7, align 1, !dbg !10843
  %9 = zext i8 %8 to i32, !dbg !10843
  %10 = lshr i32 %0, %9, !dbg !10843
  call void @llvm.dbg.value(metadata i32 %10, metadata !10841, metadata !DIExpression()), !dbg !10842
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !10844
  %12 = icmp ult i32 %11, %10, !dbg !10846
  br i1 %12, label %13, label %16, !dbg !10847

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !10848
  call void @llvm.dbg.value(metadata i32 %14, metadata !10840, metadata !DIExpression()), !dbg !10842
  %15 = icmp eq i32 %14, 0, !dbg !10850
  br i1 %15, label %16, label %30, !dbg !10852

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.75() #24, !dbg !10853
  br label %17, !dbg !10855

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.76() #24, !dbg !10856
  %19 = icmp eq i32 %18, 1, !dbg !10857
  br i1 %19, label %20, label %17, !dbg !10855, !llvm.loop !10858

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !10860
  tail call fastcc void @LL_RCC_SetAHBPrescaler.77(i32 noundef %21) #24, !dbg !10861
  tail call fastcc void @LL_RCC_SetSysClkSource.78() #24, !dbg !10862
  br label %22, !dbg !10863

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.79() #24, !dbg !10864
  %24 = icmp eq i32 %23, 8, !dbg !10865
  br i1 %24, label %25, label %22, !dbg !10863, !llvm.loop !10866

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10868
  %27 = load i32, i32* %26, align 4, !dbg !10868
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.80(i32 noundef %27) #24, !dbg !10869
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10870
  %29 = load i32, i32* %28, align 4, !dbg !10870
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.81(i32 noundef %29) #24, !dbg !10871
  br label %30, !dbg !10872

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !10873
  %33 = icmp ugt i32 %32, %10, !dbg !10875
  br i1 %33, label %34, label %36, !dbg !10876

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !10877
  call void @llvm.dbg.value(metadata i32 %35, metadata !10840, metadata !DIExpression()), !dbg !10842
  br label %36, !dbg !10879

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !10842
  call void @llvm.dbg.value(metadata i32 %37, metadata !10840, metadata !DIExpression()), !dbg !10842
  %38 = icmp eq i32 %37, 0, !dbg !10880
  br i1 %38, label %39, label %40, !dbg !10882

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !10883
  br label %40, !dbg !10885

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !10886
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.75() unnamed_addr #13 !dbg !10887 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10888
  %2 = or i32 %1, 16777216, !dbg !10888
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10888
  ret void, !dbg !10889
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.76() unnamed_addr #14 !dbg !10890 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10891
  %2 = lshr i32 %1, 25, !dbg !10892
  %3 = and i32 %2, 1, !dbg !10892
  ret i32 %3, !dbg !10893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.77(i32 noundef %0) unnamed_addr #13 !dbg !10894 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10896, metadata !DIExpression()), !dbg !10897
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10898
  %3 = and i32 %2, -241, !dbg !10898
  %4 = or i32 %3, %0, !dbg !10898
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10898
  ret void, !dbg !10899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.78() unnamed_addr #13 !dbg !10900 {
  call void @llvm.dbg.value(metadata i32 2, metadata !10902, metadata !DIExpression()), !dbg !10903
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10904
  %2 = and i32 %1, -4, !dbg !10904
  %3 = or i32 %2, 2, !dbg !10904
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10904
  ret void, !dbg !10905
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.79() unnamed_addr #14 !dbg !10906 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10907
  %2 = and i32 %1, 12, !dbg !10907
  ret i32 %2, !dbg !10908
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.80(i32 noundef %0) unnamed_addr #13 !dbg !10909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10911, metadata !DIExpression()), !dbg !10912
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10913
  %3 = and i32 %2, -7169, !dbg !10913
  %4 = or i32 %3, %0, !dbg !10913
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10913
  ret void, !dbg !10914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.81(i32 noundef %0) unnamed_addr #13 !dbg !10915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10917, metadata !DIExpression()), !dbg !10918
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10919
  %3 = and i32 %2, -57345, !dbg !10919
  %4 = or i32 %3, %0, !dbg !10919
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10919
  ret void, !dbg !10920
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #14 !dbg !10921 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10922
  %2 = lshr i32 %1, 29, !dbg !10923
  %3 = and i32 %2, 1, !dbg !10923
  ret i32 %3, !dbg !10924
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #14 !dbg !10925 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10926
  %2 = lshr i32 %1, 27, !dbg !10927
  %3 = and i32 %2, 1, !dbg !10927
  ret i32 %3, !dbg !10928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10929 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10933, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata i32 %1, metadata !10934, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !10935, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !10936, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata i32 0, metadata !10937, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.value(metadata i32 0, metadata !10938, metadata !DIExpression()), !dbg !10939
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !10940
  %6 = icmp eq i32 %5, 0, !dbg !10942
  br i1 %6, label %7, label %27, !dbg !10943

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !10944
  call void @llvm.dbg.value(metadata i32 %8, metadata !10938, metadata !DIExpression()), !dbg !10939
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.82() #24, !dbg !10946
  %10 = icmp eq i32 %9, 1, !dbg !10948
  br i1 %10, label %19, label %11, !dbg !10949

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !10950
  br i1 %12, label %13, label %14, !dbg !10953

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !10954
  br label %15, !dbg !10956

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.83() #24, !dbg !10957
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.84() #24, !dbg !10959
  br label %16, !dbg !10960

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.82() #24, !dbg !10961
  %18 = icmp eq i32 %17, 1, !dbg !10962
  br i1 %18, label %19, label %16, !dbg !10960, !llvm.loop !10963

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !10965
  %21 = load i32, i32* %20, align 4, !dbg !10965
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !10966
  %23 = load i32, i32* %22, align 4, !dbg !10966
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !10967
  %25 = load i32, i32* %24, align 4, !dbg !10967
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.74(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !10968
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !10969
  call void @llvm.dbg.value(metadata i32 %26, metadata !10937, metadata !DIExpression()), !dbg !10939
  br label %27, !dbg !10970

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !10971
  call void @llvm.dbg.value(metadata i32 %28, metadata !10937, metadata !DIExpression()), !dbg !10939
  ret i32 %28, !dbg !10972
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.82() unnamed_addr #14 !dbg !10973 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10974
  %2 = lshr i32 %1, 17, !dbg !10975
  %3 = and i32 %2, 1, !dbg !10975
  ret i32 %3, !dbg !10976
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #13 !dbg !10977 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10978
  %2 = or i32 %1, 262144, !dbg !10978
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10978
  ret void, !dbg !10979
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.83() unnamed_addr #13 !dbg !10980 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10981
  %2 = and i32 %1, -262145, !dbg !10981
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10981
  ret void, !dbg !10982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.84() unnamed_addr #13 !dbg !10983 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10984
  %2 = or i32 %1, 65536, !dbg !10984
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10984
  ret void, !dbg !10985
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10986 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10989, metadata !DIExpression()), !dbg !11005
  call void @llvm.dbg.value(metadata i32 undef, metadata !10989, metadata !DIExpression()), !dbg !11005
  call void @llvm.dbg.value(metadata i32 undef, metadata !10989, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11005
  ret void, !dbg !11006
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11007 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11011, metadata !DIExpression()), !dbg !11013
  %2 = icmp eq i8* %0, null, !dbg !11014
  br i1 %2, label %29, label %3, !dbg !11016

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11017
  %5 = icmp eq i8 %4, 0, !dbg !11018
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11019
  br i1 %6, label %29, label %8, !dbg !11019

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11012, metadata !DIExpression()), !dbg !11013
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11020

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11012, metadata !DIExpression()), !dbg !11013
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !11022
  br i1 %10, label %11, label %15, !dbg !11027

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11028
  %13 = load i8*, i8** %12, align 4, !dbg !11028
  %14 = icmp eq i8* %13, %0, !dbg !11029
  br i1 %14, label %29, label %15, !dbg !11030

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11031
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11012, metadata !DIExpression()), !dbg !11013
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11032
  br i1 %17, label %7, label %8, !dbg !11033, !llvm.loop !11034

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11012, metadata !DIExpression()), !dbg !11013
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !11036
  br i1 %20, label %21, label %26, !dbg !11040

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11041
  %23 = load i8*, i8** %22, align 4, !dbg !11041
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !11042
  %25 = icmp eq i32 %24, 0, !dbg !11043
  br i1 %25, label %29, label %26, !dbg !11044

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11045
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11012, metadata !DIExpression()), !dbg !11013
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11046
  br i1 %28, label %29, label %18, !dbg !11020, !llvm.loop !11047

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11013
  ret %struct.device* %30, !dbg !11049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !11050 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11054, metadata !DIExpression()), !dbg !11055
  %2 = icmp eq %struct.device* %0, null, !dbg !11056
  br i1 %2, label %14, label %3, !dbg !11058

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11059
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11059
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11060
  %7 = load i8, i8* %6, align 1, !dbg !11060
  %8 = and i8 %7, 1, !dbg !11060
  %9 = icmp eq i8 %8, 0, !dbg !11060
  br i1 %9, label %14, label %10, !dbg !11061

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11062
  %12 = load i8, i8* %11, align 1, !dbg !11062
  %13 = icmp eq i8 %12, 0, !dbg !11063
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11055
  ret i1 %15, !dbg !11064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #3 !dbg !11065 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11070, metadata !DIExpression()), !dbg !11071
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11072
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11073
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11074 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11082, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11083, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.value(metadata i8* %2, metadata !11084, metadata !DIExpression()), !dbg !11087
  %5 = bitcast i32* %4 to i8*, !dbg !11088
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11088
  call void @llvm.dbg.value(metadata i32 0, metadata !11085, metadata !DIExpression()), !dbg !11087
  store i32 0, i32* %4, align 4, !dbg !11089
  call void @llvm.dbg.value(metadata i32* %4, metadata !11085, metadata !DIExpression(DW_OP_deref)), !dbg !11087
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !11090
  call void @llvm.dbg.value(metadata i16* %6, metadata !11086, metadata !DIExpression()), !dbg !11087
  %7 = load i32, i32* %4, align 4, !dbg !11091
  call void @llvm.dbg.value(metadata i32 %7, metadata !11085, metadata !DIExpression()), !dbg !11087
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !11092
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11093
  ret i32 %8, !dbg !11094
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !11095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11099, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata i32* %1, metadata !11100, metadata !DIExpression()), !dbg !11105
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11106
  %4 = load i16*, i16** %3, align 4, !dbg !11106
  call void @llvm.dbg.value(metadata i16* %4, metadata !11101, metadata !DIExpression()), !dbg !11105
  %5 = icmp eq i16* %4, null, !dbg !11107
  br i1 %5, label %14, label %6, !dbg !11108

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11109
  call void @llvm.dbg.value(metadata i32 %7, metadata !11102, metadata !DIExpression()), !dbg !11109
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11110
  %9 = load i16, i16* %8, align 2, !dbg !11110
  %10 = add i16 %9, -32767, !dbg !11111
  %11 = icmp ult i16 %10, 2, !dbg !11111
  %12 = add i32 %7, 1, !dbg !11112
  call void @llvm.dbg.value(metadata i32 %12, metadata !11102, metadata !DIExpression()), !dbg !11109
  br i1 %11, label %13, label %6, !dbg !11111, !llvm.loop !11114

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11117
  br label %14, !dbg !11118

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11120 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11124, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i32 %1, metadata !11125, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11126, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i8* %3, metadata !11127, metadata !DIExpression()), !dbg !11135
  call void @llvm.dbg.value(metadata i32 0, metadata !11128, metadata !DIExpression()), !dbg !11136
  %5 = icmp eq i32 %1, 0, !dbg !11137
  br i1 %5, label %16, label %8, !dbg !11138

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11128, metadata !DIExpression()), !dbg !11136
  %7 = icmp eq i32 %15, %1, !dbg !11137
  br i1 %7, label %16, label %8, !dbg !11138, !llvm.loop !11139

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11128, metadata !DIExpression()), !dbg !11136
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11141
  %11 = load i16, i16* %10, align 2, !dbg !11141
  call void @llvm.dbg.value(metadata i16 %11, metadata !11130, metadata !DIExpression()), !dbg !11142
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !11143
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11133, metadata !DIExpression()), !dbg !11142
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !11144
  call void @llvm.dbg.value(metadata i32 %13, metadata !11134, metadata !DIExpression()), !dbg !11142
  %14 = icmp slt i32 %13, 0, !dbg !11145
  %15 = add nuw i32 %9, 1, !dbg !11147
  call void @llvm.dbg.value(metadata i32 %15, metadata !11128, metadata !DIExpression()), !dbg !11136
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #12 !dbg !11149 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11153, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11154, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11155, metadata !DIExpression()), !dbg !11156
  %2 = sext i16 %0 to i32, !dbg !11157
  %3 = icmp slt i16 %0, 1, !dbg !11159
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11160
  %6 = add nsw i32 %2, -1, !dbg !11160
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11160
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11160
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11154, metadata !DIExpression()), !dbg !11156
  ret %struct.device* %8, !dbg !11161
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11162 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11164, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11165, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.value(metadata i8* %2, metadata !11166, metadata !DIExpression()), !dbg !11169
  %5 = bitcast i32* %4 to i8*, !dbg !11170
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11170
  call void @llvm.dbg.value(metadata i32 0, metadata !11167, metadata !DIExpression()), !dbg !11169
  store i32 0, i32* %4, align 4, !dbg !11171
  call void @llvm.dbg.value(metadata i32* %4, metadata !11167, metadata !DIExpression(DW_OP_deref)), !dbg !11169
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !11172
  call void @llvm.dbg.value(metadata i16* %6, metadata !11168, metadata !DIExpression()), !dbg !11169
  %7 = load i32, i32* %4, align 4, !dbg !11173
  call void @llvm.dbg.value(metadata i32 %7, metadata !11167, metadata !DIExpression()), !dbg !11169
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !11174
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !11175
  ret i32 %8, !dbg !11176
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !11177 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11179, metadata !DIExpression()), !dbg !11184
  call void @llvm.dbg.value(metadata i32* %1, metadata !11180, metadata !DIExpression()), !dbg !11184
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11185
  %4 = load i16*, i16** %3, align 4, !dbg !11185
  call void @llvm.dbg.value(metadata i16* %4, metadata !11181, metadata !DIExpression()), !dbg !11184
  call void @llvm.dbg.value(metadata i32 0, metadata !11182, metadata !DIExpression()), !dbg !11184
  call void @llvm.dbg.value(metadata i32 0, metadata !11183, metadata !DIExpression()), !dbg !11184
  %5 = icmp eq i16* %4, null, !dbg !11186
  br i1 %5, label %22, label %6, !dbg !11188

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11182, metadata !DIExpression()), !dbg !11184
  call void @llvm.dbg.value(metadata i16* %8, metadata !11181, metadata !DIExpression()), !dbg !11184
  %9 = load i16, i16* %8, align 2, !dbg !11189
  %10 = icmp eq i16 %9, -32768, !dbg !11193
  call void @llvm.dbg.value(metadata i32 undef, metadata !11182, metadata !DIExpression()), !dbg !11184
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11194
  call void @llvm.dbg.value(metadata i16* %11, metadata !11181, metadata !DIExpression()), !dbg !11184
  %12 = zext i1 %10 to i32, !dbg !11195
  %13 = add i32 %7, %12, !dbg !11195
  call void @llvm.dbg.value(metadata i32 %13, metadata !11182, metadata !DIExpression()), !dbg !11184
  %14 = icmp eq i32 %13, 2, !dbg !11196
  br i1 %14, label %15, label %6, !dbg !11197

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11184
  call void @llvm.dbg.value(metadata i32 %16, metadata !11183, metadata !DIExpression()), !dbg !11184
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11198
  %18 = load i16, i16* %17, align 2, !dbg !11198
  %19 = icmp eq i16 %18, 32767, !dbg !11199
  %20 = add i32 %16, 1, !dbg !11200
  call void @llvm.dbg.value(metadata i32 %20, metadata !11183, metadata !DIExpression()), !dbg !11184
  br i1 %19, label %21, label %15, !dbg !11202, !llvm.loop !11203

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11205
  br label %22, !dbg !11206

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11207
  call void @llvm.dbg.value(metadata i16* %23, metadata !11181, metadata !DIExpression()), !dbg !11184
  ret i16* %23, !dbg !11208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !11209 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11212
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !11213
  ret i32* %2, !dbg !11214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #12 !dbg !11215 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11363, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11364, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11365, metadata !DIExpression()), !dbg !11366
  ret void, !dbg !11367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11372, metadata !DIExpression()), !dbg !11374
  call void @llvm.dbg.value(metadata i32 %1, metadata !11373, metadata !DIExpression()), !dbg !11374
  ret void, !dbg !11375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11376 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11380, metadata !DIExpression()), !dbg !11382
  call void @llvm.dbg.value(metadata i32 %1, metadata !11381, metadata !DIExpression()), !dbg !11382
  ret void, !dbg !11383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11388, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i8* %1, metadata !11389, metadata !DIExpression()), !dbg !11390
  ret i32 -134, !dbg !11391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11392 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11396, metadata !DIExpression()), !dbg !11398
  call void @llvm.dbg.value(metadata i8* %1, metadata !11397, metadata !DIExpression()), !dbg !11398
  ret i32 -134, !dbg !11399
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !11400 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11403, metadata !DIExpression()), !dbg !11404
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11405, !srcloc !11411
  call void @llvm.dbg.value(metadata i32 undef, metadata !11408, metadata !DIExpression()) #23, !dbg !11412
  call void @llvm.dbg.value(metadata i32 undef, metadata !11409, metadata !DIExpression()) #23, !dbg !11412
  br label %3, !dbg !11413

3:                                                ; preds = %3, %1
  br label %3, !dbg !11414, !llvm.loop !11417
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11420 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11424, metadata !DIExpression()), !dbg !11426
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11425, metadata !DIExpression()), !dbg !11426
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11427
  unreachable, !dbg !11427
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !11428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11430, metadata !DIExpression()), !dbg !11431
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11432
  unreachable, !dbg !11432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11435, metadata !DIExpression()), !dbg !11439
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11436, metadata !DIExpression()), !dbg !11439
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11440, !srcloc !11411
  call void @llvm.dbg.value(metadata i32 undef, metadata !11408, metadata !DIExpression()) #23, !dbg !11442
  call void @llvm.dbg.value(metadata i32 undef, metadata !11409, metadata !DIExpression()) #23, !dbg !11442
  call void @llvm.dbg.value(metadata i32 undef, metadata !11437, metadata !DIExpression()), !dbg !11439
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11438, metadata !DIExpression()), !dbg !11439
  %4 = icmp eq %struct.__esf* %1, null, !dbg !11443
  br i1 %4, label %6, label %5, !dbg !11445

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !11446
  br label %7, !dbg !11447

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !11446
  br label %7, !dbg !11450

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !11440
  call void @llvm.dbg.value(metadata i32 %8, metadata !11408, metadata !DIExpression()) #23, !dbg !11442
  call void @llvm.dbg.value(metadata i32 %8, metadata !11437, metadata !DIExpression()), !dbg !11439
  %9 = tail call fastcc %struct.k_thread* @k_current_get.91() #26, !dbg !11452
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !11438, metadata !DIExpression()), !dbg !11439
  call void @llvm.dbg.value(metadata i32 undef, metadata !11453, metadata !DIExpression()) #23, !dbg !11456
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !11458, !srcloc !11459
  tail call fastcc void @k_thread_abort.92(%struct.k_thread* noundef %9) #24, !dbg !11460
  ret void, !dbg !11463
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.91() unnamed_addr #9 !dbg !11464 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.93() #26, !dbg !11468
  ret %struct.k_thread* %1, !dbg !11469
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.92(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11474, metadata !DIExpression()), !dbg !11475
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11476, !srcloc !11478
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !11479
  ret void, !dbg !11480
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.93() unnamed_addr #9 !dbg !11481 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11482, !srcloc !11484
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !11485
  ret %struct.k_thread* %1, !dbg !11486
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11487 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11491, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.value(metadata i32 %1, metadata !11492, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.value(metadata i32 %2, metadata !11493, metadata !DIExpression()), !dbg !11494
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !11495
  ret void, !dbg !11496
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11497 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11501, metadata !DIExpression()), !dbg !11504
  call void @llvm.dbg.value(metadata i8* %1, metadata !11502, metadata !DIExpression()), !dbg !11504
  call void @llvm.dbg.value(metadata i32 %2, metadata !11503, metadata !DIExpression()), !dbg !11504
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !11505
  ret void, !dbg !11506
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !11507 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !11508
  ret void, !dbg !11509
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !11510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11512, metadata !DIExpression()), !dbg !11513
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !11514
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11515
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !11516
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !11517
  %4 = trunc i32 %0 to i8, !dbg !11518
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !11519
  store i8 %4, i8* %5, align 4, !dbg !11520
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !11521
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !11522
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !11523
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !11524
  store i8* %8, i8** %9, align 4, !dbg !11525
  ret void, !dbg !11526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !11527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11529, metadata !DIExpression()), !dbg !11535
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11536
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11530, metadata !DIExpression()), !dbg !11535
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !11537
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !11531, metadata !DIExpression()), !dbg !11535
  call void @llvm.dbg.value(metadata i8* null, metadata !11534, metadata !DIExpression()), !dbg !11535
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !11538
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !11539
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !11540
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !11541
  ret void, !dbg !11542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11543 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11547, metadata !DIExpression()), !dbg !11548
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11549
  ret i8* %2, !dbg !11550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !11551 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11556, metadata !DIExpression()), !dbg !11557
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11558
  %3 = load i8, i8* %2, align 1, !dbg !11559
  %4 = and i8 %3, -5, !dbg !11559
  store i8 %4, i8* %2, align 1, !dbg !11559
  ret void, !dbg !11560
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !11561 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !11564
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !11565
  %3 = ptrtoint i8* %2 to i32, !dbg !11574
  %4 = add i32 %3, 2048, !dbg !11575
  call void @llvm.dbg.value(metadata i32 %4, metadata !11569, metadata !DIExpression()) #23, !dbg !11576
  call void @llvm.dbg.value(metadata i32 %4, metadata !11577, metadata !DIExpression()) #23, !dbg !11580
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !11582, !srcloc !11583
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11584
  %6 = or i32 %5, 512, !dbg !11584
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11584
  tail call fastcc void @__NVIC_SetPriority.100(i32 noundef -2, i32 noundef 255) #25, !dbg !11585
  tail call fastcc void @__NVIC_SetPriority.100(i32 noundef -5, i32 noundef 0) #25, !dbg !11588
  tail call fastcc void @__NVIC_SetPriority.100(i32 noundef -12, i32 noundef 0) #25, !dbg !11589
  tail call fastcc void @__NVIC_SetPriority.100(i32 noundef -11, i32 noundef 0) #25, !dbg !11590
  tail call fastcc void @__NVIC_SetPriority.100(i32 noundef -10, i32 noundef 0) #25, !dbg !11591
  tail call fastcc void @__NVIC_SetPriority.100(i32 noundef -4, i32 noundef 0) #25, !dbg !11592
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11593
  %8 = or i32 %7, 458752, !dbg !11593
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11593
  tail call void @z_arm_fault_init() #25, !dbg !11594
  tail call void @z_arm_cpu_idle_init() #25, !dbg !11595
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !11596
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !11599
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !11600
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !11601
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !11602
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !11602
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !11563, metadata !DIExpression()), !dbg !11603
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !11604
  call void @z_device_state_init() #25, !dbg !11605
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !11606
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !11607
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !11608
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !11609
  unreachable, !dbg !11609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1953, metadata !DIExpression()), !dbg !11610
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !11611
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !11611
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1954, metadata !DIExpression()), !dbg !11610
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1954, metadata !DIExpression()), !dbg !11610
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !11612
  br i1 %7, label %8, label %35, !dbg !11613

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1954, metadata !DIExpression()), !dbg !11610
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !11614
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !11614
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1964, metadata !DIExpression()), !dbg !11615
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !11616
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !11616
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !11617
  call void @llvm.dbg.value(metadata i32 %14, metadata !1968, metadata !DIExpression()), !dbg !11615
  %15 = icmp eq %struct.device* %11, null, !dbg !11618
  br i1 %15, label %32, label %16, !dbg !11620

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !11621
  br i1 %17, label %26, label %18, !dbg !11624

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !11625
  call void @llvm.dbg.value(metadata i32 %19, metadata !1968, metadata !DIExpression()), !dbg !11615
  %20 = icmp ult i32 %19, 255, !dbg !11627
  %21 = select i1 %20, i32 %19, i32 255, !dbg !11627
  call void @llvm.dbg.value(metadata i32 %21, metadata !1968, metadata !DIExpression()), !dbg !11615
  %22 = trunc i32 %21 to i8, !dbg !11628
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11629
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !11629
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !11630
  store i8 %22, i8* %25, align 1, !dbg !11631
  br label %26, !dbg !11632

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11633
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !11633
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !11634
  %30 = load i8, i8* %29, align 1, !dbg !11635
  %31 = or i8 %30, 1, !dbg !11635
  store i8 %31, i8* %29, align 1, !dbg !11635
  br label %32, !dbg !11636

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !11637
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1954, metadata !DIExpression()), !dbg !11610
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !11612
  br i1 %34, label %8, label %35, !dbg !11613, !llvm.loop !11638

35:                                               ; preds = %32, %1
  ret void, !dbg !11640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.100(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !11641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11643, metadata !DIExpression()), !dbg !11645
  call void @llvm.dbg.value(metadata i32 %1, metadata !11644, metadata !DIExpression()), !dbg !11645
  %3 = trunc i32 %1 to i8, !dbg !11646
  %4 = shl i8 %3, 4, !dbg !11646
  %5 = and i32 %0, 15, !dbg !11649
  %6 = add nsw i32 %5, -4, !dbg !11650
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !11651
  store volatile i8 %4, i8* %7, align 1, !dbg !11652
  ret void, !dbg !11653
}

; Function Attrs: optsize
declare !dbg !11654 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #3 !dbg !11655 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11658, metadata !DIExpression()), !dbg !11659
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11660
  store i8 1, i8* %2, align 1, !dbg !11661
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !11662
  store i8 1, i8* %3, align 4, !dbg !11663
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11664
  store i32 0, i32* %4, align 4, !dbg !11665
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11666
  store i32 0, i32* %5, align 4, !dbg !11667
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11668
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !11669
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11670
  ret void, !dbg !11671
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !11672 {
  tail call void @z_sched_init() #25, !dbg !11677
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11678
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0)) #25, !dbg !11679
  call void @llvm.dbg.value(metadata i8* %1, metadata !11676, metadata !DIExpression()), !dbg !11680
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !11681
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !11682
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !11683
  ret i8* %1, !dbg !11684
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !11685 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11689, metadata !DIExpression()), !dbg !11690
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !11691
  unreachable, !dbg !11692
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11693 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11695, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata i8* %1, metadata !11696, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.value(metadata i8* %2, metadata !11697, metadata !DIExpression()), !dbg !11698
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11699
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !11700
  tail call void @boot_banner() #25, !dbg !11701
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !11702
  tail call void @z_init_static_threads() #25, !dbg !11703
  tail call void @main() #25, !dbg !11704
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11705
  %5 = and i8 %4, -2, !dbg !11705
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11705
  ret void, !dbg !11706
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11707 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11717, metadata !DIExpression()), !dbg !11719
  call void @llvm.dbg.value(metadata i8* %1, metadata !11718, metadata !DIExpression()), !dbg !11719
  ret void, !dbg !11720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11721 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11723, metadata !DIExpression()), !dbg !11725
  call void @llvm.dbg.value(metadata i8* %1, metadata !11724, metadata !DIExpression()), !dbg !11725
  ret void, !dbg !11726
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11727 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11728, !srcloc !11735
  call void @llvm.dbg.value(metadata i32 %1, metadata !11731, metadata !DIExpression()) #23, !dbg !11736
  %2 = icmp ne i32 %1, 0, !dbg !11737
  ret i1 %2, !dbg !11738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !11739 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11740
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11741
  %3 = load i8, i8* %2, align 4, !dbg !11742
  %4 = or i8 %3, 1, !dbg !11742
  store i8 %4, i8* %2, align 4, !dbg !11742
  ret void, !dbg !11743
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !11744 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11745
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11746
  %3 = load i8, i8* %2, align 4, !dbg !11747
  %4 = and i8 %3, -2, !dbg !11747
  store i8 %4, i8* %2, align 4, !dbg !11747
  ret void, !dbg !11748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !11749 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11750
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11751
  %3 = load i8, i8* %2, align 4, !dbg !11751
  %4 = and i8 %3, 1, !dbg !11752
  %5 = icmp ne i8 %4, 0, !dbg !11753
  ret i1 %5, !dbg !11754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11755 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11759, metadata !DIExpression()), !dbg !11761
  call void @llvm.dbg.value(metadata i8* %1, metadata !11760, metadata !DIExpression()), !dbg !11761
  ret i32 -88, !dbg !11762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11763 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11767, metadata !DIExpression()), !dbg !11768
  ret i8* null, !dbg !11769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #12 !dbg !11770 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11774, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i8* %1, metadata !11775, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.value(metadata i32 %2, metadata !11776, metadata !DIExpression()), !dbg !11777
  ret i32 -88, !dbg !11778
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1977 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2091, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i8* %1, metadata !2092, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i32 %2, metadata !2093, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i32 0, metadata !2094, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i8 undef, metadata !2096, metadata !DIExpression()), !dbg !11779
  %4 = icmp eq i8* %1, null, !dbg !11780
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11782
  br i1 %6, label %46, label %7, !dbg !11782

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11783
  %9 = load i8, i8* %8, align 1, !dbg !11783
  call void @llvm.dbg.value(metadata i8 %9, metadata !2096, metadata !DIExpression()), !dbg !11779
  %10 = add i32 %2, -1, !dbg !11784
  call void @llvm.dbg.value(metadata i32 %10, metadata !2093, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i8 0, metadata !2097, metadata !DIExpression()), !dbg !11785
  call void @llvm.dbg.value(metadata i8 %9, metadata !2096, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i32 0, metadata !2094, metadata !DIExpression()), !dbg !11779
  %11 = icmp eq i8 %9, 0, !dbg !11786
  br i1 %11, label %12, label %15, !dbg !11788

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11789
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11790
  store i8 0, i8* %14, align 1, !dbg !11791
  br label %46, !dbg !11792

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2097, metadata !DIExpression()), !dbg !11785
  call void @llvm.dbg.value(metadata i8 %17, metadata !2096, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i32 %18, metadata !2094, metadata !DIExpression()), !dbg !11779
  %19 = zext i8 %17 to i32, !dbg !11793
  %20 = zext i8 %16 to i32, !dbg !11794
  %21 = shl nuw i32 1, %20, !dbg !11794
  call void @llvm.dbg.value(metadata i32 %21, metadata !2095, metadata !DIExpression()), !dbg !11779
  %22 = and i32 %21, %19, !dbg !11796
  %23 = icmp eq i32 %22, 0, !dbg !11798
  br i1 %23, label %42, label %24, !dbg !11799

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11800
  %26 = sub i32 %10, %18, !dbg !11801
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11802
  %28 = load i8*, i8** %27, align 4, !dbg !11802
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11803
  %30 = load i32, i32* %29, align 4, !dbg !11803
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !11804
  %32 = add i32 %31, %18, !dbg !11805
  call void @llvm.dbg.value(metadata i32 %32, metadata !2094, metadata !DIExpression()), !dbg !11779
  %33 = trunc i32 %21 to i8, !dbg !11806
  %34 = xor i8 %33, -1, !dbg !11806
  %35 = and i8 %17, %34, !dbg !11806
  call void @llvm.dbg.value(metadata i8 %35, metadata !2096, metadata !DIExpression()), !dbg !11779
  %36 = icmp eq i8 %35, 0, !dbg !11807
  br i1 %36, label %12, label %37, !dbg !11809

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11810
  %39 = sub i32 %10, %32, !dbg !11812
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #24, !dbg !11813
  %41 = add i32 %40, %32, !dbg !11814
  call void @llvm.dbg.value(metadata i32 %41, metadata !2094, metadata !DIExpression()), !dbg !11779
  br label %42, !dbg !11815

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11779
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11779
  call void @llvm.dbg.value(metadata i8 %44, metadata !2096, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.value(metadata i32 %43, metadata !2094, metadata !DIExpression()), !dbg !11779
  %45 = add i8 %16, 1, !dbg !11816
  call void @llvm.dbg.value(metadata i8 %45, metadata !2097, metadata !DIExpression()), !dbg !11785
  br label %15, !dbg !11788

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.102, i32 0, i32 0), %3 ], !dbg !11779
  ret i8* %47, !dbg !11817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11818 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11822, metadata !DIExpression()), !dbg !11827
  call void @llvm.dbg.value(metadata i32 %1, metadata !11823, metadata !DIExpression()), !dbg !11827
  call void @llvm.dbg.value(metadata i8* %2, metadata !11824, metadata !DIExpression()), !dbg !11827
  call void @llvm.dbg.value(metadata i32 %3, metadata !11825, metadata !DIExpression()), !dbg !11827
  %5 = icmp ult i32 %1, %3, !dbg !11828
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11828
  call void @llvm.dbg.value(metadata i32 %6, metadata !11826, metadata !DIExpression()), !dbg !11827
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !11829
  ret i32 %6, !dbg !11830
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11831 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11835, metadata !DIExpression()), !dbg !11836
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !11837
  ret void, !dbg !11838
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11839 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11848, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11849, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.value(metadata i32 %2, metadata !11850, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11851, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.value(metadata i8* %4, metadata !11852, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.value(metadata i8* %5, metadata !11853, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.value(metadata i8* %6, metadata !11854, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.value(metadata i32 %7, metadata !11855, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.value(metadata i32 %8, metadata !11856, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.value(metadata i8* undef, metadata !11857, metadata !DIExpression()), !dbg !11859
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11860
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #24, !dbg !11861
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11862
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !11863
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !11864
  call void @llvm.dbg.value(metadata i8* %13, metadata !11858, metadata !DIExpression()), !dbg !11859
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !11865
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11866
  store i8* null, i8** %14, align 4, !dbg !11867
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11868
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11868
  br i1 %16, label %20, label %17, !dbg !11870

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !11871
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !11871
  br label %20, !dbg !11872

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11859
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11873
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !11875
  ret i8* %13, !dbg !11876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #3 !dbg !11877 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11882, metadata !DIExpression()), !dbg !11883
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11884
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !11885
  ret void, !dbg !11886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !11887 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11892, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 %1, metadata !11893, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 %2, metadata !11894, metadata !DIExpression()), !dbg !11896
  call void @llvm.dbg.value(metadata i32 %3, metadata !11895, metadata !DIExpression()), !dbg !11896
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11897
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11898
  %6 = trunc i32 %3 to i8, !dbg !11899
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11900
  store i8 %6, i8* %7, align 4, !dbg !11901
  %8 = trunc i32 %2 to i8, !dbg !11902
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11903
  store i8 %8, i8* %9, align 1, !dbg !11904
  %10 = trunc i32 %1 to i8, !dbg !11905
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11906
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11906
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11906
  store i8 %10, i8* %13, align 2, !dbg !11907
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11908
  store i8 0, i8* %14, align 1, !dbg !11909
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !11910
  ret void, !dbg !11911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #3 !dbg !11912 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11916, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11917, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %2, metadata !11918, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 0, metadata !11923, metadata !DIExpression()), !dbg !11924
  %4 = add i32 %2, 7, !dbg !11925
  %5 = and i32 %4, -8, !dbg !11925
  %6 = add i32 %5, 64, !dbg !11925
  call void @llvm.dbg.value(metadata i32 %6, metadata !11919, metadata !DIExpression()), !dbg !11924
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.112(%struct.z_thread_stack_element* noundef %1) #24, !dbg !11927
  call void @llvm.dbg.value(metadata i8* %7, metadata !11922, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 %5, metadata !11920, metadata !DIExpression()), !dbg !11924
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11928
  call void @llvm.dbg.value(metadata i8* %8, metadata !11921, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.value(metadata i32 0, metadata !11923, metadata !DIExpression()), !dbg !11924
  %9 = ptrtoint i8* %7 to i32, !dbg !11929
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11930
  store i32 %9, i32* %10, align 4, !dbg !11931
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11932
  store i32 %5, i32* %11, align 4, !dbg !11933
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11934
  store i32 0, i32* %12, align 4, !dbg !11935
  call void @llvm.dbg.value(metadata i8* %8, metadata !11921, metadata !DIExpression()), !dbg !11924
  ret i8* %8, !dbg !11936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.112(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11937 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11941, metadata !DIExpression()), !dbg !11942
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11943
  ret i8* %2, !dbg !11944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11945 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11950, metadata !DIExpression()), !dbg !11951
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11952
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !11953
  ret void, !dbg !11954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11955 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11957, metadata !DIExpression()), !dbg !11958
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11959
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !11960
  ret void, !dbg !11961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11962 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11966, metadata !DIExpression()), !dbg !11967
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11968
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11969
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11970
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11971
  ret void, !dbg !11972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !11973 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11978, metadata !DIExpression()), !dbg !11979
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11980
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11981
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11982
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11983
  ret void, !dbg !11984
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11985 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12002, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11993, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11994, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 %2, metadata !11995, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11996, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i8* %4, metadata !11997, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i8* %5, metadata !11998, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i8* %6, metadata !11999, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 %7, metadata !12000, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.value(metadata i32 %8, metadata !12001, metadata !DIExpression()), !dbg !12003
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #24, !dbg !12004
  %13 = icmp eq i64 %11, -1, !dbg !12005
  br i1 %13, label %15, label %14, !dbg !12007

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !12008
  br label %15, !dbg !12010

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12011
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12012 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12017, metadata !DIExpression()), !dbg !12018
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12016, metadata !DIExpression()), !dbg !12018
  %4 = icmp eq i64 %3, 0, !dbg !12019
  br i1 %4, label %5, label %6, !dbg !12021

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !12022
  br label %7, !dbg !12024

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !12025
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12032, metadata !DIExpression()), !dbg !12033
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12034, !srcloc !12036
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !12037
  ret void, !dbg !12038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12039 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12042, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12041, metadata !DIExpression()), !dbg !12043
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12044
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !12045
  ret void, !dbg !12046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12047 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12049, metadata !DIExpression()), !dbg !12069
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12070

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !12071
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12067, metadata !DIExpression()), !dbg !12072
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12073

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12049, metadata !DIExpression()), !dbg !12069
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12074
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12074
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12077
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12077
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12078
  %9 = load i32, i32* %8, align 4, !dbg !12078
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12079
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12079
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12080
  %13 = load i8*, i8** %12, align 4, !dbg !12080
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12081
  %15 = load i8*, i8** %14, align 4, !dbg !12081
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12082
  %17 = load i8*, i8** %16, align 4, !dbg !12082
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12083
  %19 = load i32, i32* %18, align 4, !dbg !12083
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12084
  %21 = load i32, i32* %20, align 4, !dbg !12084
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #24, !dbg !12085
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12086
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12087
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12088
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12088
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12089
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12049, metadata !DIExpression()), !dbg !12069
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12090
  br i1 %27, label %2, label %1, !dbg !12070, !llvm.loop !12092

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !12071
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12067, metadata !DIExpression()), !dbg !12072
  br label %29, !dbg !12073

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !12094
  ret void, !dbg !12095

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12067, metadata !DIExpression()), !dbg !12072
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12096
  %33 = load i32, i32* %32, align 4, !dbg !12096
  %34 = icmp eq i32 %33, -1, !dbg !12100
  br i1 %34, label %43, label %35, !dbg !12101

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12102
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12102
  %38 = icmp sgt i32 %33, 0, !dbg !12104
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12104
  %40 = zext i32 %39 to i64, !dbg !12104
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #24, !dbg !12104
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12105
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #24, !dbg !12105
  br label %43, !dbg !12106

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12107
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12067, metadata !DIExpression()), !dbg !12072
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12108
  br i1 %45, label %30, label %29, !dbg !12073, !llvm.loop !12110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !12112 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12117, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.value(metadata i64 %0, metadata !12119, metadata !DIExpression()), !dbg !12136
  call void @llvm.dbg.value(metadata i32 1000, metadata !12124, metadata !DIExpression()), !dbg !12136
  call void @llvm.dbg.value(metadata i32 10000, metadata !12125, metadata !DIExpression()), !dbg !12136
  call void @llvm.dbg.value(metadata i8 1, metadata !12126, metadata !DIExpression()), !dbg !12136
  call void @llvm.dbg.value(metadata i8 0, metadata !12127, metadata !DIExpression()), !dbg !12136
  call void @llvm.dbg.value(metadata i8 1, metadata !12128, metadata !DIExpression()), !dbg !12136
  call void @llvm.dbg.value(metadata i8 0, metadata !12129, metadata !DIExpression()), !dbg !12136
  call void @llvm.dbg.value(metadata i8 1, metadata !12130, metadata !DIExpression()), !dbg !12136
  call void @llvm.dbg.value(metadata i8 0, metadata !12131, metadata !DIExpression()), !dbg !12136
  call void @llvm.dbg.value(metadata i64 0, metadata !12132, metadata !DIExpression()), !dbg !12136
  call void @llvm.dbg.value(metadata i64 0, metadata !12132, metadata !DIExpression()), !dbg !12136
  %2 = mul i64 %0, 10, !dbg !12138
  ret i64 %2, !dbg !12144
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !12145 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12147, metadata !DIExpression()), !dbg !12151
  call void @llvm.dbg.value(metadata i8* %1, metadata !12148, metadata !DIExpression()), !dbg !12151
  call void @llvm.dbg.value(metadata i8* %2, metadata !12149, metadata !DIExpression()), !dbg !12151
  call void @llvm.dbg.value(metadata i8* %3, metadata !12150, metadata !DIExpression()), !dbg !12151
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12152
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12153
  %7 = load i8, i8* %6, align 4, !dbg !12154
  %8 = or i8 %7, 4, !dbg !12154
  store i8 %8, i8* %6, align 4, !dbg !12154
  tail call void @z_thread_essential_clear() #24, !dbg !12155
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !12156
  unreachable, !dbg !12156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !12157 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12161, metadata !DIExpression()), !dbg !12162
  ret i32 -134, !dbg !12163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #12 !dbg !12164 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12168, metadata !DIExpression()), !dbg !12170
  call void @llvm.dbg.value(metadata i32 %1, metadata !12169, metadata !DIExpression()), !dbg !12170
  ret i32 -134, !dbg !12171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #12 !dbg !12172 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12179, metadata !DIExpression()), !dbg !12181
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !12180, metadata !DIExpression()), !dbg !12181
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12182
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !12184
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12181
  ret i32 %6, !dbg !12185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #12 !dbg !12186 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12190, metadata !DIExpression()), !dbg !12191
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !12192
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12191
  ret i32 %3, !dbg !12194
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12195 {
  tail call void @sys_clock_idle_exit() #25, !dbg !12197
  ret void, !dbg !12198
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !12199 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12201, metadata !DIExpression()), !dbg !12204
  call void @llvm.dbg.value(metadata i8* %1, metadata !12202, metadata !DIExpression()), !dbg !12204
  call void @llvm.dbg.value(metadata i8* %2, metadata !12203, metadata !DIExpression()), !dbg !12204
  br label %4, !dbg !12205

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12206, !srcloc !12213
  call void @llvm.dbg.value(metadata i32 undef, metadata !12209, metadata !DIExpression()) #23, !dbg !12214
  call void @llvm.dbg.value(metadata i32 undef, metadata !12210, metadata !DIExpression()) #23, !dbg !12214
  tail call fastcc void @k_cpu_idle() #24, !dbg !12215
  br label %4, !dbg !12205, !llvm.loop !12216
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12218 {
  tail call void @arch_cpu_idle() #25, !dbg !12219
  ret void, !dbg !12220
}

; Function Attrs: optsize
declare !dbg !12221 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !12222 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12226, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12227, metadata !DIExpression()), !dbg !12230
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12231
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12231
  %5 = load i8, i8* %4, align 2, !dbg !12231
  call void @llvm.dbg.value(metadata i8 %5, metadata !12228, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12230
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12232
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12232
  %8 = load i8, i8* %7, align 2, !dbg !12232
  call void @llvm.dbg.value(metadata i8 %8, metadata !12229, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12230
  %9 = icmp eq i8 %8, %5, !dbg !12233
  %10 = sext i8 %5 to i32, !dbg !12235
  %11 = sext i8 %8 to i32, !dbg !12235
  %12 = sub nsw i32 %11, %10, !dbg !12235
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12235
  ret i32 %13, !dbg !12236
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12237 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12241, metadata !DIExpression()), !dbg !12242
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !12243
  %3 = icmp eq i32 %2, 0, !dbg !12245
  br i1 %3, label %8, label %4, !dbg !12246

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !12247
  %6 = add i32 %5, %2, !dbg !12249
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12250
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !12251
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !12252
  br label %8, !dbg !12253

8:                                                ; preds = %4, %1
  ret void, !dbg !12254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !12255 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12259, metadata !DIExpression()), !dbg !12261
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12262
  call void @llvm.dbg.value(metadata i32 %1, metadata !12260, metadata !DIExpression()), !dbg !12261
  ret i32 %1, !dbg !12263
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12268, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 %1, metadata !12269, metadata !DIExpression()), !dbg !12277
  call void @llvm.dbg.value(metadata i32 0, metadata !12270, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !12286
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12288, !srcloc !12294
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %4, metadata !12291, metadata !DIExpression()) #23, !dbg !12295
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12295
  call void @llvm.dbg.value(metadata i32 %4, metadata !12285, metadata !DIExpression()) #23, !dbg !12286
  call void @llvm.dbg.value(metadata i32 %4, metadata !12276, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32 undef, metadata !12270, metadata !DIExpression()), !dbg !12278
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12296
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !12299
  %6 = icmp sgt i32 %0, 0, !dbg !12300
  %7 = icmp sgt i32 %5, 2, !dbg !12302
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12302
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12302
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12303
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12304
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12305
  call void @llvm.dbg.value(metadata i32 %4, metadata !12306, metadata !DIExpression()) #23, !dbg !12312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !12312
  call void @llvm.dbg.value(metadata i32 %4, metadata !12314, metadata !DIExpression()) #23, !dbg !12317
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12319, !srcloc !12320
  call void @llvm.dbg.value(metadata i32 1, metadata !12270, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.value(metadata i32 undef, metadata !12270, metadata !DIExpression()), !dbg !12278
  ret void, !dbg !12321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #12 !dbg !12322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12324, metadata !DIExpression()), !dbg !12325
  call void @llvm.dbg.value(metadata i32 %0, metadata !12326, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12341
  call void @llvm.dbg.value(metadata i32 1000, metadata !12329, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.value(metadata i32 10000, metadata !12330, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.value(metadata i8 1, metadata !12331, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.value(metadata i1 true, metadata !12332, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12341
  call void @llvm.dbg.value(metadata i1 true, metadata !12333, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12341
  call void @llvm.dbg.value(metadata i8 0, metadata !12334, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.value(metadata i1 true, metadata !12335, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12341
  call void @llvm.dbg.value(metadata i1 false, metadata !12336, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12341
  call void @llvm.dbg.value(metadata i64 0, metadata !12337, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.value(metadata i64 0, metadata !12337, metadata !DIExpression()), !dbg !12341
  %2 = mul i32 %0, 10, !dbg !12343
  ret i32 %2, !dbg !12349
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12352, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !12355
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12357, !srcloc !12294
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12357
  call void @llvm.dbg.value(metadata i32 %3, metadata !12291, metadata !DIExpression()) #23, !dbg !12359
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12359
  call void @llvm.dbg.value(metadata i32 %3, metadata !12285, metadata !DIExpression()) #23, !dbg !12355
  call void @llvm.dbg.value(metadata i32 %3, metadata !12353, metadata !DIExpression()), !dbg !12354
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12360
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12362
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !12363
  br i1 %6, label %7, label %8, !dbg !12364

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12365
  call void @llvm.dbg.value(metadata i32 %3, metadata !12306, metadata !DIExpression()) #23, !dbg !12367
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !12367
  call void @llvm.dbg.value(metadata i32 %3, metadata !12314, metadata !DIExpression()) #23, !dbg !12369
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12371, !srcloc !12320
  br label %24, !dbg !12372

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12373
  %9 = tail call fastcc i32 @slice_time() #24, !dbg !12374
  %10 = icmp eq i32 %9, 0, !dbg !12374
  br i1 %10, label %21, label %11, !dbg !12376

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #24, !dbg !12377
  br i1 %12, label %13, label %21, !dbg !12378

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12379
  %15 = icmp sgt i32 %14, %0, !dbg !12382
  br i1 %15, label %19, label %16, !dbg !12383

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12384
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #24, !dbg !12384
  call void @llvm.dbg.value(metadata i32 %18, metadata !12353, metadata !DIExpression()), !dbg !12354
  br label %22, !dbg !12386

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !12387
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12387
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12389
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !12354
  call void @llvm.dbg.value(metadata i32 %23, metadata !12353, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata i32 %23, metadata !12306, metadata !DIExpression()) #23, !dbg !12391
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !12391
  call void @llvm.dbg.value(metadata i32 %23, metadata !12314, metadata !DIExpression()) #23, !dbg !12393
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !12395, !srcloc !12320
  br label %24, !dbg !12396

24:                                               ; preds = %22, %7
  ret void, !dbg !12396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12397 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12401, metadata !DIExpression()), !dbg !12403
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !12404
  %3 = icmp eq i32 %2, 0, !dbg !12404
  br i1 %3, label %16, label %4, !dbg !12405

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !12406
  br i1 %5, label %16, label %6, !dbg !12407

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12408
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12408
  %9 = load i8, i8* %8, align 2, !dbg !12408
  %10 = sext i8 %9 to i32, !dbg !12409
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12410
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !12411
  br i1 %12, label %16, label %13, !dbg !12412

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !12413
  %15 = xor i1 %14, true, !dbg !12414
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12403
  call void @llvm.dbg.value(metadata i1 %17, metadata !12402, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12403
  ret i1 %17, !dbg !12415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12416 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12420, metadata !DIExpression()), !dbg !12422
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12423
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12421, metadata !DIExpression()), !dbg !12422
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !12424
  br i1 %3, label %5, label %4, !dbg !12426

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !12427
  br label %5, !dbg !12429

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12420, metadata !DIExpression()), !dbg !12422
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12430
  ret i32 %6, !dbg !12431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12432 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12434, metadata !DIExpression()), !dbg !12436
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12437
  %3 = load i8, i8* %2, align 1, !dbg !12437
  call void @llvm.dbg.value(metadata i8 %3, metadata !12435, metadata !DIExpression()), !dbg !12436
  %4 = and i8 %3, 31, !dbg !12438
  %5 = icmp ne i8 %4, 0, !dbg !12439
  ret i1 %5, !dbg !12440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12441 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12443, metadata !DIExpression()), !dbg !12444
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12445
  br i1 %2, label %3, label %7, !dbg !12447

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12448, metadata !DIExpression()) #23, !dbg !12451
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12454
  %5 = load i8, i8* %4, align 1, !dbg !12455
  %6 = and i8 %5, 127, !dbg !12455
  store i8 %6, i8* %4, align 1, !dbg !12455
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12456, metadata !DIExpression()) #23, !dbg !12459
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12463
  br label %7, !dbg !12464

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12465, metadata !DIExpression()) #23, !dbg !12468
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12470
  %9 = load i8, i8* %8, align 1, !dbg !12471
  %10 = or i8 %9, -128, !dbg !12471
  store i8 %10, i8* %8, align 1, !dbg !12471
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12472, metadata !DIExpression()) #23, !dbg !12475
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12479, metadata !DIExpression()) #23, !dbg !12487
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12485, metadata !DIExpression()) #23, !dbg !12487
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12489
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !12486, metadata !DIExpression()) #23, !dbg !12487
  %12 = icmp eq %struct._dnode* %11, null, !dbg !12491
  br i1 %12, label %23, label %13, !dbg !12489

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12486, metadata !DIExpression()) #23, !dbg !12487
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !12493
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12486, metadata !DIExpression()) #23, !dbg !12487
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !12494
  %17 = icmp sgt i32 %16, 0, !dbg !12497
  br i1 %17, label %18, label %20, !dbg !12498

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12499
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !12501
  br label %25, !dbg !12502

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !12491
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12486, metadata !DIExpression()) #23, !dbg !12487
  %22 = icmp eq %struct._dnode* %21, null, !dbg !12491
  br i1 %22, label %23, label %13, !dbg !12489, !llvm.loop !12503

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12505
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !12506
  br label %25, !dbg !12507

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12508
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !12509
  %28 = zext i1 %27 to i32, !dbg !12509
  tail call fastcc void @update_cache(i32 noundef %28) #24, !dbg !12510
  ret void, !dbg !12511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12512 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12514, metadata !DIExpression()), !dbg !12515
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #24, !dbg !12516
  ret i1 %2, !dbg !12517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !12518 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12520, metadata !DIExpression()), !dbg !12522
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12521, metadata !DIExpression()), !dbg !12522
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12523
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #24, !dbg !12524
  ret void, !dbg !12525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12526 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12530, metadata !DIExpression()), !dbg !12531
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !12532
  br i1 %2, label %6, label %3, !dbg !12532

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12533
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12533
  br label %6, !dbg !12532

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12532
  ret %struct._dnode* %7, !dbg !12534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !12535 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12539, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12540, metadata !DIExpression()), !dbg !12543
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12544
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12544
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12541, metadata !DIExpression()), !dbg !12543
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12545
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12546
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12547
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12548
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12549
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12550
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12551
  ret void, !dbg !12552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !12553 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12557, metadata !DIExpression()), !dbg !12559
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12558, metadata !DIExpression()), !dbg !12559
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12560
  br i1 %3, label %6, label %4, !dbg !12561

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !12562
  br label %6, !dbg !12561

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12561
  ret %struct._dnode* %7, !dbg !12563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !12564 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12568, metadata !DIExpression()), !dbg !12571
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12569, metadata !DIExpression()), !dbg !12571
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12572
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12572
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12570, metadata !DIExpression()), !dbg !12571
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12573
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12574
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12575
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12576
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12577
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12578
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12579
  ret void, !dbg !12580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12583, metadata !DIExpression()), !dbg !12585
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12586
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12593, metadata !DIExpression()) #23, !dbg !12595
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12596
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12597
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !12597
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12584, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12598, metadata !DIExpression()) #23, !dbg !12604
  call void @llvm.dbg.value(metadata i32 %0, metadata !12603, metadata !DIExpression()) #23, !dbg !12604
  %6 = icmp eq i32 %0, 0, !dbg !12607
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12609
  br i1 %6, label %8, label %15, !dbg !12610

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !12611
  br i1 %9, label %15, label %10, !dbg !12613

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !12614
  br i1 %11, label %15, label %12, !dbg !12616

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !12617
  %14 = icmp eq i32 %13, 0, !dbg !12617
  br i1 %14, label %18, label %15, !dbg !12619

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !12620
  br i1 %16, label %18, label %17, !dbg !12623

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !12624
  br label %18, !dbg !12626

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !12609
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12609
  ret void, !dbg !12627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !12628 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12632, metadata !DIExpression()), !dbg !12635
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12633, metadata !DIExpression()), !dbg !12635
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !12636
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12634, metadata !DIExpression()), !dbg !12635
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12633, metadata !DIExpression()), !dbg !12635
  ret %struct.k_thread* %3, !dbg !12637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12640, metadata !DIExpression()), !dbg !12641
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12642
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12643
  %4 = xor i1 %3, true, !dbg !12644
  ret i1 %4, !dbg !12645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12646 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12648, metadata !DIExpression()), !dbg !12649
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12650
  %3 = load i16, i16* %2, align 2, !dbg !12650
  %4 = icmp ult i16 %3, 128, !dbg !12651
  %5 = zext i1 %4 to i32, !dbg !12651
  ret i32 %5, !dbg !12652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12653 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12659, metadata !DIExpression()), !dbg !12660
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12661
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !12662
  %4 = xor i1 %3, true, !dbg !12663
  ret i1 %4, !dbg !12664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12665 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12671, metadata !DIExpression()), !dbg !12672
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12673
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12673
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12674
  ret i1 %4, !dbg !12675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !12676 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12678, metadata !DIExpression()), !dbg !12680
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12679, metadata !DIExpression()), !dbg !12680
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12681
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12681
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12682
  br i1 %5, label %9, label %6, !dbg !12683

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12684
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12684
  br label %9, !dbg !12683

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12683
  ret %struct._dnode* %10, !dbg !12685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !12686 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12690, metadata !DIExpression()), !dbg !12691
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12692
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12692
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12693
  ret i1 %4, !dbg !12694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !12695 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12699, metadata !DIExpression()), !dbg !12702
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12703
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12703
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12700, metadata !DIExpression()), !dbg !12702
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12704
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12704
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12701, metadata !DIExpression()), !dbg !12702
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12705
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12706
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12707
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12708
  tail call fastcc void @sys_dnode_init.117(%struct._dnode* noundef %0) #24, !dbg !12709
  ret void, !dbg !12710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.117(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !12711 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12713, metadata !DIExpression()), !dbg !12714
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12715
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12716
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12717
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12718
  ret void, !dbg !12719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12720 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12724, metadata !DIExpression()), !dbg !12726
  call void @llvm.dbg.value(metadata i32 128, metadata !12725, metadata !DIExpression()), !dbg !12726
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12727
  %3 = load i8, i8* %2, align 1, !dbg !12727
  %4 = icmp slt i8 %3, 0, !dbg !12728
  ret i1 %4, !dbg !12729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12734, metadata !DIExpression()), !dbg !12736
  call void @llvm.dbg.value(metadata i32 %1, metadata !12735, metadata !DIExpression()), !dbg !12736
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !12737
  ret i1 %3, !dbg !12738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #12 !dbg !12739 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12741, metadata !DIExpression()), !dbg !12742
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12743
  ret i1 %2, !dbg !12744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12747, metadata !DIExpression()), !dbg !12749
  call void @llvm.dbg.value(metadata i32 %1, metadata !12748, metadata !DIExpression()), !dbg !12749
  %3 = icmp slt i32 %0, %1, !dbg !12750
  ret i1 %3, !dbg !12751
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12752 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12754, metadata !DIExpression()), !dbg !12758
  call void @llvm.dbg.value(metadata i32 0, metadata !12755, metadata !DIExpression()), !dbg !12759
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !12760
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12762, !srcloc !12294
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12762
  call void @llvm.dbg.value(metadata i32 %3, metadata !12291, metadata !DIExpression()) #23, !dbg !12764
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12764
  call void @llvm.dbg.value(metadata i32 %3, metadata !12285, metadata !DIExpression()) #23, !dbg !12760
  call void @llvm.dbg.value(metadata i32 %3, metadata !12757, metadata !DIExpression()), !dbg !12759
  call void @llvm.dbg.value(metadata i32 undef, metadata !12755, metadata !DIExpression()), !dbg !12759
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12765
  call void @llvm.dbg.value(metadata i32 %3, metadata !12306, metadata !DIExpression()) #23, !dbg !12770
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !12770
  call void @llvm.dbg.value(metadata i32 %3, metadata !12314, metadata !DIExpression()) #23, !dbg !12772
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12774, !srcloc !12320
  call void @llvm.dbg.value(metadata i32 1, metadata !12755, metadata !DIExpression()), !dbg !12759
  call void @llvm.dbg.value(metadata i32 undef, metadata !12755, metadata !DIExpression()), !dbg !12759
  ret void, !dbg !12775
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12776 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12778, metadata !DIExpression()), !dbg !12779
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12780
  br i1 %2, label %24, label %3, !dbg !12782

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !12783
  br i1 %4, label %5, label %24, !dbg !12784

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12465, metadata !DIExpression()) #23, !dbg !12785
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12788
  %7 = load i8, i8* %6, align 1, !dbg !12789
  %8 = or i8 %7, -128, !dbg !12789
  store i8 %8, i8* %6, align 1, !dbg !12789
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12472, metadata !DIExpression()) #23, !dbg !12790
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12479, metadata !DIExpression()) #23, !dbg !12792
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12485, metadata !DIExpression()) #23, !dbg !12792
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12794
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !12486, metadata !DIExpression()) #23, !dbg !12792
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12795
  br i1 %10, label %21, label %11, !dbg !12794

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12486, metadata !DIExpression()) #23, !dbg !12792
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12796
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12486, metadata !DIExpression()) #23, !dbg !12792
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !12797
  %15 = icmp sgt i32 %14, 0, !dbg !12798
  br i1 %15, label %16, label %18, !dbg !12799

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12800
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !12801
  br label %23, !dbg !12802

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !12795
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !12486, metadata !DIExpression()) #23, !dbg !12792
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12795
  br i1 %20, label %21, label %11, !dbg !12794, !llvm.loop !12803

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12805
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !12806
  br label %23, !dbg !12807

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !12808
  br label %24, !dbg !12809

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12811 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12813, metadata !DIExpression()), !dbg !12814
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !12815
  br i1 %2, label %6, label %3, !dbg !12816

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !12817
  %5 = xor i1 %4, true, !dbg !12816
  br label %6, !dbg !12816

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12818
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12819 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12821, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata i32 0, metadata !12822, metadata !DIExpression()), !dbg !12826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !12827
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12829, !srcloc !12294
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12829
  call void @llvm.dbg.value(metadata i32 %3, metadata !12291, metadata !DIExpression()) #23, !dbg !12831
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12831
  call void @llvm.dbg.value(metadata i32 %3, metadata !12285, metadata !DIExpression()) #23, !dbg !12827
  call void @llvm.dbg.value(metadata i32 %3, metadata !12824, metadata !DIExpression()), !dbg !12826
  call void @llvm.dbg.value(metadata i32 undef, metadata !12822, metadata !DIExpression()), !dbg !12826
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !12832
  call void @llvm.dbg.value(metadata i32 %3, metadata !12306, metadata !DIExpression()) #23, !dbg !12835
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !12835
  call void @llvm.dbg.value(metadata i32 %3, metadata !12314, metadata !DIExpression()) #23, !dbg !12837
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12839, !srcloc !12320
  call void @llvm.dbg.value(metadata i32 1, metadata !12822, metadata !DIExpression()), !dbg !12826
  call void @llvm.dbg.value(metadata i32 undef, metadata !12822, metadata !DIExpression()), !dbg !12826
  ret void, !dbg !12840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12841 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12843, metadata !DIExpression()), !dbg !12845
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !12846
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12848, !srcloc !12294
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12848
  call void @llvm.dbg.value(metadata i32 %3, metadata !12291, metadata !DIExpression()) #23, !dbg !12850
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12850
  call void @llvm.dbg.value(metadata i32 %3, metadata !12285, metadata !DIExpression()) #23, !dbg !12846
  call void @llvm.dbg.value(metadata i32 %3, metadata !12844, metadata !DIExpression()), !dbg !12845
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !12851
  br i1 %4, label %5, label %6, !dbg !12853

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12306, metadata !DIExpression()) #23, !dbg !12854
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !12854
  call void @llvm.dbg.value(metadata i32 %3, metadata !12314, metadata !DIExpression()) #23, !dbg !12857
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12859, !srcloc !12320
  br label %8, !dbg !12860

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.122(%struct.k_thread* noundef %0) #24, !dbg !12861
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !12862
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12863
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !12863
  br label %8, !dbg !12864

8:                                                ; preds = %6, %5
  ret void, !dbg !12864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12865 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12867, metadata !DIExpression()), !dbg !12868
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12869
  %3 = load i8, i8* %2, align 1, !dbg !12869
  %4 = and i8 %3, 4, !dbg !12870
  %5 = icmp eq i8 %4, 0, !dbg !12871
  ret i1 %5, !dbg !12872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.122(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12873 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12875, metadata !DIExpression()), !dbg !12876
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12877
  %3 = load i8, i8* %2, align 1, !dbg !12878
  %4 = and i8 %3, -5, !dbg !12878
  store i8 %4, i8* %2, align 1, !dbg !12878
  ret void, !dbg !12879
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12880 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12883, metadata !DIExpression()), !dbg !12884
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12882, metadata !DIExpression()), !dbg !12884
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !12885
  br i1 %4, label %5, label %9, !dbg !12887

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !12888
  br i1 %6, label %7, label %9, !dbg !12889

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12890, metadata !DIExpression()) #23, !dbg !12896
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12895, metadata !DIExpression()) #23, !dbg !12896
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !12899
  br label %10, !dbg !12900

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12306, metadata !DIExpression()) #23, !dbg !12901
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !12901
  call void @llvm.dbg.value(metadata i32 %3, metadata !12314, metadata !DIExpression()) #23, !dbg !12904
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12906, !srcloc !12320
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12912, metadata !DIExpression()), !dbg !12913
  call void @llvm.dbg.value(metadata i32 %0, metadata !12914, metadata !DIExpression()), !dbg !12919
  %2 = icmp eq i32 %0, 0, !dbg !12921
  br i1 %2, label %3, label %6, !dbg !12922

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12923, !srcloc !12930
  call void @llvm.dbg.value(metadata i32 %4, metadata !12926, metadata !DIExpression()) #23, !dbg !12931
  %5 = icmp eq i32 %4, 0, !dbg !12932
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12913
  ret i1 %7, !dbg !12933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !12934 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12937
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12936, metadata !DIExpression()), !dbg !12938
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12939
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12940
  ret i1 %3, !dbg !12941
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12942 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12944, metadata !DIExpression()), !dbg !12946
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !12947
  call void @llvm.dbg.value(metadata i32 %2, metadata !12945, metadata !DIExpression()), !dbg !12946
  ret i32 %2, !dbg !12948
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12949 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12951, metadata !DIExpression()), !dbg !12955
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !12956
  call void @llvm.dbg.value(metadata i32 0, metadata !12952, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !12958
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12960, !srcloc !12294
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12960
  call void @llvm.dbg.value(metadata i32 %4, metadata !12291, metadata !DIExpression()) #23, !dbg !12962
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !12962
  call void @llvm.dbg.value(metadata i32 %4, metadata !12285, metadata !DIExpression()) #23, !dbg !12958
  call void @llvm.dbg.value(metadata i32 %4, metadata !12954, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.value(metadata i32 undef, metadata !12952, metadata !DIExpression()), !dbg !12957
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !12963
  br i1 %5, label %6, label %10, !dbg !12967

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12448, metadata !DIExpression()) #23, !dbg !12968
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12971
  %8 = load i8, i8* %7, align 1, !dbg !12972
  %9 = and i8 %8, 127, !dbg !12972
  store i8 %9, i8* %7, align 1, !dbg !12972
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12456, metadata !DIExpression()) #23, !dbg !12973
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12975
  br label %10, !dbg !12976

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !12977
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12978
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12979
  %13 = zext i1 %12 to i32, !dbg !12979
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !12980
  call void @llvm.dbg.value(metadata i32 %4, metadata !12306, metadata !DIExpression()) #23, !dbg !12981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !12981
  call void @llvm.dbg.value(metadata i32 %4, metadata !12314, metadata !DIExpression()) #23, !dbg !12983
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12985, !srcloc !12320
  call void @llvm.dbg.value(metadata i32 1, metadata !12952, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.value(metadata i32 undef, metadata !12952, metadata !DIExpression()), !dbg !12957
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12986
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12988
  br i1 %15, label %16, label %17, !dbg !12989

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !12990
  br label %17, !dbg !12992

17:                                               ; preds = %16, %10
  ret void, !dbg !12993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12994 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12996, metadata !DIExpression()), !dbg !12997
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12998
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !12999
  ret i32 %3, !dbg !13000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13001 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13003, metadata !DIExpression()), !dbg !13004
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13005
  %3 = load i8, i8* %2, align 1, !dbg !13006
  %4 = or i8 %3, 16, !dbg !13006
  store i8 %4, i8* %2, align 1, !dbg !13006
  ret void, !dbg !13007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !13008 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13009, !srcloc !12294
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13009
  call void @llvm.dbg.value(metadata i32 %2, metadata !12291, metadata !DIExpression()) #23, !dbg !13011
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13011
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !13012
  ret void, !dbg !13013
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !13014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13016, metadata !DIExpression()), !dbg !13017
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !13018
  br i1 %2, label %3, label %5, !dbg !13020

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !13021
  br label %6, !dbg !13023

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12314, metadata !DIExpression()) #23, !dbg !13024
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !13027, !srcloc !12320
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !13028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13029 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13031, metadata !DIExpression()), !dbg !13033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13034
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13036, !srcloc !12294
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13036
  call void @llvm.dbg.value(metadata i32 %3, metadata !12291, metadata !DIExpression()) #23, !dbg !13038
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13038
  call void @llvm.dbg.value(metadata i32 %3, metadata !12285, metadata !DIExpression()) #23, !dbg !13034
  call void @llvm.dbg.value(metadata i32 %3, metadata !13032, metadata !DIExpression()), !dbg !13033
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !13039
  br i1 %4, label %6, label %5, !dbg !13041

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12306, metadata !DIExpression()) #23, !dbg !13042
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !13042
  call void @llvm.dbg.value(metadata i32 %3, metadata !12314, metadata !DIExpression()) #23, !dbg !13045
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13047, !srcloc !12320
  br label %8, !dbg !13048

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !13049
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13050
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13051
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #24, !dbg !13051
  br label %8, !dbg !13052

8:                                                ; preds = %6, %5
  ret void, !dbg !13052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13053 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13055, metadata !DIExpression()), !dbg !13056
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13057
  %3 = load i8, i8* %2, align 1, !dbg !13057
  %4 = and i8 %3, 16, !dbg !13058
  %5 = icmp ne i8 %4, 0, !dbg !13059
  ret i1 %5, !dbg !13060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13061 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13063, metadata !DIExpression()), !dbg !13064
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13065
  %3 = load i8, i8* %2, align 1, !dbg !13066
  %4 = and i8 %3, -17, !dbg !13066
  store i8 %4, i8* %2, align 1, !dbg !13066
  ret void, !dbg !13067
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13068 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13078, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13076, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13077, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.value(metadata i32 0, metadata !13079, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13084
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13086, !srcloc !12294
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13086
  call void @llvm.dbg.value(metadata i32 %5, metadata !12291, metadata !DIExpression()) #23, !dbg !13088
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13088
  call void @llvm.dbg.value(metadata i32 %5, metadata !12285, metadata !DIExpression()) #23, !dbg !13084
  call void @llvm.dbg.value(metadata i32 %5, metadata !13081, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.value(metadata i32 undef, metadata !13079, metadata !DIExpression()), !dbg !13083
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !13089
  call void @llvm.dbg.value(metadata i32 %5, metadata !12306, metadata !DIExpression()) #23, !dbg !13092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !13092
  call void @llvm.dbg.value(metadata i32 %5, metadata !12314, metadata !DIExpression()) #23, !dbg !13094
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !13096, !srcloc !12320
  call void @llvm.dbg.value(metadata i32 1, metadata !13079, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.value(metadata i32 undef, metadata !13079, metadata !DIExpression()), !dbg !13083
  ret void, !dbg !13097
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13098 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13102, metadata !DIExpression()), !dbg !13103
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13100, metadata !DIExpression()), !dbg !13103
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13101, metadata !DIExpression()), !dbg !13103
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !13104
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !13105
  ret void, !dbg !13106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13107 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13111, metadata !DIExpression()), !dbg !13113
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13112, metadata !DIExpression()), !dbg !13113
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !13114
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !13115
  %3 = icmp eq %union.anon* %1, null, !dbg !13116
  br i1 %3, label %21, label %4, !dbg !13118

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13119
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13121
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13122
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12479, metadata !DIExpression()) #23, !dbg !13123
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12485, metadata !DIExpression()) #23, !dbg !13123
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !13125
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12486, metadata !DIExpression()) #23, !dbg !13123
  %8 = icmp eq %struct._dnode* %7, null, !dbg !13126
  br i1 %8, label %19, label %9, !dbg !13125

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12486, metadata !DIExpression()) #23, !dbg !13123
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !13127
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !12486, metadata !DIExpression()) #23, !dbg !13123
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !13128
  %13 = icmp sgt i32 %12, 0, !dbg !13129
  br i1 %13, label %14, label %16, !dbg !13130

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13131
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !13132
  br label %21, !dbg !13133

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !13126
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12486, metadata !DIExpression()) #23, !dbg !13123
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13126
  br i1 %18, label %19, label %9, !dbg !13125, !llvm.loop !13134

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13136
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !13137
  br label %21, !dbg !13138

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !13139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13140 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13145, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13144, metadata !DIExpression()), !dbg !13146
  %4 = icmp eq i64 %3, -1, !dbg !13147
  br i1 %4, label %6, label %5, !dbg !13149

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.123(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13150
  br label %6, !dbg !13152

6:                                                ; preds = %5, %2
  ret void, !dbg !13153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.123(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13154 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13157, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13156, metadata !DIExpression()), !dbg !13158
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13159
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13160
  ret void, !dbg !13161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13162 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13164, metadata !DIExpression()), !dbg !13172
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13173
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13173
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13165, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.value(metadata i32 0, metadata !13166, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13175
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13177, !srcloc !12294
  call void @llvm.dbg.value(metadata i32 undef, metadata !12291, metadata !DIExpression()) #23, !dbg !13179
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13179
  call void @llvm.dbg.value(metadata i32 undef, metadata !12285, metadata !DIExpression()) #23, !dbg !13175
  call void @llvm.dbg.value(metadata i32 undef, metadata !13168, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.value(metadata i32 undef, metadata !13166, metadata !DIExpression()), !dbg !13174
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13180
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !13181
  %7 = load i8, i8* %6, align 1, !dbg !13181
  %8 = and i8 %7, 40, !dbg !13182
  %9 = icmp eq i8 %8, 0, !dbg !13182
  call void @llvm.dbg.value(metadata i1 %9, metadata !13169, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13183
  br i1 %9, label %10, label %17, !dbg !13184

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13185
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !13185
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !13185
  %14 = icmp eq %union.anon* %13, null, !dbg !13189
  br i1 %14, label %16, label %15, !dbg !13190

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !13191
  br label %16, !dbg !13193

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.122(%struct.k_thread* noundef nonnull %3) #24, !dbg !13194
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !13195
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !13196
  br label %17, !dbg !13197

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !13177
  call void @llvm.dbg.value(metadata i32 %18, metadata !12291, metadata !DIExpression()) #23, !dbg !13179
  call void @llvm.dbg.value(metadata i32 %18, metadata !12285, metadata !DIExpression()) #23, !dbg !13175
  call void @llvm.dbg.value(metadata i32 %18, metadata !13168, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.value(metadata i32 undef, metadata !12306, metadata !DIExpression()) #23, !dbg !13198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !13198
  call void @llvm.dbg.value(metadata i32 undef, metadata !12314, metadata !DIExpression()) #23, !dbg !13200
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !13202, !srcloc !12320
  call void @llvm.dbg.value(metadata i32 1, metadata !13166, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.value(metadata i32 undef, metadata !13166, metadata !DIExpression()), !dbg !13174
  ret void, !dbg !13203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13204 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13206, metadata !DIExpression()), !dbg !13207
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !13208
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !13209
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13210
  store %union.anon* null, %union.anon** %2, align 8, !dbg !13211
  ret void, !dbg !13212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13213 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13215, metadata !DIExpression()), !dbg !13216
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13217
  %3 = load i8, i8* %2, align 1, !dbg !13218
  %4 = and i8 %3, -3, !dbg !13218
  store i8 %4, i8* %2, align 1, !dbg !13218
  ret void, !dbg !13219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13220 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13222, metadata !DIExpression()), !dbg !13223
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !13224
  br i1 %2, label %3, label %7, !dbg !13226

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12448, metadata !DIExpression()) #23, !dbg !13227
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13230
  %5 = load i8, i8* %4, align 1, !dbg !13231
  %6 = and i8 %5, 127, !dbg !13231
  store i8 %6, i8* %4, align 1, !dbg !13231
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12456, metadata !DIExpression()) #23, !dbg !13232
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13234
  br label %7, !dbg !13235

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13236
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13237
  %10 = zext i1 %9 to i32, !dbg !13237
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !13238
  ret void, !dbg !13239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13240 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13242, metadata !DIExpression()), !dbg !13243
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13244
  %3 = load i8, i8* %2, align 1, !dbg !13245
  %4 = or i8 %3, 2, !dbg !13245
  store i8 %4, i8* %2, align 1, !dbg !13245
  ret void, !dbg !13246
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !13247 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13249, metadata !DIExpression()), !dbg !13253
  call void @llvm.dbg.value(metadata i32 0, metadata !13250, metadata !DIExpression()), !dbg !13254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13255
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13257, !srcloc !12294
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13257
  call void @llvm.dbg.value(metadata i32 %3, metadata !12291, metadata !DIExpression()) #23, !dbg !13259
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13259
  call void @llvm.dbg.value(metadata i32 %3, metadata !12285, metadata !DIExpression()) #23, !dbg !13255
  call void @llvm.dbg.value(metadata i32 %3, metadata !13252, metadata !DIExpression()), !dbg !13254
  call void @llvm.dbg.value(metadata i32 undef, metadata !13250, metadata !DIExpression()), !dbg !13254
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !13260
  call void @llvm.dbg.value(metadata i32 %3, metadata !12306, metadata !DIExpression()) #23, !dbg !13263
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !13263
  call void @llvm.dbg.value(metadata i32 %3, metadata !12314, metadata !DIExpression()) #23, !dbg !13265
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13267, !srcloc !12320
  call void @llvm.dbg.value(metadata i32 1, metadata !13250, metadata !DIExpression()), !dbg !13254
  call void @llvm.dbg.value(metadata i32 undef, metadata !13250, metadata !DIExpression()), !dbg !13254
  ret void, !dbg !13268
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13269 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13275, metadata !DIExpression()), !dbg !13280
  call void @llvm.dbg.value(metadata i32 %0, metadata !13273, metadata !DIExpression()), !dbg !13280
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13274, metadata !DIExpression()), !dbg !13280
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13281
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !13282
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13283
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13284
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !13285
  call void @llvm.dbg.value(metadata i32 %6, metadata !13276, metadata !DIExpression()), !dbg !13280
  call void @llvm.dbg.value(metadata i32 0, metadata !13277, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13287
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13289, !srcloc !12294
  call void @llvm.dbg.value(metadata i32 undef, metadata !12291, metadata !DIExpression()) #23, !dbg !13291
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13291
  call void @llvm.dbg.value(metadata i32 undef, metadata !12285, metadata !DIExpression()) #23, !dbg !13287
  call void @llvm.dbg.value(metadata i32 undef, metadata !13279, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.value(metadata i32 undef, metadata !13277, metadata !DIExpression()), !dbg !13286
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13292
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13296
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13297
  br i1 %10, label %11, label %12, !dbg !13298

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13299
  br label %12, !dbg !13301

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13289
  call void @llvm.dbg.value(metadata i32 %13, metadata !12291, metadata !DIExpression()) #23, !dbg !13291
  call void @llvm.dbg.value(metadata i32 %13, metadata !12285, metadata !DIExpression()) #23, !dbg !13287
  call void @llvm.dbg.value(metadata i32 %13, metadata !13279, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.value(metadata i32 undef, metadata !12306, metadata !DIExpression()) #23, !dbg !13302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !13302
  call void @llvm.dbg.value(metadata i32 undef, metadata !12314, metadata !DIExpression()) #23, !dbg !13304
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !13306, !srcloc !12320
  call void @llvm.dbg.value(metadata i32 1, metadata !13277, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.value(metadata i32 undef, metadata !13277, metadata !DIExpression()), !dbg !13286
  ret i32 %6, !dbg !13307
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13308 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13313, metadata !DIExpression()), !dbg !13316
  call void @llvm.dbg.value(metadata i64 undef, metadata !13315, metadata !DIExpression()), !dbg !13316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13312, metadata !DIExpression()), !dbg !13316
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13314, metadata !DIExpression()), !dbg !13316
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13317
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13319
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13321, !srcloc !12294
  call void @llvm.dbg.value(metadata i32 undef, metadata !12291, metadata !DIExpression()) #23, !dbg !13323
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13323
  call void @llvm.dbg.value(metadata i32 undef, metadata !12285, metadata !DIExpression()) #23, !dbg !13319
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13324
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !13325
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12890, metadata !DIExpression()) #23, !dbg !13326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12895, metadata !DIExpression()) #23, !dbg !13326
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !13328
  ret i32 %9, !dbg !13329
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13330 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13334, metadata !DIExpression()), !dbg !13339
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13335, metadata !DIExpression()), !dbg !13339
  call void @llvm.dbg.value(metadata i32 0, metadata !13336, metadata !DIExpression()), !dbg !13340
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13341
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13343, !srcloc !12294
  call void @llvm.dbg.value(metadata i32 undef, metadata !12291, metadata !DIExpression()) #23, !dbg !13345
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13345
  call void @llvm.dbg.value(metadata i32 undef, metadata !12285, metadata !DIExpression()) #23, !dbg !13341
  call void @llvm.dbg.value(metadata i32 undef, metadata !13338, metadata !DIExpression()), !dbg !13340
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13335, metadata !DIExpression()), !dbg !13339
  call void @llvm.dbg.value(metadata i32 undef, metadata !13336, metadata !DIExpression()), !dbg !13340
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !13346
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13335, metadata !DIExpression()), !dbg !13339
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13349
  br i1 %5, label %7, label %6, !dbg !13351

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13352
  br label %7, !dbg !13354

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13343
  call void @llvm.dbg.value(metadata i32 %8, metadata !12291, metadata !DIExpression()) #23, !dbg !13345
  call void @llvm.dbg.value(metadata i32 %8, metadata !12285, metadata !DIExpression()) #23, !dbg !13341
  call void @llvm.dbg.value(metadata i32 %8, metadata !13338, metadata !DIExpression()), !dbg !13340
  call void @llvm.dbg.value(metadata i32 undef, metadata !12306, metadata !DIExpression()) #23, !dbg !13355
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !13355
  call void @llvm.dbg.value(metadata i32 undef, metadata !12314, metadata !DIExpression()) #23, !dbg !13357
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13359, !srcloc !12320
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13335, metadata !DIExpression()), !dbg !13339
  call void @llvm.dbg.value(metadata i32 undef, metadata !13336, metadata !DIExpression()), !dbg !13340
  ret %struct.k_thread* %4, !dbg !13360
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13361 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13363, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13364, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 0, metadata !13365, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13370
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13372, !srcloc !12294
  call void @llvm.dbg.value(metadata i32 undef, metadata !12291, metadata !DIExpression()) #23, !dbg !13374
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13374
  call void @llvm.dbg.value(metadata i32 undef, metadata !12285, metadata !DIExpression()) #23, !dbg !13370
  call void @llvm.dbg.value(metadata i32 undef, metadata !13367, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13364, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 undef, metadata !13365, metadata !DIExpression()), !dbg !13369
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #24, !dbg !13375
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13364, metadata !DIExpression()), !dbg !13368
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13378
  br i1 %5, label %8, label %6, !dbg !13380

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13381
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #24, !dbg !13383
  br label %8, !dbg !13384

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13372
  call void @llvm.dbg.value(metadata i32 %9, metadata !12291, metadata !DIExpression()) #23, !dbg !13374
  call void @llvm.dbg.value(metadata i32 %9, metadata !12285, metadata !DIExpression()) #23, !dbg !13370
  call void @llvm.dbg.value(metadata i32 %9, metadata !13367, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata i32 undef, metadata !12306, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !13385
  call void @llvm.dbg.value(metadata i32 undef, metadata !12314, metadata !DIExpression()) #23, !dbg !13387
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13389, !srcloc !12320
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13364, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.value(metadata i32 undef, metadata !13365, metadata !DIExpression()), !dbg !13369
  ret %struct.k_thread* %4, !dbg !13390
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13391 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13393, metadata !DIExpression()), !dbg !13394
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13249, metadata !DIExpression()) #23, !dbg !13395
  call void @llvm.dbg.value(metadata i32 0, metadata !13250, metadata !DIExpression()) #23, !dbg !13397
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13398
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13400, !srcloc !12294
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13400
  call void @llvm.dbg.value(metadata i32 %3, metadata !12291, metadata !DIExpression()) #23, !dbg !13402
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13402
  call void @llvm.dbg.value(metadata i32 %3, metadata !12285, metadata !DIExpression()) #23, !dbg !13398
  call void @llvm.dbg.value(metadata i32 %3, metadata !13252, metadata !DIExpression()) #23, !dbg !13397
  call void @llvm.dbg.value(metadata i32 undef, metadata !13250, metadata !DIExpression()) #23, !dbg !13397
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !13403
  call void @llvm.dbg.value(metadata i32 %3, metadata !12306, metadata !DIExpression()) #23, !dbg !13404
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !13404
  call void @llvm.dbg.value(metadata i32 %3, metadata !12314, metadata !DIExpression()) #23, !dbg !13406
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13408, !srcloc !12320
  call void @llvm.dbg.value(metadata i32 1, metadata !13250, metadata !DIExpression()) #23, !dbg !13397
  call void @llvm.dbg.value(metadata i32 undef, metadata !13250, metadata !DIExpression()) #23, !dbg !13397
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !13409
  ret void, !dbg !13410
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13411 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13413, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.value(metadata i32 %1, metadata !13414, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.value(metadata i8 0, metadata !13415, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.value(metadata i32 0, metadata !13416, metadata !DIExpression()), !dbg !13420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13421
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13423, !srcloc !12294
  call void @llvm.dbg.value(metadata i32 undef, metadata !12291, metadata !DIExpression()) #23, !dbg !13425
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13425
  call void @llvm.dbg.value(metadata i32 undef, metadata !12285, metadata !DIExpression()) #23, !dbg !13421
  call void @llvm.dbg.value(metadata i32 undef, metadata !13418, metadata !DIExpression()), !dbg !13420
  call void @llvm.dbg.value(metadata i8 poison, metadata !13415, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.value(metadata i32 undef, metadata !13416, metadata !DIExpression()), !dbg !13420
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !13426
  call void @llvm.dbg.value(metadata i1 %6, metadata !13415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13419
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !13429

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12448, metadata !DIExpression()) #23, !dbg !13430
  %11 = load i8, i8* %4, align 1, !dbg !13436
  %12 = and i8 %11, 127, !dbg !13436
  store i8 %12, i8* %4, align 1, !dbg !13436
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12456, metadata !DIExpression()) #23, !dbg !13437
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13439
  store i8 %9, i8* %8, align 2, !dbg !13440
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12465, metadata !DIExpression()) #23, !dbg !13441
  %13 = load i8, i8* %4, align 1, !dbg !13443
  %14 = or i8 %13, -128, !dbg !13443
  store i8 %14, i8* %4, align 1, !dbg !13443
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12472, metadata !DIExpression()) #23, !dbg !13444
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12479, metadata !DIExpression()) #23, !dbg !13446
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12485, metadata !DIExpression()) #23, !dbg !13446
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13448
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12486, metadata !DIExpression()) #23, !dbg !13446
  %16 = icmp eq %struct._dnode* %15, null, !dbg !13449
  br i1 %16, label %26, label %17, !dbg !13448

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !12486, metadata !DIExpression()) #23, !dbg !13446
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !13450
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !12486, metadata !DIExpression()) #23, !dbg !13446
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !13451
  %21 = icmp sgt i32 %20, 0, !dbg !13452
  br i1 %21, label %22, label %23, !dbg !13453

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !13454
  br label %27, !dbg !13455

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !13449
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12486, metadata !DIExpression()) #23, !dbg !13446
  %25 = icmp eq %struct._dnode* %24, null, !dbg !13449
  br i1 %25, label %26, label %17, !dbg !13448, !llvm.loop !13456

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !13458
  br label %27, !dbg !13459

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13460
  br label %29, !dbg !13461

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !13462
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !13423
  call void @llvm.dbg.value(metadata i32 %30, metadata !12291, metadata !DIExpression()) #23, !dbg !13425
  call void @llvm.dbg.value(metadata i32 %30, metadata !12285, metadata !DIExpression()) #23, !dbg !13421
  call void @llvm.dbg.value(metadata i32 %30, metadata !13418, metadata !DIExpression()), !dbg !13420
  call void @llvm.dbg.value(metadata i32 undef, metadata !12306, metadata !DIExpression()) #23, !dbg !13464
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !13464
  call void @llvm.dbg.value(metadata i32 undef, metadata !12314, metadata !DIExpression()) #23, !dbg !13466
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !13468, !srcloc !12320
  call void @llvm.dbg.value(metadata i8 poison, metadata !13415, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.value(metadata i32 undef, metadata !13416, metadata !DIExpression()), !dbg !13420
  ret i1 %6, !dbg !13469
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13474, metadata !DIExpression()), !dbg !13477
  call void @llvm.dbg.value(metadata i32 %1, metadata !13475, metadata !DIExpression()), !dbg !13477
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !13478
  call void @llvm.dbg.value(metadata i1 %3, metadata !13476, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13477
  br i1 %3, label %4, label %12, !dbg !13479

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13481
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13482
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13482
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13482
  %9 = load i8, i8* %8, align 1, !dbg !13482
  %10 = icmp eq i8 %9, 0, !dbg !13483
  br i1 %10, label %11, label %12, !dbg !13484

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13485
  br label %12, !dbg !13487

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13488
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13489 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13491, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13495
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13497, !srcloc !12294
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13497
  call void @llvm.dbg.value(metadata i32 %2, metadata !12291, metadata !DIExpression()) #23, !dbg !13499
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13499
  call void @llvm.dbg.value(metadata i32 %2, metadata !12285, metadata !DIExpression()) #23, !dbg !13495
  call void @llvm.dbg.value(metadata i32 %2, metadata !13493, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i32 undef, metadata !13491, metadata !DIExpression()), !dbg !13494
  tail call fastcc void @z_sched_lock() #24, !dbg !13500
  call void @llvm.dbg.value(metadata i32 %2, metadata !12306, metadata !DIExpression()) #23, !dbg !13503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !13503
  call void @llvm.dbg.value(metadata i32 %2, metadata !12314, metadata !DIExpression()) #23, !dbg !13505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13507, !srcloc !12320
  call void @llvm.dbg.value(metadata i32 1, metadata !13491, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i32 undef, metadata !13491, metadata !DIExpression()), !dbg !13494
  ret void, !dbg !13508
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13509 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13510
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13511
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !13511
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !13511
  %5 = load i8, i8* %4, align 1, !dbg !13512
  %6 = add i8 %5, -1, !dbg !13512
  store i8 %6, i8* %4, align 1, !dbg !13512
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13513, !srcloc !13515
  ret void, !dbg !13516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13517 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13519, metadata !DIExpression()), !dbg !13522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13523
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13525, !srcloc !12294
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13525
  call void @llvm.dbg.value(metadata i32 %2, metadata !12291, metadata !DIExpression()) #23, !dbg !13527
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13527
  call void @llvm.dbg.value(metadata i32 %2, metadata !12285, metadata !DIExpression()) #23, !dbg !13523
  call void @llvm.dbg.value(metadata i32 %2, metadata !13521, metadata !DIExpression()), !dbg !13522
  call void @llvm.dbg.value(metadata i32 undef, metadata !13519, metadata !DIExpression()), !dbg !13522
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13528
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !13531
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !13531
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13531
  %7 = load i8, i8* %6, align 1, !dbg !13532
  %8 = add i8 %7, 1, !dbg !13532
  store i8 %8, i8* %6, align 1, !dbg !13532
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !13533
  call void @llvm.dbg.value(metadata i32 %2, metadata !12306, metadata !DIExpression()) #23, !dbg !13534
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !13534
  call void @llvm.dbg.value(metadata i32 %2, metadata !12314, metadata !DIExpression()) #23, !dbg !13536
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13538, !srcloc !12320
  call void @llvm.dbg.value(metadata i32 1, metadata !13519, metadata !DIExpression()), !dbg !13522
  call void @llvm.dbg.value(metadata i32 undef, metadata !13519, metadata !DIExpression()), !dbg !13522
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13539
  ret void, !dbg !13540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !13541 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13542
  ret %struct.k_thread* %1, !dbg !13543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !13544 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13548, metadata !DIExpression()), !dbg !13553
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13549, metadata !DIExpression()), !dbg !13553
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13554
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13550, metadata !DIExpression()), !dbg !13553
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13555
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13551, metadata !DIExpression()), !dbg !13553
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !13556
  call void @llvm.dbg.value(metadata i32 %5, metadata !13552, metadata !DIExpression()), !dbg !13553
  %6 = icmp sgt i32 %5, 0, !dbg !13557
  br i1 %6, label %17, label %7, !dbg !13559

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13560
  br i1 %8, label %17, label %9, !dbg !13562

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13563
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13563
  %12 = load i32, i32* %11, align 8, !dbg !13563
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13565
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13565
  %15 = load i32, i32* %14, align 8, !dbg !13565
  %16 = icmp ult i32 %12, %15, !dbg !13566
  br label %17, !dbg !13567

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13568
  ret i1 %18, !dbg !13569
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13570 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13587, metadata !DIExpression()), !dbg !13602
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13588, metadata !DIExpression()), !dbg !13602
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13603
  %5 = load i32, i32* %4, align 4, !dbg !13604
  %6 = add nsw i32 %5, 1, !dbg !13604
  store i32 %6, i32* %4, align 4, !dbg !13604
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13605
  store i32 %5, i32* %7, align 8, !dbg !13606
  %8 = load i32, i32* %4, align 4, !dbg !13607
  %9 = icmp eq i32 %8, 0, !dbg !13608
  br i1 %9, label %10, label %32, !dbg !13609

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13610
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13610
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13590, metadata !DIExpression()), !dbg !13610
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13610
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13610
  %14 = load i32, i32* %13, align 4, !dbg !13610
  %15 = shl i32 %14, 2, !dbg !13610
  %16 = alloca i8, i32 %15, align 8, !dbg !13610
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13610
  store i8* %16, i8** %17, align 4, !dbg !13610
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13610
  %19 = alloca i8, i32 %14, align 8, !dbg !13610
  store i8* %19, i8** %18, align 4, !dbg !13610
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13610
  store i32 -1, i32* %20, align 4, !dbg !13610
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !13611
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13599, metadata !DIExpression()), !dbg !13612
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !13589, metadata !DIExpression()), !dbg !13602
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !13613
  br i1 %22, label %23, label %24, !dbg !13610

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !13613
  br label %32, !dbg !13614

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !13589, metadata !DIExpression()), !dbg !13602
  %26 = load i32, i32* %4, align 4, !dbg !13615
  %27 = add nsw i32 %26, 1, !dbg !13615
  store i32 %27, i32* %4, align 4, !dbg !13615
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !13617
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !13617
  store i32 %26, i32* %29, align 8, !dbg !13618
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !13611
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13599, metadata !DIExpression()), !dbg !13612
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !13589, metadata !DIExpression()), !dbg !13602
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !13613
  br i1 %31, label %23, label %24, !dbg !13610, !llvm.loop !13619

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13621
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13622
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !13623
  ret void, !dbg !13624
}

; Function Attrs: optsize
declare !dbg !13625 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13630 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13633 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13635, metadata !DIExpression()), !dbg !13637
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13636, metadata !DIExpression()), !dbg !13637
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13638
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13639
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !13640
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13641
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !13641
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !13643
  br i1 %7, label %8, label %10, !dbg !13644

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13645
  store i32 0, i32* %9, align 4, !dbg !13647
  br label %10, !dbg !13648

10:                                               ; preds = %8, %2
  ret void, !dbg !13649
}

; Function Attrs: optsize
declare !dbg !13650 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13651 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13655, metadata !DIExpression()), !dbg !13658
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13656, metadata !DIExpression()), !dbg !13658
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13659
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !13660
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13657, metadata !DIExpression()), !dbg !13658
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13656, metadata !DIExpression()), !dbg !13658
  ret %struct.k_thread* %4, !dbg !13661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13662 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13666, metadata !DIExpression()), !dbg !13667
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !13668
  ret %struct.rbnode* %2, !dbg !13669
}

; Function Attrs: optsize
declare !dbg !13670 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !13673 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13685, metadata !DIExpression()), !dbg !13689
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13690
  %3 = load i32, i32* %2, align 4, !dbg !13690
  %4 = icmp eq i32 %3, 0, !dbg !13692
  br i1 %4, label %10, label %5, !dbg !13693

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13686, metadata !DIExpression()), !dbg !13689
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13694, !range !5946
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13695
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13687, metadata !DIExpression()), !dbg !13689
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !13696
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13688, metadata !DIExpression()), !dbg !13689
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13686, metadata !DIExpression()), !dbg !13689
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13689
  ret %struct.k_thread* %11, !dbg !13697
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13698 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13702, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i32 0, metadata !13703, metadata !DIExpression()), !dbg !13705
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13706
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13704, metadata !DIExpression()), !dbg !13705
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13707
  br i1 %3, label %8, label %4, !dbg !13708

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13709
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !13711
  call void @llvm.dbg.value(metadata i32 1, metadata !13703, metadata !DIExpression()), !dbg !13705
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !13706
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13704, metadata !DIExpression()), !dbg !13705
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13707
  br i1 %7, label %8, label %4, !dbg !13708, !llvm.loop !13712

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13705
  ret i32 %9, !dbg !13714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #4 !dbg !13715 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13717, metadata !DIExpression()), !dbg !13718
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13719
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13720
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13721
  ret %struct.k_thread* %4, !dbg !13722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #3 !dbg !13723 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13732, metadata !DIExpression()), !dbg !13733
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13734
  tail call fastcc void @sys_dlist_init.130(%struct._dnode* noundef nonnull %2) #24, !dbg !13735
  ret void, !dbg !13736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.130(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !13737 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13741, metadata !DIExpression()), !dbg !13742
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13743
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13744
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13745
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13746
  ret void, !dbg !13747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13748 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !13749
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !13750
  ret void, !dbg !13751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !13752 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13757, metadata !DIExpression()), !dbg !13758
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13759
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13759
  %4 = load i8, i8* %3, align 2, !dbg !13759
  %5 = sext i8 %4 to i32, !dbg !13760
  ret i32 %5, !dbg !13761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13762 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13766, metadata !DIExpression()), !dbg !13769
  call void @llvm.dbg.value(metadata i32 %1, metadata !13767, metadata !DIExpression()), !dbg !13769
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13768, metadata !DIExpression()), !dbg !13769
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !13770
  ret void, !dbg !13771
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13772 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !13773
  br i1 %1, label %8, label %2, !dbg !13774

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !13775
  br i1 %3, label %8, label %4, !dbg !13776

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13777
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !13778
  %7 = xor i1 %6, true, !dbg !13776
  br label %8, !dbg !13776

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !13780 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13781, !range !5366
  %2 = icmp eq i8 %1, 0, !dbg !13781
  ret i1 %2, !dbg !13782
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13783 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13786
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13788, !srcloc !12294
  call void @llvm.dbg.value(metadata i32 undef, metadata !12291, metadata !DIExpression()) #23, !dbg !13790
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13790
  call void @llvm.dbg.value(metadata i32 undef, metadata !12285, metadata !DIExpression()) #23, !dbg !13786
  call void @llvm.dbg.value(metadata i32 undef, metadata !13785, metadata !DIExpression()), !dbg !13791
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13792
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12448, metadata !DIExpression()) #23, !dbg !13795
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13797
  %4 = load i8, i8* %3, align 1, !dbg !13798
  %5 = and i8 %4, 127, !dbg !13798
  store i8 %5, i8* %3, align 1, !dbg !13798
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12456, metadata !DIExpression()) #23, !dbg !13799
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !13801
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13802
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12465, metadata !DIExpression()) #23, !dbg !13803
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13805
  %8 = load i8, i8* %7, align 1, !dbg !13806
  %9 = or i8 %8, -128, !dbg !13806
  store i8 %9, i8* %7, align 1, !dbg !13806
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12472, metadata !DIExpression()) #23, !dbg !13807
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12479, metadata !DIExpression()) #23, !dbg !13809
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12485, metadata !DIExpression()) #23, !dbg !13809
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13811
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12486, metadata !DIExpression()) #23, !dbg !13809
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13812
  br i1 %11, label %22, label %12, !dbg !13811

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12486, metadata !DIExpression()) #23, !dbg !13809
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13813
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12486, metadata !DIExpression()) #23, !dbg !13809
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !13814
  %16 = icmp sgt i32 %15, 0, !dbg !13815
  br i1 %16, label %17, label %19, !dbg !13816

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13817
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !13818
  br label %24, !dbg !13819

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !13812
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12486, metadata !DIExpression()) #23, !dbg !13809
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13812
  br i1 %21, label %22, label %12, !dbg !13811, !llvm.loop !13820

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13822
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !13823
  br label %24, !dbg !13824

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13788
  call void @llvm.dbg.value(metadata i32 %25, metadata !12291, metadata !DIExpression()) #23, !dbg !13790
  call void @llvm.dbg.value(metadata i32 %25, metadata !12285, metadata !DIExpression()) #23, !dbg !13786
  call void @llvm.dbg.value(metadata i32 %25, metadata !13785, metadata !DIExpression()), !dbg !13791
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !13825
  call void @llvm.dbg.value(metadata i32 undef, metadata !12890, metadata !DIExpression()) #23, !dbg !13826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12895, metadata !DIExpression()) #23, !dbg !13826
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !13828
  ret void, !dbg !13829
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13830 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13834, metadata !DIExpression()), !dbg !13837
  %3 = icmp eq i64 %2, -1, !dbg !13838
  br i1 %3, label %4, label %6, !dbg !13840

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13841
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #24, !dbg !13843
  br label %11, !dbg !13844

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13835, metadata !DIExpression()), !dbg !13837
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !13845
  %8 = sext i32 %7 to i64, !dbg !13845
  call void @llvm.dbg.value(metadata i64 %8, metadata !13835, metadata !DIExpression()), !dbg !13837
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #24, !dbg !13846
  %10 = trunc i64 %9 to i32, !dbg !13846
  call void @llvm.dbg.value(metadata i32 %10, metadata !13836, metadata !DIExpression()), !dbg !13837
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13837
  ret i32 %12, !dbg !13847
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13848 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13852, metadata !DIExpression()), !dbg !13853
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13854, !srcloc !13856
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !13857
  ret void, !dbg !13858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13859 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13863, metadata !DIExpression()), !dbg !13867
  %2 = icmp eq i64 %0, 0, !dbg !13868
  br i1 %2, label %3, label %4, !dbg !13870

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #24, !dbg !13871
  br label %29, !dbg !13873

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13865, metadata !DIExpression()), !dbg !13867
  %5 = icmp sgt i64 %0, -3, !dbg !13874
  br i1 %5, label %6, label %10, !dbg !13876

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !13877
  %8 = trunc i64 %0 to i32, !dbg !13879
  %9 = add i32 %7, %8, !dbg !13879
  call void @llvm.dbg.value(metadata i32 %9, metadata !13864, metadata !DIExpression()), !dbg !13867
  br label %13, !dbg !13880

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13881
  %12 = sub i32 -2, %11, !dbg !13881
  call void @llvm.dbg.value(metadata i32 %12, metadata !13864, metadata !DIExpression()), !dbg !13867
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13883
  call void @llvm.dbg.value(metadata i32 %14, metadata !13864, metadata !DIExpression()), !dbg !13867
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !13884
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13886, !srcloc !12294
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13886
  call void @llvm.dbg.value(metadata i32 %16, metadata !12291, metadata !DIExpression()) #23, !dbg !13888
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !13888
  call void @llvm.dbg.value(metadata i32 %16, metadata !12285, metadata !DIExpression()) #23, !dbg !13884
  call void @llvm.dbg.value(metadata i32 %16, metadata !13866, metadata !DIExpression()), !dbg !13867
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13889
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13890
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #24, !dbg !13891
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13892
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13893
  tail call fastcc void @z_add_thread_timeout.123(%struct.k_thread* noundef %18, [1 x i64] %19) #24, !dbg !13893
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13894
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #24, !dbg !13895
  call void @llvm.dbg.value(metadata i32 %16, metadata !12890, metadata !DIExpression()) #23, !dbg !13896
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12895, metadata !DIExpression()) #23, !dbg !13896
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !13898
  %22 = zext i32 %14 to i64, !dbg !13899
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !13900
  %24 = zext i32 %23 to i64, !dbg !13900
  %25 = sub nsw i64 %22, %24, !dbg !13901
  call void @llvm.dbg.value(metadata i64 %25, metadata !13863, metadata !DIExpression()), !dbg !13867
  %26 = icmp sgt i64 %25, 0, !dbg !13902
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13902
  %28 = trunc i64 %27 to i32, !dbg !13902
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13867
  ret i32 %30, !dbg !13903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13904 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13906, metadata !DIExpression()), !dbg !13907
  call void @llvm.dbg.value(metadata i64 %0, metadata !12326, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.value(metadata i32 10000, metadata !12329, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.value(metadata i32 1000, metadata !12330, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.value(metadata i8 1, metadata !12331, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.value(metadata i1 false, metadata !12332, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13908
  call void @llvm.dbg.value(metadata i1 false, metadata !12333, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13908
  call void @llvm.dbg.value(metadata i8 0, metadata !12334, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.value(metadata i1 false, metadata !12335, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13908
  call void @llvm.dbg.value(metadata i1 true, metadata !12336, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13908
  call void @llvm.dbg.value(metadata i64 0, metadata !12337, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.value(metadata i64 0, metadata !12337, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.value(metadata i64 %0, metadata !12326, metadata !DIExpression()), !dbg !13908
  %2 = udiv i64 %0, 10, !dbg !13910
  ret i64 %2, !dbg !13914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13915 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13916, !srcloc !13918
  tail call void @z_impl_k_yield() #24, !dbg !13919
  ret void, !dbg !13920
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13925, metadata !DIExpression()), !dbg !13927
  %2 = sext i32 %0 to i64, !dbg !13928
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !13929
  call void @llvm.dbg.value(metadata i64 %3, metadata !13926, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13927
  %4 = shl i64 %3, 32, !dbg !13930
  %5 = ashr exact i64 %4, 32, !dbg !13930
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !13931
  call void @llvm.dbg.value(metadata i32 %6, metadata !13926, metadata !DIExpression()), !dbg !13927
  %7 = sext i32 %6 to i64, !dbg !13932
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !13933
  %9 = trunc i64 %8 to i32, !dbg !13933
  ret i32 %9, !dbg !13934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !13935 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13937, metadata !DIExpression()), !dbg !13938
  call void @llvm.dbg.value(metadata i64 %0, metadata !12326, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12329, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i32 10000, metadata !12330, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i8 1, metadata !12331, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i1 false, metadata !12332, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13939
  call void @llvm.dbg.value(metadata i1 true, metadata !12333, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13939
  call void @llvm.dbg.value(metadata i8 0, metadata !12334, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i1 false, metadata !12335, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13939
  call void @llvm.dbg.value(metadata i1 true, metadata !12336, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13939
  call void @llvm.dbg.value(metadata i64 0, metadata !12337, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.value(metadata i64 0, metadata !12337, metadata !DIExpression()), !dbg !13939
  %2 = add i64 %0, 99, !dbg !13941
  call void @llvm.dbg.value(metadata i64 %2, metadata !12326, metadata !DIExpression()), !dbg !13939
  %3 = udiv i64 %2, 100, !dbg !13942
  ret i64 %3, !dbg !13943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13944 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13946, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata i64 %0, metadata !12326, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i32 10000, metadata !12329, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12330, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i8 1, metadata !12331, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i1 false, metadata !12332, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13948
  call void @llvm.dbg.value(metadata i1 false, metadata !12333, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13948
  call void @llvm.dbg.value(metadata i8 0, metadata !12334, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i1 true, metadata !12335, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13948
  call void @llvm.dbg.value(metadata i1 false, metadata !12336, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13948
  call void @llvm.dbg.value(metadata i64 0, metadata !12337, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i64 0, metadata !12337, metadata !DIExpression()), !dbg !13948
  %2 = mul i64 %0, 100, !dbg !13950
  ret i64 %2, !dbg !13952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13953 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13955, metadata !DIExpression()), !dbg !13956
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !13957
  br i1 %2, label %14, label %3, !dbg !13959

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !13960
  %5 = icmp slt i32 %4, 0, !dbg !13962
  br i1 %5, label %6, label %10, !dbg !13963

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13964
  %8 = load i8, i8* %7, align 1, !dbg !13964
  %9 = icmp eq i8 %8, 16, !dbg !13967
  br i1 %9, label %10, label %14, !dbg !13968

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !13969
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !13970
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13971, !srcloc !12930
  call void @llvm.dbg.value(metadata i32 %11, metadata !12926, metadata !DIExpression()) #23, !dbg !13975
  %12 = icmp eq i32 %11, 0, !dbg !13976
  br i1 %12, label %13, label %14, !dbg !13977

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !13978
  br label %14, !dbg !13980

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13982 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13984, metadata !DIExpression()), !dbg !13985
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13986
  %3 = load i8, i8* %2, align 1, !dbg !13986
  %4 = and i8 %3, 2, !dbg !13987
  %5 = icmp ne i8 %4, 0, !dbg !13988
  ret i1 %5, !dbg !13989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !13990 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13995
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13994, metadata !DIExpression()), !dbg !13996
  ret %struct.k_thread* %1, !dbg !13997
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13998 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13999, !srcloc !12930
  call void @llvm.dbg.value(metadata i32 %1, metadata !12926, metadata !DIExpression()) #23, !dbg !14002
  %2 = icmp eq i32 %1, 0, !dbg !14003
  br i1 %2, label %3, label %8, !dbg !14004

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14005
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !14006
  %6 = icmp ne i32 %5, 0, !dbg !14004
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !14007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14008 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14010, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !14013
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14015, !srcloc !12294
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14015
  call void @llvm.dbg.value(metadata i32 %3, metadata !12291, metadata !DIExpression()) #23, !dbg !14017
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !14017
  call void @llvm.dbg.value(metadata i32 %3, metadata !12285, metadata !DIExpression()) #23, !dbg !14013
  call void @llvm.dbg.value(metadata i32 %3, metadata !14011, metadata !DIExpression()), !dbg !14012
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14018
  %5 = load i8, i8* %4, align 4, !dbg !14018
  %6 = and i8 %5, 1, !dbg !14020
  %7 = icmp eq i8 %6, 0, !dbg !14021
  br i1 %7, label %9, label %8, !dbg !14022

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12306, metadata !DIExpression()) #23, !dbg !14023
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !14023
  call void @llvm.dbg.value(metadata i32 %3, metadata !12314, metadata !DIExpression()) #23, !dbg !14026
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14028, !srcloc !12320
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !14029, !srcloc !14031
  br label %24, !dbg !14032

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14033
  %11 = load i8, i8* %10, align 1, !dbg !14033
  %12 = and i8 %11, 8, !dbg !14035
  %13 = icmp eq i8 %12, 0, !dbg !14036
  br i1 %13, label %15, label %14, !dbg !14037

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12306, metadata !DIExpression()) #23, !dbg !14038
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !14038
  call void @llvm.dbg.value(metadata i32 %3, metadata !12314, metadata !DIExpression()) #23, !dbg !14041
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14043, !srcloc !12320
  br label %24, !dbg !14044

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !14045
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14046
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14048
  br i1 %17, label %18, label %23, !dbg !14049

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14050, !srcloc !12930
  call void @llvm.dbg.value(metadata i32 %19, metadata !12926, metadata !DIExpression()) #23, !dbg !14053
  %20 = icmp eq i32 %19, 0, !dbg !14054
  br i1 %20, label %21, label %23, !dbg !14055

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12890, metadata !DIExpression()) #23, !dbg !14056
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12895, metadata !DIExpression()) #23, !dbg !14056
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14059
  br label %23, !dbg !14060

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12306, metadata !DIExpression()) #23, !dbg !14061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !14061
  call void @llvm.dbg.value(metadata i32 %3, metadata !12314, metadata !DIExpression()) #23, !dbg !14063
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14065, !srcloc !12320
  br label %24, !dbg !14066

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !14066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14067 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14069, metadata !DIExpression()), !dbg !14070
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14071
  %3 = load i8, i8* %2, align 1, !dbg !14071
  %4 = and i8 %3, 8, !dbg !14073
  %5 = icmp eq i8 %4, 0, !dbg !14074
  br i1 %5, label %6, label %20, !dbg !14075

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14076
  %8 = or i8 %7, 8, !dbg !14076
  store i8 %8, i8* %2, align 1, !dbg !14076
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !14078
  br i1 %9, label %10, label %12, !dbg !14080

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12448, metadata !DIExpression()) #23, !dbg !14081
  %11 = and i8 %8, 95, !dbg !14084
  store i8 %11, i8* %2, align 1, !dbg !14084
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12456, metadata !DIExpression()) #23, !dbg !14085
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !14087
  br label %12, !dbg !14088

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14089
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14089
  %15 = icmp eq %union.anon* %14, null, !dbg !14091
  br i1 %15, label %17, label %16, !dbg !14092

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !14093
  br label %17, !dbg !14095

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !14096
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14097
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !14098
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !14099
  br label %20, !dbg !14100

20:                                               ; preds = %17, %1
  ret void, !dbg !14101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14102 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14106, metadata !DIExpression()), !dbg !14108
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !14109
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14107, metadata !DIExpression()), !dbg !14108
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14110
  br i1 %3, label %10, label %4, !dbg !14111

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !14112
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !14114
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14115, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata i32 0, metadata !14120, metadata !DIExpression()), !dbg !14121
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14123
  store i32 0, i32* %7, align 4, !dbg !14124
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !14125
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !14109
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14107, metadata !DIExpression()), !dbg !14108
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14110
  br i1 %9, label %10, label %4, !dbg !14111, !llvm.loop !14126

10:                                               ; preds = %4, %1
  ret void, !dbg !14128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14129 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14134, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14133, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !14138
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14140, !srcloc !12294
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14140
  call void @llvm.dbg.value(metadata i32 %4, metadata !12291, metadata !DIExpression()) #23, !dbg !14142
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !14142
  call void @llvm.dbg.value(metadata i32 %4, metadata !12285, metadata !DIExpression()) #23, !dbg !14138
  call void @llvm.dbg.value(metadata i32 %4, metadata !14135, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.value(metadata i32 0, metadata !14136, metadata !DIExpression()), !dbg !14137
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14143
  %6 = load i8, i8* %5, align 1, !dbg !14143
  %7 = and i8 %6, 8, !dbg !14145
  %8 = icmp eq i8 %7, 0, !dbg !14146
  br i1 %8, label %9, label %24, !dbg !14147

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !14134, metadata !DIExpression()), !dbg !14137
  %11 = icmp eq i64 %10, 0, !dbg !14148
  br i1 %11, label %24, label %12, !dbg !14150

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14151
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !14153
  br i1 %14, label %24, label %15, !dbg !14154

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14155
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !14155
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !14156
  %19 = icmp eq %union.anon* %17, %18, !dbg !14157
  br i1 %19, label %24, label %20, !dbg !14158

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14159
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #24, !dbg !14161
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14162
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #24, !dbg !14163
  call void @llvm.dbg.value(metadata i32 %4, metadata !12890, metadata !DIExpression()) #23, !dbg !14164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12895, metadata !DIExpression()) #23, !dbg !14164
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !14166
  call void @llvm.dbg.value(metadata i32 %23, metadata !14136, metadata !DIExpression()), !dbg !14137
  br label %26, !dbg !14167

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !14168
  call void @llvm.dbg.value(metadata i32 %25, metadata !14136, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.value(metadata i32 %4, metadata !12306, metadata !DIExpression()) #23, !dbg !14169
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !14169
  call void @llvm.dbg.value(metadata i32 %4, metadata !12314, metadata !DIExpression()) #23, !dbg !14171
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !14173, !srcloc !12320
  br label %26, !dbg !14174

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !14137
  ret i32 %27, !dbg !14175
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14176 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14180, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i32 %1, metadata !14181, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i8* %2, metadata !14182, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i8 0, metadata !14184, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i32 0, metadata !14185, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12279, metadata !DIExpression()) #23, !dbg !14190
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14192, !srcloc !12294
  call void @llvm.dbg.value(metadata i32 undef, metadata !12291, metadata !DIExpression()) #23, !dbg !14194
  call void @llvm.dbg.value(metadata i32 undef, metadata !12292, metadata !DIExpression()) #23, !dbg !14194
  call void @llvm.dbg.value(metadata i32 undef, metadata !12285, metadata !DIExpression()) #23, !dbg !14190
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata i8 poison, metadata !14184, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()), !dbg !14189
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #24, !dbg !14195
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14183, metadata !DIExpression()), !dbg !14188
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14198
  br i1 %7, label %12, label %8, !dbg !14200

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14201, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.value(metadata i32 %1, metadata !14207, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.value(metadata i8* %2, metadata !14208, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14115, metadata !DIExpression()), !dbg !14212
  call void @llvm.dbg.value(metadata i32 %1, metadata !14120, metadata !DIExpression()), !dbg !14212
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !14214
  store i32 %1, i32* %9, align 4, !dbg !14215
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !14216
  store i8* %2, i8** %10, align 4, !dbg !14217
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !14218
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #24, !dbg !14219
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #24, !dbg !14220
  call void @llvm.dbg.value(metadata i8 1, metadata !14184, metadata !DIExpression()), !dbg !14188
  br label %12, !dbg !14221

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !14192
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !14192
  call void @llvm.dbg.value(metadata i32 %14, metadata !12291, metadata !DIExpression()) #23, !dbg !14194
  call void @llvm.dbg.value(metadata i32 %14, metadata !12285, metadata !DIExpression()) #23, !dbg !14190
  call void @llvm.dbg.value(metadata i32 %14, metadata !14187, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata i8 poison, metadata !14184, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i32 undef, metadata !12306, metadata !DIExpression()) #23, !dbg !14222
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12311, metadata !DIExpression()) #23, !dbg !14222
  call void @llvm.dbg.value(metadata i32 undef, metadata !12314, metadata !DIExpression()) #23, !dbg !14224
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14226, !srcloc !12320
  call void @llvm.dbg.value(metadata i32 undef, metadata !14185, metadata !DIExpression()), !dbg !14189
  ret i1 %13, !dbg !14227
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14228 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14234, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i64 undef, metadata !14236, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14233, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14235, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.value(metadata i8** %4, metadata !14237, metadata !DIExpression()), !dbg !14239
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !14240
  call void @llvm.dbg.value(metadata i32 %6, metadata !14238, metadata !DIExpression()), !dbg !14239
  %7 = icmp eq i8** %4, null, !dbg !14241
  br i1 %7, label %12, label %8, !dbg !14243

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14244
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14246
  %11 = load i8*, i8** %10, align 4, !dbg !14246
  store i8* %11, i8** %4, align 4, !dbg !14247
  br label %12, !dbg !14248

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14249
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14250 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !14252
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !14253
  ret void, !dbg !14254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14255 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14265, metadata !DIExpression()), !dbg !14282
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14263, metadata !DIExpression()), !dbg !14282
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14264, metadata !DIExpression()), !dbg !14282
  %5 = icmp eq i64 %4, -1, !dbg !14283
  br i1 %5, label %55, label %6, !dbg !14285

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14286
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14287
  call void @llvm.dbg.value(metadata i32 0, metadata !14266, metadata !DIExpression()), !dbg !14288
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14289, metadata !DIExpression()) #23, !dbg !14296
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14298, !srcloc !14304
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14298
  call void @llvm.dbg.value(metadata i32 %9, metadata !14301, metadata !DIExpression()) #23, !dbg !14305
  call void @llvm.dbg.value(metadata i32 undef, metadata !14302, metadata !DIExpression()) #23, !dbg !14305
  call void @llvm.dbg.value(metadata i32 %9, metadata !14295, metadata !DIExpression()) #23, !dbg !14296
  call void @llvm.dbg.value(metadata i32 %9, metadata !14272, metadata !DIExpression()), !dbg !14288
  call void @llvm.dbg.value(metadata i32 undef, metadata !14266, metadata !DIExpression()), !dbg !14288
  %10 = icmp slt i64 %4, -1, !dbg !14306
  br i1 %10, label %11, label %17, !dbg !14307

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14308
  %13 = add i64 %4, %12, !dbg !14309
  %14 = sub i64 -2, %13, !dbg !14309
  call void @llvm.dbg.value(metadata i64 %14, metadata !14276, metadata !DIExpression()), !dbg !14310
  %15 = icmp sgt i64 %14, 1, !dbg !14311
  %16 = select i1 %15, i64 %14, i64 1, !dbg !14311
  br label %22, !dbg !14312

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !14313
  %19 = tail call fastcc i32 @elapsed.143() #24, !dbg !14315
  %20 = sext i32 %19 to i64, !dbg !14315
  %21 = add nsw i64 %18, %20, !dbg !14316
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !14317
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14318
  store i64 %23, i64* %24, align 8, !dbg !14319
  %25 = tail call fastcc %struct._timeout* @first() #24, !dbg !14320
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14273, metadata !DIExpression()), !dbg !14322
  %26 = icmp eq %struct._timeout* %25, null, !dbg !14323
  br i1 %26, label %42, label %27, !dbg !14323

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !14324
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14273, metadata !DIExpression()), !dbg !14322
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14328
  %31 = load i64, i64* %30, align 8, !dbg !14328
  %32 = icmp slt i64 %28, %31, !dbg !14329
  br i1 %32, label %33, label %38, !dbg !14330

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14328
  %35 = sub nsw i64 %31, %28, !dbg !14331
  store i64 %35, i64* %34, align 8, !dbg !14331
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !14333
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14334
  tail call fastcc void @sys_dlist_insert.144(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #24, !dbg !14335
  br label %44, !dbg !14336

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !14337
  store i64 %39, i64* %24, align 8, !dbg !14337
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #24, !dbg !14338
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14273, metadata !DIExpression()), !dbg !14322
  %41 = icmp eq %struct._timeout* %40, null, !dbg !14323
  br i1 %41, label %42, label %27, !dbg !14323, !llvm.loop !14339

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14341
  tail call fastcc void @sys_dlist_append.145(%struct._dnode* noundef %43) #24, !dbg !14344
  br label %44, !dbg !14345

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #24, !dbg !14346
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !14347
  br i1 %46, label %47, label %54, !dbg !14348

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #24, !dbg !14349
  call void @llvm.dbg.value(metadata i32 %48, metadata !14279, metadata !DIExpression()), !dbg !14350
  %49 = icmp ne i32 %48, 0, !dbg !14351
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !14353
  br i1 %52, label %54, label %53, !dbg !14353

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !14354
  br label %54, !dbg !14356

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !14357, metadata !DIExpression()) #23, !dbg !14363
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #23, !dbg !14363
  call void @llvm.dbg.value(metadata i32 %9, metadata !14365, metadata !DIExpression()) #23, !dbg !14368
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14370, !srcloc !14371
  call void @llvm.dbg.value(metadata i32 undef, metadata !14266, metadata !DIExpression()), !dbg !14288
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !14372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.143() unnamed_addr #1 !dbg !14373 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14376
  %2 = icmp eq i32 %1, 0, !dbg !14377
  br i1 %2, label %3, label %5, !dbg !14376

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !14378
  br label %5, !dbg !14376

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14376
  ret i32 %6, !dbg !14379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !14380 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.148() #24, !dbg !14386
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14384, metadata !DIExpression()), !dbg !14387
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14388
  ret %struct._timeout* %2, !dbg !14389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.144(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !14390 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14394, metadata !DIExpression()), !dbg !14398
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14395, metadata !DIExpression()), !dbg !14398
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14399
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14399
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14396, metadata !DIExpression()), !dbg !14398
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14400
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14401
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14402
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14403
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14404
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14405
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14406
  ret void, !dbg !14407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !14408 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14412, metadata !DIExpression()), !dbg !14414
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14415
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.146(%struct._dnode* noundef %2) #24, !dbg !14416
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14413, metadata !DIExpression()), !dbg !14414
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14417
  ret %struct._timeout* %4, !dbg !14418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.145(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14419 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14424, metadata !DIExpression()), !dbg !14427
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14425, metadata !DIExpression()), !dbg !14427
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14428
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14426, metadata !DIExpression()), !dbg !14427
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14429
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14430
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14431
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14432
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14433
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14434
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14435
  ret void, !dbg !14436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14437 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !14442
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14439, metadata !DIExpression()), !dbg !14443
  %2 = tail call fastcc i32 @elapsed.143() #24, !dbg !14444
  call void @llvm.dbg.value(metadata i32 %2, metadata !14440, metadata !DIExpression()), !dbg !14443
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14445
  br i1 %3, label %14, label %4, !dbg !14447

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14448
  %6 = load i64, i64* %5, align 8, !dbg !14448
  %7 = sext i32 %2 to i64, !dbg !14449
  %8 = sub nsw i64 %6, %7, !dbg !14450
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14451
  br i1 %9, label %14, label %10, !dbg !14452

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14453
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14453
  %13 = trunc i64 %12 to i32, !dbg !14453
  call void @llvm.dbg.value(metadata i32 %13, metadata !14441, metadata !DIExpression()), !dbg !14443
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14455
  call void @llvm.dbg.value(metadata i32 %15, metadata !14441, metadata !DIExpression()), !dbg !14443
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14456
  %17 = icmp ne i32 %16, 0, !dbg !14458
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14459
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14459
  call void @llvm.dbg.value(metadata i32 %20, metadata !14441, metadata !DIExpression()), !dbg !14443
  ret i32 %20, !dbg !14460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.146(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14461 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14465, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14466, metadata !DIExpression()), !dbg !14467
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14468
  br i1 %2, label %5, label %3, !dbg !14469

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.147(%struct._dnode* noundef nonnull %0) #24, !dbg !14470
  br label %5, !dbg !14469

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14469
  ret %struct._dnode* %6, !dbg !14471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.147(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !14472 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14474, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14475, metadata !DIExpression()), !dbg !14476
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14477
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14478
  br i1 %3, label %7, label %4, !dbg !14479

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14480
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14480
  br label %7, !dbg !14479

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14479
  ret %struct._dnode* %8, !dbg !14481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.148() unnamed_addr #4 !dbg !14482 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14486, metadata !DIExpression()), !dbg !14487
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.149() #24, !dbg !14488
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14488
  ret %struct._dnode* %3, !dbg !14489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.149() unnamed_addr #4 !dbg !14490 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14494, metadata !DIExpression()), !dbg !14495
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !14496
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !14497
  ret i1 %2, !dbg !14498
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14499 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14503, metadata !DIExpression()), !dbg !14508
  call void @llvm.dbg.value(metadata i32 -22, metadata !14504, metadata !DIExpression()), !dbg !14508
  call void @llvm.dbg.value(metadata i32 0, metadata !14505, metadata !DIExpression()), !dbg !14509
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14289, metadata !DIExpression()) #23, !dbg !14510
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14512, !srcloc !14304
  call void @llvm.dbg.value(metadata i32 undef, metadata !14301, metadata !DIExpression()) #23, !dbg !14514
  call void @llvm.dbg.value(metadata i32 undef, metadata !14302, metadata !DIExpression()) #23, !dbg !14514
  call void @llvm.dbg.value(metadata i32 undef, metadata !14295, metadata !DIExpression()) #23, !dbg !14510
  call void @llvm.dbg.value(metadata i32 undef, metadata !14507, metadata !DIExpression()), !dbg !14509
  call void @llvm.dbg.value(metadata i32 -22, metadata !14504, metadata !DIExpression()), !dbg !14508
  call void @llvm.dbg.value(metadata i32 undef, metadata !14505, metadata !DIExpression()), !dbg !14509
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !14504, metadata !DIExpression()), !dbg !14508
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.152(%struct._dnode* noundef %3) #24, !dbg !14515
  br i1 %4, label %5, label %6, !dbg !14519

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !14520
  call void @llvm.dbg.value(metadata i32 0, metadata !14504, metadata !DIExpression()), !dbg !14508
  br label %6, !dbg !14522

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !14508
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14512
  call void @llvm.dbg.value(metadata i32 %8, metadata !14301, metadata !DIExpression()) #23, !dbg !14514
  call void @llvm.dbg.value(metadata i32 %8, metadata !14295, metadata !DIExpression()) #23, !dbg !14510
  call void @llvm.dbg.value(metadata i32 %8, metadata !14507, metadata !DIExpression()), !dbg !14509
  call void @llvm.dbg.value(metadata i32 %7, metadata !14504, metadata !DIExpression()), !dbg !14508
  call void @llvm.dbg.value(metadata i32 undef, metadata !14357, metadata !DIExpression()) #23, !dbg !14523
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #23, !dbg !14523
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #23, !dbg !14525
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !14527, !srcloc !14371
  call void @llvm.dbg.value(metadata i32 undef, metadata !14505, metadata !DIExpression()), !dbg !14509
  ret i32 %7, !dbg !14528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.152(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !14529 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14535, metadata !DIExpression()), !dbg !14536
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14537
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14537
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14538
  ret i1 %4, !dbg !14539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !14540 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14542, metadata !DIExpression()), !dbg !14543
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !14544
  %3 = icmp eq %struct._timeout* %2, null, !dbg !14546
  br i1 %3, label %10, label %4, !dbg !14547

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14548
  %6 = load i64, i64* %5, align 8, !dbg !14548
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !14550
  %8 = load i64, i64* %7, align 8, !dbg !14551
  %9 = add nsw i64 %8, %6, !dbg !14551
  store i64 %9, i64* %7, align 8, !dbg !14551
  br label %10, !dbg !14552

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14553
  tail call fastcc void @sys_dlist_remove.153(%struct._dnode* noundef %11) #24, !dbg !14554
  ret void, !dbg !14555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.153(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !14556 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14560, metadata !DIExpression()), !dbg !14563
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14564
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14564
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14561, metadata !DIExpression()), !dbg !14563
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14565
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14565
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14562, metadata !DIExpression()), !dbg !14563
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14566
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14567
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14568
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14569
  tail call fastcc void @sys_dnode_init.154(%struct._dnode* noundef %0) #24, !dbg !14570
  ret void, !dbg !14571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.154(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !14572 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14574, metadata !DIExpression()), !dbg !14575
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14576
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14577
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14578
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14579
  ret void, !dbg !14580
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14581 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14587, metadata !DIExpression()), !dbg !14592
  call void @llvm.dbg.value(metadata i64 0, metadata !14588, metadata !DIExpression()), !dbg !14592
  call void @llvm.dbg.value(metadata i32 0, metadata !14589, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14289, metadata !DIExpression()) #23, !dbg !14594
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14596, !srcloc !14304
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14596
  call void @llvm.dbg.value(metadata i32 %3, metadata !14301, metadata !DIExpression()) #23, !dbg !14598
  call void @llvm.dbg.value(metadata i32 undef, metadata !14302, metadata !DIExpression()) #23, !dbg !14598
  call void @llvm.dbg.value(metadata i32 %3, metadata !14295, metadata !DIExpression()) #23, !dbg !14594
  call void @llvm.dbg.value(metadata i32 %3, metadata !14591, metadata !DIExpression()), !dbg !14593
  call void @llvm.dbg.value(metadata i64 0, metadata !14588, metadata !DIExpression()), !dbg !14592
  call void @llvm.dbg.value(metadata i32 undef, metadata !14589, metadata !DIExpression()), !dbg !14593
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !14599
  call void @llvm.dbg.value(metadata i64 %4, metadata !14588, metadata !DIExpression()), !dbg !14592
  call void @llvm.dbg.value(metadata i32 %3, metadata !14357, metadata !DIExpression()) #23, !dbg !14602
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #23, !dbg !14602
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #23, !dbg !14604
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14606, !srcloc !14371
  call void @llvm.dbg.value(metadata i32 undef, metadata !14589, metadata !DIExpression()), !dbg !14593
  ret i64 %4, !dbg !14607
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !14608 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14610, metadata !DIExpression()), !dbg !14614
  call void @llvm.dbg.value(metadata i64 0, metadata !14611, metadata !DIExpression()), !dbg !14614
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.155(%struct._timeout* noundef %0) #24, !dbg !14615
  br i1 %2, label %21, label %3, !dbg !14617

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !14618
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !14612, metadata !DIExpression()), !dbg !14619
  call void @llvm.dbg.value(metadata i64 0, metadata !14611, metadata !DIExpression()), !dbg !14614
  %5 = icmp eq %struct._timeout* %4, null, !dbg !14620
  br i1 %5, label %16, label %6, !dbg !14622

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !14612, metadata !DIExpression()), !dbg !14619
  call void @llvm.dbg.value(metadata i64 %8, metadata !14611, metadata !DIExpression()), !dbg !14614
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !14623
  %10 = load i64, i64* %9, align 8, !dbg !14623
  %11 = add nsw i64 %10, %8, !dbg !14625
  call void @llvm.dbg.value(metadata i64 %11, metadata !14611, metadata !DIExpression()), !dbg !14614
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !14626
  br i1 %12, label %16, label %13, !dbg !14628

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !14629
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !14612, metadata !DIExpression()), !dbg !14619
  call void @llvm.dbg.value(metadata i64 %11, metadata !14611, metadata !DIExpression()), !dbg !14614
  %15 = icmp eq %struct._timeout* %14, null, !dbg !14620
  br i1 %15, label %16, label %6, !dbg !14622, !llvm.loop !14630

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !14614
  call void @llvm.dbg.value(metadata i64 %17, metadata !14611, metadata !DIExpression()), !dbg !14614
  %18 = tail call fastcc i32 @elapsed.143() #24, !dbg !14632
  %19 = sext i32 %18 to i64, !dbg !14632
  %20 = sub nsw i64 %17, %19, !dbg !14633
  br label %21, !dbg !14634

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !14614
  ret i64 %22, !dbg !14635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.155(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !14636 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14640, metadata !DIExpression()), !dbg !14641
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14642
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.152(%struct._dnode* noundef %2) #24, !dbg !14643
  %4 = xor i1 %3, true, !dbg !14644
  ret i1 %4, !dbg !14645
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14646 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14648, metadata !DIExpression()), !dbg !14653
  call void @llvm.dbg.value(metadata i64 0, metadata !14649, metadata !DIExpression()), !dbg !14653
  call void @llvm.dbg.value(metadata i32 0, metadata !14650, metadata !DIExpression()), !dbg !14654
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14289, metadata !DIExpression()) #23, !dbg !14655
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14657, !srcloc !14304
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14657
  call void @llvm.dbg.value(metadata i32 %3, metadata !14301, metadata !DIExpression()) #23, !dbg !14659
  call void @llvm.dbg.value(metadata i32 undef, metadata !14302, metadata !DIExpression()) #23, !dbg !14659
  call void @llvm.dbg.value(metadata i32 %3, metadata !14295, metadata !DIExpression()) #23, !dbg !14655
  call void @llvm.dbg.value(metadata i32 %3, metadata !14652, metadata !DIExpression()), !dbg !14654
  call void @llvm.dbg.value(metadata i64 0, metadata !14649, metadata !DIExpression()), !dbg !14653
  call void @llvm.dbg.value(metadata i32 undef, metadata !14650, metadata !DIExpression()), !dbg !14654
  %4 = load i64, i64* @curr_tick, align 8, !dbg !14660
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !14663
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !14649, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14653
  call void @llvm.dbg.value(metadata i32 %3, metadata !14357, metadata !DIExpression()) #23, !dbg !14664
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #23, !dbg !14664
  call void @llvm.dbg.value(metadata i32 %3, metadata !14365, metadata !DIExpression()) #23, !dbg !14666
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14668, !srcloc !14371
  call void @llvm.dbg.value(metadata i32 undef, metadata !14650, metadata !DIExpression()), !dbg !14654
  %6 = add i64 %5, %4, !dbg !14669
  ret i64 %6, !dbg !14670
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !14671 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !14673, metadata !DIExpression()), !dbg !14677
  call void @llvm.dbg.value(metadata i32 0, metadata !14674, metadata !DIExpression()), !dbg !14678
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14289, metadata !DIExpression()) #23, !dbg !14679
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14681, !srcloc !14304
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14681
  call void @llvm.dbg.value(metadata i32 %2, metadata !14301, metadata !DIExpression()) #23, !dbg !14683
  call void @llvm.dbg.value(metadata i32 undef, metadata !14302, metadata !DIExpression()) #23, !dbg !14683
  call void @llvm.dbg.value(metadata i32 %2, metadata !14295, metadata !DIExpression()) #23, !dbg !14679
  call void @llvm.dbg.value(metadata i32 %2, metadata !14676, metadata !DIExpression()), !dbg !14678
  call void @llvm.dbg.value(metadata i32 -1, metadata !14673, metadata !DIExpression()), !dbg !14677
  call void @llvm.dbg.value(metadata i32 undef, metadata !14674, metadata !DIExpression()), !dbg !14678
  %3 = tail call fastcc i32 @next_timeout() #24, !dbg !14684
  call void @llvm.dbg.value(metadata i32 %3, metadata !14673, metadata !DIExpression()), !dbg !14677
  call void @llvm.dbg.value(metadata i32 %2, metadata !14357, metadata !DIExpression()) #23, !dbg !14687
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #23, !dbg !14687
  call void @llvm.dbg.value(metadata i32 %2, metadata !14365, metadata !DIExpression()) #23, !dbg !14689
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14691, !srcloc !14371
  call void @llvm.dbg.value(metadata i32 undef, metadata !14674, metadata !DIExpression()), !dbg !14678
  ret i32 %3, !dbg !14692
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14693 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14695, metadata !DIExpression()), !dbg !14705
  call void @llvm.dbg.value(metadata i1 %1, metadata !14696, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14705
  call void @llvm.dbg.value(metadata i32 0, metadata !14697, metadata !DIExpression()), !dbg !14706
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14289, metadata !DIExpression()) #23, !dbg !14707
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14709, !srcloc !14304
  call void @llvm.dbg.value(metadata i32 undef, metadata !14301, metadata !DIExpression()) #23, !dbg !14711
  call void @llvm.dbg.value(metadata i32 undef, metadata !14302, metadata !DIExpression()) #23, !dbg !14711
  call void @llvm.dbg.value(metadata i32 undef, metadata !14295, metadata !DIExpression()) #23, !dbg !14707
  call void @llvm.dbg.value(metadata i32 undef, metadata !14699, metadata !DIExpression()), !dbg !14706
  call void @llvm.dbg.value(metadata i32 undef, metadata !14697, metadata !DIExpression()), !dbg !14706
  %4 = tail call fastcc i32 @next_timeout() #24, !dbg !14712
  call void @llvm.dbg.value(metadata i32 %4, metadata !14700, metadata !DIExpression()), !dbg !14713
  call void @llvm.dbg.value(metadata i1 undef, metadata !14703, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14713
  %5 = icmp slt i32 %4, 2, !dbg !14714
  call void @llvm.dbg.value(metadata i1 %5, metadata !14704, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14713
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !14715
  call void @llvm.dbg.value(metadata i1 %6, metadata !14703, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14713
  br i1 %7, label %11, label %8, !dbg !14715

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !14717
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !14717
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !14719
  br label %11, !dbg !14720

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14709
  call void @llvm.dbg.value(metadata i32 %12, metadata !14301, metadata !DIExpression()) #23, !dbg !14711
  call void @llvm.dbg.value(metadata i32 %12, metadata !14295, metadata !DIExpression()) #23, !dbg !14707
  call void @llvm.dbg.value(metadata i32 %12, metadata !14699, metadata !DIExpression()), !dbg !14706
  call void @llvm.dbg.value(metadata i32 undef, metadata !14357, metadata !DIExpression()) #23, !dbg !14721
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #23, !dbg !14721
  call void @llvm.dbg.value(metadata i32 undef, metadata !14365, metadata !DIExpression()) #23, !dbg !14723
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14725, !srcloc !14371
  call void @llvm.dbg.value(metadata i32 1, metadata !14697, metadata !DIExpression()), !dbg !14706
  call void @llvm.dbg.value(metadata i32 undef, metadata !14697, metadata !DIExpression()), !dbg !14706
  ret void, !dbg !14726
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14731, metadata !DIExpression()), !dbg !14736
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !14737
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14289, metadata !DIExpression()) #23, !dbg !14738
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14740, !srcloc !14304
  call void @llvm.dbg.value(metadata i32 undef, metadata !14301, metadata !DIExpression()) #23, !dbg !14742
  call void @llvm.dbg.value(metadata i32 undef, metadata !14302, metadata !DIExpression()) #23, !dbg !14742
  call void @llvm.dbg.value(metadata i32 undef, metadata !14295, metadata !DIExpression()) #23, !dbg !14738
  call void @llvm.dbg.value(metadata i32 undef, metadata !14732, metadata !DIExpression()), !dbg !14736
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14736
  call void @llvm.dbg.value(metadata i32 undef, metadata !14732, metadata !DIExpression()), !dbg !14736
  %3 = tail call fastcc %struct._timeout* @first() #24, !dbg !14743
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14744
  br i1 %4, label %28, label %5, !dbg !14745

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14746
  %10 = load i64, i64* %9, align 8, !dbg !14746
  %11 = sext i32 %8 to i64, !dbg !14747
  %12 = icmp sgt i64 %10, %11, !dbg !14748
  br i1 %12, label %26, label %13, !dbg !14749

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14736
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14733, metadata !DIExpression()), !dbg !14750
  %15 = trunc i64 %10 to i32, !dbg !14751
  call void @llvm.dbg.value(metadata i32 %15, metadata !14735, metadata !DIExpression()), !dbg !14750
  %16 = sext i32 %15 to i64, !dbg !14752
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14753
  %18 = add i64 %17, %16, !dbg !14753
  store i64 %18, i64* @curr_tick, align 8, !dbg !14753
  store i64 0, i64* %9, align 8, !dbg !14754
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #24, !dbg !14755
  call void @llvm.dbg.value(metadata i32 %14, metadata !14357, metadata !DIExpression()) #23, !dbg !14756
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #23, !dbg !14756
  call void @llvm.dbg.value(metadata i32 %14, metadata !14365, metadata !DIExpression()) #23, !dbg !14758
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14760, !srcloc !14371
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14761
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14761
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !14762
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14289, metadata !DIExpression()) #23, !dbg !14763
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14765, !srcloc !14304
  call void @llvm.dbg.value(metadata i32 undef, metadata !14301, metadata !DIExpression()) #23, !dbg !14767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14302, metadata !DIExpression()) #23, !dbg !14767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14295, metadata !DIExpression()) #23, !dbg !14763
  call void @llvm.dbg.value(metadata i32 undef, metadata !14732, metadata !DIExpression()), !dbg !14736
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14768
  %23 = sub nsw i32 %22, %15, !dbg !14768
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14736
  call void @llvm.dbg.value(metadata i32 undef, metadata !14732, metadata !DIExpression()), !dbg !14736
  %24 = tail call fastcc %struct._timeout* @first() #24, !dbg !14743
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14744
  br i1 %25, label %28, label %5, !dbg !14745, !llvm.loop !14769

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14771
  store i64 %27, i64* %9, align 8, !dbg !14771
  br label %32, !dbg !14774

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14736
  %31 = sext i32 %30 to i64, !dbg !14775
  br label %32, !dbg !14775

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14775
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14736
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14776
  %37 = add i64 %36, %33, !dbg !14776
  store i64 %37, i64* @curr_tick, align 8, !dbg !14776
  store i32 0, i32* @announce_remaining, align 4, !dbg !14777
  %38 = tail call fastcc i32 @next_timeout() #24, !dbg !14778
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !14779
  call void @llvm.dbg.value(metadata i32 %35, metadata !14357, metadata !DIExpression()) #23, !dbg !14780
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #23, !dbg !14780
  call void @llvm.dbg.value(metadata i32 %35, metadata !14365, metadata !DIExpression()) #23, !dbg !14782
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14784, !srcloc !14371
  ret void, !dbg !14785
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14786 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14790, metadata !DIExpression()), !dbg !14794
  call void @llvm.dbg.value(metadata i32 0, metadata !14791, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14289, metadata !DIExpression()) #23, !dbg !14796
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14798, !srcloc !14304
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14798
  call void @llvm.dbg.value(metadata i32 %2, metadata !14301, metadata !DIExpression()) #23, !dbg !14800
  call void @llvm.dbg.value(metadata i32 undef, metadata !14302, metadata !DIExpression()) #23, !dbg !14800
  call void @llvm.dbg.value(metadata i32 %2, metadata !14295, metadata !DIExpression()) #23, !dbg !14796
  call void @llvm.dbg.value(metadata i32 %2, metadata !14793, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i64 0, metadata !14790, metadata !DIExpression()), !dbg !14794
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()), !dbg !14795
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14801
  %4 = tail call fastcc i32 @elapsed.143() #24, !dbg !14804
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14790, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14794
  call void @llvm.dbg.value(metadata i32 %2, metadata !14357, metadata !DIExpression()) #23, !dbg !14805
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14362, metadata !DIExpression()) #23, !dbg !14805
  call void @llvm.dbg.value(metadata i32 %2, metadata !14365, metadata !DIExpression()) #23, !dbg !14807
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14809, !srcloc !14371
  call void @llvm.dbg.value(metadata i32 undef, metadata !14791, metadata !DIExpression()), !dbg !14795
  %5 = sext i32 %4 to i64, !dbg !14804
  %6 = add i64 %3, %5, !dbg !14810
  ret i64 %6, !dbg !14811
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14812 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !14813
  %2 = trunc i64 %1 to i32, !dbg !14814
  ret i32 %2, !dbg !14815
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14816 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !14817
  ret i64 %1, !dbg !14818
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14821, metadata !DIExpression()), !dbg !14828
  %2 = icmp eq i32 %0, 0, !dbg !14829
  br i1 %2, label %10, label %3, !dbg !14831

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !14832
  call void @llvm.dbg.value(metadata i32 %4, metadata !14822, metadata !DIExpression()), !dbg !14828
  %5 = mul i32 %0, 84, !dbg !14833
  call void @llvm.dbg.value(metadata i32 %5, metadata !14823, metadata !DIExpression()), !dbg !14828
  br label %6, !dbg !14834

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !14835
  call void @llvm.dbg.value(metadata i32 %7, metadata !14824, metadata !DIExpression()), !dbg !14836
  %8 = sub i32 %7, %4, !dbg !14837
  %9 = icmp ult i32 %8, %5, !dbg !14839
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14840
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14841 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !14842
  ret i32 %1, !dbg !14843
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14844 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !14846
  ret i32 %1, !dbg !14847
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14848 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14852, metadata !DIExpression()), !dbg !14854
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14855

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !14856
  br label %14, !dbg !14860

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14853, metadata !DIExpression()), !dbg !14854
  %6 = icmp slt i64 %2, -1, !dbg !14861
  br i1 %6, label %7, label %9, !dbg !14864

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14865
  br label %14, !dbg !14866

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !14868
  %11 = icmp ugt i64 %2, 1, !dbg !14869
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14869
  %13 = add nsw i64 %10, %12, !dbg !14870
  br label %14, !dbg !14871

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14872
  ret i64 %15, !dbg !14873
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14874 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.164, i32 0, i32 0)) #25, !dbg !14876
  ret void, !dbg !14877
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!624, !2, !2254, !2256, !27, !2346, !2348, !2386, !111, !168, !2388, !2399, !2445, !2447, !2475, !2503, !2546, !2618, !2663, !197, !351, !2691, !387, !397, !422, !662, !2696, !801, !867, !1173, !1452, !2737, !1567, !1657, !2739, !2802, !2869, !1711, !2872, !1718, !2082, !2890, !2102, !2892, !2217, !2895}
!llvm.ident = !{!2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897}
!llvm.module.flags = !{!2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !111, file: !129, line: 56, type: !130, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !128, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 407, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 398, size: 224, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !117, file: !116, line: 400, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !117, file: !116, line: 401, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !117, file: !116, line: 402, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !117, file: !116, line: 403, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 404, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !117, file: !116, line: 405, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !117, file: !116, line: 406, baseType: !120, size: 32, offset: 192)
!128 = !{!109}
!129 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !133)
!132 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!133 = !{!134, !165}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !131, file: !132, line: 60, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DISubroutineType(types: !137)
!137 = !{!103, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !142)
!141 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!142 = !{!143, !147, !148, !149, !158, !159}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !140, file: !141, line: 380, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!146 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !140, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !140, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !140, file: !141, line: 386, baseType: !150, size: 32, offset: 96)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !152)
!152 = !{!153, !156}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !151, file: !141, line: 359, baseType: !154, size: 8)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !155)
!155 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !151, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!157 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !140, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !140, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !141, line: 43, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !164)
!164 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !131, file: !132, line: 65, baseType: !138, size: 32, offset: 32)
!166 = !DIGlobalVariableExpression(var: !167, expr: !DIExpression())
!167 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !168, file: !171, line: 71, type: !172, isLocal: true, isDefinition: true, align: 32)
!168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !170, splitDebugInlining: false, nameTableKind: None)
!169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!170 = !{!166}
!171 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !174)
!174 = !{!175, !194}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !173, file: !132, line: 60, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DISubroutineType(types: !178)
!178 = !{!103, !179}
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !182)
!182 = !{!183, !184, !185, !186, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !141, line: 380, baseType: !144, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !181, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !181, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !181, file: !141, line: 386, baseType: !187, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !189)
!189 = !{!190, !191}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !188, file: !141, line: 359, baseType: !154, size: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !188, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !181, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !173, file: !132, line: 65, baseType: !179, size: 32, offset: 32)
!195 = !DIGlobalVariableExpression(var: !196, expr: !DIExpression())
!196 = distinct !DIGlobalVariable(name: "static_regions", scope: !197, file: !206, line: 62, type: !347, isLocal: true, isDefinition: true)
!197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !199, globals: !202, splitDebugInlining: false, nameTableKind: None)
!198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!199 = !{!200, !103, !121, !102}
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !201, line: 214, baseType: !32)
!201 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!202 = !{!203, !195}
!203 = !DIGlobalVariableExpression(var: !204, expr: !DIExpression())
!204 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !205, file: !206, line: 198, type: !333, isLocal: true, isDefinition: true)
!205 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !206, file: !206, line: 175, type: !207, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !328)
!206 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!207 = !DISubroutineType(types: !208)
!208 = !{null, !209}
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !282, !295, !296, !297, !298, !304, !323}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !210, file: !211, line: 247, baseType: !214, size: 384)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !215)
!215 = !{!216, !244, !252, !253, !254, !267, !268, !269}
!216 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 60, baseType: !217, size: 64)
!217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 60, size: 64, elements: !218)
!218 = !{!219, !235}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !217, file: !211, line: 61, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !222)
!221 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !223)
!223 = !{!224, !230}
!224 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 38, baseType: !225, size: 32)
!225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 38, size: 32, elements: !226)
!226 = !{!227, !229}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !225, file: !221, line: 39, baseType: !228, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !225, file: !221, line: 40, baseType: !228, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, scope: !222, file: !221, line: 42, baseType: !231, size: 32, offset: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !222, file: !221, line: 42, size: 32, elements: !232)
!232 = !{!233, !234}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !231, file: !221, line: 43, baseType: !228, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !231, file: !221, line: 44, baseType: !228, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !217, file: !211, line: 62, baseType: !236, size: 64)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !238)
!237 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!238 = !{!239}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !236, file: !237, line: 50, baseType: !240, size: 64)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 64, elements: !242)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!242 = !{!243}
!243 = !DISubrange(count: 2)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !214, file: !211, line: 68, baseType: !245, size: 32, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !249)
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !248, file: !247, line: 232, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !222)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !214, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !214, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!254 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !211, line: 90, baseType: !255, size: 16, offset: 112)
!255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !214, file: !211, line: 90, size: 16, elements: !256)
!256 = !{!257, !264}
!257 = !DIDerivedType(tag: DW_TAG_member, scope: !255, file: !211, line: 91, baseType: !258, size: 16)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !211, line: 91, size: 16, elements: !259)
!259 = !{!260, !263}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !258, file: !211, line: 96, baseType: !261, size: 8)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !262)
!262 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !258, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !255, file: !211, line: 100, baseType: !265, size: 16)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !266)
!266 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !214, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !214, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !214, file: !211, line: 131, baseType: !270, size: 192, offset: 192)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !271)
!271 = !{!272, !273, !279}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !270, file: !247, line: 245, baseType: !220, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !270, file: !247, line: 246, baseType: !274, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DISubroutineType(types: !277)
!277 = !{null, !278}
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !270, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !281)
!281 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !210, file: !211, line: 250, baseType: !283, size: 288, offset: 384)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !285)
!284 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!285 = !{!286, !287, !288, !289, !290, !291, !292, !293, !294}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !283, file: !284, line: 26, baseType: !121, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !283, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !283, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !283, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !283, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !283, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !283, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !283, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !283, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !210, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !210, file: !211, line: 256, baseType: !246, size: 64, offset: 704)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !210, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !210, file: !211, line: 300, baseType: !299, size: 96, offset: 800)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !300)
!300 = !{!301, !302, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !299, file: !211, line: 153, baseType: !22, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !299, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !299, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !210, file: !211, line: 325, baseType: !305, size: 32, offset: 896)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !308)
!307 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!308 = !{!309, !318, !319}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !306, file: !307, line: 5074, baseType: !310, size: 96)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !312)
!311 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!312 = !{!313, !316, !317}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !310, file: !311, line: 57, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!315 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !311, line: 57, flags: DIFlagFwdDecl)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !310, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !310, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !306, file: !307, line: 5075, baseType: !246, size: 64, offset: 96)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !306, file: !307, line: 5076, baseType: !320, offset: 160)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !{}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !210, file: !211, line: 343, baseType: !324, size: 64, offset: 928)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !324, file: !284, line: 63, baseType: !121, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !324, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!328 = !{!329, !330, !331, !332}
!329 = !DILocalVariable(name: "thread", arg: 1, scope: !205, file: !206, line: 175, type: !209)
!330 = !DILocalVariable(name: "region_num", scope: !205, file: !206, line: 200, type: !154)
!331 = !DILocalVariable(name: "guard_start", scope: !205, file: !206, line: 265, type: !22)
!332 = !DILocalVariable(name: "guard_size", scope: !205, file: !206, line: 266, type: !200)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !334, size: 96, elements: !345)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !336)
!335 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !334, file: !335, line: 53, baseType: !22, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !334, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !334, file: !335, line: 55, baseType: !340, size: 32, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !342)
!341 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !343)
!343 = !{!344}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !342, file: !341, line: 150, baseType: !121, size: 32)
!345 = !{!346}
!346 = !DISubrange(count: 1)
!347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 96, elements: !345)
!348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !351, file: !384, line: 39, type: !154, isLocal: true, isDefinition: true)
!351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !352, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !353, globals: !383, splitDebugInlining: false, nameTableKind: None)
!352 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!353 = !{!354, !102, !103, !371, !154}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !356, line: 1226, baseType: !357)
!356 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 1213, size: 352, elements: !358)
!358 = !{!359, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !357, file: !356, line: 1215, baseType: !360, size: 32)
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !357, file: !356, line: 1216, baseType: !120, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !357, file: !356, line: 1217, baseType: !120, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !357, file: !356, line: 1218, baseType: !120, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !357, file: !356, line: 1219, baseType: !120, size: 32, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !357, file: !356, line: 1220, baseType: !120, size: 32, offset: 160)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !357, file: !356, line: 1221, baseType: !120, size: 32, offset: 192)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !357, file: !356, line: 1222, baseType: !120, size: 32, offset: 224)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !357, file: !356, line: 1223, baseType: !120, size: 32, offset: 256)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !357, file: !356, line: 1224, baseType: !120, size: 32, offset: 288)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !357, file: !356, line: 1225, baseType: !120, size: 32, offset: 320)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !375)
!374 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !{!376, !377, !378}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !373, file: !374, line: 29, baseType: !121, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !373, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !373, file: !374, line: 37, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !380, file: !341, line: 143, baseType: !121, size: 32)
!383 = !{!349}
!384 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !387, file: !394, line: 21, type: !106, isLocal: true, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !393, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!389 = !{!390, !103, !102}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !392, line: 22, baseType: !103)
!392 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!385}
!394 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !397, file: !402, line: 13, type: !419, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !399, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!399 = !{!400, !395}
!400 = !DIGlobalVariableExpression(var: !401, expr: !DIExpression())
!401 = distinct !DIGlobalVariable(name: "mpu_config", scope: !397, file: !402, line: 37, type: !403, isLocal: false, isDefinition: true)
!402 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !374, line: 41, size: 64, elements: !405)
!405 = !{!406, !407}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !404, file: !374, line: 43, baseType: !121, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !404, file: !374, line: 45, baseType: !408, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !374, line: 27, size: 96, elements: !411)
!411 = !{!412, !413, !414}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !410, file: !374, line: 29, baseType: !121, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !374, line: 31, baseType: !144, size: 32, offset: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !410, file: !374, line: 37, baseType: !415, size: 32, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !341, line: 146, baseType: !416)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !341, line: 141, size: 32, elements: !417)
!417 = !{!418}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !416, file: !341, line: 143, baseType: !121, size: 32)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 192, elements: !242)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !422, file: !535, line: 72, type: !619, isLocal: true, isDefinition: true)
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !424, retainedTypes: !521, globals: !532, splitDebugInlining: false, nameTableKind: None)
!423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!424 = !{!30, !425}
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 65, baseType: !103, size: 32, elements: !426)
!426 = !{!427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520}
!427 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!428 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!429 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!430 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!431 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!432 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!433 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!434 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!435 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!436 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!437 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!438 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!439 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!440 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!441 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!442 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!443 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!444 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!445 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!446 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!447 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!448 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!449 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!450 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!451 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!452 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!453 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!454 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!455 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!456 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!457 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!458 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!459 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!460 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!461 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!462 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!463 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!464 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!465 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!466 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!467 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!468 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!469 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!470 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!471 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!472 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!473 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!474 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!475 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!476 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!477 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!478 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!479 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!480 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!481 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!482 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!483 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!484 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!485 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!486 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!487 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!488 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!489 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!490 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!491 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!492 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!493 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!494 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!495 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!496 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!497 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!498 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!499 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!500 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!501 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!502 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!503 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!504 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!505 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!506 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!507 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!508 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!509 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!510 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!511 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!512 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!513 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!514 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!515 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!516 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!517 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!518 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!519 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!520 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!521 = !{!200, !103, !102, !522}
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 392, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 384, size: 192, elements: !525)
!525 = !{!526, !527, !528, !529, !530, !531}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !524, file: !116, line: 386, baseType: !120, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !524, file: !116, line: 387, baseType: !120, size: 32, offset: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !524, file: !116, line: 388, baseType: !120, size: 32, offset: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !524, file: !116, line: 389, baseType: !120, size: 32, offset: 96)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !524, file: !116, line: 390, baseType: !120, size: 32, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !524, file: !116, line: 391, baseType: !120, size: 32, offset: 160)
!532 = !{!533, !539, !555, !566, !583, !420, !585, !599, !601, !603, !605, !607, !609, !611, !613, !615, !617}
!533 = !DIGlobalVariableExpression(var: !534, expr: !DIExpression())
!534 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !422, file: !535, line: 424, type: !536, isLocal: false, isDefinition: true, align: 16)
!535 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !537)
!537 = !{!538}
!538 = !DISubrange(count: 4)
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !422, file: !535, line: 424, type: !541, isLocal: false, isDefinition: true, align: 32)
!541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !542)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !543)
!543 = !{!544, !545, !546, !547, !553, !554}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !542, file: !141, line: 380, baseType: !144, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !542, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !542, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !542, file: !141, line: 386, baseType: !548, size: 32, offset: 96)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 32)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !550)
!550 = !{!551, !552}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !549, file: !141, line: 359, baseType: !154, size: 8)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !549, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !542, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !542, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!555 = !DIGlobalVariableExpression(var: !556, expr: !DIExpression())
!556 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !422, file: !535, line: 424, type: !557, isLocal: true, isDefinition: true, align: 32)
!557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !559)
!559 = !{!560, !565}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !558, file: !132, line: 60, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{!103, !564}
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !558, file: !132, line: 65, baseType: !564, size: 32, offset: 32)
!566 = !DIGlobalVariableExpression(var: !567, expr: !DIExpression())
!567 = distinct !DIGlobalVariable(name: "exti_data", scope: !422, file: !535, line: 423, type: !568, isLocal: true, isDefinition: true)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !535, line: 107, size: 1472, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !568, file: !535, line: 109, baseType: !571, size: 1472)
!571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !572, size: 1472, elements: !581)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !535, line: 101, size: 64, elements: !573)
!573 = !{!574, !580}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !572, file: !535, line: 102, baseType: !575, size: 32)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !576, line: 63, baseType: !577)
!576 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 32)
!578 = !DISubroutineType(types: !579)
!579 = !{null, !103, !102}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !572, file: !535, line: 103, baseType: !102, size: 32, offset: 32)
!581 = !{!582}
!582 = !DISubrange(count: 23)
!583 = !DIGlobalVariableExpression(var: !584, expr: !DIExpression())
!584 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !422, file: !535, line: 424, type: !549, isLocal: true, isDefinition: true, align: 8)
!585 = !DIGlobalVariableExpression(var: !586, expr: !DIExpression())
!586 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !587, file: !535, line: 493, type: !592, isLocal: true, isDefinition: true, align: 32)
!587 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !535, file: !535, line: 460, type: !588, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !590)
!588 = !DISubroutineType(types: !589)
!589 = !{null, !564}
!590 = !{!591}
!591 = !DILocalVariable(name: "dev", arg: 1, scope: !587, file: !535, line: 460, type: !564)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !593)
!593 = !{!594, !596, !597, !598}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !592, file: !10, line: 55, baseType: !595, size: 32)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !592, file: !10, line: 57, baseType: !595, size: 32, offset: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !592, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !592, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !587, file: !535, line: 497, type: !592, isLocal: true, isDefinition: true, align: 32)
!601 = !DIGlobalVariableExpression(var: !602, expr: !DIExpression())
!602 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !587, file: !535, line: 507, type: !592, isLocal: true, isDefinition: true, align: 32)
!603 = !DIGlobalVariableExpression(var: !604, expr: !DIExpression())
!604 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !587, file: !535, line: 512, type: !592, isLocal: true, isDefinition: true, align: 32)
!605 = !DIGlobalVariableExpression(var: !606, expr: !DIExpression())
!606 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !587, file: !535, line: 516, type: !592, isLocal: true, isDefinition: true, align: 32)
!607 = !DIGlobalVariableExpression(var: !608, expr: !DIExpression())
!608 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !587, file: !535, line: 523, type: !592, isLocal: true, isDefinition: true, align: 32)
!609 = !DIGlobalVariableExpression(var: !610, expr: !DIExpression())
!610 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !587, file: !535, line: 527, type: !592, isLocal: true, isDefinition: true, align: 32)
!611 = !DIGlobalVariableExpression(var: !612, expr: !DIExpression())
!612 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !587, file: !535, line: 581, type: !592, isLocal: true, isDefinition: true, align: 32)
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !587, file: !535, line: 586, type: !592, isLocal: true, isDefinition: true, align: 32)
!615 = !DIGlobalVariableExpression(var: !616, expr: !DIExpression())
!616 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !587, file: !535, line: 591, type: !592, isLocal: true, isDefinition: true, align: 32)
!617 = !DIGlobalVariableExpression(var: !618, expr: !DIExpression())
!618 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !587, file: !535, line: 595, type: !592, isLocal: true, isDefinition: true, align: 32)
!619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 736, elements: !581)
!620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !621)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 163, baseType: !425)
!622 = !DIGlobalVariableExpression(var: !623, expr: !DIExpression())
!623 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !624, file: !629, line: 25, type: !657, isLocal: false, isDefinition: true, align: 16)
!624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !625, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !626, splitDebugInlining: false, nameTableKind: None)
!625 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!626 = !{!627, !622, !633, !635, !637, !639, !641, !643, !645, !647, !649, !651, !653, !655}
!627 = !DIGlobalVariableExpression(var: !628, expr: !DIExpression())
!628 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !624, file: !629, line: 20, type: !630, isLocal: false, isDefinition: true, align: 16)
!629 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 240, elements: !631)
!631 = !{!632}
!632 = !DISubrange(count: 15)
!633 = !DIGlobalVariableExpression(var: !634, expr: !DIExpression())
!634 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !624, file: !629, line: 32, type: !536, isLocal: false, isDefinition: true, align: 16)
!635 = !DIGlobalVariableExpression(var: !636, expr: !DIExpression())
!636 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !624, file: !629, line: 39, type: !536, isLocal: false, isDefinition: true, align: 16)
!637 = !DIGlobalVariableExpression(var: !638, expr: !DIExpression())
!638 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !624, file: !629, line: 46, type: !536, isLocal: false, isDefinition: true, align: 16)
!639 = !DIGlobalVariableExpression(var: !640, expr: !DIExpression())
!640 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !624, file: !629, line: 53, type: !536, isLocal: false, isDefinition: true, align: 16)
!641 = !DIGlobalVariableExpression(var: !642, expr: !DIExpression())
!642 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !624, file: !629, line: 60, type: !536, isLocal: false, isDefinition: true, align: 16)
!643 = !DIGlobalVariableExpression(var: !644, expr: !DIExpression())
!644 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !624, file: !629, line: 67, type: !536, isLocal: false, isDefinition: true, align: 16)
!645 = !DIGlobalVariableExpression(var: !646, expr: !DIExpression())
!646 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !624, file: !629, line: 74, type: !536, isLocal: false, isDefinition: true, align: 16)
!647 = !DIGlobalVariableExpression(var: !648, expr: !DIExpression())
!648 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !624, file: !629, line: 81, type: !536, isLocal: false, isDefinition: true, align: 16)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !624, file: !629, line: 88, type: !536, isLocal: false, isDefinition: true, align: 16)
!651 = !DIGlobalVariableExpression(var: !652, expr: !DIExpression())
!652 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !624, file: !629, line: 95, type: !536, isLocal: false, isDefinition: true, align: 16)
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !624, file: !629, line: 102, type: !536, isLocal: false, isDefinition: true, align: 16)
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !624, file: !629, line: 109, type: !536, isLocal: false, isDefinition: true, align: 16)
!657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 48, elements: !658)
!658 = !{!659}
!659 = !DISubrange(count: 3)
!660 = !DIGlobalVariableExpression(var: !661, expr: !DIExpression())
!661 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !662, file: !727, line: 398, type: !760, isLocal: true, isDefinition: true)
!662 = distinct !DICompileUnit(language: DW_LANG_C99, file: !663, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !664, retainedTypes: !677, globals: !724, splitDebugInlining: false, nameTableKind: None)
!663 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!664 = !{!665, !30, !670}
!665 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !666, line: 197, baseType: !32, size: 32, elements: !667)
!666 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!667 = !{!668, !669}
!668 = !DIEnumerator(name: "SUCCESS", value: 0)
!669 = !DIEnumerator(name: "ERROR", value: 1)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !671, line: 44, baseType: !32, size: 32, elements: !672)
!671 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!672 = !{!673, !674, !675, !676}
!673 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!674 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!675 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!676 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!677 = !{!102, !103, !121, !678, !717, !723}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !681)
!681 = !{!682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !680, file: !116, line: 552, baseType: !120, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !680, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !680, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !680, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !680, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !680, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !680, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !680, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !680, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !680, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !680, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 64, elements: !242)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !680, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !680, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !680, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !680, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !680, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !680, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !680, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !680, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !680, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !680, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !680, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !680, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !680, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !680, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !680, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !680, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !680, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !680, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !680, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !680, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !680, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !680, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !680, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 32)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !719, line: 343, size: 64, elements: !720)
!719 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!720 = !{!721, !722}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !718, file: !719, line: 344, baseType: !121, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !718, file: !719, line: 345, baseType: !121, size: 32, offset: 32)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!724 = !{!725, !731, !747, !758, !660}
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !662, file: !727, line: 752, type: !728, isLocal: false, isDefinition: true, align: 16)
!727 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 800, elements: !729)
!729 = !{!730}
!730 = !DISubrange(count: 50)
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !662, file: !727, line: 752, type: !733, isLocal: false, isDefinition: true, align: 32)
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !735)
!735 = !{!736, !737, !738, !739, !745, !746}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !734, file: !141, line: 380, baseType: !144, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !734, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !734, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !734, file: !141, line: 386, baseType: !740, size: 32, offset: 96)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 32)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !742)
!742 = !{!743, !744}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !741, file: !141, line: 359, baseType: !154, size: 8)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !741, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !734, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !734, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !662, file: !727, line: 752, type: !749, isLocal: true, isDefinition: true, align: 32)
!749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !750)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !751)
!751 = !{!752, !757}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !750, file: !132, line: 60, baseType: !753, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32)
!754 = !DISubroutineType(types: !755)
!755 = !{!103, !756}
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !750, file: !132, line: 65, baseType: !756, size: 32, offset: 32)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !662, file: !727, line: 752, type: !741, isLocal: true, isDefinition: true, align: 8)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !671, line: 100, size: 224, elements: !761)
!761 = !{!762, !768, !769, !778, !783, !788, !794}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !760, file: !671, line: 101, baseType: !763, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !671, line: 76, baseType: !764)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 32)
!765 = !DISubroutineType(types: !766)
!766 = !{!103, !756, !767}
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !671, line: 56, baseType: !102)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !760, file: !671, line: 102, baseType: !763, size: 32, offset: 32)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !760, file: !671, line: 103, baseType: !770, size: 32, offset: 64)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !671, line: 83, baseType: !771)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 32)
!772 = !DISubroutineType(types: !773)
!773 = !{!103, !756, !767, !774, !102}
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !671, line: 72, baseType: !775)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 32)
!776 = !DISubroutineType(types: !777)
!777 = !{null, !756, !767, !102}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !760, file: !671, line: 104, baseType: !779, size: 32, offset: 96)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !671, line: 79, baseType: !780)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 32)
!781 = !DISubroutineType(types: !782)
!782 = !{!103, !756, !767, !723}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !760, file: !671, line: 105, baseType: !784, size: 32, offset: 128)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !671, line: 88, baseType: !785)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!786 = !DISubroutineType(types: !787)
!787 = !{!670, !756, !767}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !760, file: !671, line: 106, baseType: !789, size: 32, offset: 160)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !671, line: 92, baseType: !790)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 32)
!791 = !DISubroutineType(types: !792)
!792 = !{!103, !756, !767, !793}
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !671, line: 64, baseType: !102)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !760, file: !671, line: 107, baseType: !795, size: 32, offset: 192)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !671, line: 96, baseType: !796)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 32)
!797 = !DISubroutineType(types: !798)
!798 = !{!103, !756, !767, !102}
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !801, file: !858, line: 603, type: !860, isLocal: true, isDefinition: true, align: 32)
!801 = distinct !DICompileUnit(language: DW_LANG_C99, file: !802, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !803, globals: !855, splitDebugInlining: false, nameTableKind: None)
!802 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!803 = !{!102, !103, !804}
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !806)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !807, line: 336, size: 160, elements: !808)
!807 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!808 = !{!809, !829, !833, !837, !850}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !806, file: !807, line: 365, baseType: !810, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!811 = !DISubroutineType(types: !812)
!812 = !{!103, !813, !828}
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 32)
!814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !815)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !816)
!816 = !{!817, !818, !819, !820, !826, !827}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !815, file: !141, line: 380, baseType: !144, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !815, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !815, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !815, file: !141, line: 386, baseType: !821, size: 32, offset: 96)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 32)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !823)
!823 = !{!824, !825}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !822, file: !141, line: 359, baseType: !154, size: 8)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !822, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !815, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !815, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !806, file: !807, line: 366, baseType: !830, size: 32, offset: 32)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 32)
!831 = !DISubroutineType(types: !832)
!832 = !{null, !813, !155}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !806, file: !807, line: 374, baseType: !834, size: 32, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 32)
!835 = !DISubroutineType(types: !836)
!836 = !{!103, !813}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !806, file: !807, line: 377, baseType: !838, size: 32, offset: 96)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 32)
!839 = !DISubroutineType(types: !840)
!840 = !{!103, !813, !841}
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !807, line: 122, size: 64, elements: !844)
!844 = !{!845, !846, !847, !848, !849}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !843, file: !807, line: 123, baseType: !121, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !843, file: !807, line: 124, baseType: !154, size: 8, offset: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !843, file: !807, line: 125, baseType: !154, size: 8, offset: 40)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !843, file: !807, line: 126, baseType: !154, size: 8, offset: 48)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !843, file: !807, line: 127, baseType: !154, size: 8, offset: 56)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !806, file: !807, line: 379, baseType: !851, size: 32, offset: 128)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 32)
!852 = !DISubroutineType(types: !853)
!853 = !{!103, !813, !854}
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 32)
!855 = !{!799, !856}
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !801, file: !858, line: 38, type: !859, isLocal: true, isDefinition: true)
!858 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !861)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !862)
!862 = !{!863, !864}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !861, file: !132, line: 60, baseType: !834, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !861, file: !132, line: 65, baseType: !813, size: 32, offset: 32)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !867, file: !1039, line: 762, type: !1148, isLocal: true, isDefinition: true)
!867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !869, retainedTypes: !887, globals: !1036, splitDebugInlining: false, nameTableKind: None)
!868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!869 = !{!30, !870, !876, !881, !670}
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !871, line: 506, baseType: !32, size: 32, elements: !872)
!871 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!872 = !{!873, !874, !875}
!873 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!874 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!875 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!876 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !871, line: 512, baseType: !32, size: 32, elements: !877)
!877 = !{!878, !879, !880}
!878 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!879 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!880 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !576, line: 43, baseType: !32, size: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!884 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!885 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!886 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!887 = !{!102, !103, !888, !958, !963, !923, !876, !870, !968, !969, !121, !983, !938, !995, !996, !997}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !871, line: 523, size: 288, elements: !891)
!891 = !{!892, !913, !919, !924, !928, !929, !930, !934, !954}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !890, file: !871, line: 524, baseType: !893, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!894 = !DISubroutineType(types: !895)
!895 = !{!103, !896, !911, !912}
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !898)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !899)
!899 = !{!900, !901, !902, !903, !909, !910}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !898, file: !141, line: 380, baseType: !144, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !898, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !898, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !898, file: !141, line: 386, baseType: !904, size: 32, offset: 96)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 32)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !906)
!906 = !{!907, !908}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !905, file: !141, line: 359, baseType: !154, size: 8)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !905, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !898, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !898, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !871, line: 237, baseType: !154)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !871, line: 257, baseType: !121)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !890, file: !871, line: 530, baseType: !914, size: 32, offset: 32)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{!103, !896, !917}
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !871, line: 229, baseType: !121)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !890, file: !871, line: 532, baseType: !920, size: 32, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 32)
!921 = !DISubroutineType(types: !922)
!922 = !{!103, !896, !923, !918}
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !871, line: 216, baseType: !121)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !890, file: !871, line: 535, baseType: !925, size: 32, offset: 96)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DISubroutineType(types: !927)
!927 = !{!103, !896, !923}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !890, file: !871, line: 537, baseType: !925, size: 32, offset: 128)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !890, file: !871, line: 539, baseType: !925, size: 32, offset: 160)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !890, file: !871, line: 541, baseType: !931, size: 32, offset: 192)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!932 = !DISubroutineType(types: !933)
!933 = !{!103, !896, !911, !870, !876}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !890, file: !871, line: 544, baseType: !935, size: 32, offset: 224)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DISubroutineType(types: !937)
!937 = !{!103, !896, !938, !157}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !871, line: 478, size: 96, elements: !940)
!940 = !{!941, !948, !953}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !939, file: !871, line: 482, baseType: !942, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !943, line: 33, baseType: !944)
!943 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !943, line: 29, size: 32, elements: !945)
!945 = !{!946}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !944, file: !943, line: 30, baseType: !947, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !939, file: !871, line: 485, baseType: !949, size: 32, offset: 32)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !871, line: 464, baseType: !950)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DISubroutineType(types: !952)
!952 = !{null, !896, !938, !923}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !939, file: !871, line: 493, baseType: !923, size: 32, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !890, file: !871, line: 547, baseType: !955, size: 32, offset: 256)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{!121, !896}
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 32)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !960)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !871, line: 428, size: 32, elements: !961)
!961 = !{!962}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !960, file: !871, line: 434, baseType: !923, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !871, line: 441, size: 32, elements: !966)
!966 = !{!967}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !965, file: !871, line: 447, baseType: !923, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 469, baseType: !971)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 458, size: 320, elements: !972)
!972 = !{!973, !974, !975, !976, !977, !978, !979, !980, !981}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !971, file: !116, line: 460, baseType: !120, size: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !971, file: !116, line: 461, baseType: !120, size: 32, offset: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !971, file: !116, line: 462, baseType: !120, size: 32, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !971, file: !116, line: 463, baseType: !120, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !971, file: !116, line: 464, baseType: !120, size: 32, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !971, file: !116, line: 465, baseType: !120, size: 32, offset: 160)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !971, file: !116, line: 466, baseType: !120, size: 32, offset: 192)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !971, file: !116, line: 467, baseType: !120, size: 32, offset: 224)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !971, file: !116, line: 468, baseType: !982, size: 64, offset: 256)
!982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !242)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 484, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 475, size: 384, elements: !986)
!986 = !{!987, !988, !989, !991, !992, !993, !994}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !985, file: !116, line: 477, baseType: !120, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !985, file: !116, line: 478, baseType: !120, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !985, file: !116, line: 479, baseType: !990, size: 128, offset: 64)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !537)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !985, file: !116, line: 480, baseType: !693, size: 64, offset: 192)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !985, file: !116, line: 481, baseType: !120, size: 32, offset: 256)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !985, file: !116, line: 482, baseType: !693, size: 64, offset: 288)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !985, file: !116, line: 483, baseType: !120, size: 32, offset: 352)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !671, line: 100, size: 224, elements: !1000)
!1000 = !{!1001, !1006, !1007, !1016, !1021, !1026, !1031}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !999, file: !671, line: 101, baseType: !1002, size: 32)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !671, line: 76, baseType: !1003)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!103, !896, !767}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !999, file: !671, line: 102, baseType: !1002, size: 32, offset: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !999, file: !671, line: 103, baseType: !1008, size: 32, offset: 64)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !671, line: 83, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!103, !896, !767, !1012, !102}
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !671, line: 72, baseType: !1013)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{null, !896, !767, !102}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !999, file: !671, line: 104, baseType: !1017, size: 32, offset: 96)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !671, line: 79, baseType: !1018)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!103, !896, !767, !723}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !999, file: !671, line: 105, baseType: !1022, size: 32, offset: 128)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !671, line: 88, baseType: !1023)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!670, !896, !767}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !999, file: !671, line: 106, baseType: !1027, size: 32, offset: 160)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !671, line: 92, baseType: !1028)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!103, !896, !767, !793}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !999, file: !671, line: 107, baseType: !1032, size: 32, offset: 192)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !671, line: 96, baseType: !1033)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 32)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!103, !896, !767, !102}
!1036 = !{!1037, !1043, !1045, !1055, !1057, !1059, !1061, !1063, !1065, !1067, !1072, !1074, !1076, !1078, !1080, !1082, !1084, !1086, !1088, !1090, !1092, !1094, !1096, !1098, !1100, !1114, !1116, !1118, !1120, !1122, !1124, !1126, !1128, !1130, !1132, !1134, !1136, !1138, !1140, !1142, !865, !1144, !1146, !1159, !1161, !1163, !1165, !1167, !1169}
!1037 = !DIGlobalVariableExpression(var: !1038, expr: !DIExpression())
!1038 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !867, file: !1039, line: 762, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1039 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 80, elements: !1041)
!1041 = !{!1042}
!1042 = !DISubrange(count: 5)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !867, file: !1039, line: 762, type: !897, isLocal: false, isDefinition: true, align: 32)
!1045 = !DIGlobalVariableExpression(var: !1046, expr: !DIExpression())
!1046 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !867, file: !1039, line: 762, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1048)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1049)
!1049 = !{!1050, !1054}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1048, file: !132, line: 60, baseType: !1051, size: 32)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!103, !896}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1048, file: !132, line: 65, baseType: !896, size: 32, offset: 32)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !867, file: !1039, line: 766, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !867, file: !1039, line: 766, type: !897, isLocal: false, isDefinition: true, align: 32)
!1059 = !DIGlobalVariableExpression(var: !1060, expr: !DIExpression())
!1060 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !867, file: !1039, line: 766, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1061 = !DIGlobalVariableExpression(var: !1062, expr: !DIExpression())
!1062 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !867, file: !1039, line: 770, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1063 = !DIGlobalVariableExpression(var: !1064, expr: !DIExpression())
!1064 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !867, file: !1039, line: 770, type: !897, isLocal: false, isDefinition: true, align: 32)
!1065 = !DIGlobalVariableExpression(var: !1066, expr: !DIExpression())
!1066 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !867, file: !1039, line: 770, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !867, file: !1039, line: 774, type: !1069, isLocal: false, isDefinition: true, align: 16)
!1069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 144, elements: !1070)
!1070 = !{!1071}
!1071 = !DISubrange(count: 9)
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !867, file: !1039, line: 774, type: !897, isLocal: false, isDefinition: true, align: 32)
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !867, file: !1039, line: 774, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !867, file: !1039, line: 778, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !867, file: !1039, line: 778, type: !897, isLocal: false, isDefinition: true, align: 32)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !867, file: !1039, line: 778, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !867, file: !1039, line: 782, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !867, file: !1039, line: 782, type: !897, isLocal: false, isDefinition: true, align: 32)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !867, file: !1039, line: 782, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !867, file: !1039, line: 786, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !867, file: !1039, line: 786, type: !897, isLocal: false, isDefinition: true, align: 32)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !867, file: !1039, line: 786, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !867, file: !1039, line: 790, type: !1040, isLocal: false, isDefinition: true, align: 16)
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !867, file: !1039, line: 790, type: !897, isLocal: false, isDefinition: true, align: 32)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !867, file: !1039, line: 790, type: !1047, isLocal: true, isDefinition: true, align: 32)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !867, file: !1039, line: 762, type: !1102, isLocal: true, isDefinition: true)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1103, line: 237, size: 128, elements: !1104)
!1103 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1104 = !{!1105, !1106, !1107}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1102, file: !1103, line: 239, baseType: !965, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1102, file: !1103, line: 241, baseType: !896, size: 32, offset: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1102, file: !1103, line: 243, baseType: !1108, size: 64, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !943, line: 40, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !943, line: 35, size: 64, elements: !1110)
!1110 = !{!1111, !1113}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1109, file: !943, line: 36, baseType: !1112, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1109, file: !943, line: 37, baseType: !1112, size: 32, offset: 32)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !867, file: !1039, line: 762, type: !905, isLocal: true, isDefinition: true, align: 8)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !867, file: !1039, line: 766, type: !1102, isLocal: true, isDefinition: true)
!1118 = !DIGlobalVariableExpression(var: !1119, expr: !DIExpression())
!1119 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !867, file: !1039, line: 766, type: !905, isLocal: true, isDefinition: true, align: 8)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !867, file: !1039, line: 770, type: !1102, isLocal: true, isDefinition: true)
!1122 = !DIGlobalVariableExpression(var: !1123, expr: !DIExpression())
!1123 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !867, file: !1039, line: 770, type: !905, isLocal: true, isDefinition: true, align: 8)
!1124 = !DIGlobalVariableExpression(var: !1125, expr: !DIExpression())
!1125 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !867, file: !1039, line: 774, type: !1102, isLocal: true, isDefinition: true)
!1126 = !DIGlobalVariableExpression(var: !1127, expr: !DIExpression())
!1127 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !867, file: !1039, line: 774, type: !905, isLocal: true, isDefinition: true, align: 8)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !867, file: !1039, line: 778, type: !1102, isLocal: true, isDefinition: true)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !867, file: !1039, line: 778, type: !905, isLocal: true, isDefinition: true, align: 8)
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !867, file: !1039, line: 782, type: !1102, isLocal: true, isDefinition: true)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !867, file: !1039, line: 782, type: !905, isLocal: true, isDefinition: true, align: 8)
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !867, file: !1039, line: 786, type: !1102, isLocal: true, isDefinition: true)
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !867, file: !1039, line: 786, type: !905, isLocal: true, isDefinition: true, align: 8)
!1140 = !DIGlobalVariableExpression(var: !1141, expr: !DIExpression())
!1141 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !867, file: !1039, line: 790, type: !1102, isLocal: true, isDefinition: true)
!1142 = !DIGlobalVariableExpression(var: !1143, expr: !DIExpression())
!1143 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !867, file: !1039, line: 790, type: !905, isLocal: true, isDefinition: true, align: 8)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !867, file: !1039, line: 656, type: !889, isLocal: true, isDefinition: true)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !867, file: !1039, line: 766, type: !1148, isLocal: true, isDefinition: true)
!1148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1149)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1103, line: 224, size: 160, elements: !1150)
!1150 = !{!1151, !1152, !1153, !1154}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1149, file: !1103, line: 226, baseType: !960, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1149, file: !1103, line: 228, baseType: !723, size: 32, offset: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1149, file: !1103, line: 230, baseType: !103, size: 32, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1149, file: !1103, line: 231, baseType: !1155, size: 64, offset: 96)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !719, line: 343, size: 64, elements: !1156)
!1156 = !{!1157, !1158}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1155, file: !719, line: 344, baseType: !121, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1155, file: !719, line: 345, baseType: !121, size: 32, offset: 32)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !867, file: !1039, line: 770, type: !1148, isLocal: true, isDefinition: true)
!1161 = !DIGlobalVariableExpression(var: !1162, expr: !DIExpression())
!1162 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !867, file: !1039, line: 774, type: !1148, isLocal: true, isDefinition: true)
!1163 = !DIGlobalVariableExpression(var: !1164, expr: !DIExpression())
!1164 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !867, file: !1039, line: 778, type: !1148, isLocal: true, isDefinition: true)
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !867, file: !1039, line: 782, type: !1148, isLocal: true, isDefinition: true)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !867, file: !1039, line: 786, type: !1148, isLocal: true, isDefinition: true)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !867, file: !1039, line: 790, type: !1148, isLocal: true, isDefinition: true)
!1171 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression())
!1172 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1173, file: !1314, line: 1914, type: !1401, isLocal: true, isDefinition: true)
!1173 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1174, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1175, retainedTypes: !1208, globals: !1311, splitDebugInlining: false, nameTableKind: None)
!1174 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!1175 = !{!30, !1176, !1183, !1190, !1197, !1203, !670}
!1176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !807, line: 47, baseType: !32, size: 32, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1182}
!1178 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1179 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1180 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1181 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1182 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !807, line: 75, baseType: !32, size: 32, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1186 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1187 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1188 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1189 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !807, line: 92, baseType: !32, size: 32, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1196}
!1192 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1193 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1194 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1195 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1196 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !807, line: 84, baseType: !32, size: 32, elements: !1198)
!1198 = !{!1199, !1200, !1201, !1202}
!1199 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1200 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1201 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1202 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !807, line: 107, baseType: !32, size: 32, elements: !1204)
!1204 = !{!1205, !1206, !1207}
!1205 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1206 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1207 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1208 = !{!102, !103, !1209, !155, !154, !1258, !121, !767, !1269, !265, !1308, !1310}
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !807, line: 336, size: 160, elements: !1212)
!1212 = !{!1213, !1232, !1236, !1240, !1253}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1211, file: !807, line: 365, baseType: !1214, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!103, !1217, !828}
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1219)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1220)
!1220 = !{!1221, !1222, !1223, !1224, !1230, !1231}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1219, file: !141, line: 380, baseType: !144, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1219, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1219, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1219, file: !141, line: 386, baseType: !1225, size: 32, offset: 96)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1227)
!1227 = !{!1228, !1229}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1226, file: !141, line: 359, baseType: !154, size: 8)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1226, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1219, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1219, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1211, file: !807, line: 366, baseType: !1233, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{null, !1217, !155}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1211, file: !807, line: 374, baseType: !1237, size: 32, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!103, !1217}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1211, file: !807, line: 377, baseType: !1241, size: 32, offset: 96)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1242 = !DISubroutineType(types: !1243)
!1243 = !{!103, !1217, !1244}
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !807, line: 122, size: 64, elements: !1247)
!1247 = !{!1248, !1249, !1250, !1251, !1252}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1246, file: !807, line: 123, baseType: !121, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1246, file: !807, line: 124, baseType: !154, size: 8, offset: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1246, file: !807, line: 125, baseType: !154, size: 8, offset: 40)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1246, file: !807, line: 126, baseType: !154, size: 8, offset: 48)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1246, file: !807, line: 127, baseType: !154, size: 8, offset: 56)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1211, file: !807, line: 379, baseType: !1254, size: 32, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!103, !1217, !1257}
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 783, baseType: !1260)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 774, size: 224, elements: !1261)
!1261 = !{!1262, !1263, !1264, !1265, !1266, !1267, !1268}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1260, file: !116, line: 776, baseType: !120, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1260, file: !116, line: 777, baseType: !120, size: 32, offset: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1260, file: !116, line: 778, baseType: !120, size: 32, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1260, file: !116, line: 779, baseType: !120, size: 32, offset: 96)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1260, file: !116, line: 780, baseType: !120, size: 32, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1260, file: !116, line: 781, baseType: !120, size: 32, offset: 160)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1260, file: !116, line: 782, baseType: !120, size: 32, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !671, line: 100, size: 224, elements: !1272)
!1272 = !{!1273, !1278, !1279, !1288, !1293, !1298, !1303}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1271, file: !671, line: 101, baseType: !1274, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !671, line: 76, baseType: !1275)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!103, !1217, !767}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1271, file: !671, line: 102, baseType: !1274, size: 32, offset: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1271, file: !671, line: 103, baseType: !1280, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !671, line: 83, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!103, !1217, !767, !1284, !102}
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !671, line: 72, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{null, !1217, !767, !102}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1271, file: !671, line: 104, baseType: !1289, size: 32, offset: 96)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !671, line: 79, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!103, !1217, !767, !723}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1271, file: !671, line: 105, baseType: !1294, size: 32, offset: 128)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !671, line: 88, baseType: !1295)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!670, !1217, !767}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1271, file: !671, line: 106, baseType: !1299, size: 32, offset: 160)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !671, line: 92, baseType: !1300)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!103, !1217, !767, !793}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1271, file: !671, line: 107, baseType: !1304, size: 32, offset: 192)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !671, line: 96, baseType: !1305)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!103, !1217, !767, !102}
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1309)
!1309 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1311 = !{!1312, !1318, !1320, !1327, !1329, !1331, !1333, !1335, !1337, !1339, !1341, !1343, !1345, !1347, !1349, !1351, !1171, !1353, !1361, !1384, !1387, !1390, !1392, !1399, !1416, !1418, !1420, !1422, !1424, !1426, !1428, !1430, !1432, !1434, !1436, !1438, !1440, !1442, !1444, !1446, !1448}
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1315, isLocal: false, isDefinition: true, align: 16)
!1314 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 128, elements: !1316)
!1316 = !{!1317}
!1317 = !DISubrange(count: 8)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1218, isLocal: false, isDefinition: true, align: 32)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1322, isLocal: true, isDefinition: true, align: 32)
!1322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1323)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1324)
!1324 = !{!1325, !1326}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1323, file: !132, line: 60, baseType: !1237, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1323, file: !132, line: 65, baseType: !1217, size: 32, offset: 32)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1315, isLocal: false, isDefinition: true, align: 16)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1218, isLocal: false, isDefinition: true, align: 32)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1322, isLocal: true, isDefinition: true, align: 32)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1315, isLocal: false, isDefinition: true, align: 16)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1218, isLocal: false, isDefinition: true, align: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1322, isLocal: true, isDefinition: true, align: 32)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1315, isLocal: false, isDefinition: true, align: 16)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1218, isLocal: false, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1322, isLocal: true, isDefinition: true, align: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1226, isLocal: true, isDefinition: true, align: 8)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1226, isLocal: true, isDefinition: true, align: 8)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1226, isLocal: true, isDefinition: true, align: 8)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1226, isLocal: true, isDefinition: true, align: 8)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1173, file: !1314, line: 1914, type: !1355, isLocal: true, isDefinition: true)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 64, elements: !345)
!1356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !719, line: 343, size: 64, elements: !1358)
!1358 = !{!1359, !1360}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1357, file: !719, line: 344, baseType: !121, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1357, file: !719, line: 345, baseType: !121, size: 32, offset: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1363, isLocal: true, isDefinition: true)
!1363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1365, line: 60, size: 64, elements: !1366)
!1365 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1366 = !{!1367, !1383}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1364, file: !1365, line: 69, baseType: !1368, size: 32)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1365, line: 50, size: 64, elements: !1371)
!1371 = !{!1372, !1381, !1382}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1370, file: !1365, line: 52, baseType: !1373, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1376, line: 37, baseType: !1377)
!1376 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1376, line: 32, size: 64, elements: !1378)
!1378 = !{!1379, !1380}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1377, file: !1376, line: 34, baseType: !121, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1377, file: !1376, line: 36, baseType: !121, size: 32, offset: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1370, file: !1365, line: 54, baseType: !154, size: 8, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1370, file: !1365, line: 56, baseType: !154, size: 8, offset: 40)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1364, file: !1365, line: 71, baseType: !154, size: 8, offset: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1369, size: 64, elements: !345)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1173, file: !1314, line: 1914, type: !1389, isLocal: true, isDefinition: true)
!1389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1374, size: 128, elements: !242)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1173, file: !1314, line: 1539, type: !1210, isLocal: true, isDefinition: true)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1173, file: !1314, line: 1914, type: !1394, isLocal: true, isDefinition: true)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1395, line: 74, size: 64, elements: !1396)
!1395 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1396 = !{!1397, !1398}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1394, file: !1395, line: 76, baseType: !121, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1394, file: !1395, line: 78, baseType: !1217, size: 32, offset: 32)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1173, file: !1314, line: 1914, type: !1401, isLocal: true, isDefinition: true)
!1401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1395, line: 22, size: 224, elements: !1403)
!1403 = !{!1404, !1405, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1402, file: !1395, line: 24, baseType: !1258, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1402, file: !1395, line: 26, baseType: !1406, size: 32, offset: 32)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1402, file: !1395, line: 28, baseType: !200, size: 32, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1402, file: !1395, line: 30, baseType: !157, size: 8, offset: 96)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1402, file: !1395, line: 32, baseType: !103, size: 32, offset: 128)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1402, file: !1395, line: 34, baseType: !157, size: 8, offset: 160)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1402, file: !1395, line: 36, baseType: !157, size: 8, offset: 168)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1402, file: !1395, line: 38, baseType: !157, size: 8, offset: 176)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1402, file: !1395, line: 40, baseType: !157, size: 8, offset: 184)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1402, file: !1395, line: 41, baseType: !1415, size: 32, offset: 192)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1173, file: !1314, line: 1914, type: !1355, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1363, isLocal: true, isDefinition: true)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1173, file: !1314, line: 1914, type: !1389, isLocal: true, isDefinition: true)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1173, file: !1314, line: 1914, type: !1394, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1173, file: !1314, line: 1914, type: !1401, isLocal: true, isDefinition: true)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1173, file: !1314, line: 1914, type: !1355, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1363, isLocal: true, isDefinition: true)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1173, file: !1314, line: 1914, type: !1389, isLocal: true, isDefinition: true)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1173, file: !1314, line: 1914, type: !1394, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1173, file: !1314, line: 1914, type: !1401, isLocal: true, isDefinition: true)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1173, file: !1314, line: 1914, type: !1355, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1363, isLocal: true, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1173, file: !1314, line: 1914, type: !1389, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1173, file: !1314, line: 1914, type: !1394, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1452, file: !1532, line: 65, type: !120, isLocal: true, isDefinition: true)
!1452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1454, retainedTypes: !1455, globals: !1529, splitDebugInlining: false, nameTableKind: None)
!1453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!1454 = !{!425}
!1455 = !{!1456, !1458, !595, !154, !121, !1466, !1497}
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1457, line: 46, baseType: !280)
!1457 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1460, file: !356, line: 766, baseType: !120, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1460, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1460, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1460, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1469)
!1469 = !{!1470, !1472, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1487, !1492, !1496}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1468, file: !356, line: 413, baseType: !1471, size: 256)
!1471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1316)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1468, file: !356, line: 414, baseType: !1473, size: 768, offset: 256)
!1473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1474)
!1474 = !{!1475}
!1475 = !DISubrange(count: 24)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1468, file: !356, line: 415, baseType: !1471, size: 256, offset: 1024)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1468, file: !356, line: 416, baseType: !1473, size: 768, offset: 1280)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1468, file: !356, line: 417, baseType: !1471, size: 256, offset: 2048)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1468, file: !356, line: 418, baseType: !1473, size: 768, offset: 2304)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1468, file: !356, line: 419, baseType: !1471, size: 256, offset: 3072)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1468, file: !356, line: 420, baseType: !1473, size: 768, offset: 3328)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1468, file: !356, line: 421, baseType: !1471, size: 256, offset: 4096)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1468, file: !356, line: 422, baseType: !1484, size: 1792, offset: 4352)
!1484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1485)
!1485 = !{!1486}
!1486 = !DISubrange(count: 56)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1468, file: !356, line: 423, baseType: !1488, size: 1920, offset: 6144)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1489, size: 1920, elements: !1490)
!1489 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1490 = !{!1491}
!1491 = !DISubrange(count: 240)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1468, file: !356, line: 424, baseType: !1493, size: 20608, offset: 8064)
!1493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1494)
!1494 = !{!1495}
!1495 = !DISubrange(count: 644)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1468, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1499)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1500)
!1500 = !{!1501, !1502, !1503, !1504, !1505, !1506, !1507, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1520, !1521, !1522, !1524, !1526, !1528}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1499, file: !356, line: 447, baseType: !360, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1499, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1499, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1499, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1499, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1499, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1499, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!1508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1489, size: 96, elements: !1509)
!1509 = !{!1510}
!1510 = !DISubrange(count: 12)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1499, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1499, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1499, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1499, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1499, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1499, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1499, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1499, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!1519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 64, elements: !242)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1499, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1499, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1499, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 128, elements: !537)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1499, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!1525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !360, size: 160, elements: !1041)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1499, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!1527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1041)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1499, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1529 = !{!1530, !1556, !1559, !1561, !1563, !1450}
!1530 = !DIGlobalVariableExpression(var: !1531, expr: !DIExpression())
!1531 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1452, file: !1532, line: 285, type: !1533, isLocal: true, isDefinition: true, align: 32)
!1532 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1534)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1535)
!1535 = !{!1536, !1555}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1534, file: !132, line: 60, baseType: !1537, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!103, !1540}
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1547, !1553, !1554}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1542, file: !141, line: 380, baseType: !144, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1542, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1542, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1542, file: !141, line: 386, baseType: !1548, size: 32, offset: 96)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1550)
!1550 = !{!1551, !1552}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1549, file: !141, line: 359, baseType: !154, size: 8)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1549, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1542, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1542, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1534, file: !132, line: 65, baseType: !1540, size: 32, offset: 32)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "lock", scope: !1452, file: !1532, line: 34, type: !1558, isLocal: true, isDefinition: true)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "last_load", scope: !1452, file: !1532, line: 36, type: !121, isLocal: true, isDefinition: true)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1452, file: !1532, line: 48, type: !121, isLocal: true, isDefinition: true)
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1452, file: !1532, line: 54, type: !121, isLocal: true, isDefinition: true)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1567, file: !1649, line: 22, type: !1651, isLocal: true, isDefinition: true)
!1567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1569, retainedTypes: !1570, globals: !1646, splitDebugInlining: false, nameTableKind: None)
!1568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!1569 = !{!870, !876}
!1570 = !{!1571, !1635, !1640, !923, !876, !870, !1645, !102}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !871, line: 523, size: 288, elements: !1574)
!1574 = !{!1575, !1594, !1598, !1602, !1606, !1607, !1608, !1612, !1631}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1573, file: !871, line: 524, baseType: !1576, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 32)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!103, !1579, !911, !912}
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 32)
!1580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1592, !1593}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1581, file: !141, line: 380, baseType: !144, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1581, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1581, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1581, file: !141, line: 386, baseType: !1587, size: 32, offset: 96)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1589)
!1589 = !{!1590, !1591}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1588, file: !141, line: 359, baseType: !154, size: 8)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1588, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1581, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1581, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1573, file: !871, line: 530, baseType: !1595, size: 32, offset: 32)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{!103, !1579, !917}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1573, file: !871, line: 532, baseType: !1599, size: 32, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!103, !1579, !923, !918}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1573, file: !871, line: 535, baseType: !1603, size: 32, offset: 96)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!103, !1579, !923}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1573, file: !871, line: 537, baseType: !1603, size: 32, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1573, file: !871, line: 539, baseType: !1603, size: 32, offset: 160)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1573, file: !871, line: 541, baseType: !1609, size: 32, offset: 192)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!103, !1579, !911, !870, !876}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1573, file: !871, line: 544, baseType: !1613, size: 32, offset: 224)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!103, !1579, !1616, !157}
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !871, line: 478, size: 96, elements: !1618)
!1618 = !{!1619, !1625, !1630}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1617, file: !871, line: 482, baseType: !1620, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !943, line: 33, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !943, line: 29, size: 32, elements: !1622)
!1622 = !{!1623}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1621, file: !943, line: 30, baseType: !1624, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1617, file: !871, line: 485, baseType: !1626, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !871, line: 464, baseType: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{null, !1579, !1616, !923}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1617, file: !871, line: 493, baseType: !923, size: 32, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1573, file: !871, line: 547, baseType: !1632, size: 32, offset: 256)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 32)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!121, !1579}
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !871, line: 428, size: 32, elements: !1638)
!1638 = !{!1639}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1637, file: !871, line: 434, baseType: !923, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !871, line: 441, size: 32, elements: !1643)
!1643 = !{!1644}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1642, file: !871, line: 447, baseType: !923, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1646 = !{!1647, !1565}
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1648 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1567, file: !1649, line: 37, type: !1650, isLocal: true, isDefinition: true)
!1649 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1652, size: 352, elements: !1653)
!1652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1579)
!1653 = !{!1654}
!1654 = !DISubrange(count: 11)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1657, file: !1701, line: 139, type: !1708, isLocal: false, isDefinition: true)
!1657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1659, globals: !1698, splitDebugInlining: false, nameTableKind: None)
!1658 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!1659 = !{!1660}
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1662, file: !116, line: 552, baseType: !120, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1662, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1662, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1662, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1662, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1662, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1662, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1662, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1662, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1662, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1662, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1662, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1662, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1662, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1662, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1662, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1662, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1662, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1662, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1662, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1662, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1662, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1662, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1662, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1662, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1662, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1662, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1662, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1662, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1662, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1662, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1662, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1662, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1662, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!1698 = !{!1699, !1702, !1655}
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1657, file: !1701, line: 137, type: !121, isLocal: false, isDefinition: true)
!1701 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1657, file: !1701, line: 138, type: !1704, isLocal: false, isDefinition: true)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1705, size: 128, elements: !1706)
!1705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!1706 = !{!1707}
!1707 = !DISubrange(count: 16)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1705, size: 64, elements: !1316)
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1711, file: !1714, line: 23, type: !1715, isLocal: false, isDefinition: true)
!1711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1713, splitDebugInlining: false, nameTableKind: None)
!1712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!1713 = !{!1709}
!1714 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1718, file: !1722, line: 86, type: !1972, isLocal: false, isDefinition: true, align: 512)
!1718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1720, retainedTypes: !1729, globals: !1803, splitDebugInlining: false, nameTableKind: None)
!1719 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!1720 = !{!1721, !30, !425}
!1721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1722, line: 63, baseType: !32, size: 32, elements: !1723)
!1722 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1723 = !{!1724, !1725, !1726, !1727, !1728}
!1724 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1725 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1726 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1727 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1728 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1729 = !{!200, !102, !103, !1730, !995, !121, !1761, !595, !154, !1786}
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1733, line: 51, size: 64, elements: !1734)
!1733 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1734 = !{!1735, !1756}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1732, file: !1733, line: 52, baseType: !1736, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1733, line: 38, baseType: !1737)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{!103, !1740, !1755, !265}
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747, !1753, !1754}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1742, file: !141, line: 380, baseType: !144, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1742, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1742, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1742, file: !141, line: 386, baseType: !1748, size: 32, offset: 96)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !1750)
!1750 = !{!1751, !1752}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1749, file: !141, line: 359, baseType: !154, size: 8)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1749, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1742, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1742, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1732, file: !1733, line: 53, baseType: !1757, size: 32, offset: 32)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1733, line: 47, baseType: !1758)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 32)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!103, !1740, !1755, !265, !121}
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1763, file: !356, line: 447, baseType: !360, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1763, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1763, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1763, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1763, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1763, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1763, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1763, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1763, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1763, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1763, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1763, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1763, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1763, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1763, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1763, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1763, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1763, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1763, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1763, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1763, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !1789)
!1789 = !{!1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1788, file: !356, line: 413, baseType: !1471, size: 256)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1788, file: !356, line: 414, baseType: !1473, size: 768, offset: 256)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1788, file: !356, line: 415, baseType: !1471, size: 256, offset: 1024)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1788, file: !356, line: 416, baseType: !1473, size: 768, offset: 1280)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1788, file: !356, line: 417, baseType: !1471, size: 256, offset: 2048)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1788, file: !356, line: 418, baseType: !1473, size: 768, offset: 2304)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1788, file: !356, line: 419, baseType: !1471, size: 256, offset: 3072)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1788, file: !356, line: 420, baseType: !1473, size: 768, offset: 3328)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1788, file: !356, line: 421, baseType: !1471, size: 256, offset: 4096)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1788, file: !356, line: 422, baseType: !1484, size: 1792, offset: 4352)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1788, file: !356, line: 423, baseType: !1488, size: 1920, offset: 6144)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1788, file: !356, line: 424, baseType: !1493, size: 20608, offset: 8064)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1788, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!1803 = !{!1804, !1926, !1935, !1937, !1716, !1940, !1942, !1947}
!1804 = !DIGlobalVariableExpression(var: !1805, expr: !DIExpression())
!1805 = distinct !DIGlobalVariable(name: "_kernel", scope: !1718, file: !1722, line: 40, type: !1806, isLocal: false, isDefinition: true)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !247, line: 158, size: 288, elements: !1807)
!1807 = !{!1808, !1921}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1806, file: !247, line: 159, baseType: !1809, size: 192)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1810, size: 192, elements: !345)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !247, line: 100, size: 192, elements: !1811)
!1811 = !{!1812, !1813, !1814, !1915, !1916, !1917, !1918}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1810, file: !247, line: 102, baseType: !121, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1810, file: !247, line: 105, baseType: !995, size: 32, offset: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1810, file: !247, line: 108, baseType: !1815, size: 32, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1817)
!1817 = !{!1818, !1876, !1888, !1889, !1890, !1891, !1897, !1910}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1816, file: !211, line: 247, baseType: !1819, size: 384)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1820)
!1820 = !{!1821, !1845, !1852, !1853, !1854, !1863, !1864, !1865}
!1821 = !DIDerivedType(tag: DW_TAG_member, scope: !1819, file: !211, line: 60, baseType: !1822, size: 64)
!1822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1819, file: !211, line: 60, size: 64, elements: !1823)
!1823 = !{!1824, !1839}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1822, file: !211, line: 61, baseType: !1825, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1826)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1827)
!1827 = !{!1828, !1834}
!1828 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !221, line: 38, baseType: !1829, size: 32)
!1829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !221, line: 38, size: 32, elements: !1830)
!1830 = !{!1831, !1833}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1829, file: !221, line: 39, baseType: !1832, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1829, file: !221, line: 40, baseType: !1832, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !221, line: 42, baseType: !1835, size: 32, offset: 32)
!1835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !221, line: 42, size: 32, elements: !1836)
!1836 = !{!1837, !1838}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1835, file: !221, line: 43, baseType: !1832, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1835, file: !221, line: 44, baseType: !1832, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1822, file: !211, line: 62, baseType: !1840, size: 64)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !1841)
!1841 = !{!1842}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1840, file: !237, line: 50, baseType: !1843, size: 64)
!1843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1844, size: 64, elements: !242)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1819, file: !211, line: 68, baseType: !1846, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !1848)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !1849)
!1849 = !{!1850}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1848, file: !247, line: 232, baseType: !1851, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1826)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1819, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1819, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!1854 = !DIDerivedType(tag: DW_TAG_member, scope: !1819, file: !211, line: 90, baseType: !1855, size: 16, offset: 112)
!1855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1819, file: !211, line: 90, size: 16, elements: !1856)
!1856 = !{!1857, !1862}
!1857 = !DIDerivedType(tag: DW_TAG_member, scope: !1855, file: !211, line: 91, baseType: !1858, size: 16)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1855, file: !211, line: 91, size: 16, elements: !1859)
!1859 = !{!1860, !1861}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1858, file: !211, line: 96, baseType: !261, size: 8)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1858, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1855, file: !211, line: 100, baseType: !265, size: 16)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1819, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1819, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1819, file: !211, line: 131, baseType: !1866, size: 192, offset: 192)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !1867)
!1867 = !{!1868, !1869, !1875}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1866, file: !247, line: 245, baseType: !1825, size: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1866, file: !247, line: 246, baseType: !1870, size: 32, offset: 64)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !1871)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{null, !1874}
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1866, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1816, file: !211, line: 250, baseType: !1877, size: 288, offset: 384)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !1878)
!1878 = !{!1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1877, file: !284, line: 26, baseType: !121, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1877, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1877, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1877, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1877, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1877, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1877, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1877, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1877, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1816, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1816, file: !211, line: 256, baseType: !1847, size: 64, offset: 704)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1816, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1816, file: !211, line: 300, baseType: !1892, size: 96, offset: 800)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !1893)
!1893 = !{!1894, !1895, !1896}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1892, file: !211, line: 153, baseType: !22, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1892, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1892, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1816, file: !211, line: 325, baseType: !1898, size: 32, offset: 896)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !1900)
!1900 = !{!1901, !1907, !1908}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1899, file: !307, line: 5074, baseType: !1902, size: 96)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !1903)
!1903 = !{!1904, !1905, !1906}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1902, file: !311, line: 57, baseType: !314, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1902, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1902, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1899, file: !307, line: 5075, baseType: !1847, size: 64, offset: 96)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1899, file: !307, line: 5076, baseType: !1909, offset: 160)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1816, file: !211, line: 343, baseType: !1911, size: 64, offset: 928)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !1912)
!1912 = !{!1913, !1914}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1911, file: !284, line: 63, baseType: !121, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1911, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1810, file: !247, line: 111, baseType: !1815, size: 32, offset: 96)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1810, file: !247, line: 124, baseType: !103, size: 32, offset: 128)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1810, file: !247, line: 127, baseType: !154, size: 8, offset: 160)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1810, file: !247, line: 153, baseType: !1919, offset: 168)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1920, line: 33, elements: !322)
!1920 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1806, file: !247, line: 170, baseType: !1922, size: 96, offset: 192)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !1923)
!1923 = !{!1924, !1925}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1922, file: !247, line: 86, baseType: !1815, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1922, file: !247, line: 90, baseType: !1851, size: 64, offset: 32)
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1718, file: !1722, line: 43, type: !1928, isLocal: false, isDefinition: true, align: 512)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 8704, elements: !1933)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1930, line: 47, size: 8, elements: !1931)
!1930 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1931 = !{!1932}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1929, file: !1930, line: 48, baseType: !146, size: 8)
!1933 = !{!1934}
!1934 = !DISubrange(count: 1088)
!1935 = !DIGlobalVariableExpression(var: !1936, expr: !DIExpression())
!1936 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1718, file: !1722, line: 44, type: !1816, isLocal: false, isDefinition: true)
!1937 = !DIGlobalVariableExpression(var: !1938, expr: !DIExpression())
!1938 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1718, file: !1722, line: 48, type: !1939, isLocal: false, isDefinition: true)
!1939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1816, size: 1024, elements: !345)
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1718, file: !1722, line: 217, type: !157, isLocal: false, isDefinition: true)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1718, file: !1722, line: 50, type: !1944, isLocal: true, isDefinition: true, align: 512)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 3072, elements: !1945)
!1945 = !{!346, !1946}
!1946 = !DISubrange(count: 384)
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression())
!1948 = distinct !DIGlobalVariable(name: "levels", scope: !1949, file: !1722, line: 232, type: !1969, isLocal: true, isDefinition: true)
!1949 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1722, file: !1722, line: 230, type: !1950, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !1952)
!1950 = !DISubroutineType(types: !1951)
!1951 = !{null, !1721}
!1952 = !{!1953, !1954, !1964, !1968}
!1953 = !DILocalVariable(name: "level", arg: 1, scope: !1949, file: !1722, line: 230, type: !1721)
!1954 = !DILocalVariable(name: "entry", scope: !1949, file: !1722, line: 244, type: !1955)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1957)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !132, line: 51, size: 64, elements: !1958)
!1958 = !{!1959, !1963}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1957, file: !132, line: 60, baseType: !1960, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!103, !1740}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1957, file: !132, line: 65, baseType: !1740, size: 32, offset: 32)
!1964 = !DILocalVariable(name: "dev", scope: !1965, file: !1722, line: 247, type: !1740)
!1965 = distinct !DILexicalBlock(scope: !1966, file: !1722, line: 246, column: 64)
!1966 = distinct !DILexicalBlock(scope: !1967, file: !1722, line: 246, column: 2)
!1967 = distinct !DILexicalBlock(scope: !1949, file: !1722, line: 246, column: 2)
!1968 = !DILocalVariable(name: "rc", scope: !1965, file: !1722, line: 248, type: !103)
!1969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 192, elements: !1970)
!1970 = !{!1971}
!1971 = !DISubrange(count: 6)
!1972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 16896, elements: !1973)
!1973 = !{!346, !1974}
!1974 = !DISubrange(count: 2112)
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "states_str", scope: !1977, file: !1978, line: 276, type: !2099, isLocal: true, isDefinition: true)
!1977 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1978, file: !1978, line: 271, type: !1979, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !2090)
!1978 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!144, !1981, !995, !200}
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !1982)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !1984)
!1984 = !{!1985, !2043, !2055, !2056, !2057, !2058, !2064, !2077}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1983, file: !211, line: 247, baseType: !1986, size: 384)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !1987)
!1987 = !{!1988, !2012, !2019, !2020, !2021, !2030, !2031, !2032}
!1988 = !DIDerivedType(tag: DW_TAG_member, scope: !1986, file: !211, line: 60, baseType: !1989, size: 64)
!1989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1986, file: !211, line: 60, size: 64, elements: !1990)
!1990 = !{!1991, !2006}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1989, file: !211, line: 61, baseType: !1992, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !1993)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !1994)
!1994 = !{!1995, !2001}
!1995 = !DIDerivedType(tag: DW_TAG_member, scope: !1993, file: !221, line: 38, baseType: !1996, size: 32)
!1996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1993, file: !221, line: 38, size: 32, elements: !1997)
!1997 = !{!1998, !2000}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1996, file: !221, line: 39, baseType: !1999, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1996, file: !221, line: 40, baseType: !1999, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, scope: !1993, file: !221, line: 42, baseType: !2002, size: 32, offset: 32)
!2002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1993, file: !221, line: 42, size: 32, elements: !2003)
!2003 = !{!2004, !2005}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2002, file: !221, line: 43, baseType: !1999, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2002, file: !221, line: 44, baseType: !1999, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1989, file: !211, line: 62, baseType: !2007, size: 64)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !2008)
!2008 = !{!2009}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2007, file: !237, line: 50, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2011, size: 64, elements: !242)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1986, file: !211, line: 68, baseType: !2013, size: 32, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !2015)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !2016)
!2016 = !{!2017}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2015, file: !247, line: 232, baseType: !2018, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !1993)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1986, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1986, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!2021 = !DIDerivedType(tag: DW_TAG_member, scope: !1986, file: !211, line: 90, baseType: !2022, size: 16, offset: 112)
!2022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1986, file: !211, line: 90, size: 16, elements: !2023)
!2023 = !{!2024, !2029}
!2024 = !DIDerivedType(tag: DW_TAG_member, scope: !2022, file: !211, line: 91, baseType: !2025, size: 16)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2022, file: !211, line: 91, size: 16, elements: !2026)
!2026 = !{!2027, !2028}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2025, file: !211, line: 96, baseType: !261, size: 8)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2025, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2022, file: !211, line: 100, baseType: !265, size: 16)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1986, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1986, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1986, file: !211, line: 131, baseType: !2033, size: 192, offset: 192)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2034)
!2034 = !{!2035, !2036, !2042}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2033, file: !247, line: 245, baseType: !1992, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2033, file: !247, line: 246, baseType: !2037, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2038)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!2039 = !DISubroutineType(types: !2040)
!2040 = !{null, !2041}
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2033, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1983, file: !211, line: 250, baseType: !2044, size: 288, offset: 384)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !2045)
!2045 = !{!2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2044, file: !284, line: 26, baseType: !121, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2044, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2044, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2044, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2044, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2044, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2044, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2044, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2044, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1983, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1983, file: !211, line: 256, baseType: !2014, size: 64, offset: 704)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1983, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1983, file: !211, line: 300, baseType: !2059, size: 96, offset: 800)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !2060)
!2060 = !{!2061, !2062, !2063}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2059, file: !211, line: 153, baseType: !22, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2059, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2059, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1983, file: !211, line: 325, baseType: !2065, size: 32, offset: 896)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !2067)
!2067 = !{!2068, !2074, !2075}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2066, file: !307, line: 5074, baseType: !2069, size: 96)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !2070)
!2070 = !{!2071, !2072, !2073}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2069, file: !311, line: 57, baseType: !314, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2069, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2069, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2066, file: !307, line: 5075, baseType: !2014, size: 64, offset: 96)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2066, file: !307, line: 5076, baseType: !2076, offset: 160)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1983, file: !211, line: 343, baseType: !2078, size: 64, offset: 928)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !2079)
!2079 = !{!2080, !2081}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2078, file: !284, line: 63, baseType: !121, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2078, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!2082 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2083, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2084, globals: !2086, splitDebugInlining: false, nameTableKind: None)
!2083 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2084 = !{!102, !144, !1456, !154, !103, !2085, !24, !200, !995, !22, !121, !1308}
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!2086 = !{!1975, !2087}
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "states_sz", scope: !1977, file: !1978, line: 279, type: !2089, isLocal: true, isDefinition: true)
!2089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1650, size: 256, elements: !1316)
!2090 = !{!2091, !2092, !2093, !2094, !2095, !2096, !2097}
!2091 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1977, file: !1978, line: 271, type: !1981)
!2092 = !DILocalVariable(name: "buf", arg: 2, scope: !1977, file: !1978, line: 271, type: !995)
!2093 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1977, file: !1978, line: 271, type: !200)
!2094 = !DILocalVariable(name: "off", scope: !1977, file: !1978, line: 273, type: !200)
!2095 = !DILocalVariable(name: "bit", scope: !1977, file: !1978, line: 274, type: !154)
!2096 = !DILocalVariable(name: "thread_state", scope: !1977, file: !1978, line: 275, type: !154)
!2097 = !DILocalVariable(name: "index", scope: !2098, file: !1978, line: 293, type: !154)
!2098 = distinct !DILexicalBlock(scope: !1977, file: !1978, line: 293, column: 2)
!2099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 256, elements: !1316)
!2100 = !DIGlobalVariableExpression(var: !2101, expr: !DIExpression())
!2101 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2102, file: !2210, line: 56, type: !2199, isLocal: false, isDefinition: true)
!2102 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2103, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2104, globals: !2207, splitDebugInlining: false, nameTableKind: None)
!2103 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2104 = !{!2105, !995, !102, !2205, !1755, !1456, !595, !103, !121, !1308, !2206}
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 32)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !2107)
!2107 = !{!2108, !2166, !2178, !2179, !2180, !2181, !2187, !2200}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2106, file: !211, line: 247, baseType: !2109, size: 384)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !2110)
!2110 = !{!2111, !2135, !2142, !2143, !2144, !2153, !2154, !2155}
!2111 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !211, line: 60, baseType: !2112, size: 64)
!2112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2109, file: !211, line: 60, size: 64, elements: !2113)
!2113 = !{!2114, !2129}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2112, file: !211, line: 61, baseType: !2115, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2116)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2117)
!2117 = !{!2118, !2124}
!2118 = !DIDerivedType(tag: DW_TAG_member, scope: !2116, file: !221, line: 38, baseType: !2119, size: 32)
!2119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2116, file: !221, line: 38, size: 32, elements: !2120)
!2120 = !{!2121, !2123}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2119, file: !221, line: 39, baseType: !2122, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2119, file: !221, line: 40, baseType: !2122, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, scope: !2116, file: !221, line: 42, baseType: !2125, size: 32, offset: 32)
!2125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2116, file: !221, line: 42, size: 32, elements: !2126)
!2126 = !{!2127, !2128}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2125, file: !221, line: 43, baseType: !2122, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2125, file: !221, line: 44, baseType: !2122, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2112, file: !211, line: 62, baseType: !2130, size: 64)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !2131)
!2131 = !{!2132}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2130, file: !237, line: 50, baseType: !2133, size: 64)
!2133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2134, size: 64, elements: !242)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2109, file: !211, line: 68, baseType: !2136, size: 32, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !2138)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !2139)
!2139 = !{!2140}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2138, file: !247, line: 232, baseType: !2141, size: 64)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2116)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2109, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2109, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!2144 = !DIDerivedType(tag: DW_TAG_member, scope: !2109, file: !211, line: 90, baseType: !2145, size: 16, offset: 112)
!2145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2109, file: !211, line: 90, size: 16, elements: !2146)
!2146 = !{!2147, !2152}
!2147 = !DIDerivedType(tag: DW_TAG_member, scope: !2145, file: !211, line: 91, baseType: !2148, size: 16)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2145, file: !211, line: 91, size: 16, elements: !2149)
!2149 = !{!2150, !2151}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2148, file: !211, line: 96, baseType: !261, size: 8)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2148, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2145, file: !211, line: 100, baseType: !265, size: 16)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2109, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2109, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2109, file: !211, line: 131, baseType: !2156, size: 192, offset: 192)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2157)
!2157 = !{!2158, !2159, !2165}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2156, file: !247, line: 245, baseType: !2115, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2156, file: !247, line: 246, baseType: !2160, size: 32, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2161)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 32)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{null, !2164}
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2156, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2106, file: !211, line: 250, baseType: !2167, size: 288, offset: 384)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !2168)
!2168 = !{!2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2167, file: !284, line: 26, baseType: !121, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2167, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2167, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2167, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2167, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2167, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2167, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2167, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2167, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2106, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2106, file: !211, line: 256, baseType: !2137, size: 64, offset: 704)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2106, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2106, file: !211, line: 300, baseType: !2182, size: 96, offset: 800)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !2183)
!2183 = !{!2184, !2185, !2186}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2182, file: !211, line: 153, baseType: !22, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2182, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2182, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2106, file: !211, line: 325, baseType: !2188, size: 32, offset: 896)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 32)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !2190)
!2190 = !{!2191, !2197, !2198}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2189, file: !307, line: 5074, baseType: !2192, size: 96)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !2193)
!2193 = !{!2194, !2195, !2196}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2192, file: !311, line: 57, baseType: !314, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2192, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2192, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2189, file: !307, line: 5075, baseType: !2137, size: 64, offset: 96)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2189, file: !307, line: 5076, baseType: !2199, offset: 160)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2106, file: !211, line: 343, baseType: !2201, size: 64, offset: 928)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !2202)
!2202 = !{!2203, !2204}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2201, file: !284, line: 63, baseType: !121, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2201, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 32)
!2207 = !{!2100, !2208, !2211, !2213}
!2208 = !DIGlobalVariableExpression(var: !2209, expr: !DIExpression())
!2209 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2102, file: !2210, line: 404, type: !103, isLocal: true, isDefinition: true)
!2210 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2211 = !DIGlobalVariableExpression(var: !2212, expr: !DIExpression())
!2212 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2102, file: !2210, line: 405, type: !103, isLocal: true, isDefinition: true)
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "pending_current", scope: !2102, file: !2210, line: 425, type: !2105, isLocal: true, isDefinition: true)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2217, file: !2247, line: 15, type: !1308, isLocal: true, isDefinition: true)
!2217 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2218, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2219, globals: !2244, splitDebugInlining: false, nameTableKind: None)
!2218 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2219 = !{!1456, !102, !595, !121, !1308, !103, !2220, !995, !280}
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !2222)
!2222 = !{!2223, !2238, !2243}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2221, file: !247, line: 245, baseType: !2224, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !2225)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !2226)
!2226 = !{!2227, !2233}
!2227 = !DIDerivedType(tag: DW_TAG_member, scope: !2225, file: !221, line: 38, baseType: !2228, size: 32)
!2228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2225, file: !221, line: 38, size: 32, elements: !2229)
!2229 = !{!2230, !2232}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2228, file: !221, line: 39, baseType: !2231, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2228, file: !221, line: 40, baseType: !2231, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2225, file: !221, line: 42, baseType: !2234, size: 32, offset: 32)
!2234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2225, file: !221, line: 42, size: 32, elements: !2235)
!2235 = !{!2236, !2237}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2234, file: !221, line: 43, baseType: !2231, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2234, file: !221, line: 44, baseType: !2231, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2221, file: !247, line: 246, baseType: !2239, size: 32, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !2240)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2241 = !DISubroutineType(types: !2242)
!2242 = !{null, !2220}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2221, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!2244 = !{!2215, !2245, !2249, !2251}
!2245 = !DIGlobalVariableExpression(var: !2246, expr: !DIExpression())
!2246 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2217, file: !2247, line: 19, type: !2248, isLocal: true, isDefinition: true)
!2247 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!2249 = !DIGlobalVariableExpression(var: !2250, expr: !DIExpression())
!2250 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2217, file: !2247, line: 25, type: !103, isLocal: true, isDefinition: true)
!2251 = !DIGlobalVariableExpression(var: !2252, expr: !DIExpression())
!2252 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2217, file: !2247, line: 17, type: !2253, isLocal: true, isDefinition: true)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !2225)
!2254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2255, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2255 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2257, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2258, retainedTypes: !2259, globals: !2335, splitDebugInlining: false, nameTableKind: None)
!2257 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/blinky/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2258 = !{!30, !870, !876}
!2259 = !{!102, !103, !2260, !2324, !2329, !923, !876, !870, !2334, !1456, !121, !1308}
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2262)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !871, line: 523, size: 288, elements: !2263)
!2263 = !{!2264, !2283, !2287, !2291, !2295, !2296, !2297, !2301, !2320}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2262, file: !871, line: 524, baseType: !2265, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!2266 = !DISubroutineType(types: !2267)
!2267 = !{!103, !2268, !911, !912}
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2270)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !2271)
!2271 = !{!2272, !2273, !2274, !2275, !2281, !2282}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2270, file: !141, line: 380, baseType: !144, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2270, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2270, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2270, file: !141, line: 386, baseType: !2276, size: 32, offset: 96)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 32)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !2278)
!2278 = !{!2279, !2280}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2277, file: !141, line: 359, baseType: !154, size: 8)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2277, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2270, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2270, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2262, file: !871, line: 530, baseType: !2284, size: 32, offset: 32)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!103, !2268, !917}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2262, file: !871, line: 532, baseType: !2288, size: 32, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 32)
!2289 = !DISubroutineType(types: !2290)
!2290 = !{!103, !2268, !923, !918}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2262, file: !871, line: 535, baseType: !2292, size: 32, offset: 96)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 32)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!103, !2268, !923}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2262, file: !871, line: 537, baseType: !2292, size: 32, offset: 128)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2262, file: !871, line: 539, baseType: !2292, size: 32, offset: 160)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2262, file: !871, line: 541, baseType: !2298, size: 32, offset: 192)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 32)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{!103, !2268, !911, !870, !876}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2262, file: !871, line: 544, baseType: !2302, size: 32, offset: 224)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!2303 = !DISubroutineType(types: !2304)
!2304 = !{!103, !2268, !2305, !157}
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 32)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !871, line: 478, size: 96, elements: !2307)
!2307 = !{!2308, !2314, !2319}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2306, file: !871, line: 482, baseType: !2309, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !943, line: 33, baseType: !2310)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !943, line: 29, size: 32, elements: !2311)
!2311 = !{!2312}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2310, file: !943, line: 30, baseType: !2313, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2306, file: !871, line: 485, baseType: !2315, size: 32, offset: 32)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !871, line: 464, baseType: !2316)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 32)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{null, !2268, !2305, !923}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2306, file: !871, line: 493, baseType: !923, size: 32, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2262, file: !871, line: 547, baseType: !2321, size: 32, offset: 256)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 32)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{!121, !2268}
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2326)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !871, line: 428, size: 32, elements: !2327)
!2327 = !{!2328}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2326, file: !871, line: 434, baseType: !923, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2331)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !871, line: 441, size: 32, elements: !2332)
!2332 = !{!2333}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2331, file: !871, line: 447, baseType: !923, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 32)
!2335 = !{!2336}
!2336 = !DIGlobalVariableExpression(var: !2337, expr: !DIExpression())
!2337 = distinct !DIGlobalVariable(name: "led", scope: !2256, file: !2338, line: 20, type: !2339, isLocal: true, isDefinition: true)
!2338 = !DIFile(filename: "zephyr/samples/basic/blinky/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2340)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !871, line: 271, size: 64, elements: !2341)
!2341 = !{!2342, !2343, !2344}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2340, file: !871, line: 273, baseType: !2268, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !2340, file: !871, line: 275, baseType: !911, size: 8, offset: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !2340, file: !871, line: 277, baseType: !2345, size: 16, offset: 48)
!2345 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !871, line: 249, baseType: !265)
!2346 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2347, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2347 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2348 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2349, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2350, retainedTypes: !2370, splitDebugInlining: false, nameTableKind: None)
!2349 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2350 = !{!2351, !2359}
!2351 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2352, line: 69, baseType: !32, size: 32, elements: !2353)
!2352 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2353 = !{!2354, !2355, !2356, !2357, !2358}
!2354 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2355 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2356 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2357 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2358 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2359 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2352, line: 56, baseType: !32, size: 32, elements: !2360)
!2360 = !{!2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369}
!2361 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2362 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2363 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2364 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2365 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2366 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2367 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2368 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2369 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2370 = !{!103, !2351, !2359, !2371, !262, !164, !2373, !2374, !155, !266, !144, !200, !102, !22, !32, !2376, !2377, !2378, !2379, !2380, !281, !2381, !2372, !2382, !2383, !2384, !2385}
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2352, line: 31, baseType: !2372)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !281)
!2373 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !201, line: 329, baseType: !32)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2352, line: 32, baseType: !2375)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1309)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!2379 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !201, line: 145, baseType: !103)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!2386 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2387, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2387 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2388 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2389, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2390, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2389 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2390 = !{!2391, !30}
!2391 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2392, line: 27, baseType: !32, size: 32, elements: !2393)
!2392 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2393 = !{!2394, !2395, !2396, !2397, !2398}
!2394 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2395 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2396 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2397 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2398 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2399 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2400, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2401, retainedTypes: !2402, splitDebugInlining: false, nameTableKind: None)
!2400 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2401 = !{!425, !2391, !30}
!2402 = !{!621, !2403, !102, !103, !595, !121, !154, !2420}
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2405)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2406)
!2406 = !{!2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2405, file: !356, line: 413, baseType: !1471, size: 256)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2405, file: !356, line: 414, baseType: !1473, size: 768, offset: 256)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2405, file: !356, line: 415, baseType: !1471, size: 256, offset: 1024)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2405, file: !356, line: 416, baseType: !1473, size: 768, offset: 1280)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2405, file: !356, line: 417, baseType: !1471, size: 256, offset: 2048)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2405, file: !356, line: 418, baseType: !1473, size: 768, offset: 2304)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2405, file: !356, line: 419, baseType: !1471, size: 256, offset: 3072)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2405, file: !356, line: 420, baseType: !1473, size: 768, offset: 3328)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2405, file: !356, line: 421, baseType: !1471, size: 256, offset: 4096)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2405, file: !356, line: 422, baseType: !1484, size: 1792, offset: 4352)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2405, file: !356, line: 423, baseType: !1488, size: 1920, offset: 6144)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2405, file: !356, line: 424, baseType: !1493, size: 20608, offset: 8064)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2405, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2422)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2423)
!2423 = !{!2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2422, file: !356, line: 447, baseType: !360, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2422, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2422, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2422, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2422, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2422, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2422, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2422, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2422, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2422, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2422, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2422, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2422, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2422, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2422, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2422, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2422, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2422, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2422, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2422, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2422, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2445 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2446, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2446 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2447 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2448, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2449, splitDebugInlining: false, nameTableKind: None)
!2448 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2449 = !{!102, !103, !22, !2450}
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2452)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2453)
!2453 = !{!2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2452, file: !356, line: 447, baseType: !360, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2452, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2452, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2452, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2452, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2452, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2452, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2452, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2452, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2452, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2452, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2452, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2452, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2452, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2452, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2452, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2452, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2452, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2452, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2452, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2452, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2475 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2476, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2477, splitDebugInlining: false, nameTableKind: None)
!2476 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2477 = !{!2478, !102, !103}
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2480)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2481)
!2481 = !{!2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2480, file: !356, line: 447, baseType: !360, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2480, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2480, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2480, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2480, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2480, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2480, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2480, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2480, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2480, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2480, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2480, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2480, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2480, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2480, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2480, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2480, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2480, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2480, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2480, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2480, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2505, splitDebugInlining: false, nameTableKind: None)
!2504 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2505 = !{!2506, !121, !102, !103}
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2508, line: 98, size: 256, elements: !2509)
!2508 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2509 = !{!2510, !2515, !2520, !2525, !2530, !2535, !2540, !2545}
!2510 = !DIDerivedType(tag: DW_TAG_member, scope: !2507, file: !2508, line: 99, baseType: !2511, size: 32)
!2511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2507, file: !2508, line: 99, size: 32, elements: !2512)
!2512 = !{!2513, !2514}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2511, file: !2508, line: 99, baseType: !121, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2511, file: !2508, line: 99, baseType: !121, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, scope: !2507, file: !2508, line: 100, baseType: !2516, size: 32, offset: 32)
!2516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2507, file: !2508, line: 100, size: 32, elements: !2517)
!2517 = !{!2518, !2519}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2516, file: !2508, line: 100, baseType: !121, size: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2516, file: !2508, line: 100, baseType: !121, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_member, scope: !2507, file: !2508, line: 101, baseType: !2521, size: 32, offset: 64)
!2521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2507, file: !2508, line: 101, size: 32, elements: !2522)
!2522 = !{!2523, !2524}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2521, file: !2508, line: 101, baseType: !121, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2521, file: !2508, line: 101, baseType: !121, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, scope: !2507, file: !2508, line: 102, baseType: !2526, size: 32, offset: 96)
!2526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2507, file: !2508, line: 102, size: 32, elements: !2527)
!2527 = !{!2528, !2529}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2526, file: !2508, line: 102, baseType: !121, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2526, file: !2508, line: 102, baseType: !121, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, scope: !2507, file: !2508, line: 103, baseType: !2531, size: 32, offset: 128)
!2531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2507, file: !2508, line: 103, size: 32, elements: !2532)
!2532 = !{!2533, !2534}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2531, file: !2508, line: 103, baseType: !121, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2531, file: !2508, line: 103, baseType: !121, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, scope: !2507, file: !2508, line: 104, baseType: !2536, size: 32, offset: 160)
!2536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2507, file: !2508, line: 104, size: 32, elements: !2537)
!2537 = !{!2538, !2539}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2536, file: !2508, line: 104, baseType: !121, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2536, file: !2508, line: 104, baseType: !121, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, scope: !2507, file: !2508, line: 105, baseType: !2541, size: 32, offset: 192)
!2541 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2507, file: !2508, line: 105, size: 32, elements: !2542)
!2542 = !{!2543, !2544}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2541, file: !2508, line: 105, baseType: !121, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2541, file: !2508, line: 105, baseType: !121, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2507, file: !2508, line: 106, baseType: !121, size: 32, offset: 224)
!2546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2390, retainedTypes: !2548, splitDebugInlining: false, nameTableKind: None)
!2547 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2548 = !{!2549, !102, !103, !2574, !2617, !121}
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2551)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2552)
!2552 = !{!2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2551, file: !356, line: 447, baseType: !360, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2551, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2551, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2551, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2551, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2551, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2551, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2551, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2551, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2551, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2551, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2551, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2551, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2551, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2551, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2551, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2551, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2551, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2551, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2551, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2551, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2508, line: 141, baseType: !2576)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2508, line: 97, size: 256, elements: !2577)
!2577 = !{!2578}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2576, file: !2508, line: 107, baseType: !2579, size: 256)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2508, line: 98, size: 256, elements: !2580)
!2580 = !{!2581, !2586, !2591, !2596, !2601, !2606, !2611, !2616}
!2581 = !DIDerivedType(tag: DW_TAG_member, scope: !2579, file: !2508, line: 99, baseType: !2582, size: 32)
!2582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2579, file: !2508, line: 99, size: 32, elements: !2583)
!2583 = !{!2584, !2585}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2582, file: !2508, line: 99, baseType: !121, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2582, file: !2508, line: 99, baseType: !121, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, scope: !2579, file: !2508, line: 100, baseType: !2587, size: 32, offset: 32)
!2587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2579, file: !2508, line: 100, size: 32, elements: !2588)
!2588 = !{!2589, !2590}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2587, file: !2508, line: 100, baseType: !121, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2587, file: !2508, line: 100, baseType: !121, size: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, scope: !2579, file: !2508, line: 101, baseType: !2592, size: 32, offset: 64)
!2592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2579, file: !2508, line: 101, size: 32, elements: !2593)
!2593 = !{!2594, !2595}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2592, file: !2508, line: 101, baseType: !121, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2592, file: !2508, line: 101, baseType: !121, size: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, scope: !2579, file: !2508, line: 102, baseType: !2597, size: 32, offset: 96)
!2597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2579, file: !2508, line: 102, size: 32, elements: !2598)
!2598 = !{!2599, !2600}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2597, file: !2508, line: 102, baseType: !121, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2597, file: !2508, line: 102, baseType: !121, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, scope: !2579, file: !2508, line: 103, baseType: !2602, size: 32, offset: 128)
!2602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2579, file: !2508, line: 103, size: 32, elements: !2603)
!2603 = !{!2604, !2605}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2602, file: !2508, line: 103, baseType: !121, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2602, file: !2508, line: 103, baseType: !121, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, scope: !2579, file: !2508, line: 104, baseType: !2607, size: 32, offset: 160)
!2607 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2579, file: !2508, line: 104, size: 32, elements: !2608)
!2608 = !{!2609, !2610}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2607, file: !2508, line: 104, baseType: !121, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2607, file: !2508, line: 104, baseType: !121, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, scope: !2579, file: !2508, line: 105, baseType: !2612, size: 32, offset: 192)
!2612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2579, file: !2508, line: 105, size: 32, elements: !2613)
!2613 = !{!2614, !2615}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2612, file: !2508, line: 105, baseType: !121, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2612, file: !2508, line: 105, baseType: !121, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2579, file: !2508, line: 106, baseType: !121, size: 32, offset: 224)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!2618 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2619, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1454, retainedTypes: !2620, splitDebugInlining: false, nameTableKind: None)
!2619 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2620 = !{!621, !595, !154, !121, !2621, !2638}
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !356, line: 426, baseType: !2623)
!2623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 411, size: 28704, elements: !2624)
!2624 = !{!2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2623, file: !356, line: 413, baseType: !1471, size: 256)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2623, file: !356, line: 414, baseType: !1473, size: 768, offset: 256)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2623, file: !356, line: 415, baseType: !1471, size: 256, offset: 1024)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2623, file: !356, line: 416, baseType: !1473, size: 768, offset: 1280)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2623, file: !356, line: 417, baseType: !1471, size: 256, offset: 2048)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2623, file: !356, line: 418, baseType: !1473, size: 768, offset: 2304)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2623, file: !356, line: 419, baseType: !1471, size: 256, offset: 3072)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2623, file: !356, line: 420, baseType: !1473, size: 768, offset: 3328)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2623, file: !356, line: 421, baseType: !1471, size: 256, offset: 4096)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2623, file: !356, line: 422, baseType: !1484, size: 1792, offset: 4352)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2623, file: !356, line: 423, baseType: !1488, size: 1920, offset: 6144)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2623, file: !356, line: 424, baseType: !1493, size: 20608, offset: 8064)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2623, file: !356, line: 425, baseType: !120, size: 32, offset: 28672)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2640)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2641)
!2641 = !{!2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2640, file: !356, line: 447, baseType: !360, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2640, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2640, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2640, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2640, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2640, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2640, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2640, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2640, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2640, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2640, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2640, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2640, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2640, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2640, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2640, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2640, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2640, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2640, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2640, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2640, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2663 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2664, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2665, splitDebugInlining: false, nameTableKind: None)
!2664 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2665 = !{!2666, !102, !103}
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !356, line: 468, baseType: !2668)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 445, size: 1120, elements: !2669)
!2669 = !{!2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2668, file: !356, line: 447, baseType: !360, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2668, file: !356, line: 448, baseType: !120, size: 32, offset: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2668, file: !356, line: 449, baseType: !120, size: 32, offset: 64)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2668, file: !356, line: 450, baseType: !120, size: 32, offset: 96)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2668, file: !356, line: 451, baseType: !120, size: 32, offset: 128)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2668, file: !356, line: 452, baseType: !120, size: 32, offset: 160)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2668, file: !356, line: 453, baseType: !1508, size: 96, offset: 192)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2668, file: !356, line: 454, baseType: !120, size: 32, offset: 288)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2668, file: !356, line: 455, baseType: !120, size: 32, offset: 320)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2668, file: !356, line: 456, baseType: !120, size: 32, offset: 352)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2668, file: !356, line: 457, baseType: !120, size: 32, offset: 384)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2668, file: !356, line: 458, baseType: !120, size: 32, offset: 416)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2668, file: !356, line: 459, baseType: !120, size: 32, offset: 448)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2668, file: !356, line: 460, baseType: !120, size: 32, offset: 480)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2668, file: !356, line: 461, baseType: !1519, size: 64, offset: 512)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2668, file: !356, line: 462, baseType: !360, size: 32, offset: 576)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2668, file: !356, line: 463, baseType: !360, size: 32, offset: 608)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2668, file: !356, line: 464, baseType: !1523, size: 128, offset: 640)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2668, file: !356, line: 465, baseType: !1525, size: 160, offset: 768)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2668, file: !356, line: 466, baseType: !1527, size: 160, offset: 928)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2668, file: !356, line: 467, baseType: !120, size: 32, offset: 1088)
!2691 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2692, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2693, splitDebugInlining: false, nameTableKind: None)
!2692 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2693 = !{!146, !995, !200, !828, !2694, !155, !102}
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!2696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2698, splitDebugInlining: false, nameTableKind: None)
!2697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2698 = !{!2699}
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !2701)
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !2702)
!2702 = !{!2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2701, file: !116, line: 552, baseType: !120, size: 32)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2701, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2701, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2701, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2701, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2701, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2701, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2701, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2701, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2701, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2701, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2701, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2701, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2701, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2701, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2701, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2701, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2701, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2701, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2701, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2701, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2701, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2701, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2701, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2701, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2701, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2701, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2701, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2701, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2701, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2701, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2701, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2701, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2701, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!2737 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2738, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2738 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2739 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2740, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2741, retainedTypes: !2757, splitDebugInlining: false, nameTableKind: None)
!2740 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2741 = !{!2742, !2749, !2753}
!2742 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2743, line: 38, baseType: !32, size: 32, elements: !2744)
!2743 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2744 = !{!2745, !2746, !2747, !2748}
!2745 = !DIEnumerator(name: "HAL_OK", value: 0)
!2746 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2747 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2748 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2749 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !666, line: 184, baseType: !32, size: 32, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIEnumerator(name: "RESET", value: 0)
!2752 = !DIEnumerator(name: "SET", value: 1)
!2753 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !666, line: 190, baseType: !32, size: 32, elements: !2754)
!2754 = !{!2755, !2756}
!2755 = !DIEnumerator(name: "DISABLE", value: 0)
!2756 = !DIEnumerator(name: "ENABLE", value: 1)
!2757 = !{!2758, !121, !2796, !1310, !154, !1308, !102}
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !2760)
!2760 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !2761)
!2761 = !{!2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2760, file: !116, line: 552, baseType: !120, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2760, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2760, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2760, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2760, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2760, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2760, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2760, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2760, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2760, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2760, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2760, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2760, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2760, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2760, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2760, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2760, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2760, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2760, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2760, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2760, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2760, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2760, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2760, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2760, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2760, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2760, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2760, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2760, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2760, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2760, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2760, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2760, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2760, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 544, baseType: !2798)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 540, size: 64, elements: !2799)
!2799 = !{!2800, !2801}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2798, file: !116, line: 542, baseType: !120, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2798, file: !116, line: 543, baseType: !120, size: 32, offset: 32)
!2802 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2803, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2804, retainedTypes: !2805, splitDebugInlining: false, nameTableKind: None)
!2803 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2804 = !{!665}
!2805 = !{!2806, !121, !2814, !2820, !2831}
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 32)
!2807 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !356, line: 770, baseType: !2808)
!2808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 764, size: 128, elements: !2809)
!2809 = !{!2810, !2811, !2812, !2813}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2808, file: !356, line: 766, baseType: !120, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2808, file: !356, line: 767, baseType: !120, size: 32, offset: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2808, file: !356, line: 768, baseType: !120, size: 32, offset: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2808, file: !356, line: 769, baseType: !360, size: 32, offset: 96)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 544, baseType: !2816)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 540, size: 64, elements: !2817)
!2817 = !{!2818, !2819}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2816, file: !116, line: 542, baseType: !120, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2816, file: !116, line: 543, baseType: !120, size: 32, offset: 32)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 407, baseType: !2822)
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 398, size: 224, elements: !2823)
!2823 = !{!2824, !2825, !2826, !2827, !2828, !2829, !2830}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2822, file: !116, line: 400, baseType: !120, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2822, file: !116, line: 401, baseType: !120, size: 32, offset: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2822, file: !116, line: 402, baseType: !120, size: 32, offset: 64)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2822, file: !116, line: 403, baseType: !120, size: 32, offset: 96)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2822, file: !116, line: 404, baseType: !120, size: 32, offset: 128)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2822, file: !116, line: 405, baseType: !120, size: 32, offset: 160)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2822, file: !116, line: 406, baseType: !120, size: 32, offset: 192)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 586, baseType: !2833)
!2833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 550, size: 1216, elements: !2834)
!2834 = !{!2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2833, file: !116, line: 552, baseType: !120, size: 32)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2833, file: !116, line: 553, baseType: !120, size: 32, offset: 32)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2833, file: !116, line: 554, baseType: !120, size: 32, offset: 64)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2833, file: !116, line: 555, baseType: !120, size: 32, offset: 96)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2833, file: !116, line: 556, baseType: !120, size: 32, offset: 128)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2833, file: !116, line: 557, baseType: !120, size: 32, offset: 160)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2833, file: !116, line: 558, baseType: !120, size: 32, offset: 192)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2833, file: !116, line: 559, baseType: !121, size: 32, offset: 224)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2833, file: !116, line: 560, baseType: !120, size: 32, offset: 256)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2833, file: !116, line: 561, baseType: !120, size: 32, offset: 288)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2833, file: !116, line: 562, baseType: !693, size: 64, offset: 320)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2833, file: !116, line: 563, baseType: !120, size: 32, offset: 384)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2833, file: !116, line: 564, baseType: !120, size: 32, offset: 416)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2833, file: !116, line: 565, baseType: !120, size: 32, offset: 448)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2833, file: !116, line: 566, baseType: !121, size: 32, offset: 480)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2833, file: !116, line: 567, baseType: !120, size: 32, offset: 512)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2833, file: !116, line: 568, baseType: !120, size: 32, offset: 544)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2833, file: !116, line: 569, baseType: !693, size: 64, offset: 576)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2833, file: !116, line: 570, baseType: !120, size: 32, offset: 640)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2833, file: !116, line: 571, baseType: !120, size: 32, offset: 672)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2833, file: !116, line: 572, baseType: !120, size: 32, offset: 704)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2833, file: !116, line: 573, baseType: !121, size: 32, offset: 736)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2833, file: !116, line: 574, baseType: !120, size: 32, offset: 768)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2833, file: !116, line: 575, baseType: !120, size: 32, offset: 800)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2833, file: !116, line: 576, baseType: !693, size: 64, offset: 832)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2833, file: !116, line: 577, baseType: !120, size: 32, offset: 896)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2833, file: !116, line: 578, baseType: !120, size: 32, offset: 928)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2833, file: !116, line: 579, baseType: !693, size: 64, offset: 960)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2833, file: !116, line: 580, baseType: !120, size: 32, offset: 1024)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2833, file: !116, line: 581, baseType: !120, size: 32, offset: 1056)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2833, file: !116, line: 582, baseType: !120, size: 32, offset: 1088)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2833, file: !116, line: 583, baseType: !120, size: 32, offset: 1120)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2833, file: !116, line: 584, baseType: !120, size: 32, offset: 1152)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2833, file: !116, line: 585, baseType: !120, size: 32, offset: 1184)
!2869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2870, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2871, splitDebugInlining: false, nameTableKind: None)
!2870 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2871 = !{!102, !200}
!2872 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2873, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2874, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2873 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2874 = !{!2875, !2882, !30}
!2875 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2876, line: 14, baseType: !32, size: 32, elements: !2877)
!2876 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2877 = !{!2878, !2879, !2880, !2881}
!2878 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2879 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2880 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2881 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2876, line: 42, baseType: !32, size: 32, elements: !2883)
!2883 = !{!2884, !2885, !2886, !2887, !2888, !2889}
!2884 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2885 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2886 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2887 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2888 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2889 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2892 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2893, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2894, splitDebugInlining: false, nameTableKind: None)
!2893 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2894 = !{!22, !102, !103}
!2895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2896, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2896 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!2897 = !{!"Ubuntu clang version 14.0.6"}
!2898 = !{i32 7, !"Dwarf Version", i32 4}
!2899 = !{i32 2, !"Debug Info Version", i32 3}
!2900 = !{i32 1, !"wchar_size", i32 4}
!2901 = !{i32 1, !"min_enum_size", i32 4}
!2902 = !{i32 1, !"branch-target-enforcement", i32 0}
!2903 = !{i32 1, !"sign-return-address", i32 0}
!2904 = !{i32 1, !"sign-return-address-all", i32 0}
!2905 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2906 = !{i32 7, !"frame-pointer", i32 2}
!2907 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2908, file: !2908, line: 26, type: !2909, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2254, retainedNodes: !322)
!2908 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2909 = !DISubroutineType(types: !2910)
!2910 = !{null}
!2911 = !DILocation(line: 28, column: 1, scope: !2907)
!2912 = !{i64 2155360465, i64 2155360485, i64 2155360548}
!2913 = !DILocation(line: 29, column: 1, scope: !2907)
!2914 = !{i64 2155360880, i64 2155360900, i64 2155360963}
!2915 = !DILocation(line: 30, column: 1, scope: !2907)
!2916 = !{i64 2155361299, i64 2155361319, i64 2155361382}
!2917 = !DILocation(line: 31, column: 1, scope: !2907)
!2918 = !{i64 2155361718, i64 2155361738, i64 2155361801}
!2919 = !DILocation(line: 33, column: 1, scope: !2907)
!2920 = !{i64 2155362010, i64 2155362030, i64 2155362093}
!2921 = !DILocation(line: 35, column: 1, scope: !2907)
!2922 = !{i64 2155362335, i64 2155362355, i64 2155362418}
!2923 = !DILocation(line: 50, column: 1, scope: !2907)
!2924 = !{i64 2155362762, i64 2155362782, i64 2155362845}
!2925 = !DILocation(line: 54, column: 1, scope: !2907)
!2926 = !{i64 2155367262, i64 2155367282, i64 2155367345}
!2927 = !DILocation(line: 61, column: 1, scope: !2907)
!2928 = !{i64 2155367579, i64 2155367599, i64 2155367662}
!2929 = !DILocation(line: 63, column: 1, scope: !2907)
!2930 = !{i64 2155367959, i64 2155367979, i64 2155368042}
!2931 = !DILocation(line: 64, column: 1, scope: !2907)
!2932 = !{i64 2155368481, i64 2155368501, i64 2155368564}
!2933 = !DILocation(line: 65, column: 1, scope: !2907)
!2934 = !{i64 2155368979, i64 2155368999, i64 2155369062}
!2935 = !DILocation(line: 66, column: 1, scope: !2907)
!2936 = !{i64 2155369461, i64 2155369481, i64 2155369544}
!2937 = !DILocation(line: 67, column: 1, scope: !2907)
!2938 = !{i64 2155369968, i64 2155369988, i64 2155370051}
!2939 = !DILocation(line: 68, column: 1, scope: !2907)
!2940 = !{i64 2155370456, i64 2155370476, i64 2155370539}
!2941 = !DILocation(line: 70, column: 1, scope: !2907)
!2942 = !{i64 2155370924, i64 2155370944, i64 2155371007}
!2943 = !DILocation(line: 71, column: 1, scope: !2907)
!2944 = !{i64 2155371366, i64 2155371386, i64 2155371449}
!2945 = !DILocation(line: 72, column: 1, scope: !2907)
!2946 = !{i64 2155371824, i64 2155371844, i64 2155371907}
!2947 = !DILocation(line: 79, column: 1, scope: !2907)
!2948 = !{i64 2155372278, i64 2155372298, i64 2155372361}
!2949 = !DILocation(line: 80, column: 1, scope: !2907)
!2950 = !{i64 2155372789, i64 2155372809, i64 2155372872}
!2951 = !DILocation(line: 82, column: 1, scope: !2907)
!2952 = !{i64 2155373280, i64 2155373300, i64 2155373363}
!2953 = !DILocation(line: 97, column: 1, scope: !2907)
!2954 = !{i64 2155373617, i64 2155373637, i64 2155373700}
!2955 = !DILocation(line: 99, column: 1, scope: !2907)
!2956 = !{i64 2155373835, i64 2155373855, i64 2155373918}
!2957 = !DILocation(line: 102, column: 1, scope: !2907)
!2958 = !{i64 2155374092, i64 2155374112, i64 2155374175}
!2959 = !DILocation(line: 105, column: 1, scope: !2907)
!2960 = !{i64 2155374332, i64 2155374352, i64 2155374415}
!2961 = !DILocation(line: 115, column: 1, scope: !2907)
!2962 = !{i64 2155374671, i64 2155374691, i64 2155374754}
!2963 = !DILocation(line: 118, column: 1, scope: !2907)
!2964 = !{i64 2155375015, i64 2155375035, i64 2155375098}
!2965 = !DILocation(line: 32, column: 1, scope: !2966)
!2966 = !DILexicalBlockFile(scope: !2907, file: !2967, discriminator: 0)
!2967 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2968 = !{i64 2155375371, i64 2155375391, i64 2155375454}
!2969 = !DILocation(line: 33, column: 1, scope: !2966)
!2970 = !{i64 2155375883, i64 2155375903, i64 2155375966}
!2971 = !DILocation(line: 53, column: 1, scope: !2966)
!2972 = !{i64 2155376391, i64 2155376411, i64 2155376474}
!2973 = !DILocation(line: 54, column: 1, scope: !2966)
!2974 = !{i64 2155380870, i64 2155380890, i64 2155380953}
!2975 = !DILocation(line: 55, column: 1, scope: !2966)
!2976 = !{i64 2155381288, i64 2155381308, i64 2155381371}
!2977 = !DILocation(line: 56, column: 1, scope: !2966)
!2978 = !{i64 2155381706, i64 2155381726, i64 2155381789}
!2979 = !DILocation(line: 57, column: 1, scope: !2966)
!2980 = !{i64 2155382124, i64 2155382144, i64 2155382207}
!2981 = !DILocation(line: 58, column: 1, scope: !2966)
!2982 = !{i64 2155382542, i64 2155382562, i64 2155382625}
!2983 = !DILocation(line: 59, column: 1, scope: !2966)
!2984 = !{i64 2155382960, i64 2155382980, i64 2155383043}
!2985 = !DILocation(line: 60, column: 1, scope: !2966)
!2986 = !{i64 2155383384, i64 2155383404, i64 2155383467}
!2987 = !DILocation(line: 61, column: 1, scope: !2966)
!2988 = !{i64 2155383701, i64 2155383721, i64 2155383784}
!2989 = !DILocation(line: 70, column: 1, scope: !2966)
!2990 = !{i64 2155383930, i64 2155383950, i64 2155384013}
!2991 = !DILocation(line: 72, column: 1, scope: !2966)
!2992 = !{i64 2155384262, i64 2155384282, i64 2155384345}
!2993 = !DILocation(line: 73, column: 1, scope: !2966)
!2994 = !{i64 2155384712, i64 2155384732, i64 2155384795}
!2995 = !DILocation(line: 74, column: 1, scope: !2966)
!2996 = !{i64 2155385162, i64 2155385182, i64 2155385245}
!2997 = !DILocation(line: 75, column: 1, scope: !2966)
!2998 = !{i64 2155385612, i64 2155385632, i64 2155385695}
!2999 = !DILocation(line: 76, column: 1, scope: !2966)
!3000 = !{i64 2155386062, i64 2155386082, i64 2155386145}
!3001 = !DILocation(line: 77, column: 1, scope: !2966)
!3002 = !{i64 2155386512, i64 2155386532, i64 2155386595}
!3003 = !DILocation(line: 78, column: 1, scope: !2966)
!3004 = !{i64 2155386962, i64 2155386982, i64 2155387045}
!3005 = !DILocation(line: 79, column: 1, scope: !2966)
!3006 = !{i64 2155387412, i64 2155387432, i64 2155387495}
!3007 = !DILocation(line: 80, column: 1, scope: !2966)
!3008 = !{i64 2155387865, i64 2155387885, i64 2155387948}
!3009 = !DILocation(line: 84, column: 1, scope: !2966)
!3010 = !{i64 2155388197, i64 2155388217, i64 2155388280}
!3011 = !DILocation(line: 91, column: 1, scope: !2966)
!3012 = !{i64 2155388594, i64 2155388614, i64 2155388677}
!3013 = !DILocation(line: 93, column: 1, scope: !2966)
!3014 = !{i64 2155388961, i64 2155388981, i64 2155389044}
!3015 = !DILocation(line: 106, column: 1, scope: !2966)
!3016 = !{i64 2155389231, i64 2155389251, i64 2155389314}
!3017 = !DILocation(line: 11, column: 1, scope: !3018)
!3018 = !DILexicalBlockFile(scope: !2907, file: !3019, discriminator: 0)
!3019 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3020 = distinct !DISubprogram(name: "main", scope: !2338, file: !2338, line: 22, type: !2909, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !3021)
!3021 = !{!3022}
!3022 = !DILocalVariable(name: "ret", scope: !3020, file: !2338, line: 24, type: !103)
!3023 = !DILocation(line: 26, column: 7, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3020, file: !2338, line: 26, column: 6)
!3025 = !DILocation(line: 26, column: 6, scope: !3020)
!3026 = !DILocation(line: 30, column: 8, scope: !3020)
!3027 = !DILocation(line: 0, scope: !3020)
!3028 = !DILocation(line: 31, column: 10, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3020, file: !2338, line: 31, column: 6)
!3030 = !DILocation(line: 31, column: 6, scope: !3020)
!3031 = !DILocation(line: 36, column: 9, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3020, file: !2338, line: 35, column: 12)
!3033 = !DILocation(line: 37, column: 11, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3032, file: !2338, line: 37, column: 7)
!3035 = !DILocation(line: 37, column: 7, scope: !3032)
!3036 = !DILocation(line: 40, column: 3, scope: !3032)
!3037 = distinct !{!3037, !3038, !3039}
!3038 = !DILocation(line: 35, column: 2, scope: !3020)
!3039 = !DILocation(line: 41, column: 2, scope: !3020)
!3040 = !DILocation(line: 42, column: 1, scope: !3020)
!3041 = distinct !DISubprogram(name: "device_is_ready", scope: !3042, file: !3042, line: 47, type: !3043, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !3045)
!3042 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!3043 = !DISubroutineType(types: !3044)
!3044 = !{!157, !2268}
!3045 = !{!3046}
!3046 = !DILocalVariable(name: "dev", arg: 1, scope: !3041, file: !3042, line: 47, type: !2268)
!3047 = !DILocation(line: 0, scope: !3041)
!3048 = !DILocation(line: 55, column: 2, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3041, file: !3042, line: 55, column: 2)
!3050 = !{i64 2155318079}
!3051 = !DILocation(line: 56, column: 9, scope: !3041)
!3052 = !DILocation(line: 56, column: 2, scope: !3041)
!3053 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !871, file: !871, line: 731, type: !3054, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !3057)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!103, !3056, !912}
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 32)
!3057 = !{!3058, !3059}
!3058 = !DILocalVariable(name: "spec", arg: 1, scope: !3053, file: !871, line: 731, type: !3056)
!3059 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !3053, file: !871, line: 732, type: !912)
!3060 = !DILocation(line: 0, scope: !3053)
!3061 = !DILocation(line: 734, column: 9, scope: !3053)
!3062 = !DILocation(line: 734, column: 2, scope: !3053)
!3063 = distinct !DISubprogram(name: "gpio_pin_toggle_dt", scope: !871, file: !871, line: 1352, type: !3064, scopeLine: 1353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !3066)
!3064 = !DISubroutineType(types: !3065)
!3065 = !{!103, !3056}
!3066 = !{!3067}
!3067 = !DILocalVariable(name: "spec", arg: 1, scope: !3063, file: !871, line: 1352, type: !3056)
!3068 = !DILocation(line: 1354, column: 9, scope: !3063)
!3069 = !DILocation(line: 1354, column: 2, scope: !3063)
!3070 = distinct !DISubprogram(name: "k_msleep", scope: !307, file: !307, line: 439, type: !3071, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !3073)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!595, !595}
!3073 = !{!3074}
!3074 = !DILocalVariable(name: "ms", arg: 1, scope: !3070, file: !307, line: 439, type: !595)
!3075 = !DILocation(line: 0, scope: !3070)
!3076 = !DILocation(line: 441, column: 9, scope: !3070)
!3077 = !DILocation(line: 441, column: 2, scope: !3070)
!3078 = distinct !DISubprogram(name: "k_sleep", scope: !3079, file: !3079, line: 91, type: !3080, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !3086)
!3079 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!595, !3082}
!3082 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1457, line: 67, baseType: !3083)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1457, line: 65, size: 64, elements: !3084)
!3084 = !{!3085}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3083, file: !1457, line: 66, baseType: !1456, size: 64)
!3086 = !{!3087}
!3087 = !DILocalVariable(name: "timeout", arg: 1, scope: !3078, file: !3079, line: 91, type: !3082)
!3088 = !DILocation(line: 0, scope: !3078)
!3089 = !DILocation(line: 99, column: 2, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3078, file: !3079, line: 99, column: 2)
!3091 = !{i64 2155056980}
!3092 = !DILocation(line: 100, column: 9, scope: !3078)
!3093 = !DILocation(line: 100, column: 2, scope: !3078)
!3094 = distinct !DISubprogram(name: "gpio_pin_toggle", scope: !871, file: !871, line: 1331, type: !3095, scopeLine: 1332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !3097)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{!103, !2268, !911}
!3097 = !{!3098, !3099, !3100}
!3098 = !DILocalVariable(name: "port", arg: 1, scope: !3094, file: !871, line: 1331, type: !2268)
!3099 = !DILocalVariable(name: "pin", arg: 2, scope: !3094, file: !871, line: 1331, type: !911)
!3100 = !DILocalVariable(name: "cfg", scope: !3094, file: !871, line: 1333, type: !3101)
!3101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2324)
!3102 = !DILocation(line: 0, scope: !3094)
!3103 = !DILocation(line: 1339, column: 9, scope: !3094)
!3104 = !DILocation(line: 1339, column: 2, scope: !3094)
!3105 = distinct !DISubprogram(name: "gpio_port_toggle_bits", scope: !3106, file: !3106, line: 222, type: !2293, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !3107)
!3106 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!3107 = !{!3108, !3109}
!3108 = !DILocalVariable(name: "port", arg: 1, scope: !3105, file: !3106, line: 222, type: !2268)
!3109 = !DILocalVariable(name: "pins", arg: 2, scope: !3105, file: !3106, line: 222, type: !923)
!3110 = !DILocation(line: 0, scope: !3105)
!3111 = !DILocation(line: 231, column: 2, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3105, file: !3106, line: 231, column: 2)
!3113 = !{i64 2155332925}
!3114 = !DILocation(line: 232, column: 9, scope: !3105)
!3115 = !DILocation(line: 232, column: 2, scope: !3105)
!3116 = distinct !DISubprogram(name: "z_impl_gpio_port_toggle_bits", scope: !871, file: !871, line: 1098, type: !2293, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !3117)
!3117 = !{!3118, !3119, !3120}
!3118 = !DILocalVariable(name: "port", arg: 1, scope: !3116, file: !871, line: 1098, type: !2268)
!3119 = !DILocalVariable(name: "pins", arg: 2, scope: !3116, file: !871, line: 1099, type: !923)
!3120 = !DILocalVariable(name: "api", scope: !3116, file: !871, line: 1101, type: !2260)
!3121 = !DILocation(line: 0, scope: !3116)
!3122 = !DILocation(line: 1102, column: 41, scope: !3116)
!3123 = !DILocation(line: 1104, column: 14, scope: !3116)
!3124 = !DILocation(line: 1104, column: 9, scope: !3116)
!3125 = !DILocation(line: 1104, column: 2, scope: !3116)
!3126 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !3106, file: !3106, line: 49, type: !2266, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !3127)
!3127 = !{!3128, !3129, !3130}
!3128 = !DILocalVariable(name: "port", arg: 1, scope: !3126, file: !3106, line: 49, type: !2268)
!3129 = !DILocalVariable(name: "pin", arg: 2, scope: !3126, file: !3106, line: 49, type: !911)
!3130 = !DILocalVariable(name: "flags", arg: 3, scope: !3126, file: !3106, line: 49, type: !912)
!3131 = !DILocation(line: 0, scope: !3126)
!3132 = !DILocation(line: 59, column: 2, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3126, file: !3106, line: 59, column: 2)
!3134 = !{i64 2155332449}
!3135 = !DILocation(line: 60, column: 9, scope: !3126)
!3136 = !DILocation(line: 60, column: 2, scope: !3126)
!3137 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !871, file: !871, line: 667, type: !2266, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !3138)
!3138 = !{!3139, !3140, !3141, !3142, !3143, !3144}
!3139 = !DILocalVariable(name: "port", arg: 1, scope: !3137, file: !871, line: 667, type: !2268)
!3140 = !DILocalVariable(name: "pin", arg: 2, scope: !3137, file: !871, line: 668, type: !911)
!3141 = !DILocalVariable(name: "flags", arg: 3, scope: !3137, file: !871, line: 669, type: !912)
!3142 = !DILocalVariable(name: "api", scope: !3137, file: !871, line: 671, type: !2260)
!3143 = !DILocalVariable(name: "cfg", scope: !3137, file: !871, line: 673, type: !3101)
!3144 = !DILocalVariable(name: "data", scope: !3137, file: !871, line: 675, type: !2334)
!3145 = !DILocation(line: 0, scope: !3137)
!3146 = !DILocation(line: 672, column: 41, scope: !3137)
!3147 = !DILocation(line: 676, column: 36, scope: !3137)
!3148 = !DILocation(line: 714, column: 9, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3150, file: !871, line: 713, column: 9)
!3150 = distinct !DILexicalBlock(scope: !3137, file: !871, line: 711, column: 6)
!3151 = !DILocation(line: 714, column: 16, scope: !3149)
!3152 = !DILocation(line: 717, column: 14, scope: !3137)
!3153 = !DILocation(line: 717, column: 9, scope: !3137)
!3154 = !DILocation(line: 717, column: 2, scope: !3137)
!3155 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !3043, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2256, retainedNodes: !3156)
!3156 = !{!3157}
!3157 = !DILocalVariable(name: "dev", arg: 1, scope: !3155, file: !141, line: 730, type: !2268)
!3158 = !DILocation(line: 0, scope: !3155)
!3159 = !DILocation(line: 732, column: 9, scope: !3155)
!3160 = !DILocation(line: 732, column: 2, scope: !3155)
!3161 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3162)
!3162 = !{!3163}
!3163 = !DILocalVariable(name: "c", arg: 1, scope: !3161, file: !105, line: 45, type: !103)
!3164 = !DILocation(line: 0, scope: !3161)
!3165 = !DILocation(line: 50, column: 2, scope: !3161)
!3166 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3167, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3169)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{null, !106}
!3169 = !{!3170}
!3170 = !DILocalVariable(name: "fn", arg: 1, scope: !3166, file: !105, line: 63, type: !106)
!3171 = !DILocation(line: 0, scope: !3166)
!3172 = !DILocation(line: 65, column: 12, scope: !3166)
!3173 = !DILocation(line: 66, column: 1, scope: !3166)
!3174 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3175, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !322)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{!102}
!3177 = !DILocation(line: 78, column: 9, scope: !3174)
!3178 = !DILocation(line: 78, column: 2, scope: !3174)
!3179 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3180, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3189)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{null, !144, !3182}
!3182 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3183, line: 99, baseType: !3184)
!3183 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3184 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3183, line: 40, baseType: !3185)
!3185 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3186)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3187)
!3187 = !{!3188}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3186, file: !105, line: 79, baseType: !102, size: 32)
!3189 = !{!3190, !3191, !3192}
!3190 = !DILocalVariable(name: "fmt", arg: 1, scope: !3179, file: !105, line: 113, type: !144)
!3191 = !DILocalVariable(name: "ap", arg: 2, scope: !3179, file: !105, line: 113, type: !3182)
!3192 = !DILocalVariable(name: "ctx", scope: !3193, file: !105, line: 121, type: !3195)
!3193 = distinct !DILexicalBlock(scope: !3194, file: !105, line: 120, column: 27)
!3194 = distinct !DILexicalBlock(scope: !3179, file: !105, line: 120, column: 6)
!3195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3196)
!3196 = !{!3197, !3198}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3195, file: !105, line: 85, baseType: !32, size: 32)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3195, file: !105, line: 86, baseType: !3199, offset: 32)
!3199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !3200)
!3200 = !{!3201}
!3201 = !DISubrange(count: 0)
!3202 = !DILocation(line: 0, scope: !3179)
!3203 = !DILocation(line: 148, column: 3, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3194, file: !105, line: 138, column: 9)
!3205 = !DILocation(line: 155, column: 1, scope: !3179)
!3206 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3207, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3209)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{!103, !103, !102}
!3209 = !{!3210, !3211}
!3210 = !DILocalVariable(name: "c", arg: 1, scope: !3206, file: !105, line: 107, type: !103)
!3211 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3206, file: !105, line: 107, type: !102)
!3212 = !DILocation(line: 0, scope: !3206)
!3213 = !DILocation(line: 110, column: 9, scope: !3206)
!3214 = !DILocation(line: 110, column: 2, scope: !3206)
!3215 = distinct !DISubprogram(name: "cbvprintf", scope: !3216, file: !3216, line: 739, type: !3217, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3223)
!3216 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3217 = !DISubroutineType(types: !3218)
!3218 = !{!103, !3219, !102, !144, !3182}
!3219 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3216, line: 297, baseType: !3220)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 32)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{!103, null}
!3223 = !{!3224, !3225, !3226, !3227}
!3224 = !DILocalVariable(name: "out", arg: 1, scope: !3215, file: !3216, line: 739, type: !3219)
!3225 = !DILocalVariable(name: "ctx", arg: 2, scope: !3215, file: !3216, line: 739, type: !102)
!3226 = !DILocalVariable(name: "format", arg: 3, scope: !3215, file: !3216, line: 739, type: !144)
!3227 = !DILocalVariable(name: "ap", arg: 4, scope: !3215, file: !3216, line: 739, type: !3182)
!3228 = !DILocation(line: 0, scope: !3215)
!3229 = !DILocation(line: 741, column: 9, scope: !3215)
!3230 = !DILocation(line: 741, column: 2, scope: !3215)
!3231 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3232, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3234)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{null, !995, !200}
!3234 = !{!3235, !3236, !3237}
!3235 = !DILocalVariable(name: "c", arg: 1, scope: !3231, file: !105, line: 157, type: !995)
!3236 = !DILocalVariable(name: "n", arg: 2, scope: !3231, file: !105, line: 157, type: !200)
!3237 = !DILocalVariable(name: "i", scope: !3231, file: !105, line: 159, type: !200)
!3238 = !DILocation(line: 0, scope: !3231)
!3239 = !DILocation(line: 164, column: 16, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3241, file: !105, line: 164, column: 2)
!3241 = distinct !DILexicalBlock(scope: !3231, file: !105, line: 164, column: 2)
!3242 = !DILocation(line: 164, column: 2, scope: !3241)
!3243 = !DILocation(line: 165, column: 3, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3240, file: !105, line: 164, column: 26)
!3245 = !DILocation(line: 165, column: 13, scope: !3244)
!3246 = !DILocation(line: 164, column: 22, scope: !3240)
!3247 = distinct !{!3247, !3242, !3248}
!3248 = !DILocation(line: 166, column: 2, scope: !3241)
!3249 = !DILocation(line: 171, column: 1, scope: !3231)
!3250 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3251, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3253)
!3251 = !DISubroutineType(types: !3252)
!3252 = !{null, !144, null}
!3253 = !{!3254, !3255}
!3254 = !DILocalVariable(name: "fmt", arg: 1, scope: !3250, file: !105, line: 203, type: !144)
!3255 = !DILocalVariable(name: "ap", scope: !3250, file: !105, line: 205, type: !3182)
!3256 = !DILocation(line: 0, scope: !3250)
!3257 = !DILocation(line: 205, column: 2, scope: !3250)
!3258 = !DILocation(line: 205, column: 10, scope: !3250)
!3259 = !DILocation(line: 207, column: 2, scope: !3250)
!3260 = !DILocation(line: 209, column: 2, scope: !3250)
!3261 = !DILocation(line: 211, column: 2, scope: !3250)
!3262 = !DILocation(line: 212, column: 1, scope: !3250)
!3263 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3264, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3266)
!3264 = !DISubroutineType(types: !3265)
!3265 = !{!103, !995, !200, !144, null}
!3266 = !{!3267, !3268, !3269, !3270, !3271}
!3267 = !DILocalVariable(name: "str", arg: 1, scope: !3263, file: !105, line: 239, type: !995)
!3268 = !DILocalVariable(name: "size", arg: 2, scope: !3263, file: !105, line: 239, type: !200)
!3269 = !DILocalVariable(name: "fmt", arg: 3, scope: !3263, file: !105, line: 239, type: !144)
!3270 = !DILocalVariable(name: "ap", scope: !3263, file: !105, line: 241, type: !3182)
!3271 = !DILocalVariable(name: "ret", scope: !3263, file: !105, line: 242, type: !103)
!3272 = !DILocation(line: 0, scope: !3263)
!3273 = !DILocation(line: 241, column: 2, scope: !3263)
!3274 = !DILocation(line: 241, column: 10, scope: !3263)
!3275 = !DILocation(line: 244, column: 2, scope: !3263)
!3276 = !DILocation(line: 245, column: 8, scope: !3263)
!3277 = !DILocation(line: 246, column: 2, scope: !3263)
!3278 = !DILocation(line: 249, column: 1, scope: !3263)
!3279 = !DILocation(line: 248, column: 2, scope: !3263)
!3280 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3281, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3283)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!103, !995, !200, !144, !3182}
!3283 = !{!3284, !3285, !3286, !3287, !3288}
!3284 = !DILocalVariable(name: "str", arg: 1, scope: !3280, file: !105, line: 251, type: !995)
!3285 = !DILocalVariable(name: "size", arg: 2, scope: !3280, file: !105, line: 251, type: !200)
!3286 = !DILocalVariable(name: "fmt", arg: 3, scope: !3280, file: !105, line: 251, type: !144)
!3287 = !DILocalVariable(name: "ap", arg: 4, scope: !3280, file: !105, line: 251, type: !3182)
!3288 = !DILocalVariable(name: "ctx", scope: !3280, file: !105, line: 253, type: !3289)
!3289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3290)
!3290 = !{!3291, !3292, !3293}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3289, file: !105, line: 218, baseType: !995, size: 32)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3289, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3289, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3294 = !DILocation(line: 0, scope: !3280)
!3295 = !DILocation(line: 253, column: 2, scope: !3280)
!3296 = !DILocation(line: 253, column: 21, scope: !3280)
!3297 = !DILocation(line: 253, column: 27, scope: !3280)
!3298 = !DILocation(line: 255, column: 2, scope: !3280)
!3299 = !DILocation(line: 257, column: 10, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3280, file: !105, line: 257, column: 6)
!3301 = !DILocation(line: 257, column: 22, scope: !3300)
!3302 = !DILocation(line: 257, column: 16, scope: !3300)
!3303 = !DILocation(line: 257, column: 6, scope: !3280)
!3304 = !DILocation(line: 258, column: 3, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3300, file: !105, line: 257, column: 27)
!3306 = !DILocation(line: 258, column: 18, scope: !3305)
!3307 = !DILocation(line: 259, column: 2, scope: !3305)
!3308 = !DILocation(line: 262, column: 1, scope: !3280)
!3309 = !DILocation(line: 261, column: 2, scope: !3280)
!3310 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3311, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3314)
!3311 = !DISubroutineType(types: !3312)
!3312 = !{!103, !103, !3313}
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 32)
!3314 = !{!3315, !3316}
!3315 = !DILocalVariable(name: "c", arg: 1, scope: !3310, file: !105, line: 223, type: !103)
!3316 = !DILocalVariable(name: "ctx", arg: 2, scope: !3310, file: !105, line: 223, type: !3313)
!3317 = !DILocation(line: 0, scope: !3310)
!3318 = !DILocation(line: 225, column: 11, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3310, file: !105, line: 225, column: 6)
!3320 = !DILocation(line: 225, column: 15, scope: !3319)
!3321 = !DILocation(line: 0, scope: !3319)
!3322 = !DILocation(line: 225, column: 23, scope: !3319)
!3323 = !DILocation(line: 225, column: 45, scope: !3319)
!3324 = !DILocation(line: 225, column: 37, scope: !3319)
!3325 = !DILocation(line: 225, column: 6, scope: !3310)
!3326 = !DILocation(line: 226, column: 8, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3319, file: !105, line: 225, column: 50)
!3328 = !DILocation(line: 226, column: 13, scope: !3327)
!3329 = !DILocation(line: 227, column: 3, scope: !3327)
!3330 = !DILocation(line: 230, column: 29, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3310, file: !105, line: 230, column: 6)
!3332 = !DILocation(line: 230, column: 17, scope: !3331)
!3333 = !DILocation(line: 230, column: 6, scope: !3310)
!3334 = !DILocation(line: 231, column: 22, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3331, file: !105, line: 230, column: 34)
!3336 = !DILocation(line: 231, column: 3, scope: !3335)
!3337 = !DILocation(line: 231, column: 26, scope: !3335)
!3338 = !DILocation(line: 232, column: 2, scope: !3335)
!3339 = !DILocation(line: 233, column: 28, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3331, file: !105, line: 232, column: 9)
!3341 = !DILocation(line: 233, column: 22, scope: !3340)
!3342 = !DILocation(line: 233, column: 3, scope: !3340)
!3343 = !DILocation(line: 233, column: 26, scope: !3340)
!3344 = !DILocation(line: 237, column: 1, scope: !3310)
!3345 = distinct !DISubprogram(name: "z_thread_entry", scope: !3346, file: !3346, line: 30, type: !3347, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2346, retainedNodes: !3354)
!3346 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3347 = !DISubroutineType(types: !3348)
!3348 = !{null, !3349, !102, !102, !102}
!3349 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3350, line: 46, baseType: !3351)
!3350 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 32)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{null, !102, !102, !102}
!3354 = !{!3355, !3356, !3357, !3358}
!3355 = !DILocalVariable(name: "entry", arg: 1, scope: !3345, file: !3346, line: 30, type: !3349)
!3356 = !DILocalVariable(name: "p1", arg: 2, scope: !3345, file: !3346, line: 31, type: !102)
!3357 = !DILocalVariable(name: "p2", arg: 3, scope: !3345, file: !3346, line: 31, type: !102)
!3358 = !DILocalVariable(name: "p3", arg: 4, scope: !3345, file: !3346, line: 31, type: !102)
!3359 = !DILocation(line: 0, scope: !3345)
!3360 = !DILocation(line: 36, column: 2, scope: !3345)
!3361 = !DILocation(line: 38, column: 17, scope: !3345)
!3362 = !DILocation(line: 38, column: 2, scope: !3345)
!3363 = !DILocation(line: 45, column: 2, scope: !3345)
!3364 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !3365, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2346, retainedNodes: !322)
!3365 = !DISubroutineType(types: !3366)
!3366 = !{!3367}
!3367 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !3368)
!3368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3369, size: 32)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !3370)
!3370 = !{!3371, !3429, !3441, !3442, !3443, !3444, !3450, !3463}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3369, file: !211, line: 247, baseType: !3372, size: 384)
!3372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !3373)
!3373 = !{!3374, !3398, !3405, !3406, !3407, !3416, !3417, !3418}
!3374 = !DIDerivedType(tag: DW_TAG_member, scope: !3372, file: !211, line: 60, baseType: !3375, size: 64)
!3375 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3372, file: !211, line: 60, size: 64, elements: !3376)
!3376 = !{!3377, !3392}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3375, file: !211, line: 61, baseType: !3378, size: 64)
!3378 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !3379)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !3380)
!3380 = !{!3381, !3387}
!3381 = !DIDerivedType(tag: DW_TAG_member, scope: !3379, file: !221, line: 38, baseType: !3382, size: 32)
!3382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3379, file: !221, line: 38, size: 32, elements: !3383)
!3383 = !{!3384, !3386}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3382, file: !221, line: 39, baseType: !3385, size: 32)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3379, size: 32)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3382, file: !221, line: 40, baseType: !3385, size: 32)
!3387 = !DIDerivedType(tag: DW_TAG_member, scope: !3379, file: !221, line: 42, baseType: !3388, size: 32, offset: 32)
!3388 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3379, file: !221, line: 42, size: 32, elements: !3389)
!3389 = !{!3390, !3391}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3388, file: !221, line: 43, baseType: !3385, size: 32)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3388, file: !221, line: 44, baseType: !3385, size: 32)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3375, file: !211, line: 62, baseType: !3393, size: 64)
!3393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !3394)
!3394 = !{!3395}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3393, file: !237, line: 50, baseType: !3396, size: 64)
!3396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3397, size: 64, elements: !242)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 32)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3372, file: !211, line: 68, baseType: !3399, size: 32, offset: 64)
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3400, size: 32)
!3400 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !3401)
!3401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !3402)
!3402 = !{!3403}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3401, file: !247, line: 232, baseType: !3404, size: 64)
!3404 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !3379)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3372, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3372, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!3407 = !DIDerivedType(tag: DW_TAG_member, scope: !3372, file: !211, line: 90, baseType: !3408, size: 16, offset: 112)
!3408 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3372, file: !211, line: 90, size: 16, elements: !3409)
!3409 = !{!3410, !3415}
!3410 = !DIDerivedType(tag: DW_TAG_member, scope: !3408, file: !211, line: 91, baseType: !3411, size: 16)
!3411 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3408, file: !211, line: 91, size: 16, elements: !3412)
!3412 = !{!3413, !3414}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3411, file: !211, line: 96, baseType: !261, size: 8)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3411, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3408, file: !211, line: 100, baseType: !265, size: 16)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3372, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3372, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3372, file: !211, line: 131, baseType: !3419, size: 192, offset: 192)
!3419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !3420)
!3420 = !{!3421, !3422, !3428}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3419, file: !247, line: 245, baseType: !3378, size: 64)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3419, file: !247, line: 246, baseType: !3423, size: 32, offset: 64)
!3423 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !3424)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 32)
!3425 = !DISubroutineType(types: !3426)
!3426 = !{null, !3427}
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3419, size: 32)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3419, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3369, file: !211, line: 250, baseType: !3430, size: 288, offset: 384)
!3430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !3431)
!3431 = !{!3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3430, file: !284, line: 26, baseType: !121, size: 32)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3430, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3430, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3430, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3430, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3430, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3430, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3430, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3430, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3369, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3369, file: !211, line: 256, baseType: !3400, size: 64, offset: 704)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3369, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3369, file: !211, line: 300, baseType: !3445, size: 96, offset: 800)
!3445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !3446)
!3446 = !{!3447, !3448, !3449}
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3445, file: !211, line: 153, baseType: !22, size: 32)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3445, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3445, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3369, file: !211, line: 325, baseType: !3451, size: 32, offset: 896)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 32)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !3453)
!3453 = !{!3454, !3460, !3461}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3452, file: !307, line: 5074, baseType: !3455, size: 96)
!3455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !3456)
!3456 = !{!3457, !3458, !3459}
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3455, file: !311, line: 57, baseType: !314, size: 32)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3455, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3455, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3452, file: !307, line: 5075, baseType: !3400, size: 64, offset: 96)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3452, file: !307, line: 5076, baseType: !3462, offset: 160)
!3462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3369, file: !211, line: 343, baseType: !3464, size: 64, offset: 928)
!3464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !3465)
!3465 = !{!3466, !3467}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3464, file: !284, line: 63, baseType: !121, size: 32)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3464, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!3468 = !DILocation(line: 535, column: 9, scope: !3364)
!3469 = !DILocation(line: 535, column: 2, scope: !3364)
!3470 = distinct !DISubprogram(name: "k_thread_abort", scope: !3079, file: !3079, line: 188, type: !3471, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2346, retainedNodes: !3473)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{null, !3367}
!3473 = !{!3474}
!3474 = !DILocalVariable(name: "thread", arg: 1, scope: !3470, file: !3079, line: 188, type: !3367)
!3475 = !DILocation(line: 0, scope: !3470)
!3476 = !DILocation(line: 197, column: 2, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3470, file: !3079, line: 197, column: 2)
!3478 = !{i64 2155057730}
!3479 = !DILocation(line: 198, column: 2, scope: !3470)
!3480 = !DILocation(line: 199, column: 1, scope: !3470)
!3481 = distinct !DISubprogram(name: "z_current_get", scope: !3079, file: !3079, line: 173, type: !3365, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2346, retainedNodes: !322)
!3482 = !DILocation(line: 180, column: 2, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3481, file: !3079, line: 180, column: 2)
!3484 = !{i64 2155057662}
!3485 = !DILocation(line: 181, column: 9, scope: !3481)
!3486 = !DILocation(line: 181, column: 2, scope: !3481)
!3487 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2352, file: !2352, line: 1338, type: !3488, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !3496)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!103, !3219, !102, !144, !3490, !121}
!3490 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3183, line: 99, baseType: !3491)
!3491 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3183, line: 40, baseType: !3492)
!3492 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2352, baseType: !3493)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3494)
!3494 = !{!3495}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3493, file: !2352, baseType: !102, size: 32)
!3496 = !{!3497, !3498, !3499, !3500, !3501, !3502, !3506, !3507, !3508, !3510, !3515, !3560, !3563, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3575, !3576, !3577, !3581, !3584, !3586, !3589, !3590, !3591, !3596, !3602, !3605, !3609, !3615, !3619, !3622, !3624, !3627}
!3497 = !DILocalVariable(name: "out", arg: 1, scope: !3487, file: !2352, line: 1338, type: !3219)
!3498 = !DILocalVariable(name: "ctx", arg: 2, scope: !3487, file: !2352, line: 1338, type: !102)
!3499 = !DILocalVariable(name: "fp", arg: 3, scope: !3487, file: !2352, line: 1338, type: !144)
!3500 = !DILocalVariable(name: "ap", arg: 4, scope: !3487, file: !2352, line: 1339, type: !3490)
!3501 = !DILocalVariable(name: "flags", arg: 5, scope: !3487, file: !2352, line: 1339, type: !121)
!3502 = !DILocalVariable(name: "buf", scope: !3487, file: !2352, line: 1341, type: !3503)
!3503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 176, elements: !3504)
!3504 = !{!3505}
!3505 = !DISubrange(count: 22)
!3506 = !DILocalVariable(name: "count", scope: !3487, file: !2352, line: 1342, type: !200)
!3507 = !DILocalVariable(name: "sint", scope: !3487, file: !2352, line: 1343, type: !2371)
!3508 = !DILocalVariable(name: "tagged_ap", scope: !3487, file: !2352, line: 1345, type: !3509)
!3509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!3510 = !DILocalVariable(name: "rc", scope: !3511, file: !2352, line: 1377, type: !103)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !2352, line: 1377, column: 4)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !2352, line: 1376, column: 19)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1376, column: 7)
!3514 = distinct !DILexicalBlock(scope: !3487, file: !2352, line: 1375, column: 19)
!3515 = !DILocalVariable(name: "state", scope: !3514, file: !2352, line: 1395, type: !3516)
!3516 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3487, file: !2352, line: 1392, size: 192, elements: !3517)
!3517 = !{!3518, !3528}
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3516, file: !2352, line: 1393, baseType: !3519, size: 64)
!3519 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2352, line: 166, size: 64, elements: !3520)
!3520 = !{!3521, !3522, !3523, !3525, !3527}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3519, file: !2352, line: 168, baseType: !2371, size: 64)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3519, file: !2352, line: 171, baseType: !2374, size: 64)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3519, file: !2352, line: 174, baseType: !3524, size: 64)
!3524 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3519, file: !2352, line: 177, baseType: !3526, size: 64)
!3526 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3519, file: !2352, line: 180, baseType: !102, size: 32)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3516, file: !2352, line: 1394, baseType: !3529, size: 96, offset: 64)
!3529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2352, line: 189, size: 96, elements: !3530)
!3530 = !{!3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3555}
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3529, file: !2352, line: 191, baseType: !157, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3529, file: !2352, line: 194, baseType: !157, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3529, file: !2352, line: 197, baseType: !157, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3529, file: !2352, line: 200, baseType: !157, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3529, file: !2352, line: 203, baseType: !157, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3529, file: !2352, line: 206, baseType: !157, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3529, file: !2352, line: 209, baseType: !157, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3529, file: !2352, line: 212, baseType: !157, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3529, file: !2352, line: 219, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3529, file: !2352, line: 222, baseType: !157, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3529, file: !2352, line: 229, baseType: !157, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3529, file: !2352, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3529, file: !2352, line: 238, baseType: !157, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3529, file: !2352, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3529, file: !2352, line: 244, baseType: !157, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3529, file: !2352, line: 247, baseType: !157, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3529, file: !2352, line: 252, baseType: !157, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3529, file: !2352, line: 257, baseType: !157, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3529, file: !2352, line: 260, baseType: !155, size: 8, offset: 24)
!3550 = !DIDerivedType(tag: DW_TAG_member, scope: !3529, file: !2352, line: 262, baseType: !3551, size: 32, offset: 32)
!3551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3529, file: !2352, line: 262, size: 32, elements: !3552)
!3552 = !{!3553, !3554}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3551, file: !2352, line: 267, baseType: !103, size: 32)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3551, file: !2352, line: 289, baseType: !103, size: 32)
!3555 = !DIDerivedType(tag: DW_TAG_member, scope: !3529, file: !2352, line: 292, baseType: !3556, size: 32, offset: 64)
!3556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3529, file: !2352, line: 292, size: 32, elements: !3557)
!3557 = !{!3558, !3559}
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3556, file: !2352, line: 297, baseType: !103, size: 32)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3556, file: !2352, line: 306, baseType: !103, size: 32)
!3560 = !DILocalVariable(name: "conv", scope: !3514, file: !2352, line: 1400, type: !3561)
!3561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3562)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 32)
!3563 = !DILocalVariable(name: "value", scope: !3514, file: !2352, line: 1401, type: !3564)
!3564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3565)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 32)
!3566 = !DILocalVariable(name: "sp", scope: !3514, file: !2352, line: 1402, type: !144)
!3567 = !DILocalVariable(name: "width", scope: !3514, file: !2352, line: 1403, type: !103)
!3568 = !DILocalVariable(name: "precision", scope: !3514, file: !2352, line: 1404, type: !103)
!3569 = !DILocalVariable(name: "bps", scope: !3514, file: !2352, line: 1405, type: !144)
!3570 = !DILocalVariable(name: "bpe", scope: !3514, file: !2352, line: 1406, type: !144)
!3571 = !DILocalVariable(name: "sign", scope: !3514, file: !2352, line: 1407, type: !146)
!3572 = !DILocalVariable(name: "arg", scope: !3573, file: !2352, line: 1432, type: !103)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !2352, line: 1431, column: 24)
!3574 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1431, column: 7)
!3575 = !DILocalVariable(name: "specifier_cat", scope: !3514, file: !2352, line: 1468, type: !2351)
!3576 = !DILocalVariable(name: "length_mod", scope: !3514, file: !2352, line: 1470, type: !2359)
!3577 = !DILocalVariable(name: "rc", scope: !3578, file: !2352, line: 1575, type: !103)
!3578 = distinct !DILexicalBlock(scope: !3579, file: !2352, line: 1575, column: 4)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !2352, line: 1574, column: 43)
!3580 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1574, column: 7)
!3581 = !DILocalVariable(name: "rc", scope: !3582, file: !2352, line: 1584, type: !103)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !2352, line: 1584, column: 4)
!3583 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1582, column: 28)
!3584 = !DILocalVariable(name: "len", scope: !3585, file: !2352, line: 1589, type: !200)
!3585 = distinct !DILexicalBlock(scope: !3583, file: !2352, line: 1586, column: 13)
!3586 = !DILocalVariable(name: "len", scope: !3587, file: !2352, line: 1641, type: !200)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !2352, line: 1640, column: 24)
!3588 = distinct !DILexicalBlock(scope: !3583, file: !2352, line: 1640, column: 8)
!3589 = !DILocalVariable(name: "nj_len", scope: !3514, file: !2352, line: 1722, type: !200)
!3590 = !DILocalVariable(name: "pad_len", scope: !3514, file: !2352, line: 1723, type: !103)
!3591 = !DILocalVariable(name: "pad", scope: !3592, file: !2352, line: 1751, type: !146)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !2352, line: 1750, column: 26)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !2352, line: 1750, column: 8)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !2352, line: 1747, column: 18)
!3595 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1747, column: 7)
!3596 = !DILocalVariable(name: "rc", scope: !3597, file: !2352, line: 1758, type: !103)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !2352, line: 1758, column: 7)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !2352, line: 1757, column: 21)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !2352, line: 1757, column: 10)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !2352, line: 1756, column: 26)
!3601 = distinct !DILexicalBlock(scope: !3592, file: !2352, line: 1756, column: 9)
!3602 = !DILocalVariable(name: "rc", scope: !3603, file: !2352, line: 1765, type: !103)
!3603 = distinct !DILexicalBlock(scope: !3604, file: !2352, line: 1765, column: 6)
!3604 = distinct !DILexicalBlock(scope: !3592, file: !2352, line: 1764, column: 25)
!3605 = !DILocalVariable(name: "rc", scope: !3606, file: !2352, line: 1774, type: !103)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !2352, line: 1774, column: 4)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !2352, line: 1773, column: 18)
!3608 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1773, column: 7)
!3609 = !DILocalVariable(name: "rc", scope: !3610, file: !2352, line: 1819, type: !103)
!3610 = distinct !DILexicalBlock(scope: !3611, file: !2352, line: 1819, column: 5)
!3611 = distinct !DILexicalBlock(scope: !3612, file: !2352, line: 1818, column: 44)
!3612 = distinct !DILexicalBlock(scope: !3613, file: !2352, line: 1818, column: 8)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !2352, line: 1817, column: 10)
!3614 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1777, column: 7)
!3615 = !DILocalVariable(name: "rc", scope: !3616, file: !2352, line: 1823, type: !103)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !2352, line: 1823, column: 5)
!3617 = distinct !DILexicalBlock(scope: !3618, file: !2352, line: 1822, column: 26)
!3618 = distinct !DILexicalBlock(scope: !3613, file: !2352, line: 1822, column: 8)
!3619 = !DILocalVariable(name: "rc", scope: !3620, file: !2352, line: 1828, type: !103)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !2352, line: 1828, column: 5)
!3621 = distinct !DILexicalBlock(scope: !3613, file: !2352, line: 1827, column: 26)
!3622 = !DILocalVariable(name: "rc", scope: !3623, file: !2352, line: 1831, type: !103)
!3623 = distinct !DILexicalBlock(scope: !3613, file: !2352, line: 1831, column: 4)
!3624 = !DILocalVariable(name: "rc", scope: !3625, file: !2352, line: 1836, type: !103)
!3625 = distinct !DILexicalBlock(scope: !3626, file: !2352, line: 1836, column: 4)
!3626 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1835, column: 21)
!3627 = !DILabel(scope: !3583, name: "prec_int_pad0", file: !2352, line: 1634)
!3628 = !DILocation(line: 0, scope: !3487)
!3629 = !DILocation(line: 1341, column: 2, scope: !3487)
!3630 = !DILocation(line: 1341, column: 7, scope: !3487)
!3631 = !DILocation(line: 1375, column: 2, scope: !3487)
!3632 = !DILocation(line: 1342, column: 9, scope: !3487)
!3633 = !DILocation(line: 1375, column: 9, scope: !3487)
!3634 = !DILocation(line: 1377, column: 4, scope: !3511)
!3635 = !DILocation(line: 0, scope: !3511)
!3636 = !DILocation(line: 1377, column: 4, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3511, file: !2352, line: 1377, column: 4)
!3638 = distinct !{!3638, !3631, !3639}
!3639 = !DILocation(line: 1839, column: 2, scope: !3487)
!3640 = !DILocation(line: 1392, column: 3, scope: !3514)
!3641 = !DILocation(line: 1395, column: 5, scope: !3514)
!3642 = !DILocation(line: 0, scope: !3514)
!3643 = !DILocation(line: 1409, column: 8, scope: !3514)
!3644 = !DILocation(line: 1414, column: 13, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1414, column: 7)
!3646 = !DILocation(line: 1414, column: 7, scope: !3514)
!3647 = !DILocation(line: 1415, column: 12, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3645, file: !2352, line: 1414, column: 25)
!3649 = !DILocation(line: 1417, column: 14, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3648, file: !2352, line: 1417, column: 8)
!3651 = !DILocation(line: 1417, column: 8, scope: !3648)
!3652 = !DILocation(line: 1418, column: 21, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3650, file: !2352, line: 1417, column: 19)
!3654 = !DILocation(line: 1419, column: 13, scope: !3653)
!3655 = !DILocation(line: 1420, column: 4, scope: !3653)
!3656 = !DILocation(line: 1421, column: 20, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3645, file: !2352, line: 1421, column: 14)
!3658 = !DILocation(line: 1421, column: 14, scope: !3645)
!3659 = !DILocation(line: 1431, column: 13, scope: !3574)
!3660 = !DILocation(line: 1431, column: 7, scope: !3514)
!3661 = !DILocation(line: 1432, column: 14, scope: !3573)
!3662 = !DILocation(line: 0, scope: !3573)
!3663 = !DILocation(line: 1434, column: 12, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3573, file: !2352, line: 1434, column: 8)
!3665 = !DILocation(line: 1434, column: 8, scope: !3573)
!3666 = !DILocation(line: 1435, column: 24, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3664, file: !2352, line: 1434, column: 17)
!3668 = !DILocation(line: 1436, column: 4, scope: !3667)
!3669 = !DILocation(line: 1439, column: 20, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3574, file: !2352, line: 1439, column: 14)
!3671 = !DILocation(line: 1439, column: 14, scope: !3574)
!3672 = !DILocation(line: 1469, column: 37, scope: !3514)
!3673 = !DILocation(line: 1448, column: 20, scope: !3514)
!3674 = !DILocation(line: 1449, column: 22, scope: !3514)
!3675 = !DILocation(line: 1471, column: 34, scope: !3514)
!3676 = !DILocation(line: 1478, column: 7, scope: !3514)
!3677 = !DILocation(line: 1479, column: 4, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !2352, line: 1478, column: 40)
!3679 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1478, column: 7)
!3680 = !DILocation(line: 1484, column: 19, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3678, file: !2352, line: 1479, column: 24)
!3682 = !DILocation(line: 1484, column: 17, scope: !3681)
!3683 = !DILocation(line: 1485, column: 5, scope: !3681)
!3684 = !DILocation(line: 1492, column: 20, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !2352, line: 1491, column: 12)
!3686 = distinct !DILexicalBlock(scope: !3681, file: !2352, line: 1487, column: 9)
!3687 = !DILocation(line: 1492, column: 18, scope: !3685)
!3688 = !DILocation(line: 1494, column: 5, scope: !3681)
!3689 = !DILocation(line: 1497, column: 23, scope: !3681)
!3690 = !DILocation(line: 1496, column: 17, scope: !3681)
!3691 = !DILocation(line: 1498, column: 5, scope: !3681)
!3692 = !DILocation(line: 1501, column: 23, scope: !3681)
!3693 = !DILocation(line: 1500, column: 17, scope: !3681)
!3694 = !DILocation(line: 1502, column: 5, scope: !3681)
!3695 = !DILocation(line: 1513, column: 23, scope: !3681)
!3696 = !DILocation(line: 1513, column: 6, scope: !3681)
!3697 = !DILocation(line: 1512, column: 17, scope: !3681)
!3698 = !DILocation(line: 1514, column: 5, scope: !3681)
!3699 = !DILocation(line: 0, scope: !3681)
!3700 = !DILocation(line: 1516, column: 8, scope: !3678)
!3701 = !DILocation(line: 1517, column: 19, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3703, file: !2352, line: 1516, column: 33)
!3703 = distinct !DILexicalBlock(scope: !3678, file: !2352, line: 1516, column: 8)
!3704 = !DILocation(line: 1517, column: 17, scope: !3702)
!3705 = !DILocation(line: 1518, column: 4, scope: !3702)
!3706 = !DILocation(line: 1519, column: 19, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3708, file: !2352, line: 1518, column: 39)
!3708 = distinct !DILexicalBlock(scope: !3703, file: !2352, line: 1518, column: 15)
!3709 = !DILocation(line: 1519, column: 17, scope: !3707)
!3710 = !DILocation(line: 1520, column: 4, scope: !3707)
!3711 = !DILocation(line: 1522, column: 4, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3713, file: !2352, line: 1521, column: 47)
!3713 = distinct !DILexicalBlock(scope: !3679, file: !2352, line: 1521, column: 14)
!3714 = !DILocation(line: 1527, column: 19, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3712, file: !2352, line: 1522, column: 24)
!3716 = !DILocation(line: 1527, column: 17, scope: !3715)
!3717 = !DILocation(line: 1528, column: 5, scope: !3715)
!3718 = !DILocation(line: 0, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3715, file: !2352, line: 1530, column: 9)
!3720 = !DILocation(line: 1540, column: 23, scope: !3715)
!3721 = !DILocation(line: 1539, column: 17, scope: !3715)
!3722 = !DILocation(line: 1542, column: 5, scope: !3715)
!3723 = !DILocation(line: 1545, column: 23, scope: !3715)
!3724 = !DILocation(line: 1544, column: 17, scope: !3715)
!3725 = !DILocation(line: 1547, column: 5, scope: !3715)
!3726 = !DILocation(line: 1551, column: 23, scope: !3715)
!3727 = !DILocation(line: 1551, column: 6, scope: !3715)
!3728 = !DILocation(line: 1550, column: 17, scope: !3715)
!3729 = !DILocation(line: 1552, column: 5, scope: !3715)
!3730 = !DILocation(line: 0, scope: !3715)
!3731 = !DILocation(line: 1554, column: 8, scope: !3712)
!3732 = !DILocation(line: 1555, column: 19, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3734, file: !2352, line: 1554, column: 33)
!3734 = distinct !DILexicalBlock(scope: !3712, file: !2352, line: 1554, column: 8)
!3735 = !DILocation(line: 1555, column: 17, scope: !3733)
!3736 = !DILocation(line: 1556, column: 4, scope: !3733)
!3737 = !DILocation(line: 1557, column: 19, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3739, file: !2352, line: 1556, column: 39)
!3739 = distinct !DILexicalBlock(scope: !3734, file: !2352, line: 1556, column: 15)
!3740 = !DILocation(line: 1557, column: 17, scope: !3738)
!3741 = !DILocation(line: 1558, column: 4, scope: !3738)
!3742 = !DILocation(line: 0, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !2352, line: 1560, column: 8)
!3744 = distinct !DILexicalBlock(scope: !3745, file: !2352, line: 1559, column: 45)
!3745 = distinct !DILexicalBlock(scope: !3713, file: !2352, line: 1559, column: 14)
!3746 = !DILocation(line: 1566, column: 17, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3748, file: !2352, line: 1565, column: 46)
!3748 = distinct !DILexicalBlock(scope: !3745, file: !2352, line: 1565, column: 14)
!3749 = !DILocation(line: 1566, column: 15, scope: !3747)
!3750 = !DILocation(line: 1567, column: 3, scope: !3747)
!3751 = !DILocation(line: 1574, column: 21, scope: !3580)
!3752 = !DILocation(line: 1575, column: 4, scope: !3578)
!3753 = !DILocation(line: 0, scope: !3578)
!3754 = !DILocation(line: 1575, column: 4, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3578, file: !2352, line: 1575, column: 4)
!3756 = !DILocation(line: 1582, column: 17, scope: !3514)
!3757 = !DILocation(line: 1582, column: 3, scope: !3514)
!3758 = !DILocation(line: 1584, column: 4, scope: !3582)
!3759 = !DILocation(line: 0, scope: !3582)
!3760 = !DILocation(line: 1584, column: 4, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3582, file: !2352, line: 1584, column: 4)
!3762 = !DILocation(line: 1587, column: 31, scope: !3585)
!3763 = !DILocation(line: 1591, column: 18, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3585, file: !2352, line: 1591, column: 8)
!3765 = !DILocation(line: 1591, column: 8, scope: !3585)
!3766 = !DILocation(line: 1592, column: 11, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3764, file: !2352, line: 1591, column: 24)
!3768 = !DILocation(line: 0, scope: !3585)
!3769 = !DILocation(line: 1593, column: 4, scope: !3767)
!3770 = !DILocation(line: 1594, column: 11, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3764, file: !2352, line: 1593, column: 11)
!3772 = !DILocation(line: 1604, column: 51, scope: !3583)
!3773 = !DILocation(line: 1604, column: 13, scope: !3583)
!3774 = !DILocation(line: 1604, column: 11, scope: !3583)
!3775 = !DILocation(line: 1606, column: 4, scope: !3583)
!3776 = !DILocation(line: 1609, column: 14, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3583, file: !2352, line: 1609, column: 8)
!3778 = !DILocation(line: 1609, column: 8, scope: !3583)
!3779 = !DILocation(line: 1619, column: 18, scope: !3583)
!3780 = !DILocation(line: 1620, column: 13, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3583, file: !2352, line: 1620, column: 8)
!3782 = !DILocation(line: 1620, column: 8, scope: !3583)
!3783 = !DILocation(line: 1622, column: 36, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3781, file: !2352, line: 1620, column: 18)
!3785 = !DILocation(line: 1622, column: 17, scope: !3784)
!3786 = !DILocation(line: 1623, column: 4, scope: !3784)
!3787 = !DILocation(line: 1632, column: 29, scope: !3583)
!3788 = !DILocation(line: 1632, column: 10, scope: !3583)
!3789 = !DILocation(line: 1632, column: 4, scope: !3583)
!3790 = !DILocation(line: 1407, column: 8, scope: !3514)
!3791 = !DILocation(line: 0, scope: !3583)
!3792 = !DILocation(line: 1634, column: 3, scope: !3583)
!3793 = !DILocation(line: 1640, column: 18, scope: !3588)
!3794 = !DILocation(line: 1640, column: 8, scope: !3583)
!3795 = !DILocation(line: 1729, column: 13, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1729, column: 7)
!3797 = !DILocation(line: 1641, column: 22, scope: !3587)
!3798 = !DILocation(line: 0, scope: !3587)
!3799 = !DILocation(line: 1646, column: 21, scope: !3587)
!3800 = !DILocation(line: 1649, column: 13, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3587, file: !2352, line: 1649, column: 9)
!3802 = !DILocation(line: 1649, column: 9, scope: !3587)
!3803 = !DILocation(line: 1650, column: 35, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3801, file: !2352, line: 1649, column: 34)
!3805 = !DILocation(line: 1650, column: 23, scope: !3804)
!3806 = !DILocation(line: 1651, column: 5, scope: !3804)
!3807 = !DILocation(line: 1660, column: 15, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3583, file: !2352, line: 1660, column: 8)
!3809 = !DILocation(line: 1660, column: 19, scope: !3808)
!3810 = !DILocation(line: 1660, column: 8, scope: !3583)
!3811 = !DILocation(line: 1661, column: 23, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3808, file: !2352, line: 1660, column: 28)
!3813 = !DILocation(line: 1661, column: 11, scope: !3812)
!3814 = !DILocation(line: 1665, column: 22, scope: !3812)
!3815 = !DILocation(line: 1666, column: 21, scope: !3812)
!3816 = !DILocation(line: 1668, column: 5, scope: !3812)
!3817 = !DILocation(line: 1677, column: 30, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3819, file: !2352, line: 1676, column: 49)
!3819 = distinct !DILexicalBlock(scope: !3583, file: !2352, line: 1676, column: 8)
!3820 = !DILocation(line: 1677, column: 5, scope: !3818)
!3821 = !DILocation(line: 1680, column: 4, scope: !3583)
!3822 = !DILocation(line: 0, scope: !3764)
!3823 = !DILocation(line: 1597, column: 14, scope: !3585)
!3824 = !DILocation(line: 1699, column: 11, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1699, column: 7)
!3826 = !DILocation(line: 1699, column: 7, scope: !3514)
!3827 = !DILocation(line: 1725, column: 7, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1725, column: 7)
!3829 = !DILocation(line: 1725, column: 12, scope: !3828)
!3830 = !DILocation(line: 1747, column: 13, scope: !3595)
!3831 = !DILocation(line: 1747, column: 7, scope: !3514)
!3832 = !DILocation(line: 1722, column: 24, scope: !3514)
!3833 = !DILocation(line: 1725, column: 7, scope: !3514)
!3834 = !DILocation(line: 1729, column: 7, scope: !3514)
!3835 = !DILocation(line: 1736, column: 13, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3514, file: !2352, line: 1736, column: 7)
!3837 = !DILocation(line: 1735, column: 19, scope: !3514)
!3838 = !DILocation(line: 1736, column: 7, scope: !3514)
!3839 = !DILocation(line: 1748, column: 10, scope: !3594)
!3840 = !DILocation(line: 1750, column: 15, scope: !3593)
!3841 = !DILocation(line: 1750, column: 8, scope: !3594)
!3842 = !DILocation(line: 0, scope: !3592)
!3843 = !DILocation(line: 1756, column: 15, scope: !3601)
!3844 = !DILocation(line: 1756, column: 9, scope: !3592)
!3845 = !DILocation(line: 1758, column: 7, scope: !3597)
!3846 = !DILocation(line: 0, scope: !3597)
!3847 = !DILocation(line: 1758, column: 7, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3597, file: !2352, line: 1758, column: 7)
!3849 = !DILocation(line: 1764, column: 5, scope: !3592)
!3850 = !DILocation(line: 0, scope: !3594)
!3851 = !DILocation(line: 1764, column: 20, scope: !3592)
!3852 = !DILocation(line: 1764, column: 17, scope: !3592)
!3853 = !DILocation(line: 1765, column: 6, scope: !3603)
!3854 = !DILocation(line: 0, scope: !3603)
!3855 = !DILocation(line: 1765, column: 6, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3603, file: !2352, line: 1765, column: 6)
!3857 = distinct !{!3857, !3849, !3858}
!3858 = !DILocation(line: 1766, column: 5, scope: !3592)
!3859 = !DILocation(line: 1773, column: 12, scope: !3608)
!3860 = !DILocation(line: 1773, column: 7, scope: !3514)
!3861 = !DILocation(line: 1773, column: 7, scope: !3608)
!3862 = !DILocation(line: 1774, column: 4, scope: !3606)
!3863 = !DILocation(line: 0, scope: !3606)
!3864 = !DILocation(line: 1774, column: 4, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3606, file: !2352, line: 1774, column: 4)
!3866 = !DILocation(line: 1818, column: 8, scope: !3612)
!3867 = !DILocation(line: 1818, column: 27, scope: !3612)
!3868 = !DILocation(line: 1818, column: 25, scope: !3612)
!3869 = !DILocation(line: 1818, column: 8, scope: !3613)
!3870 = !DILocation(line: 1819, column: 5, scope: !3610)
!3871 = !DILocation(line: 0, scope: !3610)
!3872 = !DILocation(line: 1819, column: 5, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3610, file: !2352, line: 1819, column: 5)
!3874 = !DILocation(line: 1822, column: 14, scope: !3618)
!3875 = !DILocation(line: 1822, column: 8, scope: !3613)
!3876 = !DILocation(line: 1823, column: 5, scope: !3616)
!3877 = !DILocation(line: 0, scope: !3616)
!3878 = !DILocation(line: 1823, column: 5, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3616, file: !2352, line: 1823, column: 5)
!3880 = !DILocation(line: 1826, column: 20, scope: !3613)
!3881 = !DILocation(line: 1827, column: 4, scope: !3613)
!3882 = !DILocation(line: 0, scope: !3613)
!3883 = !DILocation(line: 1827, column: 21, scope: !3613)
!3884 = !DILocation(line: 1827, column: 18, scope: !3613)
!3885 = !DILocation(line: 1828, column: 5, scope: !3620)
!3886 = !DILocation(line: 0, scope: !3620)
!3887 = !DILocation(line: 1828, column: 5, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3620, file: !2352, line: 1828, column: 5)
!3889 = distinct !{!3889, !3881, !3890}
!3890 = !DILocation(line: 1829, column: 4, scope: !3613)
!3891 = !DILocation(line: 1831, column: 4, scope: !3623)
!3892 = !DILocation(line: 0, scope: !3623)
!3893 = !DILocation(line: 1831, column: 4, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3623, file: !2352, line: 1831, column: 4)
!3895 = !DILocation(line: 1835, column: 16, scope: !3514)
!3896 = !DILocation(line: 1835, column: 3, scope: !3514)
!3897 = !DILocation(line: 1836, column: 4, scope: !3625)
!3898 = !DILocation(line: 0, scope: !3625)
!3899 = !DILocation(line: 1836, column: 4, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3625, file: !2352, line: 1836, column: 4)
!3901 = !DILocation(line: 1837, column: 4, scope: !3626)
!3902 = distinct !{!3902, !3896, !3903}
!3903 = !DILocation(line: 1838, column: 3, scope: !3514)
!3904 = !DILocation(line: 1844, column: 1, scope: !3487)
!3905 = distinct !DISubprogram(name: "extract_conversion", scope: !2352, file: !2352, line: 642, type: !3906, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !3908)
!3906 = !DISubroutineType(types: !3907)
!3907 = !{!144, !3562, !144}
!3908 = !{!3909, !3910}
!3909 = !DILocalVariable(name: "conv", arg: 1, scope: !3905, file: !2352, line: 642, type: !3562)
!3910 = !DILocalVariable(name: "sp", arg: 2, scope: !3905, file: !2352, line: 643, type: !144)
!3911 = !DILocation(line: 0, scope: !3905)
!3912 = !DILocation(line: 645, column: 10, scope: !3905)
!3913 = !DILocation(line: 653, column: 2, scope: !3905)
!3914 = !DILocation(line: 654, column: 6, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3905, file: !2352, line: 654, column: 6)
!3916 = !DILocation(line: 654, column: 10, scope: !3915)
!3917 = !DILocation(line: 654, column: 6, scope: !3905)
!3918 = !DILocation(line: 655, column: 24, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3915, file: !2352, line: 654, column: 18)
!3920 = !DILocation(line: 655, column: 19, scope: !3919)
!3921 = !DILocation(line: 656, column: 3, scope: !3919)
!3922 = !DILocation(line: 659, column: 7, scope: !3905)
!3923 = !DILocation(line: 660, column: 7, scope: !3905)
!3924 = !DILocation(line: 661, column: 7, scope: !3905)
!3925 = !DILocation(line: 662, column: 7, scope: !3905)
!3926 = !DILocation(line: 663, column: 7, scope: !3905)
!3927 = !DILocation(line: 665, column: 2, scope: !3905)
!3928 = !DILocation(line: 666, column: 1, scope: !3905)
!3929 = distinct !DISubprogram(name: "outs", scope: !2352, file: !2352, line: 1319, type: !3930, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !3932)
!3930 = !DISubroutineType(types: !3931)
!3931 = !{!103, !3219, !102, !144, !144}
!3932 = !{!3933, !3934, !3935, !3936, !3937, !3938}
!3933 = !DILocalVariable(name: "out", arg: 1, scope: !3929, file: !2352, line: 1319, type: !3219)
!3934 = !DILocalVariable(name: "ctx", arg: 2, scope: !3929, file: !2352, line: 1320, type: !102)
!3935 = !DILocalVariable(name: "sp", arg: 3, scope: !3929, file: !2352, line: 1321, type: !144)
!3936 = !DILocalVariable(name: "ep", arg: 4, scope: !3929, file: !2352, line: 1322, type: !144)
!3937 = !DILocalVariable(name: "count", scope: !3929, file: !2352, line: 1324, type: !200)
!3938 = !DILocalVariable(name: "rc", scope: !3939, file: !2352, line: 1327, type: !103)
!3939 = distinct !DILexicalBlock(scope: !3929, file: !2352, line: 1326, column: 45)
!3940 = !DILocation(line: 0, scope: !3929)
!3941 = !DILocation(line: 1326, column: 2, scope: !3929)
!3942 = !DILocation(line: 1324, column: 9, scope: !3929)
!3943 = !DILocation(line: 1326, column: 13, scope: !3929)
!3944 = !DILocation(line: 1326, column: 19, scope: !3929)
!3945 = !DILocation(line: 1327, column: 21, scope: !3939)
!3946 = !DILocation(line: 1326, column: 36, scope: !3929)
!3947 = !DILocation(line: 1326, column: 39, scope: !3929)
!3948 = !DILocation(line: 1327, column: 24, scope: !3939)
!3949 = !DILocation(line: 1327, column: 16, scope: !3939)
!3950 = !DILocation(line: 1327, column: 12, scope: !3939)
!3951 = !DILocation(line: 0, scope: !3939)
!3952 = !DILocation(line: 1329, column: 10, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3939, file: !2352, line: 1329, column: 7)
!3954 = !DILocation(line: 1329, column: 7, scope: !3939)
!3955 = distinct !{!3955, !3941, !3956}
!3956 = !DILocation(line: 1333, column: 2, scope: !3929)
!3957 = !DILocation(line: 1336, column: 1, scope: !3929)
!3958 = distinct !DISubprogram(name: "encode_uint", scope: !2352, file: !2352, line: 788, type: !3959, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !3961)
!3959 = !DISubroutineType(types: !3960)
!3960 = !{!995, !2374, !3562, !995, !144}
!3961 = !{!3962, !3963, !3964, !3965, !3966, !3967, !3969, !3970}
!3962 = !DILocalVariable(name: "value", arg: 1, scope: !3958, file: !2352, line: 788, type: !2374)
!3963 = !DILocalVariable(name: "conv", arg: 2, scope: !3958, file: !2352, line: 789, type: !3562)
!3964 = !DILocalVariable(name: "bps", arg: 3, scope: !3958, file: !2352, line: 790, type: !995)
!3965 = !DILocalVariable(name: "bpe", arg: 4, scope: !3958, file: !2352, line: 791, type: !144)
!3966 = !DILocalVariable(name: "upcase", scope: !3958, file: !2352, line: 793, type: !157)
!3967 = !DILocalVariable(name: "radix", scope: !3958, file: !2352, line: 794, type: !3968)
!3968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!3969 = !DILocalVariable(name: "bp", scope: !3958, file: !2352, line: 795, type: !995)
!3970 = !DILocalVariable(name: "lsv", scope: !3971, file: !2352, line: 798, type: !32)
!3971 = distinct !DILexicalBlock(scope: !3958, file: !2352, line: 797, column: 5)
!3972 = !DILocation(line: 0, scope: !3958)
!3973 = !DILocation(line: 793, column: 35, scope: !3958)
!3974 = !DILocation(line: 793, column: 24, scope: !3958)
!3975 = !DILocation(line: 793, column: 16, scope: !3958)
!3976 = !DILocation(line: 794, column: 29, scope: !3958)
!3977 = !DILocation(line: 795, column: 24, scope: !3958)
!3978 = !DILocation(line: 795, column: 17, scope: !3958)
!3979 = !DILocation(line: 797, column: 2, scope: !3958)
!3980 = !DILocation(line: 802, column: 9, scope: !3971)
!3981 = !DILocation(line: 798, column: 22, scope: !3971)
!3982 = !DILocation(line: 0, scope: !3971)
!3983 = !DILocation(line: 800, column: 16, scope: !3971)
!3984 = !DILocation(line: 800, column: 11, scope: !3971)
!3985 = !DILocation(line: 800, column: 4, scope: !3971)
!3986 = !DILocation(line: 800, column: 9, scope: !3971)
!3987 = !DILocation(line: 803, column: 18, scope: !3958)
!3988 = !DILocation(line: 803, column: 24, scope: !3958)
!3989 = !DILocation(line: 803, column: 2, scope: !3971)
!3990 = distinct !{!3990, !3979, !3991}
!3991 = !DILocation(line: 803, column: 37, scope: !3958)
!3992 = !DILocation(line: 808, column: 12, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3958, file: !2352, line: 808, column: 6)
!3994 = !DILocation(line: 808, column: 6, scope: !3958)
!3995 = !DILocation(line: 809, column: 7, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3993, file: !2352, line: 808, column: 23)
!3997 = !DILocation(line: 813, column: 3, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3999, file: !2352, line: 811, column: 27)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !2352, line: 811, column: 14)
!4000 = distinct !DILexicalBlock(scope: !3996, file: !2352, line: 809, column: 7)
!4001 = !DILocation(line: 0, scope: !4000)
!4002 = !DILocation(line: 818, column: 2, scope: !3958)
!4003 = distinct !DISubprogram(name: "store_count", scope: !2352, file: !2352, line: 1280, type: !4004, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !4008)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{null, !4006, !102, !103}
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 32)
!4007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3529)
!4008 = !{!4009, !4010, !4011}
!4009 = !DILocalVariable(name: "conv", arg: 1, scope: !4003, file: !2352, line: 1280, type: !4006)
!4010 = !DILocalVariable(name: "dp", arg: 2, scope: !4003, file: !2352, line: 1281, type: !102)
!4011 = !DILocalVariable(name: "count", arg: 3, scope: !4003, file: !2352, line: 1282, type: !103)
!4012 = !DILocation(line: 0, scope: !4003)
!4013 = !DILocation(line: 1284, column: 38, scope: !4003)
!4014 = !DILocation(line: 1284, column: 2, scope: !4003)
!4015 = !DILocation(line: 1286, column: 4, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4003, file: !2352, line: 1284, column: 50)
!4017 = !DILocation(line: 1286, column: 14, scope: !4016)
!4018 = !DILocation(line: 1287, column: 3, scope: !4016)
!4019 = !DILocation(line: 1289, column: 24, scope: !4016)
!4020 = !DILocation(line: 1289, column: 22, scope: !4016)
!4021 = !DILocation(line: 1290, column: 3, scope: !4016)
!4022 = !DILocation(line: 1292, column: 18, scope: !4016)
!4023 = !DILocation(line: 1292, column: 4, scope: !4016)
!4024 = !DILocation(line: 1292, column: 16, scope: !4016)
!4025 = !DILocation(line: 1293, column: 3, scope: !4016)
!4026 = !DILocation(line: 1295, column: 4, scope: !4016)
!4027 = !DILocation(line: 1295, column: 15, scope: !4016)
!4028 = !DILocation(line: 1296, column: 3, scope: !4016)
!4029 = !DILocation(line: 1298, column: 22, scope: !4016)
!4030 = !DILocation(line: 1298, column: 4, scope: !4016)
!4031 = !DILocation(line: 1298, column: 20, scope: !4016)
!4032 = !DILocation(line: 1299, column: 3, scope: !4016)
!4033 = !DILocation(line: 1301, column: 21, scope: !4016)
!4034 = !DILocation(line: 1301, column: 4, scope: !4016)
!4035 = !DILocation(line: 1301, column: 19, scope: !4016)
!4036 = !DILocation(line: 1302, column: 3, scope: !4016)
!4037 = !DILocation(line: 1304, column: 4, scope: !4016)
!4038 = !DILocation(line: 1304, column: 17, scope: !4016)
!4039 = !DILocation(line: 1305, column: 3, scope: !4016)
!4040 = !DILocation(line: 1307, column: 4, scope: !4016)
!4041 = !DILocation(line: 1307, column: 20, scope: !4016)
!4042 = !DILocation(line: 1308, column: 3, scope: !4016)
!4043 = !DILocation(line: 1316, column: 1, scope: !4003)
!4044 = distinct !DISubprogram(name: "isupper", scope: !4045, file: !4045, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !4046)
!4045 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4046 = !{!4047}
!4047 = !DILocalVariable(name: "a", arg: 1, scope: !4044, file: !4045, line: 16, type: !103)
!4048 = !DILocation(line: 0, scope: !4044)
!4049 = !DILocation(line: 18, column: 29, scope: !4044)
!4050 = !DILocation(line: 18, column: 45, scope: !4044)
!4051 = !DILocation(line: 18, column: 2, scope: !4044)
!4052 = distinct !DISubprogram(name: "conversion_radix", scope: !2352, file: !2352, line: 761, type: !4053, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !4055)
!4053 = !DISubroutineType(types: !4054)
!4054 = !{!200, !146}
!4055 = !{!4056}
!4056 = !DILocalVariable(name: "specifier", arg: 1, scope: !4052, file: !2352, line: 761, type: !146)
!4057 = !DILocation(line: 0, scope: !4052)
!4058 = !DILocation(line: 763, column: 2, scope: !4052)
!4059 = !DILocation(line: 770, column: 3, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4052, file: !2352, line: 763, column: 21)
!4061 = !DILocation(line: 774, column: 3, scope: !4060)
!4062 = !DILocation(line: 0, scope: !4060)
!4063 = !DILocation(line: 776, column: 1, scope: !4052)
!4064 = distinct !DISubprogram(name: "extract_flags", scope: !2352, file: !2352, line: 339, type: !3906, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !4065)
!4065 = !{!4066, !4067, !4068}
!4066 = !DILocalVariable(name: "conv", arg: 1, scope: !4064, file: !2352, line: 339, type: !3562)
!4067 = !DILocalVariable(name: "sp", arg: 2, scope: !4064, file: !2352, line: 340, type: !144)
!4068 = !DILocalVariable(name: "loop", scope: !4064, file: !2352, line: 342, type: !157)
!4069 = !DILocation(line: 0, scope: !4064)
!4070 = !DILocation(line: 344, column: 2, scope: !4064)
!4071 = !DILocation(line: 345, column: 11, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4064, file: !2352, line: 344, column: 5)
!4073 = !DILocation(line: 345, column: 3, scope: !4072)
!4074 = !DILocation(line: 351, column: 4, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4072, file: !2352, line: 345, column: 16)
!4076 = !DILocation(line: 354, column: 4, scope: !4075)
!4077 = !DILocation(line: 357, column: 4, scope: !4075)
!4078 = !DILocation(line: 360, column: 4, scope: !4075)
!4079 = !DILocation(line: 0, scope: !4075)
!4080 = !DILocation(line: 370, column: 12, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4064, file: !2352, line: 370, column: 6)
!4082 = !DILocation(line: 370, column: 22, scope: !4081)
!4083 = !DILocation(line: 371, column: 19, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4081, file: !2352, line: 370, column: 42)
!4085 = !DILocation(line: 372, column: 2, scope: !4084)
!4086 = !DILocation(line: 376, column: 2, scope: !4064)
!4087 = distinct !DISubprogram(name: "extract_width", scope: !2352, file: !2352, line: 388, type: !3906, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !4088)
!4088 = !{!4089, !4090, !4091, !4092}
!4089 = !DILocalVariable(name: "conv", arg: 1, scope: !4087, file: !2352, line: 388, type: !3562)
!4090 = !DILocalVariable(name: "sp", arg: 2, scope: !4087, file: !2352, line: 389, type: !144)
!4091 = !DILocalVariable(name: "wp", scope: !4087, file: !2352, line: 398, type: !144)
!4092 = !DILocalVariable(name: "width", scope: !4087, file: !2352, line: 399, type: !200)
!4093 = !DILocation(line: 0, scope: !4087)
!4094 = !DILocation(line: 391, column: 8, scope: !4087)
!4095 = !DILocation(line: 391, column: 22, scope: !4087)
!4096 = !DILocation(line: 393, column: 6, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4087, file: !2352, line: 393, column: 6)
!4098 = !DILocation(line: 393, column: 10, scope: !4097)
!4099 = !DILocation(line: 393, column: 6, scope: !4087)
!4100 = !DILocation(line: 394, column: 20, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4097, file: !2352, line: 393, column: 18)
!4102 = !DILocation(line: 395, column: 10, scope: !4101)
!4103 = !DILocation(line: 395, column: 3, scope: !4101)
!4104 = !DILocation(line: 399, column: 17, scope: !4087)
!4105 = !DILocation(line: 401, column: 6, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4087, file: !2352, line: 401, column: 6)
!4107 = !DILocation(line: 401, column: 9, scope: !4106)
!4108 = !DILocation(line: 401, column: 6, scope: !4087)
!4109 = !DILocation(line: 402, column: 23, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4106, file: !2352, line: 401, column: 16)
!4111 = !DILocation(line: 403, column: 9, scope: !4110)
!4112 = !DILocation(line: 403, column: 21, scope: !4110)
!4113 = !DILocation(line: 405, column: 11, scope: !4110)
!4114 = !DILocation(line: 404, column: 21, scope: !4110)
!4115 = !DILocation(line: 406, column: 2, scope: !4110)
!4116 = !DILocation(line: 409, column: 1, scope: !4087)
!4117 = distinct !DISubprogram(name: "extract_prec", scope: !2352, file: !2352, line: 420, type: !3906, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !4118)
!4118 = !{!4119, !4120, !4121}
!4119 = !DILocalVariable(name: "conv", arg: 1, scope: !4117, file: !2352, line: 420, type: !3562)
!4120 = !DILocalVariable(name: "sp", arg: 2, scope: !4117, file: !2352, line: 421, type: !144)
!4121 = !DILocalVariable(name: "prec", scope: !4117, file: !2352, line: 435, type: !200)
!4122 = !DILocation(line: 0, scope: !4117)
!4123 = !DILocation(line: 423, column: 24, scope: !4117)
!4124 = !DILocation(line: 423, column: 28, scope: !4117)
!4125 = !DILocation(line: 423, column: 8, scope: !4117)
!4126 = !DILocation(line: 423, column: 21, scope: !4117)
!4127 = !DILocation(line: 425, column: 6, scope: !4117)
!4128 = !DILocation(line: 428, column: 2, scope: !4117)
!4129 = !DILocation(line: 430, column: 6, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4117, file: !2352, line: 430, column: 6)
!4131 = !DILocation(line: 430, column: 10, scope: !4130)
!4132 = !DILocation(line: 430, column: 6, scope: !4117)
!4133 = !DILocation(line: 431, column: 19, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4130, file: !2352, line: 430, column: 18)
!4135 = !DILocation(line: 432, column: 10, scope: !4134)
!4136 = !DILocation(line: 432, column: 3, scope: !4134)
!4137 = !DILocation(line: 435, column: 16, scope: !4117)
!4138 = !DILocation(line: 437, column: 8, scope: !4117)
!4139 = !DILocation(line: 437, column: 19, scope: !4117)
!4140 = !DILocation(line: 439, column: 10, scope: !4117)
!4141 = !DILocation(line: 438, column: 20, scope: !4117)
!4142 = !DILocation(line: 441, column: 9, scope: !4117)
!4143 = !DILocation(line: 442, column: 1, scope: !4117)
!4144 = distinct !DISubprogram(name: "extract_length", scope: !2352, file: !2352, line: 453, type: !3906, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !4145)
!4145 = !{!4146, !4147}
!4146 = !DILocalVariable(name: "conv", arg: 1, scope: !4144, file: !2352, line: 453, type: !3562)
!4147 = !DILocalVariable(name: "sp", arg: 2, scope: !4144, file: !2352, line: 454, type: !144)
!4148 = !DILocation(line: 0, scope: !4144)
!4149 = !DILocation(line: 456, column: 10, scope: !4144)
!4150 = !DILocation(line: 456, column: 2, scope: !4144)
!4151 = !DILocation(line: 458, column: 8, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4153, file: !2352, line: 458, column: 7)
!4153 = distinct !DILexicalBlock(scope: !4144, file: !2352, line: 456, column: 15)
!4154 = !DILocation(line: 458, column: 7, scope: !4152)
!4155 = !DILocation(line: 458, column: 13, scope: !4152)
!4156 = !DILocation(line: 0, scope: !4152)
!4157 = !DILocation(line: 458, column: 7, scope: !4153)
!4158 = !DILocation(line: 459, column: 21, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4152, file: !2352, line: 458, column: 21)
!4160 = !DILocation(line: 460, column: 4, scope: !4159)
!4161 = !DILocation(line: 461, column: 3, scope: !4159)
!4162 = !DILocation(line: 462, column: 21, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4152, file: !2352, line: 461, column: 10)
!4164 = !DILocation(line: 466, column: 8, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4153, file: !2352, line: 466, column: 7)
!4166 = !DILocation(line: 466, column: 7, scope: !4165)
!4167 = !DILocation(line: 466, column: 13, scope: !4165)
!4168 = !DILocation(line: 0, scope: !4165)
!4169 = !DILocation(line: 466, column: 7, scope: !4153)
!4170 = !DILocation(line: 467, column: 21, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4165, file: !2352, line: 466, column: 21)
!4172 = !DILocation(line: 468, column: 4, scope: !4171)
!4173 = !DILocation(line: 469, column: 3, scope: !4171)
!4174 = !DILocation(line: 470, column: 21, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4165, file: !2352, line: 469, column: 10)
!4176 = !DILocation(line: 474, column: 9, scope: !4153)
!4177 = !DILocation(line: 474, column: 20, scope: !4153)
!4178 = !DILocation(line: 475, column: 3, scope: !4153)
!4179 = !DILocation(line: 476, column: 3, scope: !4153)
!4180 = !DILocation(line: 478, column: 9, scope: !4153)
!4181 = !DILocation(line: 478, column: 20, scope: !4153)
!4182 = !DILocation(line: 479, column: 3, scope: !4153)
!4183 = !DILocation(line: 480, column: 3, scope: !4153)
!4184 = !DILocation(line: 482, column: 9, scope: !4153)
!4185 = !DILocation(line: 482, column: 20, scope: !4153)
!4186 = !DILocation(line: 483, column: 3, scope: !4153)
!4187 = !DILocation(line: 484, column: 3, scope: !4153)
!4188 = !DILocation(line: 486, column: 9, scope: !4153)
!4189 = !DILocation(line: 486, column: 20, scope: !4153)
!4190 = !DILocation(line: 487, column: 3, scope: !4153)
!4191 = !DILocation(line: 492, column: 21, scope: !4153)
!4192 = !DILocation(line: 493, column: 3, scope: !4153)
!4193 = !DILocation(line: 495, column: 9, scope: !4153)
!4194 = !DILocation(line: 495, column: 20, scope: !4153)
!4195 = !DILocation(line: 496, column: 3, scope: !4153)
!4196 = !DILocation(line: 498, column: 2, scope: !4144)
!4197 = distinct !DISubprogram(name: "extract_specifier", scope: !2352, file: !2352, line: 513, type: !3906, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !4198)
!4198 = !{!4199, !4200, !4201, !4202}
!4199 = !DILocalVariable(name: "conv", arg: 1, scope: !4197, file: !2352, line: 513, type: !3562)
!4200 = !DILocalVariable(name: "sp", arg: 2, scope: !4197, file: !2352, line: 514, type: !144)
!4201 = !DILocalVariable(name: "unsupported", scope: !4197, file: !2352, line: 516, type: !157)
!4202 = !DILabel(scope: !4203, name: "int_conv", file: !2352, line: 526)
!4203 = distinct !DILexicalBlock(scope: !4197, file: !2352, line: 520, column: 27)
!4204 = !DILocation(line: 0, scope: !4197)
!4205 = !DILocation(line: 518, column: 20, scope: !4197)
!4206 = !DILocation(line: 518, column: 8, scope: !4197)
!4207 = !DILocation(line: 518, column: 18, scope: !4197)
!4208 = !DILocation(line: 520, column: 2, scope: !4197)
!4209 = !DILocation(line: 525, column: 3, scope: !4203)
!4210 = !DILocation(line: 0, scope: !4203)
!4211 = !DILocation(line: 526, column: 1, scope: !4203)
!4212 = !DILocation(line: 528, column: 24, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4203, file: !2352, line: 528, column: 7)
!4214 = !DILocation(line: 528, column: 7, scope: !4203)
!4215 = !DILocation(line: 535, column: 23, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4203, file: !2352, line: 535, column: 7)
!4217 = !DILocation(line: 535, column: 7, scope: !4203)
!4218 = !DILocation(line: 536, column: 36, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4216, file: !2352, line: 535, column: 31)
!4220 = !DILocation(line: 537, column: 3, scope: !4219)
!4221 = !DILocation(line: 570, column: 9, scope: !4203)
!4222 = !DILocation(line: 570, column: 23, scope: !4203)
!4223 = !DILocation(line: 575, column: 4, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4225, file: !2352, line: 573, column: 48)
!4225 = distinct !DILexicalBlock(scope: !4203, file: !2352, line: 573, column: 7)
!4226 = !DILocation(line: 603, column: 9, scope: !4203)
!4227 = !DILocation(line: 603, column: 23, scope: !4203)
!4228 = !DILocation(line: 605, column: 24, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4203, file: !2352, line: 605, column: 7)
!4230 = !DILocation(line: 605, column: 7, scope: !4203)
!4231 = !DILocation(line: 612, column: 9, scope: !4203)
!4232 = !DILocation(line: 612, column: 23, scope: !4203)
!4233 = !DILocation(line: 619, column: 24, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4203, file: !2352, line: 619, column: 7)
!4235 = !DILocation(line: 619, column: 7, scope: !4203)
!4236 = !DILocation(line: 625, column: 9, scope: !4203)
!4237 = !DILocation(line: 625, column: 17, scope: !4203)
!4238 = !DILocation(line: 626, column: 3, scope: !4203)
!4239 = !DILocation(line: 629, column: 20, scope: !4197)
!4240 = !DILocation(line: 629, column: 8, scope: !4197)
!4241 = !DILocation(line: 518, column: 23, scope: !4197)
!4242 = !DILocation(line: 631, column: 2, scope: !4197)
!4243 = distinct !DISubprogram(name: "extract_decimal", scope: !2352, file: !2352, line: 318, type: !4244, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !4247)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{!200, !4246}
!4246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!4247 = !{!4248, !4249, !4250}
!4248 = !DILocalVariable(name: "str", arg: 1, scope: !4243, file: !2352, line: 318, type: !4246)
!4249 = !DILocalVariable(name: "sp", scope: !4243, file: !2352, line: 320, type: !144)
!4250 = !DILocalVariable(name: "val", scope: !4243, file: !2352, line: 321, type: !200)
!4251 = !DILocation(line: 0, scope: !4243)
!4252 = !DILocation(line: 320, column: 19, scope: !4243)
!4253 = !DILocation(line: 323, column: 37, scope: !4243)
!4254 = !DILocation(line: 323, column: 17, scope: !4243)
!4255 = !DILocation(line: 323, column: 9, scope: !4243)
!4256 = !DILocation(line: 323, column: 2, scope: !4243)
!4257 = !DILocation(line: 324, column: 13, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4243, file: !2352, line: 323, column: 43)
!4259 = !DILocation(line: 324, column: 24, scope: !4258)
!4260 = !DILocation(line: 324, column: 19, scope: !4258)
!4261 = !DILocation(line: 324, column: 27, scope: !4258)
!4262 = distinct !{!4262, !4256, !4263}
!4263 = !DILocation(line: 325, column: 2, scope: !4243)
!4264 = !DILocation(line: 326, column: 7, scope: !4243)
!4265 = !DILocation(line: 327, column: 2, scope: !4243)
!4266 = distinct !DISubprogram(name: "isdigit", scope: !4045, file: !4045, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !4267)
!4267 = !{!4268}
!4268 = !DILocalVariable(name: "a", arg: 1, scope: !4266, file: !4045, line: 43, type: !103)
!4269 = !DILocation(line: 0, scope: !4266)
!4270 = !DILocation(line: 45, column: 29, scope: !4266)
!4271 = !DILocation(line: 45, column: 45, scope: !4266)
!4272 = !DILocation(line: 45, column: 2, scope: !4266)
!4273 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4274, file: !4274, line: 9, type: !2909, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2386, retainedNodes: !322)
!4274 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!4275 = !DILocation(line: 11, column: 1, scope: !4273)
!4276 = !{i64 2147561588, i64 2147561631, i64 2147561671}
!4277 = !DILocation(line: 12, column: 1, scope: !4273)
!4278 = !{i64 2147565815, i64 2147565858, i64 2147565898}
!4279 = !DILocation(line: 13, column: 1, scope: !4273)
!4280 = !{i64 2147566024, i64 2147566067, i64 2147566107}
!4281 = !DILocation(line: 14, column: 1, scope: !4273)
!4282 = !{i64 2147566193, i64 2147566236, i64 2147566276}
!4283 = !DILocation(line: 15, column: 1, scope: !4273)
!4284 = !{i64 2147566356, i64 2147566399, i64 2147566439}
!4285 = !DILocation(line: 16, column: 1, scope: !4273)
!4286 = !{i64 2147566540, i64 2147566583, i64 2147566623}
!4287 = !DILocation(line: 17, column: 1, scope: !4273)
!4288 = !{i64 2147566719, i64 2147566762, i64 2147566802}
!4289 = !DILocation(line: 18, column: 1, scope: !4273)
!4290 = !{i64 2147566961, i64 2147567004, i64 2147567044}
!4291 = !DILocation(line: 19, column: 1, scope: !4273)
!4292 = !{i64 2147567196, i64 2147567239, i64 2147567279}
!4293 = !DILocation(line: 20, column: 1, scope: !4273)
!4294 = !{i64 2147567382, i64 2147567425, i64 2147567465}
!4295 = !DILocation(line: 21, column: 1, scope: !4273)
!4296 = !{i64 2147567598, i64 2147567641, i64 2147567681}
!4297 = !DILocation(line: 22, column: 1, scope: !4273)
!4298 = !{i64 2147567801, i64 2147567844, i64 2147567884}
!4299 = !DILocation(line: 23, column: 1, scope: !4273)
!4300 = !{i64 2147568004, i64 2147568047, i64 2147568087}
!4301 = !DILocation(line: 24, column: 1, scope: !4273)
!4302 = !{i64 2147568179, i64 2147568222, i64 2147568262}
!4303 = !DILocation(line: 25, column: 1, scope: !4273)
!4304 = !{i64 2147568387, i64 2147568430, i64 2147568470}
!4305 = !DILocation(line: 26, column: 1, scope: !4273)
!4306 = !{i64 2147568591, i64 2147568634, i64 2147568674}
!4307 = !DILocation(line: 27, column: 1, scope: !4273)
!4308 = !{i64 2147568784, i64 2147568827, i64 2147568867}
!4309 = !DILocation(line: 28, column: 1, scope: !4273)
!4310 = !{i64 2147568986, i64 2147569029, i64 2147569069}
!4311 = !DILocation(line: 29, column: 1, scope: !4273)
!4312 = !{i64 2147569213, i64 2147569256, i64 2147569296}
!4313 = !DILocation(line: 30, column: 1, scope: !4273)
!4314 = !{i64 2147569415, i64 2147569458, i64 2147569498}
!4315 = !DILocation(line: 31, column: 1, scope: !4273)
!4316 = !{i64 2147569630, i64 2147569673, i64 2147569713}
!4317 = !DILocation(line: 32, column: 1, scope: !4273)
!4318 = !{i64 2147569802, i64 2147569845, i64 2147569885}
!4319 = !DILocation(line: 33, column: 1, scope: !4273)
!4320 = !{i64 2147570004, i64 2147570047, i64 2147570087}
!4321 = !DILocation(line: 34, column: 1, scope: !4273)
!4322 = !{i64 2147570230, i64 2147570273, i64 2147570313}
!4323 = !DILocation(line: 35, column: 1, scope: !4273)
!4324 = !{i64 2147570429, i64 2147570472, i64 2147570512}
!4325 = !DILocation(line: 36, column: 1, scope: !4273)
!4326 = !{i64 2147570604, i64 2147570647, i64 2147570687}
!4327 = !DILocation(line: 37, column: 1, scope: !4273)
!4328 = !{i64 2147570857, i64 2147570900, i64 2147570940}
!4329 = !DILocation(line: 38, column: 1, scope: !4273)
!4330 = !{i64 2147571098, i64 2147571141, i64 2147571181}
!4331 = !DILocation(line: 39, column: 1, scope: !4273)
!4332 = !{i64 2147571333, i64 2147571376, i64 2147571416}
!4333 = !DILocation(line: 40, column: 1, scope: !4273)
!4334 = !{i64 2147571565, i64 2147571608, i64 2147571648}
!4335 = !DILocation(line: 41, column: 1, scope: !4273)
!4336 = !{i64 2147571791, i64 2147571834, i64 2147571874}
!4337 = !DILocation(line: 42, column: 1, scope: !4273)
!4338 = !{i64 2147572017, i64 2147572060, i64 2147572100}
!4339 = !DILocation(line: 43, column: 1, scope: !4273)
!4340 = !{i64 2147572243, i64 2147572286, i64 2147572326}
!4341 = !DILocation(line: 44, column: 1, scope: !4273)
!4342 = !{i64 2147572478, i64 2147572521, i64 2147572561}
!4343 = !DILocation(line: 45, column: 1, scope: !4273)
!4344 = !{i64 2147572722, i64 2147572765, i64 2147572805}
!4345 = !DILocation(line: 46, column: 1, scope: !4273)
!4346 = !{i64 2147572969, i64 2147573012, i64 2147573052}
!4347 = !DILocation(line: 47, column: 1, scope: !4273)
!4348 = !{i64 2147573201, i64 2147573244, i64 2147573284}
!4349 = !DILocation(line: 48, column: 1, scope: !4273)
!4350 = !{i64 2147573445, i64 2147573488, i64 2147573528}
!4351 = !DILocation(line: 49, column: 1, scope: !4273)
!4352 = !{i64 2147573683, i64 2147573726, i64 2147573766}
!4353 = !DILocation(line: 50, column: 1, scope: !4273)
!4354 = !{i64 2147573957, i64 2147574000, i64 2147574040}
!4355 = !DILocation(line: 51, column: 1, scope: !4273)
!4356 = !{i64 2147574195, i64 2147574238, i64 2147574278}
!4357 = !DILocation(line: 52, column: 1, scope: !4273)
!4358 = !{i64 2147574448, i64 2147574491, i64 2147574531}
!4359 = !DILocation(line: 53, column: 1, scope: !4273)
!4360 = !{i64 2147578753, i64 2147578796, i64 2147578836}
!4361 = !DILocation(line: 54, column: 1, scope: !4273)
!4362 = !{i64 2147578988, i64 2147579031, i64 2147579071}
!4363 = !DILocation(line: 55, column: 1, scope: !4273)
!4364 = !{i64 2147579238, i64 2147579281, i64 2147579321}
!4365 = !DILocation(line: 56, column: 1, scope: !4273)
!4366 = !{i64 2147579485, i64 2147579528, i64 2147579568}
!4367 = !DILocation(line: 57, column: 1, scope: !4273)
!4368 = !{i64 2147579720, i64 2147579763, i64 2147579803}
!4369 = !DILocation(line: 58, column: 1, scope: !4273)
!4370 = !{i64 2147579955, i64 2147579998, i64 2147580038}
!4371 = !DILocation(line: 59, column: 1, scope: !4273)
!4372 = !{i64 2147580190, i64 2147580233, i64 2147580273}
!4373 = !DILocation(line: 60, column: 1, scope: !4273)
!4374 = !{i64 2147580425, i64 2147580468, i64 2147580508}
!4375 = !DILocation(line: 61, column: 1, scope: !4273)
!4376 = !{i64 2147580669, i64 2147580712, i64 2147580752}
!4377 = !DILocation(line: 62, column: 1, scope: !4273)
!4378 = !{i64 2147580907, i64 2147580950, i64 2147580990}
!4379 = !DILocation(line: 63, column: 1, scope: !4273)
!4380 = !{i64 2147581148, i64 2147581191, i64 2147581231}
!4381 = !DILocation(line: 64, column: 1, scope: !4273)
!4382 = !{i64 2147581428, i64 2147581471, i64 2147581511}
!4383 = !DILocation(line: 65, column: 1, scope: !4273)
!4384 = !{i64 2147581687, i64 2147581730, i64 2147581770}
!4385 = !DILocation(line: 66, column: 1, scope: !4273)
!4386 = !{i64 2147581925, i64 2147581968, i64 2147582008}
!4387 = !DILocation(line: 67, column: 1, scope: !4273)
!4388 = !{i64 2147582154, i64 2147582197, i64 2147582237}
!4389 = !DILocation(line: 68, column: 1, scope: !4273)
!4390 = !{i64 2147582362, i64 2147582405, i64 2147582445}
!4391 = !DILocation(line: 69, column: 1, scope: !4273)
!4392 = !{i64 2147582573, i64 2147582616, i64 2147582656}
!4393 = !DILocation(line: 70, column: 1, scope: !4273)
!4394 = !{i64 2147582808, i64 2147582851, i64 2147582891}
!4395 = !DILocation(line: 71, column: 1, scope: !4273)
!4396 = !{i64 2147583037, i64 2147583080, i64 2147583120}
!4397 = !DILocation(line: 72, column: 1, scope: !4273)
!4398 = !{i64 2147583275, i64 2147583318, i64 2147583358}
!4399 = !DILocation(line: 73, column: 1, scope: !4273)
!4400 = !{i64 2147583507, i64 2147583550, i64 2147583590}
!4401 = !DILocation(line: 74, column: 1, scope: !4273)
!4402 = !{i64 2147583733, i64 2147583776, i64 2147583816}
!4403 = !DILocation(line: 75, column: 1, scope: !4273)
!4404 = !{i64 2147583950, i64 2147583993, i64 2147584033}
!4405 = !DILocation(line: 76, column: 1, scope: !4273)
!4406 = !{i64 2147584182, i64 2147584225, i64 2147584265}
!4407 = !DILocation(line: 77, column: 1, scope: !4273)
!4408 = !{i64 2147584408, i64 2147584451, i64 2147584491}
!4409 = !DILocation(line: 78, column: 1, scope: !4273)
!4410 = !{i64 2147584622, i64 2147584665, i64 2147584705}
!4411 = !DILocation(line: 79, column: 1, scope: !4273)
!4412 = !{i64 2147584842, i64 2147584885, i64 2147584925}
!4413 = !DILocation(line: 80, column: 1, scope: !4273)
!4414 = !{i64 2147585074, i64 2147585117, i64 2147585157}
!4415 = !DILocation(line: 81, column: 1, scope: !4273)
!4416 = !{i64 2147585282, i64 2147585325, i64 2147585365}
!4417 = !DILocation(line: 82, column: 1, scope: !4273)
!4418 = !{i64 2147585487, i64 2147585530, i64 2147585570}
!4419 = !DILocation(line: 83, column: 1, scope: !4273)
!4420 = !{i64 2147585704, i64 2147585747, i64 2147585787}
!4421 = !DILocation(line: 84, column: 1, scope: !4273)
!4422 = !{i64 2147585918, i64 2147585961, i64 2147586001}
!4423 = !DILocation(line: 85, column: 1, scope: !4273)
!4424 = !{i64 2147586144, i64 2147586187, i64 2147586227}
!4425 = !DILocation(line: 86, column: 1, scope: !4273)
!4426 = !{i64 2147586364, i64 2147586407, i64 2147586447}
!4427 = !DILocation(line: 87, column: 1, scope: !4273)
!4428 = !{i64 2147586569, i64 2147586612, i64 2147586652}
!4429 = !DILocation(line: 88, column: 1, scope: !4273)
!4430 = !{i64 2147590862, i64 2147590905, i64 2147590945}
!4431 = !DILocation(line: 89, column: 1, scope: !4273)
!4432 = !{i64 2147591097, i64 2147591140, i64 2147591180}
!4433 = !DILocation(line: 90, column: 1, scope: !4273)
!4434 = !{i64 2147591347, i64 2147591390, i64 2147591430}
!4435 = !DILocation(line: 91, column: 1, scope: !4273)
!4436 = !{i64 2147591597, i64 2147591640, i64 2147591680}
!4437 = !DILocation(line: 92, column: 1, scope: !4273)
!4438 = !{i64 2147591835, i64 2147591878, i64 2147591918}
!4439 = !DILocation(line: 93, column: 1, scope: !4273)
!4440 = !{i64 2147592046, i64 2147592089, i64 2147592129}
!4441 = !DILocation(line: 94, column: 1, scope: !4273)
!4442 = !{i64 2147592263, i64 2147592306, i64 2147592346}
!4443 = !DILocation(line: 95, column: 1, scope: !4273)
!4444 = !{i64 2147592459, i64 2147592502, i64 2147592542}
!4445 = !DILocation(line: 96, column: 1, scope: !4273)
!4446 = !{i64 2147592661, i64 2147592704, i64 2147592744}
!4447 = !DILocation(line: 97, column: 1, scope: !4273)
!4448 = !{i64 2147592854, i64 2147592897, i64 2147592937}
!4449 = !DILocation(line: 98, column: 1, scope: !4273)
!4450 = !{i64 2147593062, i64 2147593105, i64 2147593145}
!4451 = !DILocation(line: 99, column: 1, scope: !4273)
!4452 = !{i64 2147593258, i64 2147593301, i64 2147593341}
!4453 = !DILocation(line: 100, column: 1, scope: !4273)
!4454 = !{i64 2147593490, i64 2147593533, i64 2147593573}
!4455 = !DILocation(line: 101, column: 1, scope: !4273)
!4456 = !{i64 2147593701, i64 2147593744, i64 2147593784}
!4457 = !DILocation(line: 102, column: 1, scope: !4273)
!4458 = !{i64 2147593900, i64 2147593943, i64 2147593983}
!4459 = !DILocation(line: 103, column: 1, scope: !4273)
!4460 = !{i64 2147594075, i64 2147594118, i64 2147594158}
!4461 = !DILocation(line: 104, column: 1, scope: !4273)
!4462 = !{i64 2147594259, i64 2147594302, i64 2147594342}
!4463 = !DILocation(line: 105, column: 1, scope: !4273)
!4464 = !{i64 2147594461, i64 2147594504, i64 2147594544}
!4465 = !DILocation(line: 106, column: 1, scope: !4273)
!4466 = !{i64 2147594660, i64 2147594703, i64 2147594743}
!4467 = !DILocation(line: 107, column: 1, scope: !4273)
!4468 = !{i64 2147594826, i64 2147594869, i64 2147594909}
!4469 = !DILocation(line: 108, column: 1, scope: !4273)
!4470 = !{i64 2147595010, i64 2147595053, i64 2147595093}
!4471 = !DILocation(line: 109, column: 1, scope: !4273)
!4472 = !{i64 2147595200, i64 2147595243, i64 2147595283}
!4473 = !DILocation(line: 110, column: 1, scope: !4273)
!4474 = !{i64 2147595384, i64 2147595427, i64 2147595467}
!4475 = !DILocation(line: 111, column: 1, scope: !4273)
!4476 = !{i64 2147595598, i64 2147595641, i64 2147595681}
!4477 = !DILocation(line: 112, column: 1, scope: !4273)
!4478 = !{i64 2147595809, i64 2147595852, i64 2147595892}
!4479 = !DILocation(line: 113, column: 1, scope: !4273)
!4480 = !{i64 2147596032, i64 2147596075, i64 2147596115}
!4481 = !DILocation(line: 114, column: 1, scope: !4273)
!4482 = !{i64 2147596216, i64 2147596259, i64 2147596299}
!4483 = !DILocation(line: 115, column: 1, scope: !4273)
!4484 = !{i64 2147596430, i64 2147596473, i64 2147596513}
!4485 = !DILocation(line: 116, column: 1, scope: !4273)
!4486 = !{i64 2147596596, i64 2147596639, i64 2147596679}
!4487 = !DILocation(line: 117, column: 1, scope: !4273)
!4488 = !{i64 2147596777, i64 2147596820, i64 2147596860}
!4489 = !DILocation(line: 118, column: 1, scope: !4273)
!4490 = !{i64 2147596970, i64 2147597013, i64 2147597053}
!4491 = !DILocation(line: 119, column: 1, scope: !4273)
!4492 = !{i64 2147597196, i64 2147597239, i64 2147597279}
!4493 = !DILocation(line: 120, column: 1, scope: !4273)
!4494 = !{i64 2147597410, i64 2147597453, i64 2147597493}
!4495 = !DILocation(line: 121, column: 1, scope: !4273)
!4496 = !{i64 2147597636, i64 2147597679, i64 2147597719}
!4497 = !DILocation(line: 122, column: 1, scope: !4273)
!4498 = !{i64 2147597853, i64 2147597896, i64 2147597936}
!4499 = !DILocation(line: 123, column: 1, scope: !4273)
!4500 = !{i64 2147598130, i64 2147598173, i64 2147598213}
!4501 = !DILocation(line: 124, column: 1, scope: !4273)
!4502 = !{i64 2147598356, i64 2147598399, i64 2147598439}
!4503 = !DILocation(line: 125, column: 1, scope: !4273)
!4504 = !{i64 2147598564, i64 2147598607, i64 2147598647}
!4505 = !DILocation(line: 126, column: 1, scope: !4273)
!4506 = !{i64 2147598760, i64 2147598803, i64 2147598843}
!4507 = !DILocation(line: 127, column: 1, scope: !4273)
!4508 = !{i64 2147599025, i64 2147599068, i64 2147599108}
!4509 = !DILocation(line: 128, column: 1, scope: !4273)
!4510 = !{i64 2147599239, i64 2147599282, i64 2147599322}
!4511 = !DILocation(line: 129, column: 1, scope: !4273)
!4512 = !{i64 2147599414, i64 2147599457, i64 2147599497}
!4513 = !DILocation(line: 130, column: 1, scope: !4273)
!4514 = !{i64 2147599668, i64 2147599711, i64 2147599751}
!4515 = !DILocation(line: 131, column: 1, scope: !4273)
!4516 = !{i64 2147603928, i64 2147603971, i64 2147604011}
!4517 = !DILocation(line: 132, column: 1, scope: !4273)
!4518 = !{i64 2147604170, i64 2147604213, i64 2147604253}
!4519 = !DILocation(line: 133, column: 1, scope: !4273)
!4520 = !{i64 2147604333, i64 2147604376, i64 2147604416}
!4521 = !DILocation(line: 134, column: 1, scope: !4273)
!4522 = !{i64 2147604520, i64 2147604563, i64 2147604603}
!4523 = !DILocation(line: 135, column: 1, scope: !4273)
!4524 = !{i64 2147604713, i64 2147604756, i64 2147604796}
!4525 = !DILocation(line: 136, column: 1, scope: !4273)
!4526 = !{i64 2147604896, i64 2147604939, i64 2147604979}
!4527 = !DILocation(line: 137, column: 1, scope: !4273)
!4528 = !{i64 2147605110, i64 2147605153, i64 2147605193}
!4529 = !DILocation(line: 138, column: 1, scope: !4273)
!4530 = !{i64 2147605321, i64 2147605364, i64 2147605404}
!4531 = !DILocation(line: 139, column: 1, scope: !4273)
!4532 = !{i64 2147605541, i64 2147605584, i64 2147605624}
!4533 = !DILocation(line: 140, column: 1, scope: !4273)
!4534 = !{i64 2147605748, i64 2147605791, i64 2147605831}
!4535 = !DILocation(line: 141, column: 1, scope: !4273)
!4536 = !{i64 2147606021, i64 2147606064, i64 2147606104}
!4537 = !DILocation(line: 142, column: 1, scope: !4273)
!4538 = !{i64 2147606269, i64 2147606312, i64 2147606352}
!4539 = !DILocation(line: 143, column: 1, scope: !4273)
!4540 = !{i64 2147606468, i64 2147606511, i64 2147606551}
!4541 = !DILocation(line: 144, column: 1, scope: !4273)
!4542 = !{i64 2147606703, i64 2147606746, i64 2147606786}
!4543 = !DILocation(line: 145, column: 1, scope: !4273)
!4544 = !{i64 2147606953, i64 2147606996, i64 2147607036}
!4545 = !DILocation(line: 146, column: 1, scope: !4273)
!4546 = !{i64 2147607155, i64 2147607198, i64 2147607238}
!4547 = !DILocation(line: 147, column: 1, scope: !4273)
!4548 = !{i64 2147607378, i64 2147607421, i64 2147607461}
!4549 = !DILocation(line: 148, column: 1, scope: !4273)
!4550 = !{i64 2147607592, i64 2147607635, i64 2147607675}
!4551 = !DILocation(line: 149, column: 1, scope: !4273)
!4552 = !{i64 2147607836, i64 2147607879, i64 2147607919}
!4553 = !DILocation(line: 150, column: 1, scope: !4273)
!4554 = !{i64 2147608065, i64 2147608108, i64 2147608148}
!4555 = !DILocation(line: 151, column: 1, scope: !4273)
!4556 = !{i64 2147608294, i64 2147608337, i64 2147608377}
!4557 = !DILocation(line: 152, column: 1, scope: !4273)
!4558 = !{i64 2147608502, i64 2147608545, i64 2147608585}
!4559 = !DILocation(line: 153, column: 1, scope: !4273)
!4560 = !{i64 2147608740, i64 2147608783, i64 2147608823}
!4561 = !DILocation(line: 154, column: 1, scope: !4273)
!4562 = !{i64 2147608966, i64 2147609009, i64 2147609049}
!4563 = !DILocation(line: 155, column: 1, scope: !4273)
!4564 = !{i64 2147609225, i64 2147609268, i64 2147609308}
!4565 = !DILocation(line: 156, column: 1, scope: !4273)
!4566 = !{i64 2147609445, i64 2147609488, i64 2147609528}
!4567 = !DILocation(line: 157, column: 1, scope: !4273)
!4568 = !{i64 2147609677, i64 2147609720, i64 2147609760}
!4569 = !DILocation(line: 158, column: 1, scope: !4273)
!4570 = !{i64 2147609918, i64 2147609961, i64 2147610001}
!4571 = !DILocation(line: 159, column: 1, scope: !4273)
!4572 = !{i64 2147610159, i64 2147610202, i64 2147610242}
!4573 = !DILocation(line: 160, column: 1, scope: !4273)
!4574 = !{i64 2147610382, i64 2147610425, i64 2147610465}
!4575 = !DILocation(line: 161, column: 1, scope: !4273)
!4576 = !{i64 2147610599, i64 2147610642, i64 2147610682}
!4577 = !DILocation(line: 162, column: 1, scope: !4273)
!4578 = !{i64 2147610840, i64 2147610883, i64 2147610923}
!4579 = !DILocation(line: 163, column: 1, scope: !4273)
!4580 = !{i64 2147611027, i64 2147611070, i64 2147611110}
!4581 = !DILocation(line: 164, column: 1, scope: !4273)
!4582 = !{i64 2147611214, i64 2147611257, i64 2147611297}
!4583 = !DILocation(line: 165, column: 1, scope: !4273)
!4584 = !{i64 2147611377, i64 2147611420, i64 2147611460}
!4585 = !DILocation(line: 166, column: 1, scope: !4273)
!4586 = !{i64 2147611636, i64 2147611679, i64 2147611719}
!4587 = !DILocation(line: 167, column: 1, scope: !4273)
!4588 = !{i64 2147611859, i64 2147611902, i64 2147611942}
!4589 = !DILocation(line: 168, column: 1, scope: !4273)
!4590 = !{i64 2147612088, i64 2147612131, i64 2147612171}
!4591 = !DILocation(line: 169, column: 1, scope: !4273)
!4592 = !{i64 2147612284, i64 2147612327, i64 2147612367}
!4593 = !DILocation(line: 170, column: 1, scope: !4273)
!4594 = !{i64 2147616557, i64 2147616600, i64 2147616640}
!4595 = !DILocation(line: 171, column: 1, scope: !4273)
!4596 = !{i64 2147616778, i64 2147616821, i64 2147616861}
!4597 = !DILocation(line: 172, column: 1, scope: !4273)
!4598 = !{i64 2147616992, i64 2147617035, i64 2147617075}
!4599 = !DILocation(line: 173, column: 1, scope: !4273)
!4600 = !{i64 2147617182, i64 2147617225, i64 2147617265}
!4601 = !DILocation(line: 174, column: 1, scope: !4273)
!4602 = !{i64 2147617381, i64 2147617424, i64 2147617464}
!4603 = !DILocation(line: 175, column: 1, scope: !4273)
!4604 = !{i64 2147617586, i64 2147617629, i64 2147617669}
!4605 = !DILocation(line: 176, column: 1, scope: !4273)
!4606 = !{i64 2147617806, i64 2147617849, i64 2147617889}
!4607 = !DILocation(line: 177, column: 1, scope: !4273)
!4608 = !{i64 2147618007, i64 2147618050, i64 2147618090}
!4609 = !DILocation(line: 178, column: 1, scope: !4273)
!4610 = !{i64 2147618206, i64 2147618249, i64 2147618289}
!4611 = !DILocation(line: 179, column: 1, scope: !4273)
!4612 = !{i64 2147618411, i64 2147618454, i64 2147618494}
!4613 = !DILocation(line: 180, column: 1, scope: !4273)
!4614 = !{i64 2147618580, i64 2147618623, i64 2147618663}
!4615 = !DILocation(line: 181, column: 1, scope: !4273)
!4616 = !{i64 2147618764, i64 2147618807, i64 2147618847}
!4617 = !DILocation(line: 182, column: 1, scope: !4273)
!4618 = !{i64 2147618948, i64 2147618991, i64 2147619031}
!4619 = !DILocation(line: 183, column: 1, scope: !4273)
!4620 = !{i64 2147619135, i64 2147619178, i64 2147619218}
!4621 = !DILocation(line: 184, column: 1, scope: !4273)
!4622 = !{i64 2147619319, i64 2147619362, i64 2147619402}
!4623 = !DILocation(line: 185, column: 1, scope: !4273)
!4624 = !{i64 2147619557, i64 2147619600, i64 2147619640}
!4625 = !DILocation(line: 186, column: 1, scope: !4273)
!4626 = !{i64 2147619787, i64 2147619830, i64 2147619870}
!4627 = !DILocation(line: 187, column: 1, scope: !4273)
!4628 = !{i64 2147620016, i64 2147620059, i64 2147620099}
!4629 = !DILocation(line: 188, column: 1, scope: !4273)
!4630 = !{i64 2147620203, i64 2147620246, i64 2147620286}
!4631 = !DILocation(line: 189, column: 1, scope: !4273)
!4632 = !{i64 2147620399, i64 2147620442, i64 2147620482}
!4633 = !DILocation(line: 190, column: 1, scope: !4273)
!4634 = !{i64 2147620607, i64 2147620650, i64 2147620690}
!4635 = !DILocation(line: 191, column: 1, scope: !4273)
!4636 = !{i64 2147620819, i64 2147620862, i64 2147620902}
!4637 = !DILocation(line: 192, column: 1, scope: !4273)
!4638 = !{i64 2147621018, i64 2147621061, i64 2147621101}
!4639 = !DILocation(line: 193, column: 1, scope: !4273)
!4640 = !{i64 2147621256, i64 2147621299, i64 2147621339}
!4641 = !DILocation(line: 194, column: 1, scope: !4273)
!4642 = !{i64 2147621452, i64 2147621495, i64 2147621535}
!4643 = !DILocation(line: 195, column: 1, scope: !4273)
!4644 = !{i64 2147621654, i64 2147621697, i64 2147621737}
!4645 = !DILocation(line: 196, column: 1, scope: !4273)
!4646 = !{i64 2147621847, i64 2147621890, i64 2147621930}
!4647 = !DILocation(line: 197, column: 1, scope: !4273)
!4648 = !{i64 2147622081, i64 2147622124, i64 2147622164}
!4649 = !DILocation(line: 198, column: 1, scope: !4273)
!4650 = !{i64 2147622244, i64 2147622287, i64 2147622327}
!4651 = !DILocation(line: 199, column: 1, scope: !4273)
!4652 = !{i64 2147622483, i64 2147622526, i64 2147622566}
!4653 = !DILocation(line: 200, column: 1, scope: !4273)
!4654 = !{i64 2147622722, i64 2147622765, i64 2147622805}
!4655 = !DILocation(line: 201, column: 1, scope: !4273)
!4656 = !{i64 2147622958, i64 2147623001, i64 2147623041}
!4657 = !DILocation(line: 202, column: 1, scope: !4273)
!4658 = !{i64 2147623188, i64 2147623231, i64 2147623271}
!4659 = !DILocation(line: 203, column: 1, scope: !4273)
!4660 = !{i64 2147623375, i64 2147623418, i64 2147623458}
!4661 = !DILocation(line: 204, column: 1, scope: !4273)
!4662 = !{i64 2147623574, i64 2147623617, i64 2147623657}
!4663 = !DILocation(line: 205, column: 1, scope: !4273)
!4664 = !{i64 2147623845, i64 2147623888, i64 2147623928}
!4665 = !DILocation(line: 206, column: 1, scope: !4273)
!4666 = !{i64 2147624020, i64 2147624063, i64 2147624103}
!4667 = !DILocation(line: 207, column: 1, scope: !4273)
!4668 = !{i64 2147624254, i64 2147624297, i64 2147624337}
!4669 = !DILocation(line: 208, column: 1, scope: !4273)
!4670 = !{i64 2147624462, i64 2147624505, i64 2147624545}
!4671 = !DILocation(line: 209, column: 1, scope: !4273)
!4672 = !{i64 2147624680, i64 2147624723, i64 2147624763}
!4673 = !DILocation(line: 210, column: 1, scope: !4273)
!4674 = !{i64 2147624870, i64 2147624913, i64 2147624953}
!4675 = !DILocation(line: 211, column: 1, scope: !4273)
!4676 = !{i64 2147625066, i64 2147625109, i64 2147625149}
!4677 = !DILocation(line: 212, column: 1, scope: !4273)
!4678 = !{i64 2147625272, i64 2147625315, i64 2147625355}
!4679 = !DILocation(line: 213, column: 1, scope: !4273)
!4680 = !{i64 2147625477, i64 2147625520, i64 2147625560}
!4681 = !DILocation(line: 214, column: 1, scope: !4273)
!4682 = !{i64 2147629752, i64 2147629795, i64 2147629835}
!4683 = !DILocation(line: 215, column: 1, scope: !4273)
!4684 = !{i64 2147629978, i64 2147630021, i64 2147630061}
!4685 = !DILocation(line: 216, column: 1, scope: !4273)
!4686 = !{i64 2147630210, i64 2147630253, i64 2147630293}
!4687 = !DILocation(line: 217, column: 1, scope: !4273)
!4688 = !{i64 2147630394, i64 2147630437, i64 2147630477}
!4689 = !DILocation(line: 218, column: 1, scope: !4273)
!4690 = !{i64 2147630603, i64 2147630646, i64 2147630686}
!4691 = !DILocation(line: 219, column: 1, scope: !4273)
!4692 = !{i64 2147630787, i64 2147630830, i64 2147630870}
!4693 = !DILocation(line: 220, column: 1, scope: !4273)
!4694 = !{i64 2147631013, i64 2147631056, i64 2147631096}
!4695 = !DILocation(line: 221, column: 1, scope: !4273)
!4696 = !{i64 2147631239, i64 2147631282, i64 2147631322}
!4697 = !DILocation(line: 222, column: 1, scope: !4273)
!4698 = !{i64 2147631465, i64 2147631508, i64 2147631548}
!4699 = !DILocation(line: 223, column: 1, scope: !4273)
!4700 = !{i64 2147631691, i64 2147631734, i64 2147631774}
!4701 = !DILocation(line: 224, column: 1, scope: !4273)
!4702 = !{i64 2147631917, i64 2147631960, i64 2147632000}
!4703 = !DILocation(line: 225, column: 1, scope: !4273)
!4704 = !{i64 2147632149, i64 2147632192, i64 2147632232}
!4705 = !DILocation(line: 226, column: 1, scope: !4273)
!4706 = !{i64 2147632387, i64 2147632430, i64 2147632470}
!4707 = !DILocation(line: 227, column: 1, scope: !4273)
!4708 = !{i64 2147632607, i64 2147632650, i64 2147632690}
!4709 = !DILocation(line: 228, column: 1, scope: !4273)
!4710 = !{i64 2147632851, i64 2147632894, i64 2147632934}
!4711 = !DILocation(line: 229, column: 1, scope: !4273)
!4712 = !{i64 2147633092, i64 2147633135, i64 2147633175}
!4713 = !DILocation(line: 230, column: 1, scope: !4273)
!4714 = !{i64 2147633327, i64 2147633370, i64 2147633410}
!4715 = !DILocation(line: 231, column: 1, scope: !4273)
!4716 = !{i64 2147633559, i64 2147633602, i64 2147633642}
!4717 = !DILocation(line: 232, column: 1, scope: !4273)
!4718 = !{i64 2147633761, i64 2147633804, i64 2147633844}
!4719 = !DILocation(line: 233, column: 1, scope: !4273)
!4720 = !{i64 2147634011, i64 2147634054, i64 2147634094}
!4721 = !DILocation(line: 234, column: 1, scope: !4273)
!4722 = !{i64 2147634249, i64 2147634292, i64 2147634332}
!4723 = !DILocation(line: 235, column: 1, scope: !4273)
!4724 = !{i64 2147634433, i64 2147634476, i64 2147634516}
!4725 = !DILocation(line: 236, column: 1, scope: !4273)
!4726 = !{i64 2147634657, i64 2147634700, i64 2147634740}
!4727 = !DILocation(line: 237, column: 1, scope: !4273)
!4728 = !{i64 2147634895, i64 2147634938, i64 2147634978}
!4729 = !DILocation(line: 238, column: 1, scope: !4273)
!4730 = !{i64 2147635133, i64 2147635176, i64 2147635216}
!4731 = !DILocation(line: 239, column: 1, scope: !4273)
!4732 = !{i64 2147635326, i64 2147635369, i64 2147635409}
!4733 = !DILocation(line: 240, column: 1, scope: !4273)
!4734 = !{i64 2147635579, i64 2147635622, i64 2147635662}
!4735 = !DILocation(line: 241, column: 1, scope: !4273)
!4736 = !{i64 2147635793, i64 2147635836, i64 2147635876}
!4737 = !DILocation(line: 242, column: 1, scope: !4273)
!4738 = !{i64 2147636001, i64 2147636044, i64 2147636084}
!4739 = !DILocation(line: 243, column: 1, scope: !4273)
!4740 = !{i64 2147636191, i64 2147636234, i64 2147636274}
!4741 = !DILocation(line: 244, column: 1, scope: !4273)
!4742 = !{i64 2147636405, i64 2147636448, i64 2147636488}
!4743 = !DILocation(line: 245, column: 1, scope: !4273)
!4744 = !{i64 2147636667, i64 2147636710, i64 2147636750}
!4745 = !DILocation(line: 246, column: 1, scope: !4273)
!4746 = !{i64 2147636878, i64 2147636921, i64 2147636961}
!4747 = !DILocation(line: 247, column: 1, scope: !4273)
!4748 = !{i64 2147637122, i64 2147637165, i64 2147637205}
!4749 = !DILocation(line: 248, column: 1, scope: !4273)
!4750 = !{i64 2147637333, i64 2147637376, i64 2147637416}
!4751 = !DILocation(line: 249, column: 1, scope: !4273)
!4752 = !{i64 2147637562, i64 2147637605, i64 2147637645}
!4753 = !DILocation(line: 250, column: 1, scope: !4273)
!4754 = !{i64 2147637827, i64 2147637870, i64 2147637910}
!4755 = !DILocation(line: 251, column: 1, scope: !4273)
!4756 = !{i64 2147638032, i64 2147638075, i64 2147638115}
!4757 = !DILocation(line: 252, column: 1, scope: !4273)
!4758 = !{i64 2147642289, i64 2147642332, i64 2147642372}
!4759 = !DILocation(line: 253, column: 1, scope: !4273)
!4760 = !{i64 2147642512, i64 2147642555, i64 2147642595}
!4761 = !DILocation(line: 254, column: 1, scope: !4273)
!4762 = !{i64 2147642675, i64 2147642718, i64 2147642758}
!4763 = !DILocation(line: 255, column: 1, scope: !4273)
!4764 = !{i64 2147642880, i64 2147642923, i64 2147642963}
!4765 = !DILocation(line: 256, column: 1, scope: !4273)
!4766 = !{i64 2147643100, i64 2147643143, i64 2147643183}
!4767 = !DILocation(line: 257, column: 1, scope: !4273)
!4768 = !{i64 2147643314, i64 2147643357, i64 2147643397}
!4769 = !DILocation(line: 258, column: 1, scope: !4273)
!4770 = !{i64 2147643528, i64 2147643571, i64 2147643611}
!4771 = !DILocation(line: 259, column: 1, scope: !4273)
!4772 = !{i64 2147643739, i64 2147643782, i64 2147643822}
!4773 = !DILocation(line: 260, column: 1, scope: !4273)
!4774 = !{i64 2147643932, i64 2147643975, i64 2147644015}
!4775 = !DILocation(line: 261, column: 1, scope: !4273)
!4776 = !{i64 2147644131, i64 2147644174, i64 2147644214}
!4777 = !DILocation(line: 262, column: 1, scope: !4273)
!4778 = !{i64 2147644303, i64 2147644346, i64 2147644386}
!4779 = !DILocation(line: 263, column: 1, scope: !4273)
!4780 = !{i64 2147644496, i64 2147644539, i64 2147644579}
!4781 = !DILocation(line: 264, column: 1, scope: !4273)
!4782 = !{i64 2147644692, i64 2147644735, i64 2147644775}
!4783 = !DILocation(line: 265, column: 1, scope: !4273)
!4784 = !{i64 2147644919, i64 2147644962, i64 2147645002}
!4785 = !DILocation(line: 266, column: 1, scope: !4273)
!4786 = !{i64 2147645136, i64 2147645179, i64 2147645219}
!4787 = !DILocation(line: 267, column: 1, scope: !4273)
!4788 = !{i64 2147645428, i64 2147645471, i64 2147645511}
!4789 = !DILocation(line: 268, column: 1, scope: !4273)
!4790 = !{i64 2147645660, i64 2147645703, i64 2147645743}
!4791 = !DILocation(line: 269, column: 1, scope: !4273)
!4792 = !{i64 2147645877, i64 2147645920, i64 2147645960}
!4793 = !DILocation(line: 270, column: 1, scope: !4273)
!4794 = !{i64 2147646084, i64 2147646127, i64 2147646167}
!4795 = !DILocation(line: 271, column: 1, scope: !4273)
!4796 = !{i64 2147646285, i64 2147646328, i64 2147646368}
!4797 = !DILocation(line: 272, column: 1, scope: !4273)
!4798 = !{i64 2147646517, i64 2147646560, i64 2147646600}
!4799 = !DILocation(line: 273, column: 1, scope: !4273)
!4800 = !{i64 2147646725, i64 2147646768, i64 2147646808}
!4801 = !DILocation(line: 274, column: 1, scope: !4273)
!4802 = !{i64 2147646915, i64 2147646958, i64 2147646998}
!4803 = !DILocation(line: 275, column: 1, scope: !4273)
!4804 = !{i64 2147647141, i64 2147647184, i64 2147647224}
!4805 = !DILocation(line: 276, column: 1, scope: !4273)
!4806 = !{i64 2147647330, i64 2147647373, i64 2147647413}
!4807 = !DILocation(line: 277, column: 1, scope: !4273)
!4808 = !{i64 2147647601, i64 2147647644, i64 2147647684}
!4809 = !DILocation(line: 278, column: 1, scope: !4273)
!4810 = !{i64 2147647821, i64 2147647864, i64 2147647904}
!4811 = !DILocation(line: 279, column: 1, scope: !4273)
!4812 = !{i64 2147648074, i64 2147648117, i64 2147648157}
!4813 = !DILocation(line: 280, column: 1, scope: !4273)
!4814 = !{i64 2147648282, i64 2147648325, i64 2147648365}
!4815 = !DILocation(line: 281, column: 1, scope: !4273)
!4816 = !{i64 2147648514, i64 2147648557, i64 2147648597}
!4817 = !DILocation(line: 282, column: 1, scope: !4273)
!4818 = !{i64 2147648725, i64 2147648768, i64 2147648808}
!4819 = !DILocation(line: 283, column: 1, scope: !4273)
!4820 = !{i64 2147648915, i64 2147648958, i64 2147648998}
!4821 = !DILocation(line: 284, column: 1, scope: !4273)
!4822 = !{i64 2147649129, i64 2147649172, i64 2147649212}
!4823 = !DILocation(line: 285, column: 1, scope: !4273)
!4824 = !{i64 2147649328, i64 2147649371, i64 2147649411}
!4825 = !DILocation(line: 286, column: 1, scope: !4273)
!4826 = !{i64 2147649515, i64 2147649558, i64 2147649598}
!4827 = !DILocation(line: 287, column: 1, scope: !4273)
!4828 = !{i64 2147649723, i64 2147649766, i64 2147649806}
!4829 = !DILocation(line: 288, column: 1, scope: !4273)
!4830 = !{i64 2147649952, i64 2147649995, i64 2147650035}
!4831 = !DILocation(line: 289, column: 1, scope: !4273)
!4832 = !{i64 2147650154, i64 2147650197, i64 2147650237}
!4833 = !DILocation(line: 290, column: 1, scope: !4273)
!4834 = !{i64 2147650353, i64 2147650396, i64 2147650436}
!4835 = !DILocation(line: 291, column: 1, scope: !4273)
!4836 = !{i64 2147650570, i64 2147650613, i64 2147650653}
!4837 = !DILocation(line: 293, column: 1, scope: !4273)
!4838 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !129, file: !129, line: 30, type: !136, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4839)
!4839 = !{!4840, !4841}
!4840 = !DILocalVariable(name: "arg", arg: 1, scope: !4838, file: !129, line: 30, type: !138)
!4841 = !DILocalVariable(name: "key", scope: !4838, file: !129, line: 32, type: !121)
!4842 = !DILocation(line: 0, scope: !4838)
!4843 = !DILocation(line: 37, column: 2, scope: !4838)
!4844 = !DILocation(line: 38, column: 2, scope: !4838)
!4845 = !DILocation(line: 55, column: 2, scope: !4846, inlinedAt: !4853)
!4846 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4847, file: !4847, line: 42, type: !4848, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4850)
!4847 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4848 = !DISubroutineType(types: !4849)
!4849 = !{!32}
!4850 = !{!4851, !4852}
!4851 = !DILocalVariable(name: "key", scope: !4846, file: !4847, line: 44, type: !32)
!4852 = !DILocalVariable(name: "tmp", scope: !4846, file: !4847, line: 53, type: !32)
!4853 = distinct !DILocation(line: 40, column: 8, scope: !4838)
!4854 = !{i64 2184626}
!4855 = !DILocation(line: 0, scope: !4846, inlinedAt: !4853)
!4856 = !DILocalVariable(name: "key", arg: 1, scope: !4857, file: !4847, line: 84, type: !32)
!4857 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4847, file: !4847, line: 84, type: !4858, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4860)
!4858 = !DISubroutineType(types: !4859)
!4859 = !{null, !32}
!4860 = !{!4856}
!4861 = !DILocation(line: 0, scope: !4857, inlinedAt: !4862)
!4862 = distinct !DILocation(line: 47, column: 2, scope: !4838)
!4863 = !DILocation(line: 95, column: 2, scope: !4857, inlinedAt: !4862)
!4864 = !{i64 2185443}
!4865 = !DILocation(line: 51, column: 18, scope: !4838)
!4866 = !DILocation(line: 53, column: 2, scope: !4838)
!4867 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !4868, file: !4868, line: 1609, type: !2909, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!4868 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4869 = !DILocation(line: 1611, column: 3, scope: !4867)
!4870 = !DILocation(line: 1612, column: 1, scope: !4867)
!4871 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !4868, file: !4868, line: 1629, type: !2909, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !322)
!4872 = !DILocation(line: 1631, column: 3, scope: !4871)
!4873 = !DILocation(line: 1632, column: 1, scope: !4871)
!4874 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !171, file: !171, line: 26, type: !177, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !168, retainedNodes: !4875)
!4875 = !{!4876}
!4876 = !DILocalVariable(name: "dev", arg: 1, scope: !4874, file: !171, line: 26, type: !179)
!4877 = !DILocation(line: 0, scope: !4874)
!4878 = !DILocation(line: 68, column: 2, scope: !4874)
!4879 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !4880, file: !4880, line: 57, type: !4881, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2388, retainedNodes: !4927)
!4880 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4881 = !DISubroutineType(types: !4882)
!4882 = !{null, !32, !4883}
!4883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4884, size: 32)
!4884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4885)
!4885 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2508, line: 141, baseType: !4886)
!4886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2508, line: 97, size: 256, elements: !4887)
!4887 = !{!4888}
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !4886, file: !2508, line: 107, baseType: !4889, size: 256)
!4889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2508, line: 98, size: 256, elements: !4890)
!4890 = !{!4891, !4896, !4901, !4906, !4911, !4916, !4921, !4926}
!4891 = !DIDerivedType(tag: DW_TAG_member, scope: !4889, file: !2508, line: 99, baseType: !4892, size: 32)
!4892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4889, file: !2508, line: 99, size: 32, elements: !4893)
!4893 = !{!4894, !4895}
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !4892, file: !2508, line: 99, baseType: !121, size: 32)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !4892, file: !2508, line: 99, baseType: !121, size: 32)
!4896 = !DIDerivedType(tag: DW_TAG_member, scope: !4889, file: !2508, line: 100, baseType: !4897, size: 32, offset: 32)
!4897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4889, file: !2508, line: 100, size: 32, elements: !4898)
!4898 = !{!4899, !4900}
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !4897, file: !2508, line: 100, baseType: !121, size: 32)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !4897, file: !2508, line: 100, baseType: !121, size: 32)
!4901 = !DIDerivedType(tag: DW_TAG_member, scope: !4889, file: !2508, line: 101, baseType: !4902, size: 32, offset: 64)
!4902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4889, file: !2508, line: 101, size: 32, elements: !4903)
!4903 = !{!4904, !4905}
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !4902, file: !2508, line: 101, baseType: !121, size: 32)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !4902, file: !2508, line: 101, baseType: !121, size: 32)
!4906 = !DIDerivedType(tag: DW_TAG_member, scope: !4889, file: !2508, line: 102, baseType: !4907, size: 32, offset: 96)
!4907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4889, file: !2508, line: 102, size: 32, elements: !4908)
!4908 = !{!4909, !4910}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !4907, file: !2508, line: 102, baseType: !121, size: 32)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !4907, file: !2508, line: 102, baseType: !121, size: 32)
!4911 = !DIDerivedType(tag: DW_TAG_member, scope: !4889, file: !2508, line: 103, baseType: !4912, size: 32, offset: 128)
!4912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4889, file: !2508, line: 103, size: 32, elements: !4913)
!4913 = !{!4914, !4915}
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4912, file: !2508, line: 103, baseType: !121, size: 32)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4912, file: !2508, line: 103, baseType: !121, size: 32)
!4916 = !DIDerivedType(tag: DW_TAG_member, scope: !4889, file: !2508, line: 104, baseType: !4917, size: 32, offset: 160)
!4917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4889, file: !2508, line: 104, size: 32, elements: !4918)
!4918 = !{!4919, !4920}
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !4917, file: !2508, line: 104, baseType: !121, size: 32)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4917, file: !2508, line: 104, baseType: !121, size: 32)
!4921 = !DIDerivedType(tag: DW_TAG_member, scope: !4889, file: !2508, line: 105, baseType: !4922, size: 32, offset: 192)
!4922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4889, file: !2508, line: 105, size: 32, elements: !4923)
!4923 = !{!4924, !4925}
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !4922, file: !2508, line: 105, baseType: !121, size: 32)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4922, file: !2508, line: 105, baseType: !121, size: 32)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !4889, file: !2508, line: 106, baseType: !121, size: 32, offset: 224)
!4927 = !{!4928, !4929}
!4928 = !DILocalVariable(name: "reason", arg: 1, scope: !4879, file: !4880, line: 57, type: !32)
!4929 = !DILocalVariable(name: "esf", arg: 2, scope: !4879, file: !4880, line: 57, type: !4883)
!4930 = !DILocation(line: 0, scope: !4879)
!4931 = !DILocation(line: 63, column: 2, scope: !4879)
!4932 = !DILocation(line: 64, column: 1, scope: !4879)
!4933 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !4880, file: !4880, line: 82, type: !4934, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2388, retainedNodes: !4949)
!4934 = !DISubroutineType(types: !4935)
!4935 = !{null, !4883, !4936}
!4936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4937, size: 32)
!4937 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !4938)
!4938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !4939)
!4939 = !{!4940, !4941, !4942, !4943, !4944, !4945, !4946, !4947, !4948}
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4938, file: !284, line: 26, baseType: !121, size: 32)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4938, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4938, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4938, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4938, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4938, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4938, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4938, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4938, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!4949 = !{!4950, !4951, !4952}
!4950 = !DILocalVariable(name: "esf", arg: 1, scope: !4933, file: !4880, line: 82, type: !4883)
!4951 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !4933, file: !4880, line: 82, type: !4936)
!4952 = !DILocalVariable(name: "reason", scope: !4933, file: !4880, line: 88, type: !32)
!4953 = !DILocation(line: 0, scope: !4933)
!4954 = !DILocation(line: 88, column: 35, scope: !4933)
!4955 = !DILocation(line: 108, column: 2, scope: !4933)
!4956 = !DILocation(line: 131, column: 1, scope: !4933)
!4957 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !4880, file: !4880, line: 133, type: !4958, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2388, retainedNodes: !4960)
!4958 = !DISubroutineType(types: !4959)
!4959 = !{null, !102}
!4960 = !{!4961, !4962, !4963}
!4961 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !4957, file: !4880, line: 133, type: !102)
!4962 = !DILocalVariable(name: "ssf_contents", scope: !4957, file: !4880, line: 135, type: !723)
!4963 = !DILocalVariable(name: "oops_esf", scope: !4957, file: !4880, line: 136, type: !4885)
!4964 = !DILocation(line: 0, scope: !4957)
!4965 = !DILocation(line: 136, column: 2, scope: !4957)
!4966 = !DILocation(line: 136, column: 15, scope: !4957)
!4967 = !DILocation(line: 139, column: 22, scope: !4957)
!4968 = !DILocation(line: 139, column: 17, scope: !4957)
!4969 = !DILocation(line: 139, column: 20, scope: !4957)
!4970 = !DILocation(line: 141, column: 2, scope: !4957)
!4971 = !DILocation(line: 142, column: 2, scope: !4957)
!4972 = distinct !DISubprogram(name: "arch_irq_enable", scope: !4973, file: !4973, line: 40, type: !4858, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !4974)
!4973 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4974 = !{!4975}
!4975 = !DILocalVariable(name: "irq", arg: 1, scope: !4972, file: !4973, line: 40, type: !32)
!4976 = !DILocation(line: 0, scope: !4972)
!4977 = !DILocation(line: 42, column: 2, scope: !4972)
!4978 = !DILocation(line: 43, column: 1, scope: !4972)
!4979 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !356, file: !356, line: 1684, type: !4980, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !4982)
!4980 = !DISubroutineType(types: !4981)
!4981 = !{null, !621}
!4982 = !{!4983}
!4983 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4979, file: !356, line: 1684, type: !621)
!4984 = !DILocation(line: 0, scope: !4979)
!4985 = !DILocation(line: 1686, column: 23, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4979, file: !356, line: 1686, column: 7)
!4987 = !DILocation(line: 1686, column: 7, scope: !4979)
!4988 = !DILocation(line: 1688, column: 5, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4986, file: !356, line: 1687, column: 3)
!4990 = !{i64 2151254148}
!4991 = !DILocation(line: 1689, column: 81, scope: !4989)
!4992 = !DILocation(line: 1689, column: 60, scope: !4989)
!4993 = !DILocation(line: 1689, column: 34, scope: !4989)
!4994 = !DILocation(line: 1689, column: 5, scope: !4989)
!4995 = !DILocation(line: 1689, column: 43, scope: !4989)
!4996 = !DILocation(line: 1690, column: 5, scope: !4989)
!4997 = !{i64 2151254262}
!4998 = !DILocation(line: 1691, column: 3, scope: !4989)
!4999 = !DILocation(line: 1692, column: 1, scope: !4979)
!5000 = distinct !DISubprogram(name: "arch_irq_disable", scope: !4973, file: !4973, line: 45, type: !4858, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !5001)
!5001 = !{!5002}
!5002 = !DILocalVariable(name: "irq", arg: 1, scope: !5000, file: !4973, line: 45, type: !32)
!5003 = !DILocation(line: 0, scope: !5000)
!5004 = !DILocation(line: 47, column: 2, scope: !5000)
!5005 = !DILocation(line: 48, column: 1, scope: !5000)
!5006 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !356, file: !356, line: 1722, type: !4980, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !5007)
!5007 = !{!5008}
!5008 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5006, file: !356, line: 1722, type: !621)
!5009 = !DILocation(line: 0, scope: !5006)
!5010 = !DILocation(line: 1724, column: 23, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5006, file: !356, line: 1724, column: 7)
!5012 = !DILocation(line: 1724, column: 7, scope: !5006)
!5013 = !DILocation(line: 1726, column: 81, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5011, file: !356, line: 1725, column: 3)
!5015 = !DILocation(line: 1726, column: 60, scope: !5014)
!5016 = !DILocation(line: 1726, column: 34, scope: !5014)
!5017 = !DILocation(line: 1726, column: 5, scope: !5014)
!5018 = !DILocation(line: 1726, column: 43, scope: !5014)
!5019 = !DILocation(line: 271, column: 3, scope: !5020, inlinedAt: !5022)
!5020 = distinct !DISubprogram(name: "__DSB", scope: !5021, file: !5021, line: 269, type: !2909, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !322)
!5021 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5022 = distinct !DILocation(line: 1727, column: 5, scope: !5014)
!5023 = !{i64 3708531}
!5024 = !DILocation(line: 260, column: 3, scope: !5025, inlinedAt: !5026)
!5025 = distinct !DISubprogram(name: "__ISB", scope: !5021, file: !5021, line: 258, type: !2909, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !322)
!5026 = distinct !DILocation(line: 1728, column: 5, scope: !5014)
!5027 = !{i64 3708248}
!5028 = !DILocation(line: 1729, column: 3, scope: !5014)
!5029 = !DILocation(line: 1730, column: 1, scope: !5006)
!5030 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !4973, file: !4973, line: 50, type: !5031, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !5033)
!5031 = !DISubroutineType(types: !5032)
!5032 = !{!103, !32}
!5033 = !{!5034}
!5034 = !DILocalVariable(name: "irq", arg: 1, scope: !5030, file: !4973, line: 50, type: !32)
!5035 = !DILocation(line: 0, scope: !5030)
!5036 = !DILocation(line: 52, column: 20, scope: !5030)
!5037 = !DILocation(line: 52, column: 9, scope: !5030)
!5038 = !DILocation(line: 52, column: 41, scope: !5030)
!5039 = !DILocation(line: 52, column: 39, scope: !5030)
!5040 = !DILocation(line: 52, column: 2, scope: !5030)
!5041 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !4973, file: !4973, line: 64, type: !5042, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !5044)
!5042 = !DISubroutineType(types: !5043)
!5043 = !{null, !32, !32, !121}
!5044 = !{!5045, !5046, !5047}
!5045 = !DILocalVariable(name: "irq", arg: 1, scope: !5041, file: !4973, line: 64, type: !32)
!5046 = !DILocalVariable(name: "prio", arg: 2, scope: !5041, file: !4973, line: 64, type: !32)
!5047 = !DILocalVariable(name: "flags", arg: 3, scope: !5041, file: !4973, line: 64, type: !121)
!5048 = !DILocation(line: 0, scope: !5041)
!5049 = !DILocation(line: 83, column: 8, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5051, file: !4973, line: 82, column: 9)
!5051 = distinct !DILexicalBlock(scope: !5041, file: !4973, line: 76, column: 6)
!5052 = !DILocation(line: 95, column: 2, scope: !5041)
!5053 = !DILocation(line: 96, column: 1, scope: !5041)
!5054 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5055, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !5057)
!5055 = !DISubroutineType(types: !5056)
!5056 = !{null, !621, !121}
!5057 = !{!5058, !5059}
!5058 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5054, file: !356, line: 1814, type: !621)
!5059 = !DILocalVariable(name: "priority", arg: 2, scope: !5054, file: !356, line: 1814, type: !121)
!5060 = !DILocation(line: 0, scope: !5054)
!5061 = !DILocation(line: 0, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5054, file: !356, line: 1816, column: 7)
!5063 = !DILocation(line: 1816, column: 7, scope: !5054)
!5064 = !DILocation(line: 1824, column: 1, scope: !5054)
!5065 = distinct !DISubprogram(name: "z_irq_spurious", scope: !4973, file: !4973, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !5066)
!5066 = !{!5067}
!5067 = !DILocalVariable(name: "unused", arg: 1, scope: !5065, file: !4973, line: 155, type: !13)
!5068 = !DILocation(line: 0, scope: !5065)
!5069 = !DILocation(line: 159, column: 2, scope: !5065)
!5070 = !DILocation(line: 160, column: 1, scope: !5065)
!5071 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5072, file: !5072, line: 87, type: !2909, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2445, retainedNodes: !322)
!5072 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5073 = !DILocation(line: 89, column: 2, scope: !5071)
!5074 = !DILocation(line: 90, column: 2, scope: !5071)
!5075 = !DILocation(line: 91, column: 1, scope: !5071)
!5076 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5072, file: !5072, line: 23, type: !2909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!5077 = !DISubprogram(name: "z_arm_int_exit", scope: !5078, file: !5078, line: 153, type: !2909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!5078 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5079 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5080, file: !5080, line: 256, type: !2909, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !322)
!5080 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5081 = !DILocation(line: 258, column: 2, scope: !5079)
!5082 = !DILocation(line: 260, column: 2, scope: !5079)
!5083 = !DILocation(line: 262, column: 2, scope: !5079)
!5084 = !DILocation(line: 263, column: 2, scope: !5079)
!5085 = !DILocation(line: 267, column: 2, scope: !5079)
!5086 = !DILocation(line: 268, column: 2, scope: !5079)
!5087 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5080, file: !5080, line: 53, type: !2909, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !322)
!5088 = !DILocation(line: 55, column: 12, scope: !5087)
!5089 = !DILocation(line: 271, column: 3, scope: !5090, inlinedAt: !5091)
!5090 = distinct !DISubprogram(name: "__DSB", scope: !5021, file: !5021, line: 269, type: !2909, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !322)
!5091 = distinct !DILocation(line: 56, column: 2, scope: !5087)
!5092 = !{i64 3707202}
!5093 = !DILocation(line: 260, column: 3, scope: !5094, inlinedAt: !5095)
!5094 = distinct !DISubprogram(name: "__ISB", scope: !5021, file: !5021, line: 258, type: !2909, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !322)
!5095 = distinct !DILocation(line: 57, column: 2, scope: !5087)
!5096 = !{i64 3706919}
!5097 = !DILocation(line: 58, column: 1, scope: !5087)
!5098 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !5080, file: !5080, line: 96, type: !2909, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !322)
!5099 = !DILocation(line: 103, column: 13, scope: !5098)
!5100 = !DILocation(line: 975, column: 3, scope: !5101, inlinedAt: !5106)
!5101 = distinct !DISubprogram(name: "__get_CONTROL", scope: !5021, file: !5021, line: 971, type: !5102, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !5104)
!5102 = !DISubroutineType(types: !5103)
!5103 = !{!121}
!5104 = !{!5105}
!5105 = !DILocalVariable(name: "result", scope: !5101, file: !5021, line: 973, type: !121)
!5106 = distinct !DILocation(line: 189, column: 16, scope: !5098)
!5107 = !{i64 3728032}
!5108 = !DILocation(line: 0, scope: !5101, inlinedAt: !5106)
!5109 = !DILocation(line: 189, column: 32, scope: !5098)
!5110 = !DILocalVariable(name: "control", arg: 1, scope: !5111, file: !5021, line: 1001, type: !121)
!5111 = distinct !DISubprogram(name: "__set_CONTROL", scope: !5021, file: !5021, line: 1001, type: !5112, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2447, retainedNodes: !5114)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{null, !121}
!5114 = !{!5110}
!5115 = !DILocation(line: 0, scope: !5111, inlinedAt: !5116)
!5116 = distinct !DILocation(line: 189, column: 2, scope: !5098)
!5117 = !DILocation(line: 1003, column: 3, scope: !5111, inlinedAt: !5116)
!5118 = !{i64 3728752}
!5119 = !DILocation(line: 260, column: 3, scope: !5094, inlinedAt: !5120)
!5120 = distinct !DILocation(line: 1004, column: 3, scope: !5111, inlinedAt: !5116)
!5121 = !DILocation(line: 191, column: 1, scope: !5098)
!5122 = distinct !DISubprogram(name: "arch_swap", scope: !5123, file: !5123, line: 33, type: !5031, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2475, retainedNodes: !5124)
!5123 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5124 = !{!5125}
!5125 = !DILocalVariable(name: "key", arg: 1, scope: !5122, file: !5123, line: 33, type: !32)
!5126 = !DILocation(line: 0, scope: !5122)
!5127 = !DILocation(line: 36, column: 2, scope: !5122)
!5128 = !DILocation(line: 36, column: 17, scope: !5122)
!5129 = !DILocation(line: 36, column: 25, scope: !5122)
!5130 = !DILocation(line: 37, column: 37, scope: !5122)
!5131 = !DILocation(line: 37, column: 17, scope: !5122)
!5132 = !DILocation(line: 37, column: 35, scope: !5122)
!5133 = !DILocation(line: 41, column: 12, scope: !5122)
!5134 = !DILocalVariable(name: "key", arg: 1, scope: !5135, file: !4847, line: 84, type: !32)
!5135 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4847, file: !4847, line: 84, type: !4858, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2475, retainedNodes: !5136)
!5136 = !{!5134}
!5137 = !DILocation(line: 0, scope: !5135, inlinedAt: !5138)
!5138 = distinct !DILocation(line: 44, column: 2, scope: !5122)
!5139 = !DILocation(line: 95, column: 2, scope: !5135, inlinedAt: !5138)
!5140 = !{i64 2277703}
!5141 = !DILocation(line: 53, column: 9, scope: !5122)
!5142 = !DILocation(line: 53, column: 24, scope: !5122)
!5143 = !DILocation(line: 53, column: 2, scope: !5122)
!5144 = distinct !DISubprogram(name: "arch_new_thread", scope: !5145, file: !5145, line: 56, type: !5146, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !5253)
!5145 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5146 = !DISubroutineType(types: !5147)
!5147 = !{null, !5148, !5248, !995, !3349, !102, !102, !102}
!5148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5149, size: 32)
!5149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !5150)
!5150 = !{!5151, !5209, !5221, !5222, !5223, !5224, !5230, !5243}
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5149, file: !211, line: 247, baseType: !5152, size: 384)
!5152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !5153)
!5153 = !{!5154, !5178, !5185, !5186, !5187, !5196, !5197, !5198}
!5154 = !DIDerivedType(tag: DW_TAG_member, scope: !5152, file: !211, line: 60, baseType: !5155, size: 64)
!5155 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5152, file: !211, line: 60, size: 64, elements: !5156)
!5156 = !{!5157, !5172}
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5155, file: !211, line: 61, baseType: !5158, size: 64)
!5158 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !5159)
!5159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !5160)
!5160 = !{!5161, !5167}
!5161 = !DIDerivedType(tag: DW_TAG_member, scope: !5159, file: !221, line: 38, baseType: !5162, size: 32)
!5162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5159, file: !221, line: 38, size: 32, elements: !5163)
!5163 = !{!5164, !5166}
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5162, file: !221, line: 39, baseType: !5165, size: 32)
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5159, size: 32)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5162, file: !221, line: 40, baseType: !5165, size: 32)
!5167 = !DIDerivedType(tag: DW_TAG_member, scope: !5159, file: !221, line: 42, baseType: !5168, size: 32, offset: 32)
!5168 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5159, file: !221, line: 42, size: 32, elements: !5169)
!5169 = !{!5170, !5171}
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5168, file: !221, line: 43, baseType: !5165, size: 32)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5168, file: !221, line: 44, baseType: !5165, size: 32)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5155, file: !211, line: 62, baseType: !5173, size: 64)
!5173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !5174)
!5174 = !{!5175}
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5173, file: !237, line: 50, baseType: !5176, size: 64)
!5176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5177, size: 64, elements: !242)
!5177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5173, size: 32)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5152, file: !211, line: 68, baseType: !5179, size: 32, offset: 64)
!5179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5180, size: 32)
!5180 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !5181)
!5181 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !5182)
!5182 = !{!5183}
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5181, file: !247, line: 232, baseType: !5184, size: 64)
!5184 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !5159)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5152, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5152, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!5187 = !DIDerivedType(tag: DW_TAG_member, scope: !5152, file: !211, line: 90, baseType: !5188, size: 16, offset: 112)
!5188 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5152, file: !211, line: 90, size: 16, elements: !5189)
!5189 = !{!5190, !5195}
!5190 = !DIDerivedType(tag: DW_TAG_member, scope: !5188, file: !211, line: 91, baseType: !5191, size: 16)
!5191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5188, file: !211, line: 91, size: 16, elements: !5192)
!5192 = !{!5193, !5194}
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5191, file: !211, line: 96, baseType: !261, size: 8)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5191, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5188, file: !211, line: 100, baseType: !265, size: 16)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5152, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5152, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5152, file: !211, line: 131, baseType: !5199, size: 192, offset: 192)
!5199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !5200)
!5200 = !{!5201, !5202, !5208}
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5199, file: !247, line: 245, baseType: !5158, size: 64)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5199, file: !247, line: 246, baseType: !5203, size: 32, offset: 64)
!5203 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !5204)
!5204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5205, size: 32)
!5205 = !DISubroutineType(types: !5206)
!5206 = !{null, !5207}
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5199, size: 32)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5199, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5149, file: !211, line: 250, baseType: !5210, size: 288, offset: 384)
!5210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5211)
!5211 = !{!5212, !5213, !5214, !5215, !5216, !5217, !5218, !5219, !5220}
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5210, file: !284, line: 26, baseType: !121, size: 32)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5210, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5210, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5210, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5210, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5210, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5210, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5210, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5210, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5149, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5149, file: !211, line: 256, baseType: !5180, size: 64, offset: 704)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5149, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5149, file: !211, line: 300, baseType: !5225, size: 96, offset: 800)
!5225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !5226)
!5226 = !{!5227, !5228, !5229}
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5225, file: !211, line: 153, baseType: !22, size: 32)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5225, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5225, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5149, file: !211, line: 325, baseType: !5231, size: 32, offset: 896)
!5231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5232, size: 32)
!5232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !5233)
!5233 = !{!5234, !5240, !5241}
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5232, file: !307, line: 5074, baseType: !5235, size: 96)
!5235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !5236)
!5236 = !{!5237, !5238, !5239}
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5235, file: !311, line: 57, baseType: !314, size: 32)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5235, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5235, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5232, file: !307, line: 5075, baseType: !5180, size: 64, offset: 96)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5232, file: !307, line: 5076, baseType: !5242, offset: 160)
!5242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5149, file: !211, line: 343, baseType: !5244, size: 64, offset: 928)
!5244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !5245)
!5245 = !{!5246, !5247}
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5244, file: !284, line: 63, baseType: !121, size: 32)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5244, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!5248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5249, size: 32)
!5249 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3350, line: 44, baseType: !5250)
!5250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1930, line: 47, size: 8, elements: !5251)
!5251 = !{!5252}
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5250, file: !1930, line: 48, baseType: !146, size: 8)
!5253 = !{!5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261}
!5254 = !DILocalVariable(name: "thread", arg: 1, scope: !5144, file: !5145, line: 56, type: !5148)
!5255 = !DILocalVariable(name: "stack", arg: 2, scope: !5144, file: !5145, line: 56, type: !5248)
!5256 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5144, file: !5145, line: 57, type: !995)
!5257 = !DILocalVariable(name: "entry", arg: 4, scope: !5144, file: !5145, line: 57, type: !3349)
!5258 = !DILocalVariable(name: "p1", arg: 5, scope: !5144, file: !5145, line: 58, type: !102)
!5259 = !DILocalVariable(name: "p2", arg: 6, scope: !5144, file: !5145, line: 58, type: !102)
!5260 = !DILocalVariable(name: "p3", arg: 7, scope: !5144, file: !5145, line: 58, type: !102)
!5261 = !DILocalVariable(name: "iframe", scope: !5144, file: !5145, line: 60, type: !2506)
!5262 = !DILocation(line: 0, scope: !5144)
!5263 = !DILocation(line: 85, column: 11, scope: !5144)
!5264 = !DILocation(line: 93, column: 10, scope: !5144)
!5265 = !DILocation(line: 98, column: 13, scope: !5144)
!5266 = !DILocation(line: 100, column: 15, scope: !5144)
!5267 = !DILocation(line: 100, column: 10, scope: !5144)
!5268 = !DILocation(line: 100, column: 13, scope: !5144)
!5269 = !DILocation(line: 101, column: 15, scope: !5144)
!5270 = !DILocation(line: 101, column: 10, scope: !5144)
!5271 = !DILocation(line: 101, column: 13, scope: !5144)
!5272 = !DILocation(line: 102, column: 15, scope: !5144)
!5273 = !DILocation(line: 102, column: 10, scope: !5144)
!5274 = !DILocation(line: 102, column: 13, scope: !5144)
!5275 = !DILocation(line: 103, column: 15, scope: !5144)
!5276 = !DILocation(line: 103, column: 10, scope: !5144)
!5277 = !DILocation(line: 103, column: 13, scope: !5144)
!5278 = !DILocation(line: 106, column: 10, scope: !5144)
!5279 = !DILocation(line: 106, column: 15, scope: !5144)
!5280 = !DILocation(line: 122, column: 29, scope: !5144)
!5281 = !DILocation(line: 122, column: 23, scope: !5144)
!5282 = !DILocation(line: 122, column: 27, scope: !5144)
!5283 = !DILocation(line: 123, column: 15, scope: !5144)
!5284 = !DILocation(line: 123, column: 23, scope: !5144)
!5285 = !DILocation(line: 143, column: 1, scope: !5144)
!5286 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !5145, file: !5145, line: 385, type: !5287, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !5290)
!5287 = !DISubroutineType(types: !5288)
!5288 = !{!121, !5289, !5289}
!5289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!5290 = !{!5291, !5292, !5293, !5296}
!5291 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5286, file: !5145, line: 385, type: !5289)
!5292 = !DILocalVariable(name: "psp", arg: 2, scope: !5286, file: !5145, line: 385, type: !5289)
!5293 = !DILocalVariable(name: "thread", scope: !5286, file: !5145, line: 388, type: !5294)
!5294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5295, size: 32)
!5295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5149)
!5296 = !DILocalVariable(name: "guard_len", scope: !5286, file: !5145, line: 405, type: !121)
!5297 = !DILocation(line: 0, scope: !5286)
!5298 = !DILocation(line: 388, column: 34, scope: !5286)
!5299 = !DILocation(line: 390, column: 13, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5286, file: !5145, line: 390, column: 6)
!5301 = !DILocation(line: 390, column: 6, scope: !5286)
!5302 = !DILocation(line: 438, column: 6, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5286, file: !5145, line: 438, column: 6)
!5304 = !DILocation(line: 438, column: 6, scope: !5286)
!5305 = !DILocation(line: 442, column: 3, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5303, file: !5145, line: 440, column: 22)
!5307 = !DILocation(line: 455, column: 1, scope: !5286)
!5308 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5145, file: !5145, line: 530, type: !5309, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2503, retainedNodes: !5311)
!5309 = !DISubroutineType(types: !5310)
!5310 = !{null, !5148, !995, !3349}
!5311 = !{!5312, !5313, !5314}
!5312 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5308, file: !5145, line: 530, type: !5148)
!5313 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5308, file: !5145, line: 530, type: !995)
!5314 = !DILocalVariable(name: "_main", arg: 3, scope: !5308, file: !5145, line: 531, type: !3349)
!5315 = !DILocation(line: 0, scope: !5308)
!5316 = !DILocation(line: 535, column: 11, scope: !5308)
!5317 = !DILocation(line: 560, column: 2, scope: !5308)
!5318 = !DILocation(line: 576, column: 2, scope: !5308)
!5319 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5320 = !DILocation(line: 603, column: 2, scope: !5308)
!5321 = distinct !DISubprogram(name: "z_arm_fault", scope: !5322, file: !5322, line: 1036, type: !5323, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !5338)
!5322 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5323 = !DISubroutineType(types: !5324)
!5324 = !{null, !121, !121, !121, !5325}
!5325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5326, size: 32)
!5326 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !284, line: 37, baseType: !5327)
!5327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5328)
!5328 = !{!5329, !5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337}
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5327, file: !284, line: 26, baseType: !121, size: 32)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5327, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5327, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5327, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5327, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5327, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5327, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5327, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5327, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5338 = !{!5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348}
!5339 = !DILocalVariable(name: "msp", arg: 1, scope: !5321, file: !5322, line: 1036, type: !121)
!5340 = !DILocalVariable(name: "psp", arg: 2, scope: !5321, file: !5322, line: 1036, type: !121)
!5341 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5321, file: !5322, line: 1036, type: !121)
!5342 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5321, file: !5322, line: 1037, type: !5325)
!5343 = !DILocalVariable(name: "reason", scope: !5321, file: !5322, line: 1039, type: !121)
!5344 = !DILocalVariable(name: "fault", scope: !5321, file: !5322, line: 1040, type: !103)
!5345 = !DILocalVariable(name: "recoverable", scope: !5321, file: !5322, line: 1041, type: !157)
!5346 = !DILocalVariable(name: "nested_exc", scope: !5321, file: !5322, line: 1041, type: !157)
!5347 = !DILocalVariable(name: "esf", scope: !5321, file: !5322, line: 1042, type: !2574)
!5348 = !DILocalVariable(name: "esf_copy", scope: !5321, file: !5322, line: 1047, type: !2575)
!5349 = !DILocation(line: 0, scope: !5321)
!5350 = !DILocation(line: 1040, column: 19, scope: !5321)
!5351 = !DILocation(line: 1040, column: 24, scope: !5321)
!5352 = !DILocation(line: 1041, column: 2, scope: !5321)
!5353 = !DILocation(line: 1047, column: 2, scope: !5321)
!5354 = !DILocation(line: 1047, column: 15, scope: !5321)
!5355 = !DILocalVariable(name: "key", arg: 1, scope: !5356, file: !4847, line: 84, type: !32)
!5356 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4847, file: !4847, line: 84, type: !4858, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !5357)
!5357 = !{!5355}
!5358 = !DILocation(line: 0, scope: !5356, inlinedAt: !5359)
!5359 = distinct !DILocation(line: 1050, column: 2, scope: !5321)
!5360 = !DILocation(line: 95, column: 2, scope: !5356, inlinedAt: !5359)
!5361 = !{i64 2310947}
!5362 = !DILocation(line: 1055, column: 9, scope: !5321)
!5363 = !DILocation(line: 1063, column: 11, scope: !5321)
!5364 = !DILocation(line: 1064, column: 6, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5321, file: !5322, line: 1064, column: 6)
!5366 = !{i8 0, i8 2}
!5367 = !DILocation(line: 1064, column: 6, scope: !5321)
!5368 = !DILocation(line: 1070, column: 20, scope: !5321)
!5369 = !DILocation(line: 1070, column: 2, scope: !5321)
!5370 = !DILocation(line: 1089, column: 6, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5321, file: !5322, line: 1089, column: 6)
!5372 = !DILocation(line: 0, scope: !5371)
!5373 = !DILocation(line: 1089, column: 6, scope: !5321)
!5374 = !DILocation(line: 1090, column: 28, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5376, file: !5322, line: 1090, column: 7)
!5376 = distinct !DILexicalBlock(scope: !5371, file: !5322, line: 1089, column: 18)
!5377 = !DILocation(line: 1090, column: 44, scope: !5375)
!5378 = !DILocation(line: 1090, column: 7, scope: !5376)
!5379 = !DILocation(line: 1091, column: 24, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5375, file: !5322, line: 1090, column: 50)
!5381 = !DILocation(line: 1092, column: 3, scope: !5380)
!5382 = !DILocation(line: 1094, column: 23, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5371, file: !5322, line: 1093, column: 9)
!5384 = !DILocation(line: 1097, column: 2, scope: !5321)
!5385 = !DILocation(line: 1098, column: 1, scope: !5321)
!5386 = distinct !DISubprogram(name: "get_esf", scope: !5322, file: !5322, line: 894, type: !5387, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !5390)
!5387 = !DISubroutineType(types: !5388)
!5388 = !{!2574, !121, !121, !121, !5389}
!5389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!5390 = !{!5391, !5392, !5393, !5394, !5395, !5396}
!5391 = !DILocalVariable(name: "msp", arg: 1, scope: !5386, file: !5322, line: 894, type: !121)
!5392 = !DILocalVariable(name: "psp", arg: 2, scope: !5386, file: !5322, line: 894, type: !121)
!5393 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5386, file: !5322, line: 894, type: !121)
!5394 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5386, file: !5322, line: 895, type: !5389)
!5395 = !DILocalVariable(name: "alternative_state_exc", scope: !5386, file: !5322, line: 897, type: !157)
!5396 = !DILocalVariable(name: "ptr_esf", scope: !5386, file: !5322, line: 898, type: !2574)
!5397 = !DILocation(line: 0, scope: !5386)
!5398 = !DILocation(line: 900, column: 14, scope: !5386)
!5399 = !DILocation(line: 902, column: 49, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5386, file: !5322, line: 902, column: 6)
!5401 = !DILocation(line: 902, column: 6, scope: !5386)
!5402 = !DILocation(line: 983, column: 18, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5386, file: !5322, line: 983, column: 6)
!5404 = !DILocation(line: 991, column: 7, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5406, file: !5322, line: 990, column: 30)
!5406 = distinct !DILexicalBlock(scope: !5386, file: !5322, line: 990, column: 6)
!5407 = !DILocation(line: 998, column: 16, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5409, file: !5322, line: 995, column: 10)
!5409 = distinct !DILexicalBlock(scope: !5405, file: !5322, line: 991, column: 7)
!5410 = !DILocation(line: 1002, column: 2, scope: !5386)
!5411 = !DILocation(line: 1003, column: 1, scope: !5386)
!5412 = distinct !DISubprogram(name: "fault_handle", scope: !5322, file: !5322, line: 786, type: !5413, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !5415)
!5413 = !DISubroutineType(types: !5414)
!5414 = !{!121, !2574, !103, !5389}
!5415 = !{!5416, !5417, !5418, !5419}
!5416 = !DILocalVariable(name: "esf", arg: 1, scope: !5412, file: !5322, line: 786, type: !2574)
!5417 = !DILocalVariable(name: "fault", arg: 2, scope: !5412, file: !5322, line: 786, type: !103)
!5418 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5412, file: !5322, line: 786, type: !5389)
!5419 = !DILocalVariable(name: "reason", scope: !5412, file: !5322, line: 788, type: !121)
!5420 = !DILocation(line: 0, scope: !5412)
!5421 = !DILocation(line: 790, column: 15, scope: !5412)
!5422 = !DILocation(line: 792, column: 2, scope: !5412)
!5423 = !DILocation(line: 794, column: 12, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5412, file: !5322, line: 792, column: 17)
!5425 = !DILocation(line: 795, column: 3, scope: !5424)
!5426 = !DILocation(line: 800, column: 12, scope: !5424)
!5427 = !DILocation(line: 801, column: 3, scope: !5424)
!5428 = !DILocation(line: 803, column: 12, scope: !5424)
!5429 = !DILocation(line: 804, column: 3, scope: !5424)
!5430 = !DILocation(line: 806, column: 12, scope: !5424)
!5431 = !DILocation(line: 807, column: 3, scope: !5424)
!5432 = !DILocation(line: 814, column: 3, scope: !5424)
!5433 = !DILocation(line: 815, column: 3, scope: !5424)
!5434 = !DILocation(line: 829, column: 2, scope: !5412)
!5435 = distinct !DISubprogram(name: "hard_fault", scope: !5322, file: !5322, line: 709, type: !5436, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !5438)
!5436 = !DISubroutineType(types: !5437)
!5437 = !{!121, !2574, !5389}
!5438 = !{!5439, !5440, !5441}
!5439 = !DILocalVariable(name: "esf", arg: 1, scope: !5435, file: !5322, line: 709, type: !2574)
!5440 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5435, file: !5322, line: 709, type: !5389)
!5441 = !DILocalVariable(name: "reason", scope: !5435, file: !5322, line: 711, type: !121)
!5442 = !DILocation(line: 0, scope: !5435)
!5443 = !DILocation(line: 732, column: 15, scope: !5435)
!5444 = !DILocation(line: 734, column: 12, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5435, file: !5322, line: 734, column: 6)
!5446 = !DILocation(line: 734, column: 17, scope: !5445)
!5447 = !DILocation(line: 734, column: 41, scope: !5445)
!5448 = !DILocation(line: 734, column: 6, scope: !5435)
!5449 = !DILocation(line: 736, column: 19, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5445, file: !5322, line: 736, column: 13)
!5451 = !DILocation(line: 736, column: 49, scope: !5450)
!5452 = !DILocation(line: 736, column: 13, scope: !5445)
!5453 = !DILocation(line: 738, column: 19, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5450, file: !5322, line: 738, column: 13)
!5455 = !DILocation(line: 738, column: 24, scope: !5454)
!5456 = !DILocation(line: 738, column: 47, scope: !5454)
!5457 = !DILocation(line: 738, column: 13, scope: !5450)
!5458 = !DILocation(line: 740, column: 7, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5460, file: !5322, line: 740, column: 7)
!5460 = distinct !DILexicalBlock(scope: !5454, file: !5322, line: 738, column: 53)
!5461 = !DILocation(line: 740, column: 7, scope: !5460)
!5462 = !DILocation(line: 742, column: 24, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5459, file: !5322, line: 740, column: 38)
!5464 = !DILocation(line: 743, column: 3, scope: !5463)
!5465 = !DILocation(line: 743, column: 20, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5459, file: !5322, line: 743, column: 14)
!5467 = !DILocation(line: 743, column: 25, scope: !5466)
!5468 = !DILocation(line: 743, column: 52, scope: !5466)
!5469 = !DILocation(line: 743, column: 14, scope: !5459)
!5470 = !DILocation(line: 744, column: 13, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5466, file: !5322, line: 743, column: 58)
!5472 = !DILocation(line: 745, column: 3, scope: !5471)
!5473 = !DILocation(line: 745, column: 20, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5466, file: !5322, line: 745, column: 14)
!5475 = !DILocation(line: 745, column: 25, scope: !5474)
!5476 = !DILocation(line: 745, column: 52, scope: !5474)
!5477 = !DILocation(line: 745, column: 14, scope: !5466)
!5478 = !DILocation(line: 746, column: 13, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5474, file: !5322, line: 745, column: 58)
!5480 = !DILocation(line: 747, column: 3, scope: !5479)
!5481 = !DILocation(line: 747, column: 20, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5474, file: !5322, line: 747, column: 14)
!5483 = !DILocation(line: 747, column: 52, scope: !5482)
!5484 = !DILocation(line: 747, column: 14, scope: !5474)
!5485 = !DILocation(line: 748, column: 13, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5482, file: !5322, line: 747, column: 58)
!5487 = !DILocation(line: 753, column: 3, scope: !5486)
!5488 = !DILocation(line: 766, column: 2, scope: !5435)
!5489 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5322, file: !5322, line: 229, type: !5413, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !5490)
!5490 = !{!5491, !5492, !5493, !5494, !5495, !5496, !5499}
!5491 = !DILocalVariable(name: "esf", arg: 1, scope: !5489, file: !5322, line: 229, type: !2574)
!5492 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5489, file: !5322, line: 229, type: !103)
!5493 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5489, file: !5322, line: 230, type: !5389)
!5494 = !DILocalVariable(name: "reason", scope: !5489, file: !5322, line: 232, type: !121)
!5495 = !DILocalVariable(name: "mmfar", scope: !5489, file: !5322, line: 233, type: !121)
!5496 = !DILocalVariable(name: "temp", scope: !5497, file: !5322, line: 254, type: !121)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !5322, line: 244, column: 48)
!5498 = distinct !DILexicalBlock(scope: !5489, file: !5322, line: 244, column: 6)
!5499 = !DILocalVariable(name: "min_stack_ptr", scope: !5500, file: !5322, line: 309, type: !121)
!5500 = distinct !DILexicalBlock(scope: !5501, file: !5322, line: 308, column: 43)
!5501 = distinct !DILexicalBlock(scope: !5502, file: !5322, line: 308, column: 7)
!5502 = distinct !DILexicalBlock(scope: !5503, file: !5322, line: 289, column: 40)
!5503 = distinct !DILexicalBlock(scope: !5489, file: !5322, line: 288, column: 6)
!5504 = !DILocation(line: 0, scope: !5489)
!5505 = !DILocation(line: 237, column: 12, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5489, file: !5322, line: 237, column: 6)
!5507 = !DILocation(line: 241, column: 12, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5489, file: !5322, line: 241, column: 6)
!5509 = !DILocation(line: 244, column: 12, scope: !5498)
!5510 = !DILocation(line: 244, column: 17, scope: !5498)
!5511 = !DILocation(line: 244, column: 42, scope: !5498)
!5512 = !DILocation(line: 244, column: 6, scope: !5489)
!5513 = !DILocation(line: 254, column: 24, scope: !5497)
!5514 = !DILocation(line: 0, scope: !5497)
!5515 = !DILocation(line: 256, column: 13, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5497, file: !5322, line: 256, column: 7)
!5517 = !DILocation(line: 256, column: 18, scope: !5516)
!5518 = !DILocation(line: 256, column: 44, scope: !5516)
!5519 = !DILocation(line: 256, column: 7, scope: !5497)
!5520 = !DILocation(line: 259, column: 24, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5522, file: !5322, line: 259, column: 8)
!5522 = distinct !DILexicalBlock(scope: !5516, file: !5322, line: 256, column: 50)
!5523 = !DILocation(line: 259, column: 8, scope: !5522)
!5524 = !DILocation(line: 261, column: 15, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5521, file: !5322, line: 259, column: 30)
!5526 = !DILocation(line: 262, column: 4, scope: !5525)
!5527 = !DILocation(line: 265, column: 12, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5489, file: !5322, line: 265, column: 6)
!5529 = !DILocation(line: 269, column: 12, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5489, file: !5322, line: 269, column: 6)
!5531 = !DILocation(line: 288, column: 12, scope: !5503)
!5532 = !DILocation(line: 288, column: 17, scope: !5503)
!5533 = !DILocation(line: 288, column: 41, scope: !5503)
!5534 = !DILocation(line: 289, column: 9, scope: !5503)
!5535 = !DILocation(line: 289, column: 14, scope: !5503)
!5536 = !DILocation(line: 288, column: 6, scope: !5489)
!5537 = !DILocation(line: 308, column: 12, scope: !5501)
!5538 = !DILocation(line: 308, column: 17, scope: !5501)
!5539 = !DILocation(line: 308, column: 7, scope: !5502)
!5540 = !DILocation(line: 310, column: 6, scope: !5500)
!5541 = !DILocation(line: 309, column: 29, scope: !5500)
!5542 = !DILocation(line: 0, scope: !5500)
!5543 = !DILocation(line: 312, column: 8, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5500, file: !5322, line: 312, column: 8)
!5545 = !DILocation(line: 312, column: 8, scope: !5500)
!5546 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5547, file: !5021, line: 1099, type: !121)
!5547 = distinct !DISubprogram(name: "__set_PSP", scope: !5021, file: !5021, line: 1099, type: !5112, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !5548)
!5548 = !{!5546}
!5549 = !DILocation(line: 0, scope: !5547, inlinedAt: !5550)
!5550 = distinct !DILocation(line: 338, column: 5, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5544, file: !5322, line: 312, column: 23)
!5552 = !DILocation(line: 1101, column: 3, scope: !5547, inlinedAt: !5550)
!5553 = !{i64 3758171}
!5554 = !DILocation(line: 341, column: 4, scope: !5551)
!5555 = !DILocation(line: 360, column: 12, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5489, file: !5322, line: 360, column: 6)
!5557 = !DILocation(line: 360, column: 17, scope: !5556)
!5558 = !DILocation(line: 360, column: 41, scope: !5556)
!5559 = !DILocation(line: 360, column: 6, scope: !5489)
!5560 = !DILocation(line: 361, column: 14, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5556, file: !5322, line: 360, column: 47)
!5562 = !DILocation(line: 362, column: 2, scope: !5561)
!5563 = !DILocation(line: 366, column: 12, scope: !5489)
!5564 = !DILocation(line: 369, column: 15, scope: !5489)
!5565 = !DILocation(line: 371, column: 2, scope: !5489)
!5566 = distinct !DISubprogram(name: "bus_fault", scope: !5322, file: !5322, line: 383, type: !5567, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !5569)
!5567 = !DISubroutineType(types: !5568)
!5568 = !{!103, !2574, !103, !5389}
!5569 = !{!5570, !5571, !5572, !5573, !5574}
!5570 = !DILocalVariable(name: "esf", arg: 1, scope: !5566, file: !5322, line: 383, type: !2574)
!5571 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5566, file: !5322, line: 383, type: !103)
!5572 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5566, file: !5322, line: 383, type: !5389)
!5573 = !DILocalVariable(name: "reason", scope: !5566, file: !5322, line: 385, type: !121)
!5574 = !DILocalVariable(name: "bfar", scope: !5575, file: !5322, line: 405, type: !121)
!5575 = distinct !DILexicalBlock(scope: !5576, file: !5322, line: 395, column: 42)
!5576 = distinct !DILexicalBlock(scope: !5566, file: !5322, line: 395, column: 6)
!5577 = !DILocation(line: 0, scope: !5566)
!5578 = !DILocation(line: 389, column: 11, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5566, file: !5322, line: 389, column: 6)
!5580 = !DILocation(line: 392, column: 11, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5566, file: !5322, line: 392, column: 6)
!5582 = !DILocation(line: 395, column: 11, scope: !5576)
!5583 = !DILocation(line: 395, column: 16, scope: !5576)
!5584 = !DILocation(line: 395, column: 6, scope: !5566)
!5585 = !DILocation(line: 405, column: 3, scope: !5575)
!5586 = !DILocation(line: 0, scope: !5575)
!5587 = !DILocation(line: 407, column: 13, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5575, file: !5322, line: 407, column: 7)
!5589 = !DILocation(line: 407, column: 18, scope: !5588)
!5590 = !DILocation(line: 407, column: 44, scope: !5588)
!5591 = !DILocation(line: 407, column: 7, scope: !5575)
!5592 = !DILocation(line: 411, column: 15, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5594, file: !5322, line: 409, column: 30)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !5322, line: 409, column: 8)
!5595 = distinct !DILexicalBlock(scope: !5588, file: !5322, line: 407, column: 50)
!5596 = !DILocation(line: 412, column: 4, scope: !5593)
!5597 = !DILocation(line: 415, column: 11, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5566, file: !5322, line: 415, column: 6)
!5599 = !DILocation(line: 418, column: 12, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5566, file: !5322, line: 418, column: 6)
!5601 = !DILocation(line: 418, column: 17, scope: !5600)
!5602 = !DILocation(line: 418, column: 41, scope: !5600)
!5603 = !DILocation(line: 418, column: 6, scope: !5566)
!5604 = !DILocation(line: 423, column: 18, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5600, file: !5322, line: 423, column: 13)
!5606 = !DILocation(line: 524, column: 12, scope: !5566)
!5607 = !DILocation(line: 526, column: 15, scope: !5566)
!5608 = !DILocation(line: 528, column: 2, scope: !5566)
!5609 = distinct !DISubprogram(name: "usage_fault", scope: !5322, file: !5322, line: 539, type: !5610, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !5614)
!5610 = !DISubroutineType(types: !5611)
!5611 = !{!121, !5612}
!5612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5613, size: 32)
!5613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2575)
!5614 = !{!5615, !5616}
!5615 = !DILocalVariable(name: "esf", arg: 1, scope: !5609, file: !5322, line: 539, type: !5612)
!5616 = !DILocalVariable(name: "reason", scope: !5609, file: !5322, line: 541, type: !121)
!5617 = !DILocation(line: 0, scope: !5609)
!5618 = !DILocation(line: 546, column: 12, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5609, file: !5322, line: 546, column: 6)
!5620 = !DILocation(line: 549, column: 12, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5609, file: !5322, line: 549, column: 6)
!5622 = !DILocation(line: 567, column: 12, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5609, file: !5322, line: 567, column: 6)
!5624 = !DILocation(line: 570, column: 12, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5609, file: !5322, line: 570, column: 6)
!5626 = !DILocation(line: 573, column: 12, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5609, file: !5322, line: 573, column: 6)
!5628 = !DILocation(line: 576, column: 12, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5609, file: !5322, line: 576, column: 6)
!5630 = !DILocation(line: 581, column: 12, scope: !5609)
!5631 = !DILocation(line: 583, column: 2, scope: !5609)
!5632 = distinct !DISubprogram(name: "debug_monitor", scope: !5322, file: !5322, line: 632, type: !5633, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !5635)
!5633 = !DISubroutineType(types: !5634)
!5634 = !{null, !2574, !5389}
!5635 = !{!5636, !5637}
!5636 = !DILocalVariable(name: "esf", arg: 1, scope: !5632, file: !5322, line: 632, type: !2574)
!5637 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5632, file: !5322, line: 632, type: !5389)
!5638 = !DILocation(line: 0, scope: !5632)
!5639 = !DILocation(line: 634, column: 15, scope: !5632)
!5640 = !DILocation(line: 652, column: 1, scope: !5632)
!5641 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5322, file: !5322, line: 658, type: !5642, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !5644)
!5642 = !DISubroutineType(types: !5643)
!5643 = !{!157, !2574}
!5644 = !{!5645, !5646, !5647}
!5645 = !DILocalVariable(name: "esf", arg: 1, scope: !5641, file: !5322, line: 658, type: !2574)
!5646 = !DILocalVariable(name: "ret_addr", scope: !5641, file: !5322, line: 660, type: !2617)
!5647 = !DILocalVariable(name: "fault_insn", scope: !5641, file: !5322, line: 686, type: !265)
!5648 = !DILocation(line: 0, scope: !5641)
!5649 = !DILocation(line: 660, column: 46, scope: !5641)
!5650 = !DILocation(line: 660, column: 23, scope: !5641)
!5651 = !DILocation(line: 682, column: 11, scope: !5641)
!5652 = !DILocation(line: 271, column: 3, scope: !5653, inlinedAt: !5654)
!5653 = distinct !DISubprogram(name: "__DSB", scope: !5021, file: !5021, line: 269, type: !2909, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !322)
!5654 = distinct !DILocation(line: 683, column: 2, scope: !5641)
!5655 = !{i64 3734306}
!5656 = !DILocation(line: 260, column: 3, scope: !5657, inlinedAt: !5658)
!5657 = distinct !DISubprogram(name: "__ISB", scope: !5021, file: !5021, line: 258, type: !2909, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !322)
!5658 = distinct !DILocation(line: 684, column: 2, scope: !5641)
!5659 = !{i64 3734023}
!5660 = !DILocation(line: 686, column: 35, scope: !5641)
!5661 = !DILocation(line: 686, column: 24, scope: !5641)
!5662 = !DILocation(line: 688, column: 11, scope: !5641)
!5663 = !DILocation(line: 271, column: 3, scope: !5653, inlinedAt: !5664)
!5664 = distinct !DILocation(line: 689, column: 2, scope: !5641)
!5665 = !DILocation(line: 260, column: 3, scope: !5657, inlinedAt: !5666)
!5666 = distinct !DILocation(line: 690, column: 2, scope: !5641)
!5667 = !DILocation(line: 693, column: 45, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5641, file: !5322, line: 693, column: 6)
!5669 = !DILocation(line: 699, column: 1, scope: !5641)
!5670 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5322, file: !5322, line: 1107, type: !2909, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2546, retainedNodes: !322)
!5671 = !DILocation(line: 1111, column: 11, scope: !5670)
!5672 = !DILocation(line: 1136, column: 1, scope: !5670)
!5673 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !5674, file: !5674, line: 26, type: !2909, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !5675)
!5674 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5675 = !{!5676}
!5676 = !DILocalVariable(name: "irq", scope: !5673, file: !5674, line: 28, type: !103)
!5677 = !DILocation(line: 0, scope: !5673)
!5678 = !DILocation(line: 30, column: 2, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5673, file: !5674, line: 30, column: 2)
!5680 = !DILocation(line: 31, column: 3, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5682, file: !5674, line: 30, column: 39)
!5682 = distinct !DILexicalBlock(scope: !5679, file: !5674, line: 30, column: 2)
!5683 = !DILocation(line: 30, column: 35, scope: !5682)
!5684 = !DILocation(line: 30, column: 13, scope: !5682)
!5685 = distinct !{!5685, !5678, !5686}
!5686 = !DILocation(line: 32, column: 2, scope: !5679)
!5687 = !DILocation(line: 33, column: 1, scope: !5673)
!5688 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5055, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !5689)
!5689 = !{!5690, !5691}
!5690 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5688, file: !356, line: 1814, type: !621)
!5691 = !DILocalVariable(name: "priority", arg: 2, scope: !5688, file: !356, line: 1814, type: !121)
!5692 = !DILocation(line: 0, scope: !5688)
!5693 = !DILocation(line: 1816, column: 7, scope: !5688)
!5694 = !DILocation(line: 0, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5688, file: !356, line: 1816, column: 7)
!5696 = !DILocation(line: 1824, column: 1, scope: !5688)
!5697 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !5698, file: !5698, line: 27, type: !5699, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5802)
!5698 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5699 = !DISubroutineType(types: !5700)
!5700 = !{null, !5701}
!5701 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !5702)
!5702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5703, size: 32)
!5703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !5704)
!5704 = !{!5705, !5763, !5775, !5776, !5777, !5778, !5784, !5797}
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5703, file: !211, line: 247, baseType: !5706, size: 384)
!5706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !5707)
!5707 = !{!5708, !5732, !5739, !5740, !5741, !5750, !5751, !5752}
!5708 = !DIDerivedType(tag: DW_TAG_member, scope: !5706, file: !211, line: 60, baseType: !5709, size: 64)
!5709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5706, file: !211, line: 60, size: 64, elements: !5710)
!5710 = !{!5711, !5726}
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5709, file: !211, line: 61, baseType: !5712, size: 64)
!5712 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !5713)
!5713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !5714)
!5714 = !{!5715, !5721}
!5715 = !DIDerivedType(tag: DW_TAG_member, scope: !5713, file: !221, line: 38, baseType: !5716, size: 32)
!5716 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5713, file: !221, line: 38, size: 32, elements: !5717)
!5717 = !{!5718, !5720}
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5716, file: !221, line: 39, baseType: !5719, size: 32)
!5719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5713, size: 32)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5716, file: !221, line: 40, baseType: !5719, size: 32)
!5721 = !DIDerivedType(tag: DW_TAG_member, scope: !5713, file: !221, line: 42, baseType: !5722, size: 32, offset: 32)
!5722 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5713, file: !221, line: 42, size: 32, elements: !5723)
!5723 = !{!5724, !5725}
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5722, file: !221, line: 43, baseType: !5719, size: 32)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5722, file: !221, line: 44, baseType: !5719, size: 32)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5709, file: !211, line: 62, baseType: !5727, size: 64)
!5727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !5728)
!5728 = !{!5729}
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5727, file: !237, line: 50, baseType: !5730, size: 64)
!5730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5731, size: 64, elements: !242)
!5731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5727, size: 32)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5706, file: !211, line: 68, baseType: !5733, size: 32, offset: 64)
!5733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5734, size: 32)
!5734 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !5735)
!5735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !5736)
!5736 = !{!5737}
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5735, file: !247, line: 232, baseType: !5738, size: 64)
!5738 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !5713)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5706, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5706, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!5741 = !DIDerivedType(tag: DW_TAG_member, scope: !5706, file: !211, line: 90, baseType: !5742, size: 16, offset: 112)
!5742 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5706, file: !211, line: 90, size: 16, elements: !5743)
!5743 = !{!5744, !5749}
!5744 = !DIDerivedType(tag: DW_TAG_member, scope: !5742, file: !211, line: 91, baseType: !5745, size: 16)
!5745 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5742, file: !211, line: 91, size: 16, elements: !5746)
!5746 = !{!5747, !5748}
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5745, file: !211, line: 96, baseType: !261, size: 8)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5745, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5742, file: !211, line: 100, baseType: !265, size: 16)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5706, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5706, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5706, file: !211, line: 131, baseType: !5753, size: 192, offset: 192)
!5753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !5754)
!5754 = !{!5755, !5756, !5762}
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5753, file: !247, line: 245, baseType: !5712, size: 64)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5753, file: !247, line: 246, baseType: !5757, size: 32, offset: 64)
!5757 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !5758)
!5758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5759, size: 32)
!5759 = !DISubroutineType(types: !5760)
!5760 = !{null, !5761}
!5761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5753, size: 32)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5753, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5703, file: !211, line: 250, baseType: !5764, size: 288, offset: 384)
!5764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !5765)
!5765 = !{!5766, !5767, !5768, !5769, !5770, !5771, !5772, !5773, !5774}
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5764, file: !284, line: 26, baseType: !121, size: 32)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5764, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5764, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5764, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5764, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5764, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5764, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5764, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5764, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5703, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5703, file: !211, line: 256, baseType: !5734, size: 64, offset: 704)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5703, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5703, file: !211, line: 300, baseType: !5779, size: 96, offset: 800)
!5779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !5780)
!5780 = !{!5781, !5782, !5783}
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5779, file: !211, line: 153, baseType: !22, size: 32)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5779, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5779, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5703, file: !211, line: 325, baseType: !5785, size: 32, offset: 896)
!5785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5786, size: 32)
!5786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !5787)
!5787 = !{!5788, !5794, !5795}
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5786, file: !307, line: 5074, baseType: !5789, size: 96)
!5789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !5790)
!5790 = !{!5791, !5792, !5793}
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5789, file: !311, line: 57, baseType: !314, size: 32)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5789, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5789, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5786, file: !307, line: 5075, baseType: !5734, size: 64, offset: 96)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5786, file: !307, line: 5076, baseType: !5796, offset: 160)
!5796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5703, file: !211, line: 343, baseType: !5798, size: 64, offset: 928)
!5798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !5799)
!5799 = !{!5800, !5801}
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5798, file: !284, line: 63, baseType: !121, size: 32)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5798, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!5802 = !{!5803}
!5803 = !DILocalVariable(name: "thread", arg: 1, scope: !5697, file: !5698, line: 27, type: !5701)
!5804 = !DILocation(line: 0, scope: !5697)
!5805 = !DILocation(line: 29, column: 6, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5697, file: !5698, line: 29, column: 6)
!5807 = !DILocation(line: 29, column: 15, scope: !5806)
!5808 = !DILocation(line: 29, column: 6, scope: !5697)
!5809 = !DILocation(line: 1031, column: 3, scope: !5810, inlinedAt: !5813)
!5810 = distinct !DISubprogram(name: "__get_IPSR", scope: !5021, file: !5021, line: 1027, type: !5102, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !5811)
!5811 = !{!5812}
!5812 = !DILocalVariable(name: "result", scope: !5810, file: !5021, line: 1029, type: !121)
!5813 = distinct !DILocation(line: 48, column: 10, scope: !5814, inlinedAt: !5818)
!5814 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5815, file: !5815, line: 46, type: !5816, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !322)
!5815 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5816 = !DISubroutineType(types: !5817)
!5817 = !{!157}
!5818 = distinct !DILocation(line: 30, column: 7, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5820, file: !5698, line: 30, column: 7)
!5820 = distinct !DILexicalBlock(scope: !5806, file: !5698, line: 29, column: 26)
!5821 = !{i64 3723154}
!5822 = !DILocation(line: 0, scope: !5810, inlinedAt: !5813)
!5823 = !DILocation(line: 48, column: 9, scope: !5814, inlinedAt: !5818)
!5824 = !DILocation(line: 30, column: 7, scope: !5820)
!5825 = !DILocation(line: 42, column: 14, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5819, file: !5698, line: 30, column: 25)
!5827 = !DILocation(line: 48, column: 15, scope: !5826)
!5828 = !DILocation(line: 49, column: 3, scope: !5826)
!5829 = !DILocation(line: 52, column: 2, scope: !5697)
!5830 = !DILocation(line: 53, column: 1, scope: !5697)
!5831 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !206, file: !206, line: 127, type: !2909, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !197, retainedNodes: !322)
!5832 = !DILocation(line: 134, column: 2, scope: !5831)
!5833 = !DILocation(line: 156, column: 1, scope: !5831)
!5834 = !DILocation(line: 0, scope: !205)
!5835 = !DILocation(line: 289, column: 36, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !205, file: !206, line: 285, column: 2)
!5837 = !DILocation(line: 289, column: 42, scope: !5836)
!5838 = !DILocation(line: 300, column: 36, scope: !205)
!5839 = !DILocation(line: 301, column: 35, scope: !205)
!5840 = !DILocation(line: 302, column: 37, scope: !205)
!5841 = !DILocation(line: 311, column: 2, scope: !205)
!5842 = !DILocation(line: 316, column: 1, scope: !205)
!5843 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !384, file: !384, line: 180, type: !2909, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5844 = !DILocation(line: 188, column: 12, scope: !5843)
!5845 = !DILocation(line: 271, column: 3, scope: !5846, inlinedAt: !5847)
!5846 = distinct !DISubprogram(name: "__DSB", scope: !5021, file: !5021, line: 269, type: !2909, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5847 = distinct !DILocation(line: 192, column: 2, scope: !5843)
!5848 = !{i64 3911056}
!5849 = !DILocation(line: 260, column: 3, scope: !5850, inlinedAt: !5851)
!5850 = distinct !DISubprogram(name: "__ISB", scope: !5021, file: !5021, line: 258, type: !2909, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5851 = distinct !DILocation(line: 193, column: 2, scope: !5843)
!5852 = !{i64 3910773}
!5853 = !DILocation(line: 194, column: 1, scope: !5843)
!5854 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !384, file: !384, line: 199, type: !2909, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5855 = !DILocation(line: 282, column: 3, scope: !5856, inlinedAt: !5857)
!5856 = distinct !DISubprogram(name: "__DMB", scope: !5021, file: !5021, line: 280, type: !2909, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !322)
!5857 = distinct !DILocation(line: 202, column: 2, scope: !5854)
!5858 = !{i64 3911332}
!5859 = !DILocation(line: 205, column: 12, scope: !5854)
!5860 = !DILocation(line: 206, column: 1, scope: !5854)
!5861 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !384, file: !384, line: 275, type: !5862, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5875)
!5862 = !DISubroutineType(types: !5863)
!5863 = !{null, !5864, !1705, !5289, !5289}
!5864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5865, size: 32)
!5865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5866)
!5866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !335, line: 52, size: 96, elements: !5867)
!5867 = !{!5868, !5869, !5870}
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5866, file: !335, line: 53, baseType: !22, size: 32)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5866, file: !335, line: 54, baseType: !200, size: 32, offset: 32)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5866, file: !335, line: 55, baseType: !5871, size: 32, offset: 64)
!5871 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !341, line: 151, baseType: !5872)
!5872 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !341, line: 149, size: 32, elements: !5873)
!5873 = !{!5874}
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !5872, file: !341, line: 150, baseType: !121, size: 32)
!5875 = !{!5876, !5877, !5878, !5879}
!5876 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5861, file: !384, line: 276, type: !5864)
!5877 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5861, file: !384, line: 276, type: !1705)
!5878 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !5861, file: !384, line: 277, type: !5289)
!5879 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5861, file: !384, line: 277, type: !5289)
!5880 = !DILocation(line: 0, scope: !5861)
!5881 = !DILocation(line: 279, column: 6, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5861, file: !384, line: 279, column: 6)
!5883 = !DILocation(line: 285, column: 1, scope: !5861)
!5884 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !5885, file: !5885, line: 220, type: !5886, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5888)
!5885 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5886 = !DISubroutineType(types: !5887)
!5887 = !{!103, !5864, !1705, !5289, !5289}
!5888 = !{!5889, !5890, !5891, !5892, !5893}
!5889 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5884, file: !5885, line: 221, type: !5864)
!5890 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5884, file: !5885, line: 221, type: !1705)
!5891 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !5884, file: !5885, line: 222, type: !5289)
!5892 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5884, file: !5885, line: 223, type: !5289)
!5893 = !DILocalVariable(name: "mpu_reg_index", scope: !5884, file: !5885, line: 225, type: !103)
!5894 = !DILocation(line: 0, scope: !5884)
!5895 = !DILocation(line: 225, column: 22, scope: !5884)
!5896 = !DILocation(line: 233, column: 18, scope: !5884)
!5897 = !DILocation(line: 236, column: 23, scope: !5884)
!5898 = !DILocation(line: 236, column: 21, scope: !5884)
!5899 = !DILocation(line: 238, column: 2, scope: !5884)
!5900 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !384, file: !384, line: 105, type: !5901, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5903)
!5901 = !DISubroutineType(types: !5902)
!5902 = !{!103, !5864, !154, !154, !157}
!5903 = !{!5904, !5905, !5906, !5907, !5908, !5909}
!5904 = !DILocalVariable(name: "regions", arg: 1, scope: !5900, file: !384, line: 106, type: !5864)
!5905 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5900, file: !384, line: 106, type: !154)
!5906 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !5900, file: !384, line: 106, type: !154)
!5907 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !5900, file: !384, line: 107, type: !157)
!5908 = !DILocalVariable(name: "i", scope: !5900, file: !384, line: 109, type: !103)
!5909 = !DILocalVariable(name: "reg_index", scope: !5900, file: !384, line: 110, type: !103)
!5910 = !DILocation(line: 0, scope: !5900)
!5911 = !DILocation(line: 110, column: 18, scope: !5900)
!5912 = !DILocation(line: 112, column: 16, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5914, file: !384, line: 112, column: 2)
!5914 = distinct !DILexicalBlock(scope: !5900, file: !384, line: 112, column: 2)
!5915 = !DILocation(line: 112, column: 2, scope: !5914)
!5916 = !DILocation(line: 113, column: 7, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5918, file: !384, line: 113, column: 7)
!5918 = distinct !DILexicalBlock(scope: !5913, file: !384, line: 112, column: 36)
!5919 = !DILocation(line: 113, column: 18, scope: !5917)
!5920 = !DILocation(line: 113, column: 23, scope: !5917)
!5921 = !DILocation(line: 113, column: 7, scope: !5918)
!5922 = !DILocation(line: 118, column: 23, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5918, file: !384, line: 118, column: 7)
!5924 = !DILocation(line: 119, column: 7, scope: !5923)
!5925 = !DILocation(line: 118, column: 7, scope: !5918)
!5926 = !DILocation(line: 124, column: 36, scope: !5918)
!5927 = !DILocation(line: 124, column: 15, scope: !5918)
!5928 = !DILocation(line: 126, column: 17, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5918, file: !384, line: 126, column: 7)
!5930 = !DILocation(line: 126, column: 7, scope: !5918)
!5931 = !DILocation(line: 131, column: 12, scope: !5918)
!5932 = !DILocation(line: 132, column: 2, scope: !5918)
!5933 = !DILocation(line: 112, column: 32, scope: !5913)
!5934 = distinct !{!5934, !5915, !5935}
!5935 = !DILocation(line: 132, column: 2, scope: !5914)
!5936 = !DILocation(line: 135, column: 1, scope: !5900)
!5937 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !5885, file: !5885, line: 63, type: !5938, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5940)
!5938 = !DISubroutineType(types: !5939)
!5939 = !{!103, !5864}
!5940 = !{!5941, !5942}
!5941 = !DILocalVariable(name: "part", arg: 1, scope: !5937, file: !5885, line: 63, type: !5864)
!5942 = !DILocalVariable(name: "partition_is_valid", scope: !5937, file: !5885, line: 70, type: !103)
!5943 = !DILocation(line: 0, scope: !5937)
!5944 = !DILocation(line: 71, column: 11, scope: !5937)
!5945 = !DILocation(line: 71, column: 37, scope: !5937)
!5946 = !{i32 0, i32 33}
!5947 = !DILocation(line: 72, column: 3, scope: !5937)
!5948 = !DILocation(line: 71, column: 30, scope: !5937)
!5949 = !DILocation(line: 75, column: 11, scope: !5937)
!5950 = !DILocation(line: 75, column: 17, scope: !5937)
!5951 = !DILocation(line: 75, column: 38, scope: !5937)
!5952 = !DILocation(line: 77, column: 2, scope: !5937)
!5953 = distinct !DISubprogram(name: "mpu_configure_region", scope: !384, file: !384, line: 79, type: !5954, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5956)
!5954 = !DISubroutineType(types: !5955)
!5955 = !{!103, !1705, !5864}
!5956 = !{!5957, !5958, !5959}
!5957 = !DILocalVariable(name: "index", arg: 1, scope: !5953, file: !384, line: 79, type: !1705)
!5958 = !DILocalVariable(name: "new_region", arg: 2, scope: !5953, file: !384, line: 80, type: !5864)
!5959 = !DILocalVariable(name: "region_conf", scope: !5953, file: !384, line: 82, type: !373)
!5960 = !DILocation(line: 0, scope: !5953)
!5961 = !DILocation(line: 82, column: 2, scope: !5953)
!5962 = !DILocation(line: 82, column: 24, scope: !5953)
!5963 = !DILocation(line: 87, column: 33, scope: !5953)
!5964 = !DILocation(line: 87, column: 14, scope: !5953)
!5965 = !DILocation(line: 87, column: 19, scope: !5953)
!5966 = !DILocation(line: 91, column: 55, scope: !5953)
!5967 = !DILocation(line: 92, column: 16, scope: !5953)
!5968 = !DILocation(line: 92, column: 53, scope: !5953)
!5969 = !DILocation(line: 91, column: 2, scope: !5953)
!5970 = !DILocation(line: 95, column: 9, scope: !5953)
!5971 = !DILocation(line: 97, column: 1, scope: !5953)
!5972 = !DILocation(line: 95, column: 2, scope: !5953)
!5973 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !5885, file: !5885, line: 113, type: !5974, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5979)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{null, !5976, !5977, !121, !121}
!5976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!5977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5978, size: 32)
!5978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5871)
!5979 = !{!5980, !5981, !5982, !5983}
!5980 = !DILocalVariable(name: "p_attr", arg: 1, scope: !5973, file: !5885, line: 114, type: !5976)
!5981 = !DILocalVariable(name: "attr", arg: 2, scope: !5973, file: !5885, line: 115, type: !5977)
!5982 = !DILocalVariable(name: "base", arg: 3, scope: !5973, file: !5885, line: 115, type: !121)
!5983 = !DILocalVariable(name: "size", arg: 4, scope: !5973, file: !5885, line: 115, type: !121)
!5984 = !DILocation(line: 0, scope: !5973)
!5985 = !DILocation(line: 127, column: 23, scope: !5973)
!5986 = !DILocation(line: 127, column: 35, scope: !5973)
!5987 = !DILocation(line: 127, column: 33, scope: !5973)
!5988 = !DILocation(line: 127, column: 10, scope: !5973)
!5989 = !DILocation(line: 127, column: 15, scope: !5973)
!5990 = !DILocation(line: 129, column: 1, scope: !5973)
!5991 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !384, file: !384, line: 57, type: !5992, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !5994)
!5992 = !DISubroutineType(types: !5993)
!5993 = !{!103, !1705, !371}
!5994 = !{!5995, !5996}
!5995 = !DILocalVariable(name: "index", arg: 1, scope: !5991, file: !384, line: 57, type: !1705)
!5996 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5991, file: !384, line: 58, type: !371)
!5997 = !DILocation(line: 0, scope: !5991)
!5998 = !DILocation(line: 61, column: 6, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5991, file: !384, line: 61, column: 6)
!6000 = !DILocation(line: 61, column: 12, scope: !5999)
!6001 = !DILocation(line: 61, column: 6, scope: !5991)
!6002 = !DILocation(line: 71, column: 2, scope: !5991)
!6003 = !DILocation(line: 73, column: 2, scope: !5991)
!6004 = !DILocation(line: 74, column: 1, scope: !5991)
!6005 = distinct !DISubprogram(name: "region_init", scope: !5885, file: !5885, line: 29, type: !6006, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6008)
!6006 = !DISubroutineType(types: !6007)
!6007 = !{null, !5289, !371}
!6008 = !{!6009, !6010}
!6009 = !DILocalVariable(name: "index", arg: 1, scope: !6005, file: !5885, line: 29, type: !5289)
!6010 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6005, file: !5885, line: 30, type: !371)
!6011 = !DILocation(line: 0, scope: !6005)
!6012 = !DILocation(line: 33, column: 2, scope: !6005)
!6013 = !DILocation(line: 47, column: 28, scope: !6005)
!6014 = !DILocation(line: 47, column: 33, scope: !6005)
!6015 = !DILocation(line: 48, column: 26, scope: !6005)
!6016 = !DILocation(line: 47, column: 12, scope: !6005)
!6017 = !DILocation(line: 49, column: 32, scope: !6005)
!6018 = !DILocation(line: 49, column: 37, scope: !6005)
!6019 = !DILocation(line: 49, column: 12, scope: !6005)
!6020 = !DILocation(line: 53, column: 1, scope: !6005)
!6021 = distinct !DISubprogram(name: "set_region_number", scope: !6022, file: !6022, line: 32, type: !5112, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6023)
!6022 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6023 = !{!6024}
!6024 = !DILocalVariable(name: "index", arg: 1, scope: !6021, file: !6022, line: 32, type: !121)
!6025 = !DILocation(line: 0, scope: !6021)
!6026 = !DILocation(line: 34, column: 11, scope: !6021)
!6027 = !DILocation(line: 35, column: 1, scope: !6021)
!6028 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !5885, file: !5885, line: 88, type: !6029, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6031)
!6029 = !DISubroutineType(types: !6030)
!6030 = !{!121, !121}
!6031 = !{!6032}
!6032 = !DILocalVariable(name: "size", arg: 1, scope: !6028, file: !5885, line: 88, type: !121)
!6033 = !DILocation(line: 0, scope: !6028)
!6034 = !DILocation(line: 91, column: 11, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6028, file: !5885, line: 91, column: 6)
!6036 = !DILocation(line: 91, column: 6, scope: !6028)
!6037 = !DILocation(line: 100, column: 11, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6028, file: !5885, line: 100, column: 6)
!6039 = !DILocation(line: 100, column: 6, scope: !6028)
!6040 = !DILocation(line: 104, column: 35, scope: !6028)
!6041 = !DILocation(line: 104, column: 16, scope: !6028)
!6042 = !DILocation(line: 104, column: 50, scope: !6028)
!6043 = !DILocation(line: 104, column: 72, scope: !6028)
!6044 = !DILocation(line: 104, column: 2, scope: !6028)
!6045 = !DILocation(line: 106, column: 1, scope: !6028)
!6046 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !384, file: !384, line: 307, type: !6047, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6049)
!6047 = !DISubroutineType(types: !6048)
!6048 = !{null, !5864, !154}
!6049 = !{!6050, !6051}
!6050 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6046, file: !384, line: 308, type: !5864)
!6051 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6046, file: !384, line: 308, type: !154)
!6052 = !DILocation(line: 0, scope: !6046)
!6053 = !DILocation(line: 310, column: 6, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6046, file: !384, line: 310, column: 6)
!6055 = !DILocation(line: 316, column: 1, scope: !6046)
!6056 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !5885, file: !5885, line: 249, type: !6057, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6059)
!6057 = !DISubroutineType(types: !6058)
!6058 = !{!103, !5864, !154}
!6059 = !{!6060, !6061, !6062, !6063}
!6060 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6056, file: !5885, line: 250, type: !5864)
!6061 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6056, file: !5885, line: 250, type: !154)
!6062 = !DILocalVariable(name: "mpu_reg_index", scope: !6056, file: !5885, line: 252, type: !103)
!6063 = !DILocalVariable(name: "i", scope: !6064, file: !5885, line: 264, type: !103)
!6064 = distinct !DILexicalBlock(scope: !6065, file: !5885, line: 264, column: 3)
!6065 = distinct !DILexicalBlock(scope: !6066, file: !5885, line: 261, column: 32)
!6066 = distinct !DILexicalBlock(scope: !6056, file: !5885, line: 261, column: 6)
!6067 = !DILocation(line: 0, scope: !6056)
!6068 = !DILocation(line: 252, column: 22, scope: !6056)
!6069 = !DILocation(line: 258, column: 18, scope: !6056)
!6070 = !DILocation(line: 261, column: 20, scope: !6066)
!6071 = !DILocation(line: 261, column: 6, scope: !6056)
!6072 = !DILocation(line: 0, scope: !6064)
!6073 = !DILocation(line: 265, column: 4, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6075, file: !5885, line: 264, column: 59)
!6075 = distinct !DILexicalBlock(scope: !6064, file: !5885, line: 264, column: 3)
!6076 = !DILocation(line: 264, column: 55, scope: !6075)
!6077 = !DILocation(line: 264, column: 33, scope: !6075)
!6078 = !DILocation(line: 264, column: 3, scope: !6064)
!6079 = distinct !{!6079, !6078, !6080}
!6080 = !DILocation(line: 266, column: 3, scope: !6064)
!6081 = !DILocation(line: 269, column: 2, scope: !6056)
!6082 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !6083, file: !6083, line: 218, type: !5112, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6084)
!6083 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6084 = !{!6085}
!6085 = !DILocalVariable(name: "rnr", arg: 1, scope: !6082, file: !6083, line: 218, type: !121)
!6086 = !DILocation(line: 0, scope: !6082)
!6087 = !DILocation(line: 220, column: 12, scope: !6082)
!6088 = !DILocation(line: 221, column: 13, scope: !6082)
!6089 = !DILocation(line: 222, column: 1, scope: !6082)
!6090 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !384, file: !384, line: 326, type: !6091, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !351, retainedNodes: !6093)
!6091 = !DISubroutineType(types: !6092)
!6092 = !{!103}
!6093 = !{!6094}
!6094 = !DILocalVariable(name: "r_index", scope: !6090, file: !384, line: 328, type: !121)
!6095 = !DILocation(line: 330, column: 17, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6090, file: !384, line: 330, column: 6)
!6097 = !DILocation(line: 330, column: 29, scope: !6096)
!6098 = !DILocation(line: 330, column: 6, scope: !6090)
!6099 = !DILocation(line: 347, column: 2, scope: !6090)
!6100 = !DILocation(line: 0, scope: !6090)
!6101 = !DILocation(line: 364, column: 29, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6103, file: !384, line: 364, column: 2)
!6103 = distinct !DILexicalBlock(scope: !6090, file: !384, line: 364, column: 2)
!6104 = !DILocation(line: 364, column: 2, scope: !6103)
!6105 = !DILocation(line: 365, column: 25, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6102, file: !384, line: 364, column: 66)
!6107 = !DILocation(line: 365, column: 3, scope: !6106)
!6108 = !DILocation(line: 364, column: 62, scope: !6102)
!6109 = distinct !{!6109, !6104, !6110}
!6110 = !DILocation(line: 366, column: 2, scope: !6103)
!6111 = !DILocation(line: 369, column: 23, scope: !6090)
!6112 = !DILocation(line: 369, column: 21, scope: !6090)
!6113 = !DILocation(line: 372, column: 2, scope: !6090)
!6114 = !DILocation(line: 443, column: 2, scope: !6090)
!6115 = !DILocation(line: 444, column: 1, scope: !6090)
!6116 = distinct !DISubprogram(name: "strcpy", scope: !6117, file: !6117, line: 20, type: !6118, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6122)
!6117 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6118 = !DISubroutineType(types: !6119)
!6119 = !{!995, !6120, !6121}
!6120 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !995)
!6121 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !144)
!6122 = !{!6123, !6124, !6125}
!6123 = !DILocalVariable(name: "d", arg: 1, scope: !6116, file: !6117, line: 20, type: !6120)
!6124 = !DILocalVariable(name: "s", arg: 2, scope: !6116, file: !6117, line: 20, type: !6121)
!6125 = !DILocalVariable(name: "dest", scope: !6116, file: !6117, line: 22, type: !995)
!6126 = !DILocation(line: 0, scope: !6116)
!6127 = !DILocation(line: 24, column: 9, scope: !6116)
!6128 = !DILocation(line: 24, column: 12, scope: !6116)
!6129 = !DILocation(line: 24, column: 2, scope: !6116)
!6130 = !DILocation(line: 25, column: 6, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6116, file: !6117, line: 24, column: 21)
!6132 = !DILocation(line: 26, column: 4, scope: !6131)
!6133 = !DILocation(line: 27, column: 4, scope: !6131)
!6134 = distinct !{!6134, !6129, !6135}
!6135 = !DILocation(line: 28, column: 2, scope: !6116)
!6136 = !DILocation(line: 30, column: 5, scope: !6116)
!6137 = !DILocation(line: 32, column: 2, scope: !6116)
!6138 = distinct !DISubprogram(name: "strncpy", scope: !6117, file: !6117, line: 42, type: !6139, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6141)
!6139 = !DISubroutineType(types: !6140)
!6140 = !{!995, !6120, !6121, !200}
!6141 = !{!6142, !6143, !6144, !6145}
!6142 = !DILocalVariable(name: "d", arg: 1, scope: !6138, file: !6117, line: 42, type: !6120)
!6143 = !DILocalVariable(name: "s", arg: 2, scope: !6138, file: !6117, line: 42, type: !6121)
!6144 = !DILocalVariable(name: "n", arg: 3, scope: !6138, file: !6117, line: 42, type: !200)
!6145 = !DILocalVariable(name: "dest", scope: !6138, file: !6117, line: 44, type: !995)
!6146 = !DILocation(line: 0, scope: !6138)
!6147 = !DILocation(line: 46, column: 12, scope: !6138)
!6148 = !DILocation(line: 46, column: 17, scope: !6138)
!6149 = !DILocation(line: 46, column: 20, scope: !6138)
!6150 = !DILocation(line: 46, column: 23, scope: !6138)
!6151 = !DILocation(line: 46, column: 2, scope: !6138)
!6152 = !DILocation(line: 47, column: 6, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6138, file: !6117, line: 46, column: 32)
!6154 = !DILocation(line: 48, column: 4, scope: !6153)
!6155 = !DILocation(line: 49, column: 4, scope: !6153)
!6156 = !DILocation(line: 50, column: 4, scope: !6153)
!6157 = distinct !{!6157, !6151, !6158}
!6158 = !DILocation(line: 51, column: 2, scope: !6138)
!6159 = !DILocation(line: 54, column: 6, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6138, file: !6117, line: 53, column: 16)
!6161 = !DILocation(line: 55, column: 4, scope: !6160)
!6162 = !DILocation(line: 56, column: 4, scope: !6160)
!6163 = !DILocation(line: 53, column: 11, scope: !6138)
!6164 = !DILocation(line: 53, column: 2, scope: !6138)
!6165 = distinct !{!6165, !6164, !6166}
!6166 = !DILocation(line: 57, column: 2, scope: !6138)
!6167 = !DILocation(line: 59, column: 2, scope: !6138)
!6168 = distinct !DISubprogram(name: "strchr", scope: !6117, file: !6117, line: 69, type: !6169, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6171)
!6169 = !DISubroutineType(types: !6170)
!6170 = !{!995, !144, !103}
!6171 = !{!6172, !6173, !6174}
!6172 = !DILocalVariable(name: "s", arg: 1, scope: !6168, file: !6117, line: 69, type: !144)
!6173 = !DILocalVariable(name: "c", arg: 2, scope: !6168, file: !6117, line: 69, type: !103)
!6174 = !DILocalVariable(name: "tmp", scope: !6168, file: !6117, line: 71, type: !146)
!6175 = !DILocation(line: 0, scope: !6168)
!6176 = !DILocation(line: 73, column: 2, scope: !6168)
!6177 = !DILocation(line: 73, column: 10, scope: !6168)
!6178 = !DILocation(line: 73, column: 13, scope: !6168)
!6179 = !DILocation(line: 73, column: 21, scope: !6168)
!6180 = !DILocation(line: 74, column: 4, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6168, file: !6117, line: 73, column: 38)
!6182 = distinct !{!6182, !6176, !6183}
!6183 = !DILocation(line: 75, column: 2, scope: !6168)
!6184 = !DILocation(line: 77, column: 9, scope: !6168)
!6185 = !DILocation(line: 77, column: 2, scope: !6168)
!6186 = distinct !DISubprogram(name: "strrchr", scope: !6117, file: !6117, line: 87, type: !6169, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6187)
!6187 = !{!6188, !6189, !6190}
!6188 = !DILocalVariable(name: "s", arg: 1, scope: !6186, file: !6117, line: 87, type: !144)
!6189 = !DILocalVariable(name: "c", arg: 2, scope: !6186, file: !6117, line: 87, type: !103)
!6190 = !DILocalVariable(name: "match", scope: !6186, file: !6117, line: 89, type: !995)
!6191 = !DILocation(line: 0, scope: !6186)
!6192 = !DILocation(line: 91, column: 2, scope: !6186)
!6193 = !DILocation(line: 92, column: 7, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !6117, line: 92, column: 7)
!6195 = distinct !DILexicalBlock(scope: !6186, file: !6117, line: 91, column: 5)
!6196 = !DILocation(line: 92, column: 10, scope: !6194)
!6197 = !DILocation(line: 92, column: 7, scope: !6195)
!6198 = !DILocation(line: 95, column: 13, scope: !6186)
!6199 = !DILocation(line: 95, column: 2, scope: !6195)
!6200 = distinct !{!6200, !6192, !6201}
!6201 = !DILocation(line: 95, column: 15, scope: !6186)
!6202 = !DILocation(line: 97, column: 2, scope: !6186)
!6203 = distinct !DISubprogram(name: "strlen", scope: !6117, file: !6117, line: 107, type: !6204, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6206)
!6204 = !DISubroutineType(types: !6205)
!6205 = !{!200, !144}
!6206 = !{!6207, !6208}
!6207 = !DILocalVariable(name: "s", arg: 1, scope: !6203, file: !6117, line: 107, type: !144)
!6208 = !DILocalVariable(name: "n", scope: !6203, file: !6117, line: 109, type: !200)
!6209 = !DILocation(line: 0, scope: !6203)
!6210 = !DILocation(line: 111, column: 9, scope: !6203)
!6211 = !DILocation(line: 111, column: 12, scope: !6203)
!6212 = !DILocation(line: 111, column: 2, scope: !6203)
!6213 = !DILocation(line: 112, column: 4, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6203, file: !6117, line: 111, column: 21)
!6215 = !DILocation(line: 113, column: 4, scope: !6214)
!6216 = distinct !{!6216, !6212, !6217}
!6217 = !DILocation(line: 114, column: 2, scope: !6203)
!6218 = !DILocation(line: 116, column: 2, scope: !6203)
!6219 = distinct !DISubprogram(name: "strnlen", scope: !6117, file: !6117, line: 126, type: !6220, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6222)
!6220 = !DISubroutineType(types: !6221)
!6221 = !{!200, !144, !200}
!6222 = !{!6223, !6224, !6225}
!6223 = !DILocalVariable(name: "s", arg: 1, scope: !6219, file: !6117, line: 126, type: !144)
!6224 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6219, file: !6117, line: 126, type: !200)
!6225 = !DILocalVariable(name: "n", scope: !6219, file: !6117, line: 128, type: !200)
!6226 = !DILocation(line: 0, scope: !6219)
!6227 = !DILocation(line: 130, column: 9, scope: !6219)
!6228 = !DILocation(line: 130, column: 12, scope: !6219)
!6229 = !DILocation(line: 130, column: 20, scope: !6219)
!6230 = !DILocation(line: 130, column: 2, scope: !6219)
!6231 = !DILocation(line: 131, column: 4, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6219, file: !6117, line: 130, column: 35)
!6233 = !DILocation(line: 132, column: 4, scope: !6232)
!6234 = distinct !{!6234, !6230, !6235}
!6235 = !DILocation(line: 133, column: 2, scope: !6219)
!6236 = !DILocation(line: 135, column: 2, scope: !6219)
!6237 = distinct !DISubprogram(name: "strcmp", scope: !6117, file: !6117, line: 145, type: !6238, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6240)
!6238 = !DISubroutineType(types: !6239)
!6239 = !{!103, !144, !144}
!6240 = !{!6241, !6242}
!6241 = !DILocalVariable(name: "s1", arg: 1, scope: !6237, file: !6117, line: 145, type: !144)
!6242 = !DILocalVariable(name: "s2", arg: 2, scope: !6237, file: !6117, line: 145, type: !144)
!6243 = !DILocation(line: 0, scope: !6237)
!6244 = !DILocation(line: 147, column: 10, scope: !6237)
!6245 = !DILocation(line: 147, column: 17, scope: !6237)
!6246 = !DILocation(line: 147, column: 14, scope: !6237)
!6247 = !DILocation(line: 147, column: 22, scope: !6237)
!6248 = !DILocation(line: 148, column: 5, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6237, file: !6117, line: 147, column: 40)
!6250 = !DILocation(line: 149, column: 5, scope: !6249)
!6251 = distinct !{!6251, !6252, !6253}
!6252 = !DILocation(line: 147, column: 2, scope: !6237)
!6253 = !DILocation(line: 150, column: 2, scope: !6237)
!6254 = !DILocation(line: 152, column: 9, scope: !6237)
!6255 = !DILocation(line: 152, column: 15, scope: !6237)
!6256 = !DILocation(line: 152, column: 13, scope: !6237)
!6257 = !DILocation(line: 152, column: 2, scope: !6237)
!6258 = distinct !DISubprogram(name: "strncmp", scope: !6117, file: !6117, line: 162, type: !6259, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6261)
!6259 = !DISubroutineType(types: !6260)
!6260 = !{!103, !144, !144, !200}
!6261 = !{!6262, !6263, !6264}
!6262 = !DILocalVariable(name: "s1", arg: 1, scope: !6258, file: !6117, line: 162, type: !144)
!6263 = !DILocalVariable(name: "s2", arg: 2, scope: !6258, file: !6117, line: 162, type: !144)
!6264 = !DILocalVariable(name: "n", arg: 3, scope: !6258, file: !6117, line: 162, type: !200)
!6265 = !DILocation(line: 0, scope: !6258)
!6266 = !DILocation(line: 164, column: 17, scope: !6258)
!6267 = !DILocation(line: 164, column: 21, scope: !6258)
!6268 = !DILocation(line: 164, column: 28, scope: !6258)
!6269 = !DILocation(line: 164, column: 25, scope: !6258)
!6270 = !DILocation(line: 164, column: 33, scope: !6258)
!6271 = !DILocation(line: 165, column: 5, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6258, file: !6117, line: 164, column: 51)
!6273 = !DILocation(line: 166, column: 5, scope: !6272)
!6274 = !DILocation(line: 167, column: 4, scope: !6272)
!6275 = distinct !{!6275, !6276, !6277}
!6276 = !DILocation(line: 164, column: 2, scope: !6258)
!6277 = !DILocation(line: 168, column: 2, scope: !6258)
!6278 = !DILocation(line: 170, column: 25, scope: !6258)
!6279 = !DILocation(line: 170, column: 31, scope: !6258)
!6280 = !DILocation(line: 170, column: 29, scope: !6258)
!6281 = !DILocation(line: 170, column: 9, scope: !6258)
!6282 = !DILocation(line: 170, column: 2, scope: !6258)
!6283 = distinct !DISubprogram(name: "strtok_r", scope: !6117, file: !6117, line: 180, type: !6284, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6287)
!6284 = !DISubroutineType(types: !6285)
!6285 = !{!995, !995, !144, !6286}
!6286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!6287 = !{!6288, !6289, !6290, !6291, !6292}
!6288 = !DILocalVariable(name: "str", arg: 1, scope: !6283, file: !6117, line: 180, type: !995)
!6289 = !DILocalVariable(name: "sep", arg: 2, scope: !6283, file: !6117, line: 180, type: !144)
!6290 = !DILocalVariable(name: "state", arg: 3, scope: !6283, file: !6117, line: 180, type: !6286)
!6291 = !DILocalVariable(name: "start", scope: !6283, file: !6117, line: 182, type: !995)
!6292 = !DILocalVariable(name: "end", scope: !6283, file: !6117, line: 182, type: !995)
!6293 = !DILocation(line: 0, scope: !6283)
!6294 = !DILocation(line: 184, column: 10, scope: !6283)
!6295 = !DILocation(line: 184, column: 22, scope: !6283)
!6296 = !DILocation(line: 187, column: 9, scope: !6283)
!6297 = !DILocation(line: 187, column: 16, scope: !6283)
!6298 = !DILocation(line: 187, column: 19, scope: !6283)
!6299 = !DILocation(line: 187, column: 2, scope: !6283)
!6300 = !DILocation(line: 188, column: 8, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6283, file: !6117, line: 187, column: 40)
!6302 = distinct !{!6302, !6299, !6303}
!6303 = !DILocation(line: 189, column: 2, scope: !6283)
!6304 = !DILocation(line: 198, column: 9, scope: !6283)
!6305 = !DILocation(line: 198, column: 18, scope: !6283)
!6306 = !DILocation(line: 198, column: 17, scope: !6283)
!6307 = !DILocation(line: 198, column: 2, scope: !6283)
!6308 = !DILocation(line: 199, column: 6, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6283, file: !6117, line: 198, column: 37)
!6310 = !DILocation(line: 198, column: 14, scope: !6283)
!6311 = distinct !{!6311, !6307, !6312}
!6312 = !DILocation(line: 200, column: 2, scope: !6283)
!6313 = !DILocation(line: 203, column: 8, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6315, file: !6117, line: 202, column: 20)
!6315 = distinct !DILexicalBlock(scope: !6283, file: !6117, line: 202, column: 6)
!6316 = !DILocation(line: 204, column: 16, scope: !6314)
!6317 = !DILocation(line: 205, column: 2, scope: !6314)
!6318 = !DILocation(line: 210, column: 1, scope: !6283)
!6319 = distinct !DISubprogram(name: "strcat", scope: !6117, file: !6117, line: 212, type: !6118, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6320)
!6320 = !{!6321, !6322}
!6321 = !DILocalVariable(name: "dest", arg: 1, scope: !6319, file: !6117, line: 212, type: !6120)
!6322 = !DILocalVariable(name: "src", arg: 2, scope: !6319, file: !6117, line: 212, type: !6121)
!6323 = !DILocation(line: 0, scope: !6319)
!6324 = !DILocation(line: 214, column: 16, scope: !6319)
!6325 = !DILocation(line: 214, column: 14, scope: !6319)
!6326 = !DILocation(line: 214, column: 2, scope: !6319)
!6327 = !DILocation(line: 215, column: 2, scope: !6319)
!6328 = distinct !DISubprogram(name: "strncat", scope: !6117, file: !6117, line: 218, type: !6139, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6329)
!6329 = !{!6330, !6331, !6332, !6333, !6334}
!6330 = !DILocalVariable(name: "dest", arg: 1, scope: !6328, file: !6117, line: 218, type: !6120)
!6331 = !DILocalVariable(name: "src", arg: 2, scope: !6328, file: !6117, line: 218, type: !6121)
!6332 = !DILocalVariable(name: "n", arg: 3, scope: !6328, file: !6117, line: 219, type: !200)
!6333 = !DILocalVariable(name: "orig_dest", scope: !6328, file: !6117, line: 221, type: !995)
!6334 = !DILocalVariable(name: "len", scope: !6328, file: !6117, line: 222, type: !200)
!6335 = !DILocation(line: 0, scope: !6328)
!6336 = !DILocation(line: 222, column: 15, scope: !6328)
!6337 = !DILocation(line: 224, column: 7, scope: !6328)
!6338 = !DILocation(line: 225, column: 14, scope: !6328)
!6339 = !DILocation(line: 225, column: 19, scope: !6328)
!6340 = !DILocation(line: 225, column: 11, scope: !6328)
!6341 = !DILocation(line: 225, column: 23, scope: !6328)
!6342 = !DILocation(line: 225, column: 28, scope: !6328)
!6343 = !DILocation(line: 225, column: 2, scope: !6328)
!6344 = !DILocation(line: 226, column: 17, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6328, file: !6117, line: 225, column: 38)
!6346 = !DILocation(line: 226, column: 8, scope: !6345)
!6347 = !DILocation(line: 226, column: 11, scope: !6345)
!6348 = distinct !{!6348, !6343, !6349}
!6349 = !DILocation(line: 227, column: 2, scope: !6328)
!6350 = !DILocation(line: 228, column: 8, scope: !6328)
!6351 = !DILocation(line: 230, column: 2, scope: !6328)
!6352 = distinct !DISubprogram(name: "memcmp", scope: !6117, file: !6117, line: 239, type: !6353, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6355)
!6353 = !DISubroutineType(types: !6354)
!6354 = !{!103, !13, !13, !200}
!6355 = !{!6356, !6357, !6358, !6359, !6360}
!6356 = !DILocalVariable(name: "m1", arg: 1, scope: !6352, file: !6117, line: 239, type: !13)
!6357 = !DILocalVariable(name: "m2", arg: 2, scope: !6352, file: !6117, line: 239, type: !13)
!6358 = !DILocalVariable(name: "n", arg: 3, scope: !6352, file: !6117, line: 239, type: !200)
!6359 = !DILocalVariable(name: "c1", scope: !6352, file: !6117, line: 241, type: !144)
!6360 = !DILocalVariable(name: "c2", scope: !6352, file: !6117, line: 242, type: !144)
!6361 = !DILocation(line: 0, scope: !6352)
!6362 = !DILocation(line: 244, column: 7, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6352, file: !6117, line: 244, column: 6)
!6364 = !DILocation(line: 244, column: 6, scope: !6352)
!6365 = !DILocation(line: 248, column: 10, scope: !6352)
!6366 = !DILocation(line: 248, column: 14, scope: !6352)
!6367 = !DILocation(line: 248, column: 19, scope: !6352)
!6368 = !DILocation(line: 248, column: 2, scope: !6352)
!6369 = !DILocation(line: 248, column: 23, scope: !6352)
!6370 = !DILocation(line: 248, column: 30, scope: !6352)
!6371 = !DILocation(line: 248, column: 27, scope: !6352)
!6372 = !DILocation(line: 249, column: 5, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6352, file: !6117, line: 248, column: 36)
!6374 = !DILocation(line: 250, column: 5, scope: !6373)
!6375 = distinct !{!6375, !6368, !6376}
!6376 = !DILocation(line: 251, column: 2, scope: !6352)
!6377 = !DILocation(line: 253, column: 9, scope: !6352)
!6378 = !DILocation(line: 253, column: 15, scope: !6352)
!6379 = !DILocation(line: 253, column: 13, scope: !6352)
!6380 = !DILocation(line: 253, column: 2, scope: !6352)
!6381 = !DILocation(line: 254, column: 1, scope: !6352)
!6382 = distinct !DISubprogram(name: "memmove", scope: !6117, file: !6117, line: 263, type: !6383, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6385)
!6383 = !DISubroutineType(types: !6384)
!6384 = !{!102, !102, !13, !200}
!6385 = !{!6386, !6387, !6388, !6389, !6390}
!6386 = !DILocalVariable(name: "d", arg: 1, scope: !6382, file: !6117, line: 263, type: !102)
!6387 = !DILocalVariable(name: "s", arg: 2, scope: !6382, file: !6117, line: 263, type: !13)
!6388 = !DILocalVariable(name: "n", arg: 3, scope: !6382, file: !6117, line: 263, type: !200)
!6389 = !DILocalVariable(name: "dest", scope: !6382, file: !6117, line: 265, type: !995)
!6390 = !DILocalVariable(name: "src", scope: !6382, file: !6117, line: 266, type: !144)
!6391 = !DILocation(line: 0, scope: !6382)
!6392 = !DILocation(line: 268, column: 21, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6382, file: !6117, line: 268, column: 6)
!6394 = !DILocation(line: 268, column: 28, scope: !6393)
!6395 = !DILocation(line: 268, column: 6, scope: !6382)
!6396 = !DILocation(line: 280, column: 12, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6393, file: !6117, line: 278, column: 9)
!6398 = !DILocation(line: 280, column: 3, scope: !6397)
!6399 = !DILocation(line: 275, column: 5, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6401, file: !6117, line: 274, column: 17)
!6401 = distinct !DILexicalBlock(scope: !6393, file: !6117, line: 268, column: 33)
!6402 = !DILocation(line: 276, column: 14, scope: !6400)
!6403 = !DILocation(line: 276, column: 4, scope: !6400)
!6404 = !DILocation(line: 276, column: 12, scope: !6400)
!6405 = !DILocation(line: 274, column: 12, scope: !6401)
!6406 = !DILocation(line: 274, column: 3, scope: !6401)
!6407 = distinct !{!6407, !6406, !6408}
!6408 = !DILocation(line: 277, column: 3, scope: !6401)
!6409 = !DILocation(line: 281, column: 12, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6397, file: !6117, line: 280, column: 17)
!6411 = !DILocation(line: 281, column: 10, scope: !6410)
!6412 = !DILocation(line: 282, column: 8, scope: !6410)
!6413 = !DILocation(line: 283, column: 7, scope: !6410)
!6414 = !DILocation(line: 284, column: 5, scope: !6410)
!6415 = distinct !{!6415, !6398, !6416}
!6416 = !DILocation(line: 285, column: 3, scope: !6397)
!6417 = !DILocation(line: 288, column: 2, scope: !6382)
!6418 = distinct !DISubprogram(name: "memcpy", scope: !6117, file: !6117, line: 298, type: !6419, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6423)
!6419 = !DISubroutineType(types: !6420)
!6420 = !{!102, !6421, !6422, !200}
!6421 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6422 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6423 = !{!6424, !6425, !6426, !6427, !6428}
!6424 = !DILocalVariable(name: "d", arg: 1, scope: !6418, file: !6117, line: 298, type: !6421)
!6425 = !DILocalVariable(name: "s", arg: 2, scope: !6418, file: !6117, line: 298, type: !6422)
!6426 = !DILocalVariable(name: "n", arg: 3, scope: !6418, file: !6117, line: 298, type: !200)
!6427 = !DILocalVariable(name: "d_byte", scope: !6418, file: !6117, line: 302, type: !828)
!6428 = !DILocalVariable(name: "s_byte", scope: !6418, file: !6117, line: 303, type: !2694)
!6429 = !DILocation(line: 0, scope: !6418)
!6430 = !DILocation(line: 337, column: 11, scope: !6418)
!6431 = !DILocation(line: 337, column: 2, scope: !6418)
!6432 = !DILocation(line: 338, column: 25, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6418, file: !6117, line: 337, column: 16)
!6434 = !DILocation(line: 338, column: 17, scope: !6433)
!6435 = !DILocation(line: 338, column: 11, scope: !6433)
!6436 = !DILocation(line: 338, column: 15, scope: !6433)
!6437 = !DILocation(line: 339, column: 4, scope: !6433)
!6438 = distinct !{!6438, !6431, !6439}
!6439 = !DILocation(line: 340, column: 2, scope: !6418)
!6440 = !DILocation(line: 342, column: 2, scope: !6418)
!6441 = distinct !DISubprogram(name: "memset", scope: !6117, file: !6117, line: 352, type: !6442, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6444)
!6442 = !DISubroutineType(types: !6443)
!6443 = !{!102, !102, !103, !200}
!6444 = !{!6445, !6446, !6447, !6448, !6449}
!6445 = !DILocalVariable(name: "buf", arg: 1, scope: !6441, file: !6117, line: 352, type: !102)
!6446 = !DILocalVariable(name: "c", arg: 2, scope: !6441, file: !6117, line: 352, type: !103)
!6447 = !DILocalVariable(name: "n", arg: 3, scope: !6441, file: !6117, line: 352, type: !200)
!6448 = !DILocalVariable(name: "d_byte", scope: !6441, file: !6117, line: 356, type: !828)
!6449 = !DILocalVariable(name: "c_byte", scope: !6441, file: !6117, line: 357, type: !155)
!6450 = !DILocation(line: 0, scope: !6441)
!6451 = !DILocation(line: 357, column: 25, scope: !6441)
!6452 = !DILocation(line: 389, column: 11, scope: !6441)
!6453 = !DILocation(line: 389, column: 2, scope: !6441)
!6454 = !DILocation(line: 390, column: 11, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6441, file: !6117, line: 389, column: 16)
!6456 = !DILocation(line: 390, column: 15, scope: !6455)
!6457 = !DILocation(line: 391, column: 4, scope: !6455)
!6458 = distinct !{!6458, !6453, !6459}
!6459 = !DILocation(line: 392, column: 2, scope: !6441)
!6460 = !DILocation(line: 394, column: 2, scope: !6441)
!6461 = distinct !DISubprogram(name: "memchr", scope: !6117, file: !6117, line: 404, type: !6462, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !6464)
!6462 = !DISubroutineType(types: !6463)
!6463 = !{!102, !13, !103, !200}
!6464 = !{!6465, !6466, !6467, !6468}
!6465 = !DILocalVariable(name: "s", arg: 1, scope: !6461, file: !6117, line: 404, type: !13)
!6466 = !DILocalVariable(name: "c", arg: 2, scope: !6461, file: !6117, line: 404, type: !103)
!6467 = !DILocalVariable(name: "n", arg: 3, scope: !6461, file: !6117, line: 404, type: !200)
!6468 = !DILocalVariable(name: "p", scope: !6469, file: !6117, line: 407, type: !2694)
!6469 = distinct !DILexicalBlock(scope: !6470, file: !6117, line: 406, column: 14)
!6470 = distinct !DILexicalBlock(scope: !6461, file: !6117, line: 406, column: 6)
!6471 = !DILocation(line: 0, scope: !6461)
!6472 = !DILocation(line: 406, column: 8, scope: !6470)
!6473 = !DILocation(line: 406, column: 6, scope: !6461)
!6474 = !DILocation(line: 409, column: 3, scope: !6469)
!6475 = !DILocation(line: 0, scope: !6469)
!6476 = !DILocation(line: 410, column: 8, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6478, file: !6117, line: 410, column: 8)
!6478 = distinct !DILexicalBlock(scope: !6469, file: !6117, line: 409, column: 6)
!6479 = !DILocation(line: 410, column: 13, scope: !6477)
!6480 = !DILocation(line: 410, column: 8, scope: !6478)
!6481 = distinct !{!6481, !6474, !6482}
!6482 = !DILocation(line: 414, column: 20, scope: !6469)
!6483 = !DILocation(line: 417, column: 2, scope: !6461)
!6484 = !DILocation(line: 418, column: 1, scope: !6461)
!6485 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !394, file: !394, line: 23, type: !3167, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6486)
!6486 = !{!6487}
!6487 = !DILocalVariable(name: "hook", arg: 1, scope: !6485, file: !394, line: 23, type: !106)
!6488 = !DILocation(line: 0, scope: !6485)
!6489 = !DILocation(line: 25, column: 15, scope: !6485)
!6490 = !DILocation(line: 26, column: 1, scope: !6485)
!6491 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !394, file: !394, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6492)
!6492 = !{!6493}
!6493 = !DILocalVariable(name: "c", arg: 1, scope: !6491, file: !394, line: 14, type: !103)
!6494 = !DILocation(line: 0, scope: !6491)
!6495 = !DILocation(line: 18, column: 2, scope: !6491)
!6496 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !394, file: !394, line: 28, type: !6497, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6499)
!6497 = !DISubroutineType(types: !6498)
!6498 = !{!103, !103, !390}
!6499 = !{!6500, !6501}
!6500 = !DILocalVariable(name: "c", arg: 1, scope: !6496, file: !394, line: 28, type: !103)
!6501 = !DILocalVariable(name: "stream", arg: 2, scope: !6496, file: !394, line: 28, type: !390)
!6502 = !DILocation(line: 0, scope: !6496)
!6503 = !DILocation(line: 30, column: 27, scope: !6496)
!6504 = !DILocation(line: 30, column: 50, scope: !6496)
!6505 = !DILocation(line: 30, column: 9, scope: !6496)
!6506 = !DILocation(line: 30, column: 2, scope: !6496)
!6507 = distinct !DISubprogram(name: "fputc", scope: !394, file: !394, line: 41, type: !6497, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6508)
!6508 = !{!6509, !6510}
!6509 = !DILocalVariable(name: "c", arg: 1, scope: !6507, file: !394, line: 41, type: !103)
!6510 = !DILocalVariable(name: "stream", arg: 2, scope: !6507, file: !394, line: 41, type: !390)
!6511 = !DILocation(line: 0, scope: !6507)
!6512 = !DILocation(line: 43, column: 9, scope: !6507)
!6513 = !DILocation(line: 43, column: 2, scope: !6507)
!6514 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6515, file: !6515, line: 72, type: !6497, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6516)
!6515 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!6516 = !{!6517, !6518}
!6517 = !DILocalVariable(name: "c", arg: 1, scope: !6514, file: !6515, line: 72, type: !103)
!6518 = !DILocalVariable(name: "stream", arg: 2, scope: !6514, file: !6515, line: 72, type: !390)
!6519 = !DILocation(line: 0, scope: !6514)
!6520 = !DILocation(line: 81, column: 2, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6514, file: !6515, line: 81, column: 2)
!6522 = !{i64 2155123279}
!6523 = !DILocation(line: 82, column: 9, scope: !6514)
!6524 = !DILocation(line: 82, column: 2, scope: !6514)
!6525 = distinct !DISubprogram(name: "fputs", scope: !394, file: !394, line: 46, type: !6526, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6529)
!6526 = !DISubroutineType(types: !6527)
!6527 = !{!103, !6121, !6528}
!6528 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !390)
!6529 = !{!6530, !6531, !6532, !6533}
!6530 = !DILocalVariable(name: "s", arg: 1, scope: !6525, file: !394, line: 46, type: !6121)
!6531 = !DILocalVariable(name: "stream", arg: 2, scope: !6525, file: !394, line: 46, type: !6528)
!6532 = !DILocalVariable(name: "len", scope: !6525, file: !394, line: 48, type: !103)
!6533 = !DILocalVariable(name: "ret", scope: !6525, file: !394, line: 49, type: !103)
!6534 = !DILocation(line: 0, scope: !6525)
!6535 = !DILocation(line: 48, column: 12, scope: !6525)
!6536 = !DILocation(line: 51, column: 8, scope: !6525)
!6537 = !DILocation(line: 53, column: 13, scope: !6525)
!6538 = !DILocation(line: 53, column: 9, scope: !6525)
!6539 = !DILocation(line: 53, column: 2, scope: !6525)
!6540 = distinct !DISubprogram(name: "fwrite", scope: !394, file: !394, line: 99, type: !6541, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6543)
!6541 = !DISubroutineType(types: !6542)
!6542 = !{!200, !6422, !200, !200, !6528}
!6543 = !{!6544, !6545, !6546, !6547}
!6544 = !DILocalVariable(name: "ptr", arg: 1, scope: !6540, file: !394, line: 99, type: !6422)
!6545 = !DILocalVariable(name: "size", arg: 2, scope: !6540, file: !394, line: 99, type: !200)
!6546 = !DILocalVariable(name: "nitems", arg: 3, scope: !6540, file: !394, line: 99, type: !200)
!6547 = !DILocalVariable(name: "stream", arg: 4, scope: !6540, file: !394, line: 100, type: !6528)
!6548 = !DILocation(line: 0, scope: !6540)
!6549 = !DILocation(line: 102, column: 9, scope: !6540)
!6550 = !DILocation(line: 102, column: 2, scope: !6540)
!6551 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6515, file: !6515, line: 96, type: !6541, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6552)
!6552 = !{!6553, !6554, !6555, !6556}
!6553 = !DILocalVariable(name: "ptr", arg: 1, scope: !6551, file: !6515, line: 96, type: !6422)
!6554 = !DILocalVariable(name: "size", arg: 2, scope: !6551, file: !6515, line: 96, type: !200)
!6555 = !DILocalVariable(name: "nitems", arg: 3, scope: !6551, file: !6515, line: 96, type: !200)
!6556 = !DILocalVariable(name: "stream", arg: 4, scope: !6551, file: !6515, line: 96, type: !6528)
!6557 = !DILocation(line: 0, scope: !6551)
!6558 = !DILocation(line: 107, column: 2, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6551, file: !6515, line: 107, column: 2)
!6560 = !{i64 2155123383}
!6561 = !DILocation(line: 108, column: 9, scope: !6551)
!6562 = !DILocation(line: 108, column: 2, scope: !6551)
!6563 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !394, file: !394, line: 56, type: !6541, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6564)
!6564 = !{!6565, !6566, !6567, !6568, !6569, !6570, !6571, !6572}
!6565 = !DILocalVariable(name: "ptr", arg: 1, scope: !6563, file: !394, line: 56, type: !6422)
!6566 = !DILocalVariable(name: "size", arg: 2, scope: !6563, file: !394, line: 56, type: !200)
!6567 = !DILocalVariable(name: "nitems", arg: 3, scope: !6563, file: !394, line: 57, type: !200)
!6568 = !DILocalVariable(name: "stream", arg: 4, scope: !6563, file: !394, line: 57, type: !6528)
!6569 = !DILocalVariable(name: "i", scope: !6563, file: !394, line: 59, type: !200)
!6570 = !DILocalVariable(name: "j", scope: !6563, file: !394, line: 60, type: !200)
!6571 = !DILocalVariable(name: "p", scope: !6563, file: !394, line: 61, type: !2694)
!6572 = !DILabel(scope: !6563, name: "done", file: !394, line: 82)
!6573 = !DILocation(line: 0, scope: !6563)
!6574 = !DILocation(line: 63, column: 14, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6563, file: !394, line: 63, column: 6)
!6576 = !DILocation(line: 63, column: 24, scope: !6575)
!6577 = !DILocation(line: 72, column: 3, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6563, file: !394, line: 70, column: 5)
!6579 = !DILocation(line: 0, scope: !6578)
!6580 = !DILocation(line: 73, column: 8, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6582, file: !394, line: 73, column: 8)
!6582 = distinct !DILexicalBlock(scope: !6578, file: !394, line: 72, column: 6)
!6583 = !DILocation(line: 73, column: 29, scope: !6581)
!6584 = !DILocation(line: 73, column: 27, scope: !6581)
!6585 = !DILocation(line: 73, column: 21, scope: !6581)
!6586 = !DILocation(line: 73, column: 33, scope: !6581)
!6587 = !DILocation(line: 73, column: 8, scope: !6582)
!6588 = !DILocation(line: 76, column: 5, scope: !6582)
!6589 = !DILocation(line: 77, column: 14, scope: !6578)
!6590 = !DILocation(line: 77, column: 3, scope: !6582)
!6591 = distinct !{!6591, !6577, !6592}
!6592 = !DILocation(line: 77, column: 17, scope: !6578)
!6593 = !DILocation(line: 79, column: 4, scope: !6578)
!6594 = !DILocation(line: 80, column: 13, scope: !6563)
!6595 = !DILocation(line: 80, column: 2, scope: !6578)
!6596 = distinct !{!6596, !6597, !6598}
!6597 = !DILocation(line: 70, column: 2, scope: !6563)
!6598 = !DILocation(line: 80, column: 16, scope: !6563)
!6599 = !DILocation(line: 82, column: 1, scope: !6563)
!6600 = !DILocation(line: 83, column: 17, scope: !6563)
!6601 = !DILocation(line: 83, column: 2, scope: !6563)
!6602 = !DILocation(line: 84, column: 1, scope: !6563)
!6603 = distinct !DISubprogram(name: "puts", scope: !394, file: !394, line: 106, type: !6604, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !6606)
!6604 = !DISubroutineType(types: !6605)
!6605 = !{!103, !144}
!6606 = !{!6607}
!6607 = !DILocalVariable(name: "s", arg: 1, scope: !6603, file: !394, line: 106, type: !144)
!6608 = !DILocation(line: 0, scope: !6603)
!6609 = !DILocation(line: 108, column: 6, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6603, file: !394, line: 108, column: 6)
!6611 = !DILocation(line: 108, column: 23, scope: !6610)
!6612 = !DILocation(line: 108, column: 6, scope: !6603)
!6613 = !DILocation(line: 112, column: 9, scope: !6603)
!6614 = !DILocation(line: 112, column: 29, scope: !6603)
!6615 = !DILocation(line: 112, column: 2, scope: !6603)
!6616 = !DILocation(line: 113, column: 1, scope: !6603)
!6617 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !535, file: !535, line: 368, type: !588, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6618)
!6618 = !{!6619}
!6619 = !DILocalVariable(name: "dev", arg: 1, scope: !6617, file: !535, line: 368, type: !564)
!6620 = !DILocation(line: 0, scope: !6617)
!6621 = !DILocation(line: 370, column: 2, scope: !6617)
!6622 = !DILocation(line: 371, column: 1, scope: !6617)
!6623 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !535, file: !535, line: 243, type: !6624, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6626)
!6624 = !DISubroutineType(types: !6625)
!6625 = !{null, !103, !103, !564}
!6626 = !{!6627, !6628, !6629, !6630, !6632}
!6627 = !DILocalVariable(name: "min", arg: 1, scope: !6623, file: !535, line: 243, type: !103)
!6628 = !DILocalVariable(name: "max", arg: 2, scope: !6623, file: !535, line: 243, type: !103)
!6629 = !DILocalVariable(name: "dev", arg: 3, scope: !6623, file: !535, line: 243, type: !564)
!6630 = !DILocalVariable(name: "data", scope: !6623, file: !535, line: 245, type: !6631)
!6631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!6632 = !DILocalVariable(name: "line", scope: !6623, file: !535, line: 246, type: !103)
!6633 = !DILocation(line: 0, scope: !6623)
!6634 = !DILocation(line: 245, column: 38, scope: !6623)
!6635 = !DILocation(line: 249, column: 24, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6637, file: !535, line: 249, column: 2)
!6637 = distinct !DILexicalBlock(scope: !6623, file: !535, line: 249, column: 2)
!6638 = !DILocation(line: 249, column: 2, scope: !6637)
!6639 = !DILocation(line: 251, column: 7, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6641, file: !535, line: 251, column: 7)
!6641 = distinct !DILexicalBlock(scope: !6636, file: !535, line: 249, column: 39)
!6642 = !DILocation(line: 251, column: 7, scope: !6641)
!6643 = !DILocation(line: 253, column: 4, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6640, file: !535, line: 251, column: 36)
!6645 = !DILocation(line: 256, column: 24, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6644, file: !535, line: 256, column: 8)
!6647 = !DILocation(line: 256, column: 9, scope: !6646)
!6648 = !DILocation(line: 256, column: 8, scope: !6644)
!6649 = !DILocation(line: 260, column: 43, scope: !6644)
!6650 = !DILocation(line: 260, column: 4, scope: !6644)
!6651 = !DILocation(line: 261, column: 3, scope: !6644)
!6652 = !DILocation(line: 249, column: 35, scope: !6636)
!6653 = distinct !{!6653, !6638, !6654}
!6654 = !DILocation(line: 262, column: 2, scope: !6637)
!6655 = !DILocation(line: 263, column: 1, scope: !6623)
!6656 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !535, file: !535, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6657)
!6657 = !{!6658}
!6658 = !DILocalVariable(name: "line", arg: 1, scope: !6656, file: !535, line: 158, type: !103)
!6659 = !DILocation(line: 0, scope: !6656)
!6660 = !DILocation(line: 170, column: 38, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !535, line: 160, column: 17)
!6662 = distinct !DILexicalBlock(scope: !6656, file: !535, line: 160, column: 6)
!6663 = !DILocation(line: 170, column: 10, scope: !6661)
!6664 = !DILocation(line: 176, column: 1, scope: !6656)
!6665 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !535, file: !535, line: 183, type: !6666, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6668)
!6666 = !DISubroutineType(types: !6667)
!6667 = !{null, !103}
!6668 = !{!6669}
!6669 = !DILocalVariable(name: "line", arg: 1, scope: !6665, file: !535, line: 183, type: !103)
!6670 = !DILocation(line: 0, scope: !6665)
!6671 = !DILocation(line: 195, column: 28, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6673, file: !535, line: 185, column: 17)
!6673 = distinct !DILexicalBlock(scope: !6665, file: !535, line: 185, column: 6)
!6674 = !DILocation(line: 195, column: 3, scope: !6672)
!6675 = !DILocation(line: 200, column: 1, scope: !6665)
!6676 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !6677, file: !6677, line: 910, type: !5112, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6678)
!6677 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6678 = !{!6679}
!6679 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6676, file: !6677, line: 910, type: !121)
!6680 = !DILocation(line: 0, scope: !6676)
!6681 = !DILocation(line: 912, column: 3, scope: !6676)
!6682 = !DILocation(line: 913, column: 1, scope: !6676)
!6683 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !6677, file: !6677, line: 834, type: !6029, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6684)
!6684 = !{!6685}
!6685 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6683, file: !6677, line: 834, type: !121)
!6686 = !DILocation(line: 0, scope: !6683)
!6687 = !DILocation(line: 836, column: 11, scope: !6683)
!6688 = !DILocation(line: 836, column: 40, scope: !6683)
!6689 = !DILocation(line: 836, column: 3, scope: !6683)
!6690 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !535, file: !535, line: 304, type: !588, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6691)
!6691 = !{!6692}
!6692 = !DILocalVariable(name: "dev", arg: 1, scope: !6690, file: !535, line: 304, type: !564)
!6693 = !DILocation(line: 0, scope: !6690)
!6694 = !DILocation(line: 306, column: 2, scope: !6690)
!6695 = !DILocation(line: 307, column: 1, scope: !6690)
!6696 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !535, file: !535, line: 299, type: !588, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6697)
!6697 = !{!6698}
!6698 = !DILocalVariable(name: "dev", arg: 1, scope: !6696, file: !535, line: 299, type: !564)
!6699 = !DILocation(line: 0, scope: !6696)
!6700 = !DILocation(line: 301, column: 2, scope: !6696)
!6701 = !DILocation(line: 302, column: 1, scope: !6696)
!6702 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !535, file: !535, line: 294, type: !588, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6703)
!6703 = !{!6704}
!6704 = !DILocalVariable(name: "dev", arg: 1, scope: !6702, file: !535, line: 294, type: !564)
!6705 = !DILocation(line: 0, scope: !6702)
!6706 = !DILocation(line: 296, column: 2, scope: !6702)
!6707 = !DILocation(line: 297, column: 1, scope: !6702)
!6708 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !535, file: !535, line: 397, type: !588, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6709)
!6709 = !{!6710}
!6710 = !DILocalVariable(name: "dev", arg: 1, scope: !6708, file: !535, line: 397, type: !564)
!6711 = !DILocation(line: 0, scope: !6708)
!6712 = !DILocation(line: 399, column: 2, scope: !6708)
!6713 = !DILocation(line: 400, column: 1, scope: !6708)
!6714 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !535, file: !535, line: 392, type: !588, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6715)
!6715 = !{!6716}
!6716 = !DILocalVariable(name: "dev", arg: 1, scope: !6714, file: !535, line: 392, type: !564)
!6717 = !DILocation(line: 0, scope: !6714)
!6718 = !DILocation(line: 394, column: 2, scope: !6714)
!6719 = !DILocation(line: 395, column: 1, scope: !6714)
!6720 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !535, file: !535, line: 289, type: !588, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6721)
!6721 = !{!6722}
!6722 = !DILocalVariable(name: "dev", arg: 1, scope: !6720, file: !535, line: 289, type: !564)
!6723 = !DILocation(line: 0, scope: !6720)
!6724 = !DILocation(line: 291, column: 2, scope: !6720)
!6725 = !DILocation(line: 292, column: 1, scope: !6720)
!6726 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !535, file: !535, line: 387, type: !588, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6727)
!6727 = !{!6728}
!6728 = !DILocalVariable(name: "dev", arg: 1, scope: !6726, file: !535, line: 387, type: !564)
!6729 = !DILocation(line: 0, scope: !6726)
!6730 = !DILocation(line: 389, column: 2, scope: !6726)
!6731 = !DILocation(line: 390, column: 1, scope: !6726)
!6732 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !535, file: !535, line: 382, type: !588, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6733)
!6733 = !{!6734}
!6734 = !DILocalVariable(name: "dev", arg: 1, scope: !6732, file: !535, line: 382, type: !564)
!6735 = !DILocation(line: 0, scope: !6732)
!6736 = !DILocation(line: 384, column: 2, scope: !6732)
!6737 = !DILocation(line: 385, column: 1, scope: !6732)
!6738 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !535, file: !535, line: 373, type: !588, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6739)
!6739 = !{!6740}
!6740 = !DILocalVariable(name: "dev", arg: 1, scope: !6738, file: !535, line: 373, type: !564)
!6741 = !DILocation(line: 0, scope: !6738)
!6742 = !DILocation(line: 375, column: 2, scope: !6738)
!6743 = !DILocation(line: 376, column: 1, scope: !6738)
!6744 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !535, file: !535, line: 284, type: !588, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6745)
!6745 = !{!6746}
!6746 = !DILocalVariable(name: "dev", arg: 1, scope: !6744, file: !535, line: 284, type: !564)
!6747 = !DILocation(line: 0, scope: !6744)
!6748 = !DILocation(line: 286, column: 2, scope: !6744)
!6749 = !DILocation(line: 287, column: 1, scope: !6744)
!6750 = distinct !DISubprogram(name: "stm32_exti_init", scope: !535, file: !535, line: 416, type: !562, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6751)
!6751 = !{!6752}
!6752 = !DILocalVariable(name: "dev", arg: 1, scope: !6750, file: !535, line: 416, type: !564)
!6753 = !DILocation(line: 0, scope: !6750)
!6754 = !DILocation(line: 418, column: 2, scope: !6750)
!6755 = !DILocation(line: 420, column: 2, scope: !6750)
!6756 = !DILocation(line: 0, scope: !587)
!6757 = !DILocation(line: 493, column: 2, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !587, file: !535, line: 493, column: 2)
!6759 = !DILocation(line: 497, column: 2, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !587, file: !535, line: 497, column: 2)
!6761 = !DILocation(line: 507, column: 2, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !587, file: !535, line: 507, column: 2)
!6763 = !DILocation(line: 512, column: 2, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !587, file: !535, line: 512, column: 2)
!6765 = !DILocation(line: 516, column: 2, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !587, file: !535, line: 516, column: 2)
!6767 = !DILocation(line: 523, column: 2, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !587, file: !535, line: 523, column: 2)
!6769 = !DILocation(line: 527, column: 2, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !587, file: !535, line: 527, column: 2)
!6771 = !DILocation(line: 581, column: 2, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !587, file: !535, line: 581, column: 2)
!6773 = !DILocation(line: 586, column: 2, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !587, file: !535, line: 586, column: 2)
!6775 = !DILocation(line: 591, column: 2, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !587, file: !535, line: 591, column: 2)
!6777 = !DILocation(line: 595, column: 2, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !587, file: !535, line: 595, column: 2)
!6779 = !DILocation(line: 607, column: 1, scope: !587)
!6780 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !535, file: !535, line: 112, type: !6666, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6781)
!6781 = !{!6782, !6783}
!6782 = !DILocalVariable(name: "line", arg: 1, scope: !6780, file: !535, line: 112, type: !103)
!6783 = !DILocalVariable(name: "irqnum", scope: !6780, file: !535, line: 114, type: !103)
!6784 = !DILocation(line: 0, scope: !6780)
!6785 = !DILocation(line: 121, column: 11, scope: !6780)
!6786 = !DILocation(line: 130, column: 26, scope: !6780)
!6787 = !DILocation(line: 130, column: 2, scope: !6780)
!6788 = !DILocation(line: 134, column: 2, scope: !6780)
!6789 = !DILocation(line: 135, column: 1, scope: !6780)
!6790 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !6677, file: !6677, line: 268, type: !5112, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6791)
!6791 = !{!6792}
!6792 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6790, file: !6677, line: 268, type: !121)
!6793 = !DILocation(line: 0, scope: !6790)
!6794 = !DILocation(line: 270, column: 3, scope: !6790)
!6795 = !DILocation(line: 271, column: 1, scope: !6790)
!6796 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !535, file: !535, line: 137, type: !6666, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6797)
!6797 = !{!6798}
!6798 = !DILocalVariable(name: "line", arg: 1, scope: !6796, file: !535, line: 137, type: !103)
!6799 = !DILocation(line: 0, scope: !6796)
!6800 = !DILocation(line: 141, column: 11, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6796, file: !535, line: 141, column: 6)
!6802 = !DILocation(line: 141, column: 6, scope: !6796)
!6803 = !DILocation(line: 145, column: 28, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6801, file: !535, line: 141, column: 17)
!6805 = !DILocation(line: 145, column: 3, scope: !6804)
!6806 = !DILocation(line: 147, column: 2, scope: !6804)
!6807 = !DILocation(line: 151, column: 1, scope: !6796)
!6808 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !6677, file: !6677, line: 309, type: !5112, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6809)
!6809 = !{!6810}
!6810 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6808, file: !6677, line: 309, type: !121)
!6811 = !DILocation(line: 0, scope: !6808)
!6812 = !DILocation(line: 311, column: 3, scope: !6808)
!6813 = !DILocation(line: 312, column: 1, scope: !6808)
!6814 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !535, file: !535, line: 202, type: !6815, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6817)
!6815 = !DISubroutineType(types: !6816)
!6816 = !{null, !103, !103}
!6817 = !{!6818, !6819}
!6818 = !DILocalVariable(name: "line", arg: 1, scope: !6814, file: !535, line: 202, type: !103)
!6819 = !DILocalVariable(name: "trigger", arg: 2, scope: !6814, file: !535, line: 202, type: !103)
!6820 = !DILocation(line: 0, scope: !6814)
!6821 = !DILocation(line: 211, column: 2, scope: !6814)
!6822 = !DILocation(line: 213, column: 36, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6814, file: !535, line: 211, column: 19)
!6824 = !DILocation(line: 213, column: 3, scope: !6823)
!6825 = !DILocation(line: 214, column: 3, scope: !6823)
!6826 = !DILocation(line: 215, column: 3, scope: !6823)
!6827 = !DILocation(line: 217, column: 35, scope: !6823)
!6828 = !DILocation(line: 217, column: 3, scope: !6823)
!6829 = !DILocation(line: 218, column: 3, scope: !6823)
!6830 = !DILocation(line: 219, column: 3, scope: !6823)
!6831 = !DILocation(line: 221, column: 36, scope: !6823)
!6832 = !DILocation(line: 221, column: 3, scope: !6823)
!6833 = !DILocation(line: 222, column: 3, scope: !6823)
!6834 = !DILocation(line: 223, column: 3, scope: !6823)
!6835 = !DILocation(line: 225, column: 35, scope: !6823)
!6836 = !DILocation(line: 225, column: 3, scope: !6823)
!6837 = !DILocation(line: 226, column: 3, scope: !6823)
!6838 = !DILocation(line: 227, column: 3, scope: !6823)
!6839 = !DILocation(line: 232, column: 1, scope: !6814)
!6840 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !6677, file: !6677, line: 573, type: !5112, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6841)
!6841 = !{!6842}
!6842 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6840, file: !6677, line: 573, type: !121)
!6843 = !DILocation(line: 0, scope: !6840)
!6844 = !DILocation(line: 575, column: 3, scope: !6840)
!6845 = !DILocation(line: 577, column: 1, scope: !6840)
!6846 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !6677, file: !6677, line: 703, type: !5112, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6847)
!6847 = !{!6848}
!6848 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6846, file: !6677, line: 703, type: !121)
!6849 = !DILocation(line: 0, scope: !6846)
!6850 = !DILocation(line: 705, column: 3, scope: !6846)
!6851 = !DILocation(line: 706, column: 1, scope: !6846)
!6852 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !6677, file: !6677, line: 529, type: !5112, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6853)
!6853 = !{!6854}
!6854 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6852, file: !6677, line: 529, type: !121)
!6855 = !DILocation(line: 0, scope: !6852)
!6856 = !DILocation(line: 531, column: 3, scope: !6852)
!6857 = !DILocation(line: 533, column: 1, scope: !6852)
!6858 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !6677, file: !6677, line: 661, type: !5112, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6859)
!6859 = !{!6860}
!6860 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6858, file: !6677, line: 661, type: !121)
!6861 = !DILocation(line: 0, scope: !6858)
!6862 = !DILocation(line: 663, column: 3, scope: !6858)
!6863 = !DILocation(line: 664, column: 1, scope: !6858)
!6864 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !535, file: !535, line: 433, type: !6865, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6867)
!6865 = !DISubroutineType(types: !6866)
!6866 = !{!103, !103, !575, !102}
!6867 = !{!6868, !6869, !6870, !6871, !6873}
!6868 = !DILocalVariable(name: "line", arg: 1, scope: !6864, file: !535, line: 433, type: !103)
!6869 = !DILocalVariable(name: "cb", arg: 2, scope: !6864, file: !535, line: 433, type: !575)
!6870 = !DILocalVariable(name: "arg", arg: 3, scope: !6864, file: !535, line: 433, type: !102)
!6871 = !DILocalVariable(name: "dev", scope: !6864, file: !535, line: 435, type: !6872)
!6872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !564)
!6873 = !DILocalVariable(name: "data", scope: !6864, file: !535, line: 436, type: !6631)
!6874 = !DILocation(line: 0, scope: !6864)
!6875 = !DILocation(line: 438, column: 21, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6864, file: !535, line: 438, column: 6)
!6877 = !DILocation(line: 438, column: 6, scope: !6876)
!6878 = !DILocation(line: 438, column: 6, scope: !6864)
!6879 = !DILocation(line: 442, column: 20, scope: !6864)
!6880 = !DILocation(line: 443, column: 17, scope: !6864)
!6881 = !DILocation(line: 443, column: 22, scope: !6864)
!6882 = !DILocation(line: 445, column: 2, scope: !6864)
!6883 = !DILocation(line: 446, column: 1, scope: !6864)
!6884 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !535, file: !535, line: 448, type: !6666, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6885)
!6885 = !{!6886, !6887, !6888}
!6886 = !DILocalVariable(name: "line", arg: 1, scope: !6884, file: !535, line: 448, type: !103)
!6887 = !DILocalVariable(name: "dev", scope: !6884, file: !535, line: 450, type: !6872)
!6888 = !DILocalVariable(name: "data", scope: !6884, file: !535, line: 451, type: !6631)
!6889 = !DILocation(line: 0, scope: !6884)
!6890 = !DILocation(line: 453, column: 17, scope: !6884)
!6891 = !DILocation(line: 453, column: 20, scope: !6884)
!6892 = !DILocation(line: 454, column: 17, scope: !6884)
!6893 = !DILocation(line: 454, column: 22, scope: !6884)
!6894 = !DILocation(line: 455, column: 1, scope: !6884)
!6895 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !727, file: !727, line: 183, type: !765, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6896)
!6896 = !{!6897, !6898, !6899, !6900, !6901}
!6897 = !DILocalVariable(name: "dev", arg: 1, scope: !6895, file: !727, line: 183, type: !756)
!6898 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6895, file: !727, line: 184, type: !767)
!6899 = !DILocalVariable(name: "pclken", scope: !6895, file: !727, line: 186, type: !717)
!6900 = !DILocalVariable(name: "reg", scope: !6895, file: !727, line: 187, type: !1310)
!6901 = !DILocalVariable(name: "reg_val", scope: !6895, file: !727, line: 188, type: !121)
!6902 = !DILocation(line: 0, scope: !6895)
!6903 = !DILocation(line: 192, column: 6, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6895, file: !727, line: 192, column: 6)
!6905 = !DILocation(line: 192, column: 6, scope: !6895)
!6906 = !DILocation(line: 197, column: 52, scope: !6895)
!6907 = !DILocation(line: 197, column: 8, scope: !6895)
!6908 = !DILocation(line: 198, column: 12, scope: !6895)
!6909 = !DILocation(line: 199, column: 21, scope: !6895)
!6910 = !DILocation(line: 199, column: 10, scope: !6895)
!6911 = !DILocation(line: 200, column: 7, scope: !6895)
!6912 = !DILocation(line: 202, column: 2, scope: !6895)
!6913 = !DILocation(line: 203, column: 1, scope: !6895)
!6914 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !727, file: !727, line: 205, type: !765, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6915)
!6915 = !{!6916, !6917, !6918, !6919, !6920}
!6916 = !DILocalVariable(name: "dev", arg: 1, scope: !6914, file: !727, line: 205, type: !756)
!6917 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6914, file: !727, line: 206, type: !767)
!6918 = !DILocalVariable(name: "pclken", scope: !6914, file: !727, line: 208, type: !717)
!6919 = !DILocalVariable(name: "reg", scope: !6914, file: !727, line: 209, type: !1310)
!6920 = !DILocalVariable(name: "reg_val", scope: !6914, file: !727, line: 210, type: !121)
!6921 = !DILocation(line: 0, scope: !6914)
!6922 = !DILocation(line: 214, column: 6, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6914, file: !727, line: 214, column: 6)
!6924 = !DILocation(line: 214, column: 6, scope: !6914)
!6925 = !DILocation(line: 219, column: 52, scope: !6914)
!6926 = !DILocation(line: 219, column: 8, scope: !6914)
!6927 = !DILocation(line: 220, column: 12, scope: !6914)
!6928 = !DILocation(line: 221, column: 22, scope: !6914)
!6929 = !DILocation(line: 221, column: 13, scope: !6914)
!6930 = !DILocation(line: 221, column: 10, scope: !6914)
!6931 = !DILocation(line: 222, column: 7, scope: !6914)
!6932 = !DILocation(line: 224, column: 2, scope: !6914)
!6933 = !DILocation(line: 225, column: 1, scope: !6914)
!6934 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !727, file: !727, line: 262, type: !781, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6935)
!6935 = !{!6936, !6937, !6938, !6939, !6940, !6941, !6942, !6943}
!6936 = !DILocalVariable(name: "clock", arg: 1, scope: !6934, file: !727, line: 262, type: !756)
!6937 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6934, file: !727, line: 263, type: !767)
!6938 = !DILocalVariable(name: "rate", arg: 3, scope: !6934, file: !727, line: 264, type: !723)
!6939 = !DILocalVariable(name: "pclken", scope: !6934, file: !727, line: 266, type: !717)
!6940 = !DILocalVariable(name: "ahb_clock", scope: !6934, file: !727, line: 273, type: !121)
!6941 = !DILocalVariable(name: "apb1_clock", scope: !6934, file: !727, line: 274, type: !121)
!6942 = !DILocalVariable(name: "apb2_clock", scope: !6934, file: !727, line: 276, type: !121)
!6943 = !DILocalVariable(name: "ahb3_clock", scope: !6934, file: !727, line: 286, type: !121)
!6944 = !DILocation(line: 0, scope: !6934)
!6945 = !DILocation(line: 273, column: 23, scope: !6934)
!6946 = !DILocation(line: 299, column: 18, scope: !6934)
!6947 = !DILocation(line: 299, column: 2, scope: !6934)
!6948 = !DILocation(line: 274, column: 24, scope: !6934)
!6949 = !DILocation(line: 319, column: 3, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6934, file: !727, line: 299, column: 23)
!6951 = !DILocation(line: 276, column: 24, scope: !6934)
!6952 = !DILocation(line: 323, column: 3, scope: !6950)
!6953 = !DILocation(line: 346, column: 33, scope: !6950)
!6954 = !DILocation(line: 346, column: 11, scope: !6950)
!6955 = !DILocation(line: 350, column: 3, scope: !6950)
!6956 = !DILocation(line: 354, column: 33, scope: !6950)
!6957 = !DILocation(line: 354, column: 11, scope: !6950)
!6958 = !DILocation(line: 358, column: 3, scope: !6950)
!6959 = !DILocation(line: 374, column: 3, scope: !6950)
!6960 = !DILocation(line: 379, column: 3, scope: !6950)
!6961 = !DILocation(line: 0, scope: !6950)
!6962 = !DILocation(line: 396, column: 1, scope: !6934)
!6963 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !727, file: !727, line: 227, type: !797, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6964)
!6964 = !{!6965, !6966, !6967, !6968, !6969, !6970, !6971, !6972}
!6965 = !DILocalVariable(name: "dev", arg: 1, scope: !6963, file: !727, line: 227, type: !756)
!6966 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6963, file: !727, line: 228, type: !767)
!6967 = !DILocalVariable(name: "data", arg: 3, scope: !6963, file: !727, line: 229, type: !102)
!6968 = !DILocalVariable(name: "pclken", scope: !6963, file: !727, line: 233, type: !717)
!6969 = !DILocalVariable(name: "reg", scope: !6963, file: !727, line: 234, type: !1310)
!6970 = !DILocalVariable(name: "reg_val", scope: !6963, file: !727, line: 235, type: !121)
!6971 = !DILocalVariable(name: "dt_val", scope: !6963, file: !727, line: 235, type: !121)
!6972 = !DILocalVariable(name: "err", scope: !6963, file: !727, line: 236, type: !103)
!6973 = !DILocation(line: 0, scope: !6963)
!6974 = !DILocation(line: 241, column: 30, scope: !6963)
!6975 = !DILocation(line: 241, column: 8, scope: !6963)
!6976 = !DILocation(line: 242, column: 10, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6963, file: !727, line: 242, column: 6)
!6978 = !DILocation(line: 242, column: 6, scope: !6963)
!6979 = !DILocation(line: 247, column: 11, scope: !6963)
!6980 = !DILocation(line: 248, column: 6, scope: !6963)
!6981 = !DILocation(line: 247, column: 44, scope: !6963)
!6982 = !DILocation(line: 250, column: 6, scope: !6963)
!6983 = !DILocation(line: 249, column: 52, scope: !6963)
!6984 = !DILocation(line: 249, column: 8, scope: !6963)
!6985 = !DILocation(line: 251, column: 12, scope: !6963)
!6986 = !DILocation(line: 252, column: 10, scope: !6963)
!6987 = !DILocation(line: 253, column: 7, scope: !6963)
!6988 = !DILocation(line: 255, column: 2, scope: !6963)
!6989 = !DILocation(line: 260, column: 1, scope: !6963)
!6990 = distinct !DISubprogram(name: "enabled_clock", scope: !727, file: !727, line: 100, type: !6991, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !6993)
!6991 = !DISubroutineType(types: !6992)
!6992 = !{!103, !121}
!6993 = !{!6994, !6995}
!6994 = !DILocalVariable(name: "src_clk", arg: 1, scope: !6990, file: !727, line: 100, type: !121)
!6995 = !DILocalVariable(name: "r", scope: !6990, file: !727, line: 102, type: !103)
!6996 = !DILocation(line: 0, scope: !6990)
!6997 = !DILocation(line: 104, column: 2, scope: !6990)
!6998 = !DILocation(line: 180, column: 2, scope: !6990)
!6999 = !DILocation(line: 181, column: 1, scope: !6990)
!7000 = distinct !DISubprogram(name: "get_bus_clock", scope: !727, file: !727, line: 79, type: !7001, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !7003)
!7001 = !DISubroutineType(types: !7002)
!7002 = !{!121, !121, !121}
!7003 = !{!7004, !7005}
!7004 = !DILocalVariable(name: "clock", arg: 1, scope: !7000, file: !727, line: 79, type: !121)
!7005 = !DILocalVariable(name: "prescaler", arg: 2, scope: !7000, file: !727, line: 79, type: !121)
!7006 = !DILocation(line: 0, scope: !7000)
!7007 = !DILocation(line: 81, column: 15, scope: !7000)
!7008 = !DILocation(line: 81, column: 2, scope: !7000)
!7009 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !727, file: !727, line: 68, type: !7010, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !7012)
!7010 = !DISubroutineType(types: !7011)
!7011 = !{!121, !121, !103, !103, !103}
!7012 = !{!7013, !7014, !7015, !7016}
!7013 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !7009, file: !727, line: 68, type: !121)
!7014 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !7009, file: !727, line: 69, type: !103)
!7015 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !7009, file: !727, line: 70, type: !103)
!7016 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !7009, file: !727, line: 71, type: !103)
!7017 = !DILocation(line: 0, scope: !7009)
!7018 = !DILocation(line: 75, column: 22, scope: !7009)
!7019 = !DILocation(line: 76, column: 13, scope: !7009)
!7020 = !DILocation(line: 75, column: 34, scope: !7009)
!7021 = !DILocation(line: 75, column: 2, scope: !7009)
!7022 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !727, file: !727, line: 641, type: !754, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !7023)
!7023 = !{!7024, !7025, !7026}
!7024 = !DILocalVariable(name: "dev", arg: 1, scope: !7022, file: !727, line: 641, type: !756)
!7025 = !DILocalVariable(name: "old_flash_freq", scope: !7022, file: !727, line: 664, type: !121)
!7026 = !DILocalVariable(name: "new_flash_freq", scope: !7022, file: !727, line: 665, type: !121)
!7027 = !DILocation(line: 0, scope: !7022)
!7028 = !DILocation(line: 646, column: 2, scope: !7022)
!7029 = !DILocation(line: 667, column: 19, scope: !7022)
!7030 = !DILocation(line: 674, column: 21, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7022, file: !727, line: 674, column: 6)
!7032 = !DILocation(line: 674, column: 6, scope: !7022)
!7033 = !DILocation(line: 675, column: 3, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7031, file: !727, line: 674, column: 59)
!7035 = !DILocation(line: 676, column: 2, scope: !7034)
!7036 = !DILocation(line: 680, column: 2, scope: !7022)
!7037 = !DILocation(line: 683, column: 2, scope: !7022)
!7038 = !DILocation(line: 690, column: 3, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7040, file: !727, line: 689, column: 9)
!7040 = distinct !DILexicalBlock(scope: !7022, file: !727, line: 685, column: 6)
!7041 = !DILocation(line: 695, column: 2, scope: !7022)
!7042 = !DILocation(line: 696, column: 2, scope: !7022)
!7043 = !DILocation(line: 696, column: 9, scope: !7022)
!7044 = !DILocation(line: 696, column: 34, scope: !7022)
!7045 = distinct !{!7045, !7042, !7046}
!7046 = !DILocation(line: 697, column: 2, scope: !7022)
!7047 = !DILocation(line: 720, column: 21, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7022, file: !727, line: 720, column: 6)
!7049 = !DILocation(line: 720, column: 6, scope: !7022)
!7050 = !DILocation(line: 721, column: 3, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7048, file: !727, line: 720, column: 60)
!7052 = !DILocation(line: 722, column: 2, scope: !7051)
!7053 = !DILocation(line: 725, column: 18, scope: !7022)
!7054 = !DILocation(line: 728, column: 2, scope: !7022)
!7055 = !DILocation(line: 730, column: 2, scope: !7022)
!7056 = !DILocation(line: 745, column: 2, scope: !7022)
!7057 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !7058, file: !7058, line: 3275, type: !5102, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7058 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7059 = !DILocation(line: 3277, column: 21, scope: !7057)
!7060 = !DILocation(line: 3277, column: 3, scope: !7057)
!7061 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !727, file: !727, line: 507, type: !2909, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7062 = !DILocation(line: 516, column: 4, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !727, line: 515, column: 10)
!7064 = distinct !DILexicalBlock(scope: !7065, file: !727, line: 513, column: 7)
!7065 = distinct !DILexicalBlock(scope: !7066, file: !727, line: 510, column: 37)
!7066 = distinct !DILexicalBlock(scope: !7061, file: !727, line: 510, column: 6)
!7067 = !DILocation(line: 526, column: 3, scope: !7065)
!7068 = !DILocation(line: 527, column: 3, scope: !7065)
!7069 = !DILocation(line: 527, column: 10, scope: !7065)
!7070 = !DILocation(line: 527, column: 31, scope: !7065)
!7071 = distinct !{!7071, !7068, !7072}
!7072 = !DILocation(line: 529, column: 3, scope: !7065)
!7073 = !DILocation(line: 583, column: 3, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !727, line: 577, column: 37)
!7075 = distinct !DILexicalBlock(scope: !7061, file: !727, line: 577, column: 6)
!7076 = !DILocation(line: 584, column: 3, scope: !7074)
!7077 = !DILocation(line: 584, column: 10, scope: !7074)
!7078 = !DILocation(line: 584, column: 31, scope: !7074)
!7079 = distinct !{!7079, !7076, !7080}
!7080 = !DILocation(line: 585, column: 3, scope: !7074)
!7081 = !DILocation(line: 627, column: 1, scope: !7061)
!7082 = distinct !DISubprogram(name: "set_up_plls", scope: !727, file: !727, line: 448, type: !2909, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7083 = !DILocation(line: 460, column: 6, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7082, file: !727, line: 460, column: 6)
!7085 = !DILocation(line: 460, column: 31, scope: !7084)
!7086 = !DILocation(line: 460, column: 6, scope: !7082)
!7087 = !DILocation(line: 461, column: 3, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7084, file: !727, line: 460, column: 67)
!7089 = !DILocation(line: 462, column: 3, scope: !7088)
!7090 = !DILocation(line: 463, column: 2, scope: !7088)
!7091 = !DILocation(line: 464, column: 2, scope: !7082)
!7092 = !DILocation(line: 488, column: 2, scope: !7082)
!7093 = !DILocation(line: 492, column: 2, scope: !7082)
!7094 = !DILocation(line: 496, column: 2, scope: !7082)
!7095 = !DILocation(line: 499, column: 2, scope: !7082)
!7096 = !DILocation(line: 500, column: 2, scope: !7082)
!7097 = !DILocation(line: 500, column: 9, scope: !7082)
!7098 = !DILocation(line: 500, column: 30, scope: !7082)
!7099 = distinct !{!7099, !7096, !7100}
!7100 = !DILocation(line: 502, column: 2, scope: !7082)
!7101 = !DILocation(line: 505, column: 1, scope: !7082)
!7102 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7058, file: !7058, line: 3224, type: !5112, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !7103)
!7103 = !{!7104}
!7104 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7102, file: !7058, line: 3224, type: !121)
!7105 = !DILocation(line: 0, scope: !7102)
!7106 = !DILocation(line: 3226, column: 3, scope: !7102)
!7107 = !DILocation(line: 3227, column: 1, scope: !7102)
!7108 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7058, file: !7058, line: 3188, type: !5112, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !7109)
!7109 = !{!7110}
!7110 = !DILocalVariable(name: "Source", arg: 1, scope: !7108, file: !7058, line: 3188, type: !121)
!7111 = !DILocation(line: 0, scope: !7108)
!7112 = !DILocation(line: 3190, column: 3, scope: !7108)
!7113 = !DILocation(line: 3191, column: 1, scope: !7108)
!7114 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7058, file: !7058, line: 3204, type: !5102, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7115 = !DILocation(line: 3206, column: 21, scope: !7114)
!7116 = !DILocation(line: 3206, column: 3, scope: !7114)
!7117 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7058, file: !7058, line: 3240, type: !5112, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !7118)
!7118 = !{!7119}
!7119 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7117, file: !7058, line: 3240, type: !121)
!7120 = !DILocation(line: 0, scope: !7117)
!7121 = !DILocation(line: 3242, column: 3, scope: !7117)
!7122 = !DILocation(line: 3243, column: 1, scope: !7117)
!7123 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7058, file: !7058, line: 3256, type: !5112, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !7124)
!7124 = !{!7125}
!7125 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7123, file: !7058, line: 3256, type: !121)
!7126 = !DILocation(line: 0, scope: !7123)
!7127 = !DILocation(line: 3258, column: 3, scope: !7123)
!7128 = !DILocation(line: 3259, column: 1, scope: !7123)
!7129 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !727, file: !727, line: 409, type: !2909, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7130 = !DILocation(line: 412, column: 6, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7129, file: !727, line: 412, column: 6)
!7132 = !DILocation(line: 412, column: 27, scope: !7131)
!7133 = !DILocation(line: 412, column: 6, scope: !7129)
!7134 = !DILocation(line: 414, column: 3, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7131, file: !727, line: 412, column: 33)
!7136 = !DILocation(line: 415, column: 3, scope: !7135)
!7137 = !DILocation(line: 415, column: 10, scope: !7135)
!7138 = !DILocation(line: 415, column: 31, scope: !7135)
!7139 = distinct !{!7139, !7136, !7140}
!7140 = !DILocation(line: 417, column: 3, scope: !7135)
!7141 = !DILocation(line: 421, column: 2, scope: !7129)
!7142 = !DILocation(line: 422, column: 2, scope: !7129)
!7143 = !DILocation(line: 422, column: 9, scope: !7129)
!7144 = !DILocation(line: 422, column: 34, scope: !7129)
!7145 = distinct !{!7145, !7142, !7146}
!7146 = !DILocation(line: 423, column: 2, scope: !7129)
!7147 = !DILocation(line: 424, column: 1, scope: !7129)
!7148 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !7058, file: !7058, line: 4195, type: !2909, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7149 = !DILocation(line: 4197, column: 3, scope: !7148)
!7150 = !DILocation(line: 4198, column: 1, scope: !7148)
!7151 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7058, file: !7058, line: 4184, type: !2909, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7152 = !DILocation(line: 4186, column: 3, scope: !7151)
!7153 = !DILocation(line: 4187, column: 1, scope: !7151)
!7154 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7058, file: !7058, line: 4205, type: !5102, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7155 = !DILocation(line: 4207, column: 11, scope: !7154)
!7156 = !DILocation(line: 4207, column: 44, scope: !7154)
!7157 = !DILocation(line: 4207, column: 3, scope: !7154)
!7158 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7058, file: !7058, line: 3007, type: !5102, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7159 = !DILocation(line: 3009, column: 11, scope: !7158)
!7160 = !DILocation(line: 3009, column: 44, scope: !7158)
!7161 = !DILocation(line: 3009, column: 3, scope: !7158)
!7162 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7058, file: !7058, line: 2987, type: !2909, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7163 = !DILocation(line: 2989, column: 3, scope: !7162)
!7164 = !DILocation(line: 2990, column: 1, scope: !7162)
!7165 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7058, file: !7058, line: 2939, type: !2909, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7166 = !DILocation(line: 2941, column: 3, scope: !7165)
!7167 = !DILocation(line: 2942, column: 1, scope: !7165)
!7168 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7058, file: !7058, line: 2949, type: !2909, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7169 = !DILocation(line: 2951, column: 3, scope: !7168)
!7170 = !DILocation(line: 2952, column: 1, scope: !7168)
!7171 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7058, file: !7058, line: 2969, type: !5102, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7172 = !DILocation(line: 2971, column: 11, scope: !7171)
!7173 = !DILocation(line: 2971, column: 44, scope: !7171)
!7174 = !DILocation(line: 2971, column: 3, scope: !7171)
!7175 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !7058, file: !7058, line: 3143, type: !2909, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7176 = !DILocation(line: 3145, column: 3, scope: !7175)
!7177 = !DILocation(line: 3146, column: 1, scope: !7175)
!7178 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !7058, file: !7058, line: 3163, type: !5102, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !662, retainedNodes: !322)
!7179 = !DILocation(line: 3165, column: 11, scope: !7178)
!7180 = !DILocation(line: 3165, column: 46, scope: !7178)
!7181 = !DILocation(line: 3165, column: 3, scope: !7178)
!7182 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !7183, file: !7183, line: 40, type: !5102, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !322)
!7183 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7184 = !DILocation(line: 45, column: 3, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7186, file: !7183, line: 44, column: 44)
!7186 = distinct !DILexicalBlock(scope: !7187, file: !7183, line: 44, column: 13)
!7187 = distinct !DILexicalBlock(scope: !7182, file: !7183, line: 42, column: 6)
!7188 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !7183, file: !7183, line: 56, type: !2909, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !322)
!7189 = !DILocation(line: 58, column: 2, scope: !7188)
!7190 = !DILocation(line: 62, column: 1, scope: !7188)
!7191 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7058, file: !7058, line: 4304, type: !7192, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7194)
!7192 = !DISubroutineType(types: !7193)
!7193 = !{null, !121, !121, !121, !121}
!7194 = !{!7195, !7196, !7197, !7198}
!7195 = !DILocalVariable(name: "Source", arg: 1, scope: !7191, file: !7058, line: 4304, type: !121)
!7196 = !DILocalVariable(name: "PLLM", arg: 2, scope: !7191, file: !7058, line: 4304, type: !121)
!7197 = !DILocalVariable(name: "PLLN", arg: 3, scope: !7191, file: !7058, line: 4304, type: !121)
!7198 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !7191, file: !7058, line: 4304, type: !121)
!7199 = !DILocation(line: 0, scope: !7191)
!7200 = !DILocation(line: 4306, column: 3, scope: !7191)
!7201 = !DILocation(line: 4308, column: 3, scope: !7191)
!7202 = !DILocation(line: 4310, column: 3, scope: !7191)
!7203 = !DILocation(line: 4312, column: 1, scope: !7191)
!7204 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !7183, file: !7183, line: 69, type: !2909, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !322)
!7205 = !DILocation(line: 72, column: 2, scope: !7204)
!7206 = !DILocation(line: 73, column: 1, scope: !7204)
!7207 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !7208, file: !7208, line: 1185, type: !5112, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2696, retainedNodes: !7209)
!7208 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7209 = !{!7210, !7211}
!7210 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7207, file: !7208, line: 1185, type: !121)
!7211 = !DILocalVariable(name: "tmpreg", scope: !7207, file: !7208, line: 1187, type: !120)
!7212 = !DILocation(line: 0, scope: !7207)
!7213 = !DILocation(line: 1187, column: 3, scope: !7207)
!7214 = !DILocation(line: 1187, column: 17, scope: !7207)
!7215 = !DILocation(line: 1188, column: 3, scope: !7207)
!7216 = !DILocation(line: 1190, column: 12, scope: !7207)
!7217 = !DILocation(line: 1190, column: 10, scope: !7207)
!7218 = !DILocation(line: 1191, column: 9, scope: !7207)
!7219 = !DILocation(line: 1192, column: 1, scope: !7207)
!7220 = distinct !DISubprogram(name: "uart_console_init", scope: !858, file: !858, line: 588, type: !835, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7221)
!7221 = !{!7222}
!7222 = !DILocalVariable(name: "arg", arg: 1, scope: !7220, file: !858, line: 588, type: !813)
!7223 = !DILocation(line: 0, scope: !7220)
!7224 = !DILocation(line: 593, column: 7, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7220, file: !858, line: 593, column: 6)
!7226 = !DILocation(line: 593, column: 6, scope: !7220)
!7227 = !DILocation(line: 597, column: 2, scope: !7220)
!7228 = !DILocation(line: 599, column: 2, scope: !7220)
!7229 = !DILocation(line: 600, column: 1, scope: !7220)
!7230 = distinct !DISubprogram(name: "device_is_ready", scope: !3042, file: !3042, line: 47, type: !7231, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7233)
!7231 = !DISubroutineType(types: !7232)
!7232 = !{!157, !813}
!7233 = !{!7234}
!7234 = !DILocalVariable(name: "dev", arg: 1, scope: !7230, file: !3042, line: 47, type: !813)
!7235 = !DILocation(line: 0, scope: !7230)
!7236 = !DILocation(line: 55, column: 2, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7230, file: !3042, line: 55, column: 2)
!7238 = !{i64 2155286372}
!7239 = !DILocation(line: 56, column: 9, scope: !7230)
!7240 = !DILocation(line: 56, column: 2, scope: !7230)
!7241 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !858, file: !858, line: 573, type: !2909, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !322)
!7242 = !DILocation(line: 576, column: 2, scope: !7241)
!7243 = !DILocation(line: 579, column: 2, scope: !7241)
!7244 = !DILocation(line: 581, column: 1, scope: !7241)
!7245 = distinct !DISubprogram(name: "console_out", scope: !858, file: !858, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7246)
!7246 = !{!7247}
!7247 = !DILocalVariable(name: "c", arg: 1, scope: !7245, file: !858, line: 77, type: !103)
!7248 = !DILocation(line: 0, scope: !7245)
!7249 = !DILocation(line: 89, column: 11, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7245, file: !858, line: 89, column: 6)
!7251 = !DILocation(line: 89, column: 6, scope: !7245)
!7252 = !DILocation(line: 90, column: 3, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7250, file: !858, line: 89, column: 17)
!7254 = !DILocation(line: 91, column: 2, scope: !7253)
!7255 = !DILocation(line: 92, column: 34, scope: !7245)
!7256 = !DILocation(line: 92, column: 2, scope: !7245)
!7257 = !DILocation(line: 94, column: 2, scope: !7245)
!7258 = distinct !DISubprogram(name: "uart_poll_out", scope: !7259, file: !7259, line: 95, type: !831, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7260)
!7259 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/basic/blinky")
!7260 = !{!7261, !7262}
!7261 = !DILocalVariable(name: "dev", arg: 1, scope: !7258, file: !7259, line: 95, type: !813)
!7262 = !DILocalVariable(name: "out_char", arg: 2, scope: !7258, file: !7259, line: 95, type: !155)
!7263 = !DILocation(line: 0, scope: !7258)
!7264 = !DILocation(line: 105, column: 2, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7258, file: !7259, line: 105, column: 2)
!7266 = !{i64 2155369763}
!7267 = !DILocation(line: 106, column: 2, scope: !7258)
!7268 = !DILocation(line: 107, column: 1, scope: !7258)
!7269 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !807, file: !807, line: 574, type: !831, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7270)
!7270 = !{!7271, !7272, !7273}
!7271 = !DILocalVariable(name: "dev", arg: 1, scope: !7269, file: !807, line: 574, type: !813)
!7272 = !DILocalVariable(name: "out_char", arg: 2, scope: !7269, file: !807, line: 575, type: !155)
!7273 = !DILocalVariable(name: "api", scope: !7269, file: !807, line: 577, type: !804)
!7274 = !DILocation(line: 0, scope: !7269)
!7275 = !DILocation(line: 578, column: 40, scope: !7269)
!7276 = !DILocation(line: 580, column: 7, scope: !7269)
!7277 = !DILocation(line: 580, column: 2, scope: !7269)
!7278 = !DILocation(line: 581, column: 1, scope: !7269)
!7279 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !7231, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7280)
!7280 = !{!7281}
!7281 = !DILocalVariable(name: "dev", arg: 1, scope: !7279, file: !141, line: 730, type: !813)
!7282 = !DILocation(line: 0, scope: !7279)
!7283 = !DILocation(line: 732, column: 9, scope: !7279)
!7284 = !DILocation(line: 732, column: 2, scope: !7279)
!7285 = distinct !DISubprogram(name: "uart_register_input", scope: !858, file: !858, line: 560, type: !7286, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !801, retainedNodes: !7331)
!7286 = !DISubroutineType(types: !7287)
!7287 = !{null, !7288, !7288, !7328}
!7288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7289, size: 32)
!7289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !307, line: 2208, size: 128, elements: !7290)
!7290 = !{!7291}
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7289, file: !307, line: 2209, baseType: !7292, size: 128)
!7292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !307, line: 1709, size: 128, elements: !7293)
!7293 = !{!7294, !7307, !7309}
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7292, file: !307, line: 1710, baseType: !7295, size: 64)
!7295 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7296, line: 46, baseType: !7297)
!7296 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7296, line: 41, size: 64, elements: !7298)
!7298 = !{!7299, !7306}
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7297, file: !7296, line: 42, baseType: !7300, size: 32)
!7300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7301, size: 32)
!7301 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7296, line: 39, baseType: !7302)
!7302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7296, line: 35, size: 32, elements: !7303)
!7303 = !{!7304}
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7302, file: !7296, line: 36, baseType: !7305, size: 32)
!7305 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7296, line: 32, baseType: !121)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7297, file: !7296, line: 43, baseType: !7300, size: 32, offset: 32)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7292, file: !307, line: 1711, baseType: !7308, offset: 64)
!7308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7292, file: !307, line: 1712, baseType: !7310, size: 64, offset: 64)
!7310 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !7311)
!7311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !7312)
!7312 = !{!7313}
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7311, file: !247, line: 232, baseType: !7314, size: 64)
!7314 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !7315)
!7315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !7316)
!7316 = !{!7317, !7323}
!7317 = !DIDerivedType(tag: DW_TAG_member, scope: !7315, file: !221, line: 38, baseType: !7318, size: 32)
!7318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7315, file: !221, line: 38, size: 32, elements: !7319)
!7319 = !{!7320, !7322}
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7318, file: !221, line: 39, baseType: !7321, size: 32)
!7321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7315, size: 32)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7318, file: !221, line: 40, baseType: !7321, size: 32)
!7323 = !DIDerivedType(tag: DW_TAG_member, scope: !7315, file: !221, line: 42, baseType: !7324, size: 32, offset: 32)
!7324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7315, file: !221, line: 42, size: 32, elements: !7325)
!7325 = !{!7326, !7327}
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7324, file: !221, line: 43, baseType: !7321, size: 32)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7324, file: !221, line: 44, baseType: !7321, size: 32)
!7328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7329, size: 32)
!7329 = !DISubroutineType(types: !7330)
!7330 = !{!154, !995, !154}
!7331 = !{!7332, !7333, !7334}
!7332 = !DILocalVariable(name: "avail", arg: 1, scope: !7285, file: !858, line: 560, type: !7288)
!7333 = !DILocalVariable(name: "lines", arg: 2, scope: !7285, file: !858, line: 560, type: !7288)
!7334 = !DILocalVariable(name: "completion", arg: 3, scope: !7285, file: !858, line: 561, type: !7328)
!7335 = !DILocation(line: 0, scope: !7285)
!7336 = !DILocation(line: 566, column: 1, scope: !7285)
!7337 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1039, file: !1039, line: 523, type: !894, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7338)
!7338 = !{!7339, !7340, !7341, !7342, !7343}
!7339 = !DILocalVariable(name: "dev", arg: 1, scope: !7337, file: !1039, line: 523, type: !896)
!7340 = !DILocalVariable(name: "pin", arg: 2, scope: !7337, file: !1039, line: 524, type: !911)
!7341 = !DILocalVariable(name: "flags", arg: 3, scope: !7337, file: !1039, line: 524, type: !912)
!7342 = !DILocalVariable(name: "err", scope: !7337, file: !1039, line: 526, type: !103)
!7343 = !DILocalVariable(name: "pincfg", scope: !7337, file: !1039, line: 527, type: !103)
!7344 = !DILocation(line: 0, scope: !7337)
!7345 = !DILocation(line: 527, column: 2, scope: !7337)
!7346 = !DILocation(line: 532, column: 8, scope: !7337)
!7347 = !DILocation(line: 533, column: 10, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7337, file: !1039, line: 533, column: 6)
!7349 = !DILocation(line: 533, column: 6, scope: !7337)
!7350 = !DILocation(line: 543, column: 13, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7337, file: !1039, line: 543, column: 6)
!7352 = !DILocation(line: 543, column: 28, scope: !7351)
!7353 = !DILocation(line: 543, column: 6, scope: !7337)
!7354 = !DILocation(line: 544, column: 14, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7356, file: !1039, line: 544, column: 7)
!7356 = distinct !DILexicalBlock(scope: !7351, file: !1039, line: 543, column: 34)
!7357 = !DILocation(line: 544, column: 39, scope: !7355)
!7358 = !DILocation(line: 544, column: 7, scope: !7356)
!7359 = !DILocation(line: 545, column: 38, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7355, file: !1039, line: 544, column: 45)
!7361 = !DILocation(line: 545, column: 4, scope: !7360)
!7362 = !DILocation(line: 546, column: 3, scope: !7360)
!7363 = !DILocation(line: 546, column: 21, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7355, file: !1039, line: 546, column: 14)
!7365 = !DILocation(line: 546, column: 45, scope: !7364)
!7366 = !DILocation(line: 546, column: 14, scope: !7355)
!7367 = !DILocation(line: 547, column: 40, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7364, file: !1039, line: 546, column: 51)
!7369 = !DILocation(line: 547, column: 4, scope: !7368)
!7370 = !DILocation(line: 548, column: 3, scope: !7368)
!7371 = !DILocation(line: 551, column: 32, scope: !7337)
!7372 = !DILocation(line: 551, column: 37, scope: !7337)
!7373 = !DILocation(line: 551, column: 2, scope: !7337)
!7374 = !DILocation(line: 554, column: 6, scope: !7337)
!7375 = !DILocation(line: 562, column: 1, scope: !7337)
!7376 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1039, file: !1039, line: 410, type: !7377, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7379)
!7377 = !DISubroutineType(types: !7378)
!7378 = !{!103, !896, !723}
!7379 = !{!7380, !7381, !7382, !7384}
!7380 = !DILocalVariable(name: "dev", arg: 1, scope: !7376, file: !1039, line: 410, type: !896)
!7381 = !DILocalVariable(name: "value", arg: 2, scope: !7376, file: !1039, line: 410, type: !723)
!7382 = !DILocalVariable(name: "cfg", scope: !7376, file: !1039, line: 412, type: !7383)
!7383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 32)
!7384 = !DILocalVariable(name: "gpio", scope: !7376, file: !1039, line: 413, type: !969)
!7385 = !DILocation(line: 0, scope: !7376)
!7386 = !DILocation(line: 412, column: 45, scope: !7376)
!7387 = !DILocation(line: 413, column: 44, scope: !7376)
!7388 = !DILocation(line: 415, column: 11, scope: !7376)
!7389 = !DILocation(line: 415, column: 9, scope: !7376)
!7390 = !DILocation(line: 417, column: 2, scope: !7376)
!7391 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1039, file: !1039, line: 420, type: !921, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7392)
!7392 = !{!7393, !7394, !7395, !7396, !7397, !7398}
!7393 = !DILocalVariable(name: "dev", arg: 1, scope: !7391, file: !1039, line: 420, type: !896)
!7394 = !DILocalVariable(name: "mask", arg: 2, scope: !7391, file: !1039, line: 421, type: !923)
!7395 = !DILocalVariable(name: "value", arg: 3, scope: !7391, file: !1039, line: 422, type: !918)
!7396 = !DILocalVariable(name: "cfg", scope: !7391, file: !1039, line: 424, type: !7383)
!7397 = !DILocalVariable(name: "gpio", scope: !7391, file: !1039, line: 425, type: !969)
!7398 = !DILocalVariable(name: "port_value", scope: !7391, file: !1039, line: 426, type: !121)
!7399 = !DILocation(line: 0, scope: !7391)
!7400 = !DILocation(line: 424, column: 45, scope: !7391)
!7401 = !DILocation(line: 425, column: 44, scope: !7391)
!7402 = !DILocation(line: 430, column: 15, scope: !7391)
!7403 = !DILocation(line: 431, column: 46, scope: !7391)
!7404 = !DILocation(line: 431, column: 44, scope: !7391)
!7405 = !DILocation(line: 431, column: 61, scope: !7391)
!7406 = !DILocation(line: 431, column: 53, scope: !7391)
!7407 = !DILocation(line: 431, column: 2, scope: !7391)
!7408 = !DILocation(line: 435, column: 2, scope: !7391)
!7409 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1039, file: !1039, line: 438, type: !926, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7410)
!7410 = !{!7411, !7412, !7413, !7414}
!7411 = !DILocalVariable(name: "dev", arg: 1, scope: !7409, file: !1039, line: 438, type: !896)
!7412 = !DILocalVariable(name: "pins", arg: 2, scope: !7409, file: !1039, line: 439, type: !923)
!7413 = !DILocalVariable(name: "cfg", scope: !7409, file: !1039, line: 441, type: !7383)
!7414 = !DILocalVariable(name: "gpio", scope: !7409, file: !1039, line: 442, type: !969)
!7415 = !DILocation(line: 0, scope: !7409)
!7416 = !DILocation(line: 441, column: 45, scope: !7409)
!7417 = !DILocation(line: 442, column: 44, scope: !7409)
!7418 = !DILocation(line: 448, column: 2, scope: !7409)
!7419 = !DILocation(line: 450, column: 2, scope: !7409)
!7420 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1039, file: !1039, line: 453, type: !926, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7421)
!7421 = !{!7422, !7423, !7424, !7425}
!7422 = !DILocalVariable(name: "dev", arg: 1, scope: !7420, file: !1039, line: 453, type: !896)
!7423 = !DILocalVariable(name: "pins", arg: 2, scope: !7420, file: !1039, line: 454, type: !923)
!7424 = !DILocalVariable(name: "cfg", scope: !7420, file: !1039, line: 456, type: !7383)
!7425 = !DILocalVariable(name: "gpio", scope: !7420, file: !1039, line: 457, type: !969)
!7426 = !DILocation(line: 0, scope: !7420)
!7427 = !DILocation(line: 456, column: 45, scope: !7420)
!7428 = !DILocation(line: 457, column: 44, scope: !7420)
!7429 = !DILocation(line: 467, column: 2, scope: !7420)
!7430 = !DILocation(line: 470, column: 2, scope: !7420)
!7431 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1039, file: !1039, line: 473, type: !926, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7432)
!7432 = !{!7433, !7434, !7435, !7436}
!7433 = !DILocalVariable(name: "dev", arg: 1, scope: !7431, file: !1039, line: 473, type: !896)
!7434 = !DILocalVariable(name: "pins", arg: 2, scope: !7431, file: !1039, line: 474, type: !923)
!7435 = !DILocalVariable(name: "cfg", scope: !7431, file: !1039, line: 476, type: !7383)
!7436 = !DILocalVariable(name: "gpio", scope: !7431, file: !1039, line: 477, type: !969)
!7437 = !DILocation(line: 0, scope: !7431)
!7438 = !DILocation(line: 476, column: 45, scope: !7431)
!7439 = !DILocation(line: 477, column: 44, scope: !7431)
!7440 = !DILocation(line: 484, column: 2, scope: !7431)
!7441 = !DILocation(line: 487, column: 2, scope: !7431)
!7442 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1039, file: !1039, line: 594, type: !932, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7443)
!7443 = !{!7444, !7445, !7446, !7447, !7448, !7449, !7451, !7452, !7453}
!7444 = !DILocalVariable(name: "dev", arg: 1, scope: !7442, file: !1039, line: 594, type: !896)
!7445 = !DILocalVariable(name: "pin", arg: 2, scope: !7442, file: !1039, line: 595, type: !911)
!7446 = !DILocalVariable(name: "mode", arg: 3, scope: !7442, file: !1039, line: 596, type: !870)
!7447 = !DILocalVariable(name: "trig", arg: 4, scope: !7442, file: !1039, line: 597, type: !876)
!7448 = !DILocalVariable(name: "cfg", scope: !7442, file: !1039, line: 599, type: !7383)
!7449 = !DILocalVariable(name: "data", scope: !7442, file: !1039, line: 600, type: !7450)
!7450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!7451 = !DILocalVariable(name: "edge", scope: !7442, file: !1039, line: 601, type: !103)
!7452 = !DILocalVariable(name: "err", scope: !7442, file: !1039, line: 602, type: !103)
!7453 = !DILabel(scope: !7442, name: "exit", file: !1039, line: 643)
!7454 = !DILocation(line: 0, scope: !7442)
!7455 = !DILocation(line: 599, column: 45, scope: !7442)
!7456 = !DILocation(line: 604, column: 6, scope: !7442)
!7457 = !DILocation(line: 605, column: 34, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7459, file: !1039, line: 605, column: 7)
!7459 = distinct !DILexicalBlock(scope: !7460, file: !1039, line: 604, column: 38)
!7460 = distinct !DILexicalBlock(scope: !7442, file: !1039, line: 604, column: 6)
!7461 = !DILocation(line: 605, column: 7, scope: !7458)
!7462 = !DILocation(line: 605, column: 47, scope: !7458)
!7463 = !DILocation(line: 605, column: 39, scope: !7458)
!7464 = !DILocation(line: 605, column: 7, scope: !7459)
!7465 = !DILocation(line: 606, column: 4, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7458, file: !1039, line: 605, column: 53)
!7467 = !DILocation(line: 607, column: 4, scope: !7466)
!7468 = !DILocation(line: 608, column: 4, scope: !7466)
!7469 = !DILocation(line: 609, column: 3, scope: !7466)
!7470 = !DILocation(line: 600, column: 38, scope: !7442)
!7471 = !DILocation(line: 620, column: 30, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7442, file: !1039, line: 620, column: 6)
!7473 = !DILocation(line: 620, column: 6, scope: !7472)
!7474 = !DILocation(line: 620, column: 57, scope: !7472)
!7475 = !DILocation(line: 620, column: 6, scope: !7442)
!7476 = !DILocation(line: 625, column: 29, scope: !7442)
!7477 = !DILocation(line: 625, column: 2, scope: !7442)
!7478 = !DILocation(line: 627, column: 2, scope: !7442)
!7479 = !DILocation(line: 630, column: 3, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7442, file: !1039, line: 627, column: 16)
!7481 = !DILocation(line: 633, column: 3, scope: !7480)
!7482 = !DILocation(line: 636, column: 3, scope: !7480)
!7483 = !DILocation(line: 639, column: 2, scope: !7442)
!7484 = !DILocation(line: 641, column: 2, scope: !7442)
!7485 = !DILocation(line: 643, column: 1, scope: !7442)
!7486 = !DILocation(line: 644, column: 2, scope: !7442)
!7487 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1039, file: !1039, line: 647, type: !936, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7488)
!7488 = !{!7489, !7490, !7491, !7492}
!7489 = !DILocalVariable(name: "dev", arg: 1, scope: !7487, file: !1039, line: 647, type: !896)
!7490 = !DILocalVariable(name: "callback", arg: 2, scope: !7487, file: !1039, line: 648, type: !938)
!7491 = !DILocalVariable(name: "set", arg: 3, scope: !7487, file: !1039, line: 649, type: !157)
!7492 = !DILocalVariable(name: "data", scope: !7487, file: !1039, line: 651, type: !7450)
!7493 = !DILocation(line: 0, scope: !7487)
!7494 = !DILocation(line: 651, column: 38, scope: !7487)
!7495 = !DILocation(line: 653, column: 37, scope: !7487)
!7496 = !DILocation(line: 653, column: 9, scope: !7487)
!7497 = !DILocation(line: 653, column: 2, scope: !7487)
!7498 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7499, file: !7499, line: 38, type: !7500, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7503)
!7499 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7500 = !DISubroutineType(types: !7501)
!7501 = !{!103, !7502, !938, !157}
!7502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!7503 = !{!7504, !7505, !7506}
!7504 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7498, file: !7499, line: 38, type: !7502)
!7505 = !DILocalVariable(name: "callback", arg: 2, scope: !7498, file: !7499, line: 39, type: !938)
!7506 = !DILocalVariable(name: "set", arg: 3, scope: !7498, file: !7499, line: 40, type: !157)
!7507 = !DILocation(line: 0, scope: !7498)
!7508 = !DILocation(line: 45, column: 7, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7498, file: !7499, line: 45, column: 6)
!7510 = !DILocation(line: 45, column: 6, scope: !7498)
!7511 = !DILocation(line: 46, column: 56, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7513, file: !7499, line: 46, column: 7)
!7513 = distinct !DILexicalBlock(scope: !7509, file: !7499, line: 45, column: 38)
!7514 = !DILocation(line: 46, column: 8, scope: !7512)
!7515 = !DILocation(line: 46, column: 7, scope: !7513)
!7516 = !DILocation(line: 51, column: 13, scope: !7509)
!7517 = !DILocation(line: 56, column: 43, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !7499, line: 55, column: 11)
!7519 = distinct !DILexicalBlock(scope: !7498, file: !7499, line: 55, column: 6)
!7520 = !DILocation(line: 56, column: 3, scope: !7518)
!7521 = !DILocation(line: 57, column: 2, scope: !7518)
!7522 = !DILocation(line: 60, column: 1, scope: !7498)
!7523 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !943, file: !943, line: 261, type: !7524, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7526)
!7524 = !DISubroutineType(types: !7525)
!7525 = !{!157, !7502}
!7526 = !{!7527}
!7527 = !DILocalVariable(name: "list", arg: 1, scope: !7523, file: !943, line: 261, type: !7502)
!7528 = !DILocation(line: 0, scope: !7523)
!7529 = !DILocation(line: 261, column: 1, scope: !7523)
!7530 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !943, file: !943, line: 417, type: !7531, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7533)
!7531 = !DISubroutineType(types: !7532)
!7532 = !{!157, !7502, !1112}
!7533 = !{!7534, !7535, !7536, !7537}
!7534 = !DILocalVariable(name: "list", arg: 1, scope: !7530, file: !943, line: 417, type: !7502)
!7535 = !DILocalVariable(name: "node", arg: 2, scope: !7530, file: !943, line: 417, type: !1112)
!7536 = !DILocalVariable(name: "prev", scope: !7530, file: !943, line: 417, type: !1112)
!7537 = !DILocalVariable(name: "test", scope: !7530, file: !943, line: 417, type: !1112)
!7538 = !DILocation(line: 0, scope: !7530)
!7539 = !DILocation(line: 417, column: 1, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7530, file: !943, line: 417, column: 1)
!7541 = !DILocation(line: 417, column: 1, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7540, file: !943, line: 417, column: 1)
!7543 = !DILocation(line: 417, column: 1, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7545, file: !943, line: 417, column: 1)
!7545 = distinct !DILexicalBlock(scope: !7542, file: !943, line: 417, column: 1)
!7546 = !DILocation(line: 417, column: 1, scope: !7545)
!7547 = distinct !{!7547, !7539, !7539}
!7548 = !DILocation(line: 417, column: 1, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7544, file: !943, line: 417, column: 1)
!7550 = !DILocation(line: 417, column: 1, scope: !7530)
!7551 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !943, file: !943, line: 298, type: !7552, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7554)
!7552 = !DISubroutineType(types: !7553)
!7553 = !{null, !7502, !1112}
!7554 = !{!7555, !7556}
!7555 = !DILocalVariable(name: "list", arg: 1, scope: !7551, file: !943, line: 298, type: !7502)
!7556 = !DILocalVariable(name: "node", arg: 2, scope: !7551, file: !943, line: 298, type: !1112)
!7557 = !DILocation(line: 0, scope: !7551)
!7558 = !DILocation(line: 298, column: 1, scope: !7551)
!7559 = !DILocation(line: 298, column: 1, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7551, file: !943, line: 298, column: 1)
!7561 = !DILocation(line: 298, column: 1, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7560, file: !943, line: 298, column: 1)
!7563 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !943, file: !943, line: 231, type: !7564, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7566)
!7564 = !DISubroutineType(types: !7565)
!7565 = !{!1112, !7502}
!7566 = !{!7567}
!7567 = !DILocalVariable(name: "list", arg: 1, scope: !7563, file: !943, line: 231, type: !7502)
!7568 = !DILocation(line: 0, scope: !7563)
!7569 = !DILocation(line: 233, column: 15, scope: !7563)
!7570 = !DILocation(line: 233, column: 2, scope: !7563)
!7571 = distinct !DISubprogram(name: "z_snode_next_set", scope: !943, file: !943, line: 209, type: !7572, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7574)
!7572 = !DISubroutineType(types: !7573)
!7573 = !{null, !1112, !1112}
!7574 = !{!7575, !7576}
!7575 = !DILocalVariable(name: "parent", arg: 1, scope: !7571, file: !943, line: 209, type: !1112)
!7576 = !DILocalVariable(name: "child", arg: 2, scope: !7571, file: !943, line: 209, type: !1112)
!7577 = !DILocation(line: 0, scope: !7571)
!7578 = !DILocation(line: 211, column: 10, scope: !7571)
!7579 = !DILocation(line: 211, column: 15, scope: !7571)
!7580 = !DILocation(line: 212, column: 1, scope: !7571)
!7581 = distinct !DISubprogram(name: "z_slist_head_set", scope: !943, file: !943, line: 214, type: !7552, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7582)
!7582 = !{!7583, !7584}
!7583 = !DILocalVariable(name: "list", arg: 1, scope: !7581, file: !943, line: 214, type: !7502)
!7584 = !DILocalVariable(name: "node", arg: 2, scope: !7581, file: !943, line: 214, type: !1112)
!7585 = !DILocation(line: 0, scope: !7581)
!7586 = !DILocation(line: 216, column: 8, scope: !7581)
!7587 = !DILocation(line: 216, column: 13, scope: !7581)
!7588 = !DILocation(line: 217, column: 1, scope: !7581)
!7589 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !943, file: !943, line: 243, type: !7564, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7590)
!7590 = !{!7591}
!7591 = !DILocalVariable(name: "list", arg: 1, scope: !7589, file: !943, line: 243, type: !7502)
!7592 = !DILocation(line: 0, scope: !7589)
!7593 = !DILocation(line: 245, column: 15, scope: !7589)
!7594 = !DILocation(line: 245, column: 2, scope: !7589)
!7595 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !943, file: !943, line: 219, type: !7552, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7596)
!7596 = !{!7597, !7598}
!7597 = !DILocalVariable(name: "list", arg: 1, scope: !7595, file: !943, line: 219, type: !7502)
!7598 = !DILocalVariable(name: "node", arg: 2, scope: !7595, file: !943, line: 219, type: !1112)
!7599 = !DILocation(line: 0, scope: !7595)
!7600 = !DILocation(line: 221, column: 8, scope: !7595)
!7601 = !DILocation(line: 221, column: 13, scope: !7595)
!7602 = !DILocation(line: 222, column: 1, scope: !7595)
!7603 = distinct !DISubprogram(name: "sys_slist_remove", scope: !943, file: !943, line: 401, type: !7604, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7606)
!7604 = !DISubroutineType(types: !7605)
!7605 = !{null, !7502, !1112, !1112}
!7606 = !{!7607, !7608, !7609}
!7607 = !DILocalVariable(name: "list", arg: 1, scope: !7603, file: !943, line: 401, type: !7502)
!7608 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7603, file: !943, line: 401, type: !1112)
!7609 = !DILocalVariable(name: "node", arg: 3, scope: !7603, file: !943, line: 401, type: !1112)
!7610 = !DILocation(line: 0, scope: !7603)
!7611 = !DILocation(line: 401, column: 1, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7603, file: !943, line: 401, column: 1)
!7613 = !DILocation(line: 0, scope: !7612)
!7614 = !DILocation(line: 401, column: 1, scope: !7603)
!7615 = !DILocation(line: 401, column: 1, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7612, file: !943, line: 401, column: 1)
!7617 = !DILocation(line: 401, column: 1, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7616, file: !943, line: 401, column: 1)
!7619 = !DILocation(line: 401, column: 1, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7618, file: !943, line: 401, column: 1)
!7621 = !DILocation(line: 401, column: 1, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7612, file: !943, line: 401, column: 1)
!7623 = !DILocation(line: 401, column: 1, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7622, file: !943, line: 401, column: 1)
!7625 = !DILocation(line: 401, column: 1, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7624, file: !943, line: 401, column: 1)
!7627 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !943, file: !943, line: 285, type: !7628, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7630)
!7628 = !DISubroutineType(types: !7629)
!7629 = !{!1112, !1112}
!7630 = !{!7631}
!7631 = !DILocalVariable(name: "node", arg: 1, scope: !7627, file: !943, line: 285, type: !1112)
!7632 = !DILocation(line: 0, scope: !7627)
!7633 = !DILocation(line: 285, column: 1, scope: !7627)
!7634 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !943, file: !943, line: 274, type: !7628, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7635)
!7635 = !{!7636}
!7636 = !DILocalVariable(name: "node", arg: 1, scope: !7634, file: !943, line: 274, type: !1112)
!7637 = !DILocation(line: 0, scope: !7634)
!7638 = !DILocation(line: 274, column: 1, scope: !7634)
!7639 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !943, file: !943, line: 204, type: !7628, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7640)
!7640 = !{!7641}
!7641 = !DILocalVariable(name: "node", arg: 1, scope: !7639, file: !943, line: 204, type: !1112)
!7642 = !DILocation(line: 0, scope: !7639)
!7643 = !DILocation(line: 206, column: 15, scope: !7639)
!7644 = !DILocation(line: 206, column: 2, scope: !7639)
!7645 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1039, file: !1039, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7646)
!7646 = !{!7647, !7648, !7649}
!7647 = !DILocalVariable(name: "pin", arg: 1, scope: !7645, file: !1039, line: 342, type: !103)
!7648 = !DILocalVariable(name: "line", scope: !7645, file: !1039, line: 344, type: !121)
!7649 = !DILocalVariable(name: "port", scope: !7645, file: !1039, line: 345, type: !103)
!7650 = !DILocation(line: 0, scope: !7645)
!7651 = !DILocation(line: 344, column: 18, scope: !7645)
!7652 = !{i32 983040, i32 0}
!7653 = !DILocation(line: 356, column: 9, scope: !7645)
!7654 = !DILocation(line: 370, column: 2, scope: !7645)
!7655 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1039, file: !1039, line: 37, type: !578, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7656)
!7656 = !{!7657, !7658, !7659}
!7657 = !DILocalVariable(name: "line", arg: 1, scope: !7655, file: !1039, line: 37, type: !103)
!7658 = !DILocalVariable(name: "arg", arg: 2, scope: !7655, file: !1039, line: 37, type: !102)
!7659 = !DILocalVariable(name: "data", scope: !7655, file: !1039, line: 39, type: !7450)
!7660 = !DILocation(line: 0, scope: !7655)
!7661 = !DILocation(line: 41, column: 29, scope: !7655)
!7662 = !DILocation(line: 41, column: 39, scope: !7655)
!7663 = !DILocation(line: 41, column: 44, scope: !7655)
!7664 = !DILocation(line: 41, column: 2, scope: !7655)
!7665 = !DILocation(line: 42, column: 1, scope: !7655)
!7666 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1039, file: !1039, line: 376, type: !7667, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7669)
!7667 = !DISubroutineType(types: !7668)
!7668 = !{!103, !103, !103}
!7669 = !{!7670, !7671, !7672, !7674, !7675}
!7670 = !DILocalVariable(name: "port", arg: 1, scope: !7666, file: !1039, line: 376, type: !103)
!7671 = !DILocalVariable(name: "pin", arg: 2, scope: !7666, file: !1039, line: 376, type: !103)
!7672 = !DILocalVariable(name: "clk", scope: !7666, file: !1039, line: 386, type: !7673)
!7673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !896)
!7674 = !DILocalVariable(name: "pclken", scope: !7666, file: !1039, line: 387, type: !1155)
!7675 = !DILocalVariable(name: "ret", scope: !7666, file: !1039, line: 396, type: !103)
!7676 = !DILocation(line: 0, scope: !7666)
!7677 = !DILocation(line: 387, column: 2, scope: !7666)
!7678 = !DILocation(line: 387, column: 22, scope: !7666)
!7679 = !DILocation(line: 399, column: 8, scope: !7666)
!7680 = !DILocation(line: 400, column: 10, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7666, file: !1039, line: 400, column: 6)
!7682 = !DILocation(line: 400, column: 6, scope: !7666)
!7683 = !DILocation(line: 405, column: 2, scope: !7666)
!7684 = !DILocation(line: 407, column: 2, scope: !7666)
!7685 = !DILocation(line: 408, column: 1, scope: !7666)
!7686 = distinct !DISubprogram(name: "clock_control_on", scope: !671, file: !671, line: 123, type: !1004, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7687)
!7687 = !{!7688, !7689, !7690}
!7688 = !DILocalVariable(name: "dev", arg: 1, scope: !7686, file: !671, line: 123, type: !896)
!7689 = !DILocalVariable(name: "sys", arg: 2, scope: !7686, file: !671, line: 124, type: !767)
!7690 = !DILocalVariable(name: "api", scope: !7686, file: !671, line: 126, type: !997)
!7691 = !DILocation(line: 0, scope: !7686)
!7692 = !DILocation(line: 127, column: 49, scope: !7686)
!7693 = !DILocation(line: 129, column: 14, scope: !7686)
!7694 = !DILocation(line: 129, column: 9, scope: !7686)
!7695 = !DILocation(line: 129, column: 2, scope: !7686)
!7696 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1039, file: !1039, line: 311, type: !6815, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7697)
!7697 = !{!7698, !7699, !7700}
!7698 = !DILocalVariable(name: "port", arg: 1, scope: !7696, file: !1039, line: 311, type: !103)
!7699 = !DILocalVariable(name: "pin", arg: 2, scope: !7696, file: !1039, line: 311, type: !103)
!7700 = !DILocalVariable(name: "line", scope: !7696, file: !1039, line: 313, type: !121)
!7701 = !DILocation(line: 0, scope: !7696)
!7702 = !DILocation(line: 313, column: 18, scope: !7696)
!7703 = !DILocation(line: 337, column: 2, scope: !7696)
!7704 = !DILocation(line: 340, column: 1, scope: !7696)
!7705 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1039, file: !1039, line: 295, type: !7706, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7708)
!7706 = !DISubroutineType(types: !7707)
!7707 = !{!121, !103}
!7708 = !{!7709}
!7709 = !DILocalVariable(name: "pin", arg: 1, scope: !7705, file: !1039, line: 295, type: !103)
!7710 = !DILocation(line: 0, scope: !7705)
!7711 = !DILocation(line: 307, column: 46, scope: !7705)
!7712 = !DILocation(line: 307, column: 27, scope: !7705)
!7713 = !DILocation(line: 307, column: 32, scope: !7705)
!7714 = !DILocation(line: 307, column: 14, scope: !7705)
!7715 = !DILocation(line: 307, column: 39, scope: !7705)
!7716 = !DILocation(line: 307, column: 2, scope: !7705)
!7717 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !4868, file: !4868, line: 671, type: !7718, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7720)
!7718 = !DISubroutineType(types: !7719)
!7719 = !{null, !121, !121}
!7720 = !{!7721, !7722}
!7721 = !DILocalVariable(name: "Port", arg: 1, scope: !7717, file: !4868, line: 671, type: !121)
!7722 = !DILocalVariable(name: "Line", arg: 2, scope: !7717, file: !4868, line: 671, type: !121)
!7723 = !DILocation(line: 0, scope: !7717)
!7724 = !DILocation(line: 673, column: 3, scope: !7717)
!7725 = !DILocalVariable(name: "value", arg: 1, scope: !7726, file: !5021, line: 373, type: !121)
!7726 = distinct !DISubprogram(name: "__RBIT", scope: !5021, file: !5021, line: 373, type: !6029, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7727)
!7727 = !{!7725, !7728}
!7728 = !DILocalVariable(name: "result", scope: !7726, file: !5021, line: 375, type: !121)
!7729 = !DILocation(line: 0, scope: !7726, inlinedAt: !7730)
!7730 = distinct !DILocation(line: 673, column: 3, scope: !7717)
!7731 = !DILocation(line: 380, column: 4, scope: !7726, inlinedAt: !7730)
!7732 = !{i64 3730454}
!7733 = !DILocalVariable(name: "value", arg: 1, scope: !7734, file: !5021, line: 403, type: !121)
!7734 = distinct !DISubprogram(name: "__CLZ", scope: !5021, file: !5021, line: 403, type: !7735, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7737)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{!154, !121}
!7737 = !{!7733}
!7738 = !DILocation(line: 0, scope: !7734, inlinedAt: !7739)
!7739 = distinct !DILocation(line: 673, column: 3, scope: !7717)
!7740 = !DILocation(line: 414, column: 7, scope: !7734, inlinedAt: !7739)
!7741 = !DILocation(line: 674, column: 1, scope: !7717)
!7742 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7499, file: !7499, line: 69, type: !7743, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7745)
!7743 = !DISubroutineType(types: !7744)
!7744 = !{null, !7502, !896, !121}
!7745 = !{!7746, !7747, !7748, !7749, !7750}
!7746 = !DILocalVariable(name: "list", arg: 1, scope: !7742, file: !7499, line: 69, type: !7502)
!7747 = !DILocalVariable(name: "port", arg: 2, scope: !7742, file: !7499, line: 70, type: !896)
!7748 = !DILocalVariable(name: "pins", arg: 3, scope: !7742, file: !7499, line: 71, type: !121)
!7749 = !DILocalVariable(name: "cb", scope: !7742, file: !7499, line: 73, type: !938)
!7750 = !DILocalVariable(name: "tmp", scope: !7742, file: !7499, line: 73, type: !938)
!7751 = !DILocation(line: 0, scope: !7742)
!7752 = !DILocation(line: 75, column: 2, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7742, file: !7499, line: 75, column: 2)
!7754 = !DILocation(line: 0, scope: !7753)
!7755 = !DILocation(line: 76, column: 11, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7757, file: !7499, line: 76, column: 7)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !7499, line: 75, column: 57)
!7758 = distinct !DILexicalBlock(scope: !7753, file: !7499, line: 75, column: 2)
!7759 = !DILocation(line: 76, column: 20, scope: !7756)
!7760 = !DILocation(line: 76, column: 7, scope: !7757)
!7761 = !DILocation(line: 78, column: 8, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7756, file: !7499, line: 76, column: 28)
!7763 = !DILocation(line: 78, column: 4, scope: !7762)
!7764 = !DILocation(line: 79, column: 3, scope: !7762)
!7765 = !DILocation(line: 75, column: 2, scope: !7758)
!7766 = !DILocation(line: 81, column: 1, scope: !7742)
!7767 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !4868, file: !4868, line: 710, type: !6029, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7768)
!7768 = !{!7769}
!7769 = !DILocalVariable(name: "Line", arg: 1, scope: !7767, file: !4868, line: 710, type: !121)
!7770 = !DILocation(line: 0, scope: !7767)
!7771 = !DILocation(line: 712, column: 21, scope: !7767)
!7772 = !DILocation(line: 0, scope: !7726, inlinedAt: !7773)
!7773 = distinct !DILocation(line: 712, column: 76, scope: !7767)
!7774 = !DILocation(line: 380, column: 4, scope: !7726, inlinedAt: !7773)
!7775 = !DILocation(line: 0, scope: !7734, inlinedAt: !7776)
!7776 = distinct !DILocation(line: 712, column: 76, scope: !7767)
!7777 = !DILocation(line: 414, column: 7, scope: !7734, inlinedAt: !7776)
!7778 = !DILocation(line: 712, column: 73, scope: !7767)
!7779 = !DILocation(line: 712, column: 3, scope: !7767)
!7780 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !7781, file: !7781, line: 910, type: !7782, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7784)
!7781 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7782 = !DISubroutineType(types: !7783)
!7783 = !{null, !969, !121}
!7784 = !{!7785, !7786}
!7785 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7780, file: !7781, line: 910, type: !969)
!7786 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7780, file: !7781, line: 910, type: !121)
!7787 = !DILocation(line: 0, scope: !7780)
!7788 = !DILocation(line: 912, column: 3, scope: !7780)
!7789 = !DILocation(line: 913, column: 1, scope: !7780)
!7790 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !7781, file: !7781, line: 823, type: !7791, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7793)
!7791 = !DISubroutineType(types: !7792)
!7792 = !{!121, !969}
!7793 = !{!7794}
!7794 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7790, file: !7781, line: 823, type: !969)
!7795 = !DILocation(line: 0, scope: !7790)
!7796 = !DILocation(line: 825, column: 21, scope: !7790)
!7797 = !DILocation(line: 825, column: 3, scope: !7790)
!7798 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !7781, file: !7781, line: 812, type: !7782, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7799)
!7799 = !{!7800, !7801}
!7800 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7798, file: !7781, line: 812, type: !969)
!7801 = !DILocalVariable(name: "PortValue", arg: 2, scope: !7798, file: !7781, line: 812, type: !121)
!7802 = !DILocation(line: 0, scope: !7798)
!7803 = !DILocation(line: 814, column: 3, scope: !7798)
!7804 = !DILocation(line: 815, column: 1, scope: !7798)
!7805 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !7781, file: !7781, line: 771, type: !7791, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7806)
!7806 = !{!7807}
!7807 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7805, file: !7781, line: 771, type: !969)
!7808 = !DILocation(line: 0, scope: !7805)
!7809 = !DILocation(line: 773, column: 21, scope: !7805)
!7810 = !DILocation(line: 773, column: 3, scope: !7805)
!7811 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1039, file: !1039, line: 47, type: !7812, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7814)
!7812 = !DISubroutineType(types: !7813)
!7813 = !{!103, !912, !2376}
!7814 = !{!7815, !7816}
!7815 = !DILocalVariable(name: "flags", arg: 1, scope: !7811, file: !1039, line: 47, type: !912)
!7816 = !DILocalVariable(name: "pincfg", arg: 2, scope: !7811, file: !1039, line: 47, type: !2376)
!7817 = !DILocation(line: 0, scope: !7811)
!7818 = !DILocation(line: 50, column: 13, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7811, file: !1039, line: 50, column: 6)
!7820 = !DILocation(line: 50, column: 28, scope: !7819)
!7821 = !DILocation(line: 50, column: 6, scope: !7811)
!7822 = !DILocation(line: 53, column: 11, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7819, file: !1039, line: 50, column: 34)
!7824 = !DILocation(line: 55, column: 14, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7823, file: !1039, line: 55, column: 7)
!7826 = !DILocation(line: 55, column: 35, scope: !7825)
!7827 = !DILocation(line: 55, column: 7, scope: !7823)
!7828 = !DILocation(line: 56, column: 14, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7830, file: !1039, line: 56, column: 8)
!7830 = distinct !DILexicalBlock(scope: !7825, file: !1039, line: 55, column: 41)
!7831 = !DILocation(line: 56, column: 8, scope: !7830)
!7832 = !DILocation(line: 0, scope: !7825)
!7833 = !DILocation(line: 66, column: 14, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7823, file: !1039, line: 66, column: 7)
!7835 = !DILocation(line: 66, column: 30, scope: !7834)
!7836 = !DILocation(line: 66, column: 7, scope: !7823)
!7837 = !DILocation(line: 67, column: 12, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7834, file: !1039, line: 66, column: 36)
!7839 = !DILocation(line: 68, column: 3, scope: !7838)
!7840 = !DILocation(line: 68, column: 21, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7834, file: !1039, line: 68, column: 14)
!7842 = !DILocation(line: 68, column: 39, scope: !7841)
!7843 = !DILocation(line: 68, column: 14, scope: !7834)
!7844 = !DILocation(line: 69, column: 12, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7841, file: !1039, line: 68, column: 45)
!7846 = !DILocation(line: 70, column: 3, scope: !7845)
!7847 = !DILocation(line: 72, column: 21, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7819, file: !1039, line: 72, column: 14)
!7849 = !DILocation(line: 72, column: 35, scope: !7848)
!7850 = !DILocation(line: 72, column: 14, scope: !7819)
!7851 = !DILocation(line: 77, column: 14, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !1039, line: 77, column: 7)
!7853 = distinct !DILexicalBlock(scope: !7848, file: !1039, line: 72, column: 41)
!7854 = !DILocation(line: 77, column: 30, scope: !7852)
!7855 = !DILocation(line: 77, column: 7, scope: !7853)
!7856 = !DILocation(line: 0, scope: !7819)
!7857 = !DILocation(line: 90, column: 1, scope: !7811)
!7858 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1039, file: !1039, line: 157, type: !7859, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7861)
!7859 = !DISubroutineType(types: !7860)
!7860 = !{null, !896, !103, !103, !103}
!7861 = !{!7862, !7863, !7864, !7865, !7866, !7867, !7868, !7869, !7870, !7871, !7872}
!7862 = !DILocalVariable(name: "dev", arg: 1, scope: !7858, file: !1039, line: 157, type: !896)
!7863 = !DILocalVariable(name: "pin", arg: 2, scope: !7858, file: !1039, line: 157, type: !103)
!7864 = !DILocalVariable(name: "conf", arg: 3, scope: !7858, file: !1039, line: 158, type: !103)
!7865 = !DILocalVariable(name: "func", arg: 4, scope: !7858, file: !1039, line: 158, type: !103)
!7866 = !DILocalVariable(name: "cfg", scope: !7858, file: !1039, line: 160, type: !7383)
!7867 = !DILocalVariable(name: "gpio", scope: !7858, file: !1039, line: 161, type: !969)
!7868 = !DILocalVariable(name: "pin_ll", scope: !7858, file: !1039, line: 163, type: !103)
!7869 = !DILocalVariable(name: "mode", scope: !7858, file: !1039, line: 227, type: !32)
!7870 = !DILocalVariable(name: "otype", scope: !7858, file: !1039, line: 227, type: !32)
!7871 = !DILocalVariable(name: "ospeed", scope: !7858, file: !1039, line: 227, type: !32)
!7872 = !DILocalVariable(name: "pupd", scope: !7858, file: !1039, line: 227, type: !32)
!7873 = !DILocation(line: 0, scope: !7858)
!7874 = !DILocation(line: 160, column: 45, scope: !7858)
!7875 = !DILocation(line: 161, column: 44, scope: !7858)
!7876 = !DILocation(line: 163, column: 15, scope: !7858)
!7877 = !DILocation(line: 229, column: 14, scope: !7858)
!7878 = !DILocation(line: 246, column: 47, scope: !7858)
!7879 = !DILocation(line: 246, column: 2, scope: !7858)
!7880 = !DILocation(line: 248, column: 43, scope: !7858)
!7881 = !DILocation(line: 248, column: 2, scope: !7858)
!7882 = !DILocation(line: 250, column: 40, scope: !7858)
!7883 = !DILocation(line: 250, column: 2, scope: !7858)
!7884 = !DILocation(line: 252, column: 11, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7858, file: !1039, line: 252, column: 6)
!7886 = !DILocation(line: 252, column: 6, scope: !7858)
!7887 = !DILocation(line: 253, column: 11, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7889, file: !1039, line: 253, column: 7)
!7889 = distinct !DILexicalBlock(scope: !7885, file: !1039, line: 252, column: 36)
!7890 = !DILocation(line: 253, column: 7, scope: !7889)
!7891 = !DILocation(line: 254, column: 4, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7888, file: !1039, line: 253, column: 16)
!7893 = !DILocation(line: 255, column: 3, scope: !7892)
!7894 = !DILocation(line: 256, column: 4, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7888, file: !1039, line: 255, column: 10)
!7896 = !DILocation(line: 260, column: 40, scope: !7858)
!7897 = !DILocation(line: 260, column: 2, scope: !7858)
!7898 = !DILocation(line: 265, column: 1, scope: !7858)
!7899 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1039, file: !1039, line: 137, type: !7706, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7900)
!7900 = !{!7901, !7902}
!7901 = !DILocalVariable(name: "pin", arg: 1, scope: !7899, file: !1039, line: 137, type: !103)
!7902 = !DILocalVariable(name: "pinval", scope: !7899, file: !1039, line: 139, type: !121)
!7903 = !DILocation(line: 0, scope: !7899)
!7904 = !DILocation(line: 149, column: 13, scope: !7899)
!7905 = !DILocation(line: 151, column: 2, scope: !7899)
!7906 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !7781, file: !7781, line: 342, type: !7907, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7909)
!7907 = !DISubroutineType(types: !7908)
!7908 = !{null, !969, !121, !121}
!7909 = !{!7910, !7911, !7912}
!7910 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7906, file: !7781, line: 342, type: !969)
!7911 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7906, file: !7781, line: 342, type: !121)
!7912 = !DILocalVariable(name: "OutputType", arg: 3, scope: !7906, file: !7781, line: 342, type: !121)
!7913 = !DILocation(line: 0, scope: !7906)
!7914 = !DILocation(line: 344, column: 3, scope: !7906)
!7915 = !DILocation(line: 345, column: 1, scope: !7906)
!7916 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !7781, file: !7781, line: 413, type: !7907, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7917)
!7917 = !{!7918, !7919, !7920}
!7918 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7916, file: !7781, line: 413, type: !969)
!7919 = !DILocalVariable(name: "Pin", arg: 2, scope: !7916, file: !7781, line: 413, type: !121)
!7920 = !DILocalVariable(name: "Speed", arg: 3, scope: !7916, file: !7781, line: 413, type: !121)
!7921 = !DILocation(line: 0, scope: !7916)
!7922 = !DILocation(line: 415, column: 3, scope: !7916)
!7923 = !DILocation(line: 0, scope: !7726, inlinedAt: !7924)
!7924 = distinct !DILocation(line: 415, column: 3, scope: !7916)
!7925 = !DILocation(line: 380, column: 4, scope: !7726, inlinedAt: !7924)
!7926 = !DILocation(line: 0, scope: !7734, inlinedAt: !7927)
!7927 = distinct !DILocation(line: 415, column: 3, scope: !7916)
!7928 = !DILocation(line: 414, column: 7, scope: !7734, inlinedAt: !7927)
!7929 = !DILocation(line: 0, scope: !7726, inlinedAt: !7930)
!7930 = distinct !DILocation(line: 415, column: 3, scope: !7916)
!7931 = !DILocation(line: 0, scope: !7734, inlinedAt: !7932)
!7932 = distinct !DILocation(line: 415, column: 3, scope: !7916)
!7933 = !DILocation(line: 417, column: 1, scope: !7916)
!7934 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !7781, file: !7781, line: 484, type: !7907, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7935)
!7935 = !{!7936, !7937, !7938}
!7936 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7934, file: !7781, line: 484, type: !969)
!7937 = !DILocalVariable(name: "Pin", arg: 2, scope: !7934, file: !7781, line: 484, type: !121)
!7938 = !DILocalVariable(name: "Pull", arg: 3, scope: !7934, file: !7781, line: 484, type: !121)
!7939 = !DILocation(line: 0, scope: !7934)
!7940 = !DILocation(line: 486, column: 3, scope: !7934)
!7941 = !DILocation(line: 0, scope: !7726, inlinedAt: !7942)
!7942 = distinct !DILocation(line: 486, column: 3, scope: !7934)
!7943 = !DILocation(line: 380, column: 4, scope: !7726, inlinedAt: !7942)
!7944 = !DILocation(line: 0, scope: !7734, inlinedAt: !7945)
!7945 = distinct !DILocation(line: 486, column: 3, scope: !7934)
!7946 = !DILocation(line: 414, column: 7, scope: !7734, inlinedAt: !7945)
!7947 = !DILocation(line: 0, scope: !7726, inlinedAt: !7948)
!7948 = distinct !DILocation(line: 486, column: 3, scope: !7934)
!7949 = !DILocation(line: 0, scope: !7734, inlinedAt: !7950)
!7950 = distinct !DILocation(line: 486, column: 3, scope: !7934)
!7951 = !DILocation(line: 487, column: 1, scope: !7934)
!7952 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !7781, file: !7781, line: 556, type: !7907, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7953)
!7953 = !{!7954, !7955, !7956}
!7954 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7952, file: !7781, line: 556, type: !969)
!7955 = !DILocalVariable(name: "Pin", arg: 2, scope: !7952, file: !7781, line: 556, type: !121)
!7956 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7952, file: !7781, line: 556, type: !121)
!7957 = !DILocation(line: 0, scope: !7952)
!7958 = !DILocation(line: 558, column: 3, scope: !7952)
!7959 = !DILocation(line: 0, scope: !7726, inlinedAt: !7960)
!7960 = distinct !DILocation(line: 558, column: 3, scope: !7952)
!7961 = !DILocation(line: 380, column: 4, scope: !7726, inlinedAt: !7960)
!7962 = !DILocation(line: 0, scope: !7734, inlinedAt: !7963)
!7963 = distinct !DILocation(line: 558, column: 3, scope: !7952)
!7964 = !DILocation(line: 414, column: 7, scope: !7734, inlinedAt: !7963)
!7965 = !DILocation(line: 0, scope: !7726, inlinedAt: !7966)
!7966 = distinct !DILocation(line: 558, column: 3, scope: !7952)
!7967 = !DILocation(line: 0, scope: !7734, inlinedAt: !7968)
!7968 = distinct !DILocation(line: 558, column: 3, scope: !7952)
!7969 = !DILocation(line: 560, column: 1, scope: !7952)
!7970 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !7781, file: !7781, line: 633, type: !7907, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7971)
!7971 = !{!7972, !7973, !7974}
!7972 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7970, file: !7781, line: 633, type: !969)
!7973 = !DILocalVariable(name: "Pin", arg: 2, scope: !7970, file: !7781, line: 633, type: !121)
!7974 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7970, file: !7781, line: 633, type: !121)
!7975 = !DILocation(line: 0, scope: !7970)
!7976 = !DILocation(line: 635, column: 3, scope: !7970)
!7977 = !DILocation(line: 0, scope: !7726, inlinedAt: !7978)
!7978 = distinct !DILocation(line: 635, column: 3, scope: !7970)
!7979 = !DILocation(line: 380, column: 4, scope: !7726, inlinedAt: !7978)
!7980 = !DILocation(line: 0, scope: !7734, inlinedAt: !7981)
!7981 = distinct !DILocation(line: 635, column: 3, scope: !7970)
!7982 = !DILocation(line: 414, column: 7, scope: !7734, inlinedAt: !7981)
!7983 = !DILocation(line: 0, scope: !7726, inlinedAt: !7984)
!7984 = distinct !DILocation(line: 635, column: 3, scope: !7970)
!7985 = !DILocation(line: 0, scope: !7734, inlinedAt: !7986)
!7986 = distinct !DILocation(line: 635, column: 3, scope: !7970)
!7987 = !DILocation(line: 637, column: 1, scope: !7970)
!7988 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !7781, file: !7781, line: 273, type: !7907, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !7989)
!7989 = !{!7990, !7991, !7992}
!7990 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7988, file: !7781, line: 273, type: !969)
!7991 = !DILocalVariable(name: "Pin", arg: 2, scope: !7988, file: !7781, line: 273, type: !121)
!7992 = !DILocalVariable(name: "Mode", arg: 3, scope: !7988, file: !7781, line: 273, type: !121)
!7993 = !DILocation(line: 0, scope: !7988)
!7994 = !DILocation(line: 275, column: 3, scope: !7988)
!7995 = !DILocation(line: 0, scope: !7726, inlinedAt: !7996)
!7996 = distinct !DILocation(line: 275, column: 3, scope: !7988)
!7997 = !DILocation(line: 380, column: 4, scope: !7726, inlinedAt: !7996)
!7998 = !DILocation(line: 0, scope: !7734, inlinedAt: !7999)
!7999 = distinct !DILocation(line: 275, column: 3, scope: !7988)
!8000 = !DILocation(line: 414, column: 7, scope: !7734, inlinedAt: !7999)
!8001 = !DILocation(line: 0, scope: !7726, inlinedAt: !8002)
!8002 = distinct !DILocation(line: 275, column: 3, scope: !7988)
!8003 = !DILocation(line: 0, scope: !7734, inlinedAt: !8004)
!8004 = distinct !DILocation(line: 275, column: 3, scope: !7988)
!8005 = !DILocation(line: 276, column: 1, scope: !7988)
!8006 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1039, file: !1039, line: 698, type: !1052, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !8007)
!8007 = !{!8008, !8009, !8010}
!8008 = !DILocalVariable(name: "dev", arg: 1, scope: !8006, file: !1039, line: 698, type: !896)
!8009 = !DILocalVariable(name: "data", scope: !8006, file: !1039, line: 700, type: !7450)
!8010 = !DILocalVariable(name: "ret", scope: !8006, file: !1039, line: 701, type: !103)
!8011 = !DILocation(line: 0, scope: !8006)
!8012 = !DILocation(line: 700, column: 38, scope: !8006)
!8013 = !DILocation(line: 703, column: 8, scope: !8006)
!8014 = !DILocation(line: 703, column: 12, scope: !8006)
!8015 = !DILocation(line: 705, column: 7, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8006, file: !1039, line: 705, column: 6)
!8017 = !DILocation(line: 705, column: 6, scope: !8006)
!8018 = !DILocation(line: 722, column: 8, scope: !8006)
!8019 = !DILocation(line: 723, column: 10, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8006, file: !1039, line: 723, column: 6)
!8021 = !DILocation(line: 723, column: 6, scope: !8006)
!8022 = !DILocation(line: 731, column: 1, scope: !8006)
!8023 = distinct !DISubprogram(name: "device_is_ready", scope: !3042, file: !3042, line: 47, type: !8024, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !8026)
!8024 = !DISubroutineType(types: !8025)
!8025 = !{!157, !896}
!8026 = !{!8027}
!8027 = !DILocalVariable(name: "dev", arg: 1, scope: !8023, file: !3042, line: 47, type: !896)
!8028 = !DILocation(line: 0, scope: !8023)
!8029 = !DILocation(line: 55, column: 2, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8023, file: !3042, line: 55, column: 2)
!8031 = !{i64 2155277579}
!8032 = !DILocation(line: 56, column: 9, scope: !8023)
!8033 = !DILocation(line: 56, column: 2, scope: !8023)
!8034 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1039, file: !1039, line: 270, type: !8035, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !8037)
!8035 = !DISubroutineType(types: !8036)
!8036 = !{!103, !896, !157}
!8037 = !{!8038, !8039, !8040, !8041, !8042}
!8038 = !DILocalVariable(name: "dev", arg: 1, scope: !8034, file: !1039, line: 270, type: !896)
!8039 = !DILocalVariable(name: "on", arg: 2, scope: !8034, file: !1039, line: 270, type: !157)
!8040 = !DILocalVariable(name: "cfg", scope: !8034, file: !1039, line: 272, type: !7383)
!8041 = !DILocalVariable(name: "ret", scope: !8034, file: !1039, line: 273, type: !103)
!8042 = !DILocalVariable(name: "clk", scope: !8034, file: !1039, line: 278, type: !7673)
!8043 = !DILocation(line: 0, scope: !8034)
!8044 = !DILocation(line: 272, column: 45, scope: !8034)
!8045 = !DILocation(line: 282, column: 38, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8047, file: !1039, line: 280, column: 10)
!8047 = distinct !DILexicalBlock(scope: !8034, file: !1039, line: 280, column: 6)
!8048 = !DILocation(line: 282, column: 6, scope: !8046)
!8049 = !DILocation(line: 281, column: 9, scope: !8046)
!8050 = !DILocation(line: 293, column: 1, scope: !8034)
!8051 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8024, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !8052)
!8052 = !{!8053}
!8053 = !DILocalVariable(name: "dev", arg: 1, scope: !8051, file: !141, line: 730, type: !896)
!8054 = !DILocation(line: 0, scope: !8051)
!8055 = !DILocation(line: 732, column: 9, scope: !8051)
!8056 = !DILocation(line: 732, column: 2, scope: !8051)
!8057 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1039, file: !1039, line: 496, type: !8058, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !867, retainedNodes: !8060)
!8058 = !DISubroutineType(types: !8059)
!8059 = !{!103, !896, !103, !103, !103}
!8060 = !{!8061, !8062, !8063, !8064, !8065, !8066}
!8061 = !DILocalVariable(name: "dev", arg: 1, scope: !8057, file: !1039, line: 496, type: !896)
!8062 = !DILocalVariable(name: "pin", arg: 2, scope: !8057, file: !1039, line: 496, type: !103)
!8063 = !DILocalVariable(name: "conf", arg: 3, scope: !8057, file: !1039, line: 496, type: !103)
!8064 = !DILocalVariable(name: "func", arg: 4, scope: !8057, file: !1039, line: 496, type: !103)
!8065 = !DILocalVariable(name: "ret", scope: !8057, file: !1039, line: 498, type: !103)
!8066 = !DILocalVariable(name: "gpio_out", scope: !8067, file: !1039, line: 508, type: !121)
!8067 = distinct !DILexicalBlock(scope: !8068, file: !1039, line: 507, column: 27)
!8068 = distinct !DILexicalBlock(scope: !8057, file: !1039, line: 507, column: 6)
!8069 = !DILocation(line: 0, scope: !8057)
!8070 = !DILocation(line: 505, column: 2, scope: !8057)
!8071 = !DILocation(line: 507, column: 11, scope: !8068)
!8072 = !DILocation(line: 507, column: 6, scope: !8057)
!8073 = !DILocation(line: 508, column: 28, scope: !8067)
!8074 = !DILocation(line: 0, scope: !8067)
!8075 = !DILocation(line: 510, column: 16, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8067, file: !1039, line: 510, column: 7)
!8077 = !DILocation(line: 0, scope: !8076)
!8078 = !DILocation(line: 510, column: 7, scope: !8067)
!8079 = !DILocation(line: 511, column: 4, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8076, file: !1039, line: 510, column: 32)
!8081 = !DILocation(line: 512, column: 3, scope: !8080)
!8082 = !DILocation(line: 513, column: 4, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !1039, line: 512, column: 39)
!8084 = distinct !DILexicalBlock(scope: !8076, file: !1039, line: 512, column: 14)
!8085 = !DILocation(line: 514, column: 3, scope: !8083)
!8086 = !DILocation(line: 518, column: 1, scope: !8057)
!8087 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1314, file: !1314, line: 526, type: !1215, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8088)
!8088 = !{!8089, !8090, !8091}
!8089 = !DILocalVariable(name: "dev", arg: 1, scope: !8087, file: !1314, line: 526, type: !1217)
!8090 = !DILocalVariable(name: "c", arg: 2, scope: !8087, file: !1314, line: 526, type: !828)
!8091 = !DILocalVariable(name: "config", scope: !8087, file: !1314, line: 528, type: !8092)
!8092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!8093 = !DILocation(line: 0, scope: !8087)
!8094 = !DILocation(line: 528, column: 48, scope: !8087)
!8095 = !DILocation(line: 531, column: 40, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8087, file: !1314, line: 531, column: 6)
!8097 = !DILocation(line: 531, column: 6, scope: !8096)
!8098 = !DILocation(line: 531, column: 6, scope: !8087)
!8099 = !DILocation(line: 532, column: 34, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8096, file: !1314, line: 531, column: 48)
!8101 = !DILocation(line: 532, column: 3, scope: !8100)
!8102 = !DILocation(line: 533, column: 2, scope: !8100)
!8103 = !DILocation(line: 539, column: 42, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8087, file: !1314, line: 539, column: 6)
!8105 = !DILocation(line: 539, column: 7, scope: !8104)
!8106 = !DILocation(line: 539, column: 6, scope: !8087)
!8107 = !DILocation(line: 543, column: 52, scope: !8087)
!8108 = !DILocation(line: 543, column: 22, scope: !8087)
!8109 = !DILocation(line: 543, column: 5, scope: !8087)
!8110 = !DILocation(line: 545, column: 2, scope: !8087)
!8111 = !DILocation(line: 546, column: 1, scope: !8087)
!8112 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1314, file: !1314, line: 548, type: !1234, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8113)
!8113 = !{!8114, !8115, !8116, !8117}
!8114 = !DILocalVariable(name: "dev", arg: 1, scope: !8112, file: !1314, line: 548, type: !1217)
!8115 = !DILocalVariable(name: "c", arg: 2, scope: !8112, file: !1314, line: 549, type: !155)
!8116 = !DILocalVariable(name: "config", scope: !8112, file: !1314, line: 551, type: !8092)
!8117 = !DILocalVariable(name: "key", scope: !8112, file: !1314, line: 555, type: !32)
!8118 = !DILocation(line: 0, scope: !8112)
!8119 = !DILocation(line: 551, column: 48, scope: !8112)
!8120 = !DILocation(line: 562, column: 2, scope: !8112)
!8121 = !DILocation(line: 563, column: 41, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8123, file: !1314, line: 563, column: 7)
!8123 = distinct !DILexicalBlock(scope: !8112, file: !1314, line: 562, column: 12)
!8124 = !DILocation(line: 563, column: 7, scope: !8122)
!8125 = !DILocation(line: 563, column: 7, scope: !8123)
!8126 = !DILocation(line: 55, column: 2, scope: !8127, inlinedAt: !8131)
!8127 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4847, file: !4847, line: 42, type: !4848, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8128)
!8128 = !{!8129, !8130}
!8129 = !DILocalVariable(name: "key", scope: !8127, file: !4847, line: 44, type: !32)
!8130 = !DILocalVariable(name: "tmp", scope: !8127, file: !4847, line: 53, type: !32)
!8131 = distinct !DILocation(line: 564, column: 10, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8122, file: !1314, line: 563, column: 49)
!8133 = !{i64 2327304}
!8134 = !DILocation(line: 0, scope: !8127, inlinedAt: !8131)
!8135 = !DILocation(line: 565, column: 42, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8132, file: !1314, line: 565, column: 8)
!8137 = !DILocation(line: 565, column: 8, scope: !8136)
!8138 = !DILocation(line: 565, column: 8, scope: !8132)
!8139 = !DILocalVariable(name: "key", arg: 1, scope: !8140, file: !4847, line: 84, type: !32)
!8140 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4847, file: !4847, line: 84, type: !4858, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8141)
!8141 = !{!8139}
!8142 = !DILocation(line: 0, scope: !8140, inlinedAt: !8143)
!8143 = distinct !DILocation(line: 568, column: 4, scope: !8132)
!8144 = !DILocation(line: 95, column: 2, scope: !8140, inlinedAt: !8143)
!8145 = !{i64 2328121}
!8146 = !DILocation(line: 569, column: 3, scope: !8132)
!8147 = distinct !{!8147, !8120, !8148}
!8148 = !DILocation(line: 570, column: 2, scope: !8112)
!8149 = !DILocation(line: 592, column: 33, scope: !8112)
!8150 = !DILocation(line: 592, column: 2, scope: !8112)
!8151 = !DILocation(line: 0, scope: !8140, inlinedAt: !8152)
!8152 = distinct !DILocation(line: 593, column: 2, scope: !8112)
!8153 = !DILocation(line: 95, column: 2, scope: !8140, inlinedAt: !8152)
!8154 = !DILocation(line: 594, column: 1, scope: !8112)
!8155 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1314, file: !1314, line: 596, type: !1238, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8156)
!8156 = !{!8157, !8158, !8159}
!8157 = !DILocalVariable(name: "dev", arg: 1, scope: !8155, file: !1314, line: 596, type: !1217)
!8158 = !DILocalVariable(name: "config", scope: !8155, file: !1314, line: 598, type: !8092)
!8159 = !DILocalVariable(name: "err", scope: !8155, file: !1314, line: 599, type: !121)
!8160 = !DILocation(line: 0, scope: !8155)
!8161 = !DILocation(line: 598, column: 48, scope: !8155)
!8162 = !DILocation(line: 606, column: 40, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8155, file: !1314, line: 606, column: 6)
!8164 = !DILocation(line: 606, column: 6, scope: !8163)
!8165 = !DILocation(line: 606, column: 6, scope: !8155)
!8166 = !DILocation(line: 610, column: 39, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8155, file: !1314, line: 610, column: 6)
!8168 = !DILocation(line: 610, column: 6, scope: !8167)
!8169 = !DILocation(line: 610, column: 6, scope: !8155)
!8170 = !DILocation(line: 614, column: 39, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8155, file: !1314, line: 614, column: 6)
!8172 = !DILocation(line: 614, column: 6, scope: !8171)
!8173 = !DILocation(line: 614, column: 6, scope: !8155)
!8174 = !DILocation(line: 619, column: 40, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8155, file: !1314, line: 619, column: 6)
!8176 = !DILocation(line: 619, column: 6, scope: !8175)
!8177 = !DILocation(line: 619, column: 6, scope: !8155)
!8178 = !DILocation(line: 623, column: 10, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8155, file: !1314, line: 623, column: 6)
!8180 = !DILocation(line: 623, column: 6, scope: !8155)
!8181 = !DILocation(line: 624, column: 34, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8179, file: !1314, line: 623, column: 24)
!8183 = !DILocation(line: 624, column: 3, scope: !8182)
!8184 = !DILocation(line: 625, column: 2, scope: !8182)
!8185 = !DILocation(line: 632, column: 10, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8155, file: !1314, line: 632, column: 6)
!8187 = !DILocation(line: 632, column: 6, scope: !8155)
!8188 = !DILocation(line: 633, column: 34, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8186, file: !1314, line: 632, column: 32)
!8190 = !DILocation(line: 633, column: 3, scope: !8189)
!8191 = !DILocation(line: 634, column: 2, scope: !8189)
!8192 = !DILocation(line: 636, column: 10, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8155, file: !1314, line: 636, column: 6)
!8194 = !DILocation(line: 636, column: 6, scope: !8155)
!8195 = !DILocation(line: 637, column: 33, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8193, file: !1314, line: 636, column: 31)
!8197 = !DILocation(line: 637, column: 3, scope: !8196)
!8198 = !DILocation(line: 638, column: 2, scope: !8196)
!8199 = !DILocation(line: 640, column: 10, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8155, file: !1314, line: 640, column: 6)
!8201 = !DILocation(line: 640, column: 6, scope: !8155)
!8202 = !DILocation(line: 641, column: 33, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8200, file: !1314, line: 640, column: 32)
!8204 = !DILocation(line: 641, column: 3, scope: !8203)
!8205 = !DILocation(line: 642, column: 2, scope: !8203)
!8206 = !DILocation(line: 646, column: 32, scope: !8155)
!8207 = !DILocation(line: 646, column: 2, scope: !8155)
!8208 = !DILocation(line: 648, column: 2, scope: !8155)
!8209 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1314, file: !1314, line: 419, type: !1242, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8210)
!8210 = !{!8211, !8212, !8213, !8214, !8216, !8217, !8218, !8219}
!8211 = !DILocalVariable(name: "dev", arg: 1, scope: !8209, file: !1314, line: 419, type: !1217)
!8212 = !DILocalVariable(name: "cfg", arg: 2, scope: !8209, file: !1314, line: 420, type: !1244)
!8213 = !DILocalVariable(name: "config", scope: !8209, file: !1314, line: 422, type: !8092)
!8214 = !DILocalVariable(name: "data", scope: !8209, file: !1314, line: 423, type: !8215)
!8215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 32)
!8216 = !DILocalVariable(name: "parity", scope: !8209, file: !1314, line: 424, type: !5289)
!8217 = !DILocalVariable(name: "stopbits", scope: !8209, file: !1314, line: 425, type: !5289)
!8218 = !DILocalVariable(name: "databits", scope: !8209, file: !1314, line: 426, type: !5289)
!8219 = !DILocalVariable(name: "flowctrl", scope: !8209, file: !1314, line: 428, type: !5289)
!8220 = !DILocation(line: 0, scope: !8209)
!8221 = !DILocation(line: 422, column: 48, scope: !8209)
!8222 = !DILocation(line: 423, column: 38, scope: !8209)
!8223 = !DILocation(line: 424, column: 56, scope: !8209)
!8224 = !DILocation(line: 424, column: 51, scope: !8209)
!8225 = !DILocation(line: 424, column: 26, scope: !8209)
!8226 = !DILocation(line: 425, column: 60, scope: !8209)
!8227 = !DILocation(line: 425, column: 55, scope: !8209)
!8228 = !DILocation(line: 425, column: 28, scope: !8209)
!8229 = !DILocation(line: 426, column: 60, scope: !8209)
!8230 = !DILocation(line: 426, column: 55, scope: !8209)
!8231 = !DILocation(line: 426, column: 28, scope: !8209)
!8232 = !DILocation(line: 428, column: 58, scope: !8209)
!8233 = !DILocation(line: 428, column: 53, scope: !8209)
!8234 = !DILocation(line: 428, column: 28, scope: !8209)
!8235 = !DILocation(line: 431, column: 44, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8209, file: !1314, line: 431, column: 6)
!8237 = !DILocation(line: 438, column: 22, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8209, file: !1314, line: 437, column: 6)
!8239 = !DILocation(line: 437, column: 6, scope: !8209)
!8240 = !DILocation(line: 448, column: 6, scope: !8209)
!8241 = !DILocation(line: 465, column: 47, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8209, file: !1314, line: 465, column: 6)
!8243 = !DILocation(line: 475, column: 21, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8209, file: !1314, line: 475, column: 6)
!8245 = !DILocation(line: 475, column: 6, scope: !8209)
!8246 = !DILocation(line: 476, column: 8, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8248, file: !1314, line: 476, column: 7)
!8248 = distinct !DILexicalBlock(scope: !8244, file: !1314, line: 475, column: 49)
!8249 = !DILocation(line: 477, column: 34, scope: !8247)
!8250 = !DILocation(line: 476, column: 7, scope: !8248)
!8251 = !DILocation(line: 482, column: 27, scope: !8209)
!8252 = !DILocation(line: 482, column: 2, scope: !8209)
!8253 = !DILocation(line: 484, column: 16, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8209, file: !1314, line: 484, column: 6)
!8255 = !DILocation(line: 484, column: 13, scope: !8254)
!8256 = !DILocation(line: 484, column: 6, scope: !8209)
!8257 = !DILocation(line: 485, column: 3, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8254, file: !1314, line: 484, column: 44)
!8259 = !DILocation(line: 486, column: 2, scope: !8258)
!8260 = !DILocation(line: 488, column: 18, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8209, file: !1314, line: 488, column: 6)
!8262 = !DILocation(line: 488, column: 15, scope: !8261)
!8263 = !DILocation(line: 488, column: 6, scope: !8209)
!8264 = !DILocation(line: 489, column: 3, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8261, file: !1314, line: 488, column: 48)
!8266 = !DILocation(line: 490, column: 2, scope: !8265)
!8267 = !DILocation(line: 492, column: 18, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8209, file: !1314, line: 492, column: 6)
!8269 = !DILocation(line: 492, column: 15, scope: !8268)
!8270 = !DILocation(line: 492, column: 6, scope: !8209)
!8271 = !DILocation(line: 493, column: 3, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8268, file: !1314, line: 492, column: 48)
!8273 = !DILocation(line: 494, column: 2, scope: !8272)
!8274 = !DILocation(line: 496, column: 18, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8209, file: !1314, line: 496, column: 6)
!8276 = !DILocation(line: 496, column: 15, scope: !8275)
!8277 = !DILocation(line: 496, column: 6, scope: !8209)
!8278 = !DILocation(line: 497, column: 3, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8275, file: !1314, line: 496, column: 46)
!8280 = !DILocation(line: 498, column: 2, scope: !8279)
!8281 = !DILocation(line: 500, column: 11, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8209, file: !1314, line: 500, column: 6)
!8283 = !DILocation(line: 500, column: 29, scope: !8282)
!8284 = !DILocation(line: 500, column: 20, scope: !8282)
!8285 = !DILocation(line: 500, column: 6, scope: !8209)
!8286 = !DILocation(line: 501, column: 3, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8282, file: !1314, line: 500, column: 40)
!8288 = !DILocation(line: 502, column: 26, scope: !8287)
!8289 = !DILocation(line: 502, column: 19, scope: !8287)
!8290 = !DILocation(line: 503, column: 2, scope: !8287)
!8291 = !DILocation(line: 505, column: 26, scope: !8209)
!8292 = !DILocation(line: 505, column: 2, scope: !8209)
!8293 = !DILocation(line: 506, column: 2, scope: !8209)
!8294 = !DILocation(line: 507, column: 1, scope: !8209)
!8295 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1314, file: !1314, line: 509, type: !1255, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8296)
!8296 = !{!8297, !8298, !8299}
!8297 = !DILocalVariable(name: "dev", arg: 1, scope: !8295, file: !1314, line: 509, type: !1217)
!8298 = !DILocalVariable(name: "cfg", arg: 2, scope: !8295, file: !1314, line: 510, type: !1257)
!8299 = !DILocalVariable(name: "data", scope: !8295, file: !1314, line: 512, type: !8215)
!8300 = !DILocation(line: 0, scope: !8295)
!8301 = !DILocation(line: 512, column: 38, scope: !8295)
!8302 = !DILocation(line: 514, column: 24, scope: !8295)
!8303 = !DILocation(line: 514, column: 7, scope: !8295)
!8304 = !DILocation(line: 514, column: 16, scope: !8295)
!8305 = !DILocation(line: 515, column: 41, scope: !8295)
!8306 = !{i32 0, i32 1537}
!8307 = !DILocation(line: 515, column: 16, scope: !8295)
!8308 = !DILocation(line: 515, column: 7, scope: !8295)
!8309 = !DILocation(line: 515, column: 14, scope: !8295)
!8310 = !DILocation(line: 517, column: 3, scope: !8295)
!8311 = !{i32 0, i32 12289}
!8312 = !DILocation(line: 516, column: 19, scope: !8295)
!8313 = !DILocation(line: 516, column: 7, scope: !8295)
!8314 = !DILocation(line: 516, column: 17, scope: !8295)
!8315 = !DILocation(line: 519, column: 3, scope: !8295)
!8316 = !DILocation(line: 519, column: 33, scope: !8295)
!8317 = !DILocation(line: 518, column: 19, scope: !8295)
!8318 = !DILocation(line: 518, column: 7, scope: !8295)
!8319 = !DILocation(line: 518, column: 17, scope: !8295)
!8320 = !DILocation(line: 521, column: 3, scope: !8295)
!8321 = !{i32 0, i32 769}
!8322 = !DILocation(line: 520, column: 19, scope: !8295)
!8323 = !DILocation(line: 520, column: 7, scope: !8295)
!8324 = !DILocation(line: 520, column: 17, scope: !8295)
!8325 = !DILocation(line: 522, column: 2, scope: !8295)
!8326 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1314, file: !1314, line: 205, type: !8327, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8329)
!8327 = !DISubroutineType(types: !8328)
!8328 = !{!121, !1217}
!8329 = !{!8330, !8331}
!8330 = !DILocalVariable(name: "dev", arg: 1, scope: !8326, file: !1314, line: 205, type: !1217)
!8331 = !DILocalVariable(name: "config", scope: !8326, file: !1314, line: 207, type: !8092)
!8332 = !DILocation(line: 0, scope: !8326)
!8333 = !DILocation(line: 207, column: 48, scope: !8326)
!8334 = !DILocation(line: 209, column: 36, scope: !8326)
!8335 = !DILocation(line: 209, column: 9, scope: !8326)
!8336 = !DILocation(line: 209, column: 2, scope: !8326)
!8337 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1314, file: !1314, line: 270, type: !8338, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8340)
!8338 = !DISubroutineType(types: !8339)
!8339 = !{!1183, !121}
!8340 = !{!8341}
!8341 = !DILocalVariable(name: "parity", arg: 1, scope: !8337, file: !1314, line: 270, type: !121)
!8342 = !DILocation(line: 0, scope: !8337)
!8343 = !DILocation(line: 272, column: 2, scope: !8337)
!8344 = !DILocation(line: 281, column: 1, scope: !8337)
!8345 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1314, file: !1314, line: 220, type: !8327, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8346)
!8346 = !{!8347, !8348}
!8347 = !DILocalVariable(name: "dev", arg: 1, scope: !8345, file: !1314, line: 220, type: !1217)
!8348 = !DILocalVariable(name: "config", scope: !8345, file: !1314, line: 222, type: !8092)
!8349 = !DILocation(line: 0, scope: !8345)
!8350 = !DILocation(line: 222, column: 48, scope: !8345)
!8351 = !DILocation(line: 224, column: 44, scope: !8345)
!8352 = !DILocation(line: 224, column: 9, scope: !8345)
!8353 = !DILocation(line: 224, column: 2, scope: !8345)
!8354 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1314, file: !1314, line: 304, type: !8355, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8357)
!8355 = !DISubroutineType(types: !8356)
!8356 = !{!1197, !121}
!8357 = !{!8358}
!8358 = !DILocalVariable(name: "sb", arg: 1, scope: !8354, file: !1314, line: 304, type: !121)
!8359 = !DILocation(line: 0, scope: !8354)
!8360 = !DILocation(line: 306, column: 2, scope: !8354)
!8361 = !DILocation(line: 0, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8354, file: !1314, line: 306, column: 14)
!8363 = !DILocation(line: 323, column: 1, scope: !8354)
!8364 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1314, file: !1314, line: 235, type: !8327, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8365)
!8365 = !{!8366, !8367}
!8366 = !DILocalVariable(name: "dev", arg: 1, scope: !8364, file: !1314, line: 235, type: !1217)
!8367 = !DILocalVariable(name: "config", scope: !8364, file: !1314, line: 237, type: !8092)
!8368 = !DILocation(line: 0, scope: !8364)
!8369 = !DILocation(line: 237, column: 48, scope: !8364)
!8370 = !DILocation(line: 239, column: 39, scope: !8364)
!8371 = !DILocation(line: 239, column: 9, scope: !8364)
!8372 = !DILocation(line: 239, column: 2, scope: !8364)
!8373 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1314, file: !1314, line: 355, type: !8374, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8376)
!8374 = !DISubroutineType(types: !8375)
!8375 = !{!1190, !121, !121}
!8376 = !{!8377, !8378}
!8377 = !DILocalVariable(name: "db", arg: 1, scope: !8373, file: !1314, line: 355, type: !121)
!8378 = !DILocalVariable(name: "p", arg: 2, scope: !8373, file: !1314, line: 356, type: !121)
!8379 = !DILocation(line: 0, scope: !8373)
!8380 = !DILocation(line: 358, column: 2, scope: !8373)
!8381 = !DILocation(line: 384, column: 1, scope: !8373)
!8382 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1314, file: !1314, line: 250, type: !8327, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8383)
!8383 = !{!8384, !8385}
!8384 = !DILocalVariable(name: "dev", arg: 1, scope: !8382, file: !1314, line: 250, type: !1217)
!8385 = !DILocalVariable(name: "config", scope: !8382, file: !1314, line: 252, type: !8092)
!8386 = !DILocation(line: 0, scope: !8382)
!8387 = !DILocation(line: 252, column: 48, scope: !8382)
!8388 = !DILocation(line: 254, column: 40, scope: !8382)
!8389 = !DILocation(line: 254, column: 9, scope: !8382)
!8390 = !DILocation(line: 254, column: 2, scope: !8382)
!8391 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1314, file: !1314, line: 409, type: !8392, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8394)
!8392 = !DISubroutineType(types: !8393)
!8393 = !{!1203, !121}
!8394 = !{!8395}
!8395 = !DILocalVariable(name: "fc", arg: 1, scope: !8391, file: !1314, line: 409, type: !121)
!8396 = !DILocation(line: 0, scope: !8391)
!8397 = !DILocation(line: 411, column: 9, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8391, file: !1314, line: 411, column: 6)
!8399 = !DILocation(line: 416, column: 1, scope: !8391)
!8400 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8401, file: !8401, line: 967, type: !8402, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8404)
!8401 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8402 = !DISubroutineType(types: !8403)
!8403 = !{!121, !1258}
!8404 = !{!8405}
!8405 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8400, file: !8401, line: 967, type: !1258)
!8406 = !DILocation(line: 0, scope: !8400)
!8407 = !DILocation(line: 969, column: 21, scope: !8400)
!8408 = !DILocation(line: 969, column: 3, scope: !8400)
!8409 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8401, file: !8401, line: 601, type: !8402, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8410)
!8410 = !{!8411}
!8411 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8409, file: !8401, line: 601, type: !1258)
!8412 = !DILocation(line: 0, scope: !8409)
!8413 = !DILocation(line: 603, column: 21, scope: !8409)
!8414 = !DILocation(line: 603, column: 3, scope: !8409)
!8415 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8401, file: !8401, line: 820, type: !8402, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8416)
!8416 = !{!8417}
!8417 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8415, file: !8401, line: 820, type: !1258)
!8418 = !DILocation(line: 0, scope: !8415)
!8419 = !DILocation(line: 822, column: 21, scope: !8415)
!8420 = !DILocation(line: 822, column: 3, scope: !8415)
!8421 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8401, file: !8401, line: 547, type: !8402, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8422)
!8422 = !{!8423}
!8423 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8421, file: !8401, line: 547, type: !1258)
!8424 = !DILocation(line: 0, scope: !8421)
!8425 = !DILocation(line: 549, column: 21, scope: !8421)
!8426 = !DILocation(line: 549, column: 3, scope: !8421)
!8427 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1314, file: !1314, line: 257, type: !8428, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8430)
!8428 = !DISubroutineType(types: !8429)
!8429 = !{!121, !1183}
!8430 = !{!8431}
!8431 = !DILocalVariable(name: "parity", arg: 1, scope: !8427, file: !1314, line: 257, type: !1183)
!8432 = !DILocation(line: 0, scope: !8427)
!8433 = !DILocation(line: 259, column: 2, scope: !8427)
!8434 = !DILocation(line: 268, column: 1, scope: !8427)
!8435 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1314, file: !1314, line: 283, type: !8436, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8438)
!8436 = !DISubroutineType(types: !8437)
!8437 = !{!121, !1197}
!8438 = !{!8439}
!8439 = !DILocalVariable(name: "sb", arg: 1, scope: !8435, file: !1314, line: 283, type: !1197)
!8440 = !DILocation(line: 0, scope: !8435)
!8441 = !DILocation(line: 285, column: 2, scope: !8435)
!8442 = !DILocation(line: 0, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8435, file: !1314, line: 285, column: 14)
!8444 = !DILocation(line: 302, column: 1, scope: !8435)
!8445 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1314, file: !1314, line: 325, type: !8446, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8448)
!8446 = !DISubroutineType(types: !8447)
!8447 = !{!121, !1190, !1183}
!8448 = !{!8449, !8450}
!8449 = !DILocalVariable(name: "db", arg: 1, scope: !8445, file: !1314, line: 325, type: !1190)
!8450 = !DILocalVariable(name: "p", arg: 2, scope: !8445, file: !1314, line: 326, type: !1183)
!8451 = !DILocation(line: 0, scope: !8445)
!8452 = !DILocation(line: 328, column: 2, scope: !8445)
!8453 = !DILocation(line: 353, column: 1, scope: !8445)
!8454 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1314, file: !1314, line: 393, type: !8455, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8457)
!8455 = !DISubroutineType(types: !8456)
!8456 = !{!121, !1203}
!8457 = !{!8458}
!8458 = !DILocalVariable(name: "fc", arg: 1, scope: !8454, file: !1314, line: 393, type: !1203)
!8459 = !DILocation(line: 0, scope: !8454)
!8460 = !DILocation(line: 395, column: 9, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8454, file: !1314, line: 395, column: 6)
!8462 = !DILocation(line: 400, column: 1, scope: !8454)
!8463 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8401, file: !8401, line: 424, type: !8464, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8466)
!8464 = !DISubroutineType(types: !8465)
!8465 = !{null, !1258}
!8466 = !{!8467}
!8467 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8463, file: !8401, line: 424, type: !1258)
!8468 = !DILocation(line: 0, scope: !8463)
!8469 = !DILocation(line: 426, column: 3, scope: !8463)
!8470 = !DILocation(line: 427, column: 1, scope: !8463)
!8471 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1314, file: !1314, line: 197, type: !8472, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8474)
!8472 = !DISubroutineType(types: !8473)
!8473 = !{null, !1217, !121}
!8474 = !{!8475, !8476, !8477}
!8475 = !DILocalVariable(name: "dev", arg: 1, scope: !8471, file: !1314, line: 197, type: !1217)
!8476 = !DILocalVariable(name: "parity", arg: 2, scope: !8471, file: !1314, line: 198, type: !121)
!8477 = !DILocalVariable(name: "config", scope: !8471, file: !1314, line: 200, type: !8092)
!8478 = !DILocation(line: 0, scope: !8471)
!8479 = !DILocation(line: 200, column: 48, scope: !8471)
!8480 = !DILocation(line: 202, column: 29, scope: !8471)
!8481 = !DILocation(line: 202, column: 2, scope: !8471)
!8482 = !DILocation(line: 203, column: 1, scope: !8471)
!8483 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1314, file: !1314, line: 212, type: !8472, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8484)
!8484 = !{!8485, !8486, !8487}
!8485 = !DILocalVariable(name: "dev", arg: 1, scope: !8483, file: !1314, line: 212, type: !1217)
!8486 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8483, file: !1314, line: 213, type: !121)
!8487 = !DILocalVariable(name: "config", scope: !8483, file: !1314, line: 215, type: !8092)
!8488 = !DILocation(line: 0, scope: !8483)
!8489 = !DILocation(line: 215, column: 48, scope: !8483)
!8490 = !DILocation(line: 217, column: 37, scope: !8483)
!8491 = !DILocation(line: 217, column: 2, scope: !8483)
!8492 = !DILocation(line: 218, column: 1, scope: !8483)
!8493 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1314, file: !1314, line: 227, type: !8472, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8494)
!8494 = !{!8495, !8496, !8497}
!8495 = !DILocalVariable(name: "dev", arg: 1, scope: !8493, file: !1314, line: 227, type: !1217)
!8496 = !DILocalVariable(name: "databits", arg: 2, scope: !8493, file: !1314, line: 228, type: !121)
!8497 = !DILocalVariable(name: "config", scope: !8493, file: !1314, line: 230, type: !8092)
!8498 = !DILocation(line: 0, scope: !8493)
!8499 = !DILocation(line: 230, column: 48, scope: !8493)
!8500 = !DILocation(line: 232, column: 32, scope: !8493)
!8501 = !DILocation(line: 232, column: 2, scope: !8493)
!8502 = !DILocation(line: 233, column: 1, scope: !8493)
!8503 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1314, file: !1314, line: 242, type: !8472, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8504)
!8504 = !{!8505, !8506, !8507}
!8505 = !DILocalVariable(name: "dev", arg: 1, scope: !8503, file: !1314, line: 242, type: !1217)
!8506 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !8503, file: !1314, line: 243, type: !121)
!8507 = !DILocalVariable(name: "config", scope: !8503, file: !1314, line: 245, type: !8092)
!8508 = !DILocation(line: 0, scope: !8503)
!8509 = !DILocation(line: 245, column: 48, scope: !8503)
!8510 = !DILocation(line: 247, column: 33, scope: !8503)
!8511 = !DILocation(line: 247, column: 2, scope: !8503)
!8512 = !DILocation(line: 248, column: 1, scope: !8503)
!8513 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1314, file: !1314, line: 107, type: !8472, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8514)
!8514 = !{!8515, !8516, !8517, !8518, !8519}
!8515 = !DILocalVariable(name: "dev", arg: 1, scope: !8513, file: !1314, line: 107, type: !1217)
!8516 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !8513, file: !1314, line: 107, type: !121)
!8517 = !DILocalVariable(name: "config", scope: !8513, file: !1314, line: 109, type: !8092)
!8518 = !DILocalVariable(name: "data", scope: !8513, file: !1314, line: 110, type: !8215)
!8519 = !DILocalVariable(name: "clock_rate", scope: !8513, file: !1314, line: 112, type: !121)
!8520 = !DILocation(line: 0, scope: !8513)
!8521 = !DILocation(line: 109, column: 48, scope: !8513)
!8522 = !DILocation(line: 110, column: 38, scope: !8513)
!8523 = !DILocation(line: 112, column: 2, scope: !8513)
!8524 = !DILocation(line: 123, column: 36, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8526, file: !1314, line: 123, column: 7)
!8526 = distinct !DILexicalBlock(scope: !8527, file: !1314, line: 122, column: 9)
!8527 = distinct !DILexicalBlock(scope: !8513, file: !1314, line: 115, column: 6)
!8528 = !DILocation(line: 124, column: 42, scope: !8525)
!8529 = !DILocation(line: 123, column: 7, scope: !8525)
!8530 = !DILocation(line: 125, column: 22, scope: !8525)
!8531 = !DILocation(line: 123, column: 7, scope: !8526)
!8532 = !DILocation(line: 176, column: 36, scope: !8513)
!8533 = !DILocation(line: 176, column: 3, scope: !8513)
!8534 = !DILocation(line: 179, column: 32, scope: !8513)
!8535 = !DILocation(line: 180, column: 10, scope: !8513)
!8536 = !DILocation(line: 179, column: 3, scope: !8513)
!8537 = !DILocation(line: 195, column: 1, scope: !8513)
!8538 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8401, file: !8401, line: 410, type: !8464, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8539)
!8539 = !{!8540}
!8540 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8538, file: !8401, line: 410, type: !1258)
!8541 = !DILocation(line: 0, scope: !8538)
!8542 = !DILocation(line: 412, column: 3, scope: !8538)
!8543 = !DILocation(line: 413, column: 1, scope: !8538)
!8544 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !671, file: !671, line: 216, type: !1291, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8545)
!8545 = !{!8546, !8547, !8548, !8549}
!8546 = !DILocalVariable(name: "dev", arg: 1, scope: !8544, file: !671, line: 216, type: !1217)
!8547 = !DILocalVariable(name: "sys", arg: 2, scope: !8544, file: !671, line: 217, type: !767)
!8548 = !DILocalVariable(name: "rate", arg: 3, scope: !8544, file: !671, line: 218, type: !723)
!8549 = !DILocalVariable(name: "api", scope: !8544, file: !671, line: 220, type: !1269)
!8550 = !DILocation(line: 0, scope: !8544)
!8551 = !DILocation(line: 221, column: 49, scope: !8544)
!8552 = !DILocation(line: 223, column: 11, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8544, file: !671, line: 223, column: 6)
!8554 = !DILocation(line: 223, column: 20, scope: !8553)
!8555 = !DILocation(line: 223, column: 6, scope: !8544)
!8556 = !DILocation(line: 227, column: 9, scope: !8544)
!8557 = !DILocation(line: 227, column: 2, scope: !8544)
!8558 = !DILocation(line: 228, column: 1, scope: !8544)
!8559 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8401, file: !8401, line: 615, type: !8560, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8562)
!8560 = !DISubroutineType(types: !8561)
!8561 = !{null, !1258, !121}
!8562 = !{!8563, !8564}
!8563 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8559, file: !8401, line: 615, type: !1258)
!8564 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !8559, file: !8401, line: 615, type: !121)
!8565 = !DILocation(line: 0, scope: !8559)
!8566 = !DILocation(line: 617, column: 3, scope: !8559)
!8567 = !DILocation(line: 618, column: 1, scope: !8559)
!8568 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8401, file: !8401, line: 1020, type: !8569, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8571)
!8569 = !DISubroutineType(types: !8570)
!8570 = !{null, !1258, !121, !121, !121}
!8571 = !{!8572, !8573, !8574, !8575}
!8572 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8568, file: !8401, line: 1020, type: !1258)
!8573 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !8568, file: !8401, line: 1020, type: !121)
!8574 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !8568, file: !8401, line: 1020, type: !121)
!8575 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !8568, file: !8401, line: 1021, type: !121)
!8576 = !DILocation(line: 0, scope: !8568)
!8577 = !DILocation(line: 1029, column: 30, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8579, file: !8401, line: 1028, column: 3)
!8579 = distinct !DILexicalBlock(scope: !8568, file: !8401, line: 1023, column: 7)
!8580 = !DILocation(line: 1029, column: 19, scope: !8578)
!8581 = !DILocation(line: 1029, column: 13, scope: !8578)
!8582 = !DILocation(line: 1029, column: 17, scope: !8578)
!8583 = !DILocation(line: 1031, column: 1, scope: !8568)
!8584 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8401, file: !8401, line: 949, type: !8560, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8585)
!8585 = !{!8586, !8587}
!8586 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8584, file: !8401, line: 949, type: !1258)
!8587 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !8584, file: !8401, line: 949, type: !121)
!8588 = !DILocation(line: 0, scope: !8584)
!8589 = !DILocation(line: 951, column: 3, scope: !8584)
!8590 = !DILocation(line: 952, column: 1, scope: !8584)
!8591 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8401, file: !8401, line: 588, type: !8560, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8592)
!8592 = !{!8593, !8594}
!8593 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8591, file: !8401, line: 588, type: !1258)
!8594 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8591, file: !8401, line: 588, type: !121)
!8595 = !DILocation(line: 0, scope: !8591)
!8596 = !DILocation(line: 590, column: 3, scope: !8591)
!8597 = !DILocation(line: 591, column: 1, scope: !8591)
!8598 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8401, file: !8401, line: 805, type: !8560, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8599)
!8599 = !{!8600, !8601}
!8600 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8598, file: !8401, line: 805, type: !1258)
!8601 = !DILocalVariable(name: "StopBits", arg: 2, scope: !8598, file: !8401, line: 805, type: !121)
!8602 = !DILocation(line: 0, scope: !8598)
!8603 = !DILocation(line: 807, column: 3, scope: !8598)
!8604 = !DILocation(line: 808, column: 1, scope: !8598)
!8605 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8401, file: !8401, line: 532, type: !8560, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8606)
!8606 = !{!8607, !8608}
!8607 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8605, file: !8401, line: 532, type: !1258)
!8608 = !DILocalVariable(name: "Parity", arg: 2, scope: !8605, file: !8401, line: 532, type: !121)
!8609 = !DILocation(line: 0, scope: !8605)
!8610 = !DILocation(line: 534, column: 3, scope: !8605)
!8611 = !DILocation(line: 535, column: 1, scope: !8605)
!8612 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8401, file: !8401, line: 1770, type: !8402, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8613)
!8613 = !{!8614}
!8614 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8612, file: !8401, line: 1770, type: !1258)
!8615 = !DILocation(line: 0, scope: !8612)
!8616 = !DILocation(line: 1772, column: 11, scope: !8612)
!8617 = !DILocation(line: 1772, column: 46, scope: !8612)
!8618 = !DILocation(line: 1772, column: 3, scope: !8612)
!8619 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8401, file: !8401, line: 1737, type: !8402, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8620)
!8620 = !{!8621}
!8621 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8619, file: !8401, line: 1737, type: !1258)
!8622 = !DILocation(line: 0, scope: !8619)
!8623 = !DILocation(line: 1739, column: 11, scope: !8619)
!8624 = !DILocation(line: 1739, column: 3, scope: !8619)
!8625 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8401, file: !8401, line: 1748, type: !8402, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8626)
!8626 = !{!8627}
!8627 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8625, file: !8401, line: 1748, type: !1258)
!8628 = !DILocation(line: 0, scope: !8625)
!8629 = !DILocation(line: 1750, column: 11, scope: !8625)
!8630 = !DILocation(line: 1750, column: 45, scope: !8625)
!8631 = !DILocation(line: 1750, column: 3, scope: !8625)
!8632 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8401, file: !8401, line: 1827, type: !8402, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8633)
!8633 = !{!8634}
!8634 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8632, file: !8401, line: 1827, type: !1258)
!8635 = !DILocation(line: 0, scope: !8632)
!8636 = !DILocation(line: 1829, column: 11, scope: !8632)
!8637 = !DILocation(line: 1829, column: 46, scope: !8632)
!8638 = !DILocation(line: 1829, column: 3, scope: !8632)
!8639 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8401, file: !8401, line: 1992, type: !8464, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8640)
!8640 = !{!8641}
!8641 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8639, file: !8401, line: 1992, type: !1258)
!8642 = !DILocation(line: 0, scope: !8639)
!8643 = !DILocation(line: 1994, column: 3, scope: !8639)
!8644 = !DILocation(line: 1995, column: 1, scope: !8639)
!8645 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8401, file: !8401, line: 1934, type: !8464, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8646)
!8646 = !{!8647, !8648}
!8647 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8645, file: !8401, line: 1934, type: !1258)
!8648 = !DILocalVariable(name: "tmpreg", scope: !8645, file: !8401, line: 1936, type: !120)
!8649 = !DILocation(line: 0, scope: !8645)
!8650 = !DILocation(line: 1936, column: 3, scope: !8645)
!8651 = !DILocation(line: 1936, column: 17, scope: !8645)
!8652 = !DILocation(line: 1937, column: 20, scope: !8645)
!8653 = !DILocation(line: 1937, column: 10, scope: !8645)
!8654 = !DILocation(line: 1938, column: 10, scope: !8645)
!8655 = !DILocation(line: 1939, column: 20, scope: !8645)
!8656 = !DILocation(line: 1939, column: 10, scope: !8645)
!8657 = !DILocation(line: 1940, column: 10, scope: !8645)
!8658 = !DILocation(line: 1941, column: 1, scope: !8645)
!8659 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8401, file: !8401, line: 1877, type: !8464, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8660)
!8660 = !{!8661, !8662}
!8661 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8659, file: !8401, line: 1877, type: !1258)
!8662 = !DILocalVariable(name: "tmpreg", scope: !8659, file: !8401, line: 1879, type: !120)
!8663 = !DILocation(line: 0, scope: !8659)
!8664 = !DILocation(line: 1879, column: 3, scope: !8659)
!8665 = !DILocation(line: 1879, column: 17, scope: !8659)
!8666 = !DILocation(line: 1880, column: 20, scope: !8659)
!8667 = !DILocation(line: 1880, column: 10, scope: !8659)
!8668 = !DILocation(line: 1881, column: 10, scope: !8659)
!8669 = !DILocation(line: 1882, column: 20, scope: !8659)
!8670 = !DILocation(line: 1882, column: 10, scope: !8659)
!8671 = !DILocation(line: 1883, column: 10, scope: !8659)
!8672 = !DILocation(line: 1884, column: 1, scope: !8659)
!8673 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8401, file: !8401, line: 1896, type: !8464, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8674)
!8674 = !{!8675, !8676}
!8675 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8673, file: !8401, line: 1896, type: !1258)
!8676 = !DILocalVariable(name: "tmpreg", scope: !8673, file: !8401, line: 1898, type: !120)
!8677 = !DILocation(line: 0, scope: !8673)
!8678 = !DILocation(line: 1898, column: 3, scope: !8673)
!8679 = !DILocation(line: 1898, column: 17, scope: !8673)
!8680 = !DILocation(line: 1899, column: 20, scope: !8673)
!8681 = !DILocation(line: 1899, column: 10, scope: !8673)
!8682 = !DILocation(line: 1900, column: 10, scope: !8673)
!8683 = !DILocation(line: 1901, column: 20, scope: !8673)
!8684 = !DILocation(line: 1901, column: 10, scope: !8673)
!8685 = !DILocation(line: 1902, column: 10, scope: !8673)
!8686 = !DILocation(line: 1903, column: 1, scope: !8673)
!8687 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8401, file: !8401, line: 1915, type: !8464, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8688)
!8688 = !{!8689, !8690}
!8689 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8687, file: !8401, line: 1915, type: !1258)
!8690 = !DILocalVariable(name: "tmpreg", scope: !8687, file: !8401, line: 1917, type: !120)
!8691 = !DILocation(line: 0, scope: !8687)
!8692 = !DILocation(line: 1917, column: 3, scope: !8687)
!8693 = !DILocation(line: 1917, column: 17, scope: !8687)
!8694 = !DILocation(line: 1918, column: 20, scope: !8687)
!8695 = !DILocation(line: 1918, column: 10, scope: !8687)
!8696 = !DILocation(line: 1919, column: 10, scope: !8687)
!8697 = !DILocation(line: 1920, column: 20, scope: !8687)
!8698 = !DILocation(line: 1920, column: 10, scope: !8687)
!8699 = !DILocation(line: 1921, column: 10, scope: !8687)
!8700 = !DILocation(line: 1922, column: 1, scope: !8687)
!8701 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8401, file: !8401, line: 1814, type: !8402, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8702)
!8702 = !{!8703}
!8703 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8701, file: !8401, line: 1814, type: !1258)
!8704 = !DILocation(line: 0, scope: !8701)
!8705 = !DILocation(line: 1816, column: 11, scope: !8701)
!8706 = !DILocation(line: 1816, column: 46, scope: !8701)
!8707 = !DILocation(line: 1816, column: 3, scope: !8701)
!8708 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8401, file: !8401, line: 2426, type: !8709, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8711)
!8709 = !DISubroutineType(types: !8710)
!8710 = !{null, !1258, !154}
!8711 = !{!8712, !8713}
!8712 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8708, file: !8401, line: 2426, type: !1258)
!8713 = !DILocalVariable(name: "Value", arg: 2, scope: !8708, file: !8401, line: 2426, type: !154)
!8714 = !DILocation(line: 0, scope: !8708)
!8715 = !DILocation(line: 2428, column: 16, scope: !8708)
!8716 = !DILocation(line: 2428, column: 11, scope: !8708)
!8717 = !DILocation(line: 2428, column: 14, scope: !8708)
!8718 = !DILocation(line: 2429, column: 1, scope: !8708)
!8719 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8401, file: !8401, line: 1792, type: !8402, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8720)
!8720 = !{!8721}
!8721 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8719, file: !8401, line: 1792, type: !1258)
!8722 = !DILocation(line: 0, scope: !8719)
!8723 = !DILocation(line: 1794, column: 11, scope: !8719)
!8724 = !DILocation(line: 1794, column: 47, scope: !8719)
!8725 = !DILocation(line: 1794, column: 3, scope: !8719)
!8726 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8401, file: !8401, line: 2403, type: !8727, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8729)
!8727 = !DISubroutineType(types: !8728)
!8728 = !{!154, !1258}
!8729 = !{!8730}
!8730 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8726, file: !8401, line: 2403, type: !1258)
!8731 = !DILocation(line: 0, scope: !8726)
!8732 = !DILocation(line: 2405, column: 20, scope: !8726)
!8733 = !DILocation(line: 2405, column: 10, scope: !8726)
!8734 = !DILocation(line: 2405, column: 3, scope: !8726)
!8735 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1314, file: !1314, line: 1583, type: !1238, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8736)
!8736 = !{!8737, !8738, !8739, !8740, !8741, !8742}
!8737 = !DILocalVariable(name: "dev", arg: 1, scope: !8735, file: !1314, line: 1583, type: !1217)
!8738 = !DILocalVariable(name: "config", scope: !8735, file: !1314, line: 1585, type: !8092)
!8739 = !DILocalVariable(name: "data", scope: !8735, file: !1314, line: 1586, type: !8215)
!8740 = !DILocalVariable(name: "ll_parity", scope: !8735, file: !1314, line: 1587, type: !121)
!8741 = !DILocalVariable(name: "ll_datawidth", scope: !8735, file: !1314, line: 1588, type: !121)
!8742 = !DILocalVariable(name: "err", scope: !8735, file: !1314, line: 1589, type: !103)
!8743 = !DILocation(line: 0, scope: !8735)
!8744 = !DILocation(line: 1585, column: 48, scope: !8735)
!8745 = !DILocation(line: 1586, column: 38, scope: !8735)
!8746 = !DILocation(line: 1591, column: 2, scope: !8735)
!8747 = !DILocation(line: 1593, column: 29, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8735, file: !1314, line: 1593, column: 6)
!8749 = !DILocation(line: 1593, column: 7, scope: !8748)
!8750 = !DILocation(line: 1593, column: 6, scope: !8735)
!8751 = !DILocation(line: 1599, column: 31, scope: !8735)
!8752 = !DILocation(line: 1599, column: 71, scope: !8735)
!8753 = !DILocation(line: 1599, column: 8, scope: !8735)
!8754 = !DILocation(line: 1600, column: 10, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8735, file: !1314, line: 1600, column: 6)
!8756 = !DILocation(line: 1600, column: 6, scope: !8735)
!8757 = !DILocation(line: 1616, column: 36, scope: !8735)
!8758 = !DILocation(line: 1616, column: 8, scope: !8735)
!8759 = !DILocation(line: 1617, column: 10, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8735, file: !1314, line: 1617, column: 6)
!8761 = !DILocation(line: 1617, column: 6, scope: !8735)
!8762 = !DILocation(line: 1621, column: 27, scope: !8735)
!8763 = !DILocation(line: 1621, column: 2, scope: !8735)
!8764 = !DILocation(line: 1624, column: 40, scope: !8735)
!8765 = !DILocation(line: 1624, column: 2, scope: !8735)
!8766 = !DILocation(line: 1630, column: 14, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8735, file: !1314, line: 1630, column: 6)
!8768 = !DILocation(line: 1630, column: 6, scope: !8735)
!8769 = !DILocation(line: 1638, column: 2, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8771, file: !1314, line: 1634, column: 34)
!8771 = distinct !DILexicalBlock(scope: !8767, file: !1314, line: 1634, column: 13)
!8772 = !DILocation(line: 0, scope: !8767)
!8773 = !DILocation(line: 1649, column: 35, scope: !8735)
!8774 = !DILocation(line: 1649, column: 2, scope: !8735)
!8775 = !DILocation(line: 1654, column: 14, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8735, file: !1314, line: 1654, column: 6)
!8777 = !DILocation(line: 1654, column: 6, scope: !8735)
!8778 = !DILocation(line: 1655, column: 3, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8776, file: !1314, line: 1654, column: 31)
!8780 = !DILocation(line: 1656, column: 2, scope: !8779)
!8781 = !DILocation(line: 1659, column: 37, scope: !8735)
!8782 = !DILocation(line: 1659, column: 2, scope: !8735)
!8783 = !DILocation(line: 1662, column: 14, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8735, file: !1314, line: 1662, column: 6)
!8785 = !DILocation(line: 1662, column: 6, scope: !8735)
!8786 = !DILocation(line: 1663, column: 37, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8784, file: !1314, line: 1662, column: 27)
!8788 = !DILocation(line: 1663, column: 3, scope: !8787)
!8789 = !DILocation(line: 1664, column: 2, scope: !8787)
!8790 = !DILocation(line: 1684, column: 26, scope: !8735)
!8791 = !DILocation(line: 1684, column: 2, scope: !8735)
!8792 = !DILocation(line: 1722, column: 2, scope: !8735)
!8793 = !DILocation(line: 1724, column: 1, scope: !8735)
!8794 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1314, file: !1314, line: 651, type: !8795, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8797)
!8795 = !DISubroutineType(types: !8796)
!8796 = !{null, !1217}
!8797 = !{!8798, !8799, !8800}
!8798 = !DILocalVariable(name: "dev", arg: 1, scope: !8794, file: !1314, line: 651, type: !1217)
!8799 = !DILocalVariable(name: "data", scope: !8794, file: !1314, line: 653, type: !8215)
!8800 = !DILocalVariable(name: "clk", scope: !8794, file: !1314, line: 654, type: !8801)
!8801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1217)
!8802 = !DILocation(line: 0, scope: !8794)
!8803 = !DILocation(line: 653, column: 38, scope: !8794)
!8804 = !DILocation(line: 656, column: 8, scope: !8794)
!8805 = !DILocation(line: 656, column: 14, scope: !8794)
!8806 = !DILocation(line: 657, column: 1, scope: !8794)
!8807 = distinct !DISubprogram(name: "device_is_ready", scope: !3042, file: !3042, line: 47, type: !8808, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8810)
!8808 = !DISubroutineType(types: !8809)
!8809 = !{!157, !1217}
!8810 = !{!8811}
!8811 = !DILocalVariable(name: "dev", arg: 1, scope: !8807, file: !3042, line: 47, type: !1217)
!8812 = !DILocation(line: 0, scope: !8807)
!8813 = !DILocation(line: 55, column: 2, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8807, file: !3042, line: 55, column: 2)
!8815 = !{i64 2155368742}
!8816 = !DILocation(line: 56, column: 9, scope: !8807)
!8817 = !DILocation(line: 56, column: 2, scope: !8807)
!8818 = distinct !DISubprogram(name: "clock_control_on", scope: !671, file: !671, line: 123, type: !1276, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8819)
!8819 = !{!8820, !8821, !8822}
!8820 = !DILocalVariable(name: "dev", arg: 1, scope: !8818, file: !671, line: 123, type: !1217)
!8821 = !DILocalVariable(name: "sys", arg: 2, scope: !8818, file: !671, line: 124, type: !767)
!8822 = !DILocalVariable(name: "api", scope: !8818, file: !671, line: 126, type: !1269)
!8823 = !DILocation(line: 0, scope: !8818)
!8824 = !DILocation(line: 127, column: 49, scope: !8818)
!8825 = !DILocation(line: 129, column: 14, scope: !8818)
!8826 = !DILocation(line: 129, column: 9, scope: !8818)
!8827 = !DILocation(line: 129, column: 2, scope: !8818)
!8828 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1365, file: !1365, line: 342, type: !8829, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8831)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{!103, !1415, !154}
!8831 = !{!8832, !8833, !8834, !8835}
!8832 = !DILocalVariable(name: "config", arg: 1, scope: !8828, file: !1365, line: 342, type: !1415)
!8833 = !DILocalVariable(name: "id", arg: 2, scope: !8828, file: !1365, line: 343, type: !154)
!8834 = !DILocalVariable(name: "ret", scope: !8828, file: !1365, line: 345, type: !103)
!8835 = !DILocalVariable(name: "state", scope: !8828, file: !1365, line: 346, type: !1368)
!8836 = !DILocation(line: 0, scope: !8828)
!8837 = !DILocation(line: 346, column: 2, scope: !8828)
!8838 = !DILocation(line: 348, column: 8, scope: !8828)
!8839 = !DILocation(line: 349, column: 10, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8828, file: !1365, line: 349, column: 6)
!8841 = !DILocation(line: 349, column: 6, scope: !8828)
!8842 = !DILocation(line: 353, column: 44, scope: !8828)
!8843 = !DILocation(line: 353, column: 9, scope: !8828)
!8844 = !DILocation(line: 353, column: 2, scope: !8828)
!8845 = !DILocation(line: 354, column: 1, scope: !8828)
!8846 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8401, file: !8401, line: 497, type: !8560, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8847)
!8847 = !{!8848, !8849, !8850}
!8848 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8846, file: !8401, line: 497, type: !1258)
!8849 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !8846, file: !8401, line: 497, type: !121)
!8850 = !DILocalVariable(name: "val", scope: !8851, file: !8401, line: 499, type: !121)
!8851 = distinct !DILexicalBlock(scope: !8846, file: !8401, line: 499, column: 3)
!8852 = !DILocation(line: 0, scope: !8846)
!8853 = !DILocation(line: 499, column: 3, scope: !8851)
!8854 = !DILocalVariable(name: "addr", arg: 1, scope: !8855, file: !5021, line: 476, type: !1310)
!8855 = distinct !DISubprogram(name: "__LDREXW", scope: !5021, file: !5021, line: 476, type: !8856, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8858)
!8856 = !DISubroutineType(types: !8857)
!8857 = !{!121, !1310}
!8858 = !{!8854, !8859}
!8859 = !DILocalVariable(name: "result", scope: !8855, file: !5021, line: 478, type: !121)
!8860 = !DILocation(line: 0, scope: !8855, inlinedAt: !8861)
!8861 = distinct !DILocation(line: 499, column: 3, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8851, file: !8401, line: 499, column: 3)
!8863 = !DILocation(line: 480, column: 4, scope: !8855, inlinedAt: !8861)
!8864 = !{i64 3758061}
!8865 = !DILocation(line: 499, column: 3, scope: !8862)
!8866 = !DILocation(line: 0, scope: !8851)
!8867 = !DILocalVariable(name: "value", arg: 1, scope: !8868, file: !5021, line: 527, type: !121)
!8868 = distinct !DISubprogram(name: "__STREXW", scope: !5021, file: !5021, line: 527, type: !8869, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8871)
!8869 = !DISubroutineType(types: !8870)
!8870 = !{!121, !121, !1310}
!8871 = !{!8867, !8872, !8873}
!8872 = !DILocalVariable(name: "addr", arg: 2, scope: !8868, file: !5021, line: 527, type: !1310)
!8873 = !DILocalVariable(name: "result", scope: !8868, file: !5021, line: 529, type: !121)
!8874 = !DILocation(line: 0, scope: !8868, inlinedAt: !8875)
!8875 = distinct !DILocation(line: 499, column: 3, scope: !8851)
!8876 = !DILocation(line: 531, column: 4, scope: !8868, inlinedAt: !8875)
!8877 = !{i64 3759497}
!8878 = distinct !{!8878, !8853, !8853}
!8879 = !DILocation(line: 500, column: 1, scope: !8846)
!8880 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8401, file: !8401, line: 850, type: !8569, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8881)
!8881 = !{!8882, !8883, !8884, !8885}
!8882 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8880, file: !8401, line: 850, type: !1258)
!8883 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8880, file: !8401, line: 850, type: !121)
!8884 = !DILocalVariable(name: "Parity", arg: 3, scope: !8880, file: !8401, line: 850, type: !121)
!8885 = !DILocalVariable(name: "StopBits", arg: 4, scope: !8880, file: !8401, line: 851, type: !121)
!8886 = !DILocation(line: 0, scope: !8880)
!8887 = !DILocation(line: 853, column: 3, scope: !8880)
!8888 = !DILocation(line: 854, column: 3, scope: !8880)
!8889 = !DILocation(line: 855, column: 1, scope: !8880)
!8890 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8401, file: !8401, line: 1337, type: !8464, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8891)
!8891 = !{!8892}
!8892 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8890, file: !8401, line: 1337, type: !1258)
!8893 = !DILocation(line: 0, scope: !8890)
!8894 = !DILocation(line: 1339, column: 3, scope: !8890)
!8895 = !DILocation(line: 1340, column: 1, scope: !8890)
!8896 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1365, file: !1365, line: 316, type: !8897, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8899)
!8897 = !DISubroutineType(types: !8898)
!8898 = !{!103, !1415, !1368}
!8899 = !{!8900, !8901, !8902}
!8900 = !DILocalVariable(name: "config", arg: 1, scope: !8896, file: !1365, line: 317, type: !1415)
!8901 = !DILocalVariable(name: "state", arg: 2, scope: !8896, file: !1365, line: 318, type: !1368)
!8902 = !DILocalVariable(name: "reg", scope: !8896, file: !1365, line: 320, type: !22)
!8903 = !DILocation(line: 0, scope: !8896)
!8904 = !DILocation(line: 329, column: 39, scope: !8896)
!8905 = !DILocation(line: 329, column: 52, scope: !8896)
!8906 = !DILocation(line: 329, column: 9, scope: !8896)
!8907 = !DILocation(line: 329, column: 2, scope: !8896)
!8908 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !8808, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1173, retainedNodes: !8909)
!8909 = !{!8910}
!8910 = !DILocalVariable(name: "dev", arg: 1, scope: !8908, file: !141, line: 730, type: !1217)
!8911 = !DILocation(line: 0, scope: !8908)
!8912 = !DILocation(line: 732, column: 9, scope: !8908)
!8913 = !DILocation(line: 732, column: 2, scope: !8908)
!8914 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1532, file: !1532, line: 270, type: !1538, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8915)
!8915 = !{!8916}
!8916 = !DILocalVariable(name: "dev", arg: 1, scope: !8914, file: !1532, line: 270, type: !1540)
!8917 = !DILocation(line: 0, scope: !8914)
!8918 = !DILocation(line: 274, column: 2, scope: !8914)
!8919 = !DILocation(line: 275, column: 12, scope: !8914)
!8920 = !DILocation(line: 276, column: 15, scope: !8914)
!8921 = !DILocation(line: 277, column: 16, scope: !8914)
!8922 = !DILocation(line: 278, column: 15, scope: !8914)
!8923 = !DILocation(line: 279, column: 16, scope: !8914)
!8924 = !DILocation(line: 282, column: 2, scope: !8914)
!8925 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5055, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8926)
!8926 = !{!8927, !8928}
!8927 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8925, file: !356, line: 1814, type: !621)
!8928 = !DILocalVariable(name: "priority", arg: 2, scope: !8925, file: !356, line: 1814, type: !121)
!8929 = !DILocation(line: 0, scope: !8925)
!8930 = !DILocation(line: 1822, column: 46, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8932, file: !356, line: 1821, column: 3)
!8932 = distinct !DILexicalBlock(scope: !8925, file: !356, line: 1816, column: 7)
!8933 = !DILocation(line: 1824, column: 1, scope: !8925)
!8934 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1532, file: !1532, line: 118, type: !4958, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8935)
!8935 = !{!8936, !8937}
!8936 = !DILocalVariable(name: "arg", arg: 1, scope: !8934, file: !1532, line: 118, type: !102)
!8937 = !DILocalVariable(name: "dticks", scope: !8934, file: !1532, line: 121, type: !121)
!8938 = !DILocation(line: 0, scope: !8934)
!8939 = !DILocation(line: 124, column: 2, scope: !8934)
!8940 = !DILocation(line: 129, column: 17, scope: !8934)
!8941 = !DILocation(line: 129, column: 14, scope: !8934)
!8942 = !DILocation(line: 130, column: 15, scope: !8934)
!8943 = !DILocation(line: 145, column: 27, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8945, file: !1532, line: 132, column: 16)
!8945 = distinct !DILexicalBlock(scope: !8934, file: !1532, line: 132, column: 6)
!8946 = !DILocation(line: 145, column: 25, scope: !8944)
!8947 = !DILocation(line: 145, column: 45, scope: !8944)
!8948 = !DILocation(line: 146, column: 30, scope: !8944)
!8949 = !DILocation(line: 146, column: 20, scope: !8944)
!8950 = !DILocation(line: 147, column: 3, scope: !8944)
!8951 = !DILocation(line: 151, column: 2, scope: !8934)
!8952 = !DILocation(line: 152, column: 1, scope: !8934)
!8953 = distinct !DISubprogram(name: "elapsed", scope: !1532, file: !1532, line: 85, type: !5102, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8954)
!8954 = !{!8955, !8956, !8957}
!8955 = !DILocalVariable(name: "val1", scope: !8953, file: !1532, line: 87, type: !121)
!8956 = !DILocalVariable(name: "ctrl", scope: !8953, file: !1532, line: 88, type: !121)
!8957 = !DILocalVariable(name: "val2", scope: !8953, file: !1532, line: 89, type: !121)
!8958 = !DILocation(line: 87, column: 27, scope: !8953)
!8959 = !DILocation(line: 0, scope: !8953)
!8960 = !DILocation(line: 88, column: 27, scope: !8953)
!8961 = !DILocation(line: 89, column: 27, scope: !8953)
!8962 = !DILocation(line: 105, column: 12, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8953, file: !1532, line: 105, column: 6)
!8964 = !DILocation(line: 106, column: 6, scope: !8963)
!8965 = !DILocation(line: 107, column: 16, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8963, file: !1532, line: 106, column: 24)
!8967 = !DILocation(line: 111, column: 18, scope: !8966)
!8968 = !DILocation(line: 112, column: 2, scope: !8966)
!8969 = !DILocation(line: 114, column: 20, scope: !8953)
!8970 = !DILocation(line: 114, column: 30, scope: !8953)
!8971 = !DILocation(line: 114, column: 28, scope: !8953)
!8972 = !DILocation(line: 114, column: 2, scope: !8953)
!8973 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1532, file: !1532, line: 154, type: !8974, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !8976)
!8974 = !DISubroutineType(types: !8975)
!8975 = !{null, !595, !157}
!8976 = !{!8977, !8978, !8979, !8980, !8981, !8982, !8983, !8988, !8989}
!8977 = !DILocalVariable(name: "ticks", arg: 1, scope: !8973, file: !1532, line: 154, type: !595)
!8978 = !DILocalVariable(name: "idle", arg: 2, scope: !8973, file: !1532, line: 154, type: !157)
!8979 = !DILocalVariable(name: "delay", scope: !8973, file: !1532, line: 169, type: !121)
!8980 = !DILocalVariable(name: "val1", scope: !8973, file: !1532, line: 170, type: !121)
!8981 = !DILocalVariable(name: "val2", scope: !8973, file: !1532, line: 170, type: !121)
!8982 = !DILocalVariable(name: "last_load_", scope: !8973, file: !1532, line: 171, type: !121)
!8983 = !DILocalVariable(name: "key", scope: !8973, file: !1532, line: 176, type: !8984)
!8984 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !8985)
!8985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !8986)
!8986 = !{!8987}
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8985, file: !321, line: 33, baseType: !103, size: 32)
!8988 = !DILocalVariable(name: "pending", scope: !8973, file: !1532, line: 178, type: !121)
!8989 = !DILocalVariable(name: "unannounced", scope: !8973, file: !1532, line: 185, type: !121)
!8990 = !DILocation(line: 0, scope: !8973)
!8991 = !DILocation(line: 162, column: 49, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8973, file: !1532, line: 162, column: 6)
!8993 = !DILocation(line: 163, column: 17, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8992, file: !1532, line: 162, column: 78)
!8995 = !DILocation(line: 164, column: 13, scope: !8994)
!8996 = !DILocation(line: 165, column: 3, scope: !8994)
!8997 = !DILocation(line: 171, column: 24, scope: !8973)
!8998 = !DILocation(line: 173, column: 10, scope: !8973)
!8999 = !DILocation(line: 174, column: 10, scope: !8973)
!9000 = !DILocalVariable(name: "l", arg: 1, scope: !9001, file: !321, line: 136, type: !9004)
!9001 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !9002, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9005)
!9002 = !DISubroutineType(types: !9003)
!9003 = !{!8984, !9004}
!9004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!9005 = !{!9000, !9006}
!9006 = !DILocalVariable(name: "k", scope: !9001, file: !321, line: 139, type: !8984)
!9007 = !DILocation(line: 0, scope: !9001, inlinedAt: !9008)
!9008 = distinct !DILocation(line: 176, column: 25, scope: !8973)
!9009 = !DILocation(line: 55, column: 2, scope: !9010, inlinedAt: !9014)
!9010 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4847, file: !4847, line: 42, type: !4848, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9011)
!9011 = !{!9012, !9013}
!9012 = !DILocalVariable(name: "key", scope: !9010, file: !4847, line: 44, type: !32)
!9013 = !DILocalVariable(name: "tmp", scope: !9010, file: !4847, line: 53, type: !32)
!9014 = distinct !DILocation(line: 145, column: 10, scope: !9001, inlinedAt: !9008)
!9015 = !{i64 2278913}
!9016 = !DILocation(line: 0, scope: !9010, inlinedAt: !9014)
!9017 = !DILocation(line: 178, column: 21, scope: !8973)
!9018 = !DILocation(line: 180, column: 18, scope: !8973)
!9019 = !DILocation(line: 182, column: 14, scope: !8973)
!9020 = !DILocation(line: 183, column: 15, scope: !8973)
!9021 = !DILocation(line: 185, column: 39, scope: !8973)
!9022 = !DILocation(line: 185, column: 37, scope: !8973)
!9023 = !DILocation(line: 187, column: 27, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !8973, file: !1532, line: 187, column: 6)
!9025 = !DILocation(line: 187, column: 6, scope: !8973)
!9026 = !DILocation(line: 202, column: 27, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9024, file: !1532, line: 195, column: 9)
!9028 = !DILocation(line: 202, column: 48, scope: !9027)
!9029 = !DILocation(line: 203, column: 9, scope: !9027)
!9030 = !DILocation(line: 204, column: 11, scope: !9027)
!9031 = !DILocation(line: 205, column: 13, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9027, file: !1532, line: 205, column: 7)
!9033 = !DILocation(line: 205, column: 7, scope: !9027)
!9034 = !DILocation(line: 0, scope: !9024)
!9035 = !DILocation(line: 212, column: 18, scope: !8973)
!9036 = !DILocation(line: 214, column: 28, scope: !8973)
!9037 = !DILocation(line: 214, column: 16, scope: !8973)
!9038 = !DILocation(line: 215, column: 15, scope: !8973)
!9039 = !DILocation(line: 227, column: 11, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !8973, file: !1532, line: 227, column: 6)
!9041 = !DILocation(line: 227, column: 6, scope: !8973)
!9042 = !DILocation(line: 228, column: 15, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9040, file: !1532, line: 227, column: 19)
!9044 = !DILocation(line: 228, column: 38, scope: !9043)
!9045 = !DILocation(line: 228, column: 24, scope: !9043)
!9046 = !DILocation(line: 229, column: 2, scope: !9043)
!9047 = !DILocation(line: 230, column: 24, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9040, file: !1532, line: 229, column: 9)
!9049 = !DILocation(line: 230, column: 15, scope: !9048)
!9050 = !DILocation(line: 0, scope: !9040)
!9051 = !DILocalVariable(name: "key", arg: 2, scope: !9052, file: !321, line: 190, type: !8984)
!9052 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !9053, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9055)
!9053 = !DISubroutineType(types: !9054)
!9054 = !{null, !9004, !8984}
!9055 = !{!9056, !9051}
!9056 = !DILocalVariable(name: "l", arg: 1, scope: !9052, file: !321, line: 189, type: !9004)
!9057 = !DILocation(line: 0, scope: !9052, inlinedAt: !9058)
!9058 = distinct !DILocation(line: 232, column: 2, scope: !8973)
!9059 = !DILocalVariable(name: "key", arg: 1, scope: !9060, file: !4847, line: 84, type: !32)
!9060 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4847, file: !4847, line: 84, type: !4858, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9061)
!9061 = !{!9059}
!9062 = !DILocation(line: 0, scope: !9060, inlinedAt: !9063)
!9063 = distinct !DILocation(line: 215, column: 2, scope: !9052, inlinedAt: !9058)
!9064 = !DILocation(line: 95, column: 2, scope: !9060, inlinedAt: !9063)
!9065 = !{i64 2279730}
!9066 = !DILocation(line: 234, column: 1, scope: !8973)
!9067 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1532, file: !1532, line: 236, type: !5102, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9068)
!9068 = !{!9069, !9070}
!9069 = !DILocalVariable(name: "key", scope: !9067, file: !1532, line: 242, type: !8984)
!9070 = !DILocalVariable(name: "cyc", scope: !9067, file: !1532, line: 243, type: !121)
!9071 = !DILocation(line: 0, scope: !9001, inlinedAt: !9072)
!9072 = distinct !DILocation(line: 242, column: 25, scope: !9067)
!9073 = !DILocation(line: 55, column: 2, scope: !9010, inlinedAt: !9074)
!9074 = distinct !DILocation(line: 145, column: 10, scope: !9001, inlinedAt: !9072)
!9075 = !DILocation(line: 0, scope: !9010, inlinedAt: !9074)
!9076 = !DILocation(line: 0, scope: !9067)
!9077 = !DILocation(line: 243, column: 17, scope: !9067)
!9078 = !DILocation(line: 243, column: 29, scope: !9067)
!9079 = !DILocation(line: 243, column: 27, scope: !9067)
!9080 = !DILocation(line: 243, column: 43, scope: !9067)
!9081 = !DILocation(line: 243, column: 41, scope: !9067)
!9082 = !DILocation(line: 0, scope: !9052, inlinedAt: !9083)
!9083 = distinct !DILocation(line: 245, column: 2, scope: !9067)
!9084 = !DILocation(line: 0, scope: !9060, inlinedAt: !9085)
!9085 = distinct !DILocation(line: 215, column: 2, scope: !9052, inlinedAt: !9083)
!9086 = !DILocation(line: 95, column: 2, scope: !9060, inlinedAt: !9085)
!9087 = !DILocation(line: 246, column: 13, scope: !9067)
!9088 = !DILocation(line: 246, column: 2, scope: !9067)
!9089 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1532, file: !1532, line: 249, type: !5102, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9090)
!9090 = !{!9091, !9092}
!9091 = !DILocalVariable(name: "key", scope: !9089, file: !1532, line: 251, type: !8984)
!9092 = !DILocalVariable(name: "ret", scope: !9089, file: !1532, line: 252, type: !121)
!9093 = !DILocation(line: 0, scope: !9001, inlinedAt: !9094)
!9094 = distinct !DILocation(line: 251, column: 25, scope: !9089)
!9095 = !DILocation(line: 55, column: 2, scope: !9010, inlinedAt: !9096)
!9096 = distinct !DILocation(line: 145, column: 10, scope: !9001, inlinedAt: !9094)
!9097 = !DILocation(line: 0, scope: !9010, inlinedAt: !9096)
!9098 = !DILocation(line: 0, scope: !9089)
!9099 = !DILocation(line: 252, column: 17, scope: !9089)
!9100 = !DILocation(line: 252, column: 29, scope: !9089)
!9101 = !DILocation(line: 252, column: 27, scope: !9089)
!9102 = !DILocation(line: 0, scope: !9052, inlinedAt: !9103)
!9103 = distinct !DILocation(line: 254, column: 2, scope: !9089)
!9104 = !DILocation(line: 0, scope: !9060, inlinedAt: !9105)
!9105 = distinct !DILocation(line: 215, column: 2, scope: !9052, inlinedAt: !9103)
!9106 = !DILocation(line: 95, column: 2, scope: !9060, inlinedAt: !9105)
!9107 = !DILocation(line: 255, column: 2, scope: !9089)
!9108 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1532, file: !1532, line: 258, type: !2909, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !322)
!9109 = !DILocation(line: 260, column: 6, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9108, file: !1532, line: 260, column: 6)
!9111 = !DILocation(line: 260, column: 16, scope: !9110)
!9112 = !DILocation(line: 260, column: 6, scope: !9108)
!9113 = !DILocation(line: 261, column: 17, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9110, file: !1532, line: 260, column: 34)
!9115 = !DILocation(line: 262, column: 2, scope: !9114)
!9116 = !DILocation(line: 263, column: 1, scope: !9108)
!9117 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1532, file: !1532, line: 265, type: !2909, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !322)
!9118 = !DILocation(line: 267, column: 16, scope: !9117)
!9119 = !DILocation(line: 268, column: 1, scope: !9117)
!9120 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9121, file: !9121, line: 9, type: !9122, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2737, retainedNodes: !9145)
!9121 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9122 = !DISubroutineType(types: !9123)
!9123 = !{!103, !9124, !154, !9144}
!9124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9125, size: 32)
!9125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9126)
!9126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1365, line: 60, size: 64, elements: !9127)
!9127 = !{!9128, !9143}
!9128 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9126, file: !1365, line: 69, baseType: !9129, size: 32)
!9129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9130, size: 32)
!9130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9131)
!9131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1365, line: 50, size: 64, elements: !9132)
!9132 = !{!9133, !9141, !9142}
!9133 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9131, file: !1365, line: 52, baseType: !9134, size: 32)
!9134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9135, size: 32)
!9135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9136)
!9136 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1376, line: 37, baseType: !9137)
!9137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1376, line: 32, size: 64, elements: !9138)
!9138 = !{!9139, !9140}
!9139 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9137, file: !1376, line: 34, baseType: !121, size: 32)
!9140 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9137, file: !1376, line: 36, baseType: !121, size: 32, offset: 32)
!9141 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9131, file: !1365, line: 54, baseType: !154, size: 8, offset: 32)
!9142 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9131, file: !1365, line: 56, baseType: !154, size: 8, offset: 40)
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9126, file: !1365, line: 71, baseType: !154, size: 8, offset: 32)
!9144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9129, size: 32)
!9145 = !{!9146, !9147, !9148}
!9146 = !DILocalVariable(name: "config", arg: 1, scope: !9120, file: !9121, line: 9, type: !9124)
!9147 = !DILocalVariable(name: "id", arg: 2, scope: !9120, file: !9121, line: 9, type: !154)
!9148 = !DILocalVariable(name: "state", arg: 3, scope: !9120, file: !9121, line: 10, type: !9144)
!9149 = !DILocation(line: 0, scope: !9120)
!9150 = !DILocation(line: 12, column: 20, scope: !9120)
!9151 = !DILocation(line: 13, column: 27, scope: !9120)
!9152 = !DILocation(line: 13, column: 42, scope: !9120)
!9153 = !DILocation(line: 13, column: 19, scope: !9120)
!9154 = !DILocation(line: 13, column: 16, scope: !9120)
!9155 = !DILocation(line: 13, column: 2, scope: !9120)
!9156 = distinct !{!9156, !9155, !9157}
!9157 = !DILocation(line: 19, column: 2, scope: !9120)
!9158 = !DILocation(line: 14, column: 23, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9160, file: !9121, line: 14, column: 7)
!9160 = distinct !DILexicalBlock(scope: !9120, file: !9121, line: 13, column: 54)
!9161 = !DILocation(line: 14, column: 10, scope: !9159)
!9162 = !DILocation(line: 18, column: 11, scope: !9160)
!9163 = !DILocation(line: 14, column: 7, scope: !9160)
!9164 = !DILocation(line: 22, column: 1, scope: !9120)
!9165 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1649, file: !1649, line: 193, type: !9166, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !9175)
!9166 = !DISubroutineType(types: !9167)
!9167 = !{!103, !9168, !154, !22}
!9168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9169, size: 32)
!9169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9170)
!9170 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1376, line: 37, baseType: !9171)
!9171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1376, line: 32, size: 64, elements: !9172)
!9172 = !{!9173, !9174}
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9171, file: !1376, line: 34, baseType: !121, size: 32)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9171, file: !1376, line: 36, baseType: !121, size: 32, offset: 32)
!9175 = !{!9176, !9177, !9178, !9179, !9180, !9181, !9182, !9183, !9185}
!9176 = !DILocalVariable(name: "pins", arg: 1, scope: !9165, file: !1649, line: 193, type: !9168)
!9177 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9165, file: !1649, line: 193, type: !154)
!9178 = !DILocalVariable(name: "reg", arg: 3, scope: !9165, file: !1649, line: 194, type: !22)
!9179 = !DILocalVariable(name: "pin", scope: !9165, file: !1649, line: 196, type: !121)
!9180 = !DILocalVariable(name: "mux", scope: !9165, file: !1649, line: 196, type: !121)
!9181 = !DILocalVariable(name: "pin_cgf", scope: !9165, file: !1649, line: 197, type: !121)
!9182 = !DILocalVariable(name: "ret", scope: !9165, file: !1649, line: 198, type: !103)
!9183 = !DILocalVariable(name: "i", scope: !9184, file: !1649, line: 209, type: !154)
!9184 = distinct !DILexicalBlock(scope: !9165, file: !1649, line: 209, column: 2)
!9185 = !DILocalVariable(name: "gpio_out", scope: !9186, file: !1649, line: 239, type: !121)
!9186 = distinct !DILexicalBlock(scope: !9187, file: !1649, line: 238, column: 55)
!9187 = distinct !DILexicalBlock(scope: !9188, file: !1649, line: 238, column: 14)
!9188 = distinct !DILexicalBlock(scope: !9189, file: !1649, line: 236, column: 14)
!9189 = distinct !DILexicalBlock(scope: !9190, file: !1649, line: 234, column: 7)
!9190 = distinct !DILexicalBlock(scope: !9191, file: !1649, line: 209, column: 41)
!9191 = distinct !DILexicalBlock(scope: !9184, file: !1649, line: 209, column: 2)
!9192 = !DILocation(line: 0, scope: !9165)
!9193 = !DILocation(line: 0, scope: !9184)
!9194 = !DILocation(line: 209, column: 25, scope: !9191)
!9195 = !DILocation(line: 209, column: 2, scope: !9184)
!9196 = distinct !{!9196, !9195, !9197}
!9197 = !DILocation(line: 259, column: 2, scope: !9184)
!9198 = !DILocation(line: 210, column: 17, scope: !9190)
!9199 = !DILocation(line: 234, column: 7, scope: !9189)
!9200 = !DILocation(line: 234, column: 33, scope: !9189)
!9201 = !DILocation(line: 234, column: 7, scope: !9190)
!9202 = !DILocation(line: 235, column: 22, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9189, file: !1649, line: 234, column: 49)
!9204 = !DILocation(line: 235, column: 29, scope: !9203)
!9205 = !DILocation(line: 236, column: 3, scope: !9203)
!9206 = !DILocation(line: 236, column: 14, scope: !9189)
!9207 = !DILocation(line: 239, column: 32, scope: !9186)
!9208 = !DILocation(line: 0, scope: !9186)
!9209 = !DILocation(line: 241, column: 8, scope: !9186)
!9210 = !DILocation(line: 246, column: 3, scope: !9186)
!9211 = !DILocation(line: 252, column: 9, scope: !9190)
!9212 = !DILocation(line: 255, column: 9, scope: !9190)
!9213 = !DILocation(line: 256, column: 11, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9190, file: !1649, line: 256, column: 7)
!9215 = !DILocation(line: 209, column: 37, scope: !9191)
!9216 = !DILocation(line: 256, column: 7, scope: !9190)
!9217 = !DILocation(line: 262, column: 1, scope: !9165)
!9218 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1649, file: !1649, line: 176, type: !9219, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !9221)
!9219 = !DISubroutineType(types: !9220)
!9220 = !{!103, !121, !121, !121}
!9221 = !{!9222, !9223, !9224, !9225}
!9222 = !DILocalVariable(name: "pin", arg: 1, scope: !9218, file: !1649, line: 176, type: !121)
!9223 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !9218, file: !1649, line: 176, type: !121)
!9224 = !DILocalVariable(name: "pin_func", arg: 3, scope: !9218, file: !1649, line: 176, type: !121)
!9225 = !DILocalVariable(name: "port_device", scope: !9218, file: !1649, line: 178, type: !1579)
!9226 = !DILocation(line: 0, scope: !9218)
!9227 = !DILocation(line: 180, column: 22, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9218, file: !1649, line: 180, column: 6)
!9229 = !DILocation(line: 180, column: 6, scope: !9218)
!9230 = !DILocation(line: 180, column: 6, scope: !9228)
!9231 = !DILocation(line: 184, column: 16, scope: !9218)
!9232 = !DILocation(line: 186, column: 19, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9218, file: !1649, line: 186, column: 6)
!9234 = !DILocation(line: 186, column: 28, scope: !9233)
!9235 = !DILocation(line: 186, column: 33, scope: !9233)
!9236 = !DILocation(line: 186, column: 6, scope: !9218)
!9237 = !DILocation(line: 190, column: 43, scope: !9218)
!9238 = !DILocation(line: 190, column: 9, scope: !9218)
!9239 = !DILocation(line: 190, column: 2, scope: !9218)
!9240 = !DILocation(line: 191, column: 1, scope: !9218)
!9241 = distinct !DISubprogram(name: "device_is_ready", scope: !3042, file: !3042, line: 47, type: !9242, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !9244)
!9242 = !DISubroutineType(types: !9243)
!9243 = !{!157, !1579}
!9244 = !{!9245}
!9245 = !DILocalVariable(name: "dev", arg: 1, scope: !9241, file: !3042, line: 47, type: !1579)
!9246 = !DILocation(line: 0, scope: !9241)
!9247 = !DILocation(line: 55, column: 2, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9241, file: !3042, line: 55, column: 2)
!9249 = !{i64 2149512922}
!9250 = !DILocation(line: 56, column: 9, scope: !9241)
!9251 = !DILocation(line: 56, column: 2, scope: !9241)
!9252 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !141, file: !141, line: 730, type: !9242, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1567, retainedNodes: !9253)
!9253 = !{!9254}
!9254 = !DILocalVariable(name: "dev", arg: 1, scope: !9252, file: !141, line: 730, type: !1579)
!9255 = !DILocation(line: 0, scope: !9252)
!9256 = !DILocation(line: 732, column: 9, scope: !9252)
!9257 = !DILocation(line: 732, column: 2, scope: !9252)
!9258 = distinct !DISubprogram(name: "SystemInit", scope: !1701, file: !1701, line: 167, type: !2909, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !322)
!9259 = !DILocation(line: 182, column: 1, scope: !9258)
!9260 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1701, file: !1701, line: 220, type: !2909, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !9261)
!9261 = !{!9262, !9263, !9264, !9265, !9266}
!9262 = !DILocalVariable(name: "tmp", scope: !9260, file: !1701, line: 222, type: !121)
!9263 = !DILocalVariable(name: "pllvco", scope: !9260, file: !1701, line: 222, type: !121)
!9264 = !DILocalVariable(name: "pllp", scope: !9260, file: !1701, line: 222, type: !121)
!9265 = !DILocalVariable(name: "pllsource", scope: !9260, file: !1701, line: 222, type: !121)
!9266 = !DILocalVariable(name: "pllm", scope: !9260, file: !1701, line: 222, type: !121)
!9267 = !DILocation(line: 0, scope: !9260)
!9268 = !DILocation(line: 225, column: 14, scope: !9260)
!9269 = !DILocation(line: 225, column: 19, scope: !9260)
!9270 = !DILocation(line: 227, column: 3, scope: !9260)
!9271 = !DILocation(line: 240, column: 25, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9260, file: !1701, line: 228, column: 3)
!9273 = !DILocation(line: 241, column: 19, scope: !9272)
!9274 = !DILocation(line: 241, column: 27, scope: !9272)
!9275 = !DILocation(line: 0, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9272, file: !1701, line: 243, column: 11)
!9277 = !DILocation(line: 254, column: 22, scope: !9272)
!9278 = !DILocation(line: 254, column: 62, scope: !9272)
!9279 = !DILocation(line: 255, column: 31, scope: !9272)
!9280 = !DILocation(line: 256, column: 7, scope: !9272)
!9281 = !DILocation(line: 0, scope: !9272)
!9282 = !DILocation(line: 263, column: 30, scope: !9260)
!9283 = !DILocation(line: 263, column: 52, scope: !9260)
!9284 = !DILocation(line: 263, column: 9, scope: !9260)
!9285 = !DILocation(line: 265, column: 19, scope: !9260)
!9286 = !DILocation(line: 266, column: 1, scope: !9260)
!9287 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !9288, file: !9288, line: 87, type: !9289, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9328)
!9288 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9289 = !DISubroutineType(types: !9290)
!9290 = !{!9291, !9292}
!9291 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2743, line: 44, baseType: !2742)
!9292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9293, size: 32)
!9293 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !9294, line: 172, baseType: !9295)
!9294 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9295 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9294, line: 121, size: 736, elements: !9296)
!9296 = !{!9297, !9298, !9307, !9315, !9316, !9317, !9318, !9319, !9320, !9321, !9322, !9323, !9324, !9325, !9326, !9327}
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !9295, file: !9294, line: 123, baseType: !121, size: 32)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !9295, file: !9294, line: 126, baseType: !9299, size: 160, offset: 32)
!9299 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !9294, line: 97, baseType: !9300)
!9300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9294, line: 79, size: 160, elements: !9301)
!9301 = !{!9302, !9303, !9304, !9305, !9306}
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !9300, file: !9294, line: 81, baseType: !121, size: 32)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !9300, file: !9294, line: 84, baseType: !121, size: 32, offset: 32)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !9300, file: !9294, line: 87, baseType: !121, size: 32, offset: 64)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !9300, file: !9294, line: 90, baseType: !121, size: 32, offset: 96)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !9300, file: !9294, line: 94, baseType: !121, size: 32, offset: 128)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !9295, file: !9294, line: 129, baseType: !9308, size: 128, offset: 192)
!9308 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !9294, line: 116, baseType: !9309)
!9309 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9294, line: 102, size: 128, elements: !9310)
!9310 = !{!9311, !9312, !9313, !9314}
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !9309, file: !9294, line: 104, baseType: !121, size: 32)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !9309, file: !9294, line: 107, baseType: !121, size: 32, offset: 32)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !9309, file: !9294, line: 110, baseType: !121, size: 32, offset: 64)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !9309, file: !9294, line: 113, baseType: !121, size: 32, offset: 96)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !9295, file: !9294, line: 132, baseType: !121, size: 32, offset: 320)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !9295, file: !9294, line: 136, baseType: !121, size: 32, offset: 352)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !9295, file: !9294, line: 140, baseType: !121, size: 32, offset: 384)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !9295, file: !9294, line: 143, baseType: !121, size: 32, offset: 416)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !9295, file: !9294, line: 146, baseType: !121, size: 32, offset: 448)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !9295, file: !9294, line: 149, baseType: !121, size: 32, offset: 480)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !9295, file: !9294, line: 152, baseType: !121, size: 32, offset: 512)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !9295, file: !9294, line: 155, baseType: !121, size: 32, offset: 544)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !9295, file: !9294, line: 158, baseType: !121, size: 32, offset: 576)
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !9295, file: !9294, line: 161, baseType: !121, size: 32, offset: 608)
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !9295, file: !9294, line: 164, baseType: !121, size: 32, offset: 640)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !9295, file: !9294, line: 167, baseType: !121, size: 32, offset: 672)
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !9295, file: !9294, line: 170, baseType: !154, size: 8, offset: 704)
!9328 = !{!9329, !9330, !9331, !9332, !9333, !9334, !9335, !9336, !9337, !9338, !9339}
!9329 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !9287, file: !9288, line: 87, type: !9292)
!9330 = !DILocalVariable(name: "tickstart", scope: !9287, file: !9288, line: 89, type: !121)
!9331 = !DILocalVariable(name: "tmpreg1", scope: !9287, file: !9288, line: 90, type: !121)
!9332 = !DILocalVariable(name: "plli2sp", scope: !9287, file: !9288, line: 91, type: !121)
!9333 = !DILocalVariable(name: "plli2sq", scope: !9287, file: !9288, line: 92, type: !121)
!9334 = !DILocalVariable(name: "plli2sr", scope: !9287, file: !9288, line: 93, type: !121)
!9335 = !DILocalVariable(name: "pllsaip", scope: !9287, file: !9288, line: 94, type: !121)
!9336 = !DILocalVariable(name: "pllsaiq", scope: !9287, file: !9288, line: 95, type: !121)
!9337 = !DILocalVariable(name: "plli2sused", scope: !9287, file: !9288, line: 96, type: !121)
!9338 = !DILocalVariable(name: "pllsaiused", scope: !9287, file: !9288, line: 97, type: !121)
!9339 = !DILocalVariable(name: "tmpreg", scope: !9340, file: !9288, line: 184, type: !120)
!9340 = distinct !DILexicalBlock(scope: !9341, file: !9288, line: 184, column: 5)
!9341 = distinct !DILexicalBlock(scope: !9342, file: !9288, line: 179, column: 3)
!9342 = distinct !DILexicalBlock(scope: !9287, file: !9288, line: 178, column: 6)
!9343 = !DILocation(line: 0, scope: !9287)
!9344 = !DILocation(line: 103, column: 23, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9287, file: !9288, line: 103, column: 6)
!9346 = !DILocation(line: 103, column: 45, scope: !9345)
!9347 = !DILocation(line: 103, column: 71, scope: !9345)
!9348 = !DILocation(line: 103, column: 6, scope: !9287)
!9349 = !DILocation(line: 109, column: 5, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9345, file: !9288, line: 104, column: 3)
!9351 = !DILocation(line: 111, column: 23, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9350, file: !9288, line: 111, column: 8)
!9353 = !DILocation(line: 111, column: 45, scope: !9352)
!9354 = !DILocation(line: 111, column: 8, scope: !9350)
!9355 = !DILocation(line: 119, column: 23, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9287, file: !9288, line: 119, column: 6)
!9357 = !DILocation(line: 119, column: 45, scope: !9356)
!9358 = !DILocation(line: 119, column: 71, scope: !9356)
!9359 = !DILocation(line: 119, column: 6, scope: !9287)
!9360 = !DILocation(line: 125, column: 5, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9356, file: !9288, line: 120, column: 3)
!9362 = !DILocation(line: 127, column: 23, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9361, file: !9288, line: 127, column: 8)
!9364 = !DILocation(line: 127, column: 45, scope: !9363)
!9365 = !DILocation(line: 127, column: 8, scope: !9361)
!9366 = !DILocation(line: 135, column: 23, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9287, file: !9288, line: 135, column: 6)
!9368 = !DILocation(line: 135, column: 45, scope: !9367)
!9369 = !DILocation(line: 135, column: 67, scope: !9367)
!9370 = !DILocation(line: 135, column: 6, scope: !9287)
!9371 = !DILocation(line: 141, column: 5, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9367, file: !9288, line: 136, column: 3)
!9373 = !DILocation(line: 143, column: 23, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9372, file: !9288, line: 143, column: 8)
!9375 = !DILocation(line: 143, column: 42, scope: !9374)
!9376 = !DILocation(line: 143, column: 8, scope: !9372)
!9377 = !DILocation(line: 148, column: 42, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9372, file: !9288, line: 148, column: 8)
!9379 = !DILocation(line: 148, column: 8, scope: !9372)
!9380 = !DILocation(line: 156, column: 23, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9287, file: !9288, line: 156, column: 6)
!9382 = !DILocation(line: 156, column: 45, scope: !9381)
!9383 = !DILocation(line: 156, column: 67, scope: !9381)
!9384 = !DILocation(line: 156, column: 6, scope: !9287)
!9385 = !DILocation(line: 162, column: 5, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9381, file: !9288, line: 157, column: 3)
!9387 = !DILocation(line: 165, column: 23, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9386, file: !9288, line: 165, column: 8)
!9389 = !DILocation(line: 165, column: 42, scope: !9388)
!9390 = !DILocation(line: 165, column: 8, scope: !9386)
!9391 = !DILocation(line: 170, column: 42, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9386, file: !9288, line: 170, column: 8)
!9393 = !DILocation(line: 170, column: 8, scope: !9386)
!9394 = !DILocation(line: 178, column: 23, scope: !9342)
!9395 = !DILocation(line: 178, column: 45, scope: !9342)
!9396 = !DILocation(line: 178, column: 66, scope: !9342)
!9397 = !DILocation(line: 178, column: 6, scope: !9287)
!9398 = !DILocation(line: 184, column: 5, scope: !9340)
!9399 = !DILocation(line: 184, column: 5, scope: !9341)
!9400 = !DILocation(line: 187, column: 13, scope: !9341)
!9401 = !DILocation(line: 190, column: 17, scope: !9341)
!9402 = !DILocation(line: 192, column: 5, scope: !9341)
!9403 = !DILocation(line: 192, column: 17, scope: !9341)
!9404 = !DILocation(line: 192, column: 20, scope: !9341)
!9405 = !DILocation(line: 192, column: 34, scope: !9341)
!9406 = !DILocation(line: 194, column: 11, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9408, file: !9288, line: 194, column: 10)
!9408 = distinct !DILexicalBlock(scope: !9341, file: !9288, line: 193, column: 5)
!9409 = !DILocation(line: 194, column: 25, scope: !9407)
!9410 = !DILocation(line: 194, column: 39, scope: !9407)
!9411 = !DILocation(line: 194, column: 10, scope: !9408)
!9412 = distinct !{!9412, !9402, !9413}
!9413 = !DILocation(line: 198, column: 5, scope: !9341)
!9414 = !DILocation(line: 200, column: 21, scope: !9341)
!9415 = !DILocation(line: 200, column: 26, scope: !9341)
!9416 = !DILocation(line: 201, column: 17, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9341, file: !9288, line: 201, column: 8)
!9418 = !DILocation(line: 201, column: 33, scope: !9417)
!9419 = !DILocation(line: 201, column: 66, scope: !9417)
!9420 = !DILocation(line: 201, column: 84, scope: !9417)
!9421 = !DILocation(line: 201, column: 47, scope: !9417)
!9422 = !DILocation(line: 201, column: 8, scope: !9341)
!9423 = !DILocation(line: 204, column: 23, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9417, file: !9288, line: 202, column: 5)
!9425 = !DILocation(line: 204, column: 28, scope: !9424)
!9426 = !DILocation(line: 206, column: 7, scope: !9424)
!9427 = !DILocation(line: 207, column: 7, scope: !9424)
!9428 = !DILocation(line: 209, column: 17, scope: !9424)
!9429 = !DILocation(line: 212, column: 10, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9424, file: !9288, line: 212, column: 10)
!9431 = !DILocation(line: 212, column: 10, scope: !9424)
!9432 = !DILocation(line: 215, column: 21, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9430, file: !9288, line: 213, column: 7)
!9434 = !DILocation(line: 218, column: 9, scope: !9433)
!9435 = !DILocation(line: 218, column: 15, scope: !9433)
!9436 = !DILocation(line: 218, column: 51, scope: !9433)
!9437 = !DILocation(line: 220, column: 15, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9439, file: !9288, line: 220, column: 14)
!9439 = distinct !DILexicalBlock(scope: !9433, file: !9288, line: 219, column: 9)
!9440 = !DILocation(line: 220, column: 29, scope: !9438)
!9441 = !DILocation(line: 220, column: 43, scope: !9438)
!9442 = !DILocation(line: 220, column: 14, scope: !9439)
!9443 = distinct !{!9443, !9434, !9444}
!9444 = !DILocation(line: 224, column: 9, scope: !9433)
!9445 = !DILocation(line: 227, column: 5, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9341, file: !9288, line: 227, column: 5)
!9447 = !DILocation(line: 232, column: 23, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9287, file: !9288, line: 232, column: 6)
!9449 = !DILocation(line: 228, column: 3, scope: !9341)
!9450 = !DILocation(line: 232, column: 45, scope: !9448)
!9451 = !DILocation(line: 232, column: 66, scope: !9448)
!9452 = !DILocation(line: 232, column: 6, scope: !9287)
!9453 = !DILocation(line: 235, column: 5, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9448, file: !9288, line: 233, column: 3)
!9455 = !DILocation(line: 240, column: 23, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9287, file: !9288, line: 240, column: 6)
!9457 = !DILocation(line: 236, column: 3, scope: !9454)
!9458 = !DILocation(line: 240, column: 45, scope: !9456)
!9459 = !DILocation(line: 240, column: 70, scope: !9456)
!9460 = !DILocation(line: 240, column: 6, scope: !9287)
!9461 = !DILocation(line: 246, column: 5, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9456, file: !9288, line: 241, column: 3)
!9463 = !DILocation(line: 251, column: 23, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9287, file: !9288, line: 251, column: 6)
!9465 = !DILocation(line: 247, column: 3, scope: !9462)
!9466 = !DILocation(line: 251, column: 45, scope: !9464)
!9467 = !DILocation(line: 251, column: 66, scope: !9464)
!9468 = !DILocation(line: 251, column: 6, scope: !9287)
!9469 = !DILocation(line: 257, column: 5, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9464, file: !9288, line: 252, column: 3)
!9471 = !DILocation(line: 262, column: 23, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9287, file: !9288, line: 262, column: 6)
!9473 = !DILocation(line: 258, column: 3, scope: !9470)
!9474 = !DILocation(line: 262, column: 45, scope: !9472)
!9475 = !DILocation(line: 262, column: 68, scope: !9472)
!9476 = !DILocation(line: 262, column: 6, scope: !9287)
!9477 = !DILocation(line: 268, column: 5, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9472, file: !9288, line: 263, column: 3)
!9479 = !DILocation(line: 271, column: 23, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9478, file: !9288, line: 271, column: 8)
!9481 = !DILocation(line: 271, column: 43, scope: !9480)
!9482 = !DILocation(line: 271, column: 8, scope: !9478)
!9483 = !DILocation(line: 279, column: 23, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9287, file: !9288, line: 279, column: 6)
!9485 = !DILocation(line: 279, column: 45, scope: !9484)
!9486 = !DILocation(line: 279, column: 67, scope: !9484)
!9487 = !DILocation(line: 279, column: 6, scope: !9287)
!9488 = !DILocation(line: 285, column: 5, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9484, file: !9288, line: 280, column: 3)
!9490 = !DILocation(line: 290, column: 23, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9287, file: !9288, line: 290, column: 6)
!9492 = !DILocation(line: 286, column: 3, scope: !9489)
!9493 = !DILocation(line: 290, column: 45, scope: !9491)
!9494 = !DILocation(line: 290, column: 70, scope: !9491)
!9495 = !DILocation(line: 290, column: 6, scope: !9287)
!9496 = !DILocation(line: 296, column: 5, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9491, file: !9288, line: 291, column: 3)
!9498 = !DILocation(line: 298, column: 23, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9497, file: !9288, line: 298, column: 8)
!9500 = !DILocation(line: 298, column: 43, scope: !9499)
!9501 = !DILocation(line: 298, column: 8, scope: !9497)
!9502 = !DILocation(line: 308, column: 44, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9287, file: !9288, line: 308, column: 6)
!9504 = !DILocation(line: 308, column: 18, scope: !9503)
!9505 = !DILocation(line: 308, column: 25, scope: !9503)
!9506 = !DILocation(line: 308, column: 65, scope: !9503)
!9507 = !DILocation(line: 308, column: 6, scope: !9287)
!9508 = !DILocation(line: 311, column: 5, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9503, file: !9288, line: 309, column: 3)
!9510 = !DILocation(line: 313, column: 17, scope: !9509)
!9511 = !DILocation(line: 315, column: 5, scope: !9509)
!9512 = !DILocation(line: 315, column: 11, scope: !9509)
!9513 = !DILocation(line: 317, column: 11, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9515, file: !9288, line: 317, column: 10)
!9515 = distinct !DILexicalBlock(scope: !9509, file: !9288, line: 316, column: 5)
!9516 = !DILocation(line: 317, column: 25, scope: !9514)
!9517 = !DILocation(line: 317, column: 39, scope: !9514)
!9518 = !DILocation(line: 317, column: 10, scope: !9515)
!9519 = distinct !{!9519, !9511, !9520}
!9520 = !DILocation(line: 322, column: 5, scope: !9509)
!9521 = !DILocation(line: 329, column: 27, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9509, file: !9288, line: 329, column: 8)
!9523 = !DILocation(line: 329, column: 49, scope: !9522)
!9524 = !DILocation(line: 329, column: 75, scope: !9522)
!9525 = !DILocation(line: 329, column: 102, scope: !9522)
!9526 = !DILocation(line: 329, column: 121, scope: !9522)
!9527 = !DILocation(line: 329, column: 143, scope: !9522)
!9528 = !DILocation(line: 329, column: 176, scope: !9522)
!9529 = !DILocation(line: 330, column: 49, scope: !9522)
!9530 = !DILocation(line: 330, column: 75, scope: !9522)
!9531 = !DILocation(line: 330, column: 102, scope: !9522)
!9532 = !DILocation(line: 330, column: 121, scope: !9522)
!9533 = !DILocation(line: 330, column: 143, scope: !9522)
!9534 = !DILocation(line: 329, column: 8, scope: !9509)
!9535 = !DILocation(line: 336, column: 26, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9522, file: !9288, line: 331, column: 5)
!9537 = !DILocation(line: 336, column: 100, scope: !9536)
!9538 = !DILocation(line: 337, column: 24, scope: !9536)
!9539 = !DILocation(line: 337, column: 61, scope: !9536)
!9540 = !DILocation(line: 341, column: 7, scope: !9536)
!9541 = !DILocation(line: 345, column: 27, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9509, file: !9288, line: 345, column: 8)
!9543 = !DILocation(line: 342, column: 5, scope: !9536)
!9544 = !DILocation(line: 345, column: 49, scope: !9542)
!9545 = !DILocation(line: 345, column: 71, scope: !9542)
!9546 = !DILocation(line: 345, column: 94, scope: !9542)
!9547 = !DILocation(line: 345, column: 113, scope: !9542)
!9548 = !DILocation(line: 345, column: 132, scope: !9542)
!9549 = !DILocation(line: 345, column: 162, scope: !9542)
!9550 = !DILocation(line: 346, column: 49, scope: !9542)
!9551 = !DILocation(line: 346, column: 71, scope: !9542)
!9552 = !DILocation(line: 346, column: 94, scope: !9542)
!9553 = !DILocation(line: 346, column: 113, scope: !9542)
!9554 = !DILocation(line: 346, column: 132, scope: !9542)
!9555 = !DILocation(line: 345, column: 8, scope: !9509)
!9556 = !DILocation(line: 354, column: 26, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9542, file: !9288, line: 347, column: 5)
!9558 = !DILocation(line: 354, column: 100, scope: !9557)
!9559 = !DILocation(line: 355, column: 24, scope: !9557)
!9560 = !DILocation(line: 355, column: 61, scope: !9557)
!9561 = !DILocation(line: 360, column: 7, scope: !9557)
!9562 = !DILocation(line: 363, column: 7, scope: !9557)
!9563 = !DILocation(line: 367, column: 26, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9509, file: !9288, line: 367, column: 8)
!9565 = !DILocation(line: 364, column: 5, scope: !9557)
!9566 = !DILocation(line: 367, column: 48, scope: !9564)
!9567 = !DILocation(line: 367, column: 73, scope: !9564)
!9568 = !DILocation(line: 367, column: 99, scope: !9564)
!9569 = !DILocation(line: 367, column: 118, scope: !9564)
!9570 = !DILocation(line: 367, column: 138, scope: !9564)
!9571 = !DILocation(line: 367, column: 8, scope: !9509)
!9572 = !DILocation(line: 372, column: 26, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9564, file: !9288, line: 368, column: 5)
!9574 = !DILocation(line: 373, column: 24, scope: !9573)
!9575 = !DILocation(line: 373, column: 61, scope: !9573)
!9576 = !DILocation(line: 377, column: 7, scope: !9573)
!9577 = !DILocation(line: 381, column: 24, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9509, file: !9288, line: 381, column: 8)
!9579 = !DILocation(line: 378, column: 5, scope: !9573)
!9580 = !DILocation(line: 381, column: 45, scope: !9578)
!9581 = !DILocation(line: 381, column: 69, scope: !9578)
!9582 = !DILocation(line: 381, column: 8, scope: !9509)
!9583 = !DILocation(line: 390, column: 7, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9578, file: !9288, line: 382, column: 5)
!9585 = !DILocation(line: 391, column: 5, scope: !9584)
!9586 = !DILocation(line: 394, column: 5, scope: !9509)
!9587 = !DILocation(line: 396, column: 17, scope: !9509)
!9588 = !DILocation(line: 398, column: 5, scope: !9509)
!9589 = !DILocation(line: 398, column: 11, scope: !9509)
!9590 = !DILocation(line: 398, column: 51, scope: !9509)
!9591 = !DILocation(line: 400, column: 11, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !9288, line: 400, column: 10)
!9593 = distinct !DILexicalBlock(scope: !9509, file: !9288, line: 399, column: 5)
!9594 = !DILocation(line: 400, column: 25, scope: !9592)
!9595 = !DILocation(line: 400, column: 39, scope: !9592)
!9596 = !DILocation(line: 400, column: 10, scope: !9593)
!9597 = distinct !{!9597, !9588, !9598}
!9598 = !DILocation(line: 405, column: 5, scope: !9509)
!9599 = !DILocation(line: 411, column: 17, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9287, file: !9288, line: 411, column: 6)
!9601 = !DILocation(line: 411, column: 6, scope: !9287)
!9602 = !DILocation(line: 414, column: 5, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9600, file: !9288, line: 412, column: 3)
!9604 = !DILocation(line: 416, column: 17, scope: !9603)
!9605 = !DILocation(line: 418, column: 5, scope: !9603)
!9606 = !DILocation(line: 418, column: 11, scope: !9603)
!9607 = !DILocation(line: 420, column: 11, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9609, file: !9288, line: 420, column: 10)
!9609 = distinct !DILexicalBlock(scope: !9603, file: !9288, line: 419, column: 5)
!9610 = !DILocation(line: 420, column: 25, scope: !9608)
!9611 = !DILocation(line: 420, column: 39, scope: !9608)
!9612 = !DILocation(line: 420, column: 10, scope: !9609)
!9613 = distinct !{!9613, !9605, !9614}
!9614 = !DILocation(line: 425, column: 5, scope: !9603)
!9615 = !DILocation(line: 432, column: 27, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9603, file: !9288, line: 432, column: 8)
!9617 = !DILocation(line: 432, column: 49, scope: !9616)
!9618 = !DILocation(line: 432, column: 71, scope: !9616)
!9619 = !DILocation(line: 432, column: 94, scope: !9616)
!9620 = !DILocation(line: 432, column: 113, scope: !9616)
!9621 = !DILocation(line: 432, column: 132, scope: !9616)
!9622 = !DILocation(line: 432, column: 162, scope: !9616)
!9623 = !DILocation(line: 433, column: 49, scope: !9616)
!9624 = !DILocation(line: 433, column: 71, scope: !9616)
!9625 = !DILocation(line: 433, column: 94, scope: !9616)
!9626 = !DILocation(line: 433, column: 113, scope: !9616)
!9627 = !DILocation(line: 433, column: 132, scope: !9616)
!9628 = !DILocation(line: 432, column: 8, scope: !9603)
!9629 = !DILocation(line: 441, column: 26, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9616, file: !9288, line: 434, column: 5)
!9631 = !DILocation(line: 441, column: 100, scope: !9630)
!9632 = !DILocation(line: 445, column: 7, scope: !9630)
!9633 = !DILocation(line: 448, column: 7, scope: !9630)
!9634 = !DILocation(line: 453, column: 26, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9603, file: !9288, line: 453, column: 8)
!9636 = !DILocation(line: 449, column: 5, scope: !9630)
!9637 = !DILocation(line: 453, column: 48, scope: !9635)
!9638 = !DILocation(line: 453, column: 71, scope: !9635)
!9639 = !DILocation(line: 453, column: 95, scope: !9635)
!9640 = !DILocation(line: 453, column: 114, scope: !9635)
!9641 = !DILocation(line: 453, column: 134, scope: !9635)
!9642 = !DILocation(line: 453, column: 8, scope: !9603)
!9643 = !DILocation(line: 458, column: 24, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9635, file: !9288, line: 454, column: 5)
!9645 = !DILocation(line: 458, column: 61, scope: !9644)
!9646 = !DILocation(line: 462, column: 7, scope: !9644)
!9647 = !DILocation(line: 463, column: 5, scope: !9644)
!9648 = !DILocation(line: 466, column: 5, scope: !9603)
!9649 = !DILocation(line: 468, column: 17, scope: !9603)
!9650 = !DILocation(line: 470, column: 5, scope: !9603)
!9651 = !DILocation(line: 470, column: 11, scope: !9603)
!9652 = !DILocation(line: 470, column: 39, scope: !9603)
!9653 = !DILocation(line: 472, column: 11, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9655, file: !9288, line: 472, column: 10)
!9655 = distinct !DILexicalBlock(scope: !9603, file: !9288, line: 471, column: 5)
!9656 = !DILocation(line: 472, column: 25, scope: !9654)
!9657 = !DILocation(line: 472, column: 39, scope: !9654)
!9658 = !DILocation(line: 472, column: 10, scope: !9655)
!9659 = distinct !{!9659, !9650, !9660}
!9660 = !DILocation(line: 477, column: 5, scope: !9603)
!9661 = !DILocation(line: 480, column: 1, scope: !9287)
!9662 = !DISubprogram(name: "HAL_GetTick", scope: !9663, file: !9663, line: 234, type: !5102, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!9663 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9664 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !9288, file: !9288, line: 489, type: !9665, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9667)
!9665 = !DISubroutineType(types: !9666)
!9666 = !{null, !9292}
!9667 = !{!9668, !9669}
!9668 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !9664, file: !9288, line: 489, type: !9292)
!9669 = !DILocalVariable(name: "tempreg", scope: !9664, file: !9288, line: 491, type: !121)
!9670 = !DILocation(line: 0, scope: !9664)
!9671 = !DILocation(line: 494, column: 18, scope: !9664)
!9672 = !DILocation(line: 494, column: 39, scope: !9664)
!9673 = !DILocation(line: 502, column: 52, scope: !9664)
!9674 = !DILocation(line: 502, column: 63, scope: !9664)
!9675 = !DILocation(line: 502, column: 25, scope: !9664)
!9676 = !DILocation(line: 502, column: 33, scope: !9664)
!9677 = !DILocation(line: 503, column: 52, scope: !9664)
!9678 = !DILocation(line: 503, column: 89, scope: !9664)
!9679 = !DILocation(line: 503, column: 25, scope: !9664)
!9680 = !DILocation(line: 503, column: 33, scope: !9664)
!9681 = !DILocation(line: 504, column: 54, scope: !9664)
!9682 = !DILocation(line: 504, column: 128, scope: !9664)
!9683 = !DILocation(line: 504, column: 25, scope: !9664)
!9684 = !DILocation(line: 504, column: 33, scope: !9664)
!9685 = !DILocation(line: 505, column: 52, scope: !9664)
!9686 = !DILocation(line: 505, column: 89, scope: !9664)
!9687 = !DILocation(line: 505, column: 25, scope: !9664)
!9688 = !DILocation(line: 505, column: 33, scope: !9664)
!9689 = !DILocation(line: 506, column: 52, scope: !9664)
!9690 = !DILocation(line: 506, column: 89, scope: !9664)
!9691 = !DILocation(line: 506, column: 25, scope: !9664)
!9692 = !DILocation(line: 506, column: 33, scope: !9664)
!9693 = !DILocation(line: 508, column: 52, scope: !9664)
!9694 = !DILocation(line: 508, column: 63, scope: !9664)
!9695 = !DILocation(line: 508, column: 25, scope: !9664)
!9696 = !DILocation(line: 508, column: 33, scope: !9664)
!9697 = !DILocation(line: 509, column: 52, scope: !9664)
!9698 = !DILocation(line: 509, column: 89, scope: !9664)
!9699 = !DILocation(line: 509, column: 25, scope: !9664)
!9700 = !DILocation(line: 509, column: 33, scope: !9664)
!9701 = !DILocation(line: 510, column: 54, scope: !9664)
!9702 = !DILocation(line: 510, column: 128, scope: !9664)
!9703 = !DILocation(line: 510, column: 25, scope: !9664)
!9704 = !DILocation(line: 510, column: 33, scope: !9664)
!9705 = !DILocation(line: 511, column: 52, scope: !9664)
!9706 = !DILocation(line: 511, column: 89, scope: !9664)
!9707 = !DILocation(line: 511, column: 25, scope: !9664)
!9708 = !DILocation(line: 511, column: 33, scope: !9664)
!9709 = !DILocation(line: 513, column: 48, scope: !9664)
!9710 = !DILocation(line: 513, column: 56, scope: !9664)
!9711 = !DILocation(line: 513, column: 18, scope: !9664)
!9712 = !DILocation(line: 513, column: 29, scope: !9664)
!9713 = !DILocation(line: 514, column: 48, scope: !9664)
!9714 = !DILocation(line: 514, column: 82, scope: !9664)
!9715 = !DILocation(line: 514, column: 18, scope: !9664)
!9716 = !DILocation(line: 514, column: 29, scope: !9664)
!9717 = !DILocation(line: 517, column: 39, scope: !9664)
!9718 = !DILocation(line: 517, column: 18, scope: !9664)
!9719 = !DILocation(line: 517, column: 37, scope: !9664)
!9720 = !DILocation(line: 520, column: 39, scope: !9664)
!9721 = !DILocation(line: 520, column: 18, scope: !9664)
!9722 = !DILocation(line: 520, column: 37, scope: !9664)
!9723 = !DILocation(line: 523, column: 42, scope: !9664)
!9724 = !DILocation(line: 523, column: 18, scope: !9664)
!9725 = !DILocation(line: 523, column: 40, scope: !9664)
!9726 = !DILocation(line: 526, column: 42, scope: !9664)
!9727 = !DILocation(line: 526, column: 18, scope: !9664)
!9728 = !DILocation(line: 526, column: 40, scope: !9664)
!9729 = !DILocation(line: 529, column: 19, scope: !9664)
!9730 = !DILocation(line: 529, column: 24, scope: !9664)
!9731 = !DILocation(line: 530, column: 67, scope: !9664)
!9732 = !DILocation(line: 530, column: 72, scope: !9664)
!9733 = !DILocation(line: 530, column: 59, scope: !9664)
!9734 = !DILocation(line: 530, column: 18, scope: !9664)
!9735 = !DILocation(line: 530, column: 36, scope: !9664)
!9736 = !DILocation(line: 533, column: 38, scope: !9664)
!9737 = !DILocation(line: 533, column: 18, scope: !9664)
!9738 = !DILocation(line: 533, column: 36, scope: !9664)
!9739 = !DILocation(line: 536, column: 42, scope: !9664)
!9740 = !DILocation(line: 536, column: 18, scope: !9664)
!9741 = !DILocation(line: 536, column: 40, scope: !9664)
!9742 = !DILocation(line: 539, column: 40, scope: !9664)
!9743 = !DILocation(line: 539, column: 18, scope: !9664)
!9744 = !DILocation(line: 539, column: 38, scope: !9664)
!9745 = !DILocation(line: 542, column: 39, scope: !9664)
!9746 = !DILocation(line: 542, column: 18, scope: !9664)
!9747 = !DILocation(line: 542, column: 37, scope: !9664)
!9748 = !DILocation(line: 545, column: 40, scope: !9664)
!9749 = !DILocation(line: 545, column: 18, scope: !9664)
!9750 = !DILocation(line: 545, column: 38, scope: !9664)
!9751 = !DILocation(line: 548, column: 13, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9664, file: !9288, line: 548, column: 7)
!9753 = !DILocation(line: 548, column: 7, scope: !9664)
!9754 = !DILocation(line: 550, column: 20, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9752, file: !9288, line: 549, column: 3)
!9756 = !DILocation(line: 550, column: 37, scope: !9755)
!9757 = !DILocation(line: 556, column: 1, scope: !9664)
!9758 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !9288, file: !9288, line: 569, type: !6029, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9759)
!9759 = !{!9760, !9761, !9762, !9763, !9764, !9765, !9766}
!9760 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !9758, file: !9288, line: 569, type: !121)
!9761 = !DILocalVariable(name: "tmpreg1", scope: !9758, file: !9288, line: 571, type: !121)
!9762 = !DILocalVariable(name: "frequency", scope: !9758, file: !9288, line: 573, type: !121)
!9763 = !DILocalVariable(name: "vcoinput", scope: !9758, file: !9288, line: 575, type: !121)
!9764 = !DILocalVariable(name: "saiclocksource", scope: !9758, file: !9288, line: 577, type: !121)
!9765 = !DILocalVariable(name: "srcclk", scope: !9758, file: !9288, line: 578, type: !121)
!9766 = !DILocalVariable(name: "vcooutput", scope: !9758, file: !9288, line: 580, type: !121)
!9767 = !DILocation(line: 0, scope: !9758)
!9768 = !DILocation(line: 581, column: 3, scope: !9758)
!9769 = !DILocation(line: 586, column: 29, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9771, file: !9288, line: 585, column: 5)
!9771 = distinct !DILexicalBlock(scope: !9758, file: !9288, line: 582, column: 3)
!9772 = !DILocation(line: 588, column: 7, scope: !9770)
!9773 = !DILocation(line: 594, column: 20, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9775, file: !9288, line: 594, column: 14)
!9775 = distinct !DILexicalBlock(scope: !9776, file: !9288, line: 591, column: 9)
!9776 = distinct !DILexicalBlock(scope: !9770, file: !9288, line: 589, column: 7)
!9777 = !DILocation(line: 0, scope: !9774)
!9778 = !DILocation(line: 606, column: 27, scope: !9775)
!9779 = !DILocation(line: 606, column: 64, scope: !9775)
!9780 = !DILocation(line: 607, column: 42, scope: !9775)
!9781 = !DILocation(line: 607, column: 79, scope: !9775)
!9782 = !DILocation(line: 607, column: 33, scope: !9775)
!9783 = !DILocation(line: 607, column: 86, scope: !9775)
!9784 = !DILocation(line: 610, column: 29, scope: !9775)
!9785 = !DILocation(line: 610, column: 63, scope: !9775)
!9786 = !DILocation(line: 610, column: 70, scope: !9775)
!9787 = !DILocation(line: 611, column: 32, scope: !9775)
!9788 = !DILocation(line: 612, column: 11, scope: !9775)
!9789 = !DILocation(line: 619, column: 20, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9791, file: !9288, line: 619, column: 14)
!9791 = distinct !DILexicalBlock(scope: !9776, file: !9288, line: 616, column: 9)
!9792 = !DILocation(line: 0, scope: !9790)
!9793 = !DILocation(line: 632, column: 27, scope: !9791)
!9794 = !DILocation(line: 632, column: 64, scope: !9791)
!9795 = !DILocation(line: 633, column: 42, scope: !9791)
!9796 = !DILocation(line: 633, column: 79, scope: !9791)
!9797 = !DILocation(line: 633, column: 33, scope: !9791)
!9798 = !DILocation(line: 633, column: 86, scope: !9791)
!9799 = !DILocation(line: 636, column: 28, scope: !9791)
!9800 = !DILocation(line: 636, column: 36, scope: !9791)
!9801 = !DILocation(line: 636, column: 62, scope: !9791)
!9802 = !DILocation(line: 637, column: 32, scope: !9791)
!9803 = !DILocation(line: 638, column: 11, scope: !9791)
!9804 = !DILocation(line: 645, column: 20, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !9288, line: 645, column: 14)
!9806 = distinct !DILexicalBlock(scope: !9776, file: !9288, line: 642, column: 9)
!9807 = !DILocation(line: 0, scope: !9805)
!9808 = !DILocation(line: 658, column: 27, scope: !9806)
!9809 = !DILocation(line: 658, column: 55, scope: !9806)
!9810 = !DILocation(line: 659, column: 42, scope: !9806)
!9811 = !DILocation(line: 659, column: 70, scope: !9806)
!9812 = !DILocation(line: 659, column: 33, scope: !9806)
!9813 = !DILocation(line: 659, column: 77, scope: !9806)
!9814 = !DILocation(line: 660, column: 11, scope: !9806)
!9815 = !DILocation(line: 665, column: 11, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9776, file: !9288, line: 663, column: 9)
!9817 = !DILocation(line: 669, column: 20, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9819, file: !9288, line: 669, column: 14)
!9819 = distinct !DILexicalBlock(scope: !9776, file: !9288, line: 668, column: 9)
!9820 = !DILocation(line: 691, column: 16, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9771, file: !9288, line: 689, column: 5)
!9822 = !DILocation(line: 692, column: 7, scope: !9821)
!9823 = !DILocation(line: 706, column: 20, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9825, file: !9288, line: 706, column: 14)
!9825 = distinct !DILexicalBlock(scope: !9826, file: !9288, line: 703, column: 9)
!9826 = distinct !DILexicalBlock(scope: !9821, file: !9288, line: 693, column: 7)
!9827 = !DILocation(line: 0, scope: !9824)
!9828 = !DILocation(line: 718, column: 53, scope: !9825)
!9829 = !DILocation(line: 718, column: 90, scope: !9825)
!9830 = !DILocation(line: 718, column: 43, scope: !9825)
!9831 = !DILocation(line: 720, column: 53, scope: !9825)
!9832 = !DILocation(line: 720, column: 90, scope: !9825)
!9833 = !DILocation(line: 720, column: 44, scope: !9825)
!9834 = !DILocation(line: 721, column: 11, scope: !9825)
!9835 = !DILocation(line: 728, column: 20, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9837, file: !9288, line: 728, column: 14)
!9837 = distinct !DILexicalBlock(scope: !9826, file: !9288, line: 725, column: 9)
!9838 = !DILocation(line: 0, scope: !9836)
!9839 = !DILocation(line: 740, column: 53, scope: !9837)
!9840 = !DILocation(line: 740, column: 81, scope: !9837)
!9841 = !DILocation(line: 740, column: 43, scope: !9837)
!9842 = !DILocation(line: 742, column: 53, scope: !9837)
!9843 = !DILocation(line: 742, column: 81, scope: !9837)
!9844 = !DILocation(line: 742, column: 44, scope: !9837)
!9845 = !DILocation(line: 743, column: 11, scope: !9837)
!9846 = !DILocation(line: 748, column: 20, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9848, file: !9288, line: 748, column: 14)
!9848 = distinct !DILexicalBlock(scope: !9826, file: !9288, line: 747, column: 9)
!9849 = !DILocation(line: 770, column: 16, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9771, file: !9288, line: 768, column: 5)
!9851 = !DILocation(line: 771, column: 7, scope: !9850)
!9852 = !DILocation(line: 785, column: 20, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9854, file: !9288, line: 785, column: 14)
!9854 = distinct !DILexicalBlock(scope: !9855, file: !9288, line: 782, column: 9)
!9855 = distinct !DILexicalBlock(scope: !9850, file: !9288, line: 772, column: 7)
!9856 = !DILocation(line: 0, scope: !9853)
!9857 = !DILocation(line: 797, column: 53, scope: !9854)
!9858 = !DILocation(line: 797, column: 90, scope: !9854)
!9859 = !DILocation(line: 797, column: 43, scope: !9854)
!9860 = !DILocation(line: 799, column: 53, scope: !9854)
!9861 = !DILocation(line: 799, column: 90, scope: !9854)
!9862 = !DILocation(line: 799, column: 44, scope: !9854)
!9863 = !DILocation(line: 800, column: 11, scope: !9854)
!9864 = !DILocation(line: 807, column: 20, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9866, file: !9288, line: 807, column: 14)
!9866 = distinct !DILexicalBlock(scope: !9855, file: !9288, line: 804, column: 9)
!9867 = !DILocation(line: 0, scope: !9865)
!9868 = !DILocation(line: 819, column: 53, scope: !9866)
!9869 = !DILocation(line: 819, column: 81, scope: !9866)
!9870 = !DILocation(line: 819, column: 43, scope: !9866)
!9871 = !DILocation(line: 821, column: 53, scope: !9866)
!9872 = !DILocation(line: 821, column: 81, scope: !9866)
!9873 = !DILocation(line: 821, column: 44, scope: !9866)
!9874 = !DILocation(line: 822, column: 11, scope: !9866)
!9875 = !DILocation(line: 827, column: 20, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9877, file: !9288, line: 827, column: 14)
!9877 = distinct !DILexicalBlock(scope: !9855, file: !9288, line: 826, column: 9)
!9878 = !DILocation(line: 847, column: 3, scope: !9758)
!9879 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !9288, file: !9288, line: 2766, type: !9880, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9882)
!9880 = !DISubroutineType(types: !9881)
!9881 = !{null, !154}
!9882 = !{!9883}
!9883 = !DILocalVariable(name: "Mode", arg: 1, scope: !9879, file: !9288, line: 2766, type: !154)
!9884 = !DILocation(line: 0, scope: !9879)
!9885 = !DILocation(line: 2770, column: 11, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9879, file: !9288, line: 2770, column: 6)
!9887 = !DILocation(line: 0, scope: !9886)
!9888 = !DILocation(line: 2770, column: 6, scope: !9879)
!9889 = !DILocation(line: 2778, column: 1, scope: !9879)
!9890 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !9288, file: !9288, line: 2803, type: !9891, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9894)
!9891 = !DISubroutineType(types: !9892)
!9892 = !{!9291, !9893}
!9893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9299, size: 32)
!9894 = !{!9895, !9896}
!9895 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !9890, file: !9288, line: 2803, type: !9893)
!9896 = !DILocalVariable(name: "tickstart", scope: !9890, file: !9288, line: 2805, type: !121)
!9897 = !DILocation(line: 0, scope: !9890)
!9898 = !DILocation(line: 2821, column: 3, scope: !9890)
!9899 = !DILocation(line: 2824, column: 15, scope: !9890)
!9900 = !DILocation(line: 2825, column: 3, scope: !9890)
!9901 = !DILocation(line: 2825, column: 9, scope: !9890)
!9902 = !DILocation(line: 2827, column: 9, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9904, file: !9288, line: 2827, column: 8)
!9904 = distinct !DILexicalBlock(scope: !9890, file: !9288, line: 2826, column: 3)
!9905 = !DILocation(line: 2827, column: 23, scope: !9903)
!9906 = !DILocation(line: 2827, column: 37, scope: !9903)
!9907 = !DILocation(line: 2827, column: 8, scope: !9904)
!9908 = distinct !{!9908, !9900, !9909}
!9909 = !DILocation(line: 2832, column: 3, scope: !9890)
!9910 = !DILocation(line: 2840, column: 3, scope: !9890)
!9911 = !DILocation(line: 2866, column: 3, scope: !9890)
!9912 = !DILocation(line: 2869, column: 15, scope: !9890)
!9913 = !DILocation(line: 2870, column: 3, scope: !9890)
!9914 = !DILocation(line: 2870, column: 9, scope: !9890)
!9915 = !DILocation(line: 2870, column: 48, scope: !9890)
!9916 = !DILocation(line: 2872, column: 9, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9918, file: !9288, line: 2872, column: 8)
!9918 = distinct !DILexicalBlock(scope: !9890, file: !9288, line: 2871, column: 3)
!9919 = !DILocation(line: 2872, column: 23, scope: !9917)
!9920 = !DILocation(line: 2872, column: 37, scope: !9917)
!9921 = !DILocation(line: 2872, column: 8, scope: !9918)
!9922 = distinct !{!9922, !9913, !9923}
!9923 = !DILocation(line: 2877, column: 3, scope: !9890)
!9924 = !DILocation(line: 2880, column: 1, scope: !9890)
!9925 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !9288, file: !9288, line: 2886, type: !9926, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9928)
!9926 = !DISubroutineType(types: !9927)
!9927 = !{!9291}
!9928 = !{!9929}
!9929 = !DILocalVariable(name: "tickstart", scope: !9925, file: !9288, line: 2888, type: !121)
!9930 = !DILocation(line: 2891, column: 3, scope: !9925)
!9931 = !DILocation(line: 2894, column: 15, scope: !9925)
!9932 = !DILocation(line: 0, scope: !9925)
!9933 = !DILocation(line: 2895, column: 3, scope: !9925)
!9934 = !DILocation(line: 2895, column: 9, scope: !9925)
!9935 = !DILocation(line: 2895, column: 45, scope: !9925)
!9936 = !DILocation(line: 2897, column: 9, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9938, file: !9288, line: 2897, column: 8)
!9938 = distinct !DILexicalBlock(scope: !9925, file: !9288, line: 2896, column: 3)
!9939 = !DILocation(line: 2897, column: 23, scope: !9937)
!9940 = !DILocation(line: 2897, column: 36, scope: !9937)
!9941 = !DILocation(line: 2897, column: 8, scope: !9938)
!9942 = distinct !{!9942, !9933, !9943}
!9943 = !DILocation(line: 2902, column: 3, scope: !9925)
!9944 = !DILocation(line: 2905, column: 1, scope: !9925)
!9945 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !9288, file: !9288, line: 2916, type: !9946, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9949)
!9946 = !DISubroutineType(types: !9947)
!9947 = !{!9291, !9948}
!9948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9308, size: 32)
!9949 = !{!9950, !9951}
!9950 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !9945, file: !9288, line: 2916, type: !9948)
!9951 = !DILocalVariable(name: "tickstart", scope: !9945, file: !9288, line: 2918, type: !121)
!9952 = !DILocation(line: 0, scope: !9945)
!9953 = !DILocation(line: 2934, column: 3, scope: !9945)
!9954 = !DILocation(line: 2937, column: 15, scope: !9945)
!9955 = !DILocation(line: 2938, column: 3, scope: !9945)
!9956 = !DILocation(line: 2938, column: 9, scope: !9945)
!9957 = !DILocation(line: 2940, column: 9, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9959, file: !9288, line: 2940, column: 8)
!9959 = distinct !DILexicalBlock(scope: !9945, file: !9288, line: 2939, column: 3)
!9960 = !DILocation(line: 2940, column: 23, scope: !9958)
!9961 = !DILocation(line: 2940, column: 37, scope: !9958)
!9962 = !DILocation(line: 2940, column: 8, scope: !9959)
!9963 = distinct !{!9963, !9955, !9964}
!9964 = !DILocation(line: 2945, column: 3, scope: !9945)
!9965 = !DILocation(line: 2953, column: 3, scope: !9945)
!9966 = !DILocation(line: 2970, column: 3, scope: !9945)
!9967 = !DILocation(line: 2973, column: 15, scope: !9945)
!9968 = !DILocation(line: 2974, column: 3, scope: !9945)
!9969 = !DILocation(line: 2974, column: 9, scope: !9945)
!9970 = !DILocation(line: 2974, column: 37, scope: !9945)
!9971 = !DILocation(line: 2976, column: 9, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9973, file: !9288, line: 2976, column: 8)
!9973 = distinct !DILexicalBlock(scope: !9945, file: !9288, line: 2975, column: 3)
!9974 = !DILocation(line: 2976, column: 23, scope: !9972)
!9975 = !DILocation(line: 2976, column: 37, scope: !9972)
!9976 = !DILocation(line: 2976, column: 8, scope: !9973)
!9977 = distinct !{!9977, !9968, !9978}
!9978 = !DILocation(line: 2981, column: 3, scope: !9945)
!9979 = !DILocation(line: 2984, column: 1, scope: !9945)
!9980 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !9288, file: !9288, line: 2990, type: !9926, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9981)
!9981 = !{!9982}
!9982 = !DILocalVariable(name: "tickstart", scope: !9980, file: !9288, line: 2992, type: !121)
!9983 = !DILocation(line: 2995, column: 3, scope: !9980)
!9984 = !DILocation(line: 2998, column: 15, scope: !9980)
!9985 = !DILocation(line: 0, scope: !9980)
!9986 = !DILocation(line: 2999, column: 3, scope: !9980)
!9987 = !DILocation(line: 2999, column: 9, scope: !9980)
!9988 = !DILocation(line: 3001, column: 9, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9990, file: !9288, line: 3001, column: 8)
!9990 = distinct !DILexicalBlock(scope: !9980, file: !9288, line: 3000, column: 3)
!9991 = !DILocation(line: 3001, column: 23, scope: !9989)
!9992 = !DILocation(line: 3001, column: 36, scope: !9989)
!9993 = !DILocation(line: 3001, column: 8, scope: !9990)
!9994 = distinct !{!9994, !9986, !9995}
!9995 = !DILocation(line: 3006, column: 3, scope: !9980)
!9996 = !DILocation(line: 3009, column: 1, scope: !9980)
!9997 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !9288, file: !9288, line: 3051, type: !5102, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9998)
!9998 = !{!9999, !10000, !10001, !10002, !10003}
!9999 = !DILocalVariable(name: "pllm", scope: !9997, file: !9288, line: 3053, type: !121)
!10000 = !DILocalVariable(name: "pllvco", scope: !9997, file: !9288, line: 3054, type: !121)
!10001 = !DILocalVariable(name: "pllp", scope: !9997, file: !9288, line: 3055, type: !121)
!10002 = !DILocalVariable(name: "pllr", scope: !9997, file: !9288, line: 3056, type: !121)
!10003 = !DILocalVariable(name: "sysclockfreq", scope: !9997, file: !9288, line: 3057, type: !121)
!10004 = !DILocation(line: 0, scope: !9997)
!10005 = !DILocation(line: 3060, column: 16, scope: !9997)
!10006 = !DILocation(line: 3060, column: 3, scope: !9997)
!10007 = !DILocation(line: 3076, column: 19, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10009, file: !9288, line: 3073, column: 5)
!10009 = distinct !DILexicalBlock(scope: !9997, file: !9288, line: 3061, column: 3)
!10010 = !DILocation(line: 3076, column: 27, scope: !10008)
!10011 = !DILocation(line: 3077, column: 10, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10008, file: !9288, line: 3077, column: 10)
!10013 = !DILocation(line: 0, scope: !10012)
!10014 = !DILocation(line: 3087, column: 23, scope: !10008)
!10015 = !DILocation(line: 3087, column: 82, scope: !10008)
!10016 = !DILocation(line: 3089, column: 28, scope: !10008)
!10017 = !DILocation(line: 3090, column: 7, scope: !10008)
!10018 = !DILocation(line: 3096, column: 19, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10009, file: !9288, line: 3093, column: 5)
!10020 = !DILocation(line: 3096, column: 27, scope: !10019)
!10021 = !DILocation(line: 3097, column: 10, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10019, file: !9288, line: 3097, column: 10)
!10023 = !DILocation(line: 0, scope: !10022)
!10024 = !DILocation(line: 3107, column: 21, scope: !10019)
!10025 = !DILocation(line: 3107, column: 49, scope: !10019)
!10026 = !DILocation(line: 3109, column: 28, scope: !10019)
!10027 = !DILocation(line: 3110, column: 7, scope: !10019)
!10028 = !DILocation(line: 0, scope: !10009)
!10029 = !DILocation(line: 3118, column: 3, scope: !9997)
!10030 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !9288, file: !9288, line: 3143, type: !9926, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10031)
!10031 = !{!10032}
!10032 = !DILocalVariable(name: "tickstart", scope: !10030, file: !9288, line: 3145, type: !121)
!10033 = !DILocation(line: 3148, column: 15, scope: !10030)
!10034 = !DILocation(line: 0, scope: !10030)
!10035 = !DILocation(line: 3151, column: 3, scope: !10030)
!10036 = !DILocation(line: 3154, column: 3, scope: !10030)
!10037 = !DILocation(line: 3154, column: 10, scope: !10030)
!10038 = !DILocation(line: 3154, column: 43, scope: !10030)
!10039 = !DILocation(line: 3156, column: 10, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10041, file: !9288, line: 3156, column: 9)
!10041 = distinct !DILexicalBlock(scope: !10030, file: !9288, line: 3155, column: 3)
!10042 = !DILocation(line: 3156, column: 24, scope: !10040)
!10043 = !DILocation(line: 3156, column: 37, scope: !10040)
!10044 = !DILocation(line: 3156, column: 9, scope: !10041)
!10045 = distinct !{!10045, !10036, !10046}
!10046 = !DILocation(line: 3160, column: 3, scope: !10030)
!10047 = !DILocation(line: 3163, column: 3, scope: !10030)
!10048 = !DILocation(line: 3166, column: 15, scope: !10030)
!10049 = !DILocation(line: 3169, column: 3, scope: !10030)
!10050 = !DILocation(line: 3172, column: 3, scope: !10030)
!10051 = !DILocation(line: 3172, column: 10, scope: !10030)
!10052 = !DILocation(line: 3172, column: 44, scope: !10030)
!10053 = !DILocation(line: 3174, column: 24, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10055, file: !9288, line: 3174, column: 9)
!10055 = distinct !DILexicalBlock(scope: !10030, file: !9288, line: 3173, column: 3)
!10056 = !DILocation(line: 3174, column: 37, scope: !10054)
!10057 = !DILocation(line: 3174, column: 9, scope: !10055)
!10058 = distinct !{!10058, !10050, !10059}
!10059 = !DILocation(line: 3178, column: 3, scope: !10030)
!10060 = !DILocation(line: 3184, column: 3, scope: !10030)
!10061 = !DILocation(line: 3187, column: 3, scope: !10030)
!10062 = !DILocation(line: 3187, column: 10, scope: !10030)
!10063 = !DILocation(line: 3187, column: 43, scope: !10030)
!10064 = !DILocation(line: 3189, column: 24, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10066, file: !9288, line: 3189, column: 9)
!10066 = distinct !DILexicalBlock(scope: !10030, file: !9288, line: 3188, column: 3)
!10067 = !DILocation(line: 3189, column: 37, scope: !10065)
!10068 = !DILocation(line: 3189, column: 9, scope: !10066)
!10069 = distinct !{!10069, !10061, !10070}
!10070 = !DILocation(line: 3193, column: 3, scope: !10030)
!10071 = !DILocation(line: 3199, column: 3, scope: !10030)
!10072 = !DILocation(line: 3202, column: 3, scope: !10030)
!10073 = !DILocation(line: 3202, column: 10, scope: !10030)
!10074 = !DILocation(line: 3202, column: 43, scope: !10030)
!10075 = !DILocation(line: 3204, column: 24, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10077, file: !9288, line: 3204, column: 9)
!10077 = distinct !DILexicalBlock(scope: !10030, file: !9288, line: 3203, column: 3)
!10078 = !DILocation(line: 3204, column: 37, scope: !10076)
!10079 = !DILocation(line: 3204, column: 9, scope: !10077)
!10080 = distinct !{!10080, !10072, !10081}
!10081 = !DILocation(line: 3208, column: 3, scope: !10030)
!10082 = !DILocation(line: 3215, column: 3, scope: !10030)
!10083 = !DILocation(line: 3218, column: 3, scope: !10030)
!10084 = !DILocation(line: 3218, column: 10, scope: !10030)
!10085 = !DILocation(line: 3218, column: 46, scope: !10030)
!10086 = !DILocation(line: 3220, column: 24, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10088, file: !9288, line: 3220, column: 9)
!10088 = distinct !DILexicalBlock(scope: !10030, file: !9288, line: 3219, column: 3)
!10089 = !DILocation(line: 3220, column: 37, scope: !10087)
!10090 = !DILocation(line: 3220, column: 9, scope: !10088)
!10091 = distinct !{!10091, !10083, !10092}
!10092 = !DILocation(line: 3224, column: 3, scope: !10030)
!10093 = !DILocation(line: 3232, column: 3, scope: !10030)
!10094 = !DILocation(line: 3235, column: 3, scope: !10030)
!10095 = !DILocation(line: 3235, column: 10, scope: !10030)
!10096 = !DILocation(line: 3235, column: 46, scope: !10030)
!10097 = !DILocation(line: 3237, column: 10, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10099, file: !9288, line: 3237, column: 9)
!10099 = distinct !DILexicalBlock(scope: !10030, file: !9288, line: 3236, column: 3)
!10100 = !DILocation(line: 3237, column: 24, scope: !10098)
!10101 = !DILocation(line: 3237, column: 37, scope: !10098)
!10102 = !DILocation(line: 3237, column: 9, scope: !10099)
!10103 = distinct !{!10103, !10094, !10104}
!10104 = !DILocation(line: 3241, column: 3, scope: !10030)
!10105 = !DILocation(line: 3247, column: 16, scope: !10030)
!10106 = !DILocation(line: 3257, column: 19, scope: !10030)
!10107 = !DILocation(line: 3270, column: 19, scope: !10030)
!10108 = !DILocation(line: 3274, column: 3, scope: !10030)
!10109 = !DILocation(line: 3277, column: 3, scope: !10030)
!10110 = !DILocation(line: 3281, column: 3, scope: !10030)
!10111 = !DILocation(line: 3285, column: 3, scope: !10030)
!10112 = !DILocation(line: 3288, column: 3, scope: !10030)
!10113 = !DILocation(line: 3292, column: 3, scope: !10030)
!10114 = !DILocation(line: 3296, column: 3, scope: !10030)
!10115 = !DILocation(line: 3299, column: 3, scope: !10030)
!10116 = !DILocation(line: 3302, column: 19, scope: !10030)
!10117 = !DILocation(line: 3305, column: 19, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10030, file: !9288, line: 3305, column: 6)
!10119 = !DILocation(line: 3305, column: 6, scope: !10118)
!10120 = !DILocation(line: 3305, column: 31, scope: !10118)
!10121 = !DILocation(line: 0, scope: !10118)
!10122 = !DILocation(line: 3313, column: 1, scope: !10030)
!10123 = !DISubprogram(name: "HAL_InitTick", scope: !9663, file: !9663, line: 223, type: !10124, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!10124 = !DISubroutineType(types: !10125)
!10125 = !{!9291, !121}
!10126 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !9288, file: !9288, line: 3333, type: !10127, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10151)
!10127 = !DISubroutineType(types: !10128)
!10128 = !{!9291, !10129}
!10129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10130, size: 32)
!10130 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10131, line: 70, baseType: !10132)
!10131 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10131, line: 49, size: 416, elements: !10133)
!10133 = !{!10134, !10135, !10136, !10137, !10138, !10139, !10140}
!10134 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10132, file: !10131, line: 51, baseType: !121, size: 32)
!10135 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10132, file: !10131, line: 54, baseType: !121, size: 32, offset: 32)
!10136 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10132, file: !10131, line: 57, baseType: !121, size: 32, offset: 64)
!10137 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10132, file: !10131, line: 60, baseType: !121, size: 32, offset: 96)
!10138 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10132, file: !10131, line: 63, baseType: !121, size: 32, offset: 128)
!10139 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10132, file: !10131, line: 66, baseType: !121, size: 32, offset: 160)
!10140 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10132, file: !10131, line: 69, baseType: !10141, size: 224, offset: 192)
!10141 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9294, line: 73, baseType: !10142)
!10142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9294, line: 45, size: 224, elements: !10143)
!10143 = !{!10144, !10145, !10146, !10147, !10148, !10149, !10150}
!10144 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10142, file: !9294, line: 47, baseType: !121, size: 32)
!10145 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10142, file: !9294, line: 50, baseType: !121, size: 32, offset: 32)
!10146 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10142, file: !9294, line: 53, baseType: !121, size: 32, offset: 64)
!10147 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10142, file: !9294, line: 56, baseType: !121, size: 32, offset: 96)
!10148 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10142, file: !9294, line: 60, baseType: !121, size: 32, offset: 128)
!10149 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10142, file: !9294, line: 63, baseType: !121, size: 32, offset: 160)
!10150 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !10142, file: !9294, line: 68, baseType: !121, size: 32, offset: 192)
!10151 = !{!10152, !10153, !10154, !10155, !10159}
!10152 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10126, file: !9288, line: 3333, type: !10129)
!10153 = !DILocalVariable(name: "tickstart", scope: !10126, file: !9288, line: 3335, type: !121)
!10154 = !DILocalVariable(name: "pll_config", scope: !10126, file: !9288, line: 3335, type: !121)
!10155 = !DILocalVariable(name: "pwrclkchanged", scope: !10156, file: !9288, line: 3517, type: !10158)
!10156 = distinct !DILexicalBlock(scope: !10157, file: !9288, line: 3516, column: 3)
!10157 = distinct !DILexicalBlock(scope: !10126, file: !9288, line: 3515, column: 6)
!10158 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !666, line: 188, baseType: !2749)
!10159 = !DILocalVariable(name: "tmpreg", scope: !10160, file: !9288, line: 3526, type: !120)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !9288, line: 3526, column: 7)
!10161 = distinct !DILexicalBlock(scope: !10162, file: !9288, line: 3525, column: 5)
!10162 = distinct !DILexicalBlock(scope: !10156, file: !9288, line: 3524, column: 8)
!10163 = !DILocation(line: 0, scope: !10126)
!10164 = !DILocation(line: 3338, column: 24, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10126, file: !9288, line: 3338, column: 6)
!10166 = !DILocation(line: 3338, column: 6, scope: !10126)
!10167 = !DILocation(line: 3346, column: 27, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10126, file: !9288, line: 3346, column: 6)
!10169 = !DILocation(line: 3346, column: 43, scope: !10168)
!10170 = !DILocation(line: 3346, column: 69, scope: !10168)
!10171 = !DILocation(line: 3346, column: 6, scope: !10126)
!10172 = !DILocation(line: 3352, column: 9, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10174, file: !9288, line: 3352, column: 8)
!10174 = distinct !DILexicalBlock(scope: !10168, file: !9288, line: 3347, column: 3)
!10175 = !DILocation(line: 3352, column: 39, scope: !10173)
!10176 = !DILocation(line: 3352, column: 128, scope: !10173)
!10177 = !DILocation(line: 3353, column: 9, scope: !10173)
!10178 = !DILocation(line: 3353, column: 39, scope: !10173)
!10179 = !DILocation(line: 3353, column: 60, scope: !10173)
!10180 = !DILocation(line: 3353, column: 70, scope: !10173)
!10181 = !DILocation(line: 3353, column: 78, scope: !10173)
!10182 = !DILocation(line: 3353, column: 100, scope: !10173)
!10183 = !DILocation(line: 3353, column: 128, scope: !10173)
!10184 = !DILocation(line: 3354, column: 9, scope: !10173)
!10185 = !DILocation(line: 3354, column: 39, scope: !10173)
!10186 = !DILocation(line: 3354, column: 61, scope: !10173)
!10187 = !DILocation(line: 3354, column: 71, scope: !10173)
!10188 = !DILocation(line: 3354, column: 79, scope: !10173)
!10189 = !DILocation(line: 3354, column: 101, scope: !10173)
!10190 = !DILocation(line: 3352, column: 8, scope: !10174)
!10191 = !DILocation(line: 3360, column: 11, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10193, file: !9288, line: 3360, column: 10)
!10193 = distinct !DILexicalBlock(scope: !10173, file: !9288, line: 3359, column: 5)
!10194 = !DILocation(line: 3360, column: 57, scope: !10192)
!10195 = !DILocation(line: 3360, column: 80, scope: !10192)
!10196 = !DILocation(line: 3360, column: 89, scope: !10192)
!10197 = !DILocation(line: 3360, column: 10, scope: !10193)
!10198 = !DILocation(line: 3368, column: 7, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10200, file: !9288, line: 3368, column: 7)
!10200 = distinct !DILexicalBlock(scope: !10201, file: !9288, line: 3368, column: 7)
!10201 = distinct !DILexicalBlock(scope: !10173, file: !9288, line: 3366, column: 5)
!10202 = !DILocation(line: 3368, column: 7, scope: !10200)
!10203 = !DILocation(line: 3368, column: 7, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10199, file: !9288, line: 3368, column: 7)
!10205 = !DILocation(line: 3368, column: 7, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10207, file: !9288, line: 3368, column: 7)
!10207 = distinct !DILexicalBlock(scope: !10199, file: !9288, line: 3368, column: 7)
!10208 = !DILocation(line: 3368, column: 7, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10207, file: !9288, line: 3368, column: 7)
!10210 = !DILocation(line: 0, scope: !10199)
!10211 = !DILocation(line: 3371, column: 30, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10201, file: !9288, line: 3371, column: 10)
!10213 = !DILocation(line: 3371, column: 40, scope: !10212)
!10214 = !DILocation(line: 0, scope: !10212)
!10215 = !DILocation(line: 3371, column: 10, scope: !10201)
!10216 = !DILocation(line: 3377, column: 15, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10212, file: !9288, line: 3372, column: 7)
!10218 = !DILocation(line: 3377, column: 51, scope: !10217)
!10219 = !DILocation(line: 3377, column: 9, scope: !10217)
!10220 = !DILocation(line: 3379, column: 15, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10222, file: !9288, line: 3379, column: 14)
!10222 = distinct !DILexicalBlock(scope: !10217, file: !9288, line: 3378, column: 9)
!10223 = !DILocation(line: 3379, column: 29, scope: !10221)
!10224 = !DILocation(line: 3379, column: 43, scope: !10221)
!10225 = !DILocation(line: 3379, column: 14, scope: !10222)
!10226 = distinct !{!10226, !10219, !10227}
!10227 = !DILocation(line: 3383, column: 9, scope: !10217)
!10228 = !DILocation(line: 3391, column: 15, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10212, file: !9288, line: 3386, column: 7)
!10230 = !DILocation(line: 3391, column: 9, scope: !10229)
!10231 = !DILocation(line: 3393, column: 15, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10233, file: !9288, line: 3393, column: 14)
!10233 = distinct !DILexicalBlock(scope: !10229, file: !9288, line: 3392, column: 9)
!10234 = !DILocation(line: 3393, column: 29, scope: !10232)
!10235 = !DILocation(line: 3393, column: 43, scope: !10232)
!10236 = !DILocation(line: 3393, column: 14, scope: !10233)
!10237 = distinct !{!10237, !10230, !10238}
!10238 = !DILocation(line: 3397, column: 9, scope: !10229)
!10239 = !DILocation(line: 3402, column: 27, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10126, file: !9288, line: 3402, column: 6)
!10241 = !DILocation(line: 3402, column: 43, scope: !10240)
!10242 = !DILocation(line: 3402, column: 69, scope: !10240)
!10243 = !DILocation(line: 3402, column: 6, scope: !10126)
!10244 = !DILocation(line: 3410, column: 9, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10246, file: !9288, line: 3410, column: 8)
!10246 = distinct !DILexicalBlock(scope: !10240, file: !9288, line: 3403, column: 3)
!10247 = !DILocation(line: 3410, column: 39, scope: !10245)
!10248 = !DILocation(line: 3410, column: 128, scope: !10245)
!10249 = !DILocation(line: 3411, column: 9, scope: !10245)
!10250 = !DILocation(line: 3411, column: 39, scope: !10245)
!10251 = !DILocation(line: 3411, column: 60, scope: !10245)
!10252 = !DILocation(line: 3411, column: 70, scope: !10245)
!10253 = !DILocation(line: 3411, column: 78, scope: !10245)
!10254 = !DILocation(line: 3411, column: 100, scope: !10245)
!10255 = !DILocation(line: 3411, column: 128, scope: !10245)
!10256 = !DILocation(line: 3412, column: 9, scope: !10245)
!10257 = !DILocation(line: 3412, column: 39, scope: !10245)
!10258 = !DILocation(line: 3412, column: 61, scope: !10245)
!10259 = !DILocation(line: 3412, column: 71, scope: !10245)
!10260 = !DILocation(line: 3412, column: 79, scope: !10245)
!10261 = !DILocation(line: 3412, column: 101, scope: !10245)
!10262 = !DILocation(line: 3410, column: 8, scope: !10246)
!10263 = !DILocation(line: 3419, column: 11, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10265, file: !9288, line: 3419, column: 10)
!10265 = distinct !DILexicalBlock(scope: !10245, file: !9288, line: 3417, column: 5)
!10266 = !DILocation(line: 3419, column: 57, scope: !10264)
!10267 = !DILocation(line: 3419, column: 80, scope: !10264)
!10268 = !DILocation(line: 3419, column: 89, scope: !10264)
!10269 = !DILocation(line: 3419, column: 10, scope: !10265)
!10270 = !DILocation(line: 3433, column: 30, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10272, file: !9288, line: 3433, column: 10)
!10272 = distinct !DILexicalBlock(scope: !10245, file: !9288, line: 3431, column: 5)
!10273 = !DILocation(line: 3433, column: 39, scope: !10271)
!10274 = !DILocation(line: 3433, column: 10, scope: !10272)
!10275 = !DILocation(line: 3436, column: 9, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10271, file: !9288, line: 3434, column: 7)
!10277 = !DILocation(line: 3439, column: 21, scope: !10276)
!10278 = !DILocation(line: 3442, column: 9, scope: !10276)
!10279 = !DILocation(line: 3442, column: 15, scope: !10276)
!10280 = !DILocation(line: 3442, column: 51, scope: !10276)
!10281 = !DILocation(line: 3444, column: 15, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10283, file: !9288, line: 3444, column: 14)
!10283 = distinct !DILexicalBlock(scope: !10276, file: !9288, line: 3443, column: 9)
!10284 = !DILocation(line: 3444, column: 29, scope: !10282)
!10285 = !DILocation(line: 3444, column: 43, scope: !10282)
!10286 = !DILocation(line: 3444, column: 14, scope: !10283)
!10287 = distinct !{!10287, !10278, !10288}
!10288 = !DILocation(line: 3448, column: 9, scope: !10276)
!10289 = !DILocation(line: 3456, column: 9, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10271, file: !9288, line: 3454, column: 7)
!10291 = !DILocation(line: 3459, column: 21, scope: !10290)
!10292 = !DILocation(line: 3462, column: 9, scope: !10290)
!10293 = !DILocation(line: 3462, column: 15, scope: !10290)
!10294 = !DILocation(line: 3464, column: 15, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10296, file: !9288, line: 3464, column: 14)
!10296 = distinct !DILexicalBlock(scope: !10290, file: !9288, line: 3463, column: 9)
!10297 = !DILocation(line: 3464, column: 29, scope: !10295)
!10298 = !DILocation(line: 3464, column: 43, scope: !10295)
!10299 = !DILocation(line: 3464, column: 14, scope: !10296)
!10300 = distinct !{!10300, !10292, !10301}
!10301 = !DILocation(line: 3468, column: 9, scope: !10290)
!10302 = !DILocation(line: 0, scope: !10245)
!10303 = !DILocation(line: 3473, column: 27, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10126, file: !9288, line: 3473, column: 6)
!10305 = !DILocation(line: 3473, column: 43, scope: !10304)
!10306 = !DILocation(line: 3473, column: 69, scope: !10304)
!10307 = !DILocation(line: 3473, column: 6, scope: !10126)
!10308 = !DILocation(line: 3479, column: 28, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10310, file: !9288, line: 3479, column: 8)
!10310 = distinct !DILexicalBlock(scope: !10304, file: !9288, line: 3474, column: 3)
!10311 = !DILocation(line: 3479, column: 37, scope: !10309)
!10312 = !DILocation(line: 3479, column: 8, scope: !10310)
!10313 = !DILocation(line: 3482, column: 7, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10309, file: !9288, line: 3480, column: 5)
!10315 = !DILocation(line: 3485, column: 19, scope: !10314)
!10316 = !DILocation(line: 3488, column: 7, scope: !10314)
!10317 = !DILocation(line: 3488, column: 13, scope: !10314)
!10318 = !DILocation(line: 3488, column: 49, scope: !10314)
!10319 = !DILocation(line: 3490, column: 13, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10321, file: !9288, line: 3490, column: 12)
!10321 = distinct !DILexicalBlock(scope: !10314, file: !9288, line: 3489, column: 7)
!10322 = !DILocation(line: 3490, column: 27, scope: !10320)
!10323 = !DILocation(line: 3490, column: 41, scope: !10320)
!10324 = !DILocation(line: 3490, column: 12, scope: !10321)
!10325 = distinct !{!10325, !10316, !10326}
!10326 = !DILocation(line: 3494, column: 7, scope: !10314)
!10327 = !DILocation(line: 3499, column: 7, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10309, file: !9288, line: 3497, column: 5)
!10329 = !DILocation(line: 3502, column: 19, scope: !10328)
!10330 = !DILocation(line: 3505, column: 7, scope: !10328)
!10331 = !DILocation(line: 3505, column: 13, scope: !10328)
!10332 = !DILocation(line: 3507, column: 13, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10334, file: !9288, line: 3507, column: 12)
!10334 = distinct !DILexicalBlock(scope: !10328, file: !9288, line: 3506, column: 7)
!10335 = !DILocation(line: 3507, column: 27, scope: !10333)
!10336 = !DILocation(line: 3507, column: 41, scope: !10333)
!10337 = !DILocation(line: 3507, column: 12, scope: !10334)
!10338 = distinct !{!10338, !10330, !10339}
!10339 = !DILocation(line: 3511, column: 7, scope: !10328)
!10340 = !DILocation(line: 3515, column: 27, scope: !10157)
!10341 = !DILocation(line: 3515, column: 43, scope: !10157)
!10342 = !DILocation(line: 3515, column: 69, scope: !10157)
!10343 = !DILocation(line: 3515, column: 6, scope: !10126)
!10344 = !DILocation(line: 0, scope: !10156)
!10345 = !DILocation(line: 3524, column: 8, scope: !10162)
!10346 = !DILocation(line: 3524, column: 8, scope: !10156)
!10347 = !DILocation(line: 3526, column: 7, scope: !10160)
!10348 = !DILocation(line: 3526, column: 7, scope: !10161)
!10349 = !DILocation(line: 3528, column: 5, scope: !10161)
!10350 = !DILocation(line: 3530, column: 8, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10156, file: !9288, line: 3530, column: 8)
!10352 = !DILocation(line: 3530, column: 8, scope: !10156)
!10353 = !DILocation(line: 3533, column: 7, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10351, file: !9288, line: 3531, column: 5)
!10355 = !DILocation(line: 3536, column: 19, scope: !10354)
!10356 = !DILocation(line: 3538, column: 7, scope: !10354)
!10357 = !DILocation(line: 3538, column: 13, scope: !10354)
!10358 = !DILocation(line: 3540, column: 13, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10360, file: !9288, line: 3540, column: 12)
!10360 = distinct !DILexicalBlock(scope: !10354, file: !9288, line: 3539, column: 7)
!10361 = !DILocation(line: 3540, column: 27, scope: !10359)
!10362 = !DILocation(line: 3540, column: 40, scope: !10359)
!10363 = !DILocation(line: 3540, column: 12, scope: !10360)
!10364 = distinct !{!10364, !10356, !10365}
!10365 = !DILocation(line: 3544, column: 7, scope: !10354)
!10366 = !DILocation(line: 3548, column: 5, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10368, file: !9288, line: 3548, column: 5)
!10368 = distinct !DILexicalBlock(scope: !10156, file: !9288, line: 3548, column: 5)
!10369 = !DILocation(line: 3548, column: 5, scope: !10368)
!10370 = !DILocation(line: 3548, column: 5, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10367, file: !9288, line: 3548, column: 5)
!10372 = !DILocation(line: 3548, column: 5, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10374, file: !9288, line: 3548, column: 5)
!10374 = distinct !DILexicalBlock(scope: !10367, file: !9288, line: 3548, column: 5)
!10375 = !DILocation(line: 3548, column: 5, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10374, file: !9288, line: 3548, column: 5)
!10377 = !DILocation(line: 0, scope: !10367)
!10378 = !DILocation(line: 3550, column: 28, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10156, file: !9288, line: 3550, column: 8)
!10380 = !DILocation(line: 3550, column: 38, scope: !10379)
!10381 = !DILocation(line: 0, scope: !10379)
!10382 = !DILocation(line: 3550, column: 8, scope: !10156)
!10383 = !DILocation(line: 3556, column: 13, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10379, file: !9288, line: 3551, column: 5)
!10385 = !DILocation(line: 3556, column: 49, scope: !10384)
!10386 = !DILocation(line: 3556, column: 7, scope: !10384)
!10387 = !DILocation(line: 3558, column: 13, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10389, file: !9288, line: 3558, column: 12)
!10389 = distinct !DILexicalBlock(scope: !10384, file: !9288, line: 3557, column: 7)
!10390 = !DILocation(line: 3558, column: 27, scope: !10388)
!10391 = !DILocation(line: 3558, column: 41, scope: !10388)
!10392 = !DILocation(line: 3558, column: 12, scope: !10389)
!10393 = distinct !{!10393, !10386, !10394}
!10394 = !DILocation(line: 3562, column: 7, scope: !10384)
!10395 = !DILocation(line: 3570, column: 13, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10379, file: !9288, line: 3565, column: 5)
!10397 = !DILocation(line: 3570, column: 7, scope: !10396)
!10398 = !DILocation(line: 3572, column: 13, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10400, file: !9288, line: 3572, column: 12)
!10400 = distinct !DILexicalBlock(scope: !10396, file: !9288, line: 3571, column: 7)
!10401 = !DILocation(line: 3572, column: 27, scope: !10399)
!10402 = !DILocation(line: 3572, column: 41, scope: !10399)
!10403 = !DILocation(line: 3572, column: 12, scope: !10400)
!10404 = distinct !{!10404, !10397, !10405}
!10405 = !DILocation(line: 3576, column: 7, scope: !10396)
!10406 = !DILocation(line: 3580, column: 8, scope: !10156)
!10407 = !DILocation(line: 3582, column: 7, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10409, file: !9288, line: 3581, column: 5)
!10409 = distinct !DILexicalBlock(scope: !10156, file: !9288, line: 3580, column: 8)
!10410 = !DILocation(line: 3583, column: 5, scope: !10408)
!10411 = !DILocation(line: 3588, column: 31, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10126, file: !9288, line: 3588, column: 7)
!10413 = !DILocation(line: 3588, column: 41, scope: !10412)
!10414 = !DILocation(line: 3588, column: 7, scope: !10126)
!10415 = !DILocation(line: 3591, column: 8, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10417, file: !9288, line: 3591, column: 8)
!10417 = distinct !DILexicalBlock(scope: !10412, file: !9288, line: 3589, column: 3)
!10418 = !DILocation(line: 3591, column: 38, scope: !10416)
!10419 = !DILocation(line: 3591, column: 8, scope: !10417)
!10420 = !DILocation(line: 3593, column: 44, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10422, file: !9288, line: 3593, column: 10)
!10422 = distinct !DILexicalBlock(scope: !10416, file: !9288, line: 3592, column: 5)
!10423 = !DILocation(line: 0, scope: !10421)
!10424 = !DILocation(line: 3593, column: 10, scope: !10422)
!10425 = !DILocation(line: 3610, column: 15, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10421, file: !9288, line: 3594, column: 7)
!10427 = !DILocation(line: 3610, column: 9, scope: !10426)
!10428 = !DILocation(line: 3612, column: 15, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10430, file: !9288, line: 3612, column: 14)
!10430 = distinct !DILexicalBlock(scope: !10426, file: !9288, line: 3611, column: 9)
!10431 = !DILocation(line: 3612, column: 29, scope: !10429)
!10432 = !DILocation(line: 3612, column: 43, scope: !10429)
!10433 = !DILocation(line: 3612, column: 14, scope: !10430)
!10434 = distinct !{!10434, !10427, !10435}
!10435 = !DILocation(line: 3616, column: 9, scope: !10426)
!10436 = !DILocation(line: 3619, column: 9, scope: !10426)
!10437 = !DILocation(line: 3626, column: 9, scope: !10426)
!10438 = !DILocation(line: 3629, column: 21, scope: !10426)
!10439 = !DILocation(line: 3632, column: 9, scope: !10426)
!10440 = !DILocation(line: 3632, column: 15, scope: !10426)
!10441 = !DILocation(line: 3632, column: 51, scope: !10426)
!10442 = !DILocation(line: 3634, column: 15, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10444, file: !9288, line: 3634, column: 14)
!10444 = distinct !DILexicalBlock(scope: !10426, file: !9288, line: 3633, column: 9)
!10445 = !DILocation(line: 3634, column: 29, scope: !10443)
!10446 = !DILocation(line: 3634, column: 43, scope: !10443)
!10447 = !DILocation(line: 3634, column: 14, scope: !10444)
!10448 = distinct !{!10448, !10439, !10449}
!10449 = !DILocation(line: 3638, column: 9, scope: !10426)
!10450 = !DILocation(line: 3649, column: 15, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10421, file: !9288, line: 3641, column: 7)
!10452 = !DILocation(line: 3649, column: 9, scope: !10451)
!10453 = !DILocation(line: 3651, column: 15, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10455, file: !9288, line: 3651, column: 14)
!10455 = distinct !DILexicalBlock(scope: !10451, file: !9288, line: 3650, column: 9)
!10456 = !DILocation(line: 3651, column: 29, scope: !10454)
!10457 = !DILocation(line: 3651, column: 43, scope: !10454)
!10458 = !DILocation(line: 3651, column: 14, scope: !10455)
!10459 = distinct !{!10459, !10452, !10460}
!10460 = !DILocation(line: 3655, column: 9, scope: !10451)
!10461 = !DILocation(line: 3661, column: 44, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10463, file: !9288, line: 3661, column: 10)
!10463 = distinct !DILexicalBlock(scope: !10416, file: !9288, line: 3659, column: 5)
!10464 = !DILocation(line: 3661, column: 10, scope: !10463)
!10465 = !DILocation(line: 3668, column: 27, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10462, file: !9288, line: 3666, column: 7)
!10467 = !DILocation(line: 3671, column: 14, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10466, file: !9288, line: 3670, column: 13)
!10469 = !DILocation(line: 3671, column: 81, scope: !10468)
!10470 = !DILocation(line: 3671, column: 55, scope: !10468)
!10471 = !DILocation(line: 3671, column: 92, scope: !10468)
!10472 = !DILocation(line: 3672, column: 14, scope: !10468)
!10473 = !DILocation(line: 3672, column: 80, scope: !10468)
!10474 = !DILocation(line: 3672, column: 53, scope: !10468)
!10475 = !DILocation(line: 3672, column: 111, scope: !10468)
!10476 = !DILocation(line: 3673, column: 14, scope: !10468)
!10477 = !DILocation(line: 3673, column: 80, scope: !10468)
!10478 = !DILocation(line: 3673, column: 86, scope: !10468)
!10479 = !DILocation(line: 3673, column: 53, scope: !10468)
!10480 = !DILocation(line: 3673, column: 111, scope: !10468)
!10481 = !DILocation(line: 3674, column: 14, scope: !10468)
!10482 = !DILocation(line: 3674, column: 82, scope: !10468)
!10483 = !DILocation(line: 3674, column: 101, scope: !10468)
!10484 = !DILocation(line: 3674, column: 53, scope: !10468)
!10485 = !DILocation(line: 3674, column: 126, scope: !10468)
!10486 = !DILocation(line: 3675, column: 14, scope: !10468)
!10487 = !DILocation(line: 3675, column: 80, scope: !10468)
!10488 = !DILocation(line: 3675, column: 85, scope: !10468)
!10489 = !DILocation(line: 3675, column: 53, scope: !10468)
!10490 = !DILocation(line: 3675, column: 111, scope: !10468)
!10491 = !DILocation(line: 3676, column: 14, scope: !10468)
!10492 = !DILocation(line: 3676, column: 80, scope: !10468)
!10493 = !DILocation(line: 3676, column: 85, scope: !10468)
!10494 = !DILocation(line: 3676, column: 53, scope: !10468)
!10495 = !DILocation(line: 3670, column: 13, scope: !10466)
!10496 = !DILocation(line: 3691, column: 3, scope: !10126)
!10497 = !DILocation(line: 3692, column: 1, scope: !10126)
!10498 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !9288, file: !9288, line: 3703, type: !10499, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !10501)
!10499 = !DISubroutineType(types: !10500)
!10500 = !{null, !10129}
!10501 = !{!10502}
!10502 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10498, file: !9288, line: 3703, type: !10129)
!10503 = !DILocation(line: 0, scope: !10498)
!10504 = !DILocation(line: 3706, column: 22, scope: !10498)
!10505 = !DILocation(line: 3706, column: 37, scope: !10498)
!10506 = !DILocation(line: 3709, column: 12, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10498, file: !9288, line: 3709, column: 6)
!10508 = !DILocation(line: 3709, column: 15, scope: !10507)
!10509 = !DILocation(line: 3709, column: 31, scope: !10507)
!10510 = !DILocation(line: 3709, column: 6, scope: !10498)
!10511 = !DILocation(line: 3711, column: 24, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10507, file: !9288, line: 3710, column: 3)
!10513 = !DILocation(line: 3711, column: 33, scope: !10512)
!10514 = !DILocation(line: 3712, column: 3, scope: !10512)
!10515 = !DILocation(line: 3713, column: 17, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10507, file: !9288, line: 3713, column: 11)
!10517 = !DILocation(line: 3713, column: 20, scope: !10516)
!10518 = !DILocation(line: 3713, column: 35, scope: !10516)
!10519 = !DILocation(line: 0, scope: !10516)
!10520 = !DILocation(line: 3713, column: 11, scope: !10507)
!10521 = !DILocation(line: 3715, column: 33, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10516, file: !9288, line: 3714, column: 3)
!10523 = !DILocation(line: 3716, column: 3, scope: !10522)
!10524 = !DILocation(line: 3719, column: 33, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10516, file: !9288, line: 3718, column: 3)
!10526 = !DILocation(line: 3723, column: 12, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10498, file: !9288, line: 3723, column: 6)
!10528 = !DILocation(line: 3723, column: 15, scope: !10527)
!10529 = !DILocation(line: 3729, column: 24, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10527, file: !9288, line: 3728, column: 3)
!10531 = !DILocation(line: 3729, column: 33, scope: !10530)
!10532 = !DILocation(line: 3732, column: 61, scope: !10498)
!10533 = !DILocation(line: 3732, column: 81, scope: !10498)
!10534 = !DILocation(line: 3732, column: 22, scope: !10498)
!10535 = !DILocation(line: 3732, column: 42, scope: !10498)
!10536 = !DILocation(line: 3735, column: 12, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10498, file: !9288, line: 3735, column: 6)
!10538 = !DILocation(line: 3735, column: 17, scope: !10537)
!10539 = !DILocation(line: 3735, column: 35, scope: !10537)
!10540 = !DILocation(line: 3735, column: 6, scope: !10498)
!10541 = !DILocation(line: 3737, column: 24, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10537, file: !9288, line: 3736, column: 3)
!10543 = !DILocation(line: 3737, column: 33, scope: !10542)
!10544 = !DILocation(line: 3738, column: 3, scope: !10542)
!10545 = !DILocation(line: 3739, column: 17, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10537, file: !9288, line: 3739, column: 11)
!10547 = !DILocation(line: 3739, column: 22, scope: !10546)
!10548 = !DILocation(line: 3739, column: 39, scope: !10546)
!10549 = !DILocation(line: 0, scope: !10546)
!10550 = !DILocation(line: 3739, column: 11, scope: !10537)
!10551 = !DILocation(line: 3741, column: 33, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10546, file: !9288, line: 3740, column: 3)
!10553 = !DILocation(line: 3742, column: 3, scope: !10552)
!10554 = !DILocation(line: 3745, column: 33, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10546, file: !9288, line: 3744, column: 3)
!10556 = !DILocation(line: 3749, column: 12, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10498, file: !9288, line: 3749, column: 6)
!10558 = !DILocation(line: 3749, column: 16, scope: !10557)
!10559 = !DILocation(line: 3755, column: 24, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10557, file: !9288, line: 3754, column: 3)
!10561 = !DILocation(line: 3755, column: 33, scope: !10560)
!10562 = !DILocation(line: 3759, column: 12, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10498, file: !9288, line: 3759, column: 6)
!10564 = !DILocation(line: 3759, column: 15, scope: !10563)
!10565 = !DILocation(line: 3759, column: 30, scope: !10563)
!10566 = !DILocation(line: 3759, column: 6, scope: !10498)
!10567 = !DILocation(line: 3765, column: 28, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10563, file: !9288, line: 3764, column: 3)
!10569 = !DILocation(line: 3765, column: 37, scope: !10568)
!10570 = !DILocation(line: 3767, column: 54, scope: !10498)
!10571 = !DILocation(line: 3767, column: 62, scope: !10498)
!10572 = !DILocation(line: 3767, column: 26, scope: !10498)
!10573 = !DILocation(line: 3767, column: 36, scope: !10498)
!10574 = !DILocation(line: 3768, column: 49, scope: !10498)
!10575 = !DILocation(line: 3768, column: 57, scope: !10498)
!10576 = !DILocation(line: 3768, column: 26, scope: !10498)
!10577 = !DILocation(line: 3768, column: 31, scope: !10498)
!10578 = !DILocation(line: 3769, column: 50, scope: !10498)
!10579 = !DILocation(line: 3769, column: 78, scope: !10498)
!10580 = !DILocation(line: 3769, column: 26, scope: !10498)
!10581 = !DILocation(line: 3769, column: 31, scope: !10498)
!10582 = !DILocation(line: 3770, column: 52, scope: !10498)
!10583 = !DILocation(line: 3770, column: 102, scope: !10498)
!10584 = !DILocation(line: 3770, column: 109, scope: !10498)
!10585 = !DILocation(line: 3770, column: 26, scope: !10498)
!10586 = !DILocation(line: 3770, column: 31, scope: !10498)
!10587 = !DILocation(line: 3771, column: 50, scope: !10498)
!10588 = !DILocation(line: 3771, column: 78, scope: !10498)
!10589 = !DILocation(line: 3771, column: 26, scope: !10498)
!10590 = !DILocation(line: 3771, column: 31, scope: !10498)
!10591 = !DILocation(line: 3772, column: 50, scope: !10498)
!10592 = !DILocation(line: 3772, column: 78, scope: !10498)
!10593 = !DILocation(line: 3772, column: 26, scope: !10498)
!10594 = !DILocation(line: 3772, column: 31, scope: !10498)
!10595 = !DILocation(line: 3773, column: 1, scope: !10498)
!10596 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !10597, file: !10597, line: 257, type: !5112, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10598)
!10597 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10598 = !{!10599}
!10599 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10596, file: !10597, line: 257, type: !121)
!10600 = !DILocation(line: 0, scope: !10596)
!10601 = !DILocation(line: 260, column: 3, scope: !10596)
!10602 = !DILocation(line: 261, column: 1, scope: !10596)
!10603 = distinct !DISubprogram(name: "LL_InitTick", scope: !10604, file: !10604, line: 260, type: !7718, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10605)
!10604 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10605 = !{!10606, !10607}
!10606 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10603, file: !10604, line: 260, type: !121)
!10607 = !DILocalVariable(name: "Ticks", arg: 2, scope: !10603, file: !10604, line: 260, type: !121)
!10608 = !DILocation(line: 0, scope: !10603)
!10609 = !DILocation(line: 263, column: 46, scope: !10603)
!10610 = !DILocation(line: 263, column: 55, scope: !10603)
!10611 = !DILocation(line: 263, column: 18, scope: !10603)
!10612 = !DILocation(line: 264, column: 18, scope: !10603)
!10613 = !DILocation(line: 265, column: 18, scope: !10603)
!10614 = !DILocation(line: 267, column: 1, scope: !10603)
!10615 = distinct !DISubprogram(name: "LL_mDelay", scope: !10597, file: !10597, line: 273, type: !5112, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10616)
!10616 = !{!10617, !10618}
!10617 = !DILocalVariable(name: "Delay", arg: 1, scope: !10615, file: !10597, line: 273, type: !121)
!10618 = !DILocalVariable(name: "tmp", scope: !10615, file: !10597, line: 275, type: !120)
!10619 = !DILocation(line: 0, scope: !10615)
!10620 = !DILocation(line: 275, column: 3, scope: !10615)
!10621 = !DILocation(line: 275, column: 18, scope: !10615)
!10622 = !DILocation(line: 275, column: 33, scope: !10615)
!10623 = !DILocation(line: 277, column: 10, scope: !10615)
!10624 = !DILocation(line: 280, column: 12, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10615, file: !10597, line: 280, column: 6)
!10626 = !DILocation(line: 285, column: 3, scope: !10615)
!10627 = !DILocation(line: 287, column: 18, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10629, file: !10597, line: 287, column: 8)
!10629 = distinct !DILexicalBlock(scope: !10615, file: !10597, line: 286, column: 3)
!10630 = !DILocation(line: 292, column: 1, scope: !10615)
!10631 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !10597, file: !10597, line: 323, type: !5112, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10632)
!10632 = !{!10633}
!10633 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !10631, file: !10597, line: 323, type: !121)
!10634 = !DILocation(line: 0, scope: !10631)
!10635 = !DILocation(line: 326, column: 19, scope: !10631)
!10636 = !DILocation(line: 327, column: 1, scope: !10631)
!10637 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !10597, file: !10597, line: 338, type: !10638, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10641)
!10638 = !DISubroutineType(types: !10639)
!10639 = !{!10640, !121}
!10640 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !666, line: 201, baseType: !665)
!10641 = !{!10642, !10643, !10644, !10645, !10646}
!10642 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !10637, file: !10597, line: 338, type: !121)
!10643 = !DILocalVariable(name: "timeout", scope: !10637, file: !10597, line: 340, type: !121)
!10644 = !DILocalVariable(name: "getlatency", scope: !10637, file: !10597, line: 341, type: !121)
!10645 = !DILocalVariable(name: "latency", scope: !10637, file: !10597, line: 342, type: !121)
!10646 = !DILocalVariable(name: "status", scope: !10637, file: !10597, line: 343, type: !10640)
!10647 = !DILocation(line: 0, scope: !10637)
!10648 = !DILocation(line: 347, column: 21, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10637, file: !10597, line: 347, column: 6)
!10650 = !DILocation(line: 347, column: 6, scope: !10637)
!10651 = !DILocation(line: 353, column: 8, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10653, file: !10597, line: 353, column: 8)
!10653 = distinct !DILexicalBlock(scope: !10649, file: !10597, line: 352, column: 3)
!10654 = !DILocation(line: 353, column: 40, scope: !10652)
!10655 = !DILocation(line: 353, column: 8, scope: !10653)
!10656 = !DILocation(line: 356, column: 26, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10658, file: !10597, line: 356, column: 10)
!10658 = distinct !DILexicalBlock(scope: !10652, file: !10597, line: 354, column: 5)
!10659 = !DILocation(line: 356, column: 55, scope: !10657)
!10660 = !DILocation(line: 362, column: 55, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10658, file: !10597, line: 362, column: 10)
!10662 = !DILocation(line: 368, column: 55, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10658, file: !10597, line: 368, column: 10)
!10664 = !DILocation(line: 374, column: 26, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10658, file: !10597, line: 374, column: 10)
!10666 = !DILocation(line: 374, column: 55, scope: !10665)
!10667 = !DILocation(line: 380, column: 28, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10669, file: !10597, line: 380, column: 12)
!10669 = distinct !DILexicalBlock(scope: !10665, file: !10597, line: 379, column: 7)
!10670 = !DILocation(line: 380, column: 57, scope: !10668)
!10671 = !DILocation(line: 387, column: 8, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10653, file: !10597, line: 387, column: 8)
!10673 = !DILocation(line: 387, column: 40, scope: !10672)
!10674 = !DILocation(line: 387, column: 8, scope: !10653)
!10675 = !DILocation(line: 390, column: 26, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10677, file: !10597, line: 390, column: 10)
!10677 = distinct !DILexicalBlock(scope: !10672, file: !10597, line: 388, column: 5)
!10678 = !DILocation(line: 390, column: 55, scope: !10676)
!10679 = !DILocation(line: 396, column: 26, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10677, file: !10597, line: 396, column: 10)
!10681 = !DILocation(line: 396, column: 55, scope: !10680)
!10682 = !DILocation(line: 402, column: 26, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10677, file: !10597, line: 402, column: 10)
!10684 = !DILocation(line: 402, column: 55, scope: !10683)
!10685 = !DILocation(line: 407, column: 26, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10677, file: !10597, line: 407, column: 10)
!10687 = !DILocation(line: 407, column: 55, scope: !10686)
!10688 = !DILocation(line: 413, column: 28, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10690, file: !10597, line: 413, column: 12)
!10690 = distinct !DILexicalBlock(scope: !10686, file: !10597, line: 412, column: 7)
!10691 = !DILocation(line: 413, column: 57, scope: !10689)
!10692 = !DILocation(line: 0, scope: !10653)
!10693 = !DILocation(line: 420, column: 8, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10653, file: !10597, line: 420, column: 8)
!10695 = !DILocation(line: 420, column: 40, scope: !10694)
!10696 = !DILocation(line: 420, column: 8, scope: !10653)
!10697 = !DILocation(line: 423, column: 26, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !10699, file: !10597, line: 423, column: 10)
!10699 = distinct !DILexicalBlock(scope: !10694, file: !10597, line: 421, column: 5)
!10700 = !DILocation(line: 423, column: 55, scope: !10698)
!10701 = !DILocation(line: 429, column: 26, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10699, file: !10597, line: 429, column: 10)
!10703 = !DILocation(line: 429, column: 55, scope: !10702)
!10704 = !DILocation(line: 435, column: 28, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10706, file: !10597, line: 435, column: 12)
!10706 = distinct !DILexicalBlock(scope: !10702, file: !10597, line: 434, column: 7)
!10707 = !DILocation(line: 435, column: 57, scope: !10705)
!10708 = !DILocation(line: 444, column: 5, scope: !10653)
!10709 = !DILocation(line: 448, column: 5, scope: !10653)
!10710 = !DILocation(line: 451, column: 18, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10653, file: !10597, line: 449, column: 5)
!10712 = !DILocation(line: 452, column: 12, scope: !10711)
!10713 = !DILocation(line: 453, column: 26, scope: !10653)
!10714 = !DILocation(line: 453, column: 38, scope: !10653)
!10715 = !DILocation(line: 453, column: 5, scope: !10711)
!10716 = distinct !{!10716, !10709, !10717}
!10717 = !DILocation(line: 453, column: 54, scope: !10653)
!10718 = !DILocation(line: 0, scope: !10649)
!10719 = !DILocation(line: 464, column: 3, scope: !10637)
!10720 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !10721, file: !10721, line: 519, type: !5102, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!10721 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10722 = !DILocation(line: 521, column: 21, scope: !10720)
!10723 = !DILocation(line: 521, column: 3, scope: !10720)
!10724 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !4868, file: !4868, line: 1543, type: !5112, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10725)
!10725 = !{!10726}
!10726 = !DILocalVariable(name: "Latency", arg: 1, scope: !10724, file: !4868, line: 1543, type: !121)
!10727 = !DILocation(line: 0, scope: !10724)
!10728 = !DILocation(line: 1545, column: 3, scope: !10724)
!10729 = !DILocation(line: 1546, column: 1, scope: !10724)
!10730 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !4868, file: !4868, line: 1569, type: !5102, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!10731 = !DILocation(line: 1571, column: 21, scope: !10730)
!10732 = !DILocation(line: 1571, column: 3, scope: !10730)
!10733 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !10597, file: !10597, line: 483, type: !10734, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10750)
!10734 = !DISubroutineType(types: !10735)
!10735 = !{!10640, !10736, !10743}
!10736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10737, size: 32)
!10737 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !10604, line: 114, baseType: !10738)
!10738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10604, line: 94, size: 96, elements: !10739)
!10739 = !{!10740, !10741, !10742}
!10740 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10738, file: !10604, line: 96, baseType: !121, size: 32)
!10741 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10738, file: !10604, line: 102, baseType: !121, size: 32, offset: 32)
!10742 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10738, file: !10604, line: 109, baseType: !121, size: 32, offset: 64)
!10743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10744, size: 32)
!10744 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !10604, line: 139, baseType: !10745)
!10745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10604, line: 119, size: 96, elements: !10746)
!10746 = !{!10747, !10748, !10749}
!10747 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10745, file: !10604, line: 121, baseType: !121, size: 32)
!10748 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10745, file: !10604, line: 127, baseType: !121, size: 32, offset: 32)
!10749 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10745, file: !10604, line: 133, baseType: !121, size: 32, offset: 64)
!10750 = !{!10751, !10752, !10753, !10754}
!10751 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !10733, file: !10597, line: 483, type: !10736)
!10752 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10733, file: !10597, line: 484, type: !10743)
!10753 = !DILocalVariable(name: "status", scope: !10733, file: !10597, line: 486, type: !10640)
!10754 = !DILocalVariable(name: "pllfreq", scope: !10733, file: !10597, line: 487, type: !121)
!10755 = !DILocation(line: 0, scope: !10733)
!10756 = !DILocation(line: 490, column: 6, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10733, file: !10597, line: 490, column: 6)
!10758 = !DILocation(line: 490, column: 25, scope: !10757)
!10759 = !DILocation(line: 490, column: 6, scope: !10733)
!10760 = !DILocation(line: 493, column: 15, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10757, file: !10597, line: 491, column: 3)
!10762 = !DILocation(line: 496, column: 8, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10761, file: !10597, line: 496, column: 8)
!10764 = !DILocation(line: 496, column: 29, scope: !10763)
!10765 = !DILocation(line: 496, column: 8, scope: !10761)
!10766 = !DILocation(line: 498, column: 7, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10763, file: !10597, line: 497, column: 5)
!10768 = !DILocation(line: 499, column: 7, scope: !10767)
!10769 = !DILocation(line: 499, column: 14, scope: !10767)
!10770 = !DILocation(line: 499, column: 35, scope: !10767)
!10771 = distinct !{!10771, !10768, !10772}
!10772 = !DILocation(line: 502, column: 7, scope: !10767)
!10773 = !DILocation(line: 506, column: 76, scope: !10761)
!10774 = !DILocation(line: 506, column: 103, scope: !10761)
!10775 = !DILocation(line: 507, column: 54, scope: !10761)
!10776 = !DILocation(line: 506, column: 5, scope: !10761)
!10777 = !DILocation(line: 510, column: 14, scope: !10761)
!10778 = !DILocation(line: 511, column: 3, scope: !10761)
!10779 = !DILocation(line: 0, scope: !10757)
!10780 = !DILocation(line: 518, column: 3, scope: !10733)
!10781 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !10597, file: !10597, line: 642, type: !10782, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10784)
!10782 = !DISubroutineType(types: !10783)
!10783 = !{!10640}
!10784 = !{!10785}
!10785 = !DILocalVariable(name: "status", scope: !10781, file: !10597, line: 644, type: !10640)
!10786 = !DILocation(line: 0, scope: !10781)
!10787 = !DILocation(line: 647, column: 6, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10781, file: !10597, line: 647, column: 6)
!10789 = !DILocation(line: 647, column: 27, scope: !10788)
!10790 = !DILocation(line: 655, column: 6, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10781, file: !10597, line: 655, column: 6)
!10792 = !DILocation(line: 655, column: 30, scope: !10791)
!10793 = !DILocation(line: 663, column: 6, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10781, file: !10597, line: 663, column: 6)
!10795 = !DILocation(line: 663, column: 30, scope: !10794)
!10796 = !DILocation(line: 663, column: 6, scope: !10781)
!10797 = !DILocation(line: 669, column: 3, scope: !10781)
!10798 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !10597, file: !10597, line: 611, type: !10799, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10801)
!10799 = !DISubroutineType(types: !10800)
!10800 = !{!121, !121, !10736}
!10801 = !{!10802, !10803, !10804}
!10802 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !10798, file: !10597, line: 611, type: !121)
!10803 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !10798, file: !10597, line: 611, type: !10736)
!10804 = !DILocalVariable(name: "pllfreq", scope: !10798, file: !10597, line: 613, type: !121)
!10805 = !DILocation(line: 0, scope: !10798)
!10806 = !DILocation(line: 622, column: 56, scope: !10798)
!10807 = !DILocation(line: 622, column: 61, scope: !10798)
!10808 = !DILocation(line: 622, column: 32, scope: !10798)
!10809 = !DILocation(line: 626, column: 45, scope: !10798)
!10810 = !DILocation(line: 626, column: 50, scope: !10798)
!10811 = !DILocation(line: 626, column: 21, scope: !10798)
!10812 = !DILocation(line: 630, column: 47, scope: !10798)
!10813 = !DILocation(line: 630, column: 82, scope: !10798)
!10814 = !DILocation(line: 630, column: 21, scope: !10798)
!10815 = !DILocation(line: 633, column: 3, scope: !10798)
!10816 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !7058, file: !7058, line: 3007, type: !5102, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!10817 = !DILocation(line: 3009, column: 11, scope: !10816)
!10818 = !DILocation(line: 3009, column: 44, scope: !10816)
!10819 = !DILocation(line: 3009, column: 3, scope: !10816)
!10820 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !7058, file: !7058, line: 2987, type: !2909, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!10821 = !DILocation(line: 2989, column: 3, scope: !10820)
!10822 = !DILocation(line: 2990, column: 1, scope: !10820)
!10823 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !7058, file: !7058, line: 4304, type: !7192, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10824)
!10824 = !{!10825, !10826, !10827, !10828}
!10825 = !DILocalVariable(name: "Source", arg: 1, scope: !10823, file: !7058, line: 4304, type: !121)
!10826 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10823, file: !7058, line: 4304, type: !121)
!10827 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10823, file: !7058, line: 4304, type: !121)
!10828 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10823, file: !7058, line: 4304, type: !121)
!10829 = !DILocation(line: 0, scope: !10823)
!10830 = !DILocation(line: 4306, column: 3, scope: !10823)
!10831 = !DILocation(line: 4308, column: 3, scope: !10823)
!10832 = !DILocation(line: 4310, column: 3, scope: !10823)
!10833 = !DILocation(line: 4312, column: 1, scope: !10823)
!10834 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !10597, file: !10597, line: 681, type: !10835, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10837)
!10835 = !DISubroutineType(types: !10836)
!10836 = !{!10640, !121, !10743}
!10837 = !{!10838, !10839, !10840, !10841}
!10838 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !10834, file: !10597, line: 681, type: !121)
!10839 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10834, file: !10597, line: 681, type: !10743)
!10840 = !DILocalVariable(name: "status", scope: !10834, file: !10597, line: 683, type: !10640)
!10841 = !DILocalVariable(name: "hclk_frequency", scope: !10834, file: !10597, line: 684, type: !121)
!10842 = !DILocation(line: 0, scope: !10834)
!10843 = !DILocation(line: 691, column: 20, scope: !10834)
!10844 = !DILocation(line: 694, column: 6, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10834, file: !10597, line: 694, column: 6)
!10846 = !DILocation(line: 694, column: 22, scope: !10845)
!10847 = !DILocation(line: 694, column: 6, scope: !10834)
!10848 = !DILocation(line: 697, column: 14, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10845, file: !10597, line: 695, column: 3)
!10850 = !DILocation(line: 701, column: 13, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10834, file: !10597, line: 701, column: 6)
!10852 = !DILocation(line: 701, column: 6, scope: !10834)
!10853 = !DILocation(line: 704, column: 5, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10851, file: !10597, line: 702, column: 3)
!10855 = !DILocation(line: 705, column: 5, scope: !10854)
!10856 = !DILocation(line: 705, column: 12, scope: !10854)
!10857 = !DILocation(line: 705, column: 33, scope: !10854)
!10858 = distinct !{!10858, !10855, !10859}
!10859 = !DILocation(line: 708, column: 5, scope: !10854)
!10860 = !DILocation(line: 711, column: 49, scope: !10854)
!10861 = !DILocation(line: 711, column: 5, scope: !10854)
!10862 = !DILocation(line: 712, column: 5, scope: !10854)
!10863 = !DILocation(line: 713, column: 5, scope: !10854)
!10864 = !DILocation(line: 713, column: 12, scope: !10854)
!10865 = !DILocation(line: 713, column: 37, scope: !10854)
!10866 = distinct !{!10866, !10863, !10867}
!10867 = !DILocation(line: 716, column: 5, scope: !10854)
!10868 = !DILocation(line: 719, column: 50, scope: !10854)
!10869 = !DILocation(line: 719, column: 5, scope: !10854)
!10870 = !DILocation(line: 720, column: 50, scope: !10854)
!10871 = !DILocation(line: 720, column: 5, scope: !10854)
!10872 = !DILocation(line: 721, column: 3, scope: !10854)
!10873 = !DILocation(line: 724, column: 6, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10834, file: !10597, line: 724, column: 6)
!10875 = !DILocation(line: 724, column: 22, scope: !10874)
!10876 = !DILocation(line: 724, column: 6, scope: !10834)
!10877 = !DILocation(line: 727, column: 14, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10874, file: !10597, line: 725, column: 3)
!10879 = !DILocation(line: 728, column: 3, scope: !10878)
!10880 = !DILocation(line: 731, column: 13, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10834, file: !10597, line: 731, column: 6)
!10882 = !DILocation(line: 731, column: 6, scope: !10834)
!10883 = !DILocation(line: 733, column: 5, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10881, file: !10597, line: 732, column: 3)
!10885 = !DILocation(line: 734, column: 3, scope: !10884)
!10886 = !DILocation(line: 736, column: 3, scope: !10834)
!10887 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !7058, file: !7058, line: 4184, type: !2909, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!10888 = !DILocation(line: 4186, column: 3, scope: !10887)
!10889 = !DILocation(line: 4187, column: 1, scope: !10887)
!10890 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !7058, file: !7058, line: 4205, type: !5102, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!10891 = !DILocation(line: 4207, column: 11, scope: !10890)
!10892 = !DILocation(line: 4207, column: 44, scope: !10890)
!10893 = !DILocation(line: 4207, column: 3, scope: !10890)
!10894 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !7058, file: !7058, line: 3224, type: !5112, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10895)
!10895 = !{!10896}
!10896 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10894, file: !7058, line: 3224, type: !121)
!10897 = !DILocation(line: 0, scope: !10894)
!10898 = !DILocation(line: 3226, column: 3, scope: !10894)
!10899 = !DILocation(line: 3227, column: 1, scope: !10894)
!10900 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !7058, file: !7058, line: 3188, type: !5112, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10901)
!10901 = !{!10902}
!10902 = !DILocalVariable(name: "Source", arg: 1, scope: !10900, file: !7058, line: 3188, type: !121)
!10903 = !DILocation(line: 0, scope: !10900)
!10904 = !DILocation(line: 3190, column: 3, scope: !10900)
!10905 = !DILocation(line: 3191, column: 1, scope: !10900)
!10906 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !7058, file: !7058, line: 3204, type: !5102, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!10907 = !DILocation(line: 3206, column: 21, scope: !10906)
!10908 = !DILocation(line: 3206, column: 3, scope: !10906)
!10909 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !7058, file: !7058, line: 3240, type: !5112, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10910)
!10910 = !{!10911}
!10911 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10909, file: !7058, line: 3240, type: !121)
!10912 = !DILocation(line: 0, scope: !10909)
!10913 = !DILocation(line: 3242, column: 3, scope: !10909)
!10914 = !DILocation(line: 3243, column: 1, scope: !10909)
!10915 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !7058, file: !7058, line: 3256, type: !5112, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10916)
!10916 = !{!10917}
!10917 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10915, file: !7058, line: 3256, type: !121)
!10918 = !DILocation(line: 0, scope: !10915)
!10919 = !DILocation(line: 3258, column: 3, scope: !10915)
!10920 = !DILocation(line: 3259, column: 1, scope: !10915)
!10921 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !7058, file: !7058, line: 5969, type: !5102, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!10922 = !DILocation(line: 5971, column: 11, scope: !10921)
!10923 = !DILocation(line: 5971, column: 47, scope: !10921)
!10924 = !DILocation(line: 5971, column: 3, scope: !10921)
!10925 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !7058, file: !7058, line: 5153, type: !5102, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!10926 = !DILocation(line: 5155, column: 11, scope: !10925)
!10927 = !DILocation(line: 5155, column: 47, scope: !10925)
!10928 = !DILocation(line: 5155, column: 3, scope: !10925)
!10929 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !10597, file: !10597, line: 540, type: !10930, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !10932)
!10930 = !DISubroutineType(types: !10931)
!10931 = !{!10640, !121, !121, !10736, !10743}
!10932 = !{!10933, !10934, !10935, !10936, !10937, !10938}
!10933 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !10929, file: !10597, line: 540, type: !121)
!10934 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !10929, file: !10597, line: 540, type: !121)
!10935 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !10929, file: !10597, line: 541, type: !10736)
!10936 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !10929, file: !10597, line: 541, type: !10743)
!10937 = !DILocalVariable(name: "status", scope: !10929, file: !10597, line: 543, type: !10640)
!10938 = !DILocalVariable(name: "pllfreq", scope: !10929, file: !10597, line: 544, type: !121)
!10939 = !DILocation(line: 0, scope: !10929)
!10940 = !DILocation(line: 551, column: 6, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10929, file: !10597, line: 551, column: 6)
!10942 = !DILocation(line: 551, column: 25, scope: !10941)
!10943 = !DILocation(line: 551, column: 6, scope: !10929)
!10944 = !DILocation(line: 554, column: 15, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10941, file: !10597, line: 552, column: 3)
!10946 = !DILocation(line: 557, column: 8, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10945, file: !10597, line: 557, column: 8)
!10948 = !DILocation(line: 557, column: 29, scope: !10947)
!10949 = !DILocation(line: 557, column: 8, scope: !10945)
!10950 = !DILocation(line: 560, column: 20, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10952, file: !10597, line: 560, column: 10)
!10952 = distinct !DILexicalBlock(scope: !10947, file: !10597, line: 558, column: 5)
!10953 = !DILocation(line: 560, column: 10, scope: !10952)
!10954 = !DILocation(line: 562, column: 9, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10951, file: !10597, line: 561, column: 7)
!10956 = !DILocation(line: 563, column: 7, scope: !10955)
!10957 = !DILocation(line: 566, column: 9, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10951, file: !10597, line: 565, column: 7)
!10959 = !DILocation(line: 570, column: 7, scope: !10952)
!10960 = !DILocation(line: 571, column: 7, scope: !10952)
!10961 = !DILocation(line: 571, column: 14, scope: !10952)
!10962 = !DILocation(line: 571, column: 35, scope: !10952)
!10963 = distinct !{!10963, !10960, !10964}
!10964 = !DILocation(line: 574, column: 7, scope: !10952)
!10965 = !DILocation(line: 578, column: 76, scope: !10945)
!10966 = !DILocation(line: 578, column: 103, scope: !10945)
!10967 = !DILocation(line: 579, column: 54, scope: !10945)
!10968 = !DILocation(line: 578, column: 5, scope: !10945)
!10969 = !DILocation(line: 582, column: 14, scope: !10945)
!10970 = !DILocation(line: 583, column: 3, scope: !10945)
!10971 = !DILocation(line: 0, scope: !10941)
!10972 = !DILocation(line: 590, column: 3, scope: !10929)
!10973 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !7058, file: !7058, line: 2969, type: !5102, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!10974 = !DILocation(line: 2971, column: 11, scope: !10973)
!10975 = !DILocation(line: 2971, column: 44, scope: !10973)
!10976 = !DILocation(line: 2971, column: 3, scope: !10973)
!10977 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !7058, file: !7058, line: 2929, type: !2909, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!10978 = !DILocation(line: 2931, column: 3, scope: !10977)
!10979 = !DILocation(line: 2932, column: 1, scope: !10977)
!10980 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !7058, file: !7058, line: 2939, type: !2909, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!10981 = !DILocation(line: 2941, column: 3, scope: !10980)
!10982 = !DILocation(line: 2942, column: 1, scope: !10980)
!10983 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !7058, file: !7058, line: 2949, type: !2909, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !322)
!10984 = !DILocation(line: 2951, column: 3, scope: !10983)
!10985 = !DILocation(line: 2952, column: 1, scope: !10983)
!10986 = distinct !DISubprogram(name: "z_device_state_init", scope: !10987, file: !10987, line: 23, type: !2909, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !10988)
!10987 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10988 = !{!10989}
!10989 = !DILocalVariable(name: "dev", scope: !10986, file: !10987, line: 25, type: !10990)
!10990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10991, size: 32)
!10991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10992)
!10992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !141, line: 378, size: 192, elements: !10993)
!10993 = !{!10994, !10995, !10996, !10997, !11003, !11004}
!10994 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10992, file: !141, line: 380, baseType: !144, size: 32)
!10995 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10992, file: !141, line: 382, baseType: !13, size: 32, offset: 32)
!10996 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10992, file: !141, line: 384, baseType: !13, size: 32, offset: 64)
!10997 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10992, file: !141, line: 386, baseType: !10998, size: 32, offset: 96)
!10998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10999, size: 32)
!10999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !141, line: 351, size: 16, elements: !11000)
!11000 = !{!11001, !11002}
!11001 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10999, file: !141, line: 359, baseType: !154, size: 8)
!11002 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10999, file: !141, line: 364, baseType: !157, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11003 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10992, file: !141, line: 388, baseType: !102, size: 32, offset: 128)
!11004 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10992, file: !141, line: 396, baseType: !160, size: 32, offset: 160)
!11005 = !DILocation(line: 0, scope: !10986)
!11006 = !DILocation(line: 31, column: 1, scope: !10986)
!11007 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10987, file: !10987, line: 33, type: !11008, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11010)
!11008 = !DISubroutineType(types: !11009)
!11009 = !{!10990, !144}
!11010 = !{!11011, !11012}
!11011 = !DILocalVariable(name: "name", arg: 1, scope: !11007, file: !10987, line: 33, type: !144)
!11012 = !DILocalVariable(name: "dev", scope: !11007, file: !10987, line: 35, type: !10990)
!11013 = !DILocation(line: 0, scope: !11007)
!11014 = !DILocation(line: 40, column: 12, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11007, file: !10987, line: 40, column: 6)
!11016 = !DILocation(line: 40, column: 21, scope: !11015)
!11017 = !DILocation(line: 40, column: 25, scope: !11015)
!11018 = !DILocation(line: 40, column: 33, scope: !11015)
!11019 = !DILocation(line: 40, column: 6, scope: !11007)
!11020 = !DILocation(line: 55, column: 2, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11007, file: !10987, line: 55, column: 2)
!11022 = !DILocation(line: 50, column: 7, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !10987, line: 50, column: 7)
!11024 = distinct !DILexicalBlock(scope: !11025, file: !10987, line: 49, column: 57)
!11025 = distinct !DILexicalBlock(scope: !11026, file: !10987, line: 49, column: 2)
!11026 = distinct !DILexicalBlock(scope: !11007, file: !10987, line: 49, column: 2)
!11027 = !DILocation(line: 50, column: 30, scope: !11023)
!11028 = !DILocation(line: 50, column: 39, scope: !11023)
!11029 = !DILocation(line: 50, column: 44, scope: !11023)
!11030 = !DILocation(line: 50, column: 7, scope: !11024)
!11031 = !DILocation(line: 49, column: 53, scope: !11025)
!11032 = !DILocation(line: 49, column: 33, scope: !11025)
!11033 = !DILocation(line: 49, column: 2, scope: !11026)
!11034 = distinct !{!11034, !11033, !11035}
!11035 = !DILocation(line: 53, column: 2, scope: !11026)
!11036 = !DILocation(line: 56, column: 7, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11038, file: !10987, line: 56, column: 7)
!11038 = distinct !DILexicalBlock(scope: !11039, file: !10987, line: 55, column: 57)
!11039 = distinct !DILexicalBlock(scope: !11021, file: !10987, line: 55, column: 2)
!11040 = !DILocation(line: 56, column: 30, scope: !11037)
!11041 = !DILocation(line: 56, column: 52, scope: !11037)
!11042 = !DILocation(line: 56, column: 34, scope: !11037)
!11043 = !DILocation(line: 56, column: 58, scope: !11037)
!11044 = !DILocation(line: 56, column: 7, scope: !11038)
!11045 = !DILocation(line: 55, column: 53, scope: !11039)
!11046 = !DILocation(line: 55, column: 33, scope: !11039)
!11047 = distinct !{!11047, !11020, !11048}
!11048 = !DILocation(line: 59, column: 2, scope: !11021)
!11049 = !DILocation(line: 62, column: 1, scope: !11007)
!11050 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10987, file: !10987, line: 93, type: !11051, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11053)
!11051 = !DISubroutineType(types: !11052)
!11052 = !{!157, !10990}
!11053 = !{!11054}
!11054 = !DILocalVariable(name: "dev", arg: 1, scope: !11050, file: !10987, line: 93, type: !10990)
!11055 = !DILocation(line: 0, scope: !11050)
!11056 = !DILocation(line: 99, column: 10, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11050, file: !10987, line: 99, column: 6)
!11058 = !DILocation(line: 99, column: 6, scope: !11050)
!11059 = !DILocation(line: 103, column: 14, scope: !11050)
!11060 = !DILocation(line: 103, column: 21, scope: !11050)
!11061 = !DILocation(line: 103, column: 33, scope: !11050)
!11062 = !DILocation(line: 103, column: 49, scope: !11050)
!11063 = !DILocation(line: 103, column: 58, scope: !11050)
!11064 = !DILocation(line: 104, column: 1, scope: !11050)
!11065 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10987, file: !10987, line: 87, type: !11066, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11069)
!11066 = !DISubroutineType(types: !11067)
!11067 = !{!200, !11068}
!11068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10990, size: 32)
!11069 = !{!11070}
!11070 = !DILocalVariable(name: "devices", arg: 1, scope: !11065, file: !10987, line: 87, type: !11068)
!11071 = !DILocation(line: 0, scope: !11065)
!11072 = !DILocation(line: 89, column: 11, scope: !11065)
!11073 = !DILocation(line: 90, column: 2, scope: !11065)
!11074 = distinct !DISubprogram(name: "device_required_foreach", scope: !10987, file: !10987, line: 125, type: !11075, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11081)
!11075 = !DISubroutineType(types: !11076)
!11076 = !{!103, !10990, !11077, !102}
!11077 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !141, line: 471, baseType: !11078)
!11078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11079, size: 32)
!11079 = !DISubroutineType(types: !11080)
!11080 = !{!103, !10990, !102}
!11081 = !{!11082, !11083, !11084, !11085, !11086}
!11082 = !DILocalVariable(name: "dev", arg: 1, scope: !11074, file: !10987, line: 125, type: !10990)
!11083 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11074, file: !10987, line: 126, type: !11077)
!11084 = !DILocalVariable(name: "context", arg: 3, scope: !11074, file: !10987, line: 127, type: !102)
!11085 = !DILocalVariable(name: "handle_count", scope: !11074, file: !10987, line: 129, type: !200)
!11086 = !DILocalVariable(name: "handles", scope: !11074, file: !10987, line: 130, type: !160)
!11087 = !DILocation(line: 0, scope: !11074)
!11088 = !DILocation(line: 129, column: 2, scope: !11074)
!11089 = !DILocation(line: 129, column: 9, scope: !11074)
!11090 = !DILocation(line: 130, column: 35, scope: !11074)
!11091 = !DILocation(line: 132, column: 33, scope: !11074)
!11092 = !DILocation(line: 132, column: 9, scope: !11074)
!11093 = !DILocation(line: 133, column: 1, scope: !11074)
!11094 = !DILocation(line: 132, column: 2, scope: !11074)
!11095 = distinct !DISubprogram(name: "device_required_handles_get", scope: !141, file: !141, line: 493, type: !11096, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11098)
!11096 = !DISubroutineType(types: !11097)
!11097 = !{!160, !10990, !2383}
!11098 = !{!11099, !11100, !11101, !11102}
!11099 = !DILocalVariable(name: "dev", arg: 1, scope: !11095, file: !141, line: 493, type: !10990)
!11100 = !DILocalVariable(name: "count", arg: 2, scope: !11095, file: !141, line: 493, type: !2383)
!11101 = !DILocalVariable(name: "rv", scope: !11095, file: !141, line: 495, type: !160)
!11102 = !DILocalVariable(name: "i", scope: !11103, file: !141, line: 498, type: !200)
!11103 = distinct !DILexicalBlock(scope: !11104, file: !141, line: 497, column: 18)
!11104 = distinct !DILexicalBlock(scope: !11095, file: !141, line: 497, column: 6)
!11105 = !DILocation(line: 0, scope: !11095)
!11106 = !DILocation(line: 495, column: 35, scope: !11095)
!11107 = !DILocation(line: 497, column: 9, scope: !11104)
!11108 = !DILocation(line: 497, column: 6, scope: !11095)
!11109 = !DILocation(line: 0, scope: !11103)
!11110 = !DILocation(line: 500, column: 11, scope: !11103)
!11111 = !DILocation(line: 500, column: 40, scope: !11103)
!11112 = !DILocation(line: 502, column: 4, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11103, file: !141, line: 501, column: 40)
!11114 = distinct !{!11114, !11115, !11116}
!11115 = !DILocation(line: 500, column: 3, scope: !11103)
!11116 = !DILocation(line: 503, column: 3, scope: !11103)
!11117 = !DILocation(line: 504, column: 10, scope: !11103)
!11118 = !DILocation(line: 505, column: 2, scope: !11103)
!11119 = !DILocation(line: 507, column: 2, scope: !11095)
!11120 = distinct !DISubprogram(name: "device_visitor", scope: !10987, file: !10987, line: 106, type: !11121, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11123)
!11121 = !DISubroutineType(types: !11122)
!11122 = !{!103, !160, !200, !11077, !102}
!11123 = !{!11124, !11125, !11126, !11127, !11128, !11130, !11133, !11134}
!11124 = !DILocalVariable(name: "handles", arg: 1, scope: !11120, file: !10987, line: 106, type: !160)
!11125 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11120, file: !10987, line: 107, type: !200)
!11126 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11120, file: !10987, line: 108, type: !11077)
!11127 = !DILocalVariable(name: "context", arg: 4, scope: !11120, file: !10987, line: 109, type: !102)
!11128 = !DILocalVariable(name: "i", scope: !11129, file: !10987, line: 112, type: !200)
!11129 = distinct !DILexicalBlock(scope: !11120, file: !10987, line: 112, column: 2)
!11130 = !DILocalVariable(name: "dh", scope: !11131, file: !10987, line: 113, type: !162)
!11131 = distinct !DILexicalBlock(scope: !11132, file: !10987, line: 112, column: 44)
!11132 = distinct !DILexicalBlock(scope: !11129, file: !10987, line: 112, column: 2)
!11133 = !DILocalVariable(name: "rdev", scope: !11131, file: !10987, line: 114, type: !10990)
!11134 = !DILocalVariable(name: "rc", scope: !11131, file: !10987, line: 115, type: !103)
!11135 = !DILocation(line: 0, scope: !11120)
!11136 = !DILocation(line: 0, scope: !11129)
!11137 = !DILocation(line: 112, column: 23, scope: !11132)
!11138 = !DILocation(line: 112, column: 2, scope: !11129)
!11139 = distinct !{!11139, !11138, !11140}
!11140 = !DILocation(line: 120, column: 2, scope: !11129)
!11141 = !DILocation(line: 113, column: 24, scope: !11131)
!11142 = !DILocation(line: 0, scope: !11131)
!11143 = !DILocation(line: 114, column: 31, scope: !11131)
!11144 = !DILocation(line: 115, column: 12, scope: !11131)
!11145 = !DILocation(line: 117, column: 10, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11131, file: !10987, line: 117, column: 7)
!11147 = !DILocation(line: 112, column: 39, scope: !11132)
!11148 = !DILocation(line: 123, column: 1, scope: !11120)
!11149 = distinct !DISubprogram(name: "device_from_handle", scope: !141, file: !141, line: 439, type: !11150, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11152)
!11150 = !DISubroutineType(types: !11151)
!11151 = !{!10990, !162}
!11152 = !{!11153, !11154, !11155}
!11153 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11149, file: !141, line: 439, type: !162)
!11154 = !DILocalVariable(name: "dev", scope: !11149, file: !141, line: 443, type: !10990)
!11155 = !DILocalVariable(name: "numdev", scope: !11149, file: !141, line: 444, type: !200)
!11156 = !DILocation(line: 0, scope: !11149)
!11157 = !DILocation(line: 446, column: 7, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11149, file: !141, line: 446, column: 6)
!11159 = !DILocation(line: 446, column: 18, scope: !11158)
!11160 = !DILocation(line: 446, column: 23, scope: !11158)
!11161 = !DILocation(line: 450, column: 2, scope: !11149)
!11162 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10987, file: !10987, line: 135, type: !11075, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11163)
!11163 = !{!11164, !11165, !11166, !11167, !11168}
!11164 = !DILocalVariable(name: "dev", arg: 1, scope: !11162, file: !10987, line: 135, type: !10990)
!11165 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11162, file: !10987, line: 136, type: !11077)
!11166 = !DILocalVariable(name: "context", arg: 3, scope: !11162, file: !10987, line: 137, type: !102)
!11167 = !DILocalVariable(name: "handle_count", scope: !11162, file: !10987, line: 139, type: !200)
!11168 = !DILocalVariable(name: "handles", scope: !11162, file: !10987, line: 140, type: !160)
!11169 = !DILocation(line: 0, scope: !11162)
!11170 = !DILocation(line: 139, column: 2, scope: !11162)
!11171 = !DILocation(line: 139, column: 9, scope: !11162)
!11172 = !DILocation(line: 140, column: 35, scope: !11162)
!11173 = !DILocation(line: 142, column: 33, scope: !11162)
!11174 = !DILocation(line: 142, column: 9, scope: !11162)
!11175 = !DILocation(line: 143, column: 1, scope: !11162)
!11176 = !DILocation(line: 142, column: 2, scope: !11162)
!11177 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !141, file: !141, line: 573, type: !11096, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11178)
!11178 = !{!11179, !11180, !11181, !11182, !11183}
!11179 = !DILocalVariable(name: "dev", arg: 1, scope: !11177, file: !141, line: 573, type: !10990)
!11180 = !DILocalVariable(name: "count", arg: 2, scope: !11177, file: !141, line: 573, type: !2383)
!11181 = !DILocalVariable(name: "rv", scope: !11177, file: !141, line: 575, type: !160)
!11182 = !DILocalVariable(name: "region", scope: !11177, file: !141, line: 576, type: !200)
!11183 = !DILocalVariable(name: "i", scope: !11177, file: !141, line: 577, type: !200)
!11184 = !DILocation(line: 0, scope: !11177)
!11185 = !DILocation(line: 575, column: 35, scope: !11177)
!11186 = !DILocation(line: 579, column: 9, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11177, file: !141, line: 579, column: 6)
!11188 = !DILocation(line: 579, column: 6, scope: !11177)
!11189 = !DILocation(line: 582, column: 8, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !141, line: 582, column: 8)
!11191 = distinct !DILexicalBlock(scope: !11192, file: !141, line: 581, column: 23)
!11192 = distinct !DILexicalBlock(scope: !11187, file: !141, line: 579, column: 18)
!11193 = !DILocation(line: 582, column: 12, scope: !11190)
!11194 = !DILocation(line: 585, column: 6, scope: !11191)
!11195 = !DILocation(line: 0, scope: !11192)
!11196 = !DILocation(line: 581, column: 17, scope: !11192)
!11197 = !DILocation(line: 581, column: 3, scope: !11192)
!11198 = !DILocation(line: 588, column: 10, scope: !11192)
!11199 = !DILocation(line: 588, column: 16, scope: !11192)
!11200 = !DILocation(line: 589, column: 4, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11192, file: !141, line: 588, column: 39)
!11202 = !DILocation(line: 588, column: 3, scope: !11192)
!11203 = distinct !{!11203, !11202, !11204}
!11204 = !DILocation(line: 590, column: 3, scope: !11192)
!11205 = !DILocation(line: 591, column: 10, scope: !11192)
!11206 = !DILocation(line: 592, column: 2, scope: !11192)
!11207 = !DILocation(line: 575, column: 25, scope: !11177)
!11208 = !DILocation(line: 594, column: 2, scope: !11177)
!11209 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1714, file: !1714, line: 49, type: !11210, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1711, retainedNodes: !322)
!11210 = !DISubroutineType(types: !11211)
!11211 = !{!2376}
!11212 = !DILocation(line: 51, column: 10, scope: !11209)
!11213 = !DILocation(line: 51, column: 20, scope: !11209)
!11214 = !DILocation(line: 51, column: 2, scope: !11209)
!11215 = distinct !DISubprogram(name: "coredump", scope: !2876, file: !2876, line: 209, type: !11216, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11362)
!11216 = !DISubroutineType(types: !11217)
!11217 = !{null, !32, !11218, !11262}
!11218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11219, size: 32)
!11219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11220)
!11220 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2508, line: 141, baseType: !11221)
!11221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2508, line: 97, size: 256, elements: !11222)
!11222 = !{!11223}
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11221, file: !2508, line: 107, baseType: !11224, size: 256)
!11224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2508, line: 98, size: 256, elements: !11225)
!11225 = !{!11226, !11231, !11236, !11241, !11246, !11251, !11256, !11261}
!11226 = !DIDerivedType(tag: DW_TAG_member, scope: !11224, file: !2508, line: 99, baseType: !11227, size: 32)
!11227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11224, file: !2508, line: 99, size: 32, elements: !11228)
!11228 = !{!11229, !11230}
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11227, file: !2508, line: 99, baseType: !121, size: 32)
!11230 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11227, file: !2508, line: 99, baseType: !121, size: 32)
!11231 = !DIDerivedType(tag: DW_TAG_member, scope: !11224, file: !2508, line: 100, baseType: !11232, size: 32, offset: 32)
!11232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11224, file: !2508, line: 100, size: 32, elements: !11233)
!11233 = !{!11234, !11235}
!11234 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11232, file: !2508, line: 100, baseType: !121, size: 32)
!11235 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11232, file: !2508, line: 100, baseType: !121, size: 32)
!11236 = !DIDerivedType(tag: DW_TAG_member, scope: !11224, file: !2508, line: 101, baseType: !11237, size: 32, offset: 64)
!11237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11224, file: !2508, line: 101, size: 32, elements: !11238)
!11238 = !{!11239, !11240}
!11239 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11237, file: !2508, line: 101, baseType: !121, size: 32)
!11240 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11237, file: !2508, line: 101, baseType: !121, size: 32)
!11241 = !DIDerivedType(tag: DW_TAG_member, scope: !11224, file: !2508, line: 102, baseType: !11242, size: 32, offset: 96)
!11242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11224, file: !2508, line: 102, size: 32, elements: !11243)
!11243 = !{!11244, !11245}
!11244 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11242, file: !2508, line: 102, baseType: !121, size: 32)
!11245 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11242, file: !2508, line: 102, baseType: !121, size: 32)
!11246 = !DIDerivedType(tag: DW_TAG_member, scope: !11224, file: !2508, line: 103, baseType: !11247, size: 32, offset: 128)
!11247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11224, file: !2508, line: 103, size: 32, elements: !11248)
!11248 = !{!11249, !11250}
!11249 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11247, file: !2508, line: 103, baseType: !121, size: 32)
!11250 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11247, file: !2508, line: 103, baseType: !121, size: 32)
!11251 = !DIDerivedType(tag: DW_TAG_member, scope: !11224, file: !2508, line: 104, baseType: !11252, size: 32, offset: 160)
!11252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11224, file: !2508, line: 104, size: 32, elements: !11253)
!11253 = !{!11254, !11255}
!11254 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11252, file: !2508, line: 104, baseType: !121, size: 32)
!11255 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11252, file: !2508, line: 104, baseType: !121, size: 32)
!11256 = !DIDerivedType(tag: DW_TAG_member, scope: !11224, file: !2508, line: 105, baseType: !11257, size: 32, offset: 192)
!11257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11224, file: !2508, line: 105, size: 32, elements: !11258)
!11258 = !{!11259, !11260}
!11259 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11257, file: !2508, line: 105, baseType: !121, size: 32)
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11257, file: !2508, line: 105, baseType: !121, size: 32)
!11261 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11224, file: !2508, line: 106, baseType: !121, size: 32, offset: 224)
!11262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11263, size: 32)
!11263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !211, line: 245, size: 1024, elements: !11264)
!11264 = !{!11265, !11323, !11335, !11336, !11337, !11338, !11344, !11357}
!11265 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11263, file: !211, line: 247, baseType: !11266, size: 384)
!11266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !211, line: 57, size: 384, elements: !11267)
!11267 = !{!11268, !11292, !11299, !11300, !11301, !11310, !11311, !11312}
!11268 = !DIDerivedType(tag: DW_TAG_member, scope: !11266, file: !211, line: 60, baseType: !11269, size: 64)
!11269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11266, file: !211, line: 60, size: 64, elements: !11270)
!11270 = !{!11271, !11286}
!11271 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11269, file: !211, line: 61, baseType: !11272, size: 64)
!11272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !221, line: 49, baseType: !11273)
!11273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !221, line: 37, size: 64, elements: !11274)
!11274 = !{!11275, !11281}
!11275 = !DIDerivedType(tag: DW_TAG_member, scope: !11273, file: !221, line: 38, baseType: !11276, size: 32)
!11276 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11273, file: !221, line: 38, size: 32, elements: !11277)
!11277 = !{!11278, !11280}
!11278 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11276, file: !221, line: 39, baseType: !11279, size: 32)
!11279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11273, size: 32)
!11280 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11276, file: !221, line: 40, baseType: !11279, size: 32)
!11281 = !DIDerivedType(tag: DW_TAG_member, scope: !11273, file: !221, line: 42, baseType: !11282, size: 32, offset: 32)
!11282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11273, file: !221, line: 42, size: 32, elements: !11283)
!11283 = !{!11284, !11285}
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11282, file: !221, line: 43, baseType: !11279, size: 32)
!11285 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11282, file: !221, line: 44, baseType: !11279, size: 32)
!11286 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11269, file: !211, line: 62, baseType: !11287, size: 64)
!11287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !237, line: 49, size: 64, elements: !11288)
!11288 = !{!11289}
!11289 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11287, file: !237, line: 50, baseType: !11290, size: 64)
!11290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11291, size: 64, elements: !242)
!11291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11287, size: 32)
!11292 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11266, file: !211, line: 68, baseType: !11293, size: 32, offset: 64)
!11293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11294, size: 32)
!11294 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !247, line: 233, baseType: !11295)
!11295 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !247, line: 231, size: 64, elements: !11296)
!11296 = !{!11297}
!11297 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11295, file: !247, line: 232, baseType: !11298, size: 64)
!11298 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !221, line: 48, baseType: !11273)
!11299 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11266, file: !211, line: 71, baseType: !154, size: 8, offset: 96)
!11300 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11266, file: !211, line: 74, baseType: !154, size: 8, offset: 104)
!11301 = !DIDerivedType(tag: DW_TAG_member, scope: !11266, file: !211, line: 90, baseType: !11302, size: 16, offset: 112)
!11302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11266, file: !211, line: 90, size: 16, elements: !11303)
!11303 = !{!11304, !11309}
!11304 = !DIDerivedType(tag: DW_TAG_member, scope: !11302, file: !211, line: 91, baseType: !11305, size: 16)
!11305 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11302, file: !211, line: 91, size: 16, elements: !11306)
!11306 = !{!11307, !11308}
!11307 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11305, file: !211, line: 96, baseType: !261, size: 8)
!11308 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11305, file: !211, line: 97, baseType: !154, size: 8, offset: 8)
!11309 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11302, file: !211, line: 100, baseType: !265, size: 16)
!11310 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11266, file: !211, line: 107, baseType: !121, size: 32, offset: 128)
!11311 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11266, file: !211, line: 127, baseType: !102, size: 32, offset: 160)
!11312 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11266, file: !211, line: 131, baseType: !11313, size: 192, offset: 192)
!11313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !247, line: 244, size: 192, elements: !11314)
!11314 = !{!11315, !11316, !11322}
!11315 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11313, file: !247, line: 245, baseType: !11272, size: 64)
!11316 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11313, file: !247, line: 246, baseType: !11317, size: 32, offset: 64)
!11317 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !247, line: 242, baseType: !11318)
!11318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11319, size: 32)
!11319 = !DISubroutineType(types: !11320)
!11320 = !{null, !11321}
!11321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11313, size: 32)
!11322 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11313, file: !247, line: 249, baseType: !280, size: 64, offset: 128)
!11323 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11263, file: !211, line: 250, baseType: !11324, size: 288, offset: 384)
!11324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !284, line: 25, size: 288, elements: !11325)
!11325 = !{!11326, !11327, !11328, !11329, !11330, !11331, !11332, !11333, !11334}
!11326 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11324, file: !284, line: 26, baseType: !121, size: 32)
!11327 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11324, file: !284, line: 27, baseType: !121, size: 32, offset: 32)
!11328 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11324, file: !284, line: 28, baseType: !121, size: 32, offset: 64)
!11329 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11324, file: !284, line: 29, baseType: !121, size: 32, offset: 96)
!11330 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11324, file: !284, line: 30, baseType: !121, size: 32, offset: 128)
!11331 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11324, file: !284, line: 31, baseType: !121, size: 32, offset: 160)
!11332 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11324, file: !284, line: 32, baseType: !121, size: 32, offset: 192)
!11333 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11324, file: !284, line: 33, baseType: !121, size: 32, offset: 224)
!11334 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11324, file: !284, line: 34, baseType: !121, size: 32, offset: 256)
!11335 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11263, file: !211, line: 253, baseType: !102, size: 32, offset: 672)
!11336 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11263, file: !211, line: 256, baseType: !11294, size: 64, offset: 704)
!11337 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11263, file: !211, line: 294, baseType: !103, size: 32, offset: 768)
!11338 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11263, file: !211, line: 300, baseType: !11339, size: 96, offset: 800)
!11339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !211, line: 149, size: 96, elements: !11340)
!11340 = !{!11341, !11342, !11343}
!11341 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11339, file: !211, line: 153, baseType: !22, size: 32)
!11342 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11339, file: !211, line: 162, baseType: !200, size: 32, offset: 32)
!11343 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !11339, file: !211, line: 168, baseType: !200, size: 32, offset: 64)
!11344 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11263, file: !211, line: 325, baseType: !11345, size: 32, offset: 896)
!11345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11346, size: 32)
!11346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !307, line: 5073, size: 160, elements: !11347)
!11347 = !{!11348, !11354, !11355}
!11348 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11346, file: !307, line: 5074, baseType: !11349, size: 96)
!11349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !311, line: 56, size: 96, elements: !11350)
!11350 = !{!11351, !11352, !11353}
!11351 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11349, file: !311, line: 57, baseType: !314, size: 32)
!11352 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11349, file: !311, line: 58, baseType: !102, size: 32, offset: 32)
!11353 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11349, file: !311, line: 59, baseType: !200, size: 32, offset: 64)
!11354 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11346, file: !307, line: 5075, baseType: !11294, size: 64, offset: 96)
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11346, file: !307, line: 5076, baseType: !11356, offset: 160)
!11356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !321, line: 43, elements: !322)
!11357 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11263, file: !211, line: 343, baseType: !11358, size: 64, offset: 928)
!11358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !284, line: 60, size: 64, elements: !11359)
!11359 = !{!11360, !11361}
!11360 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11358, file: !284, line: 63, baseType: !121, size: 32)
!11361 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11358, file: !284, line: 66, baseType: !121, size: 32, offset: 32)
!11362 = !{!11363, !11364, !11365}
!11363 = !DILocalVariable(name: "reason", arg: 1, scope: !11215, file: !2876, line: 209, type: !32)
!11364 = !DILocalVariable(name: "esf", arg: 2, scope: !11215, file: !2876, line: 209, type: !11218)
!11365 = !DILocalVariable(name: "thread", arg: 3, scope: !11215, file: !2876, line: 210, type: !11262)
!11366 = !DILocation(line: 0, scope: !11215)
!11367 = !DILocation(line: 212, column: 1, scope: !11215)
!11368 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2876, file: !2876, line: 214, type: !11369, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11371)
!11369 = !DISubroutineType(types: !11370)
!11370 = !{null, !22, !22}
!11371 = !{!11372, !11373}
!11372 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11368, file: !2876, line: 214, type: !22)
!11373 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11368, file: !2876, line: 214, type: !22)
!11374 = !DILocation(line: 0, scope: !11368)
!11375 = !DILocation(line: 216, column: 1, scope: !11368)
!11376 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2876, file: !2876, line: 218, type: !11377, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11379)
!11377 = !DISubroutineType(types: !11378)
!11378 = !{null, !1755, !200}
!11379 = !{!11380, !11381}
!11380 = !DILocalVariable(name: "buf", arg: 1, scope: !11376, file: !2876, line: 218, type: !1755)
!11381 = !DILocalVariable(name: "buflen", arg: 2, scope: !11376, file: !2876, line: 218, type: !200)
!11382 = !DILocation(line: 0, scope: !11376)
!11383 = !DILocation(line: 220, column: 1, scope: !11376)
!11384 = distinct !DISubprogram(name: "coredump_query", scope: !2876, file: !2876, line: 222, type: !11385, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11387)
!11385 = !DISubroutineType(types: !11386)
!11386 = !{!103, !2875, !102}
!11387 = !{!11388, !11389}
!11388 = !DILocalVariable(name: "query_id", arg: 1, scope: !11384, file: !2876, line: 222, type: !2875)
!11389 = !DILocalVariable(name: "arg", arg: 2, scope: !11384, file: !2876, line: 222, type: !102)
!11390 = !DILocation(line: 0, scope: !11384)
!11391 = !DILocation(line: 224, column: 2, scope: !11384)
!11392 = distinct !DISubprogram(name: "coredump_cmd", scope: !2876, file: !2876, line: 227, type: !11393, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11395)
!11393 = !DISubroutineType(types: !11394)
!11394 = !{!103, !2882, !102}
!11395 = !{!11396, !11397}
!11396 = !DILocalVariable(name: "query_id", arg: 1, scope: !11392, file: !2876, line: 227, type: !2882)
!11397 = !DILocalVariable(name: "arg", arg: 2, scope: !11392, file: !2876, line: 227, type: !102)
!11398 = !DILocation(line: 0, scope: !11392)
!11399 = !DILocation(line: 229, column: 2, scope: !11392)
!11400 = distinct !DISubprogram(name: "arch_system_halt", scope: !11401, file: !11401, line: 23, type: !4858, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11402)
!11401 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11402 = !{!11403}
!11403 = !DILocalVariable(name: "reason", arg: 1, scope: !11400, file: !11401, line: 23, type: !32)
!11404 = !DILocation(line: 0, scope: !11400)
!11405 = !DILocation(line: 55, column: 2, scope: !11406, inlinedAt: !11410)
!11406 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4847, file: !4847, line: 42, type: !4848, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11407)
!11407 = !{!11408, !11409}
!11408 = !DILocalVariable(name: "key", scope: !11406, file: !4847, line: 44, type: !32)
!11409 = !DILocalVariable(name: "tmp", scope: !11406, file: !4847, line: 53, type: !32)
!11410 = distinct !DILocation(line: 31, column: 8, scope: !11400)
!11411 = !{i64 2279864}
!11412 = !DILocation(line: 0, scope: !11406, inlinedAt: !11410)
!11413 = !DILocation(line: 32, column: 2, scope: !11400)
!11414 = !DILocation(line: 32, column: 2, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11416, file: !11401, line: 32, column: 2)
!11416 = distinct !DILexicalBlock(scope: !11400, file: !11401, line: 32, column: 2)
!11417 = distinct !{!11417, !11418, !11419}
!11418 = !DILocation(line: 32, column: 2, scope: !11416)
!11419 = !DILocation(line: 34, column: 2, scope: !11416)
!11420 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11401, file: !11401, line: 39, type: !11421, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11423)
!11421 = !DISubroutineType(types: !11422)
!11422 = !{null, !32, !11218}
!11423 = !{!11424, !11425}
!11424 = !DILocalVariable(name: "reason", arg: 1, scope: !11420, file: !11401, line: 39, type: !32)
!11425 = !DILocalVariable(name: "esf", arg: 2, scope: !11420, file: !11401, line: 40, type: !11218)
!11426 = !DILocation(line: 0, scope: !11420)
!11427 = !DILocation(line: 46, column: 2, scope: !11420)
!11428 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11401, file: !11401, line: 81, type: !4858, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11429)
!11429 = !{!11430}
!11430 = !DILocalVariable(name: "reason", arg: 1, scope: !11428, file: !11401, line: 81, type: !32)
!11431 = !DILocation(line: 0, scope: !11428)
!11432 = !DILocation(line: 83, column: 2, scope: !11428)
!11433 = distinct !DISubprogram(name: "z_fatal_error", scope: !11401, file: !11401, line: 96, type: !11421, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11434)
!11434 = !{!11435, !11436, !11437, !11438}
!11435 = !DILocalVariable(name: "reason", arg: 1, scope: !11433, file: !11401, line: 96, type: !32)
!11436 = !DILocalVariable(name: "esf", arg: 2, scope: !11433, file: !11401, line: 96, type: !11218)
!11437 = !DILocalVariable(name: "key", scope: !11433, file: !11401, line: 102, type: !32)
!11438 = !DILocalVariable(name: "thread", scope: !11433, file: !11401, line: 103, type: !11262)
!11439 = !DILocation(line: 0, scope: !11433)
!11440 = !DILocation(line: 55, column: 2, scope: !11406, inlinedAt: !11441)
!11441 = distinct !DILocation(line: 102, column: 21, scope: !11433)
!11442 = !DILocation(line: 0, scope: !11406, inlinedAt: !11441)
!11443 = !DILocation(line: 119, column: 11, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11433, file: !11401, line: 119, column: 6)
!11445 = !DILocation(line: 119, column: 20, scope: !11444)
!11446 = !DILocation(line: 131, column: 2, scope: !11433)
!11447 = !DILocation(line: 151, column: 7, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11449, file: !11401, line: 146, column: 32)
!11449 = distinct !DILexicalBlock(scope: !11433, file: !11401, line: 146, column: 6)
!11450 = !DILocation(line: 151, column: 21, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11448, file: !11401, line: 151, column: 7)
!11452 = !DILocation(line: 104, column: 4, scope: !11433)
!11453 = !DILocalVariable(name: "key", arg: 1, scope: !11454, file: !4847, line: 84, type: !32)
!11454 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4847, file: !4847, line: 84, type: !4858, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11455)
!11455 = !{!11453}
!11456 = !DILocation(line: 0, scope: !11454, inlinedAt: !11457)
!11457 = distinct !DILocation(line: 186, column: 2, scope: !11433)
!11458 = !DILocation(line: 95, column: 2, scope: !11454, inlinedAt: !11457)
!11459 = !{i64 2280681}
!11460 = !DILocation(line: 189, column: 3, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !11401, line: 188, column: 41)
!11462 = distinct !DILexicalBlock(scope: !11433, file: !11401, line: 188, column: 6)
!11463 = !DILocation(line: 191, column: 1, scope: !11433)
!11464 = distinct !DISubprogram(name: "k_current_get", scope: !307, file: !307, line: 530, type: !11465, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !322)
!11465 = !DISubroutineType(types: !11466)
!11466 = !{!11467}
!11467 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !11262)
!11468 = !DILocation(line: 535, column: 9, scope: !11464)
!11469 = !DILocation(line: 535, column: 2, scope: !11464)
!11470 = distinct !DISubprogram(name: "k_thread_abort", scope: !3079, file: !3079, line: 188, type: !11471, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11473)
!11471 = !DISubroutineType(types: !11472)
!11472 = !{null, !11467}
!11473 = !{!11474}
!11474 = !DILocalVariable(name: "thread", arg: 1, scope: !11470, file: !3079, line: 188, type: !11467)
!11475 = !DILocation(line: 0, scope: !11470)
!11476 = !DILocation(line: 197, column: 2, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11470, file: !3079, line: 197, column: 2)
!11478 = !{i64 2155061435}
!11479 = !DILocation(line: 198, column: 2, scope: !11470)
!11480 = !DILocation(line: 199, column: 1, scope: !11470)
!11481 = distinct !DISubprogram(name: "z_current_get", scope: !3079, file: !3079, line: 173, type: !11465, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !322)
!11482 = !DILocation(line: 180, column: 2, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11481, file: !3079, line: 180, column: 2)
!11484 = !{i64 2155061367}
!11485 = !DILocation(line: 181, column: 9, scope: !11481)
!11486 = !DILocation(line: 181, column: 2, scope: !11481)
!11487 = distinct !DISubprogram(name: "z_early_memset", scope: !1722, file: !1722, line: 108, type: !11488, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11490)
!11488 = !DISubroutineType(types: !11489)
!11489 = !{null, !102, !103, !200}
!11490 = !{!11491, !11492, !11493}
!11491 = !DILocalVariable(name: "dst", arg: 1, scope: !11487, file: !1722, line: 108, type: !102)
!11492 = !DILocalVariable(name: "c", arg: 2, scope: !11487, file: !1722, line: 108, type: !103)
!11493 = !DILocalVariable(name: "n", arg: 3, scope: !11487, file: !1722, line: 108, type: !200)
!11494 = !DILocation(line: 0, scope: !11487)
!11495 = !DILocation(line: 110, column: 9, scope: !11487)
!11496 = !DILocation(line: 111, column: 1, scope: !11487)
!11497 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1722, file: !1722, line: 121, type: !11498, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11500)
!11498 = !DISubroutineType(types: !11499)
!11499 = !{null, !102, !13, !200}
!11500 = !{!11501, !11502, !11503}
!11501 = !DILocalVariable(name: "dst", arg: 1, scope: !11497, file: !1722, line: 121, type: !102)
!11502 = !DILocalVariable(name: "src", arg: 2, scope: !11497, file: !1722, line: 121, type: !13)
!11503 = !DILocalVariable(name: "n", arg: 3, scope: !11497, file: !1722, line: 121, type: !200)
!11504 = !DILocation(line: 0, scope: !11497)
!11505 = !DILocation(line: 123, column: 9, scope: !11497)
!11506 = !DILocation(line: 124, column: 1, scope: !11497)
!11507 = distinct !DISubprogram(name: "z_bss_zero", scope: !1722, file: !1722, line: 132, type: !2909, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !322)
!11508 = !DILocation(line: 143, column: 2, scope: !11507)
!11509 = !DILocation(line: 168, column: 1, scope: !11507)
!11510 = distinct !DISubprogram(name: "z_init_cpu", scope: !1722, file: !1722, line: 372, type: !6666, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11511)
!11511 = !{!11512}
!11512 = !DILocalVariable(name: "id", arg: 1, scope: !11510, file: !1722, line: 372, type: !103)
!11513 = !DILocation(line: 0, scope: !11510)
!11514 = !DILocation(line: 374, column: 2, scope: !11510)
!11515 = !DILocation(line: 375, column: 34, scope: !11510)
!11516 = !DILocation(line: 375, column: 19, scope: !11510)
!11517 = !DILocation(line: 375, column: 31, scope: !11510)
!11518 = !DILocation(line: 376, column: 24, scope: !11510)
!11519 = !DILocation(line: 376, column: 19, scope: !11510)
!11520 = !DILocation(line: 376, column: 22, scope: !11510)
!11521 = !DILocation(line: 378, column: 26, scope: !11510)
!11522 = !DILocation(line: 378, column: 4, scope: !11510)
!11523 = !DILocation(line: 378, column: 50, scope: !11510)
!11524 = !DILocation(line: 377, column: 19, scope: !11510)
!11525 = !DILocation(line: 377, column: 29, scope: !11510)
!11526 = !DILocation(line: 384, column: 1, scope: !11510)
!11527 = distinct !DISubprogram(name: "init_idle_thread", scope: !1722, file: !1722, line: 343, type: !6666, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11528)
!11528 = !{!11529, !11530, !11531, !11534}
!11529 = !DILocalVariable(name: "i", arg: 1, scope: !11527, file: !1722, line: 343, type: !103)
!11530 = !DILocalVariable(name: "thread", scope: !11527, file: !1722, line: 345, type: !1815)
!11531 = !DILocalVariable(name: "stack", scope: !11527, file: !1722, line: 346, type: !11532)
!11532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11533, size: 32)
!11533 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3350, line: 44, baseType: !1929)
!11534 = !DILocalVariable(name: "tname", scope: !11527, file: !1722, line: 358, type: !995)
!11535 = !DILocation(line: 0, scope: !11527)
!11536 = !DILocation(line: 345, column: 29, scope: !11527)
!11537 = !DILocation(line: 346, column: 28, scope: !11527)
!11538 = !DILocation(line: 362, column: 37, scope: !11527)
!11539 = !DILocation(line: 362, column: 36, scope: !11527)
!11540 = !DILocation(line: 361, column: 2, scope: !11527)
!11541 = !DILocation(line: 365, column: 2, scope: !11527)
!11542 = !DILocation(line: 370, column: 1, scope: !11527)
!11543 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1930, file: !1930, line: 331, type: !11544, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11546)
!11544 = !DISubroutineType(types: !11545)
!11545 = !{!995, !11532}
!11546 = !{!11547}
!11547 = !DILocalVariable(name: "sym", arg: 1, scope: !11543, file: !1930, line: 331, type: !11532)
!11548 = !DILocation(line: 0, scope: !11543)
!11549 = !DILocation(line: 333, column: 21, scope: !11543)
!11550 = !DILocation(line: 333, column: 2, scope: !11543)
!11551 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11552, file: !11552, line: 155, type: !11553, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11555)
!11552 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11553 = !DISubroutineType(types: !11554)
!11554 = !{null, !1815}
!11555 = !{!11556}
!11556 = !DILocalVariable(name: "thread", arg: 1, scope: !11551, file: !11552, line: 155, type: !1815)
!11557 = !DILocation(line: 0, scope: !11551)
!11558 = !DILocation(line: 157, column: 15, scope: !11551)
!11559 = !DILocation(line: 157, column: 28, scope: !11551)
!11560 = !DILocation(line: 158, column: 1, scope: !11551)
!11561 = distinct !DISubprogram(name: "z_cstart", scope: !1722, file: !1722, line: 501, type: !2909, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11562)
!11562 = !{!11563}
!11563 = !DILocalVariable(name: "dummy_thread", scope: !11561, file: !1722, line: 518, type: !1816)
!11564 = !DILocation(line: 507, column: 2, scope: !11561)
!11565 = !DILocation(line: 43, column: 14, scope: !11566, inlinedAt: !11570)
!11566 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11567, file: !11567, line: 40, type: !2909, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11568)
!11567 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11568 = !{!11569}
!11569 = !DILocalVariable(name: "msp", scope: !11566, file: !11567, line: 42, type: !121)
!11570 = distinct !DILocation(line: 44, column: 2, scope: !11571, inlinedAt: !11573)
!11571 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11572, file: !11572, line: 42, type: !2909, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !322)
!11572 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11573 = distinct !DILocation(line: 510, column: 2, scope: !11561)
!11574 = !DILocation(line: 43, column: 3, scope: !11566, inlinedAt: !11570)
!11575 = !DILocation(line: 43, column: 60, scope: !11566, inlinedAt: !11570)
!11576 = !DILocation(line: 0, scope: !11566, inlinedAt: !11570)
!11577 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11578, file: !5021, line: 1153, type: !121)
!11578 = distinct !DISubprogram(name: "__set_MSP", scope: !5021, file: !5021, line: 1153, type: !5112, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11579)
!11579 = !{!11577}
!11580 = !DILocation(line: 0, scope: !11578, inlinedAt: !11581)
!11581 = distinct !DILocation(line: 46, column: 2, scope: !11566, inlinedAt: !11570)
!11582 = !DILocation(line: 1155, column: 3, scope: !11578, inlinedAt: !11581)
!11583 = !{i64 3745803}
!11584 = !DILocation(line: 62, column: 11, scope: !11566, inlinedAt: !11570)
!11585 = !DILocation(line: 102, column: 2, scope: !11586, inlinedAt: !11587)
!11586 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !5815, file: !5815, line: 97, type: !2909, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !322)
!11587 = distinct !DILocation(line: 45, column: 2, scope: !11571, inlinedAt: !11573)
!11588 = !DILocation(line: 108, column: 2, scope: !11586, inlinedAt: !11587)
!11589 = !DILocation(line: 112, column: 2, scope: !11586, inlinedAt: !11587)
!11590 = !DILocation(line: 113, column: 2, scope: !11586, inlinedAt: !11587)
!11591 = !DILocation(line: 114, column: 2, scope: !11586, inlinedAt: !11587)
!11592 = !DILocation(line: 116, column: 2, scope: !11586, inlinedAt: !11587)
!11593 = !DILocation(line: 123, column: 13, scope: !11586, inlinedAt: !11587)
!11594 = !DILocation(line: 46, column: 2, scope: !11571, inlinedAt: !11573)
!11595 = !DILocation(line: 47, column: 2, scope: !11571, inlinedAt: !11573)
!11596 = !DILocation(line: 174, column: 12, scope: !11597, inlinedAt: !11598)
!11597 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !5815, file: !5815, line: 169, type: !2909, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !322)
!11598 = distinct !DILocation(line: 48, column: 2, scope: !11571, inlinedAt: !11573)
!11599 = !DILocation(line: 179, column: 12, scope: !11597, inlinedAt: !11598)
!11600 = !DILocation(line: 50, column: 2, scope: !11571, inlinedAt: !11573)
!11601 = !DILocation(line: 57, column: 2, scope: !11571, inlinedAt: !11573)
!11602 = !DILocation(line: 518, column: 2, scope: !11561)
!11603 = !DILocation(line: 518, column: 18, scope: !11561)
!11604 = !DILocation(line: 520, column: 2, scope: !11561)
!11605 = !DILocation(line: 523, column: 2, scope: !11561)
!11606 = !DILocation(line: 526, column: 2, scope: !11561)
!11607 = !DILocation(line: 527, column: 2, scope: !11561)
!11608 = !DILocation(line: 543, column: 24, scope: !11561)
!11609 = !DILocation(line: 543, column: 2, scope: !11561)
!11610 = !DILocation(line: 0, scope: !1949)
!11611 = !DILocation(line: 246, column: 15, scope: !1967)
!11612 = !DILocation(line: 246, column: 36, scope: !1966)
!11613 = !DILocation(line: 246, column: 2, scope: !1967)
!11614 = !DILocation(line: 247, column: 37, scope: !1965)
!11615 = !DILocation(line: 0, scope: !1965)
!11616 = !DILocation(line: 248, column: 19, scope: !1965)
!11617 = !DILocation(line: 248, column: 12, scope: !1965)
!11618 = !DILocation(line: 250, column: 11, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !1965, file: !1722, line: 250, column: 7)
!11620 = !DILocation(line: 250, column: 7, scope: !1965)
!11621 = !DILocation(line: 254, column: 11, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11623, file: !1722, line: 254, column: 8)
!11623 = distinct !DILexicalBlock(scope: !11619, file: !1722, line: 250, column: 20)
!11624 = !DILocation(line: 254, column: 8, scope: !11623)
!11625 = !DILocation(line: 255, column: 9, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11622, file: !1722, line: 254, column: 17)
!11627 = !DILocation(line: 258, column: 9, scope: !11626)
!11628 = !DILocation(line: 261, column: 28, scope: !11626)
!11629 = !DILocation(line: 261, column: 10, scope: !11626)
!11630 = !DILocation(line: 261, column: 17, scope: !11626)
!11631 = !DILocation(line: 261, column: 26, scope: !11626)
!11632 = !DILocation(line: 262, column: 4, scope: !11626)
!11633 = !DILocation(line: 263, column: 9, scope: !11623)
!11634 = !DILocation(line: 263, column: 16, scope: !11623)
!11635 = !DILocation(line: 263, column: 28, scope: !11623)
!11636 = !DILocation(line: 264, column: 3, scope: !11623)
!11637 = !DILocation(line: 246, column: 60, scope: !1966)
!11638 = distinct !{!11638, !11613, !11639}
!11639 = !DILocation(line: 265, column: 2, scope: !1967)
!11640 = !DILocation(line: 266, column: 1, scope: !1949)
!11641 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !356, file: !356, line: 1814, type: !5055, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11642)
!11642 = !{!11643, !11644}
!11643 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11641, file: !356, line: 1814, type: !621)
!11644 = !DILocalVariable(name: "priority", arg: 2, scope: !11641, file: !356, line: 1814, type: !121)
!11645 = !DILocation(line: 0, scope: !11641)
!11646 = !DILocation(line: 1822, column: 48, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11648, file: !356, line: 1821, column: 3)
!11648 = distinct !DILexicalBlock(scope: !11641, file: !356, line: 1816, column: 7)
!11649 = !DILocation(line: 1822, column: 32, scope: !11647)
!11650 = !DILocation(line: 1822, column: 40, scope: !11647)
!11651 = !DILocation(line: 1822, column: 5, scope: !11647)
!11652 = !DILocation(line: 1822, column: 46, scope: !11647)
!11653 = !DILocation(line: 1824, column: 1, scope: !11641)
!11654 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !11572, file: !11572, line: 32, type: !2909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!11655 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11656, file: !11656, line: 215, type: !11553, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11657)
!11656 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11657 = !{!11658}
!11658 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11655, file: !11656, line: 215, type: !1815)
!11659 = !DILocation(line: 0, scope: !11655)
!11660 = !DILocation(line: 217, column: 21, scope: !11655)
!11661 = !DILocation(line: 217, column: 34, scope: !11655)
!11662 = !DILocation(line: 221, column: 21, scope: !11655)
!11663 = !DILocation(line: 221, column: 34, scope: !11655)
!11664 = !DILocation(line: 223, column: 27, scope: !11655)
!11665 = !DILocation(line: 223, column: 33, scope: !11655)
!11666 = !DILocation(line: 224, column: 27, scope: !11655)
!11667 = !DILocation(line: 224, column: 32, scope: !11655)
!11668 = !DILocation(line: 232, column: 16, scope: !11655)
!11669 = !DILocation(line: 232, column: 30, scope: !11655)
!11670 = !DILocation(line: 239, column: 24, scope: !11655)
!11671 = !DILocation(line: 240, column: 1, scope: !11655)
!11672 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1722, file: !1722, line: 399, type: !11673, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11675)
!11673 = !DISubroutineType(types: !11674)
!11674 = !{!995}
!11675 = !{!11676}
!11676 = !DILocalVariable(name: "stack_ptr", scope: !11672, file: !1722, line: 401, type: !995)
!11677 = !DILocation(line: 404, column: 2, scope: !11672)
!11678 = !DILocation(line: 416, column: 24, scope: !11672)
!11679 = !DILocation(line: 418, column: 14, scope: !11672)
!11680 = !DILocation(line: 0, scope: !11672)
!11681 = !DILocation(line: 423, column: 2, scope: !11672)
!11682 = !DILocation(line: 424, column: 2, scope: !11672)
!11683 = !DILocation(line: 426, column: 2, scope: !11672)
!11684 = !DILocation(line: 428, column: 2, scope: !11672)
!11685 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1722, file: !1722, line: 432, type: !11686, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11688)
!11686 = !DISubroutineType(types: !11687)
!11687 = !{null, !995}
!11688 = !{!11689}
!11689 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11685, file: !1722, line: 432, type: !995)
!11690 = !DILocation(line: 0, scope: !11685)
!11691 = !DILocation(line: 435, column: 2, scope: !11685)
!11692 = !DILocation(line: 445, column: 2, scope: !11685)
!11693 = distinct !DISubprogram(name: "bg_thread_main", scope: !1722, file: !1722, line: 277, type: !3352, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1718, retainedNodes: !11694)
!11694 = !{!11695, !11696, !11697}
!11695 = !DILocalVariable(name: "unused1", arg: 1, scope: !11693, file: !1722, line: 277, type: !102)
!11696 = !DILocalVariable(name: "unused2", arg: 2, scope: !11693, file: !1722, line: 277, type: !102)
!11697 = !DILocalVariable(name: "unused3", arg: 3, scope: !11693, file: !1722, line: 277, type: !102)
!11698 = !DILocation(line: 0, scope: !11693)
!11699 = !DILocation(line: 291, column: 20, scope: !11693)
!11700 = !DILocation(line: 293, column: 2, scope: !11693)
!11701 = !DILocation(line: 297, column: 2, scope: !11693)
!11702 = !DILocation(line: 305, column: 2, scope: !11693)
!11703 = !DILocation(line: 307, column: 2, scope: !11693)
!11704 = !DILocation(line: 330, column: 8, scope: !11693)
!11705 = !DILocation(line: 333, column: 34, scope: !11693)
!11706 = !DILocation(line: 339, column: 1, scope: !11693)
!11707 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1978, file: !1978, line: 45, type: !11708, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11716)
!11708 = !DISubroutineType(types: !11709)
!11709 = !{null, !11710, !102}
!11710 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !307, line: 103, baseType: !11711)
!11711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11712, size: 32)
!11712 = !DISubroutineType(types: !11713)
!11713 = !{null, !11714, !102}
!11714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11715, size: 32)
!11715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1983)
!11716 = !{!11717, !11718}
!11717 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11707, file: !1978, line: 45, type: !11710)
!11718 = !DILocalVariable(name: "user_data", arg: 2, scope: !11707, file: !1978, line: 45, type: !102)
!11719 = !DILocation(line: 0, scope: !11707)
!11720 = !DILocation(line: 71, column: 1, scope: !11707)
!11721 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1978, file: !1978, line: 73, type: !11708, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11722)
!11722 = !{!11723, !11724}
!11723 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11721, file: !1978, line: 73, type: !11710)
!11724 = !DILocalVariable(name: "user_data", arg: 2, scope: !11721, file: !1978, line: 73, type: !102)
!11725 = !DILocation(line: 0, scope: !11721)
!11726 = !DILocation(line: 95, column: 1, scope: !11721)
!11727 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1978, file: !1978, line: 97, type: !5816, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11728 = !DILocation(line: 1031, column: 3, scope: !11729, inlinedAt: !11732)
!11729 = distinct !DISubprogram(name: "__get_IPSR", scope: !5021, file: !5021, line: 1027, type: !5102, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11730)
!11730 = !{!11731}
!11731 = !DILocalVariable(name: "result", scope: !11729, file: !5021, line: 1029, type: !121)
!11732 = distinct !DILocation(line: 48, column: 10, scope: !11733, inlinedAt: !11734)
!11733 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5815, file: !5815, line: 46, type: !5816, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11734 = distinct !DILocation(line: 99, column: 9, scope: !11727)
!11735 = !{i64 3751454}
!11736 = !DILocation(line: 0, scope: !11729, inlinedAt: !11732)
!11737 = !DILocation(line: 48, column: 9, scope: !11733, inlinedAt: !11734)
!11738 = !DILocation(line: 99, column: 2, scope: !11727)
!11739 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1978, file: !1978, line: 106, type: !2909, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11740 = !DILocation(line: 108, column: 2, scope: !11739)
!11741 = !DILocation(line: 108, column: 17, scope: !11739)
!11742 = !DILocation(line: 108, column: 30, scope: !11739)
!11743 = !DILocation(line: 109, column: 1, scope: !11739)
!11744 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1978, file: !1978, line: 116, type: !2909, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11745 = !DILocation(line: 118, column: 2, scope: !11744)
!11746 = !DILocation(line: 118, column: 17, scope: !11744)
!11747 = !DILocation(line: 118, column: 30, scope: !11744)
!11748 = !DILocation(line: 119, column: 1, scope: !11744)
!11749 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1978, file: !1978, line: 126, type: !5816, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !322)
!11750 = !DILocation(line: 128, column: 10, scope: !11749)
!11751 = !DILocation(line: 128, column: 25, scope: !11749)
!11752 = !DILocation(line: 128, column: 38, scope: !11749)
!11753 = !DILocation(line: 128, column: 53, scope: !11749)
!11754 = !DILocation(line: 128, column: 2, scope: !11749)
!11755 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1978, file: !1978, line: 187, type: !11756, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11758)
!11756 = !DISubroutineType(types: !11757)
!11757 = !{!103, !1982, !144}
!11758 = !{!11759, !11760}
!11759 = !DILocalVariable(name: "thread", arg: 1, scope: !11755, file: !1978, line: 187, type: !1982)
!11760 = !DILocalVariable(name: "value", arg: 2, scope: !11755, file: !1978, line: 187, type: !144)
!11761 = !DILocation(line: 0, scope: !11755)
!11762 = !DILocation(line: 206, column: 2, scope: !11755)
!11763 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1978, file: !1978, line: 238, type: !11764, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11766)
!11764 = !DISubroutineType(types: !11765)
!11765 = !{!144, !1982}
!11766 = !{!11767}
!11767 = !DILocalVariable(name: "thread", arg: 1, scope: !11763, file: !1978, line: 238, type: !1982)
!11768 = !DILocation(line: 0, scope: !11763)
!11769 = !DILocation(line: 244, column: 2, scope: !11763)
!11770 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1978, file: !1978, line: 248, type: !11771, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11773)
!11771 = !DISubroutineType(types: !11772)
!11772 = !{!103, !1981, !995, !200}
!11773 = !{!11774, !11775, !11776}
!11774 = !DILocalVariable(name: "thread", arg: 1, scope: !11770, file: !1978, line: 248, type: !1981)
!11775 = !DILocalVariable(name: "buf", arg: 2, scope: !11770, file: !1978, line: 248, type: !995)
!11776 = !DILocalVariable(name: "size", arg: 3, scope: !11770, file: !1978, line: 248, type: !200)
!11777 = !DILocation(line: 0, scope: !11770)
!11778 = !DILocation(line: 257, column: 2, scope: !11770)
!11779 = !DILocation(line: 0, scope: !1977)
!11780 = !DILocation(line: 281, column: 11, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !1977, file: !1978, line: 281, column: 6)
!11782 = !DILocation(line: 281, column: 20, scope: !11781)
!11783 = !DILocation(line: 275, column: 45, scope: !1977)
!11784 = !DILocation(line: 285, column: 10, scope: !1977)
!11785 = !DILocation(line: 0, scope: !2098)
!11786 = !DILocation(line: 293, column: 39, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !2098, file: !1978, line: 293, column: 2)
!11788 = !DILocation(line: 293, column: 2, scope: !2098)
!11789 = !DILocation(line: 273, column: 14, scope: !1977)
!11790 = !DILocation(line: 309, column: 2, scope: !1977)
!11791 = !DILocation(line: 309, column: 11, scope: !1977)
!11792 = !DILocation(line: 311, column: 2, scope: !1977)
!11793 = !DILocation(line: 293, column: 26, scope: !11787)
!11794 = !DILocation(line: 294, column: 9, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11787, file: !1978, line: 293, column: 54)
!11796 = !DILocation(line: 295, column: 21, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11795, file: !1978, line: 295, column: 7)
!11798 = !DILocation(line: 295, column: 28, scope: !11797)
!11799 = !DILocation(line: 295, column: 7, scope: !11795)
!11800 = !DILocation(line: 299, column: 25, scope: !11795)
!11801 = !DILocation(line: 299, column: 41, scope: !11795)
!11802 = !DILocation(line: 300, column: 7, scope: !11795)
!11803 = !DILocation(line: 300, column: 26, scope: !11795)
!11804 = !DILocation(line: 299, column: 10, scope: !11795)
!11805 = !DILocation(line: 299, column: 7, scope: !11795)
!11806 = !DILocation(line: 302, column: 16, scope: !11795)
!11807 = !DILocation(line: 304, column: 20, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11795, file: !1978, line: 304, column: 7)
!11809 = !DILocation(line: 304, column: 7, scope: !11795)
!11810 = !DILocation(line: 305, column: 26, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11808, file: !1978, line: 304, column: 26)
!11812 = !DILocation(line: 305, column: 42, scope: !11811)
!11813 = !DILocation(line: 305, column: 11, scope: !11811)
!11814 = !DILocation(line: 305, column: 8, scope: !11811)
!11815 = !DILocation(line: 306, column: 3, scope: !11811)
!11816 = !DILocation(line: 293, column: 50, scope: !11787)
!11817 = !DILocation(line: 312, column: 1, scope: !1977)
!11818 = distinct !DISubprogram(name: "copy_bytes", scope: !1978, file: !1978, line: 261, type: !11819, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11821)
!11819 = !DISubroutineType(types: !11820)
!11820 = !{!200, !995, !200, !144, !200}
!11821 = !{!11822, !11823, !11824, !11825, !11826}
!11822 = !DILocalVariable(name: "dest", arg: 1, scope: !11818, file: !1978, line: 261, type: !995)
!11823 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11818, file: !1978, line: 261, type: !200)
!11824 = !DILocalVariable(name: "src", arg: 3, scope: !11818, file: !1978, line: 261, type: !144)
!11825 = !DILocalVariable(name: "src_size", arg: 4, scope: !11818, file: !1978, line: 261, type: !200)
!11826 = !DILocalVariable(name: "bytes_to_copy", scope: !11818, file: !1978, line: 263, type: !200)
!11827 = !DILocation(line: 0, scope: !11818)
!11828 = !DILocation(line: 265, column: 18, scope: !11818)
!11829 = !DILocation(line: 266, column: 2, scope: !11818)
!11830 = !DILocation(line: 268, column: 2, scope: !11818)
!11831 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1978, file: !1978, line: 383, type: !11832, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11834)
!11832 = !DISubroutineType(types: !11833)
!11833 = !{null, !1982}
!11834 = !{!11835}
!11835 = !DILocalVariable(name: "thread", arg: 1, scope: !11831, file: !1978, line: 383, type: !1982)
!11836 = !DILocation(line: 0, scope: !11831)
!11837 = !DILocation(line: 387, column: 2, scope: !11831)
!11838 = !DILocation(line: 388, column: 1, scope: !11831)
!11839 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1978, file: !1978, line: 528, type: !11840, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11847)
!11840 = !DISubroutineType(types: !11841)
!11841 = !{!995, !1982, !11842, !200, !3349, !102, !102, !102, !103, !121, !144}
!11842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11843, size: 32)
!11843 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3350, line: 44, baseType: !11844)
!11844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1930, line: 47, size: 8, elements: !11845)
!11845 = !{!11846}
!11846 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11844, file: !1930, line: 48, baseType: !146, size: 8)
!11847 = !{!11848, !11849, !11850, !11851, !11852, !11853, !11854, !11855, !11856, !11857, !11858}
!11848 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11839, file: !1978, line: 528, type: !1982)
!11849 = !DILocalVariable(name: "stack", arg: 2, scope: !11839, file: !1978, line: 529, type: !11842)
!11850 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11839, file: !1978, line: 529, type: !200)
!11851 = !DILocalVariable(name: "entry", arg: 4, scope: !11839, file: !1978, line: 530, type: !3349)
!11852 = !DILocalVariable(name: "p1", arg: 5, scope: !11839, file: !1978, line: 531, type: !102)
!11853 = !DILocalVariable(name: "p2", arg: 6, scope: !11839, file: !1978, line: 531, type: !102)
!11854 = !DILocalVariable(name: "p3", arg: 7, scope: !11839, file: !1978, line: 531, type: !102)
!11855 = !DILocalVariable(name: "prio", arg: 8, scope: !11839, file: !1978, line: 532, type: !103)
!11856 = !DILocalVariable(name: "options", arg: 9, scope: !11839, file: !1978, line: 532, type: !121)
!11857 = !DILocalVariable(name: "name", arg: 10, scope: !11839, file: !1978, line: 532, type: !144)
!11858 = !DILocalVariable(name: "stack_ptr", scope: !11839, file: !1978, line: 534, type: !995)
!11859 = !DILocation(line: 0, scope: !11839)
!11860 = !DILocation(line: 550, column: 28, scope: !11839)
!11861 = !DILocation(line: 550, column: 2, scope: !11839)
!11862 = !DILocation(line: 553, column: 34, scope: !11839)
!11863 = !DILocation(line: 553, column: 2, scope: !11839)
!11864 = !DILocation(line: 554, column: 14, scope: !11839)
!11865 = !DILocation(line: 564, column: 2, scope: !11839)
!11866 = !DILocation(line: 567, column: 14, scope: !11839)
!11867 = !DILocation(line: 567, column: 24, scope: !11839)
!11868 = !DILocation(line: 612, column: 7, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11839, file: !1978, line: 612, column: 6)
!11870 = !DILocation(line: 612, column: 6, scope: !11839)
!11871 = !DILocation(line: 627, column: 40, scope: !11839)
!11872 = !DILocation(line: 637, column: 2, scope: !11839)
!11873 = !DILocation(line: 613, column: 15, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11869, file: !1978, line: 612, column: 17)
!11875 = !DILocation(line: 613, column: 29, scope: !11874)
!11876 = !DILocation(line: 638, column: 1, scope: !11839)
!11877 = distinct !DISubprogram(name: "z_waitq_init", scope: !11878, file: !11878, line: 47, type: !11879, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11881)
!11878 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11879 = !DISubroutineType(types: !11880)
!11880 = !{null, !2013}
!11881 = !{!11882}
!11882 = !DILocalVariable(name: "w", arg: 1, scope: !11877, file: !11878, line: 47, type: !2013)
!11883 = !DILocation(line: 0, scope: !11877)
!11884 = !DILocation(line: 49, column: 21, scope: !11877)
!11885 = !DILocation(line: 49, column: 2, scope: !11877)
!11886 = !DILocation(line: 50, column: 1, scope: !11877)
!11887 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1978, file: !1978, line: 791, type: !11888, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11891)
!11888 = !DISubroutineType(types: !11889)
!11889 = !{null, !11890, !103, !121, !32}
!11890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 32)
!11891 = !{!11892, !11893, !11894, !11895}
!11892 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11887, file: !1978, line: 791, type: !11890)
!11893 = !DILocalVariable(name: "priority", arg: 2, scope: !11887, file: !1978, line: 791, type: !103)
!11894 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11887, file: !1978, line: 792, type: !121)
!11895 = !DILocalVariable(name: "options", arg: 4, scope: !11887, file: !1978, line: 792, type: !32)
!11896 = !DILocation(line: 0, scope: !11887)
!11897 = !DILocation(line: 795, column: 15, scope: !11887)
!11898 = !DILocation(line: 795, column: 25, scope: !11887)
!11899 = !DILocation(line: 796, column: 30, scope: !11887)
!11900 = !DILocation(line: 796, column: 15, scope: !11887)
!11901 = !DILocation(line: 796, column: 28, scope: !11887)
!11902 = !DILocation(line: 797, column: 30, scope: !11887)
!11903 = !DILocation(line: 797, column: 15, scope: !11887)
!11904 = !DILocation(line: 797, column: 28, scope: !11887)
!11905 = !DILocation(line: 799, column: 22, scope: !11887)
!11906 = !DILocation(line: 799, column: 15, scope: !11887)
!11907 = !DILocation(line: 799, column: 20, scope: !11887)
!11908 = !DILocation(line: 801, column: 15, scope: !11887)
!11909 = !DILocation(line: 801, column: 28, scope: !11887)
!11910 = !DILocation(line: 814, column: 2, scope: !11887)
!11911 = !DILocation(line: 815, column: 1, scope: !11887)
!11912 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1978, file: !1978, line: 449, type: !11913, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11915)
!11913 = !DISubroutineType(types: !11914)
!11914 = !{!995, !1982, !11842, !200}
!11915 = !{!11916, !11917, !11918, !11919, !11920, !11921, !11922, !11923}
!11916 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11912, file: !1978, line: 449, type: !1982)
!11917 = !DILocalVariable(name: "stack", arg: 2, scope: !11912, file: !1978, line: 450, type: !11842)
!11918 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11912, file: !1978, line: 450, type: !200)
!11919 = !DILocalVariable(name: "stack_obj_size", scope: !11912, file: !1978, line: 452, type: !200)
!11920 = !DILocalVariable(name: "stack_buf_size", scope: !11912, file: !1978, line: 452, type: !200)
!11921 = !DILocalVariable(name: "stack_ptr", scope: !11912, file: !1978, line: 453, type: !995)
!11922 = !DILocalVariable(name: "stack_buf_start", scope: !11912, file: !1978, line: 453, type: !995)
!11923 = !DILocalVariable(name: "delta", scope: !11912, file: !1978, line: 454, type: !200)
!11924 = !DILocation(line: 0, scope: !11912)
!11925 = !DILocation(line: 465, column: 20, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11912, file: !1978, line: 463, column: 2)
!11927 = !DILocation(line: 466, column: 21, scope: !11926)
!11928 = !DILocation(line: 473, column: 28, scope: !11912)
!11929 = !DILocation(line: 514, column: 33, scope: !11912)
!11930 = !DILocation(line: 514, column: 25, scope: !11912)
!11931 = !DILocation(line: 514, column: 31, scope: !11912)
!11932 = !DILocation(line: 515, column: 25, scope: !11912)
!11933 = !DILocation(line: 515, column: 30, scope: !11912)
!11934 = !DILocation(line: 516, column: 25, scope: !11912)
!11935 = !DILocation(line: 516, column: 31, scope: !11912)
!11936 = !DILocation(line: 520, column: 2, scope: !11912)
!11937 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1930, file: !1930, line: 331, type: !11938, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11940)
!11938 = !DISubroutineType(types: !11939)
!11939 = !{!995, !11842}
!11940 = !{!11941}
!11941 = !DILocalVariable(name: "sym", arg: 1, scope: !11937, file: !1930, line: 331, type: !11842)
!11942 = !DILocation(line: 0, scope: !11937)
!11943 = !DILocation(line: 333, column: 21, scope: !11937)
!11944 = !DILocation(line: 333, column: 2, scope: !11937)
!11945 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11946, file: !11946, line: 40, type: !11947, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11949)
!11946 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11947 = !DISubroutineType(types: !11948)
!11948 = !{null, !11890}
!11949 = !{!11950}
!11950 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11945, file: !11946, line: 40, type: !11890)
!11951 = !DILocation(line: 0, scope: !11945)
!11952 = !DILocation(line: 42, column: 31, scope: !11945)
!11953 = !DILocation(line: 42, column: 2, scope: !11945)
!11954 = !DILocation(line: 43, column: 1, scope: !11945)
!11955 = distinct !DISubprogram(name: "z_init_timeout", scope: !11946, file: !11946, line: 25, type: !2039, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11956)
!11956 = !{!11957}
!11957 = !DILocalVariable(name: "to", arg: 1, scope: !11955, file: !11946, line: 25, type: !2041)
!11958 = !DILocation(line: 0, scope: !11955)
!11959 = !DILocation(line: 27, column: 22, scope: !11955)
!11960 = !DILocation(line: 27, column: 2, scope: !11955)
!11961 = !DILocation(line: 28, column: 1, scope: !11955)
!11962 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !11963, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11965)
!11963 = !DISubroutineType(types: !11964)
!11964 = !{null, !2085}
!11965 = !{!11966}
!11966 = !DILocalVariable(name: "node", arg: 1, scope: !11962, file: !221, line: 211, type: !2085)
!11967 = !DILocation(line: 0, scope: !11962)
!11968 = !DILocation(line: 213, column: 8, scope: !11962)
!11969 = !DILocation(line: 213, column: 13, scope: !11962)
!11970 = !DILocation(line: 214, column: 8, scope: !11962)
!11971 = !DILocation(line: 214, column: 13, scope: !11962)
!11972 = !DILocation(line: 215, column: 1, scope: !11962)
!11973 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !11974, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11977)
!11974 = !DISubroutineType(types: !11975)
!11975 = !{null, !11976}
!11976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!11977 = !{!11978}
!11978 = !DILocalVariable(name: "list", arg: 1, scope: !11973, file: !221, line: 197, type: !11976)
!11979 = !DILocation(line: 0, scope: !11973)
!11980 = !DILocation(line: 199, column: 8, scope: !11973)
!11981 = !DILocation(line: 199, column: 13, scope: !11973)
!11982 = !DILocation(line: 200, column: 8, scope: !11973)
!11983 = !DILocation(line: 200, column: 13, scope: !11973)
!11984 = !DILocation(line: 201, column: 1, scope: !11973)
!11985 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1978, file: !1978, line: 641, type: !11986, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !11992)
!11986 = !DISubroutineType(types: !11987)
!11987 = !{!1981, !1982, !11842, !200, !3349, !102, !102, !102, !103, !121, !11988}
!11988 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1457, line: 67, baseType: !11989)
!11989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1457, line: 65, size: 64, elements: !11990)
!11990 = !{!11991}
!11991 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11989, file: !1457, line: 66, baseType: !1456, size: 64)
!11992 = !{!11993, !11994, !11995, !11996, !11997, !11998, !11999, !12000, !12001, !12002}
!11993 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11985, file: !1978, line: 641, type: !1982)
!11994 = !DILocalVariable(name: "stack", arg: 2, scope: !11985, file: !1978, line: 642, type: !11842)
!11995 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11985, file: !1978, line: 643, type: !200)
!11996 = !DILocalVariable(name: "entry", arg: 4, scope: !11985, file: !1978, line: 643, type: !3349)
!11997 = !DILocalVariable(name: "p1", arg: 5, scope: !11985, file: !1978, line: 644, type: !102)
!11998 = !DILocalVariable(name: "p2", arg: 6, scope: !11985, file: !1978, line: 644, type: !102)
!11999 = !DILocalVariable(name: "p3", arg: 7, scope: !11985, file: !1978, line: 644, type: !102)
!12000 = !DILocalVariable(name: "prio", arg: 8, scope: !11985, file: !1978, line: 645, type: !103)
!12001 = !DILocalVariable(name: "options", arg: 9, scope: !11985, file: !1978, line: 645, type: !121)
!12002 = !DILocalVariable(name: "delay", arg: 10, scope: !11985, file: !1978, line: 645, type: !11988)
!12003 = !DILocation(line: 0, scope: !11985)
!12004 = !DILocation(line: 649, column: 2, scope: !11985)
!12005 = !DILocation(line: 652, column: 7, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !11985, file: !1978, line: 652, column: 6)
!12007 = !DILocation(line: 652, column: 6, scope: !11985)
!12008 = !DILocation(line: 653, column: 3, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !12006, file: !1978, line: 652, column: 39)
!12010 = !DILocation(line: 654, column: 2, scope: !12009)
!12011 = !DILocation(line: 656, column: 2, scope: !11985)
!12012 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1978, file: !1978, line: 401, type: !12013, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !12015)
!12013 = !DISubroutineType(types: !12014)
!12014 = !{null, !1982, !11988}
!12015 = !{!12016, !12017}
!12016 = !DILocalVariable(name: "thread", arg: 1, scope: !12012, file: !1978, line: 401, type: !1982)
!12017 = !DILocalVariable(name: "delay", arg: 2, scope: !12012, file: !1978, line: 401, type: !11988)
!12018 = !DILocation(line: 0, scope: !12012)
!12019 = !DILocation(line: 404, column: 6, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12012, file: !1978, line: 404, column: 6)
!12021 = !DILocation(line: 404, column: 6, scope: !12012)
!12022 = !DILocation(line: 405, column: 3, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12020, file: !1978, line: 404, column: 38)
!12024 = !DILocation(line: 406, column: 2, scope: !12023)
!12025 = !DILocation(line: 407, column: 3, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12020, file: !1978, line: 406, column: 9)
!12027 = !DILocation(line: 413, column: 1, scope: !12012)
!12028 = distinct !DISubprogram(name: "k_thread_start", scope: !3079, file: !3079, line: 205, type: !12029, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !12031)
!12029 = !DISubroutineType(types: !12030)
!12030 = !{null, !1981}
!12031 = !{!12032}
!12032 = !DILocalVariable(name: "thread", arg: 1, scope: !12028, file: !3079, line: 205, type: !1981)
!12033 = !DILocation(line: 0, scope: !12028)
!12034 = !DILocation(line: 214, column: 2, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12028, file: !3079, line: 214, column: 2)
!12036 = !{i64 2155086659}
!12037 = !DILocation(line: 215, column: 2, scope: !12028)
!12038 = !DILocation(line: 216, column: 1, scope: !12028)
!12039 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11946, file: !11946, line: 47, type: !12013, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !12040)
!12040 = !{!12041, !12042}
!12041 = !DILocalVariable(name: "thread", arg: 1, scope: !12039, file: !11946, line: 47, type: !1982)
!12042 = !DILocalVariable(name: "ticks", arg: 2, scope: !12039, file: !11946, line: 47, type: !11988)
!12043 = !DILocation(line: 0, scope: !12039)
!12044 = !DILocation(line: 49, column: 30, scope: !12039)
!12045 = !DILocation(line: 49, column: 2, scope: !12039)
!12046 = !DILocation(line: 50, column: 1, scope: !12039)
!12047 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1978, file: !1978, line: 748, type: !2909, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !12048)
!12048 = !{!12049, !12067}
!12049 = !DILocalVariable(name: "thread_data", scope: !12050, file: !1978, line: 750, type: !12051)
!12050 = distinct !DILexicalBlock(scope: !12047, file: !1978, line: 750, column: 2)
!12051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12052, size: 32)
!12052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !307, line: 620, size: 384, elements: !12053)
!12053 = !{!12054, !12055, !12056, !12057, !12058, !12059, !12060, !12061, !12062, !12063, !12064, !12066}
!12054 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12052, file: !307, line: 621, baseType: !1982, size: 32)
!12055 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12052, file: !307, line: 622, baseType: !11842, size: 32, offset: 32)
!12056 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12052, file: !307, line: 623, baseType: !32, size: 32, offset: 64)
!12057 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12052, file: !307, line: 624, baseType: !3349, size: 32, offset: 96)
!12058 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12052, file: !307, line: 625, baseType: !102, size: 32, offset: 128)
!12059 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12052, file: !307, line: 626, baseType: !102, size: 32, offset: 160)
!12060 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12052, file: !307, line: 627, baseType: !102, size: 32, offset: 192)
!12061 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12052, file: !307, line: 628, baseType: !103, size: 32, offset: 224)
!12062 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12052, file: !307, line: 629, baseType: !121, size: 32, offset: 256)
!12063 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12052, file: !307, line: 630, baseType: !595, size: 32, offset: 288)
!12064 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12052, file: !307, line: 631, baseType: !12065, size: 32, offset: 320)
!12065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 32)
!12066 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12052, file: !307, line: 632, baseType: !144, size: 32, offset: 352)
!12067 = !DILocalVariable(name: "thread_data", scope: !12068, file: !1978, line: 781, type: !12051)
!12068 = distinct !DILexicalBlock(scope: !12047, file: !1978, line: 781, column: 2)
!12069 = !DILocation(line: 0, scope: !12050)
!12070 = !DILocation(line: 750, column: 2, scope: !12050)
!12071 = !DILocation(line: 780, column: 2, scope: !12047)
!12072 = !DILocation(line: 0, scope: !12068)
!12073 = !DILocation(line: 781, column: 2, scope: !12068)
!12074 = !DILocation(line: 752, column: 17, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12076, file: !1978, line: 750, column: 38)
!12076 = distinct !DILexicalBlock(scope: !12050, file: !1978, line: 750, column: 2)
!12077 = !DILocation(line: 753, column: 17, scope: !12075)
!12078 = !DILocation(line: 754, column: 17, scope: !12075)
!12079 = !DILocation(line: 755, column: 17, scope: !12075)
!12080 = !DILocation(line: 756, column: 17, scope: !12075)
!12081 = !DILocation(line: 757, column: 17, scope: !12075)
!12082 = !DILocation(line: 758, column: 17, scope: !12075)
!12083 = !DILocation(line: 759, column: 17, scope: !12075)
!12084 = !DILocation(line: 760, column: 17, scope: !12075)
!12085 = !DILocation(line: 751, column: 3, scope: !12075)
!12086 = !DILocation(line: 763, column: 16, scope: !12075)
!12087 = !DILocation(line: 763, column: 29, scope: !12075)
!12088 = !DILocation(line: 763, column: 39, scope: !12075)
!12089 = !DILocation(line: 750, column: 2, scope: !12076)
!12090 = !DILocation(line: 750, column: 2, scope: !12091)
!12091 = distinct !DILexicalBlock(scope: !12076, file: !1978, line: 750, column: 2)
!12092 = distinct !{!12092, !12070, !12093}
!12093 = !DILocation(line: 764, column: 2, scope: !12050)
!12094 = !DILocation(line: 787, column: 2, scope: !12047)
!12095 = !DILocation(line: 788, column: 1, scope: !12047)
!12096 = !DILocation(line: 782, column: 20, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12098, file: !1978, line: 782, column: 7)
!12098 = distinct !DILexicalBlock(scope: !12099, file: !1978, line: 781, column: 38)
!12099 = distinct !DILexicalBlock(scope: !12068, file: !1978, line: 781, column: 2)
!12100 = !DILocation(line: 782, column: 31, scope: !12097)
!12101 = !DILocation(line: 782, column: 7, scope: !12098)
!12102 = !DILocation(line: 783, column: 37, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12097, file: !1978, line: 782, column: 51)
!12104 = !DILocation(line: 784, column: 10, scope: !12103)
!12105 = !DILocation(line: 783, column: 4, scope: !12103)
!12106 = !DILocation(line: 785, column: 3, scope: !12103)
!12107 = !DILocation(line: 781, column: 2, scope: !12099)
!12108 = !DILocation(line: 781, column: 2, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12099, file: !1978, line: 781, column: 2)
!12110 = distinct !{!12110, !12073, !12111}
!12111 = !DILocation(line: 786, column: 2, scope: !12068)
!12112 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12113, file: !12113, line: 403, type: !12114, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !12116)
!12113 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12114 = !DISubroutineType(types: !12115)
!12115 = !{!1308, !1308}
!12116 = !{!12117}
!12117 = !DILocalVariable(name: "t", arg: 1, scope: !12112, file: !12113, line: 403, type: !1308)
!12118 = !DILocation(line: 0, scope: !12112)
!12119 = !DILocalVariable(name: "t", arg: 1, scope: !12120, file: !12113, line: 102, type: !1308)
!12120 = distinct !DISubprogram(name: "z_tmcvt", scope: !12113, file: !12113, line: 102, type: !12121, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !12123)
!12121 = !DISubroutineType(types: !12122)
!12122 = !{!1308, !1308, !121, !121, !157, !157, !157, !157}
!12123 = !{!12119, !12124, !12125, !12126, !12127, !12128, !12129, !12130, !12131, !12132, !12133}
!12124 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12120, file: !12113, line: 102, type: !121)
!12125 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12120, file: !12113, line: 103, type: !121)
!12126 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12120, file: !12113, line: 103, type: !157)
!12127 = !DILocalVariable(name: "result32", arg: 5, scope: !12120, file: !12113, line: 104, type: !157)
!12128 = !DILocalVariable(name: "round_up", arg: 6, scope: !12120, file: !12113, line: 104, type: !157)
!12129 = !DILocalVariable(name: "round_off", arg: 7, scope: !12120, file: !12113, line: 105, type: !157)
!12130 = !DILocalVariable(name: "mul_ratio", scope: !12120, file: !12113, line: 107, type: !157)
!12131 = !DILocalVariable(name: "div_ratio", scope: !12120, file: !12113, line: 109, type: !157)
!12132 = !DILocalVariable(name: "off", scope: !12120, file: !12113, line: 116, type: !1308)
!12133 = !DILocalVariable(name: "rdivisor", scope: !12134, file: !12113, line: 119, type: !121)
!12134 = distinct !DILexicalBlock(scope: !12135, file: !12113, line: 118, column: 18)
!12135 = distinct !DILexicalBlock(scope: !12120, file: !12113, line: 118, column: 6)
!12136 = !DILocation(line: 0, scope: !12120, inlinedAt: !12137)
!12137 = distinct !DILocation(line: 406, column: 9, scope: !12112)
!12138 = !DILocation(line: 145, column: 13, scope: !12139, inlinedAt: !12137)
!12139 = distinct !DILexicalBlock(scope: !12140, file: !12113, line: 144, column: 10)
!12140 = distinct !DILexicalBlock(scope: !12141, file: !12113, line: 142, column: 7)
!12141 = distinct !DILexicalBlock(scope: !12142, file: !12113, line: 141, column: 24)
!12142 = distinct !DILexicalBlock(scope: !12143, file: !12113, line: 141, column: 13)
!12143 = distinct !DILexicalBlock(scope: !12120, file: !12113, line: 134, column: 6)
!12144 = !DILocation(line: 406, column: 2, scope: !12112)
!12145 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1978, file: !1978, line: 817, type: !3347, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !12146)
!12146 = !{!12147, !12148, !12149, !12150}
!12147 = !DILocalVariable(name: "entry", arg: 1, scope: !12145, file: !1978, line: 817, type: !3349)
!12148 = !DILocalVariable(name: "p1", arg: 2, scope: !12145, file: !1978, line: 818, type: !102)
!12149 = !DILocalVariable(name: "p2", arg: 3, scope: !12145, file: !1978, line: 818, type: !102)
!12150 = !DILocalVariable(name: "p3", arg: 4, scope: !12145, file: !1978, line: 818, type: !102)
!12151 = !DILocation(line: 0, scope: !12145)
!12152 = !DILocation(line: 822, column: 2, scope: !12145)
!12153 = !DILocation(line: 822, column: 17, scope: !12145)
!12154 = !DILocation(line: 822, column: 30, scope: !12145)
!12155 = !DILocation(line: 823, column: 2, scope: !12145)
!12156 = !DILocation(line: 845, column: 2, scope: !12145)
!12157 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1978, file: !1978, line: 888, type: !12158, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !12160)
!12158 = !DISubroutineType(types: !12159)
!12159 = !{!103, !1982}
!12160 = !{!12161}
!12161 = !DILocalVariable(name: "thread", arg: 1, scope: !12157, file: !1978, line: 888, type: !1982)
!12162 = !DILocation(line: 0, scope: !12157)
!12163 = !DILocation(line: 893, column: 2, scope: !12157)
!12164 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1978, file: !1978, line: 897, type: !12165, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !12167)
!12165 = !DISubroutineType(types: !12166)
!12166 = !{!103, !1982, !32}
!12167 = !{!12168, !12169}
!12168 = !DILocalVariable(name: "thread", arg: 1, scope: !12164, file: !1978, line: 897, type: !1982)
!12169 = !DILocalVariable(name: "options", arg: 2, scope: !12164, file: !1978, line: 897, type: !32)
!12170 = !DILocation(line: 0, scope: !12164)
!12171 = !DILocation(line: 902, column: 2, scope: !12164)
!12172 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1978, file: !1978, line: 1072, type: !12173, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !12178)
!12173 = !DISubroutineType(types: !12174)
!12174 = !{!103, !1981, !12175}
!12175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12176, size: 32)
!12176 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !211, line: 234, baseType: !12177)
!12177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !211, line: 192, elements: !322)
!12178 = !{!12179, !12180}
!12179 = !DILocalVariable(name: "thread", arg: 1, scope: !12172, file: !1978, line: 1072, type: !1981)
!12180 = !DILocalVariable(name: "stats", arg: 2, scope: !12172, file: !1978, line: 1073, type: !12175)
!12181 = !DILocation(line: 0, scope: !12172)
!12182 = !DILocation(line: 1075, column: 14, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12172, file: !1978, line: 1075, column: 6)
!12184 = !DILocation(line: 1075, column: 23, scope: !12183)
!12185 = !DILocation(line: 1086, column: 1, scope: !12172)
!12186 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1978, file: !1978, line: 1088, type: !12187, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2082, retainedNodes: !12189)
!12187 = !DISubroutineType(types: !12188)
!12188 = !{!103, !12175}
!12189 = !{!12190}
!12190 = !DILocalVariable(name: "stats", arg: 1, scope: !12186, file: !1978, line: 1088, type: !12175)
!12191 = !DILocation(line: 0, scope: !12186)
!12192 = !DILocation(line: 1094, column: 12, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12186, file: !1978, line: 1094, column: 6)
!12194 = !DILocation(line: 1120, column: 1, scope: !12186)
!12195 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12196, file: !12196, line: 20, type: !2909, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !322)
!12196 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12197 = !DILocation(line: 30, column: 2, scope: !12195)
!12198 = !DILocation(line: 31, column: 1, scope: !12195)
!12199 = distinct !DISubprogram(name: "idle", scope: !12196, file: !12196, line: 33, type: !3352, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !12200)
!12200 = !{!12201, !12202, !12203}
!12201 = !DILocalVariable(name: "unused1", arg: 1, scope: !12199, file: !12196, line: 33, type: !102)
!12202 = !DILocalVariable(name: "unused2", arg: 2, scope: !12199, file: !12196, line: 33, type: !102)
!12203 = !DILocalVariable(name: "unused3", arg: 3, scope: !12199, file: !12196, line: 33, type: !102)
!12204 = !DILocation(line: 0, scope: !12199)
!12205 = !DILocation(line: 41, column: 2, scope: !12199)
!12206 = !DILocation(line: 55, column: 2, scope: !12207, inlinedAt: !12211)
!12207 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4847, file: !4847, line: 42, type: !4848, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !12208)
!12208 = !{!12209, !12210}
!12209 = !DILocalVariable(name: "key", scope: !12207, file: !4847, line: 44, type: !32)
!12210 = !DILocalVariable(name: "tmp", scope: !12207, file: !4847, line: 53, type: !32)
!12211 = distinct !DILocation(line: 62, column: 10, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12199, file: !12196, line: 41, column: 15)
!12213 = !{i64 2278206}
!12214 = !DILocation(line: 0, scope: !12207, inlinedAt: !12211)
!12215 = !DILocation(line: 86, column: 3, scope: !12212)
!12216 = distinct !{!12216, !12205, !12217}
!12217 = !DILocation(line: 105, column: 2, scope: !12199)
!12218 = distinct !DISubprogram(name: "k_cpu_idle", scope: !307, file: !307, line: 5627, type: !2909, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !322)
!12219 = !DILocation(line: 5629, column: 2, scope: !12218)
!12220 = !DILocation(line: 5630, column: 1, scope: !12218)
!12221 = !DISubprogram(name: "arch_cpu_idle", scope: !3350, file: !3350, line: 167, type: !2909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!12222 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2210, file: !2210, line: 93, type: !12223, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12225)
!12223 = !DISubroutineType(types: !12224)
!12224 = !{!595, !2105, !2105}
!12225 = !{!12226, !12227, !12228, !12229}
!12226 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12222, file: !2210, line: 93, type: !2105)
!12227 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12222, file: !2210, line: 94, type: !2105)
!12228 = !DILocalVariable(name: "b1", scope: !12222, file: !2210, line: 97, type: !595)
!12229 = !DILocalVariable(name: "b2", scope: !12222, file: !2210, line: 98, type: !595)
!12230 = !DILocation(line: 0, scope: !12222)
!12231 = !DILocation(line: 97, column: 30, scope: !12222)
!12232 = !DILocation(line: 98, column: 30, scope: !12222)
!12233 = !DILocation(line: 100, column: 9, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12222, file: !2210, line: 100, column: 6)
!12235 = !DILocation(line: 100, column: 6, scope: !12222)
!12236 = !DILocation(line: 125, column: 1, scope: !12222)
!12237 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2210, file: !2210, line: 428, type: !12238, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12240)
!12238 = !DISubroutineType(types: !12239)
!12239 = !{null, !2105}
!12240 = !{!12241}
!12241 = !DILocalVariable(name: "curr", arg: 1, scope: !12237, file: !2210, line: 428, type: !2105)
!12242 = !DILocation(line: 0, scope: !12237)
!12243 = !DILocation(line: 434, column: 6, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12237, file: !2210, line: 434, column: 6)
!12245 = !DILocation(line: 434, column: 23, scope: !12244)
!12246 = !DILocation(line: 434, column: 6, scope: !12237)
!12247 = !DILocation(line: 435, column: 50, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12244, file: !2210, line: 434, column: 29)
!12249 = !DILocation(line: 435, column: 48, scope: !12248)
!12250 = !DILocation(line: 435, column: 29, scope: !12248)
!12251 = !DILocation(line: 436, column: 24, scope: !12248)
!12252 = !DILocation(line: 436, column: 3, scope: !12248)
!12253 = !DILocation(line: 437, column: 2, scope: !12248)
!12254 = !DILocation(line: 438, column: 1, scope: !12237)
!12255 = distinct !DISubprogram(name: "slice_time", scope: !2210, file: !2210, line: 407, type: !12256, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12258)
!12256 = !DISubroutineType(types: !12257)
!12257 = !{!103, !2105}
!12258 = !{!12259, !12260}
!12259 = !DILocalVariable(name: "curr", arg: 1, scope: !12255, file: !2210, line: 407, type: !2105)
!12260 = !DILocalVariable(name: "ret", scope: !12255, file: !2210, line: 409, type: !103)
!12261 = !DILocation(line: 0, scope: !12255)
!12262 = !DILocation(line: 409, column: 12, scope: !12255)
!12263 = !DILocation(line: 416, column: 2, scope: !12255)
!12264 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2210, file: !2210, line: 440, type: !12265, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12267)
!12265 = !DISubroutineType(types: !12266)
!12266 = !{null, !595, !103}
!12267 = !{!12268, !12269, !12270, !12276}
!12268 = !DILocalVariable(name: "slice", arg: 1, scope: !12264, file: !2210, line: 440, type: !595)
!12269 = !DILocalVariable(name: "prio", arg: 2, scope: !12264, file: !2210, line: 440, type: !103)
!12270 = !DILocalVariable(name: "__i", scope: !12271, file: !2210, line: 442, type: !12272)
!12271 = distinct !DILexicalBlock(scope: !12264, file: !2210, line: 442, column: 2)
!12272 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !12273)
!12273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !12274)
!12274 = !{!12275}
!12275 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12273, file: !321, line: 33, baseType: !103, size: 32)
!12276 = !DILocalVariable(name: "__key", scope: !12271, file: !2210, line: 442, type: !12272)
!12277 = !DILocation(line: 0, scope: !12264)
!12278 = !DILocation(line: 0, scope: !12271)
!12279 = !DILocalVariable(name: "l", arg: 1, scope: !12280, file: !321, line: 136, type: !12283)
!12280 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !12281, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12284)
!12281 = !DISubroutineType(types: !12282)
!12282 = !{!12272, !12283}
!12283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!12284 = !{!12279, !12285}
!12285 = !DILocalVariable(name: "k", scope: !12280, file: !321, line: 139, type: !12272)
!12286 = !DILocation(line: 0, scope: !12280, inlinedAt: !12287)
!12287 = distinct !DILocation(line: 442, column: 2, scope: !12271)
!12288 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !12293)
!12289 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4847, file: !4847, line: 42, type: !4848, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12290)
!12290 = !{!12291, !12292}
!12291 = !DILocalVariable(name: "key", scope: !12289, file: !4847, line: 44, type: !32)
!12292 = !DILocalVariable(name: "tmp", scope: !12289, file: !4847, line: 53, type: !32)
!12293 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !12287)
!12294 = !{i64 2322177}
!12295 = !DILocation(line: 0, scope: !12289, inlinedAt: !12293)
!12296 = !DILocation(line: 443, column: 29, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12298, file: !2210, line: 442, column: 26)
!12298 = distinct !DILexicalBlock(scope: !12271, file: !2210, line: 442, column: 2)
!12299 = !DILocation(line: 444, column: 17, scope: !12297)
!12300 = !DILocation(line: 445, column: 51, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12297, file: !2210, line: 445, column: 7)
!12302 = !DILocation(line: 445, column: 7, scope: !12297)
!12303 = !DILocation(line: 0, scope: !12297)
!12304 = !DILocation(line: 451, column: 18, scope: !12297)
!12305 = !DILocation(line: 452, column: 3, scope: !12297)
!12306 = !DILocalVariable(name: "key", arg: 2, scope: !12307, file: !321, line: 190, type: !12272)
!12307 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !12308, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12310)
!12308 = !DISubroutineType(types: !12309)
!12309 = !{null, !12283, !12272}
!12310 = !{!12311, !12306}
!12311 = !DILocalVariable(name: "l", arg: 1, scope: !12307, file: !321, line: 189, type: !12283)
!12312 = !DILocation(line: 0, scope: !12307, inlinedAt: !12313)
!12313 = distinct !DILocation(line: 442, column: 2, scope: !12298)
!12314 = !DILocalVariable(name: "key", arg: 1, scope: !12315, file: !4847, line: 84, type: !32)
!12315 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4847, file: !4847, line: 84, type: !4858, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12316)
!12316 = !{!12314}
!12317 = !DILocation(line: 0, scope: !12315, inlinedAt: !12318)
!12318 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !12313)
!12319 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !12318)
!12320 = !{i64 2322994}
!12321 = !DILocation(line: 454, column: 1, scope: !12264)
!12322 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12113, file: !12113, line: 389, type: !6029, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12323)
!12323 = !{!12324}
!12324 = !DILocalVariable(name: "t", arg: 1, scope: !12322, file: !12113, line: 389, type: !121)
!12325 = !DILocation(line: 0, scope: !12322)
!12326 = !DILocalVariable(name: "t", arg: 1, scope: !12327, file: !12113, line: 102, type: !1308)
!12327 = distinct !DISubprogram(name: "z_tmcvt", scope: !12113, file: !12113, line: 102, type: !12121, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12328)
!12328 = !{!12326, !12329, !12330, !12331, !12332, !12333, !12334, !12335, !12336, !12337, !12338}
!12329 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12327, file: !12113, line: 102, type: !121)
!12330 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12327, file: !12113, line: 103, type: !121)
!12331 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12327, file: !12113, line: 103, type: !157)
!12332 = !DILocalVariable(name: "result32", arg: 5, scope: !12327, file: !12113, line: 104, type: !157)
!12333 = !DILocalVariable(name: "round_up", arg: 6, scope: !12327, file: !12113, line: 104, type: !157)
!12334 = !DILocalVariable(name: "round_off", arg: 7, scope: !12327, file: !12113, line: 105, type: !157)
!12335 = !DILocalVariable(name: "mul_ratio", scope: !12327, file: !12113, line: 107, type: !157)
!12336 = !DILocalVariable(name: "div_ratio", scope: !12327, file: !12113, line: 109, type: !157)
!12337 = !DILocalVariable(name: "off", scope: !12327, file: !12113, line: 116, type: !1308)
!12338 = !DILocalVariable(name: "rdivisor", scope: !12339, file: !12113, line: 119, type: !121)
!12339 = distinct !DILexicalBlock(scope: !12340, file: !12113, line: 118, column: 18)
!12340 = distinct !DILexicalBlock(scope: !12327, file: !12113, line: 118, column: 6)
!12341 = !DILocation(line: 0, scope: !12327, inlinedAt: !12342)
!12342 = distinct !DILocation(line: 392, column: 9, scope: !12322)
!12343 = !DILocation(line: 143, column: 25, scope: !12344, inlinedAt: !12342)
!12344 = distinct !DILexicalBlock(scope: !12345, file: !12113, line: 142, column: 17)
!12345 = distinct !DILexicalBlock(scope: !12346, file: !12113, line: 142, column: 7)
!12346 = distinct !DILexicalBlock(scope: !12347, file: !12113, line: 141, column: 24)
!12347 = distinct !DILexicalBlock(scope: !12348, file: !12113, line: 141, column: 13)
!12348 = distinct !DILexicalBlock(scope: !12327, file: !12113, line: 134, column: 6)
!12349 = !DILocation(line: 392, column: 2, scope: !12322)
!12350 = distinct !DISubprogram(name: "z_time_slice", scope: !2210, file: !2210, line: 502, type: !6666, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12351)
!12351 = !{!12352, !12353}
!12352 = !DILocalVariable(name: "ticks", arg: 1, scope: !12350, file: !2210, line: 502, type: !103)
!12353 = !DILocalVariable(name: "key", scope: !12350, file: !2210, line: 511, type: !12272)
!12354 = !DILocation(line: 0, scope: !12350)
!12355 = !DILocation(line: 0, scope: !12280, inlinedAt: !12356)
!12356 = distinct !DILocation(line: 511, column: 25, scope: !12350)
!12357 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !12358)
!12358 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !12356)
!12359 = !DILocation(line: 0, scope: !12289, inlinedAt: !12358)
!12360 = !DILocation(line: 514, column: 6, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12350, file: !2210, line: 514, column: 6)
!12362 = !DILocation(line: 514, column: 25, scope: !12361)
!12363 = !DILocation(line: 514, column: 22, scope: !12361)
!12364 = !DILocation(line: 514, column: 6, scope: !12350)
!12365 = !DILocation(line: 515, column: 3, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12361, file: !2210, line: 514, column: 35)
!12367 = !DILocation(line: 0, scope: !12307, inlinedAt: !12368)
!12368 = distinct !DILocation(line: 516, column: 3, scope: !12366)
!12369 = !DILocation(line: 0, scope: !12315, inlinedAt: !12370)
!12370 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !12368)
!12371 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !12370)
!12372 = !DILocation(line: 517, column: 3, scope: !12366)
!12373 = !DILocation(line: 519, column: 18, scope: !12350)
!12374 = !DILocation(line: 522, column: 6, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12350, file: !2210, line: 522, column: 6)
!12376 = !DILocation(line: 522, column: 27, scope: !12375)
!12377 = !DILocation(line: 522, column: 30, scope: !12375)
!12378 = !DILocation(line: 522, column: 6, scope: !12350)
!12379 = !DILocation(line: 523, column: 30, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12381, file: !2210, line: 523, column: 7)
!12381 = distinct !DILexicalBlock(scope: !12375, file: !2210, line: 522, column: 51)
!12382 = !DILocation(line: 523, column: 13, scope: !12380)
!12383 = !DILocation(line: 523, column: 7, scope: !12381)
!12384 = !DILocation(line: 530, column: 10, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12380, file: !2210, line: 523, column: 43)
!12386 = !DILocation(line: 531, column: 3, scope: !12385)
!12387 = !DILocation(line: 532, column: 30, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12380, file: !2210, line: 531, column: 10)
!12389 = !DILocation(line: 535, column: 29, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12375, file: !2210, line: 534, column: 9)
!12391 = !DILocation(line: 0, scope: !12307, inlinedAt: !12392)
!12392 = distinct !DILocation(line: 537, column: 2, scope: !12350)
!12393 = !DILocation(line: 0, scope: !12315, inlinedAt: !12394)
!12394 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !12392)
!12395 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !12394)
!12396 = !DILocation(line: 538, column: 1, scope: !12350)
!12397 = distinct !DISubprogram(name: "sliceable", scope: !2210, file: !2210, line: 468, type: !12398, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12400)
!12398 = !DISubroutineType(types: !12399)
!12399 = !{!157, !2105}
!12400 = !{!12401, !12402}
!12401 = !DILocalVariable(name: "thread", arg: 1, scope: !12397, file: !2210, line: 468, type: !2105)
!12402 = !DILocalVariable(name: "ret", scope: !12397, file: !2210, line: 470, type: !157)
!12403 = !DILocation(line: 0, scope: !12397)
!12404 = !DILocation(line: 470, column: 13, scope: !12397)
!12405 = !DILocation(line: 471, column: 3, scope: !12397)
!12406 = !DILocation(line: 471, column: 7, scope: !12397)
!12407 = !DILocation(line: 472, column: 3, scope: !12397)
!12408 = !DILocation(line: 472, column: 37, scope: !12397)
!12409 = !DILocation(line: 472, column: 24, scope: !12397)
!12410 = !DILocation(line: 472, column: 43, scope: !12397)
!12411 = !DILocation(line: 472, column: 7, scope: !12397)
!12412 = !DILocation(line: 473, column: 3, scope: !12397)
!12413 = !DILocation(line: 473, column: 7, scope: !12397)
!12414 = !DILocation(line: 473, column: 6, scope: !12397)
!12415 = !DILocation(line: 479, column: 2, scope: !12397)
!12416 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2210, file: !2210, line: 482, type: !12417, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12419)
!12417 = !DISubroutineType(types: !12418)
!12418 = !{!12272, !12272}
!12419 = !{!12420, !12421}
!12420 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12416, file: !2210, line: 482, type: !12272)
!12421 = !DILocalVariable(name: "curr", scope: !12416, file: !2210, line: 484, type: !2105)
!12422 = !DILocation(line: 0, scope: !12416)
!12423 = !DILocation(line: 484, column: 26, scope: !12416)
!12424 = !DILocation(line: 493, column: 7, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12416, file: !2210, line: 493, column: 6)
!12426 = !DILocation(line: 493, column: 6, scope: !12416)
!12427 = !DILocation(line: 494, column: 3, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12425, file: !2210, line: 493, column: 49)
!12429 = !DILocation(line: 495, column: 2, scope: !12428)
!12430 = !DILocation(line: 496, column: 2, scope: !12416)
!12431 = !DILocation(line: 499, column: 1, scope: !12416)
!12432 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11552, file: !11552, line: 106, type: !12398, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12433)
!12433 = !{!12434, !12435}
!12434 = !DILocalVariable(name: "thread", arg: 1, scope: !12432, file: !11552, line: 106, type: !2105)
!12435 = !DILocalVariable(name: "state", scope: !12432, file: !11552, line: 108, type: !154)
!12436 = !DILocation(line: 0, scope: !12432)
!12437 = !DILocation(line: 108, column: 31, scope: !12432)
!12438 = !DILocation(line: 110, column: 16, scope: !12432)
!12439 = !DILocation(line: 111, column: 41, scope: !12432)
!12440 = !DILocation(line: 110, column: 2, scope: !12432)
!12441 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2210, file: !2210, line: 393, type: !12238, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12442)
!12442 = !{!12443}
!12443 = !DILocalVariable(name: "thread", arg: 1, scope: !12441, file: !2210, line: 393, type: !2105)
!12444 = !DILocation(line: 0, scope: !12441)
!12445 = !DILocation(line: 395, column: 6, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12441, file: !2210, line: 395, column: 6)
!12447 = !DILocation(line: 395, column: 6, scope: !12441)
!12448 = !DILocalVariable(name: "thread", arg: 1, scope: !12449, file: !2210, line: 264, type: !2105)
!12449 = distinct !DISubprogram(name: "dequeue_thread", scope: !2210, file: !2210, line: 264, type: !12238, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12450)
!12450 = !{!12448}
!12451 = !DILocation(line: 0, scope: !12449, inlinedAt: !12452)
!12452 = distinct !DILocation(line: 396, column: 3, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12446, file: !2210, line: 395, column: 34)
!12454 = !DILocation(line: 266, column: 15, scope: !12449, inlinedAt: !12452)
!12455 = !DILocation(line: 266, column: 28, scope: !12449, inlinedAt: !12452)
!12456 = !DILocalVariable(name: "thread", arg: 1, scope: !12457, file: !2210, line: 232, type: !2105)
!12457 = distinct !DISubprogram(name: "runq_remove", scope: !2210, file: !2210, line: 232, type: !12238, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12458)
!12458 = !{!12456}
!12459 = !DILocation(line: 0, scope: !12457, inlinedAt: !12460)
!12460 = distinct !DILocation(line: 268, column: 3, scope: !12461, inlinedAt: !12452)
!12461 = distinct !DILexicalBlock(scope: !12462, file: !2210, line: 267, column: 35)
!12462 = distinct !DILexicalBlock(scope: !12449, file: !2210, line: 267, column: 6)
!12463 = !DILocation(line: 234, column: 2, scope: !12457, inlinedAt: !12460)
!12464 = !DILocation(line: 397, column: 2, scope: !12453)
!12465 = !DILocalVariable(name: "thread", arg: 1, scope: !12466, file: !2210, line: 250, type: !2105)
!12466 = distinct !DISubprogram(name: "queue_thread", scope: !2210, file: !2210, line: 250, type: !12238, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12467)
!12467 = !{!12465}
!12468 = !DILocation(line: 0, scope: !12466, inlinedAt: !12469)
!12469 = distinct !DILocation(line: 398, column: 2, scope: !12441)
!12470 = !DILocation(line: 252, column: 15, scope: !12466, inlinedAt: !12469)
!12471 = !DILocation(line: 252, column: 28, scope: !12466, inlinedAt: !12469)
!12472 = !DILocalVariable(name: "thread", arg: 1, scope: !12473, file: !2210, line: 227, type: !2105)
!12473 = distinct !DISubprogram(name: "runq_add", scope: !2210, file: !2210, line: 227, type: !12238, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12474)
!12474 = !{!12472}
!12475 = !DILocation(line: 0, scope: !12473, inlinedAt: !12476)
!12476 = distinct !DILocation(line: 254, column: 3, scope: !12477, inlinedAt: !12469)
!12477 = distinct !DILexicalBlock(scope: !12478, file: !2210, line: 253, column: 35)
!12478 = distinct !DILexicalBlock(scope: !12466, file: !2210, line: 253, column: 6)
!12479 = !DILocalVariable(name: "pq", arg: 1, scope: !12480, file: !2210, line: 181, type: !12483)
!12480 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2210, file: !2210, line: 181, type: !12481, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12484)
!12481 = !DISubroutineType(types: !12482)
!12482 = !{null, !12483, !2105}
!12483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!12484 = !{!12479, !12485, !12486}
!12485 = !DILocalVariable(name: "thread", arg: 2, scope: !12480, file: !2210, line: 182, type: !2105)
!12486 = !DILocalVariable(name: "t", scope: !12480, file: !2210, line: 184, type: !2105)
!12487 = !DILocation(line: 0, scope: !12480, inlinedAt: !12488)
!12488 = distinct !DILocation(line: 229, column: 2, scope: !12473, inlinedAt: !12476)
!12489 = !DILocation(line: 188, column: 2, scope: !12490, inlinedAt: !12488)
!12490 = distinct !DILexicalBlock(scope: !12480, file: !2210, line: 188, column: 2)
!12491 = !DILocation(line: 188, column: 2, scope: !12492, inlinedAt: !12488)
!12492 = distinct !DILexicalBlock(scope: !12490, file: !2210, line: 188, column: 2)
!12493 = !DILocation(line: 0, scope: !12490, inlinedAt: !12488)
!12494 = !DILocation(line: 189, column: 7, scope: !12495, inlinedAt: !12488)
!12495 = distinct !DILexicalBlock(scope: !12496, file: !2210, line: 189, column: 7)
!12496 = distinct !DILexicalBlock(scope: !12492, file: !2210, line: 188, column: 56)
!12497 = !DILocation(line: 189, column: 35, scope: !12495, inlinedAt: !12488)
!12498 = !DILocation(line: 189, column: 7, scope: !12496, inlinedAt: !12488)
!12499 = !DILocation(line: 191, column: 21, scope: !12500, inlinedAt: !12488)
!12500 = distinct !DILexicalBlock(scope: !12495, file: !2210, line: 189, column: 40)
!12501 = !DILocation(line: 190, column: 4, scope: !12500, inlinedAt: !12488)
!12502 = !DILocation(line: 192, column: 4, scope: !12500, inlinedAt: !12488)
!12503 = distinct !{!12503, !12489, !12504}
!12504 = !DILocation(line: 194, column: 2, scope: !12490, inlinedAt: !12488)
!12505 = !DILocation(line: 196, column: 37, scope: !12480, inlinedAt: !12488)
!12506 = !DILocation(line: 196, column: 2, scope: !12480, inlinedAt: !12488)
!12507 = !DILocation(line: 197, column: 1, scope: !12480, inlinedAt: !12488)
!12508 = !DILocation(line: 399, column: 25, scope: !12441)
!12509 = !DILocation(line: 399, column: 22, scope: !12441)
!12510 = !DILocation(line: 399, column: 2, scope: !12441)
!12511 = !DILocation(line: 400, column: 1, scope: !12441)
!12512 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11552, file: !11552, line: 136, type: !12398, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12513)
!12513 = !{!12514}
!12514 = !DILocalVariable(name: "thread", arg: 1, scope: !12512, file: !11552, line: 136, type: !2105)
!12515 = !DILocation(line: 0, scope: !12512)
!12516 = !DILocation(line: 138, column: 9, scope: !12512)
!12517 = !DILocation(line: 138, column: 2, scope: !12512)
!12518 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2210, file: !2210, line: 1137, type: !12481, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12519)
!12519 = !{!12520, !12521}
!12520 = !DILocalVariable(name: "pq", arg: 1, scope: !12518, file: !2210, line: 1137, type: !12483)
!12521 = !DILocalVariable(name: "thread", arg: 2, scope: !12518, file: !2210, line: 1137, type: !2105)
!12522 = !DILocation(line: 0, scope: !12518)
!12523 = !DILocation(line: 1141, column: 33, scope: !12518)
!12524 = !DILocation(line: 1141, column: 2, scope: !12518)
!12525 = !DILocation(line: 1142, column: 1, scope: !12518)
!12526 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !12527, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12529)
!12527 = !DISubroutineType(types: !12528)
!12528 = !{!2206, !12483}
!12529 = !{!12530}
!12530 = !DILocalVariable(name: "list", arg: 1, scope: !12526, file: !221, line: 294, type: !12483)
!12531 = !DILocation(line: 0, scope: !12526)
!12532 = !DILocation(line: 296, column: 9, scope: !12526)
!12533 = !DILocation(line: 296, column: 49, scope: !12526)
!12534 = !DILocation(line: 296, column: 2, scope: !12526)
!12535 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !12536, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12538)
!12536 = !DISubroutineType(types: !12537)
!12537 = !{null, !2206, !2206}
!12538 = !{!12539, !12540, !12541}
!12539 = !DILocalVariable(name: "successor", arg: 1, scope: !12535, file: !221, line: 443, type: !2206)
!12540 = !DILocalVariable(name: "node", arg: 2, scope: !12535, file: !221, line: 443, type: !2206)
!12541 = !DILocalVariable(name: "prev", scope: !12535, file: !221, line: 445, type: !12542)
!12542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2206)
!12543 = !DILocation(line: 0, scope: !12535)
!12544 = !DILocation(line: 445, column: 39, scope: !12535)
!12545 = !DILocation(line: 447, column: 8, scope: !12535)
!12546 = !DILocation(line: 447, column: 13, scope: !12535)
!12547 = !DILocation(line: 448, column: 8, scope: !12535)
!12548 = !DILocation(line: 448, column: 13, scope: !12535)
!12549 = !DILocation(line: 449, column: 8, scope: !12535)
!12550 = !DILocation(line: 449, column: 13, scope: !12535)
!12551 = !DILocation(line: 450, column: 18, scope: !12535)
!12552 = !DILocation(line: 451, column: 1, scope: !12535)
!12553 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !12554, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12556)
!12554 = !DISubroutineType(types: !12555)
!12555 = !{!2206, !12483, !2206}
!12556 = !{!12557, !12558}
!12557 = !DILocalVariable(name: "list", arg: 1, scope: !12553, file: !221, line: 341, type: !12483)
!12558 = !DILocalVariable(name: "node", arg: 2, scope: !12553, file: !221, line: 342, type: !2206)
!12559 = !DILocation(line: 0, scope: !12553)
!12560 = !DILocation(line: 344, column: 15, scope: !12553)
!12561 = !DILocation(line: 344, column: 9, scope: !12553)
!12562 = !DILocation(line: 344, column: 26, scope: !12553)
!12563 = !DILocation(line: 344, column: 2, scope: !12553)
!12564 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !12565, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12567)
!12565 = !DISubroutineType(types: !12566)
!12566 = !{null, !12483, !2206}
!12567 = !{!12568, !12569, !12570}
!12568 = !DILocalVariable(name: "list", arg: 1, scope: !12564, file: !221, line: 404, type: !12483)
!12569 = !DILocalVariable(name: "node", arg: 2, scope: !12564, file: !221, line: 404, type: !2206)
!12570 = !DILocalVariable(name: "tail", scope: !12564, file: !221, line: 406, type: !12542)
!12571 = !DILocation(line: 0, scope: !12564)
!12572 = !DILocation(line: 406, column: 34, scope: !12564)
!12573 = !DILocation(line: 408, column: 8, scope: !12564)
!12574 = !DILocation(line: 408, column: 13, scope: !12564)
!12575 = !DILocation(line: 409, column: 8, scope: !12564)
!12576 = !DILocation(line: 409, column: 13, scope: !12564)
!12577 = !DILocation(line: 411, column: 8, scope: !12564)
!12578 = !DILocation(line: 411, column: 13, scope: !12564)
!12579 = !DILocation(line: 412, column: 13, scope: !12564)
!12580 = !DILocation(line: 413, column: 1, scope: !12564)
!12581 = distinct !DISubprogram(name: "update_cache", scope: !2210, file: !2210, line: 559, type: !6666, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12582)
!12582 = !{!12583, !12584}
!12583 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12581, file: !2210, line: 559, type: !103)
!12584 = !DILocalVariable(name: "thread", scope: !12581, file: !2210, line: 562, type: !2105)
!12585 = !DILocation(line: 0, scope: !12581)
!12586 = !DILocation(line: 239, column: 9, scope: !12587, inlinedAt: !12590)
!12587 = distinct !DISubprogram(name: "runq_best", scope: !2210, file: !2210, line: 237, type: !12588, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!12588 = !DISubroutineType(types: !12589)
!12589 = !{!2105}
!12590 = distinct !DILocation(line: 314, column: 28, scope: !12591, inlinedAt: !12594)
!12591 = distinct !DISubprogram(name: "next_up", scope: !2210, file: !2210, line: 312, type: !12588, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12592)
!12592 = !{!12593}
!12593 = !DILocalVariable(name: "thread", scope: !12591, file: !2210, line: 314, type: !2105)
!12594 = distinct !DILocation(line: 562, column: 28, scope: !12581)
!12595 = !DILocation(line: 0, scope: !12591, inlinedAt: !12594)
!12596 = !DILocation(line: 340, column: 17, scope: !12591, inlinedAt: !12594)
!12597 = !DILocation(line: 340, column: 9, scope: !12591, inlinedAt: !12594)
!12598 = !DILocalVariable(name: "thread", arg: 1, scope: !12599, file: !2210, line: 127, type: !2105)
!12599 = distinct !DISubprogram(name: "should_preempt", scope: !2210, file: !2210, line: 127, type: !12600, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12602)
!12600 = !DISubroutineType(types: !12601)
!12601 = !{!157, !2105, !103}
!12602 = !{!12598, !12603}
!12603 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12599, file: !2210, line: 128, type: !103)
!12604 = !DILocation(line: 0, scope: !12599, inlinedAt: !12605)
!12605 = distinct !DILocation(line: 564, column: 6, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12581, file: !2210, line: 564, column: 6)
!12607 = !DILocation(line: 133, column: 17, scope: !12608, inlinedAt: !12605)
!12608 = distinct !DILexicalBlock(scope: !12599, file: !2210, line: 133, column: 6)
!12609 = !DILocation(line: 0, scope: !12606)
!12610 = !DILocation(line: 133, column: 6, scope: !12599, inlinedAt: !12605)
!12611 = !DILocation(line: 140, column: 6, scope: !12612, inlinedAt: !12605)
!12612 = distinct !DILexicalBlock(scope: !12599, file: !2210, line: 140, column: 6)
!12613 = !DILocation(line: 140, column: 6, scope: !12599, inlinedAt: !12605)
!12614 = !DILocation(line: 150, column: 9, scope: !12615, inlinedAt: !12605)
!12615 = distinct !DILexicalBlock(scope: !12599, file: !2210, line: 149, column: 6)
!12616 = !DILocation(line: 149, column: 6, scope: !12599, inlinedAt: !12605)
!12617 = !DILocation(line: 157, column: 6, scope: !12618, inlinedAt: !12605)
!12618 = distinct !DILexicalBlock(scope: !12599, file: !2210, line: 157, column: 6)
!12619 = !DILocation(line: 564, column: 6, scope: !12581)
!12620 = !DILocation(line: 566, column: 14, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12622, file: !2210, line: 566, column: 7)
!12622 = distinct !DILexicalBlock(scope: !12606, file: !2210, line: 564, column: 42)
!12623 = !DILocation(line: 566, column: 7, scope: !12622)
!12624 = !DILocation(line: 567, column: 4, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12621, file: !2210, line: 566, column: 27)
!12626 = !DILocation(line: 568, column: 3, scope: !12625)
!12627 = !DILocation(line: 585, column: 1, scope: !12581)
!12628 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2210, file: !2210, line: 1144, type: !12629, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12631)
!12629 = !DISubroutineType(types: !12630)
!12630 = !{!2105, !12483}
!12631 = !{!12632, !12633, !12634}
!12632 = !DILocalVariable(name: "pq", arg: 1, scope: !12628, file: !2210, line: 1144, type: !12483)
!12633 = !DILocalVariable(name: "thread", scope: !12628, file: !2210, line: 1146, type: !2105)
!12634 = !DILocalVariable(name: "n", scope: !12628, file: !2210, line: 1147, type: !2206)
!12635 = !DILocation(line: 0, scope: !12628)
!12636 = !DILocation(line: 1147, column: 19, scope: !12628)
!12637 = !DILocation(line: 1152, column: 2, scope: !12628)
!12638 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11552, file: !11552, line: 115, type: !12398, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12639)
!12639 = !{!12640}
!12640 = !DILocalVariable(name: "thread", arg: 1, scope: !12638, file: !11552, line: 115, type: !2105)
!12641 = !DILocation(line: 0, scope: !12638)
!12642 = !DILocation(line: 117, column: 46, scope: !12638)
!12643 = !DILocation(line: 117, column: 10, scope: !12638)
!12644 = !DILocation(line: 117, column: 9, scope: !12638)
!12645 = !DILocation(line: 117, column: 2, scope: !12638)
!12646 = distinct !DISubprogram(name: "is_preempt", scope: !2210, file: !2210, line: 62, type: !12256, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12647)
!12647 = !{!12648}
!12648 = !DILocalVariable(name: "thread", arg: 1, scope: !12646, file: !2210, line: 62, type: !2105)
!12649 = !DILocation(line: 0, scope: !12646)
!12650 = !DILocation(line: 65, column: 22, scope: !12646)
!12651 = !DILocation(line: 65, column: 30, scope: !12646)
!12652 = !DILocation(line: 65, column: 2, scope: !12646)
!12653 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11946, file: !11946, line: 35, type: !12654, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12658)
!12654 = !DISubroutineType(types: !12655)
!12655 = !{!157, !12656}
!12656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12657, size: 32)
!12657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2156)
!12658 = !{!12659}
!12659 = !DILocalVariable(name: "to", arg: 1, scope: !12653, file: !11946, line: 35, type: !12656)
!12660 = !DILocation(line: 0, scope: !12653)
!12661 = !DILocation(line: 37, column: 35, scope: !12653)
!12662 = !DILocation(line: 37, column: 10, scope: !12653)
!12663 = !DILocation(line: 37, column: 9, scope: !12653)
!12664 = !DILocation(line: 37, column: 2, scope: !12653)
!12665 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !12666, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12670)
!12666 = !DISubroutineType(types: !12667)
!12667 = !{!157, !12668}
!12668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12669, size: 32)
!12669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2115)
!12670 = !{!12671}
!12671 = !DILocalVariable(name: "node", arg: 1, scope: !12665, file: !221, line: 225, type: !12668)
!12672 = !DILocation(line: 0, scope: !12665)
!12673 = !DILocation(line: 227, column: 15, scope: !12665)
!12674 = !DILocation(line: 227, column: 20, scope: !12665)
!12675 = !DILocation(line: 227, column: 2, scope: !12665)
!12676 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !12554, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12677)
!12677 = !{!12678, !12679}
!12678 = !DILocalVariable(name: "list", arg: 1, scope: !12676, file: !221, line: 325, type: !12483)
!12679 = !DILocalVariable(name: "node", arg: 2, scope: !12676, file: !221, line: 326, type: !2206)
!12680 = !DILocation(line: 0, scope: !12676)
!12681 = !DILocation(line: 328, column: 24, scope: !12676)
!12682 = !DILocation(line: 328, column: 15, scope: !12676)
!12683 = !DILocation(line: 328, column: 9, scope: !12676)
!12684 = !DILocation(line: 328, column: 45, scope: !12676)
!12685 = !DILocation(line: 328, column: 2, scope: !12676)
!12686 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !12687, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12689)
!12687 = !DISubroutineType(types: !12688)
!12688 = !{!157, !12483}
!12689 = !{!12690}
!12690 = !DILocalVariable(name: "list", arg: 1, scope: !12686, file: !221, line: 266, type: !12483)
!12691 = !DILocation(line: 0, scope: !12686)
!12692 = !DILocation(line: 268, column: 15, scope: !12686)
!12693 = !DILocation(line: 268, column: 20, scope: !12686)
!12694 = !DILocation(line: 268, column: 2, scope: !12686)
!12695 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !12696, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12698)
!12696 = !DISubroutineType(types: !12697)
!12697 = !{null, !2206}
!12698 = !{!12699, !12700, !12701}
!12699 = !DILocalVariable(name: "node", arg: 1, scope: !12695, file: !221, line: 496, type: !2206)
!12700 = !DILocalVariable(name: "prev", scope: !12695, file: !221, line: 498, type: !12542)
!12701 = !DILocalVariable(name: "next", scope: !12695, file: !221, line: 499, type: !12542)
!12702 = !DILocation(line: 0, scope: !12695)
!12703 = !DILocation(line: 498, column: 34, scope: !12695)
!12704 = !DILocation(line: 499, column: 34, scope: !12695)
!12705 = !DILocation(line: 501, column: 8, scope: !12695)
!12706 = !DILocation(line: 501, column: 13, scope: !12695)
!12707 = !DILocation(line: 502, column: 8, scope: !12695)
!12708 = !DILocation(line: 502, column: 13, scope: !12695)
!12709 = !DILocation(line: 503, column: 2, scope: !12695)
!12710 = !DILocation(line: 504, column: 1, scope: !12695)
!12711 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !12696, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12712)
!12712 = !{!12713}
!12713 = !DILocalVariable(name: "node", arg: 1, scope: !12711, file: !221, line: 211, type: !2206)
!12714 = !DILocation(line: 0, scope: !12711)
!12715 = !DILocation(line: 213, column: 8, scope: !12711)
!12716 = !DILocation(line: 213, column: 13, scope: !12711)
!12717 = !DILocation(line: 214, column: 8, scope: !12711)
!12718 = !DILocation(line: 214, column: 13, scope: !12711)
!12719 = !DILocation(line: 215, column: 1, scope: !12711)
!12720 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11552, file: !11552, line: 131, type: !12721, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12723)
!12721 = !DISubroutineType(types: !12722)
!12722 = !{!157, !2105, !121}
!12723 = !{!12724, !12725}
!12724 = !DILocalVariable(name: "thread", arg: 1, scope: !12720, file: !11552, line: 131, type: !2105)
!12725 = !DILocalVariable(name: "state", arg: 2, scope: !12720, file: !11552, line: 131, type: !121)
!12726 = !DILocation(line: 0, scope: !12720)
!12727 = !DILocation(line: 133, column: 23, scope: !12720)
!12728 = !DILocation(line: 133, column: 45, scope: !12720)
!12729 = !DILocation(line: 133, column: 2, scope: !12720)
!12730 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11552, file: !11552, line: 211, type: !12731, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12733)
!12731 = !DISubroutineType(types: !12732)
!12732 = !{!157, !103, !103}
!12733 = !{!12734, !12735}
!12734 = !DILocalVariable(name: "prio", arg: 1, scope: !12730, file: !11552, line: 211, type: !103)
!12735 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12730, file: !11552, line: 211, type: !103)
!12736 = !DILocation(line: 0, scope: !12730)
!12737 = !DILocation(line: 213, column: 9, scope: !12730)
!12738 = !DILocation(line: 213, column: 2, scope: !12730)
!12739 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11552, file: !11552, line: 83, type: !12398, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12740)
!12740 = !{!12741}
!12741 = !DILocalVariable(name: "thread", arg: 1, scope: !12739, file: !11552, line: 83, type: !2105)
!12742 = !DILocation(line: 0, scope: !12739)
!12743 = !DILocation(line: 89, column: 16, scope: !12739)
!12744 = !DILocation(line: 89, column: 2, scope: !12739)
!12745 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11552, file: !11552, line: 206, type: !12731, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12746)
!12746 = !{!12747, !12748}
!12747 = !DILocalVariable(name: "prio1", arg: 1, scope: !12745, file: !11552, line: 206, type: !103)
!12748 = !DILocalVariable(name: "prio2", arg: 2, scope: !12745, file: !11552, line: 206, type: !103)
!12749 = !DILocation(line: 0, scope: !12745)
!12750 = !DILocation(line: 208, column: 15, scope: !12745)
!12751 = !DILocation(line: 208, column: 2, scope: !12745)
!12752 = distinct !DISubprogram(name: "z_ready_thread", scope: !2210, file: !2210, line: 635, type: !12238, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12753)
!12753 = !{!12754, !12755, !12757}
!12754 = !DILocalVariable(name: "thread", arg: 1, scope: !12752, file: !2210, line: 635, type: !2105)
!12755 = !DILocalVariable(name: "__i", scope: !12756, file: !2210, line: 637, type: !12272)
!12756 = distinct !DILexicalBlock(scope: !12752, file: !2210, line: 637, column: 2)
!12757 = !DILocalVariable(name: "__key", scope: !12756, file: !2210, line: 637, type: !12272)
!12758 = !DILocation(line: 0, scope: !12752)
!12759 = !DILocation(line: 0, scope: !12756)
!12760 = !DILocation(line: 0, scope: !12280, inlinedAt: !12761)
!12761 = distinct !DILocation(line: 637, column: 2, scope: !12756)
!12762 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !12763)
!12763 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !12761)
!12764 = !DILocation(line: 0, scope: !12289, inlinedAt: !12763)
!12765 = !DILocation(line: 639, column: 4, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12767, file: !2210, line: 638, column: 41)
!12767 = distinct !DILexicalBlock(scope: !12768, file: !2210, line: 638, column: 7)
!12768 = distinct !DILexicalBlock(scope: !12769, file: !2210, line: 637, column: 26)
!12769 = distinct !DILexicalBlock(scope: !12756, file: !2210, line: 637, column: 2)
!12770 = !DILocation(line: 0, scope: !12307, inlinedAt: !12771)
!12771 = distinct !DILocation(line: 637, column: 2, scope: !12769)
!12772 = !DILocation(line: 0, scope: !12315, inlinedAt: !12773)
!12773 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !12771)
!12774 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !12773)
!12775 = !DILocation(line: 642, column: 1, scope: !12752)
!12776 = distinct !DISubprogram(name: "ready_thread", scope: !2210, file: !2210, line: 617, type: !12238, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12777)
!12777 = !{!12778}
!12778 = !DILocalVariable(name: "thread", arg: 1, scope: !12776, file: !2210, line: 617, type: !2105)
!12779 = !DILocation(line: 0, scope: !12776)
!12780 = !DILocation(line: 626, column: 7, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12776, file: !2210, line: 626, column: 6)
!12782 = !DILocation(line: 626, column: 34, scope: !12781)
!12783 = !DILocation(line: 626, column: 37, scope: !12781)
!12784 = !DILocation(line: 626, column: 6, scope: !12776)
!12785 = !DILocation(line: 0, scope: !12466, inlinedAt: !12786)
!12786 = distinct !DILocation(line: 629, column: 3, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12781, file: !2210, line: 626, column: 64)
!12788 = !DILocation(line: 252, column: 15, scope: !12466, inlinedAt: !12786)
!12789 = !DILocation(line: 252, column: 28, scope: !12466, inlinedAt: !12786)
!12790 = !DILocation(line: 0, scope: !12473, inlinedAt: !12791)
!12791 = distinct !DILocation(line: 254, column: 3, scope: !12477, inlinedAt: !12786)
!12792 = !DILocation(line: 0, scope: !12480, inlinedAt: !12793)
!12793 = distinct !DILocation(line: 229, column: 2, scope: !12473, inlinedAt: !12791)
!12794 = !DILocation(line: 188, column: 2, scope: !12490, inlinedAt: !12793)
!12795 = !DILocation(line: 188, column: 2, scope: !12492, inlinedAt: !12793)
!12796 = !DILocation(line: 0, scope: !12490, inlinedAt: !12793)
!12797 = !DILocation(line: 189, column: 7, scope: !12495, inlinedAt: !12793)
!12798 = !DILocation(line: 189, column: 35, scope: !12495, inlinedAt: !12793)
!12799 = !DILocation(line: 189, column: 7, scope: !12496, inlinedAt: !12793)
!12800 = !DILocation(line: 191, column: 21, scope: !12500, inlinedAt: !12793)
!12801 = !DILocation(line: 190, column: 4, scope: !12500, inlinedAt: !12793)
!12802 = !DILocation(line: 192, column: 4, scope: !12500, inlinedAt: !12793)
!12803 = distinct !{!12803, !12794, !12804}
!12804 = !DILocation(line: 194, column: 2, scope: !12490, inlinedAt: !12793)
!12805 = !DILocation(line: 196, column: 37, scope: !12480, inlinedAt: !12793)
!12806 = !DILocation(line: 196, column: 2, scope: !12480, inlinedAt: !12793)
!12807 = !DILocation(line: 197, column: 1, scope: !12480, inlinedAt: !12793)
!12808 = !DILocation(line: 630, column: 3, scope: !12787)
!12809 = !DILocation(line: 632, column: 2, scope: !12787)
!12810 = !DILocation(line: 633, column: 1, scope: !12776)
!12811 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11552, file: !11552, line: 120, type: !12398, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12812)
!12812 = !{!12813}
!12813 = !DILocalVariable(name: "thread", arg: 1, scope: !12811, file: !11552, line: 120, type: !2105)
!12814 = !DILocation(line: 0, scope: !12811)
!12815 = !DILocation(line: 122, column: 12, scope: !12811)
!12816 = !DILocation(line: 122, column: 62, scope: !12811)
!12817 = !DILocation(line: 123, column: 4, scope: !12811)
!12818 = !DILocation(line: 122, column: 2, scope: !12811)
!12819 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2210, file: !2210, line: 644, type: !12238, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12820)
!12820 = !{!12821, !12822, !12824}
!12821 = !DILocalVariable(name: "thread", arg: 1, scope: !12819, file: !2210, line: 644, type: !2105)
!12822 = !DILocalVariable(name: "__i", scope: !12823, file: !2210, line: 646, type: !12272)
!12823 = distinct !DILexicalBlock(scope: !12819, file: !2210, line: 646, column: 2)
!12824 = !DILocalVariable(name: "__key", scope: !12823, file: !2210, line: 646, type: !12272)
!12825 = !DILocation(line: 0, scope: !12819)
!12826 = !DILocation(line: 0, scope: !12823)
!12827 = !DILocation(line: 0, scope: !12280, inlinedAt: !12828)
!12828 = distinct !DILocation(line: 646, column: 2, scope: !12823)
!12829 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !12830)
!12830 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !12828)
!12831 = !DILocation(line: 0, scope: !12289, inlinedAt: !12830)
!12832 = !DILocation(line: 647, column: 3, scope: !12833)
!12833 = distinct !DILexicalBlock(scope: !12834, file: !2210, line: 646, column: 26)
!12834 = distinct !DILexicalBlock(scope: !12823, file: !2210, line: 646, column: 2)
!12835 = !DILocation(line: 0, scope: !12307, inlinedAt: !12836)
!12836 = distinct !DILocation(line: 646, column: 2, scope: !12834)
!12837 = !DILocation(line: 0, scope: !12315, inlinedAt: !12838)
!12838 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !12836)
!12839 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !12838)
!12840 = !DILocation(line: 649, column: 1, scope: !12819)
!12841 = distinct !DISubprogram(name: "z_sched_start", scope: !2210, file: !2210, line: 651, type: !12238, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12842)
!12842 = !{!12843, !12844}
!12843 = !DILocalVariable(name: "thread", arg: 1, scope: !12841, file: !2210, line: 651, type: !2105)
!12844 = !DILocalVariable(name: "key", scope: !12841, file: !2210, line: 653, type: !12272)
!12845 = !DILocation(line: 0, scope: !12841)
!12846 = !DILocation(line: 0, scope: !12280, inlinedAt: !12847)
!12847 = distinct !DILocation(line: 653, column: 25, scope: !12841)
!12848 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !12849)
!12849 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !12847)
!12850 = !DILocation(line: 0, scope: !12289, inlinedAt: !12849)
!12851 = !DILocation(line: 655, column: 6, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12841, file: !2210, line: 655, column: 6)
!12853 = !DILocation(line: 655, column: 6, scope: !12841)
!12854 = !DILocation(line: 0, scope: !12307, inlinedAt: !12855)
!12855 = distinct !DILocation(line: 656, column: 3, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12852, file: !2210, line: 655, column: 36)
!12857 = !DILocation(line: 0, scope: !12315, inlinedAt: !12858)
!12858 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !12855)
!12859 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !12858)
!12860 = !DILocation(line: 657, column: 3, scope: !12856)
!12861 = !DILocation(line: 660, column: 2, scope: !12841)
!12862 = !DILocation(line: 661, column: 2, scope: !12841)
!12863 = !DILocation(line: 662, column: 2, scope: !12841)
!12864 = !DILocation(line: 663, column: 1, scope: !12841)
!12865 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11552, file: !11552, line: 126, type: !12398, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12866)
!12866 = !{!12867}
!12867 = !DILocalVariable(name: "thread", arg: 1, scope: !12865, file: !11552, line: 126, type: !2105)
!12868 = !DILocation(line: 0, scope: !12865)
!12869 = !DILocation(line: 128, column: 23, scope: !12865)
!12870 = !DILocation(line: 128, column: 36, scope: !12865)
!12871 = !DILocation(line: 128, column: 56, scope: !12865)
!12872 = !DILocation(line: 128, column: 2, scope: !12865)
!12873 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11552, file: !11552, line: 155, type: !12238, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12874)
!12874 = !{!12875}
!12875 = !DILocalVariable(name: "thread", arg: 1, scope: !12873, file: !11552, line: 155, type: !2105)
!12876 = !DILocation(line: 0, scope: !12873)
!12877 = !DILocation(line: 157, column: 15, scope: !12873)
!12878 = !DILocation(line: 157, column: 28, scope: !12873)
!12879 = !DILocation(line: 158, column: 1, scope: !12873)
!12880 = distinct !DISubprogram(name: "z_reschedule", scope: !2210, file: !2210, line: 967, type: !12308, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12881)
!12881 = !{!12882, !12883}
!12882 = !DILocalVariable(name: "lock", arg: 1, scope: !12880, file: !2210, line: 967, type: !12283)
!12883 = !DILocalVariable(name: "key", arg: 2, scope: !12880, file: !2210, line: 967, type: !12272)
!12884 = !DILocation(line: 0, scope: !12880)
!12885 = !DILocation(line: 969, column: 6, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12880, file: !2210, line: 969, column: 6)
!12887 = !DILocation(line: 969, column: 23, scope: !12886)
!12888 = !DILocation(line: 969, column: 26, scope: !12886)
!12889 = !DILocation(line: 969, column: 6, scope: !12880)
!12890 = !DILocalVariable(name: "key", arg: 2, scope: !12891, file: !11656, line: 193, type: !12272)
!12891 = distinct !DISubprogram(name: "z_swap", scope: !11656, file: !11656, line: 193, type: !12892, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12894)
!12892 = !DISubroutineType(types: !12893)
!12893 = !{!103, !12283, !12272}
!12894 = !{!12895, !12890}
!12895 = !DILocalVariable(name: "lock", arg: 1, scope: !12891, file: !11656, line: 193, type: !12283)
!12896 = !DILocation(line: 0, scope: !12891, inlinedAt: !12897)
!12897 = distinct !DILocation(line: 970, column: 3, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12886, file: !2210, line: 969, column: 39)
!12899 = !DILocation(line: 196, column: 9, scope: !12891, inlinedAt: !12897)
!12900 = !DILocation(line: 971, column: 2, scope: !12898)
!12901 = !DILocation(line: 0, scope: !12307, inlinedAt: !12902)
!12902 = distinct !DILocation(line: 972, column: 3, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12886, file: !2210, line: 971, column: 9)
!12904 = !DILocation(line: 0, scope: !12315, inlinedAt: !12905)
!12905 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !12902)
!12906 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !12905)
!12907 = !DILocation(line: 975, column: 1, scope: !12880)
!12908 = distinct !DISubprogram(name: "resched", scope: !2210, file: !2210, line: 940, type: !12909, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12911)
!12909 = !DISubroutineType(types: !12910)
!12910 = !{!157, !121}
!12911 = !{!12912}
!12912 = !DILocalVariable(name: "key", arg: 1, scope: !12908, file: !2210, line: 940, type: !121)
!12913 = !DILocation(line: 0, scope: !12908)
!12914 = !DILocalVariable(name: "key", arg: 1, scope: !12915, file: !4847, line: 112, type: !32)
!12915 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4847, file: !4847, line: 112, type: !12916, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12918)
!12916 = !DISubroutineType(types: !12917)
!12917 = !{!157, !32}
!12918 = !{!12914}
!12919 = !DILocation(line: 0, scope: !12915, inlinedAt: !12920)
!12920 = distinct !DILocation(line: 946, column: 9, scope: !12908)
!12921 = !DILocation(line: 115, column: 13, scope: !12915, inlinedAt: !12920)
!12922 = !DILocation(line: 946, column: 32, scope: !12908)
!12923 = !DILocation(line: 1031, column: 3, scope: !12924, inlinedAt: !12927)
!12924 = distinct !DISubprogram(name: "__get_IPSR", scope: !5021, file: !5021, line: 1027, type: !5102, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12925)
!12925 = !{!12926}
!12926 = !DILocalVariable(name: "result", scope: !12924, file: !5021, line: 1029, type: !121)
!12927 = distinct !DILocation(line: 48, column: 10, scope: !12928, inlinedAt: !12929)
!12928 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5815, file: !5815, line: 46, type: !5816, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!12929 = distinct !DILocation(line: 946, column: 36, scope: !12908)
!12930 = !{i64 3768611}
!12931 = !DILocation(line: 0, scope: !12924, inlinedAt: !12927)
!12932 = !DILocation(line: 48, column: 9, scope: !12928, inlinedAt: !12929)
!12933 = !DILocation(line: 946, column: 2, scope: !12908)
!12934 = distinct !DISubprogram(name: "need_swap", scope: !2210, file: !2210, line: 953, type: !5816, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12935)
!12935 = !{!12936}
!12936 = !DILocalVariable(name: "new_thread", scope: !12934, file: !2210, line: 959, type: !2105)
!12937 = !DILocation(line: 962, column: 31, scope: !12934)
!12938 = !DILocation(line: 0, scope: !12934)
!12939 = !DILocation(line: 963, column: 23, scope: !12934)
!12940 = !DILocation(line: 963, column: 20, scope: !12934)
!12941 = !DILocation(line: 963, column: 2, scope: !12934)
!12942 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11656, file: !11656, line: 181, type: !5031, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12943)
!12943 = !{!12944, !12945}
!12944 = !DILocalVariable(name: "key", arg: 1, scope: !12942, file: !11656, line: 181, type: !32)
!12945 = !DILocalVariable(name: "ret", scope: !12942, file: !11656, line: 183, type: !103)
!12946 = !DILocation(line: 0, scope: !12942)
!12947 = !DILocation(line: 185, column: 8, scope: !12942)
!12948 = !DILocation(line: 186, column: 2, scope: !12942)
!12949 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2210, file: !2210, line: 665, type: !12238, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12950)
!12950 = !{!12951, !12952, !12954}
!12951 = !DILocalVariable(name: "thread", arg: 1, scope: !12949, file: !2210, line: 665, type: !2105)
!12952 = !DILocalVariable(name: "__i", scope: !12953, file: !2210, line: 671, type: !12272)
!12953 = distinct !DILexicalBlock(scope: !12949, file: !2210, line: 671, column: 2)
!12954 = !DILocalVariable(name: "__key", scope: !12953, file: !2210, line: 671, type: !12272)
!12955 = !DILocation(line: 0, scope: !12949)
!12956 = !DILocation(line: 669, column: 8, scope: !12949)
!12957 = !DILocation(line: 0, scope: !12953)
!12958 = !DILocation(line: 0, scope: !12280, inlinedAt: !12959)
!12959 = distinct !DILocation(line: 671, column: 2, scope: !12953)
!12960 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !12961)
!12961 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !12959)
!12962 = !DILocation(line: 0, scope: !12289, inlinedAt: !12961)
!12963 = !DILocation(line: 672, column: 7, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12965, file: !2210, line: 672, column: 7)
!12965 = distinct !DILexicalBlock(scope: !12966, file: !2210, line: 671, column: 26)
!12966 = distinct !DILexicalBlock(scope: !12953, file: !2210, line: 671, column: 2)
!12967 = !DILocation(line: 672, column: 7, scope: !12965)
!12968 = !DILocation(line: 0, scope: !12449, inlinedAt: !12969)
!12969 = distinct !DILocation(line: 673, column: 4, scope: !12970)
!12970 = distinct !DILexicalBlock(scope: !12964, file: !2210, line: 672, column: 35)
!12971 = !DILocation(line: 266, column: 15, scope: !12449, inlinedAt: !12969)
!12972 = !DILocation(line: 266, column: 28, scope: !12449, inlinedAt: !12969)
!12973 = !DILocation(line: 0, scope: !12457, inlinedAt: !12974)
!12974 = distinct !DILocation(line: 268, column: 3, scope: !12461, inlinedAt: !12969)
!12975 = !DILocation(line: 234, column: 2, scope: !12457, inlinedAt: !12974)
!12976 = !DILocation(line: 674, column: 3, scope: !12970)
!12977 = !DILocation(line: 675, column: 3, scope: !12965)
!12978 = !DILocation(line: 676, column: 26, scope: !12965)
!12979 = !DILocation(line: 676, column: 23, scope: !12965)
!12980 = !DILocation(line: 676, column: 3, scope: !12965)
!12981 = !DILocation(line: 0, scope: !12307, inlinedAt: !12982)
!12982 = distinct !DILocation(line: 671, column: 2, scope: !12966)
!12983 = !DILocation(line: 0, scope: !12315, inlinedAt: !12984)
!12984 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !12982)
!12985 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !12984)
!12986 = !DILocation(line: 679, column: 16, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12949, file: !2210, line: 679, column: 6)
!12988 = !DILocation(line: 679, column: 13, scope: !12987)
!12989 = !DILocation(line: 679, column: 6, scope: !12949)
!12990 = !DILocation(line: 680, column: 3, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12987, file: !2210, line: 679, column: 26)
!12992 = !DILocation(line: 681, column: 2, scope: !12991)
!12993 = !DILocation(line: 684, column: 1, scope: !12949)
!12994 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11946, file: !11946, line: 52, type: !12256, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !12995)
!12995 = !{!12996}
!12996 = !DILocalVariable(name: "thread", arg: 1, scope: !12994, file: !11946, line: 52, type: !2105)
!12997 = !DILocation(line: 0, scope: !12994)
!12998 = !DILocation(line: 54, column: 39, scope: !12994)
!12999 = !DILocation(line: 54, column: 9, scope: !12994)
!13000 = !DILocation(line: 54, column: 2, scope: !12994)
!13001 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11552, file: !11552, line: 141, type: !12238, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13002)
!13002 = !{!13003}
!13003 = !DILocalVariable(name: "thread", arg: 1, scope: !13001, file: !11552, line: 141, type: !2105)
!13004 = !DILocation(line: 0, scope: !13001)
!13005 = !DILocation(line: 143, column: 15, scope: !13001)
!13006 = !DILocation(line: 143, column: 28, scope: !13001)
!13007 = !DILocation(line: 146, column: 1, scope: !13001)
!13008 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11552, file: !11552, line: 73, type: !2909, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13009 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13010)
!13010 = distinct !DILocation(line: 75, column: 30, scope: !13008)
!13011 = !DILocation(line: 0, scope: !12289, inlinedAt: !13010)
!13012 = !DILocation(line: 75, column: 9, scope: !13008)
!13013 = !DILocation(line: 76, column: 1, scope: !13008)
!13014 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2210, file: !2210, line: 977, type: !5112, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13015)
!13015 = !{!13016}
!13016 = !DILocalVariable(name: "key", arg: 1, scope: !13014, file: !2210, line: 977, type: !121)
!13017 = !DILocation(line: 0, scope: !13014)
!13018 = !DILocation(line: 979, column: 6, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !13014, file: !2210, line: 979, column: 6)
!13020 = !DILocation(line: 979, column: 6, scope: !13014)
!13021 = !DILocation(line: 980, column: 3, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13019, file: !2210, line: 979, column: 20)
!13023 = !DILocation(line: 981, column: 2, scope: !13022)
!13024 = !DILocation(line: 0, scope: !12315, inlinedAt: !13025)
!13025 = distinct !DILocation(line: 982, column: 3, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13019, file: !2210, line: 981, column: 9)
!13027 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !13025)
!13028 = !DILocation(line: 985, column: 1, scope: !13014)
!13029 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2210, file: !2210, line: 695, type: !12238, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13030)
!13030 = !{!13031, !13032}
!13031 = !DILocalVariable(name: "thread", arg: 1, scope: !13029, file: !2210, line: 695, type: !2105)
!13032 = !DILocalVariable(name: "key", scope: !13029, file: !2210, line: 699, type: !12272)
!13033 = !DILocation(line: 0, scope: !13029)
!13034 = !DILocation(line: 0, scope: !12280, inlinedAt: !13035)
!13035 = distinct !DILocation(line: 699, column: 25, scope: !13029)
!13036 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13037)
!13037 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13035)
!13038 = !DILocation(line: 0, scope: !12289, inlinedAt: !13037)
!13039 = !DILocation(line: 702, column: 7, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13029, file: !2210, line: 702, column: 6)
!13041 = !DILocation(line: 702, column: 6, scope: !13029)
!13042 = !DILocation(line: 0, scope: !12307, inlinedAt: !13043)
!13043 = distinct !DILocation(line: 703, column: 3, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13040, file: !2210, line: 702, column: 38)
!13045 = !DILocation(line: 0, scope: !12315, inlinedAt: !13046)
!13046 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !13043)
!13047 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !13046)
!13048 = !DILocation(line: 704, column: 3, scope: !13044)
!13049 = !DILocation(line: 707, column: 2, scope: !13029)
!13050 = !DILocation(line: 708, column: 2, scope: !13029)
!13051 = !DILocation(line: 710, column: 2, scope: !13029)
!13052 = !DILocation(line: 713, column: 1, scope: !13029)
!13053 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11552, file: !11552, line: 96, type: !12398, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13054)
!13054 = !{!13055}
!13055 = !DILocalVariable(name: "thread", arg: 1, scope: !13053, file: !11552, line: 96, type: !2105)
!13056 = !DILocation(line: 0, scope: !13053)
!13057 = !DILocation(line: 98, column: 23, scope: !13053)
!13058 = !DILocation(line: 98, column: 36, scope: !13053)
!13059 = !DILocation(line: 98, column: 57, scope: !13053)
!13060 = !DILocation(line: 98, column: 2, scope: !13053)
!13061 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11552, file: !11552, line: 148, type: !12238, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13062)
!13062 = !{!13063}
!13063 = !DILocalVariable(name: "thread", arg: 1, scope: !13061, file: !11552, line: 148, type: !2105)
!13064 = !DILocation(line: 0, scope: !13061)
!13065 = !DILocation(line: 150, column: 15, scope: !13061)
!13066 = !DILocation(line: 150, column: 28, scope: !13061)
!13067 = !DILocation(line: 153, column: 1, scope: !13061)
!13068 = distinct !DISubprogram(name: "z_pend_thread", scope: !2210, file: !2210, line: 770, type: !13069, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13075)
!13069 = !DISubroutineType(types: !13070)
!13070 = !{null, !2105, !2136, !13071}
!13071 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1457, line: 67, baseType: !13072)
!13072 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1457, line: 65, size: 64, elements: !13073)
!13073 = !{!13074}
!13074 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13072, file: !1457, line: 66, baseType: !1456, size: 64)
!13075 = !{!13076, !13077, !13078, !13079, !13081}
!13076 = !DILocalVariable(name: "thread", arg: 1, scope: !13068, file: !2210, line: 770, type: !2105)
!13077 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13068, file: !2210, line: 770, type: !2136)
!13078 = !DILocalVariable(name: "timeout", arg: 3, scope: !13068, file: !2210, line: 771, type: !13071)
!13079 = !DILocalVariable(name: "__i", scope: !13080, file: !2210, line: 774, type: !12272)
!13080 = distinct !DILexicalBlock(scope: !13068, file: !2210, line: 774, column: 2)
!13081 = !DILocalVariable(name: "__key", scope: !13080, file: !2210, line: 774, type: !12272)
!13082 = !DILocation(line: 0, scope: !13068)
!13083 = !DILocation(line: 0, scope: !13080)
!13084 = !DILocation(line: 0, scope: !12280, inlinedAt: !13085)
!13085 = distinct !DILocation(line: 774, column: 2, scope: !13080)
!13086 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13087)
!13087 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13085)
!13088 = !DILocation(line: 0, scope: !12289, inlinedAt: !13087)
!13089 = !DILocation(line: 775, column: 3, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13091, file: !2210, line: 774, column: 26)
!13091 = distinct !DILexicalBlock(scope: !13080, file: !2210, line: 774, column: 2)
!13092 = !DILocation(line: 0, scope: !12307, inlinedAt: !13093)
!13093 = distinct !DILocation(line: 774, column: 2, scope: !13091)
!13094 = !DILocation(line: 0, scope: !12315, inlinedAt: !13095)
!13095 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !13093)
!13096 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !13095)
!13097 = !DILocation(line: 777, column: 1, scope: !13068)
!13098 = distinct !DISubprogram(name: "pend_locked", scope: !2210, file: !2210, line: 760, type: !13069, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13099)
!13099 = !{!13100, !13101, !13102}
!13100 = !DILocalVariable(name: "thread", arg: 1, scope: !13098, file: !2210, line: 760, type: !2105)
!13101 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13098, file: !2210, line: 760, type: !2136)
!13102 = !DILocalVariable(name: "timeout", arg: 3, scope: !13098, file: !2210, line: 761, type: !13071)
!13103 = !DILocation(line: 0, scope: !13098)
!13104 = !DILocation(line: 766, column: 2, scope: !13098)
!13105 = !DILocation(line: 767, column: 2, scope: !13098)
!13106 = !DILocation(line: 768, column: 1, scope: !13098)
!13107 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2210, file: !2210, line: 740, type: !13108, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13110)
!13108 = !DISubroutineType(types: !13109)
!13109 = !{null, !2105, !2136}
!13110 = !{!13111, !13112}
!13111 = !DILocalVariable(name: "thread", arg: 1, scope: !13107, file: !2210, line: 740, type: !2105)
!13112 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13107, file: !2210, line: 740, type: !2136)
!13113 = !DILocation(line: 0, scope: !13107)
!13114 = !DILocation(line: 742, column: 2, scope: !13107)
!13115 = !DILocation(line: 743, column: 2, scope: !13107)
!13116 = !DILocation(line: 747, column: 13, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13107, file: !2210, line: 747, column: 6)
!13118 = !DILocation(line: 747, column: 6, scope: !13107)
!13119 = !DILocation(line: 748, column: 16, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13117, file: !2210, line: 747, column: 22)
!13121 = !DILocation(line: 748, column: 26, scope: !13120)
!13122 = !DILocation(line: 749, column: 28, scope: !13120)
!13123 = !DILocation(line: 0, scope: !12480, inlinedAt: !13124)
!13124 = distinct !DILocation(line: 749, column: 3, scope: !13120)
!13125 = !DILocation(line: 188, column: 2, scope: !12490, inlinedAt: !13124)
!13126 = !DILocation(line: 188, column: 2, scope: !12492, inlinedAt: !13124)
!13127 = !DILocation(line: 0, scope: !12490, inlinedAt: !13124)
!13128 = !DILocation(line: 189, column: 7, scope: !12495, inlinedAt: !13124)
!13129 = !DILocation(line: 189, column: 35, scope: !12495, inlinedAt: !13124)
!13130 = !DILocation(line: 189, column: 7, scope: !12496, inlinedAt: !13124)
!13131 = !DILocation(line: 191, column: 21, scope: !12500, inlinedAt: !13124)
!13132 = !DILocation(line: 190, column: 4, scope: !12500, inlinedAt: !13124)
!13133 = !DILocation(line: 192, column: 4, scope: !12500, inlinedAt: !13124)
!13134 = distinct !{!13134, !13125, !13135}
!13135 = !DILocation(line: 194, column: 2, scope: !12490, inlinedAt: !13124)
!13136 = !DILocation(line: 196, column: 37, scope: !12480, inlinedAt: !13124)
!13137 = !DILocation(line: 196, column: 2, scope: !12480, inlinedAt: !13124)
!13138 = !DILocation(line: 197, column: 1, scope: !12480, inlinedAt: !13124)
!13139 = !DILocation(line: 751, column: 1, scope: !13107)
!13140 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2210, file: !2210, line: 753, type: !13141, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13143)
!13141 = !DISubroutineType(types: !13142)
!13142 = !{null, !2105, !13071}
!13143 = !{!13144, !13145}
!13144 = !DILocalVariable(name: "thread", arg: 1, scope: !13140, file: !2210, line: 753, type: !2105)
!13145 = !DILocalVariable(name: "timeout", arg: 2, scope: !13140, file: !2210, line: 753, type: !13071)
!13146 = !DILocation(line: 0, scope: !13140)
!13147 = !DILocation(line: 755, column: 7, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13140, file: !2210, line: 755, column: 6)
!13149 = !DILocation(line: 755, column: 6, scope: !13140)
!13150 = !DILocation(line: 756, column: 3, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13148, file: !2210, line: 755, column: 41)
!13152 = !DILocation(line: 757, column: 2, scope: !13151)
!13153 = !DILocation(line: 758, column: 1, scope: !13140)
!13154 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11946, file: !11946, line: 47, type: !13141, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13155)
!13155 = !{!13156, !13157}
!13156 = !DILocalVariable(name: "thread", arg: 1, scope: !13154, file: !11946, line: 47, type: !2105)
!13157 = !DILocalVariable(name: "ticks", arg: 2, scope: !13154, file: !11946, line: 47, type: !13071)
!13158 = !DILocation(line: 0, scope: !13154)
!13159 = !DILocation(line: 49, column: 30, scope: !13154)
!13160 = !DILocation(line: 49, column: 2, scope: !13154)
!13161 = !DILocation(line: 50, column: 1, scope: !13154)
!13162 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2210, file: !2210, line: 795, type: !2162, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13163)
!13163 = !{!13164, !13165, !13166, !13168, !13169}
!13164 = !DILocalVariable(name: "timeout", arg: 1, scope: !13162, file: !2210, line: 795, type: !2164)
!13165 = !DILocalVariable(name: "thread", scope: !13162, file: !2210, line: 797, type: !2105)
!13166 = !DILocalVariable(name: "__i", scope: !13167, file: !2210, line: 800, type: !12272)
!13167 = distinct !DILexicalBlock(scope: !13162, file: !2210, line: 800, column: 2)
!13168 = !DILocalVariable(name: "__key", scope: !13167, file: !2210, line: 800, type: !12272)
!13169 = !DILocalVariable(name: "killed", scope: !13170, file: !2210, line: 801, type: !157)
!13170 = distinct !DILexicalBlock(scope: !13171, file: !2210, line: 800, column: 26)
!13171 = distinct !DILexicalBlock(scope: !13167, file: !2210, line: 800, column: 2)
!13172 = !DILocation(line: 0, scope: !13162)
!13173 = !DILocation(line: 797, column: 28, scope: !13162)
!13174 = !DILocation(line: 0, scope: !13167)
!13175 = !DILocation(line: 0, scope: !12280, inlinedAt: !13176)
!13176 = distinct !DILocation(line: 800, column: 2, scope: !13167)
!13177 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13178)
!13178 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13176)
!13179 = !DILocation(line: 0, scope: !12289, inlinedAt: !13178)
!13180 = !DILocation(line: 801, column: 27, scope: !13170)
!13181 = !DILocation(line: 801, column: 32, scope: !13170)
!13182 = !DILocation(line: 801, column: 61, scope: !13170)
!13183 = !DILocation(line: 0, scope: !13170)
!13184 = !DILocation(line: 804, column: 7, scope: !13170)
!13185 = !DILocation(line: 805, column: 21, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13187, file: !2210, line: 805, column: 8)
!13187 = distinct !DILexicalBlock(scope: !13188, file: !2210, line: 804, column: 16)
!13188 = distinct !DILexicalBlock(scope: !13170, file: !2210, line: 804, column: 7)
!13189 = !DILocation(line: 805, column: 31, scope: !13186)
!13190 = !DILocation(line: 805, column: 8, scope: !13187)
!13191 = !DILocation(line: 806, column: 5, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13186, file: !2210, line: 805, column: 40)
!13193 = !DILocation(line: 807, column: 4, scope: !13192)
!13194 = !DILocation(line: 808, column: 4, scope: !13187)
!13195 = !DILocation(line: 809, column: 4, scope: !13187)
!13196 = !DILocation(line: 810, column: 4, scope: !13187)
!13197 = !DILocation(line: 811, column: 3, scope: !13187)
!13198 = !DILocation(line: 0, scope: !12307, inlinedAt: !13199)
!13199 = distinct !DILocation(line: 800, column: 2, scope: !13171)
!13200 = !DILocation(line: 0, scope: !12315, inlinedAt: !13201)
!13201 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !13199)
!13202 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !13201)
!13203 = !DILocation(line: 813, column: 1, scope: !13162)
!13204 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2210, file: !2210, line: 779, type: !12238, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13205)
!13205 = !{!13206}
!13206 = !DILocalVariable(name: "thread", arg: 1, scope: !13204, file: !2210, line: 779, type: !2105)
!13207 = !DILocation(line: 0, scope: !13204)
!13208 = !DILocation(line: 781, column: 2, scope: !13204)
!13209 = !DILocation(line: 782, column: 2, scope: !13204)
!13210 = !DILocation(line: 783, column: 15, scope: !13204)
!13211 = !DILocation(line: 783, column: 25, scope: !13204)
!13212 = !DILocation(line: 784, column: 1, scope: !13204)
!13213 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11552, file: !11552, line: 165, type: !12238, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13214)
!13214 = !{!13215}
!13215 = !DILocalVariable(name: "thread", arg: 1, scope: !13213, file: !11552, line: 165, type: !2105)
!13216 = !DILocation(line: 0, scope: !13213)
!13217 = !DILocation(line: 167, column: 15, scope: !13213)
!13218 = !DILocation(line: 167, column: 28, scope: !13213)
!13219 = !DILocation(line: 168, column: 1, scope: !13213)
!13220 = distinct !DISubprogram(name: "unready_thread", scope: !2210, file: !2210, line: 731, type: !12238, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13221)
!13221 = !{!13222}
!13222 = !DILocalVariable(name: "thread", arg: 1, scope: !13220, file: !2210, line: 731, type: !2105)
!13223 = !DILocation(line: 0, scope: !13220)
!13224 = !DILocation(line: 733, column: 6, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13220, file: !2210, line: 733, column: 6)
!13226 = !DILocation(line: 733, column: 6, scope: !13220)
!13227 = !DILocation(line: 0, scope: !12449, inlinedAt: !13228)
!13228 = distinct !DILocation(line: 734, column: 3, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13225, file: !2210, line: 733, column: 34)
!13230 = !DILocation(line: 266, column: 15, scope: !12449, inlinedAt: !13228)
!13231 = !DILocation(line: 266, column: 28, scope: !12449, inlinedAt: !13228)
!13232 = !DILocation(line: 0, scope: !12457, inlinedAt: !13233)
!13233 = distinct !DILocation(line: 268, column: 3, scope: !12461, inlinedAt: !13228)
!13234 = !DILocation(line: 234, column: 2, scope: !12457, inlinedAt: !13233)
!13235 = !DILocation(line: 735, column: 2, scope: !13229)
!13236 = !DILocation(line: 736, column: 25, scope: !13220)
!13237 = !DILocation(line: 736, column: 22, scope: !13220)
!13238 = !DILocation(line: 736, column: 2, scope: !13220)
!13239 = !DILocation(line: 737, column: 1, scope: !13220)
!13240 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11552, file: !11552, line: 160, type: !12238, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13241)
!13241 = !{!13242}
!13242 = !DILocalVariable(name: "thread", arg: 1, scope: !13240, file: !11552, line: 160, type: !2105)
!13243 = !DILocation(line: 0, scope: !13240)
!13244 = !DILocation(line: 162, column: 15, scope: !13240)
!13245 = !DILocation(line: 162, column: 28, scope: !13240)
!13246 = !DILocation(line: 163, column: 1, scope: !13240)
!13247 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2210, file: !2210, line: 786, type: !12238, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13248)
!13248 = !{!13249, !13250, !13252}
!13249 = !DILocalVariable(name: "thread", arg: 1, scope: !13247, file: !2210, line: 786, type: !2105)
!13250 = !DILocalVariable(name: "__i", scope: !13251, file: !2210, line: 788, type: !12272)
!13251 = distinct !DILexicalBlock(scope: !13247, file: !2210, line: 788, column: 2)
!13252 = !DILocalVariable(name: "__key", scope: !13251, file: !2210, line: 788, type: !12272)
!13253 = !DILocation(line: 0, scope: !13247)
!13254 = !DILocation(line: 0, scope: !13251)
!13255 = !DILocation(line: 0, scope: !12280, inlinedAt: !13256)
!13256 = distinct !DILocation(line: 788, column: 2, scope: !13251)
!13257 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13258)
!13258 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13256)
!13259 = !DILocation(line: 0, scope: !12289, inlinedAt: !13258)
!13260 = !DILocation(line: 789, column: 3, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13262, file: !2210, line: 788, column: 26)
!13262 = distinct !DILexicalBlock(scope: !13251, file: !2210, line: 788, column: 2)
!13263 = !DILocation(line: 0, scope: !12307, inlinedAt: !13264)
!13264 = distinct !DILocation(line: 788, column: 2, scope: !13262)
!13265 = !DILocation(line: 0, scope: !12315, inlinedAt: !13266)
!13266 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !13264)
!13267 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !13266)
!13268 = !DILocation(line: 791, column: 1, scope: !13247)
!13269 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2210, file: !2210, line: 816, type: !13270, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13272)
!13270 = !DISubroutineType(types: !13271)
!13271 = !{!103, !121, !2136, !13071}
!13272 = !{!13273, !13274, !13275, !13276, !13277, !13279}
!13273 = !DILocalVariable(name: "key", arg: 1, scope: !13269, file: !2210, line: 816, type: !121)
!13274 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13269, file: !2210, line: 816, type: !2136)
!13275 = !DILocalVariable(name: "timeout", arg: 3, scope: !13269, file: !2210, line: 816, type: !13071)
!13276 = !DILocalVariable(name: "ret", scope: !13269, file: !2210, line: 828, type: !103)
!13277 = !DILocalVariable(name: "__i", scope: !13278, file: !2210, line: 829, type: !12272)
!13278 = distinct !DILexicalBlock(scope: !13269, file: !2210, line: 829, column: 2)
!13279 = !DILocalVariable(name: "__key", scope: !13278, file: !2210, line: 829, type: !12272)
!13280 = !DILocation(line: 0, scope: !13269)
!13281 = !DILocation(line: 823, column: 14, scope: !13269)
!13282 = !DILocation(line: 823, column: 2, scope: !13269)
!13283 = !DILocation(line: 826, column: 20, scope: !13269)
!13284 = !DILocation(line: 826, column: 18, scope: !13269)
!13285 = !DILocation(line: 828, column: 12, scope: !13269)
!13286 = !DILocation(line: 0, scope: !13278)
!13287 = !DILocation(line: 0, scope: !12280, inlinedAt: !13288)
!13288 = distinct !DILocation(line: 829, column: 2, scope: !13278)
!13289 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13290)
!13290 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13288)
!13291 = !DILocation(line: 0, scope: !12289, inlinedAt: !13290)
!13292 = !DILocation(line: 830, column: 7, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13294, file: !2210, line: 830, column: 7)
!13294 = distinct !DILexicalBlock(scope: !13295, file: !2210, line: 829, column: 26)
!13295 = distinct !DILexicalBlock(scope: !13278, file: !2210, line: 829, column: 2)
!13296 = !DILocation(line: 830, column: 26, scope: !13293)
!13297 = !DILocation(line: 830, column: 23, scope: !13293)
!13298 = !DILocation(line: 830, column: 7, scope: !13294)
!13299 = !DILocation(line: 831, column: 20, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13293, file: !2210, line: 830, column: 36)
!13301 = !DILocation(line: 832, column: 3, scope: !13300)
!13302 = !DILocation(line: 0, scope: !12307, inlinedAt: !13303)
!13303 = distinct !DILocation(line: 829, column: 2, scope: !13295)
!13304 = !DILocation(line: 0, scope: !12315, inlinedAt: !13305)
!13305 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !13303)
!13306 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !13305)
!13307 = !DILocation(line: 834, column: 2, scope: !13269)
!13308 = distinct !DISubprogram(name: "z_pend_curr", scope: !2210, file: !2210, line: 840, type: !13309, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13311)
!13309 = !DISubroutineType(types: !13310)
!13310 = !{!103, !12283, !12272, !2136, !13071}
!13311 = !{!13312, !13313, !13314, !13315}
!13312 = !DILocalVariable(name: "lock", arg: 1, scope: !13308, file: !2210, line: 840, type: !12283)
!13313 = !DILocalVariable(name: "key", arg: 2, scope: !13308, file: !2210, line: 840, type: !12272)
!13314 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13308, file: !2210, line: 841, type: !2136)
!13315 = !DILocalVariable(name: "timeout", arg: 4, scope: !13308, file: !2210, line: 841, type: !13071)
!13316 = !DILocation(line: 0, scope: !13308)
!13317 = !DILocation(line: 844, column: 20, scope: !13308)
!13318 = !DILocation(line: 844, column: 18, scope: !13308)
!13319 = !DILocation(line: 0, scope: !12280, inlinedAt: !13320)
!13320 = distinct !DILocation(line: 856, column: 9, scope: !13308)
!13321 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13322)
!13322 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13320)
!13323 = !DILocation(line: 0, scope: !12289, inlinedAt: !13322)
!13324 = !DILocation(line: 857, column: 14, scope: !13308)
!13325 = !DILocation(line: 857, column: 2, scope: !13308)
!13326 = !DILocation(line: 0, scope: !12891, inlinedAt: !13327)
!13327 = distinct !DILocation(line: 859, column: 9, scope: !13308)
!13328 = !DILocation(line: 196, column: 9, scope: !12891, inlinedAt: !13327)
!13329 = !DILocation(line: 859, column: 2, scope: !13308)
!13330 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2210, file: !2210, line: 862, type: !13331, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13333)
!13331 = !DISubroutineType(types: !13332)
!13332 = !{!2105, !2136}
!13333 = !{!13334, !13335, !13336, !13338}
!13334 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13330, file: !2210, line: 862, type: !2136)
!13335 = !DILocalVariable(name: "thread", scope: !13330, file: !2210, line: 864, type: !2105)
!13336 = !DILocalVariable(name: "__i", scope: !13337, file: !2210, line: 866, type: !12272)
!13337 = distinct !DILexicalBlock(scope: !13330, file: !2210, line: 866, column: 2)
!13338 = !DILocalVariable(name: "__key", scope: !13337, file: !2210, line: 866, type: !12272)
!13339 = !DILocation(line: 0, scope: !13330)
!13340 = !DILocation(line: 0, scope: !13337)
!13341 = !DILocation(line: 0, scope: !12280, inlinedAt: !13342)
!13342 = distinct !DILocation(line: 866, column: 2, scope: !13337)
!13343 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13344)
!13344 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13342)
!13345 = !DILocation(line: 0, scope: !12289, inlinedAt: !13344)
!13346 = !DILocation(line: 867, column: 12, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13348, file: !2210, line: 866, column: 26)
!13348 = distinct !DILexicalBlock(scope: !13337, file: !2210, line: 866, column: 2)
!13349 = !DILocation(line: 869, column: 14, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13347, file: !2210, line: 869, column: 7)
!13351 = !DILocation(line: 869, column: 7, scope: !13347)
!13352 = !DILocation(line: 870, column: 4, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13350, file: !2210, line: 869, column: 23)
!13354 = !DILocation(line: 871, column: 3, scope: !13353)
!13355 = !DILocation(line: 0, scope: !12307, inlinedAt: !13356)
!13356 = distinct !DILocation(line: 866, column: 2, scope: !13348)
!13357 = !DILocation(line: 0, scope: !12315, inlinedAt: !13358)
!13358 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !13356)
!13359 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !13358)
!13360 = !DILocation(line: 874, column: 2, scope: !13330)
!13361 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2210, file: !2210, line: 877, type: !13331, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13362)
!13362 = !{!13363, !13364, !13365, !13367}
!13363 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13361, file: !2210, line: 877, type: !2136)
!13364 = !DILocalVariable(name: "thread", scope: !13361, file: !2210, line: 879, type: !2105)
!13365 = !DILocalVariable(name: "__i", scope: !13366, file: !2210, line: 881, type: !12272)
!13366 = distinct !DILexicalBlock(scope: !13361, file: !2210, line: 881, column: 2)
!13367 = !DILocalVariable(name: "__key", scope: !13366, file: !2210, line: 881, type: !12272)
!13368 = !DILocation(line: 0, scope: !13361)
!13369 = !DILocation(line: 0, scope: !13366)
!13370 = !DILocation(line: 0, scope: !12280, inlinedAt: !13371)
!13371 = distinct !DILocation(line: 881, column: 2, scope: !13366)
!13372 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13373)
!13373 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13371)
!13374 = !DILocation(line: 0, scope: !12289, inlinedAt: !13373)
!13375 = !DILocation(line: 882, column: 12, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13377, file: !2210, line: 881, column: 26)
!13377 = distinct !DILexicalBlock(scope: !13366, file: !2210, line: 881, column: 2)
!13378 = !DILocation(line: 884, column: 14, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13376, file: !2210, line: 884, column: 7)
!13380 = !DILocation(line: 884, column: 7, scope: !13376)
!13381 = !DILocation(line: 885, column: 4, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13379, file: !2210, line: 884, column: 23)
!13383 = !DILocation(line: 886, column: 10, scope: !13382)
!13384 = !DILocation(line: 887, column: 3, scope: !13382)
!13385 = !DILocation(line: 0, scope: !12307, inlinedAt: !13386)
!13386 = distinct !DILocation(line: 881, column: 2, scope: !13377)
!13387 = !DILocation(line: 0, scope: !12315, inlinedAt: !13388)
!13388 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !13386)
!13389 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !13388)
!13390 = !DILocation(line: 890, column: 2, scope: !13361)
!13391 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2210, file: !2210, line: 893, type: !12238, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13392)
!13392 = !{!13393}
!13393 = !DILocalVariable(name: "thread", arg: 1, scope: !13391, file: !2210, line: 893, type: !2105)
!13394 = !DILocation(line: 0, scope: !13391)
!13395 = !DILocation(line: 0, scope: !13247, inlinedAt: !13396)
!13396 = distinct !DILocation(line: 895, column: 2, scope: !13391)
!13397 = !DILocation(line: 0, scope: !13251, inlinedAt: !13396)
!13398 = !DILocation(line: 0, scope: !12280, inlinedAt: !13399)
!13399 = distinct !DILocation(line: 788, column: 2, scope: !13251, inlinedAt: !13396)
!13400 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13401)
!13401 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13399)
!13402 = !DILocation(line: 0, scope: !12289, inlinedAt: !13401)
!13403 = !DILocation(line: 789, column: 3, scope: !13261, inlinedAt: !13396)
!13404 = !DILocation(line: 0, scope: !12307, inlinedAt: !13405)
!13405 = distinct !DILocation(line: 788, column: 2, scope: !13262, inlinedAt: !13396)
!13406 = !DILocation(line: 0, scope: !12315, inlinedAt: !13407)
!13407 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !13405)
!13408 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !13407)
!13409 = !DILocation(line: 896, column: 8, scope: !13391)
!13410 = !DILocation(line: 897, column: 1, scope: !13391)
!13411 = distinct !DISubprogram(name: "z_set_prio", scope: !2210, file: !2210, line: 902, type: !12600, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13412)
!13412 = !{!13413, !13414, !13415, !13416, !13418}
!13413 = !DILocalVariable(name: "thread", arg: 1, scope: !13411, file: !2210, line: 902, type: !2105)
!13414 = !DILocalVariable(name: "prio", arg: 2, scope: !13411, file: !2210, line: 902, type: !103)
!13415 = !DILocalVariable(name: "need_sched", scope: !13411, file: !2210, line: 904, type: !157)
!13416 = !DILocalVariable(name: "__i", scope: !13417, file: !2210, line: 906, type: !12272)
!13417 = distinct !DILexicalBlock(scope: !13411, file: !2210, line: 906, column: 2)
!13418 = !DILocalVariable(name: "__key", scope: !13417, file: !2210, line: 906, type: !12272)
!13419 = !DILocation(line: 0, scope: !13411)
!13420 = !DILocation(line: 0, scope: !13417)
!13421 = !DILocation(line: 0, scope: !12280, inlinedAt: !13422)
!13422 = distinct !DILocation(line: 906, column: 2, scope: !13417)
!13423 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13424)
!13424 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13422)
!13425 = !DILocation(line: 0, scope: !12289, inlinedAt: !13424)
!13426 = !DILocation(line: 907, column: 16, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13428, file: !2210, line: 906, column: 26)
!13428 = distinct !DILexicalBlock(scope: !13417, file: !2210, line: 906, column: 2)
!13429 = !DILocation(line: 909, column: 7, scope: !13427)
!13430 = !DILocation(line: 0, scope: !12449, inlinedAt: !13431)
!13431 = distinct !DILocation(line: 912, column: 5, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13433, file: !2210, line: 911, column: 63)
!13433 = distinct !DILexicalBlock(scope: !13434, file: !2210, line: 911, column: 8)
!13434 = distinct !DILexicalBlock(scope: !13435, file: !2210, line: 909, column: 19)
!13435 = distinct !DILexicalBlock(scope: !13427, file: !2210, line: 909, column: 7)
!13436 = !DILocation(line: 266, column: 28, scope: !12449, inlinedAt: !13431)
!13437 = !DILocation(line: 0, scope: !12457, inlinedAt: !13438)
!13438 = distinct !DILocation(line: 268, column: 3, scope: !12461, inlinedAt: !13431)
!13439 = !DILocation(line: 234, column: 2, scope: !12457, inlinedAt: !13438)
!13440 = !DILocation(line: 913, column: 23, scope: !13432)
!13441 = !DILocation(line: 0, scope: !12466, inlinedAt: !13442)
!13442 = distinct !DILocation(line: 914, column: 5, scope: !13432)
!13443 = !DILocation(line: 252, column: 28, scope: !12466, inlinedAt: !13442)
!13444 = !DILocation(line: 0, scope: !12473, inlinedAt: !13445)
!13445 = distinct !DILocation(line: 254, column: 3, scope: !12477, inlinedAt: !13442)
!13446 = !DILocation(line: 0, scope: !12480, inlinedAt: !13447)
!13447 = distinct !DILocation(line: 229, column: 2, scope: !12473, inlinedAt: !13445)
!13448 = !DILocation(line: 188, column: 2, scope: !12490, inlinedAt: !13447)
!13449 = !DILocation(line: 188, column: 2, scope: !12492, inlinedAt: !13447)
!13450 = !DILocation(line: 0, scope: !12490, inlinedAt: !13447)
!13451 = !DILocation(line: 189, column: 7, scope: !12495, inlinedAt: !13447)
!13452 = !DILocation(line: 189, column: 35, scope: !12495, inlinedAt: !13447)
!13453 = !DILocation(line: 189, column: 7, scope: !12496, inlinedAt: !13447)
!13454 = !DILocation(line: 190, column: 4, scope: !12500, inlinedAt: !13447)
!13455 = !DILocation(line: 192, column: 4, scope: !12500, inlinedAt: !13447)
!13456 = distinct !{!13456, !13448, !13457}
!13457 = !DILocation(line: 194, column: 2, scope: !12490, inlinedAt: !13447)
!13458 = !DILocation(line: 196, column: 2, scope: !12480, inlinedAt: !13447)
!13459 = !DILocation(line: 197, column: 1, scope: !12480, inlinedAt: !13447)
!13460 = !DILocation(line: 918, column: 4, scope: !13434)
!13461 = !DILocation(line: 919, column: 3, scope: !13434)
!13462 = !DILocation(line: 920, column: 22, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13435, file: !2210, line: 919, column: 10)
!13464 = !DILocation(line: 0, scope: !12307, inlinedAt: !13465)
!13465 = distinct !DILocation(line: 906, column: 2, scope: !13428)
!13466 = !DILocation(line: 0, scope: !12315, inlinedAt: !13467)
!13467 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !13465)
!13468 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !13467)
!13469 = !DILocation(line: 926, column: 2, scope: !13411)
!13470 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2210, file: !2210, line: 929, type: !13471, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13473)
!13471 = !DISubroutineType(types: !13472)
!13472 = !{null, !2105, !103}
!13473 = !{!13474, !13475, !13476}
!13474 = !DILocalVariable(name: "thread", arg: 1, scope: !13470, file: !2210, line: 929, type: !2105)
!13475 = !DILocalVariable(name: "prio", arg: 2, scope: !13470, file: !2210, line: 929, type: !103)
!13476 = !DILocalVariable(name: "need_sched", scope: !13470, file: !2210, line: 931, type: !157)
!13477 = !DILocation(line: 0, scope: !13470)
!13478 = !DILocation(line: 931, column: 20, scope: !13470)
!13479 = !DILocation(line: 935, column: 17, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13470, file: !2210, line: 935, column: 6)
!13481 = !DILocation(line: 935, column: 20, scope: !13480)
!13482 = !DILocation(line: 935, column: 35, scope: !13480)
!13483 = !DILocation(line: 935, column: 48, scope: !13480)
!13484 = !DILocation(line: 935, column: 6, scope: !13470)
!13485 = !DILocation(line: 936, column: 3, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13480, file: !2210, line: 935, column: 55)
!13487 = !DILocation(line: 937, column: 2, scope: !13486)
!13488 = !DILocation(line: 938, column: 1, scope: !13470)
!13489 = distinct !DISubprogram(name: "k_sched_lock", scope: !2210, file: !2210, line: 987, type: !2909, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13490)
!13490 = !{!13491, !13493}
!13491 = !DILocalVariable(name: "__i", scope: !13492, file: !2210, line: 989, type: !12272)
!13492 = distinct !DILexicalBlock(scope: !13489, file: !2210, line: 989, column: 2)
!13493 = !DILocalVariable(name: "__key", scope: !13492, file: !2210, line: 989, type: !12272)
!13494 = !DILocation(line: 0, scope: !13492)
!13495 = !DILocation(line: 0, scope: !12280, inlinedAt: !13496)
!13496 = distinct !DILocation(line: 989, column: 2, scope: !13492)
!13497 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13498)
!13498 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13496)
!13499 = !DILocation(line: 0, scope: !12289, inlinedAt: !13498)
!13500 = !DILocation(line: 992, column: 3, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13502, file: !2210, line: 989, column: 26)
!13502 = distinct !DILexicalBlock(scope: !13492, file: !2210, line: 989, column: 2)
!13503 = !DILocation(line: 0, scope: !12307, inlinedAt: !13504)
!13504 = distinct !DILocation(line: 989, column: 2, scope: !13502)
!13505 = !DILocation(line: 0, scope: !12315, inlinedAt: !13506)
!13506 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !13504)
!13507 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !13506)
!13508 = !DILocation(line: 994, column: 1, scope: !13489)
!13509 = distinct !DISubprogram(name: "z_sched_lock", scope: !11552, file: !11552, line: 251, type: !2909, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13510 = !DILocation(line: 256, column: 4, scope: !13509)
!13511 = !DILocation(line: 256, column: 19, scope: !13509)
!13512 = !DILocation(line: 256, column: 2, scope: !13509)
!13513 = !DILocation(line: 258, column: 2, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13509, file: !11552, line: 258, column: 2)
!13515 = !{i64 2155185835}
!13516 = !DILocation(line: 259, column: 1, scope: !13509)
!13517 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2210, file: !2210, line: 996, type: !2909, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13518)
!13518 = !{!13519, !13521}
!13519 = !DILocalVariable(name: "__i", scope: !13520, file: !2210, line: 998, type: !12272)
!13520 = distinct !DILexicalBlock(scope: !13517, file: !2210, line: 998, column: 2)
!13521 = !DILocalVariable(name: "__key", scope: !13520, file: !2210, line: 998, type: !12272)
!13522 = !DILocation(line: 0, scope: !13520)
!13523 = !DILocation(line: 0, scope: !12280, inlinedAt: !13524)
!13524 = distinct !DILocation(line: 998, column: 2, scope: !13520)
!13525 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13526)
!13526 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13524)
!13527 = !DILocation(line: 0, scope: !12289, inlinedAt: !13526)
!13528 = !DILocation(line: 1002, column: 5, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13530, file: !2210, line: 998, column: 26)
!13530 = distinct !DILexicalBlock(scope: !13520, file: !2210, line: 998, column: 2)
!13531 = !DILocation(line: 1002, column: 20, scope: !13529)
!13532 = !DILocation(line: 1002, column: 3, scope: !13529)
!13533 = !DILocation(line: 1003, column: 3, scope: !13529)
!13534 = !DILocation(line: 0, scope: !12307, inlinedAt: !13535)
!13535 = distinct !DILocation(line: 998, column: 2, scope: !13530)
!13536 = !DILocation(line: 0, scope: !12315, inlinedAt: !13537)
!13537 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !13535)
!13538 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !13537)
!13539 = !DILocation(line: 1011, column: 2, scope: !13517)
!13540 = !DILocation(line: 1012, column: 1, scope: !13517)
!13541 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2210, file: !2210, line: 1014, type: !12588, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13542 = !DILocation(line: 1028, column: 25, scope: !13541)
!13543 = !DILocation(line: 1028, column: 2, scope: !13541)
!13544 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2210, file: !2210, line: 1155, type: !13545, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13547)
!13545 = !DISubroutineType(types: !13546)
!13546 = !{!157, !2134, !2134}
!13547 = !{!13548, !13549, !13550, !13551, !13552}
!13548 = !DILocalVariable(name: "a", arg: 1, scope: !13544, file: !2210, line: 1155, type: !2134)
!13549 = !DILocalVariable(name: "b", arg: 2, scope: !13544, file: !2210, line: 1155, type: !2134)
!13550 = !DILocalVariable(name: "thread_a", scope: !13544, file: !2210, line: 1157, type: !2105)
!13551 = !DILocalVariable(name: "thread_b", scope: !13544, file: !2210, line: 1157, type: !2105)
!13552 = !DILocalVariable(name: "cmp", scope: !13544, file: !2210, line: 1158, type: !595)
!13553 = !DILocation(line: 0, scope: !13544)
!13554 = !DILocation(line: 1160, column: 13, scope: !13544)
!13555 = !DILocation(line: 1161, column: 13, scope: !13544)
!13556 = !DILocation(line: 1163, column: 8, scope: !13544)
!13557 = !DILocation(line: 1165, column: 10, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13544, file: !2210, line: 1165, column: 6)
!13559 = !DILocation(line: 1165, column: 6, scope: !13544)
!13560 = !DILocation(line: 1167, column: 17, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13558, file: !2210, line: 1167, column: 13)
!13562 = !DILocation(line: 1167, column: 13, scope: !13558)
!13563 = !DILocation(line: 1170, column: 25, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13561, file: !2210, line: 1169, column: 9)
!13565 = !DILocation(line: 1170, column: 52, scope: !13564)
!13566 = !DILocation(line: 1170, column: 35, scope: !13564)
!13567 = !DILocation(line: 1170, column: 3, scope: !13564)
!13568 = !DILocation(line: 0, scope: !13558)
!13569 = !DILocation(line: 1173, column: 1, scope: !13544)
!13570 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2210, file: !2210, line: 1175, type: !13571, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13586)
!13571 = !DISubroutineType(types: !13572)
!13572 = !{null, !13573, !2105}
!13573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13574, size: 32)
!13574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !13575, line: 37, size: 128, elements: !13576)
!13575 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13576 = !{!13577, !13585}
!13577 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13574, file: !13575, line: 38, baseType: !13578, size: 96)
!13578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !237, line: 83, size: 96, elements: !13579)
!13579 = !{!13580, !13581, !13584}
!13580 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13578, file: !237, line: 84, baseType: !2134, size: 32)
!13581 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13578, file: !237, line: 85, baseType: !13582, size: 32, offset: 32)
!13582 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !237, line: 81, baseType: !13583)
!13583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13545, size: 32)
!13584 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13578, file: !237, line: 86, baseType: !103, size: 32, offset: 64)
!13585 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13574, file: !13575, line: 39, baseType: !103, size: 32, offset: 96)
!13586 = !{!13587, !13588, !13589, !13590, !13599}
!13587 = !DILocalVariable(name: "pq", arg: 1, scope: !13570, file: !2210, line: 1175, type: !13573)
!13588 = !DILocalVariable(name: "thread", arg: 2, scope: !13570, file: !2210, line: 1175, type: !2105)
!13589 = !DILocalVariable(name: "t", scope: !13570, file: !2210, line: 1177, type: !2105)
!13590 = !DILocalVariable(name: "__f", scope: !13591, file: !2210, line: 1190, type: !13594)
!13591 = distinct !DILexicalBlock(scope: !13592, file: !2210, line: 1190, column: 3)
!13592 = distinct !DILexicalBlock(scope: !13593, file: !2210, line: 1189, column: 27)
!13593 = distinct !DILexicalBlock(scope: !13570, file: !2210, line: 1189, column: 6)
!13594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !237, line: 155, size: 96, elements: !13595)
!13595 = !{!13596, !13597, !13598}
!13596 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13594, file: !237, line: 156, baseType: !2205, size: 32)
!13597 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13594, file: !237, line: 157, baseType: !1755, size: 32, offset: 32)
!13598 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13594, file: !237, line: 158, baseType: !595, size: 32, offset: 64)
!13599 = !DILocalVariable(name: "n", scope: !13600, file: !2210, line: 1190, type: !2134)
!13600 = distinct !DILexicalBlock(scope: !13601, file: !2210, line: 1190, column: 3)
!13601 = distinct !DILexicalBlock(scope: !13591, file: !2210, line: 1190, column: 3)
!13602 = !DILocation(line: 0, scope: !13570)
!13603 = !DILocation(line: 1181, column: 31, scope: !13570)
!13604 = !DILocation(line: 1181, column: 45, scope: !13570)
!13605 = !DILocation(line: 1181, column: 15, scope: !13570)
!13606 = !DILocation(line: 1181, column: 25, scope: !13570)
!13607 = !DILocation(line: 1189, column: 11, scope: !13593)
!13608 = !DILocation(line: 1189, column: 7, scope: !13593)
!13609 = !DILocation(line: 1189, column: 6, scope: !13570)
!13610 = !DILocation(line: 1190, column: 3, scope: !13591)
!13611 = !DILocation(line: 1190, column: 3, scope: !13600)
!13612 = !DILocation(line: 0, scope: !13600)
!13613 = !DILocation(line: 1190, column: 3, scope: !13601)
!13614 = !DILocation(line: 1193, column: 2, scope: !13592)
!13615 = !DILocation(line: 1191, column: 42, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13601, file: !2210, line: 1190, column: 54)
!13617 = !DILocation(line: 1191, column: 12, scope: !13616)
!13618 = !DILocation(line: 1191, column: 22, scope: !13616)
!13619 = distinct !{!13619, !13610, !13620}
!13620 = !DILocation(line: 1192, column: 3, scope: !13591)
!13621 = !DILocation(line: 1195, column: 17, scope: !13570)
!13622 = !DILocation(line: 1195, column: 37, scope: !13570)
!13623 = !DILocation(line: 1195, column: 2, scope: !13570)
!13624 = !DILocation(line: 1196, column: 1, scope: !13570)
!13625 = !DISubprogram(name: "z_rb_foreach_next", scope: !237, file: !237, line: 176, type: !13626, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13626 = !DISubroutineType(types: !13627)
!13627 = !{!2134, !13628, !13629}
!13628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13578, size: 32)
!13629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13594, size: 32)
!13630 = !DISubprogram(name: "rb_insert", scope: !237, file: !237, line: 105, type: !13631, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13631 = !DISubroutineType(types: !13632)
!13632 = !{null, !13628, !2134}
!13633 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2210, file: !2210, line: 1198, type: !13571, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13634)
!13634 = !{!13635, !13636}
!13635 = !DILocalVariable(name: "pq", arg: 1, scope: !13633, file: !2210, line: 1198, type: !13573)
!13636 = !DILocalVariable(name: "thread", arg: 2, scope: !13633, file: !2210, line: 1198, type: !2105)
!13637 = !DILocation(line: 0, scope: !13633)
!13638 = !DILocation(line: 1202, column: 17, scope: !13633)
!13639 = !DILocation(line: 1202, column: 37, scope: !13633)
!13640 = !DILocation(line: 1202, column: 2, scope: !13633)
!13641 = !DILocation(line: 1204, column: 16, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13633, file: !2210, line: 1204, column: 6)
!13643 = !DILocation(line: 1204, column: 7, scope: !13642)
!13644 = !DILocation(line: 1204, column: 6, scope: !13633)
!13645 = !DILocation(line: 1205, column: 7, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13642, file: !2210, line: 1204, column: 22)
!13647 = !DILocation(line: 1205, column: 22, scope: !13646)
!13648 = !DILocation(line: 1206, column: 2, scope: !13646)
!13649 = !DILocation(line: 1207, column: 1, scope: !13633)
!13650 = !DISubprogram(name: "rb_remove", scope: !237, file: !237, line: 110, type: !13631, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13651 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2210, file: !2210, line: 1209, type: !13652, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13654)
!13652 = !DISubroutineType(types: !13653)
!13653 = !{!2105, !13573}
!13654 = !{!13655, !13656, !13657}
!13655 = !DILocalVariable(name: "pq", arg: 1, scope: !13651, file: !2210, line: 1209, type: !13573)
!13656 = !DILocalVariable(name: "thread", scope: !13651, file: !2210, line: 1211, type: !2105)
!13657 = !DILocalVariable(name: "n", scope: !13651, file: !2210, line: 1212, type: !2134)
!13658 = !DILocation(line: 0, scope: !13651)
!13659 = !DILocation(line: 1212, column: 37, scope: !13651)
!13660 = !DILocation(line: 1212, column: 21, scope: !13651)
!13661 = !DILocation(line: 1217, column: 2, scope: !13651)
!13662 = distinct !DISubprogram(name: "rb_get_min", scope: !237, file: !237, line: 115, type: !13663, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13665)
!13663 = !DISubroutineType(types: !13664)
!13664 = !{!2134, !13628}
!13665 = !{!13666}
!13666 = !DILocalVariable(name: "tree", arg: 1, scope: !13662, file: !237, line: 115, type: !13628)
!13667 = !DILocation(line: 0, scope: !13662)
!13668 = !DILocation(line: 117, column: 9, scope: !13662)
!13669 = !DILocation(line: 117, column: 2, scope: !13662)
!13670 = !DISubprogram(name: "z_rb_get_minmax", scope: !237, file: !237, line: 100, type: !13671, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !322)
!13671 = !DISubroutineType(types: !13672)
!13672 = !{!2134, !13628, !154}
!13673 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2210, file: !2210, line: 1246, type: !13674, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13684)
!13674 = !DISubroutineType(types: !13675)
!13675 = !{!2105, !13676}
!13676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13677, size: 32)
!13677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !13575, line: 53, size: 2080, elements: !13678)
!13678 = !{!13679, !13683}
!13679 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13677, file: !13575, line: 54, baseType: !13680, size: 2048)
!13680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2141, size: 2048, elements: !13681)
!13681 = !{!13682}
!13682 = !DISubrange(count: 32)
!13683 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13677, file: !13575, line: 55, baseType: !32, size: 32, offset: 2048)
!13684 = !{!13685, !13686, !13687, !13688}
!13685 = !DILocalVariable(name: "pq", arg: 1, scope: !13673, file: !2210, line: 1246, type: !13676)
!13686 = !DILocalVariable(name: "thread", scope: !13673, file: !2210, line: 1252, type: !2105)
!13687 = !DILocalVariable(name: "l", scope: !13673, file: !2210, line: 1253, type: !12483)
!13688 = !DILocalVariable(name: "n", scope: !13673, file: !2210, line: 1254, type: !2206)
!13689 = !DILocation(line: 0, scope: !13673)
!13690 = !DILocation(line: 1248, column: 11, scope: !13691)
!13691 = distinct !DILexicalBlock(scope: !13673, file: !2210, line: 1248, column: 6)
!13692 = !DILocation(line: 1248, column: 7, scope: !13691)
!13693 = !DILocation(line: 1248, column: 6, scope: !13673)
!13694 = !DILocation(line: 1253, column: 31, scope: !13673)
!13695 = !DILocation(line: 1253, column: 20, scope: !13673)
!13696 = !DILocation(line: 1254, column: 19, scope: !13673)
!13697 = !DILocation(line: 1260, column: 1, scope: !13673)
!13698 = distinct !DISubprogram(name: "z_unpend_all", scope: !2210, file: !2210, line: 1262, type: !13699, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13701)
!13699 = !DISubroutineType(types: !13700)
!13700 = !{!103, !2136}
!13701 = !{!13702, !13703, !13704}
!13702 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13698, file: !2210, line: 1262, type: !2136)
!13703 = !DILocalVariable(name: "need_sched", scope: !13698, file: !2210, line: 1264, type: !103)
!13704 = !DILocalVariable(name: "thread", scope: !13698, file: !2210, line: 1265, type: !2105)
!13705 = !DILocation(line: 0, scope: !13698)
!13706 = !DILocation(line: 1267, column: 19, scope: !13698)
!13707 = !DILocation(line: 1267, column: 41, scope: !13698)
!13708 = !DILocation(line: 1267, column: 2, scope: !13698)
!13709 = !DILocation(line: 1268, column: 3, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13698, file: !2210, line: 1267, column: 50)
!13711 = !DILocation(line: 1269, column: 3, scope: !13710)
!13712 = distinct !{!13712, !13708, !13713}
!13713 = !DILocation(line: 1271, column: 2, scope: !13698)
!13714 = !DILocation(line: 1273, column: 2, scope: !13698)
!13715 = distinct !DISubprogram(name: "z_waitq_head", scope: !11878, file: !11878, line: 52, type: !13331, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13716)
!13716 = !{!13717}
!13717 = !DILocalVariable(name: "w", arg: 1, scope: !13715, file: !11878, line: 52, type: !2136)
!13718 = !DILocation(line: 0, scope: !13715)
!13719 = !DILocation(line: 54, column: 52, scope: !13715)
!13720 = !DILocation(line: 54, column: 28, scope: !13715)
!13721 = !DILocation(line: 54, column: 9, scope: !13715)
!13722 = !DILocation(line: 54, column: 2, scope: !13715)
!13723 = distinct !DISubprogram(name: "init_ready_q", scope: !2210, file: !2210, line: 1276, type: !13724, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13731)
!13724 = !DISubroutineType(types: !13725)
!13725 = !{null, !13726}
!13726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13727, size: 32)
!13727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !247, line: 83, size: 96, elements: !13728)
!13728 = !{!13729, !13730}
!13729 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13727, file: !247, line: 86, baseType: !2105, size: 32)
!13730 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13727, file: !247, line: 90, baseType: !2141, size: 64, offset: 32)
!13731 = !{!13732}
!13732 = !DILocalVariable(name: "rq", arg: 1, scope: !13723, file: !2210, line: 1276, type: !13726)
!13733 = !DILocation(line: 0, scope: !13723)
!13734 = !DILocation(line: 1289, column: 22, scope: !13723)
!13735 = !DILocation(line: 1289, column: 2, scope: !13723)
!13736 = !DILocation(line: 1291, column: 1, scope: !13723)
!13737 = distinct !DISubprogram(name: "sys_dlist_init", scope: !221, file: !221, line: 197, type: !13738, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13740)
!13738 = !DISubroutineType(types: !13739)
!13739 = !{null, !12483}
!13740 = !{!13741}
!13741 = !DILocalVariable(name: "list", arg: 1, scope: !13737, file: !221, line: 197, type: !12483)
!13742 = !DILocation(line: 0, scope: !13737)
!13743 = !DILocation(line: 199, column: 8, scope: !13737)
!13744 = !DILocation(line: 199, column: 13, scope: !13737)
!13745 = !DILocation(line: 200, column: 8, scope: !13737)
!13746 = !DILocation(line: 200, column: 13, scope: !13737)
!13747 = !DILocation(line: 201, column: 1, scope: !13737)
!13748 = distinct !DISubprogram(name: "z_sched_init", scope: !2210, file: !2210, line: 1293, type: !2909, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13749 = !DILocation(line: 1302, column: 2, scope: !13748)
!13750 = !DILocation(line: 1306, column: 2, scope: !13748)
!13751 = !DILocation(line: 1309, column: 1, scope: !13748)
!13752 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2210, file: !2210, line: 1311, type: !13753, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13756)
!13753 = !DISubroutineType(types: !13754)
!13754 = !{!103, !13755}
!13755 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !211, line: 347, baseType: !2105)
!13756 = !{!13757}
!13757 = !DILocalVariable(name: "thread", arg: 1, scope: !13752, file: !2210, line: 1311, type: !13755)
!13758 = !DILocation(line: 0, scope: !13752)
!13759 = !DILocation(line: 1313, column: 22, scope: !13752)
!13760 = !DILocation(line: 1313, column: 9, scope: !13752)
!13761 = !DILocation(line: 1313, column: 2, scope: !13752)
!13762 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2210, file: !2210, line: 1325, type: !13763, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13765)
!13763 = !DISubroutineType(types: !13764)
!13764 = !{null, !13755, !103}
!13765 = !{!13766, !13767, !13768}
!13766 = !DILocalVariable(name: "thread", arg: 1, scope: !13762, file: !2210, line: 1325, type: !13755)
!13767 = !DILocalVariable(name: "prio", arg: 2, scope: !13762, file: !2210, line: 1325, type: !103)
!13768 = !DILocalVariable(name: "th", scope: !13762, file: !2210, line: 1334, type: !2105)
!13769 = !DILocation(line: 0, scope: !13762)
!13770 = !DILocation(line: 1336, column: 2, scope: !13762)
!13771 = !DILocation(line: 1337, column: 1, scope: !13762)
!13772 = distinct !DISubprogram(name: "k_can_yield", scope: !2210, file: !2210, line: 1384, type: !5816, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13773 = !DILocation(line: 1386, column: 11, scope: !13772)
!13774 = !DILocation(line: 1386, column: 29, scope: !13772)
!13775 = !DILocation(line: 1386, column: 32, scope: !13772)
!13776 = !DILocation(line: 1386, column: 46, scope: !13772)
!13777 = !DILocation(line: 1387, column: 28, scope: !13772)
!13778 = !DILocation(line: 1387, column: 4, scope: !13772)
!13779 = !DILocation(line: 1386, column: 2, scope: !13772)
!13780 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !307, file: !307, line: 989, type: !5816, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13781 = !DILocation(line: 993, column: 10, scope: !13780)
!13782 = !DILocation(line: 993, column: 2, scope: !13780)
!13783 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2210, file: !2210, line: 1390, type: !2909, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13784)
!13784 = !{!13785}
!13785 = !DILocalVariable(name: "key", scope: !13783, file: !2210, line: 1396, type: !12272)
!13786 = !DILocation(line: 0, scope: !12280, inlinedAt: !13787)
!13787 = distinct !DILocation(line: 1396, column: 25, scope: !13783)
!13788 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13789)
!13789 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13787)
!13790 = !DILocation(line: 0, scope: !12289, inlinedAt: !13789)
!13791 = !DILocation(line: 0, scope: !13783)
!13792 = !DILocation(line: 1400, column: 18, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13794, file: !2210, line: 1399, column: 36)
!13794 = distinct !DILexicalBlock(scope: !13783, file: !2210, line: 1398, column: 6)
!13795 = !DILocation(line: 0, scope: !12449, inlinedAt: !13796)
!13796 = distinct !DILocation(line: 1400, column: 3, scope: !13793)
!13797 = !DILocation(line: 266, column: 15, scope: !12449, inlinedAt: !13796)
!13798 = !DILocation(line: 266, column: 28, scope: !12449, inlinedAt: !13796)
!13799 = !DILocation(line: 0, scope: !12457, inlinedAt: !13800)
!13800 = distinct !DILocation(line: 268, column: 3, scope: !12461, inlinedAt: !13796)
!13801 = !DILocation(line: 234, column: 2, scope: !12457, inlinedAt: !13800)
!13802 = !DILocation(line: 1402, column: 15, scope: !13783)
!13803 = !DILocation(line: 0, scope: !12466, inlinedAt: !13804)
!13804 = distinct !DILocation(line: 1402, column: 2, scope: !13783)
!13805 = !DILocation(line: 252, column: 15, scope: !12466, inlinedAt: !13804)
!13806 = !DILocation(line: 252, column: 28, scope: !12466, inlinedAt: !13804)
!13807 = !DILocation(line: 0, scope: !12473, inlinedAt: !13808)
!13808 = distinct !DILocation(line: 254, column: 3, scope: !12477, inlinedAt: !13804)
!13809 = !DILocation(line: 0, scope: !12480, inlinedAt: !13810)
!13810 = distinct !DILocation(line: 229, column: 2, scope: !12473, inlinedAt: !13808)
!13811 = !DILocation(line: 188, column: 2, scope: !12490, inlinedAt: !13810)
!13812 = !DILocation(line: 188, column: 2, scope: !12492, inlinedAt: !13810)
!13813 = !DILocation(line: 0, scope: !12490, inlinedAt: !13810)
!13814 = !DILocation(line: 189, column: 7, scope: !12495, inlinedAt: !13810)
!13815 = !DILocation(line: 189, column: 35, scope: !12495, inlinedAt: !13810)
!13816 = !DILocation(line: 189, column: 7, scope: !12496, inlinedAt: !13810)
!13817 = !DILocation(line: 191, column: 21, scope: !12500, inlinedAt: !13810)
!13818 = !DILocation(line: 190, column: 4, scope: !12500, inlinedAt: !13810)
!13819 = !DILocation(line: 192, column: 4, scope: !12500, inlinedAt: !13810)
!13820 = distinct !{!13820, !13811, !13821}
!13821 = !DILocation(line: 194, column: 2, scope: !12490, inlinedAt: !13810)
!13822 = !DILocation(line: 196, column: 37, scope: !12480, inlinedAt: !13810)
!13823 = !DILocation(line: 196, column: 2, scope: !12480, inlinedAt: !13810)
!13824 = !DILocation(line: 197, column: 1, scope: !12480, inlinedAt: !13810)
!13825 = !DILocation(line: 1403, column: 2, scope: !13783)
!13826 = !DILocation(line: 0, scope: !12891, inlinedAt: !13827)
!13827 = distinct !DILocation(line: 1404, column: 2, scope: !13783)
!13828 = !DILocation(line: 196, column: 9, scope: !12891, inlinedAt: !13827)
!13829 = !DILocation(line: 1405, column: 1, scope: !13783)
!13830 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2210, file: !2210, line: 1459, type: !13831, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13833)
!13831 = !DISubroutineType(types: !13832)
!13832 = !{!595, !13071}
!13833 = !{!13834, !13835, !13836}
!13834 = !DILocalVariable(name: "timeout", arg: 1, scope: !13830, file: !2210, line: 1459, type: !13071)
!13835 = !DILocalVariable(name: "ticks", scope: !13830, file: !2210, line: 1461, type: !1456)
!13836 = !DILocalVariable(name: "ret", scope: !13830, file: !2210, line: 1480, type: !595)
!13837 = !DILocation(line: 0, scope: !13830)
!13838 = !DILocation(line: 1468, column: 6, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13830, file: !2210, line: 1468, column: 6)
!13840 = !DILocation(line: 1468, column: 6, scope: !13830)
!13841 = !DILocation(line: 1469, column: 20, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13839, file: !2210, line: 1468, column: 40)
!13843 = !DILocation(line: 1469, column: 3, scope: !13842)
!13844 = !DILocation(line: 1473, column: 3, scope: !13842)
!13845 = !DILocation(line: 1478, column: 10, scope: !13830)
!13846 = !DILocation(line: 1480, column: 16, scope: !13830)
!13847 = !DILocation(line: 1485, column: 1, scope: !13830)
!13848 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3079, file: !3079, line: 310, type: !13849, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13851)
!13849 = !DISubroutineType(types: !13850)
!13850 = !{null, !13755}
!13851 = !{!13852}
!13852 = !DILocalVariable(name: "thread", arg: 1, scope: !13848, file: !3079, line: 310, type: !13755)
!13853 = !DILocation(line: 0, scope: !13848)
!13854 = !DILocation(line: 319, column: 2, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13848, file: !3079, line: 319, column: 2)
!13856 = !{i64 2155104224}
!13857 = !DILocation(line: 320, column: 2, scope: !13848)
!13858 = !DILocation(line: 321, column: 1, scope: !13848)
!13859 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2210, file: !2210, line: 1415, type: !13860, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13862)
!13860 = !DISubroutineType(types: !13861)
!13861 = !{!595, !1456}
!13862 = !{!13863, !13864, !13865, !13866}
!13863 = !DILocalVariable(name: "ticks", arg: 1, scope: !13859, file: !2210, line: 1415, type: !1456)
!13864 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13859, file: !2210, line: 1418, type: !121)
!13865 = !DILocalVariable(name: "timeout", scope: !13859, file: !2210, line: 1430, type: !13071)
!13866 = !DILocalVariable(name: "key", scope: !13859, file: !2210, line: 1437, type: !12272)
!13867 = !DILocation(line: 0, scope: !13859)
!13868 = !DILocation(line: 1425, column: 12, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13859, file: !2210, line: 1425, column: 6)
!13870 = !DILocation(line: 1425, column: 6, scope: !13859)
!13871 = !DILocation(line: 1426, column: 3, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13869, file: !2210, line: 1425, column: 18)
!13873 = !DILocation(line: 1427, column: 3, scope: !13872)
!13874 = !DILocation(line: 1431, column: 24, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13859, file: !2210, line: 1431, column: 6)
!13876 = !DILocation(line: 1431, column: 6, scope: !13859)
!13877 = !DILocation(line: 1432, column: 35, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13875, file: !2210, line: 1431, column: 30)
!13879 = !DILocation(line: 1432, column: 27, scope: !13878)
!13880 = !DILocation(line: 1433, column: 2, scope: !13878)
!13881 = !DILocation(line: 1434, column: 27, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13875, file: !2210, line: 1433, column: 9)
!13883 = !DILocation(line: 0, scope: !13875)
!13884 = !DILocation(line: 0, scope: !12280, inlinedAt: !13885)
!13885 = distinct !DILocation(line: 1437, column: 25, scope: !13859)
!13886 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !13887)
!13887 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !13885)
!13888 = !DILocation(line: 0, scope: !12289, inlinedAt: !13887)
!13889 = !DILocation(line: 1440, column: 20, scope: !13859)
!13890 = !DILocation(line: 1440, column: 18, scope: !13859)
!13891 = !DILocation(line: 1442, column: 2, scope: !13859)
!13892 = !DILocation(line: 1443, column: 23, scope: !13859)
!13893 = !DILocation(line: 1443, column: 2, scope: !13859)
!13894 = !DILocation(line: 1444, column: 29, scope: !13859)
!13895 = !DILocation(line: 1444, column: 2, scope: !13859)
!13896 = !DILocation(line: 0, scope: !12891, inlinedAt: !13897)
!13897 = distinct !DILocation(line: 1446, column: 8, scope: !13859)
!13898 = !DILocation(line: 196, column: 9, scope: !12891, inlinedAt: !13897)
!13899 = !DILocation(line: 1450, column: 10, scope: !13859)
!13900 = !DILocation(line: 1450, column: 45, scope: !13859)
!13901 = !DILocation(line: 1450, column: 43, scope: !13859)
!13902 = !DILocation(line: 1451, column: 6, scope: !13859)
!13903 = !DILocation(line: 1457, column: 1, scope: !13859)
!13904 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12113, file: !12113, line: 1103, type: !12114, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13905)
!13905 = !{!13906}
!13906 = !DILocalVariable(name: "t", arg: 1, scope: !13904, file: !12113, line: 1103, type: !1308)
!13907 = !DILocation(line: 0, scope: !13904)
!13908 = !DILocation(line: 0, scope: !12327, inlinedAt: !13909)
!13909 = distinct !DILocation(line: 1106, column: 9, scope: !13904)
!13910 = !DILocation(line: 139, column: 13, scope: !13911, inlinedAt: !13909)
!13911 = distinct !DILexicalBlock(scope: !13912, file: !12113, line: 138, column: 10)
!13912 = distinct !DILexicalBlock(scope: !13913, file: !12113, line: 136, column: 7)
!13913 = distinct !DILexicalBlock(scope: !12348, file: !12113, line: 134, column: 17)
!13914 = !DILocation(line: 1106, column: 2, scope: !13904)
!13915 = distinct !DISubprogram(name: "k_yield", scope: !3079, file: !3079, line: 140, type: !2909, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13916 = !DILocation(line: 148, column: 2, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13915, file: !3079, line: 148, column: 2)
!13918 = !{i64 2155103544}
!13919 = !DILocation(line: 149, column: 2, scope: !13915)
!13920 = !DILocation(line: 150, column: 1, scope: !13915)
!13921 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2210, file: !2210, line: 1495, type: !13922, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13924)
!13922 = !DISubroutineType(types: !13923)
!13923 = !{!595, !103}
!13924 = !{!13925, !13926}
!13925 = !DILocalVariable(name: "us", arg: 1, scope: !13921, file: !2210, line: 1495, type: !103)
!13926 = !DILocalVariable(name: "ticks", scope: !13921, file: !2210, line: 1497, type: !595)
!13927 = !DILocation(line: 0, scope: !13921)
!13928 = !DILocation(line: 1501, column: 31, scope: !13921)
!13929 = !DILocation(line: 1501, column: 10, scope: !13921)
!13930 = !DILocation(line: 1502, column: 23, scope: !13921)
!13931 = !DILocation(line: 1502, column: 10, scope: !13921)
!13932 = !DILocation(line: 1506, column: 31, scope: !13921)
!13933 = !DILocation(line: 1506, column: 9, scope: !13921)
!13934 = !DILocation(line: 1506, column: 2, scope: !13921)
!13935 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12113, file: !12113, line: 571, type: !12114, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13936)
!13936 = !{!13937}
!13937 = !DILocalVariable(name: "t", arg: 1, scope: !13935, file: !12113, line: 571, type: !1308)
!13938 = !DILocation(line: 0, scope: !13935)
!13939 = !DILocation(line: 0, scope: !12327, inlinedAt: !13940)
!13940 = distinct !DILocation(line: 574, column: 9, scope: !13935)
!13941 = !DILocation(line: 135, column: 5, scope: !13913, inlinedAt: !13940)
!13942 = !DILocation(line: 139, column: 13, scope: !13911, inlinedAt: !13940)
!13943 = !DILocation(line: 574, column: 2, scope: !13935)
!13944 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12113, file: !12113, line: 1187, type: !12114, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13945)
!13945 = !{!13946}
!13946 = !DILocalVariable(name: "t", arg: 1, scope: !13944, file: !12113, line: 1187, type: !1308)
!13947 = !DILocation(line: 0, scope: !13944)
!13948 = !DILocation(line: 0, scope: !12327, inlinedAt: !13949)
!13949 = distinct !DILocation(line: 1190, column: 9, scope: !13944)
!13950 = !DILocation(line: 145, column: 13, scope: !13951, inlinedAt: !13949)
!13951 = distinct !DILexicalBlock(scope: !12345, file: !12113, line: 144, column: 10)
!13952 = !DILocation(line: 1190, column: 2, scope: !13944)
!13953 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2210, file: !2210, line: 1517, type: !13849, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13954)
!13954 = !{!13955}
!13955 = !DILocalVariable(name: "thread", arg: 1, scope: !13953, file: !2210, line: 1517, type: !13755)
!13956 = !DILocation(line: 0, scope: !13953)
!13957 = !DILocation(line: 1521, column: 6, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13953, file: !2210, line: 1521, column: 6)
!13959 = !DILocation(line: 1521, column: 6, scope: !13953)
!13960 = !DILocation(line: 1525, column: 6, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13953, file: !2210, line: 1525, column: 6)
!13962 = !DILocation(line: 1525, column: 37, scope: !13961)
!13963 = !DILocation(line: 1525, column: 6, scope: !13953)
!13964 = !DILocation(line: 1527, column: 20, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13966, file: !2210, line: 1527, column: 7)
!13966 = distinct !DILexicalBlock(scope: !13961, file: !2210, line: 1525, column: 42)
!13967 = !DILocation(line: 1527, column: 33, scope: !13965)
!13968 = !DILocation(line: 1527, column: 7, scope: !13966)
!13969 = !DILocation(line: 1532, column: 2, scope: !13953)
!13970 = !DILocation(line: 1533, column: 2, scope: !13953)
!13971 = !DILocation(line: 1031, column: 3, scope: !12924, inlinedAt: !13972)
!13972 = distinct !DILocation(line: 48, column: 10, scope: !12928, inlinedAt: !13973)
!13973 = distinct !DILocation(line: 1537, column: 7, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13953, file: !2210, line: 1537, column: 6)
!13975 = !DILocation(line: 0, scope: !12924, inlinedAt: !13972)
!13976 = !DILocation(line: 48, column: 9, scope: !12928, inlinedAt: !13973)
!13977 = !DILocation(line: 1537, column: 6, scope: !13953)
!13978 = !DILocation(line: 1538, column: 3, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13974, file: !2210, line: 1537, column: 25)
!13980 = !DILocation(line: 1539, column: 2, scope: !13979)
!13981 = !DILocation(line: 1540, column: 1, scope: !13953)
!13982 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11552, file: !11552, line: 101, type: !12398, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13983)
!13983 = !{!13984}
!13984 = !DILocalVariable(name: "thread", arg: 1, scope: !13982, file: !11552, line: 101, type: !2105)
!13985 = !DILocation(line: 0, scope: !13982)
!13986 = !DILocation(line: 103, column: 23, scope: !13982)
!13987 = !DILocation(line: 103, column: 36, scope: !13982)
!13988 = !DILocation(line: 103, column: 55, scope: !13982)
!13989 = !DILocation(line: 103, column: 2, scope: !13982)
!13990 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2210, file: !2210, line: 1567, type: !13991, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !13993)
!13991 = !DISubroutineType(types: !13992)
!13992 = !{!13755}
!13993 = !{!13994}
!13994 = !DILocalVariable(name: "ret", scope: !13990, file: !2210, line: 1577, type: !13755)
!13995 = !DILocation(line: 1577, column: 30, scope: !13990)
!13996 = !DILocation(line: 0, scope: !13990)
!13997 = !DILocation(line: 1582, column: 2, scope: !13990)
!13998 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2210, file: !2210, line: 1593, type: !6091, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !322)
!13999 = !DILocation(line: 1031, column: 3, scope: !12924, inlinedAt: !14000)
!14000 = distinct !DILocation(line: 48, column: 10, scope: !12928, inlinedAt: !14001)
!14001 = distinct !DILocation(line: 1595, column: 10, scope: !13998)
!14002 = !DILocation(line: 0, scope: !12924, inlinedAt: !14000)
!14003 = !DILocation(line: 48, column: 9, scope: !12928, inlinedAt: !14001)
!14004 = !DILocation(line: 1595, column: 27, scope: !13998)
!14005 = !DILocation(line: 1595, column: 41, scope: !13998)
!14006 = !DILocation(line: 1595, column: 30, scope: !13998)
!14007 = !DILocation(line: 1595, column: 2, scope: !13998)
!14008 = distinct !DISubprogram(name: "z_thread_abort", scope: !2210, file: !2210, line: 1725, type: !12238, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !14009)
!14009 = !{!14010, !14011}
!14010 = !DILocalVariable(name: "thread", arg: 1, scope: !14008, file: !2210, line: 1725, type: !2105)
!14011 = !DILocalVariable(name: "key", scope: !14008, file: !2210, line: 1727, type: !12272)
!14012 = !DILocation(line: 0, scope: !14008)
!14013 = !DILocation(line: 0, scope: !12280, inlinedAt: !14014)
!14014 = distinct !DILocation(line: 1727, column: 25, scope: !14008)
!14015 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !14016)
!14016 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !14014)
!14017 = !DILocation(line: 0, scope: !12289, inlinedAt: !14016)
!14018 = !DILocation(line: 1729, column: 20, scope: !14019)
!14019 = distinct !DILexicalBlock(scope: !14008, file: !2210, line: 1729, column: 6)
!14020 = !DILocation(line: 1729, column: 33, scope: !14019)
!14021 = !DILocation(line: 1729, column: 48, scope: !14019)
!14022 = !DILocation(line: 1729, column: 6, scope: !14008)
!14023 = !DILocation(line: 0, scope: !12307, inlinedAt: !14024)
!14024 = distinct !DILocation(line: 1730, column: 3, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !14019, file: !2210, line: 1729, column: 54)
!14026 = !DILocation(line: 0, scope: !12315, inlinedAt: !14027)
!14027 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !14024)
!14028 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !14027)
!14029 = !DILocation(line: 1732, column: 3, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14025, file: !2210, line: 1732, column: 3)
!14031 = !{i64 2155840954, i64 2155840970, i64 2155840996, i64 2155841024, i64 2155841044}
!14032 = !DILocation(line: 1733, column: 3, scope: !14025)
!14033 = !DILocation(line: 1736, column: 20, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14008, file: !2210, line: 1736, column: 6)
!14035 = !DILocation(line: 1736, column: 33, scope: !14034)
!14036 = !DILocation(line: 1736, column: 49, scope: !14034)
!14037 = !DILocation(line: 1736, column: 6, scope: !14008)
!14038 = !DILocation(line: 0, scope: !12307, inlinedAt: !14039)
!14039 = distinct !DILocation(line: 1737, column: 3, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14034, file: !2210, line: 1736, column: 56)
!14041 = !DILocation(line: 0, scope: !12315, inlinedAt: !14042)
!14042 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !14039)
!14043 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !14042)
!14044 = !DILocation(line: 1738, column: 3, scope: !14040)
!14045 = !DILocation(line: 1775, column: 2, scope: !14008)
!14046 = !DILocation(line: 1776, column: 16, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14008, file: !2210, line: 1776, column: 6)
!14048 = !DILocation(line: 1776, column: 13, scope: !14047)
!14049 = !DILocation(line: 1776, column: 25, scope: !14047)
!14050 = !DILocation(line: 1031, column: 3, scope: !12924, inlinedAt: !14051)
!14051 = distinct !DILocation(line: 48, column: 10, scope: !12928, inlinedAt: !14052)
!14052 = distinct !DILocation(line: 1776, column: 29, scope: !14047)
!14053 = !DILocation(line: 0, scope: !12924, inlinedAt: !14051)
!14054 = !DILocation(line: 48, column: 9, scope: !12928, inlinedAt: !14052)
!14055 = !DILocation(line: 1776, column: 6, scope: !14008)
!14056 = !DILocation(line: 0, scope: !12891, inlinedAt: !14057)
!14057 = distinct !DILocation(line: 1777, column: 3, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14047, file: !2210, line: 1776, column: 47)
!14059 = !DILocation(line: 196, column: 9, scope: !12891, inlinedAt: !14057)
!14060 = !DILocation(line: 1779, column: 2, scope: !14058)
!14061 = !DILocation(line: 0, scope: !12307, inlinedAt: !14062)
!14062 = distinct !DILocation(line: 1780, column: 2, scope: !14008)
!14063 = !DILocation(line: 0, scope: !12315, inlinedAt: !14064)
!14064 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !14062)
!14065 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !14064)
!14066 = !DILocation(line: 1781, column: 1, scope: !14008)
!14067 = distinct !DISubprogram(name: "end_thread", scope: !2210, file: !2210, line: 1690, type: !12238, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !14068)
!14068 = !{!14069}
!14069 = !DILocalVariable(name: "thread", arg: 1, scope: !14067, file: !2210, line: 1690, type: !2105)
!14070 = !DILocation(line: 0, scope: !14067)
!14071 = !DILocation(line: 1695, column: 20, scope: !14072)
!14072 = distinct !DILexicalBlock(scope: !14067, file: !2210, line: 1695, column: 6)
!14073 = !DILocation(line: 1695, column: 33, scope: !14072)
!14074 = !DILocation(line: 1695, column: 49, scope: !14072)
!14075 = !DILocation(line: 1695, column: 6, scope: !14067)
!14076 = !DILocation(line: 1697, column: 29, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14072, file: !2210, line: 1695, column: 56)
!14078 = !DILocation(line: 1698, column: 7, scope: !14079)
!14079 = distinct !DILexicalBlock(scope: !14077, file: !2210, line: 1698, column: 7)
!14080 = !DILocation(line: 1698, column: 7, scope: !14077)
!14081 = !DILocation(line: 0, scope: !12449, inlinedAt: !14082)
!14082 = distinct !DILocation(line: 1699, column: 4, scope: !14083)
!14083 = distinct !DILexicalBlock(scope: !14079, file: !2210, line: 1698, column: 35)
!14084 = !DILocation(line: 266, column: 28, scope: !12449, inlinedAt: !14082)
!14085 = !DILocation(line: 0, scope: !12457, inlinedAt: !14086)
!14086 = distinct !DILocation(line: 268, column: 3, scope: !12461, inlinedAt: !14082)
!14087 = !DILocation(line: 234, column: 2, scope: !12457, inlinedAt: !14086)
!14088 = !DILocation(line: 1700, column: 3, scope: !14083)
!14089 = !DILocation(line: 1701, column: 20, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14077, file: !2210, line: 1701, column: 7)
!14091 = !DILocation(line: 1701, column: 30, scope: !14090)
!14092 = !DILocation(line: 1701, column: 7, scope: !14077)
!14093 = !DILocation(line: 1702, column: 4, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !14090, file: !2210, line: 1701, column: 39)
!14095 = !DILocation(line: 1703, column: 3, scope: !14094)
!14096 = !DILocation(line: 1704, column: 9, scope: !14077)
!14097 = !DILocation(line: 1705, column: 23, scope: !14077)
!14098 = !DILocation(line: 1705, column: 3, scope: !14077)
!14099 = !DILocation(line: 1706, column: 3, scope: !14077)
!14100 = !DILocation(line: 1722, column: 2, scope: !14077)
!14101 = !DILocation(line: 1723, column: 1, scope: !14067)
!14102 = distinct !DISubprogram(name: "unpend_all", scope: !2210, file: !2210, line: 1674, type: !14103, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !14105)
!14103 = !DISubroutineType(types: !14104)
!14104 = !{null, !2136}
!14105 = !{!14106, !14107}
!14106 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14102, file: !2210, line: 1674, type: !2136)
!14107 = !DILocalVariable(name: "thread", scope: !14102, file: !2210, line: 1676, type: !2105)
!14108 = !DILocation(line: 0, scope: !14102)
!14109 = !DILocation(line: 1678, column: 19, scope: !14102)
!14110 = !DILocation(line: 1678, column: 41, scope: !14102)
!14111 = !DILocation(line: 1678, column: 2, scope: !14102)
!14112 = !DILocation(line: 1679, column: 3, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14102, file: !2210, line: 1678, column: 50)
!14114 = !DILocation(line: 1680, column: 9, scope: !14113)
!14115 = !DILocalVariable(name: "thread", arg: 1, scope: !14116, file: !11572, line: 65, type: !2105)
!14116 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11572, file: !11572, line: 65, type: !14117, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !14119)
!14117 = !DISubroutineType(types: !14118)
!14118 = !{null, !2105, !32}
!14119 = !{!14115, !14120}
!14120 = !DILocalVariable(name: "value", arg: 2, scope: !14116, file: !11572, line: 65, type: !32)
!14121 = !DILocation(line: 0, scope: !14116, inlinedAt: !14122)
!14122 = distinct !DILocation(line: 1681, column: 3, scope: !14113)
!14123 = !DILocation(line: 67, column: 15, scope: !14116, inlinedAt: !14122)
!14124 = !DILocation(line: 67, column: 33, scope: !14116, inlinedAt: !14122)
!14125 = !DILocation(line: 1682, column: 3, scope: !14113)
!14126 = distinct !{!14126, !14111, !14127}
!14127 = !DILocation(line: 1683, column: 2, scope: !14102)
!14128 = !DILocation(line: 1684, column: 1, scope: !14102)
!14129 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2210, file: !2210, line: 1794, type: !14130, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !14132)
!14130 = !DISubroutineType(types: !14131)
!14131 = !{!103, !2105, !13071}
!14132 = !{!14133, !14134, !14135, !14136}
!14133 = !DILocalVariable(name: "thread", arg: 1, scope: !14129, file: !2210, line: 1794, type: !2105)
!14134 = !DILocalVariable(name: "timeout", arg: 2, scope: !14129, file: !2210, line: 1794, type: !13071)
!14135 = !DILocalVariable(name: "key", scope: !14129, file: !2210, line: 1796, type: !12272)
!14136 = !DILocalVariable(name: "ret", scope: !14129, file: !2210, line: 1797, type: !103)
!14137 = !DILocation(line: 0, scope: !14129)
!14138 = !DILocation(line: 0, scope: !12280, inlinedAt: !14139)
!14139 = distinct !DILocation(line: 1796, column: 25, scope: !14129)
!14140 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !14141)
!14141 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !14139)
!14142 = !DILocation(line: 0, scope: !12289, inlinedAt: !14141)
!14143 = !DILocation(line: 1801, column: 20, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14129, file: !2210, line: 1801, column: 6)
!14145 = !DILocation(line: 1801, column: 33, scope: !14144)
!14146 = !DILocation(line: 1801, column: 49, scope: !14144)
!14147 = !DILocation(line: 1801, column: 6, scope: !14129)
!14148 = !DILocation(line: 1803, column: 13, scope: !14149)
!14149 = distinct !DILexicalBlock(scope: !14144, file: !2210, line: 1803, column: 13)
!14150 = !DILocation(line: 1803, column: 13, scope: !14144)
!14151 = !DILocation(line: 1805, column: 24, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14149, file: !2210, line: 1805, column: 13)
!14153 = !DILocation(line: 1805, column: 21, scope: !14152)
!14154 = !DILocation(line: 1805, column: 34, scope: !14152)
!14155 = !DILocation(line: 1806, column: 20, scope: !14152)
!14156 = !DILocation(line: 1806, column: 44, scope: !14152)
!14157 = !DILocation(line: 1806, column: 30, scope: !14152)
!14158 = !DILocation(line: 1805, column: 13, scope: !14149)
!14159 = !DILocation(line: 1810, column: 42, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14152, file: !2210, line: 1808, column: 9)
!14161 = !DILocation(line: 1810, column: 3, scope: !14160)
!14162 = !DILocation(line: 1811, column: 22, scope: !14160)
!14163 = !DILocation(line: 1811, column: 3, scope: !14160)
!14164 = !DILocation(line: 0, scope: !12891, inlinedAt: !14165)
!14165 = distinct !DILocation(line: 1814, column: 9, scope: !14160)
!14166 = !DILocation(line: 196, column: 9, scope: !12891, inlinedAt: !14165)
!14167 = !DILocation(line: 1817, column: 3, scope: !14160)
!14168 = !DILocation(line: 0, scope: !14144)
!14169 = !DILocation(line: 0, scope: !12307, inlinedAt: !14170)
!14170 = distinct !DILocation(line: 1822, column: 2, scope: !14129)
!14171 = !DILocation(line: 0, scope: !12315, inlinedAt: !14172)
!14172 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !14170)
!14173 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !14172)
!14174 = !DILocation(line: 1823, column: 2, scope: !14129)
!14175 = !DILocation(line: 1824, column: 1, scope: !14129)
!14176 = distinct !DISubprogram(name: "z_sched_wake", scope: !2210, file: !2210, line: 1882, type: !14177, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !14179)
!14177 = !DISubroutineType(types: !14178)
!14178 = !{!157, !2136, !103, !102}
!14179 = !{!14180, !14181, !14182, !14183, !14184, !14185, !14187}
!14180 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14176, file: !2210, line: 1882, type: !2136)
!14181 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14176, file: !2210, line: 1882, type: !103)
!14182 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14176, file: !2210, line: 1882, type: !102)
!14183 = !DILocalVariable(name: "thread", scope: !14176, file: !2210, line: 1884, type: !2105)
!14184 = !DILocalVariable(name: "ret", scope: !14176, file: !2210, line: 1885, type: !157)
!14185 = !DILocalVariable(name: "__i", scope: !14186, file: !2210, line: 1887, type: !12272)
!14186 = distinct !DILexicalBlock(scope: !14176, file: !2210, line: 1887, column: 2)
!14187 = !DILocalVariable(name: "__key", scope: !14186, file: !2210, line: 1887, type: !12272)
!14188 = !DILocation(line: 0, scope: !14176)
!14189 = !DILocation(line: 0, scope: !14186)
!14190 = !DILocation(line: 0, scope: !12280, inlinedAt: !14191)
!14191 = distinct !DILocation(line: 1887, column: 2, scope: !14186)
!14192 = !DILocation(line: 55, column: 2, scope: !12289, inlinedAt: !14193)
!14193 = distinct !DILocation(line: 145, column: 10, scope: !12280, inlinedAt: !14191)
!14194 = !DILocation(line: 0, scope: !12289, inlinedAt: !14193)
!14195 = !DILocation(line: 1888, column: 12, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14197, file: !2210, line: 1887, column: 26)
!14197 = distinct !DILexicalBlock(scope: !14186, file: !2210, line: 1887, column: 2)
!14198 = !DILocation(line: 1890, column: 14, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14196, file: !2210, line: 1890, column: 7)
!14200 = !DILocation(line: 1890, column: 7, scope: !14196)
!14201 = !DILocalVariable(name: "thread", arg: 1, scope: !14202, file: !14203, line: 134, type: !2105)
!14202 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14203, file: !14203, line: 134, type: !14204, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !14206)
!14203 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14204 = !DISubroutineType(types: !14205)
!14205 = !{null, !2105, !32, !102}
!14206 = !{!14201, !14207, !14208}
!14207 = !DILocalVariable(name: "value", arg: 2, scope: !14202, file: !14203, line: 135, type: !32)
!14208 = !DILocalVariable(name: "data", arg: 3, scope: !14202, file: !14203, line: 136, type: !102)
!14209 = !DILocation(line: 0, scope: !14202, inlinedAt: !14210)
!14210 = distinct !DILocation(line: 1891, column: 4, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14199, file: !2210, line: 1890, column: 23)
!14212 = !DILocation(line: 0, scope: !14116, inlinedAt: !14213)
!14213 = distinct !DILocation(line: 138, column: 2, scope: !14202, inlinedAt: !14210)
!14214 = !DILocation(line: 67, column: 15, scope: !14116, inlinedAt: !14213)
!14215 = !DILocation(line: 67, column: 33, scope: !14116, inlinedAt: !14213)
!14216 = !DILocation(line: 139, column: 15, scope: !14202, inlinedAt: !14210)
!14217 = !DILocation(line: 139, column: 25, scope: !14202, inlinedAt: !14210)
!14218 = !DILocation(line: 1894, column: 4, scope: !14211)
!14219 = !DILocation(line: 1895, column: 10, scope: !14211)
!14220 = !DILocation(line: 1896, column: 4, scope: !14211)
!14221 = !DILocation(line: 1898, column: 3, scope: !14211)
!14222 = !DILocation(line: 0, scope: !12307, inlinedAt: !14223)
!14223 = distinct !DILocation(line: 1887, column: 2, scope: !14197)
!14224 = !DILocation(line: 0, scope: !12315, inlinedAt: !14225)
!14225 = distinct !DILocation(line: 215, column: 2, scope: !12307, inlinedAt: !14223)
!14226 = !DILocation(line: 95, column: 2, scope: !12315, inlinedAt: !14225)
!14227 = !DILocation(line: 1901, column: 2, scope: !14176)
!14228 = distinct !DISubprogram(name: "z_sched_wait", scope: !2210, file: !2210, line: 1904, type: !14229, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2102, retainedNodes: !14232)
!14229 = !DISubroutineType(types: !14230)
!14230 = !{!103, !12283, !12272, !2136, !13071, !14231}
!14231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!14232 = !{!14233, !14234, !14235, !14236, !14237, !14238}
!14233 = !DILocalVariable(name: "lock", arg: 1, scope: !14228, file: !2210, line: 1904, type: !12283)
!14234 = !DILocalVariable(name: "key", arg: 2, scope: !14228, file: !2210, line: 1904, type: !12272)
!14235 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14228, file: !2210, line: 1905, type: !2136)
!14236 = !DILocalVariable(name: "timeout", arg: 4, scope: !14228, file: !2210, line: 1905, type: !13071)
!14237 = !DILocalVariable(name: "data", arg: 5, scope: !14228, file: !2210, line: 1905, type: !14231)
!14238 = !DILocalVariable(name: "ret", scope: !14228, file: !2210, line: 1907, type: !103)
!14239 = !DILocation(line: 0, scope: !14228)
!14240 = !DILocation(line: 1907, column: 12, scope: !14228)
!14241 = !DILocation(line: 1909, column: 11, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14228, file: !2210, line: 1909, column: 6)
!14243 = !DILocation(line: 1909, column: 6, scope: !14228)
!14244 = !DILocation(line: 1910, column: 11, scope: !14245)
!14245 = distinct !DILexicalBlock(scope: !14242, file: !2210, line: 1909, column: 20)
!14246 = !DILocation(line: 1910, column: 26, scope: !14245)
!14247 = !DILocation(line: 1910, column: 9, scope: !14245)
!14248 = !DILocation(line: 1911, column: 2, scope: !14245)
!14249 = !DILocation(line: 1912, column: 2, scope: !14228)
!14250 = distinct !DISubprogram(name: "z_data_copy", scope: !14251, file: !14251, line: 22, type: !2909, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2892, retainedNodes: !322)
!14251 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14252 = !DILocation(line: 24, column: 2, scope: !14250)
!14253 = !DILocation(line: 27, column: 2, scope: !14250)
!14254 = !DILocation(line: 71, column: 1, scope: !14250)
!14255 = distinct !DISubprogram(name: "z_add_timeout", scope: !2247, file: !2247, line: 88, type: !14256, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14262)
!14256 = !DISubroutineType(types: !14257)
!14257 = !{null, !2220, !2239, !14258}
!14258 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1457, line: 67, baseType: !14259)
!14259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1457, line: 65, size: 64, elements: !14260)
!14260 = !{!14261}
!14261 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14259, file: !1457, line: 66, baseType: !1456, size: 64)
!14262 = !{!14263, !14264, !14265, !14266, !14272, !14273, !14276, !14279}
!14263 = !DILocalVariable(name: "to", arg: 1, scope: !14255, file: !2247, line: 88, type: !2220)
!14264 = !DILocalVariable(name: "fn", arg: 2, scope: !14255, file: !2247, line: 88, type: !2239)
!14265 = !DILocalVariable(name: "timeout", arg: 3, scope: !14255, file: !2247, line: 89, type: !14258)
!14266 = !DILocalVariable(name: "__i", scope: !14267, file: !2247, line: 102, type: !14268)
!14267 = distinct !DILexicalBlock(scope: !14255, file: !2247, line: 102, column: 2)
!14268 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !321, line: 106, baseType: !14269)
!14269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !321, line: 32, size: 32, elements: !14270)
!14270 = !{!14271}
!14271 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14269, file: !321, line: 33, baseType: !103, size: 32)
!14272 = !DILocalVariable(name: "__key", scope: !14267, file: !2247, line: 102, type: !14268)
!14273 = !DILocalVariable(name: "t", scope: !14274, file: !2247, line: 103, type: !2220)
!14274 = distinct !DILexicalBlock(scope: !14275, file: !2247, line: 102, column: 24)
!14275 = distinct !DILexicalBlock(scope: !14267, file: !2247, line: 102, column: 2)
!14276 = !DILocalVariable(name: "ticks", scope: !14277, file: !2247, line: 107, type: !1456)
!14277 = distinct !DILexicalBlock(scope: !14278, file: !2247, line: 106, column: 39)
!14278 = distinct !DILexicalBlock(scope: !14274, file: !2247, line: 105, column: 7)
!14279 = !DILocalVariable(name: "next_time", scope: !14280, file: !2247, line: 137, type: !595)
!14280 = distinct !DILexicalBlock(scope: !14281, file: !2247, line: 127, column: 22)
!14281 = distinct !DILexicalBlock(scope: !14274, file: !2247, line: 127, column: 7)
!14282 = !DILocation(line: 0, scope: !14255)
!14283 = !DILocation(line: 91, column: 6, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14255, file: !2247, line: 91, column: 6)
!14285 = !DILocation(line: 91, column: 6, scope: !14255)
!14286 = !DILocation(line: 100, column: 6, scope: !14255)
!14287 = !DILocation(line: 100, column: 9, scope: !14255)
!14288 = !DILocation(line: 0, scope: !14267)
!14289 = !DILocalVariable(name: "l", arg: 1, scope: !14290, file: !321, line: 136, type: !14293)
!14290 = distinct !DISubprogram(name: "k_spin_lock", scope: !321, file: !321, line: 136, type: !14291, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14294)
!14291 = !DISubroutineType(types: !14292)
!14292 = !{!14268, !14293}
!14293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!14294 = !{!14289, !14295}
!14295 = !DILocalVariable(name: "k", scope: !14290, file: !321, line: 139, type: !14268)
!14296 = !DILocation(line: 0, scope: !14290, inlinedAt: !14297)
!14297 = distinct !DILocation(line: 102, column: 2, scope: !14267)
!14298 = !DILocation(line: 55, column: 2, scope: !14299, inlinedAt: !14303)
!14299 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4847, file: !4847, line: 42, type: !4848, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14300)
!14300 = !{!14301, !14302}
!14301 = !DILocalVariable(name: "key", scope: !14299, file: !4847, line: 44, type: !32)
!14302 = !DILocalVariable(name: "tmp", scope: !14299, file: !4847, line: 53, type: !32)
!14303 = distinct !DILocation(line: 145, column: 10, scope: !14290, inlinedAt: !14297)
!14304 = !{i64 2283719}
!14305 = !DILocation(line: 0, scope: !14299, inlinedAt: !14303)
!14306 = !DILocation(line: 106, column: 33, scope: !14278)
!14307 = !DILocation(line: 105, column: 7, scope: !14274)
!14308 = !DILocation(line: 107, column: 50, scope: !14277)
!14309 = !DILocation(line: 107, column: 48, scope: !14277)
!14310 = !DILocation(line: 0, scope: !14277)
!14311 = !DILocation(line: 109, column: 17, scope: !14277)
!14312 = !DILocation(line: 110, column: 3, scope: !14277)
!14313 = !DILocation(line: 111, column: 31, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14278, file: !2247, line: 110, column: 10)
!14315 = !DILocation(line: 111, column: 37, scope: !14314)
!14316 = !DILocation(line: 111, column: 35, scope: !14314)
!14317 = !DILocation(line: 0, scope: !14278)
!14318 = !DILocation(line: 109, column: 8, scope: !14277)
!14319 = !DILocation(line: 109, column: 15, scope: !14277)
!14320 = !DILocation(line: 114, column: 12, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14274, file: !2247, line: 114, column: 3)
!14322 = !DILocation(line: 0, scope: !14274)
!14323 = !DILocation(line: 114, column: 3, scope: !14321)
!14324 = !DILocation(line: 115, column: 24, scope: !14325)
!14325 = distinct !DILexicalBlock(scope: !14326, file: !2247, line: 115, column: 8)
!14326 = distinct !DILexicalBlock(scope: !14327, file: !2247, line: 114, column: 45)
!14327 = distinct !DILexicalBlock(scope: !14321, file: !2247, line: 114, column: 3)
!14328 = !DILocation(line: 115, column: 11, scope: !14325)
!14329 = !DILocation(line: 115, column: 18, scope: !14325)
!14330 = !DILocation(line: 115, column: 8, scope: !14326)
!14331 = !DILocation(line: 116, column: 15, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14325, file: !2247, line: 115, column: 32)
!14333 = !DILocation(line: 117, column: 26, scope: !14332)
!14334 = !DILocation(line: 117, column: 37, scope: !14332)
!14335 = !DILocation(line: 117, column: 5, scope: !14332)
!14336 = !DILocation(line: 123, column: 7, scope: !14274)
!14337 = !DILocation(line: 120, column: 15, scope: !14326)
!14338 = !DILocation(line: 114, column: 36, scope: !14327)
!14339 = distinct !{!14339, !14323, !14340}
!14340 = !DILocation(line: 121, column: 3, scope: !14321)
!14341 = !DILocation(line: 124, column: 41, scope: !14342)
!14342 = distinct !DILexicalBlock(scope: !14343, file: !2247, line: 123, column: 18)
!14343 = distinct !DILexicalBlock(scope: !14274, file: !2247, line: 123, column: 7)
!14344 = !DILocation(line: 124, column: 4, scope: !14342)
!14345 = !DILocation(line: 125, column: 3, scope: !14342)
!14346 = !DILocation(line: 127, column: 13, scope: !14281)
!14347 = !DILocation(line: 127, column: 10, scope: !14281)
!14348 = !DILocation(line: 127, column: 7, scope: !14274)
!14349 = !DILocation(line: 137, column: 24, scope: !14280)
!14350 = !DILocation(line: 0, scope: !14280)
!14351 = !DILocation(line: 139, column: 18, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14280, file: !2247, line: 139, column: 8)
!14353 = !DILocation(line: 139, column: 23, scope: !14352)
!14354 = !DILocation(line: 141, column: 5, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14352, file: !2247, line: 140, column: 48)
!14356 = !DILocation(line: 142, column: 4, scope: !14355)
!14357 = !DILocalVariable(name: "key", arg: 2, scope: !14358, file: !321, line: 190, type: !14268)
!14358 = distinct !DISubprogram(name: "k_spin_unlock", scope: !321, file: !321, line: 189, type: !14359, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14361)
!14359 = !DISubroutineType(types: !14360)
!14360 = !{null, !14293, !14268}
!14361 = !{!14362, !14357}
!14362 = !DILocalVariable(name: "l", arg: 1, scope: !14358, file: !321, line: 189, type: !14293)
!14363 = !DILocation(line: 0, scope: !14358, inlinedAt: !14364)
!14364 = distinct !DILocation(line: 102, column: 2, scope: !14275)
!14365 = !DILocalVariable(name: "key", arg: 1, scope: !14366, file: !4847, line: 84, type: !32)
!14366 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4847, file: !4847, line: 84, type: !4858, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14367)
!14367 = !{!14365}
!14368 = !DILocation(line: 0, scope: !14366, inlinedAt: !14369)
!14369 = distinct !DILocation(line: 215, column: 2, scope: !14358, inlinedAt: !14364)
!14370 = !DILocation(line: 95, column: 2, scope: !14366, inlinedAt: !14369)
!14371 = !{i64 2284536}
!14372 = !DILocation(line: 148, column: 1, scope: !14255)
!14373 = distinct !DISubprogram(name: "elapsed", scope: !2247, file: !2247, line: 62, type: !14374, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14374 = !DISubroutineType(types: !14375)
!14375 = !{!595}
!14376 = !DILocation(line: 64, column: 9, scope: !14373)
!14377 = !DILocation(line: 64, column: 28, scope: !14373)
!14378 = !DILocation(line: 64, column: 35, scope: !14373)
!14379 = !DILocation(line: 64, column: 2, scope: !14373)
!14380 = distinct !DISubprogram(name: "first", scope: !2247, file: !2247, line: 39, type: !14381, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14383)
!14381 = !DISubroutineType(types: !14382)
!14382 = !{!2220}
!14383 = !{!14384}
!14384 = !DILocalVariable(name: "t", scope: !14380, file: !2247, line: 41, type: !14385)
!14385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!14386 = !DILocation(line: 41, column: 19, scope: !14380)
!14387 = !DILocation(line: 0, scope: !14380)
!14388 = !DILocation(line: 43, column: 9, scope: !14380)
!14389 = !DILocation(line: 43, column: 2, scope: !14380)
!14390 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !221, file: !221, line: 443, type: !14391, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14393)
!14391 = !DISubroutineType(types: !14392)
!14392 = !{null, !14385, !14385}
!14393 = !{!14394, !14395, !14396}
!14394 = !DILocalVariable(name: "successor", arg: 1, scope: !14390, file: !221, line: 443, type: !14385)
!14395 = !DILocalVariable(name: "node", arg: 2, scope: !14390, file: !221, line: 443, type: !14385)
!14396 = !DILocalVariable(name: "prev", scope: !14390, file: !221, line: 445, type: !14397)
!14397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14385)
!14398 = !DILocation(line: 0, scope: !14390)
!14399 = !DILocation(line: 445, column: 39, scope: !14390)
!14400 = !DILocation(line: 447, column: 8, scope: !14390)
!14401 = !DILocation(line: 447, column: 13, scope: !14390)
!14402 = !DILocation(line: 448, column: 8, scope: !14390)
!14403 = !DILocation(line: 448, column: 13, scope: !14390)
!14404 = !DILocation(line: 449, column: 8, scope: !14390)
!14405 = !DILocation(line: 449, column: 13, scope: !14390)
!14406 = !DILocation(line: 450, column: 18, scope: !14390)
!14407 = !DILocation(line: 451, column: 1, scope: !14390)
!14408 = distinct !DISubprogram(name: "next", scope: !2247, file: !2247, line: 46, type: !14409, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14411)
!14409 = !DISubroutineType(types: !14410)
!14410 = !{!2220, !2220}
!14411 = !{!14412, !14413}
!14412 = !DILocalVariable(name: "t", arg: 1, scope: !14408, file: !2247, line: 46, type: !2220)
!14413 = !DILocalVariable(name: "n", scope: !14408, file: !2247, line: 48, type: !14385)
!14414 = !DILocation(line: 0, scope: !14408)
!14415 = !DILocation(line: 48, column: 58, scope: !14408)
!14416 = !DILocation(line: 48, column: 19, scope: !14408)
!14417 = !DILocation(line: 50, column: 9, scope: !14408)
!14418 = !DILocation(line: 50, column: 2, scope: !14408)
!14419 = distinct !DISubprogram(name: "sys_dlist_append", scope: !221, file: !221, line: 404, type: !14420, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14423)
!14420 = !DISubroutineType(types: !14421)
!14421 = !{null, !14422, !14385}
!14422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!14423 = !{!14424, !14425, !14426}
!14424 = !DILocalVariable(name: "list", arg: 1, scope: !14419, file: !221, line: 404, type: !14422)
!14425 = !DILocalVariable(name: "node", arg: 2, scope: !14419, file: !221, line: 404, type: !14385)
!14426 = !DILocalVariable(name: "tail", scope: !14419, file: !221, line: 406, type: !14397)
!14427 = !DILocation(line: 0, scope: !14419)
!14428 = !DILocation(line: 406, column: 34, scope: !14419)
!14429 = !DILocation(line: 408, column: 8, scope: !14419)
!14430 = !DILocation(line: 408, column: 13, scope: !14419)
!14431 = !DILocation(line: 409, column: 8, scope: !14419)
!14432 = !DILocation(line: 409, column: 13, scope: !14419)
!14433 = !DILocation(line: 411, column: 8, scope: !14419)
!14434 = !DILocation(line: 411, column: 13, scope: !14419)
!14435 = !DILocation(line: 412, column: 13, scope: !14419)
!14436 = !DILocation(line: 413, column: 1, scope: !14419)
!14437 = distinct !DISubprogram(name: "next_timeout", scope: !2247, file: !2247, line: 67, type: !14374, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14438)
!14438 = !{!14439, !14440, !14441}
!14439 = !DILocalVariable(name: "to", scope: !14437, file: !2247, line: 69, type: !2220)
!14440 = !DILocalVariable(name: "ticks_elapsed", scope: !14437, file: !2247, line: 70, type: !595)
!14441 = !DILocalVariable(name: "ret", scope: !14437, file: !2247, line: 71, type: !595)
!14442 = !DILocation(line: 69, column: 24, scope: !14437)
!14443 = !DILocation(line: 0, scope: !14437)
!14444 = !DILocation(line: 70, column: 26, scope: !14437)
!14445 = !DILocation(line: 73, column: 10, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14437, file: !2247, line: 73, column: 6)
!14447 = !DILocation(line: 73, column: 19, scope: !14446)
!14448 = !DILocation(line: 74, column: 21, scope: !14446)
!14449 = !DILocation(line: 74, column: 30, scope: !14446)
!14450 = !DILocation(line: 74, column: 28, scope: !14446)
!14451 = !DILocation(line: 74, column: 45, scope: !14446)
!14452 = !DILocation(line: 73, column: 6, scope: !14437)
!14453 = !DILocation(line: 77, column: 9, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14446, file: !2247, line: 76, column: 9)
!14455 = !DILocation(line: 0, scope: !14446)
!14456 = !DILocation(line: 81, column: 20, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14437, file: !2247, line: 81, column: 6)
!14458 = !DILocation(line: 81, column: 6, scope: !14457)
!14459 = !DILocation(line: 81, column: 32, scope: !14457)
!14460 = !DILocation(line: 85, column: 2, scope: !14437)
!14461 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !221, file: !221, line: 341, type: !14462, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14464)
!14462 = !DISubroutineType(types: !14463)
!14463 = !{!14385, !14422, !14385}
!14464 = !{!14465, !14466}
!14465 = !DILocalVariable(name: "list", arg: 1, scope: !14461, file: !221, line: 341, type: !14422)
!14466 = !DILocalVariable(name: "node", arg: 2, scope: !14461, file: !221, line: 342, type: !14385)
!14467 = !DILocation(line: 0, scope: !14461)
!14468 = !DILocation(line: 344, column: 15, scope: !14461)
!14469 = !DILocation(line: 344, column: 9, scope: !14461)
!14470 = !DILocation(line: 344, column: 26, scope: !14461)
!14471 = !DILocation(line: 344, column: 2, scope: !14461)
!14472 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !221, file: !221, line: 325, type: !14462, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14473)
!14473 = !{!14474, !14475}
!14474 = !DILocalVariable(name: "list", arg: 1, scope: !14472, file: !221, line: 325, type: !14422)
!14475 = !DILocalVariable(name: "node", arg: 2, scope: !14472, file: !221, line: 326, type: !14385)
!14476 = !DILocation(line: 0, scope: !14472)
!14477 = !DILocation(line: 328, column: 24, scope: !14472)
!14478 = !DILocation(line: 328, column: 15, scope: !14472)
!14479 = !DILocation(line: 328, column: 9, scope: !14472)
!14480 = !DILocation(line: 328, column: 45, scope: !14472)
!14481 = !DILocation(line: 328, column: 2, scope: !14472)
!14482 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !221, file: !221, line: 294, type: !14483, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14485)
!14483 = !DISubroutineType(types: !14484)
!14484 = !{!14385, !14422}
!14485 = !{!14486}
!14486 = !DILocalVariable(name: "list", arg: 1, scope: !14482, file: !221, line: 294, type: !14422)
!14487 = !DILocation(line: 0, scope: !14482)
!14488 = !DILocation(line: 296, column: 9, scope: !14482)
!14489 = !DILocation(line: 296, column: 2, scope: !14482)
!14490 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !221, file: !221, line: 266, type: !14491, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14493)
!14491 = !DISubroutineType(types: !14492)
!14492 = !{!157, !14422}
!14493 = !{!14494}
!14494 = !DILocalVariable(name: "list", arg: 1, scope: !14490, file: !221, line: 266, type: !14422)
!14495 = !DILocation(line: 0, scope: !14490)
!14496 = !DILocation(line: 268, column: 15, scope: !14490)
!14497 = !DILocation(line: 268, column: 20, scope: !14490)
!14498 = !DILocation(line: 268, column: 2, scope: !14490)
!14499 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2247, file: !2247, line: 150, type: !14500, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14502)
!14500 = !DISubroutineType(types: !14501)
!14501 = !{!103, !2220}
!14502 = !{!14503, !14504, !14505, !14507}
!14503 = !DILocalVariable(name: "to", arg: 1, scope: !14499, file: !2247, line: 150, type: !2220)
!14504 = !DILocalVariable(name: "ret", scope: !14499, file: !2247, line: 152, type: !103)
!14505 = !DILocalVariable(name: "__i", scope: !14506, file: !2247, line: 154, type: !14268)
!14506 = distinct !DILexicalBlock(scope: !14499, file: !2247, line: 154, column: 2)
!14507 = !DILocalVariable(name: "__key", scope: !14506, file: !2247, line: 154, type: !14268)
!14508 = !DILocation(line: 0, scope: !14499)
!14509 = !DILocation(line: 0, scope: !14506)
!14510 = !DILocation(line: 0, scope: !14290, inlinedAt: !14511)
!14511 = distinct !DILocation(line: 154, column: 2, scope: !14506)
!14512 = !DILocation(line: 55, column: 2, scope: !14299, inlinedAt: !14513)
!14513 = distinct !DILocation(line: 145, column: 10, scope: !14290, inlinedAt: !14511)
!14514 = !DILocation(line: 0, scope: !14299, inlinedAt: !14513)
!14515 = !DILocation(line: 155, column: 7, scope: !14516)
!14516 = distinct !DILexicalBlock(scope: !14517, file: !2247, line: 155, column: 7)
!14517 = distinct !DILexicalBlock(scope: !14518, file: !2247, line: 154, column: 24)
!14518 = distinct !DILexicalBlock(scope: !14506, file: !2247, line: 154, column: 2)
!14519 = !DILocation(line: 155, column: 7, scope: !14517)
!14520 = !DILocation(line: 156, column: 4, scope: !14521)
!14521 = distinct !DILexicalBlock(scope: !14516, file: !2247, line: 155, column: 39)
!14522 = !DILocation(line: 158, column: 3, scope: !14521)
!14523 = !DILocation(line: 0, scope: !14358, inlinedAt: !14524)
!14524 = distinct !DILocation(line: 154, column: 2, scope: !14518)
!14525 = !DILocation(line: 0, scope: !14366, inlinedAt: !14526)
!14526 = distinct !DILocation(line: 215, column: 2, scope: !14358, inlinedAt: !14524)
!14527 = !DILocation(line: 95, column: 2, scope: !14366, inlinedAt: !14526)
!14528 = !DILocation(line: 161, column: 2, scope: !14499)
!14529 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !221, file: !221, line: 225, type: !14530, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14534)
!14530 = !DISubroutineType(types: !14531)
!14531 = !{!157, !14532}
!14532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14533, size: 32)
!14533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2224)
!14534 = !{!14535}
!14535 = !DILocalVariable(name: "node", arg: 1, scope: !14529, file: !221, line: 225, type: !14532)
!14536 = !DILocation(line: 0, scope: !14529)
!14537 = !DILocation(line: 227, column: 15, scope: !14529)
!14538 = !DILocation(line: 227, column: 20, scope: !14529)
!14539 = !DILocation(line: 227, column: 2, scope: !14529)
!14540 = distinct !DISubprogram(name: "remove_timeout", scope: !2247, file: !2247, line: 53, type: !2241, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14541)
!14541 = !{!14542}
!14542 = !DILocalVariable(name: "t", arg: 1, scope: !14540, file: !2247, line: 53, type: !2220)
!14543 = !DILocation(line: 0, scope: !14540)
!14544 = !DILocation(line: 55, column: 6, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14540, file: !2247, line: 55, column: 6)
!14546 = !DILocation(line: 55, column: 14, scope: !14545)
!14547 = !DILocation(line: 55, column: 6, scope: !14540)
!14548 = !DILocation(line: 56, column: 25, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14545, file: !2247, line: 55, column: 23)
!14550 = !DILocation(line: 56, column: 12, scope: !14549)
!14551 = !DILocation(line: 56, column: 19, scope: !14549)
!14552 = !DILocation(line: 57, column: 2, scope: !14549)
!14553 = !DILocation(line: 59, column: 23, scope: !14540)
!14554 = !DILocation(line: 59, column: 2, scope: !14540)
!14555 = !DILocation(line: 60, column: 1, scope: !14540)
!14556 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !221, file: !221, line: 496, type: !14557, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14559)
!14557 = !DISubroutineType(types: !14558)
!14558 = !{null, !14385}
!14559 = !{!14560, !14561, !14562}
!14560 = !DILocalVariable(name: "node", arg: 1, scope: !14556, file: !221, line: 496, type: !14385)
!14561 = !DILocalVariable(name: "prev", scope: !14556, file: !221, line: 498, type: !14397)
!14562 = !DILocalVariable(name: "next", scope: !14556, file: !221, line: 499, type: !14397)
!14563 = !DILocation(line: 0, scope: !14556)
!14564 = !DILocation(line: 498, column: 34, scope: !14556)
!14565 = !DILocation(line: 499, column: 34, scope: !14556)
!14566 = !DILocation(line: 501, column: 8, scope: !14556)
!14567 = !DILocation(line: 501, column: 13, scope: !14556)
!14568 = !DILocation(line: 502, column: 8, scope: !14556)
!14569 = !DILocation(line: 502, column: 13, scope: !14556)
!14570 = !DILocation(line: 503, column: 2, scope: !14556)
!14571 = !DILocation(line: 504, column: 1, scope: !14556)
!14572 = distinct !DISubprogram(name: "sys_dnode_init", scope: !221, file: !221, line: 211, type: !14557, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14573)
!14573 = !{!14574}
!14574 = !DILocalVariable(name: "node", arg: 1, scope: !14572, file: !221, line: 211, type: !14385)
!14575 = !DILocation(line: 0, scope: !14572)
!14576 = !DILocation(line: 213, column: 8, scope: !14572)
!14577 = !DILocation(line: 213, column: 13, scope: !14572)
!14578 = !DILocation(line: 214, column: 8, scope: !14572)
!14579 = !DILocation(line: 214, column: 13, scope: !14572)
!14580 = !DILocation(line: 215, column: 1, scope: !14572)
!14581 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2247, file: !2247, line: 183, type: !14582, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14586)
!14582 = !DISubroutineType(types: !14583)
!14583 = !{!1456, !14584}
!14584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14585, size: 32)
!14585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2221)
!14586 = !{!14587, !14588, !14589, !14591}
!14587 = !DILocalVariable(name: "timeout", arg: 1, scope: !14581, file: !2247, line: 183, type: !14584)
!14588 = !DILocalVariable(name: "ticks", scope: !14581, file: !2247, line: 185, type: !1456)
!14589 = !DILocalVariable(name: "__i", scope: !14590, file: !2247, line: 187, type: !14268)
!14590 = distinct !DILexicalBlock(scope: !14581, file: !2247, line: 187, column: 2)
!14591 = !DILocalVariable(name: "__key", scope: !14590, file: !2247, line: 187, type: !14268)
!14592 = !DILocation(line: 0, scope: !14581)
!14593 = !DILocation(line: 0, scope: !14590)
!14594 = !DILocation(line: 0, scope: !14290, inlinedAt: !14595)
!14595 = distinct !DILocation(line: 187, column: 2, scope: !14590)
!14596 = !DILocation(line: 55, column: 2, scope: !14299, inlinedAt: !14597)
!14597 = distinct !DILocation(line: 145, column: 10, scope: !14290, inlinedAt: !14595)
!14598 = !DILocation(line: 0, scope: !14299, inlinedAt: !14597)
!14599 = !DILocation(line: 188, column: 11, scope: !14600)
!14600 = distinct !DILexicalBlock(scope: !14601, file: !2247, line: 187, column: 24)
!14601 = distinct !DILexicalBlock(scope: !14590, file: !2247, line: 187, column: 2)
!14602 = !DILocation(line: 0, scope: !14358, inlinedAt: !14603)
!14603 = distinct !DILocation(line: 187, column: 2, scope: !14601)
!14604 = !DILocation(line: 0, scope: !14366, inlinedAt: !14605)
!14605 = distinct !DILocation(line: 215, column: 2, scope: !14358, inlinedAt: !14603)
!14606 = !DILocation(line: 95, column: 2, scope: !14366, inlinedAt: !14605)
!14607 = !DILocation(line: 191, column: 2, scope: !14581)
!14608 = distinct !DISubprogram(name: "timeout_rem", scope: !2247, file: !2247, line: 165, type: !14582, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14609)
!14609 = !{!14610, !14611, !14612}
!14610 = !DILocalVariable(name: "timeout", arg: 1, scope: !14608, file: !2247, line: 165, type: !14584)
!14611 = !DILocalVariable(name: "ticks", scope: !14608, file: !2247, line: 167, type: !1456)
!14612 = !DILocalVariable(name: "t", scope: !14613, file: !2247, line: 173, type: !2220)
!14613 = distinct !DILexicalBlock(scope: !14608, file: !2247, line: 173, column: 2)
!14614 = !DILocation(line: 0, scope: !14608)
!14615 = !DILocation(line: 169, column: 6, scope: !14616)
!14616 = distinct !DILexicalBlock(scope: !14608, file: !2247, line: 169, column: 6)
!14617 = !DILocation(line: 169, column: 6, scope: !14608)
!14618 = !DILocation(line: 173, column: 28, scope: !14613)
!14619 = !DILocation(line: 0, scope: !14613)
!14620 = !DILocation(line: 173, column: 39, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14613, file: !2247, line: 173, column: 2)
!14622 = !DILocation(line: 173, column: 2, scope: !14613)
!14623 = !DILocation(line: 174, column: 15, scope: !14624)
!14624 = distinct !DILexicalBlock(scope: !14621, file: !2247, line: 173, column: 61)
!14625 = !DILocation(line: 174, column: 9, scope: !14624)
!14626 = !DILocation(line: 175, column: 15, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14624, file: !2247, line: 175, column: 7)
!14628 = !DILocation(line: 175, column: 7, scope: !14624)
!14629 = !DILocation(line: 173, column: 52, scope: !14621)
!14630 = distinct !{!14630, !14622, !14631}
!14631 = !DILocation(line: 178, column: 2, scope: !14613)
!14632 = !DILocation(line: 180, column: 17, scope: !14608)
!14633 = !DILocation(line: 180, column: 15, scope: !14608)
!14634 = !DILocation(line: 180, column: 2, scope: !14608)
!14635 = !DILocation(line: 181, column: 1, scope: !14608)
!14636 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11946, file: !11946, line: 35, type: !14637, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14639)
!14637 = !DISubroutineType(types: !14638)
!14638 = !{!157, !14584}
!14639 = !{!14640}
!14640 = !DILocalVariable(name: "to", arg: 1, scope: !14636, file: !11946, line: 35, type: !14584)
!14641 = !DILocation(line: 0, scope: !14636)
!14642 = !DILocation(line: 37, column: 35, scope: !14636)
!14643 = !DILocation(line: 37, column: 10, scope: !14636)
!14644 = !DILocation(line: 37, column: 9, scope: !14636)
!14645 = !DILocation(line: 37, column: 2, scope: !14636)
!14646 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2247, file: !2247, line: 194, type: !14582, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14647)
!14647 = !{!14648, !14649, !14650, !14652}
!14648 = !DILocalVariable(name: "timeout", arg: 1, scope: !14646, file: !2247, line: 194, type: !14584)
!14649 = !DILocalVariable(name: "ticks", scope: !14646, file: !2247, line: 196, type: !1456)
!14650 = !DILocalVariable(name: "__i", scope: !14651, file: !2247, line: 198, type: !14268)
!14651 = distinct !DILexicalBlock(scope: !14646, file: !2247, line: 198, column: 2)
!14652 = !DILocalVariable(name: "__key", scope: !14651, file: !2247, line: 198, type: !14268)
!14653 = !DILocation(line: 0, scope: !14646)
!14654 = !DILocation(line: 0, scope: !14651)
!14655 = !DILocation(line: 0, scope: !14290, inlinedAt: !14656)
!14656 = distinct !DILocation(line: 198, column: 2, scope: !14651)
!14657 = !DILocation(line: 55, column: 2, scope: !14299, inlinedAt: !14658)
!14658 = distinct !DILocation(line: 145, column: 10, scope: !14290, inlinedAt: !14656)
!14659 = !DILocation(line: 0, scope: !14299, inlinedAt: !14658)
!14660 = !DILocation(line: 199, column: 11, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14662, file: !2247, line: 198, column: 24)
!14662 = distinct !DILexicalBlock(scope: !14651, file: !2247, line: 198, column: 2)
!14663 = !DILocation(line: 199, column: 23, scope: !14661)
!14664 = !DILocation(line: 0, scope: !14358, inlinedAt: !14665)
!14665 = distinct !DILocation(line: 198, column: 2, scope: !14662)
!14666 = !DILocation(line: 0, scope: !14366, inlinedAt: !14667)
!14667 = distinct !DILocation(line: 215, column: 2, scope: !14358, inlinedAt: !14665)
!14668 = !DILocation(line: 95, column: 2, scope: !14366, inlinedAt: !14667)
!14669 = !DILocation(line: 199, column: 21, scope: !14661)
!14670 = !DILocation(line: 202, column: 2, scope: !14646)
!14671 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2247, file: !2247, line: 205, type: !14374, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14672)
!14672 = !{!14673, !14674, !14676}
!14673 = !DILocalVariable(name: "ret", scope: !14671, file: !2247, line: 207, type: !595)
!14674 = !DILocalVariable(name: "__i", scope: !14675, file: !2247, line: 209, type: !14268)
!14675 = distinct !DILexicalBlock(scope: !14671, file: !2247, line: 209, column: 2)
!14676 = !DILocalVariable(name: "__key", scope: !14675, file: !2247, line: 209, type: !14268)
!14677 = !DILocation(line: 0, scope: !14671)
!14678 = !DILocation(line: 0, scope: !14675)
!14679 = !DILocation(line: 0, scope: !14290, inlinedAt: !14680)
!14680 = distinct !DILocation(line: 209, column: 2, scope: !14675)
!14681 = !DILocation(line: 55, column: 2, scope: !14299, inlinedAt: !14682)
!14682 = distinct !DILocation(line: 145, column: 10, scope: !14290, inlinedAt: !14680)
!14683 = !DILocation(line: 0, scope: !14299, inlinedAt: !14682)
!14684 = !DILocation(line: 210, column: 9, scope: !14685)
!14685 = distinct !DILexicalBlock(scope: !14686, file: !2247, line: 209, column: 24)
!14686 = distinct !DILexicalBlock(scope: !14675, file: !2247, line: 209, column: 2)
!14687 = !DILocation(line: 0, scope: !14358, inlinedAt: !14688)
!14688 = distinct !DILocation(line: 209, column: 2, scope: !14686)
!14689 = !DILocation(line: 0, scope: !14366, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 215, column: 2, scope: !14358, inlinedAt: !14688)
!14691 = !DILocation(line: 95, column: 2, scope: !14366, inlinedAt: !14690)
!14692 = !DILocation(line: 212, column: 2, scope: !14671)
!14693 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2247, file: !2247, line: 215, type: !8974, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14694)
!14694 = !{!14695, !14696, !14697, !14699, !14700, !14703, !14704}
!14695 = !DILocalVariable(name: "ticks", arg: 1, scope: !14693, file: !2247, line: 215, type: !595)
!14696 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14693, file: !2247, line: 215, type: !157)
!14697 = !DILocalVariable(name: "__i", scope: !14698, file: !2247, line: 217, type: !14268)
!14698 = distinct !DILexicalBlock(scope: !14693, file: !2247, line: 217, column: 2)
!14699 = !DILocalVariable(name: "__key", scope: !14698, file: !2247, line: 217, type: !14268)
!14700 = !DILocalVariable(name: "next_to", scope: !14701, file: !2247, line: 218, type: !103)
!14701 = distinct !DILexicalBlock(scope: !14702, file: !2247, line: 217, column: 24)
!14702 = distinct !DILexicalBlock(scope: !14698, file: !2247, line: 217, column: 2)
!14703 = !DILocalVariable(name: "sooner", scope: !14701, file: !2247, line: 219, type: !157)
!14704 = !DILocalVariable(name: "imminent", scope: !14701, file: !2247, line: 221, type: !157)
!14705 = !DILocation(line: 0, scope: !14693)
!14706 = !DILocation(line: 0, scope: !14698)
!14707 = !DILocation(line: 0, scope: !14290, inlinedAt: !14708)
!14708 = distinct !DILocation(line: 217, column: 2, scope: !14698)
!14709 = !DILocation(line: 55, column: 2, scope: !14299, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 145, column: 10, scope: !14290, inlinedAt: !14708)
!14711 = !DILocation(line: 0, scope: !14299, inlinedAt: !14710)
!14712 = !DILocation(line: 218, column: 17, scope: !14701)
!14713 = !DILocation(line: 0, scope: !14701)
!14714 = !DILocation(line: 221, column: 27, scope: !14701)
!14715 = !DILocation(line: 233, column: 17, scope: !14716)
!14716 = distinct !DILexicalBlock(scope: !14701, file: !2247, line: 233, column: 7)
!14717 = !DILocation(line: 234, column: 26, scope: !14718)
!14718 = distinct !DILexicalBlock(scope: !14716, file: !2247, line: 233, column: 56)
!14719 = !DILocation(line: 234, column: 4, scope: !14718)
!14720 = !DILocation(line: 235, column: 3, scope: !14718)
!14721 = !DILocation(line: 0, scope: !14358, inlinedAt: !14722)
!14722 = distinct !DILocation(line: 217, column: 2, scope: !14702)
!14723 = !DILocation(line: 0, scope: !14366, inlinedAt: !14724)
!14724 = distinct !DILocation(line: 215, column: 2, scope: !14358, inlinedAt: !14722)
!14725 = !DILocation(line: 95, column: 2, scope: !14366, inlinedAt: !14724)
!14726 = !DILocation(line: 237, column: 1, scope: !14693)
!14727 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2247, file: !2247, line: 239, type: !14728, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14730)
!14728 = !DISubroutineType(types: !14729)
!14729 = !{null, !595}
!14730 = !{!14731, !14732, !14733, !14735}
!14731 = !DILocalVariable(name: "ticks", arg: 1, scope: !14727, file: !2247, line: 239, type: !595)
!14732 = !DILocalVariable(name: "key", scope: !14727, file: !2247, line: 245, type: !14268)
!14733 = !DILocalVariable(name: "t", scope: !14734, file: !2247, line: 262, type: !2220)
!14734 = distinct !DILexicalBlock(scope: !14727, file: !2247, line: 261, column: 67)
!14735 = !DILocalVariable(name: "dt", scope: !14734, file: !2247, line: 263, type: !103)
!14736 = !DILocation(line: 0, scope: !14727)
!14737 = !DILocation(line: 242, column: 2, scope: !14727)
!14738 = !DILocation(line: 0, scope: !14290, inlinedAt: !14739)
!14739 = distinct !DILocation(line: 245, column: 25, scope: !14727)
!14740 = !DILocation(line: 55, column: 2, scope: !14299, inlinedAt: !14741)
!14741 = distinct !DILocation(line: 145, column: 10, scope: !14290, inlinedAt: !14739)
!14742 = !DILocation(line: 0, scope: !14299, inlinedAt: !14741)
!14743 = !DILocation(line: 261, column: 9, scope: !14727)
!14744 = !DILocation(line: 261, column: 17, scope: !14727)
!14745 = !DILocation(line: 261, column: 25, scope: !14727)
!14746 = !DILocation(line: 261, column: 37, scope: !14727)
!14747 = !DILocation(line: 261, column: 47, scope: !14727)
!14748 = !DILocation(line: 261, column: 44, scope: !14727)
!14749 = !DILocation(line: 261, column: 2, scope: !14727)
!14750 = !DILocation(line: 0, scope: !14734)
!14751 = !DILocation(line: 263, column: 12, scope: !14734)
!14752 = !DILocation(line: 265, column: 16, scope: !14734)
!14753 = !DILocation(line: 265, column: 13, scope: !14734)
!14754 = !DILocation(line: 266, column: 13, scope: !14734)
!14755 = !DILocation(line: 267, column: 3, scope: !14734)
!14756 = !DILocation(line: 0, scope: !14358, inlinedAt: !14757)
!14757 = distinct !DILocation(line: 269, column: 3, scope: !14734)
!14758 = !DILocation(line: 0, scope: !14366, inlinedAt: !14759)
!14759 = distinct !DILocation(line: 215, column: 2, scope: !14358, inlinedAt: !14757)
!14760 = !DILocation(line: 95, column: 2, scope: !14366, inlinedAt: !14759)
!14761 = !DILocation(line: 270, column: 6, scope: !14734)
!14762 = !DILocation(line: 270, column: 3, scope: !14734)
!14763 = !DILocation(line: 0, scope: !14290, inlinedAt: !14764)
!14764 = distinct !DILocation(line: 271, column: 9, scope: !14734)
!14765 = !DILocation(line: 55, column: 2, scope: !14299, inlinedAt: !14766)
!14766 = distinct !DILocation(line: 145, column: 10, scope: !14290, inlinedAt: !14764)
!14767 = !DILocation(line: 0, scope: !14299, inlinedAt: !14766)
!14768 = !DILocation(line: 272, column: 22, scope: !14734)
!14769 = distinct !{!14769, !14749, !14770}
!14770 = !DILocation(line: 273, column: 2, scope: !14727)
!14771 = !DILocation(line: 276, column: 19, scope: !14772)
!14772 = distinct !DILexicalBlock(scope: !14773, file: !2247, line: 275, column: 23)
!14773 = distinct !DILexicalBlock(scope: !14727, file: !2247, line: 275, column: 6)
!14774 = !DILocation(line: 277, column: 2, scope: !14772)
!14775 = !DILocation(line: 279, column: 15, scope: !14727)
!14776 = !DILocation(line: 279, column: 12, scope: !14727)
!14777 = !DILocation(line: 280, column: 21, scope: !14727)
!14778 = !DILocation(line: 282, column: 24, scope: !14727)
!14779 = !DILocation(line: 282, column: 2, scope: !14727)
!14780 = !DILocation(line: 0, scope: !14358, inlinedAt: !14781)
!14781 = distinct !DILocation(line: 284, column: 2, scope: !14727)
!14782 = !DILocation(line: 0, scope: !14366, inlinedAt: !14783)
!14783 = distinct !DILocation(line: 215, column: 2, scope: !14358, inlinedAt: !14781)
!14784 = !DILocation(line: 95, column: 2, scope: !14366, inlinedAt: !14783)
!14785 = !DILocation(line: 285, column: 1, scope: !14727)
!14786 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2247, file: !2247, line: 287, type: !14787, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14789)
!14787 = !DISubroutineType(types: !14788)
!14788 = !{!280}
!14789 = !{!14790, !14791, !14793}
!14790 = !DILocalVariable(name: "t", scope: !14786, file: !2247, line: 289, type: !1308)
!14791 = !DILocalVariable(name: "__i", scope: !14792, file: !2247, line: 291, type: !14268)
!14792 = distinct !DILexicalBlock(scope: !14786, file: !2247, line: 291, column: 2)
!14793 = !DILocalVariable(name: "__key", scope: !14792, file: !2247, line: 291, type: !14268)
!14794 = !DILocation(line: 0, scope: !14786)
!14795 = !DILocation(line: 0, scope: !14792)
!14796 = !DILocation(line: 0, scope: !14290, inlinedAt: !14797)
!14797 = distinct !DILocation(line: 291, column: 2, scope: !14792)
!14798 = !DILocation(line: 55, column: 2, scope: !14299, inlinedAt: !14799)
!14799 = distinct !DILocation(line: 145, column: 10, scope: !14290, inlinedAt: !14797)
!14800 = !DILocation(line: 0, scope: !14299, inlinedAt: !14799)
!14801 = !DILocation(line: 292, column: 7, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14803, file: !2247, line: 291, column: 24)
!14803 = distinct !DILexicalBlock(scope: !14792, file: !2247, line: 291, column: 2)
!14804 = !DILocation(line: 292, column: 19, scope: !14802)
!14805 = !DILocation(line: 0, scope: !14358, inlinedAt: !14806)
!14806 = distinct !DILocation(line: 291, column: 2, scope: !14803)
!14807 = !DILocation(line: 0, scope: !14366, inlinedAt: !14808)
!14808 = distinct !DILocation(line: 215, column: 2, scope: !14358, inlinedAt: !14806)
!14809 = !DILocation(line: 95, column: 2, scope: !14366, inlinedAt: !14808)
!14810 = !DILocation(line: 292, column: 17, scope: !14802)
!14811 = !DILocation(line: 294, column: 2, scope: !14786)
!14812 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2247, file: !2247, line: 297, type: !5102, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14813 = !DILocation(line: 300, column: 19, scope: !14812)
!14814 = !DILocation(line: 300, column: 9, scope: !14812)
!14815 = !DILocation(line: 300, column: 2, scope: !14812)
!14816 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2247, file: !2247, line: 306, type: !14787, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14817 = !DILocation(line: 308, column: 9, scope: !14816)
!14818 = !DILocation(line: 308, column: 2, scope: !14816)
!14819 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2247, file: !2247, line: 319, type: !5112, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14820)
!14820 = !{!14821, !14822, !14823, !14824}
!14821 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14819, file: !2247, line: 319, type: !121)
!14822 = !DILocalVariable(name: "start_cycles", scope: !14819, file: !2247, line: 328, type: !121)
!14823 = !DILocalVariable(name: "cycles_to_wait", scope: !14819, file: !2247, line: 331, type: !121)
!14824 = !DILocalVariable(name: "current_cycles", scope: !14825, file: !2247, line: 338, type: !121)
!14825 = distinct !DILexicalBlock(scope: !14826, file: !2247, line: 337, column: 11)
!14826 = distinct !DILexicalBlock(scope: !14827, file: !2247, line: 337, column: 2)
!14827 = distinct !DILexicalBlock(scope: !14819, file: !2247, line: 337, column: 2)
!14828 = !DILocation(line: 0, scope: !14819)
!14829 = !DILocation(line: 322, column: 19, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14819, file: !2247, line: 322, column: 6)
!14831 = !DILocation(line: 322, column: 6, scope: !14819)
!14832 = !DILocation(line: 328, column: 26, scope: !14819)
!14833 = !DILocation(line: 333, column: 43, scope: !14819)
!14834 = !DILocation(line: 337, column: 2, scope: !14819)
!14835 = !DILocation(line: 338, column: 29, scope: !14825)
!14836 = !DILocation(line: 0, scope: !14825)
!14837 = !DILocation(line: 341, column: 23, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14825, file: !2247, line: 341, column: 7)
!14839 = !DILocation(line: 341, column: 39, scope: !14838)
!14840 = !DILocation(line: 349, column: 1, scope: !14819)
!14841 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !307, file: !307, line: 1675, type: !5102, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14842 = !DILocation(line: 1677, column: 9, scope: !14841)
!14843 = !DILocation(line: 1677, column: 2, scope: !14841)
!14844 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14845, file: !14845, line: 24, type: !5102, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !322)
!14845 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14846 = !DILocation(line: 26, column: 9, scope: !14844)
!14847 = !DILocation(line: 26, column: 2, scope: !14844)
!14848 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2247, file: !2247, line: 364, type: !14849, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !14851)
!14849 = !DISubroutineType(types: !14850)
!14850 = !{!1308, !14258}
!14851 = !{!14852, !14853}
!14852 = !DILocalVariable(name: "timeout", arg: 1, scope: !14848, file: !2247, line: 364, type: !14258)
!14853 = !DILocalVariable(name: "dt", scope: !14848, file: !2247, line: 366, type: !1456)
!14854 = !DILocation(line: 0, scope: !14848)
!14855 = !DILocation(line: 368, column: 6, scope: !14848)
!14856 = !DILocation(line: 371, column: 10, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14858, file: !2247, line: 370, column: 47)
!14858 = distinct !DILexicalBlock(scope: !14859, file: !2247, line: 370, column: 13)
!14859 = distinct !DILexicalBlock(scope: !14848, file: !2247, line: 368, column: 6)
!14860 = !DILocation(line: 371, column: 3, scope: !14857)
!14861 = !DILocation(line: 376, column: 58, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14863, file: !2247, line: 376, column: 7)
!14863 = distinct !DILexicalBlock(scope: !14858, file: !2247, line: 372, column: 9)
!14864 = !DILocation(line: 376, column: 7, scope: !14863)
!14865 = !DILocation(line: 376, column: 43, scope: !14862)
!14866 = !DILocation(line: 377, column: 4, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14862, file: !2247, line: 376, column: 64)
!14868 = !DILocation(line: 379, column: 10, scope: !14863)
!14869 = !DILocation(line: 379, column: 33, scope: !14863)
!14870 = !DILocation(line: 379, column: 31, scope: !14863)
!14871 = !DILocation(line: 379, column: 3, scope: !14863)
!14872 = !DILocation(line: 0, scope: !14859)
!14873 = !DILocation(line: 381, column: 1, scope: !14848)
!14874 = distinct !DISubprogram(name: "boot_banner", scope: !14875, file: !14875, line: 26, type: !2909, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !322)
!14875 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14876 = !DILocation(line: 34, column: 2, scope: !14874)
!14877 = !DILocation(line: 36, column: 1, scope: !14874)
