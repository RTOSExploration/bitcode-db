; ModuleID = 'build/96b_stm32_sensor_mez/pi/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.emitter = type { i8*, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236072 to i8*), void (i8*)* inttoptr (i32 134234719 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236072 to i8*), void (i8*)* inttoptr (i32 134234699 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236072 to i8*), void (i8*)* inttoptr (i32 134234689 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236072 to i8*), void (i8*)* inttoptr (i32 134234789 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236072 to i8*), void (i8*)* inttoptr (i32 134234779 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236072 to i8*), void (i8*)* inttoptr (i32 134234769 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236072 to i8*), void (i8*)* inttoptr (i32 134234759 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236072 to i8*), void (i8*)* inttoptr (i32 134234749 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236072 to i8*), void (i8*)* inttoptr (i32 134234739 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236072 to i8*), void (i8*)* inttoptr (i32 134234729 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236072 to i8*), void (i8*)* inttoptr (i32 134234709 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [5 x i8] c"%.4d\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"Calculate first %d digits of Pi independently by %d threads.\0A\00", align 1
@tthread = internal global [16 x %struct.k_thread] zeroinitializer, align 8, !dbg !25
@tstack = internal global [16 x [4480 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !123
@counter = internal global i32 16, align 4, !dbg !139
@buffer = internal global [16 x [241 x i8]] zeroinitializer, align 1, !dbg !134
@.str.2 = private unnamed_addr constant [39 x i8] c"Pi value calculated by thread #%d: %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"All %d threads executed by %d cores in %d msec\0A\00", align 1
@llvm.compiler.used = appending global [47 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str.4 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !268
@.str.1.5 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.6 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.7 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.8 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !293
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !303
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !354
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !383
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !517
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !389
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !526
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !562
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.91, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !572
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !577
@.str.90 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.91 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.94 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.95 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.96 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !597
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !799
@.str.4.92 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !760
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !743
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.92, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !716
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !732
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !762
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !776
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !778
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !780
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !782
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !784
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !786
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !788
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !790
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !792
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !794
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !804
@.str.97 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !837
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !935
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !924
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !976
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !824
@.str.106 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1042
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1320
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1290
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1276
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1221
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !822
@.str.1.114 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1322
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1294
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1292
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1235
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !820
@.str.2.115 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1335
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1298
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1296
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1241
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !818
@.str.3.116 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1337
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1302
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1300
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1250
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !816
@.str.4.117 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1339
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1306
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1304
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1256
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !814
@.str.5.118 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1341
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1310
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1308
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1262
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !812
@.str.6.119 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1343
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1314
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1312
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1268
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !810
@.str.7.120 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1345
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1318
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1316
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1274
@.str.8.107 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.113 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.109 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.112 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.108 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.110 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.111 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.124 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.124, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1347
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !832
@.str.1.125 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1527
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1582
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1519
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1584
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.125, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1492
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1494
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !830
@.str.2.132 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1590
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1521
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1600
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.132, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1503
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1505
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !828
@.str.3.133 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1602
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1523
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1612
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.133, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1509
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1511
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !826
@.str.4.136 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1614
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1525
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1624
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.136, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1515
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1517
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1571
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1574
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1576
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1579
@.str.5.127 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.6.128 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.7.129 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.8.130 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.9.131 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.10.139 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.11.141 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.12.142 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !908
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1592
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1594
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1596
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1598
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1604
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1606
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1608
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1610
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1616
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1618
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1620
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1622
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.13 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1631
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1742
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1744
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1740
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1735
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1709
@.str.146 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.147 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.148 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.149 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.150 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.151 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1746
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1219
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1233
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.115, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1239
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.116, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1248
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.117, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1254
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.118, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1260
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.119, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1266
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.120, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1272
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1836
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1880
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1883
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1888
@.str.185 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.189 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.190 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.191 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.195 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.196 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.197 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.198 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.199 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.194 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.193 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.195, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.196, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.197, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.198, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.199, i32 0, i32 0)], align 4
@.str.201 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.201, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1895
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2121
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2108
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2116
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2128
@.str.5.207 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2133
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.211 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.217, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.218, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.219, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.220, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.221, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.215, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.222, i32 0, i32 0)], align 4, !dbg !2163
@.str.216 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.217 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.218 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.219 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.220 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.221 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.215 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.222 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2278
@.str.8.214 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.225 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.226 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.227 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.228 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.232 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.233 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.236 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.237 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.247 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.248 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.249 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2291
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2402
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2405
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2407
@.str.250 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.266 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.257 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.271 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.279 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.259 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.274 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.256 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.283 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.284 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.292 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.293 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.294 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.295 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.251 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.252 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.253 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.254 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.255 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.258 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.270 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.275 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.276 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2118
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2126
@.str.23.287 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.301 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.302 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.303 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.304 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2409
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2439
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2444
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1982
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2442
@.str.4.305 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.306 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.307 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.311 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.312 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.332 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3017 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3021, !srcloc !3022
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3023, !srcloc !3024
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3025, !srcloc !3026
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3027, !srcloc !3028
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3029, !srcloc !3030
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3031, !srcloc !3032
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3033, !srcloc !3034
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3035, !srcloc !3036
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3037, !srcloc !3038
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3039, !srcloc !3040
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3041, !srcloc !3042
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3043, !srcloc !3044
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3045, !srcloc !3046
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3047, !srcloc !3048
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3049, !srcloc !3050
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3051, !srcloc !3052
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3053, !srcloc !3054
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3055, !srcloc !3056
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3057, !srcloc !3058
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3059, !srcloc !3060
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3061, !srcloc !3062
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3063, !srcloc !3064
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3065, !srcloc !3066
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3067, !srcloc !3068
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3069, !srcloc !3070
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3071, !srcloc !3072
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3073, !srcloc !3074
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3075, !srcloc !3078
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3079, !srcloc !3080
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3081, !srcloc !3082
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3083, !srcloc !3084
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3085, !srcloc !3086
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3087, !srcloc !3088
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3089, !srcloc !3090
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3091, !srcloc !3092
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3093, !srcloc !3094
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3095, !srcloc !3096
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3097, !srcloc !3098
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3099, !srcloc !3100
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3101, !srcloc !3102
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3103, !srcloc !3104
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3105, !srcloc !3106
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3107, !srcloc !3108
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3109, !srcloc !3110
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3111, !srcloc !3112
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3113, !srcloc !3114
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3121, !srcloc !3122
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3123, !srcloc !3124
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3125, !srcloc !3126
  ret void, !dbg !3127
}

; Function Attrs: noinline nounwind optsize
define dso_local void @test_thread(i8* nocapture noundef %0, i8* noundef %1, i8* nocapture readnone %2) #1 !dbg !3130 {
  %4 = alloca [841 x i32], align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3132, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.value(metadata i8* %1, metadata !3133, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.value(metadata i8* undef, metadata !3134, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.value(metadata i8* %0, metadata !3135, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.value(metadata i8* %1, metadata !3136, metadata !DIExpression()), !dbg !3149
  %5 = bitcast [841 x i32]* %4 to i8*, !dbg !3150
  call void @llvm.lifetime.start.p0i8(i64 3364, i8* nonnull %5) #23, !dbg !3150
  call void @llvm.dbg.declare(metadata [841 x i32]* %4, metadata !3137, metadata !DIExpression()), !dbg !3151
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(3364) %5, i8 0, i32 3364, i1 false), !dbg !3151
  call void @llvm.dbg.value(metadata i32 0, metadata !3141, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.value(metadata i32 0, metadata !3142, metadata !DIExpression()), !dbg !3149
  br label %6, !dbg !3152

6:                                                ; preds = %3, %6
  %7 = phi i32 [ 0, %3 ], [ %9, %6 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3142, metadata !DIExpression()), !dbg !3149
  %8 = getelementptr inbounds [841 x i32], [841 x i32]* %4, i32 0, i32 %7, !dbg !3154
  store i32 2000, i32* %8, align 4, !dbg !3157
  %9 = add nuw nsw i32 %7, 1, !dbg !3158
  call void @llvm.dbg.value(metadata i32 %9, metadata !3142, metadata !DIExpression()), !dbg !3149
  %10 = icmp eq i32 %9, 840, !dbg !3159
  br i1 %10, label %11, label %6, !dbg !3152, !llvm.loop !3160

11:                                               ; preds = %6, %32
  %12 = phi i8* [ %38, %32 ], [ %1, %6 ]
  %13 = phi i32 [ %39, %32 ], [ 840, %6 ]
  %14 = phi i32 [ %36, %32 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i8* %12, metadata !3136, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.value(metadata i32 %13, metadata !3142, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.value(metadata i32 %14, metadata !3141, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.value(metadata i32 0, metadata !3144, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.value(metadata i32 %13, metadata !3143, metadata !DIExpression()), !dbg !3149
  br label %15, !dbg !3163

15:                                               ; preds = %11, %15
  %16 = phi i32 [ %27, %15 ], [ 0, %11 ]
  %17 = phi i32 [ %30, %15 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3144, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.value(metadata i32 %17, metadata !3143, metadata !DIExpression()), !dbg !3149
  %18 = mul nsw i32 %16, %17, !dbg !3165
  %19 = getelementptr inbounds [841 x i32], [841 x i32]* %4, i32 0, i32 %17, !dbg !3168
  %20 = load i32, i32* %19, align 4, !dbg !3168
  %21 = mul nsw i32 %20, 10000, !dbg !3169
  %22 = add nsw i32 %21, %18, !dbg !3170
  call void @llvm.dbg.value(metadata i32 %22, metadata !3144, metadata !DIExpression()), !dbg !3162
  %23 = shl nuw nsw i32 %17, 1, !dbg !3171
  %24 = add nsw i32 %23, -1, !dbg !3172
  %25 = freeze i32 %22
  %26 = freeze i32 %24
  %27 = sdiv i32 %25, %26, !dbg !3173
  %28 = mul i32 %27, %26
  %29 = sub i32 %25, %28
  store i32 %29, i32* %19, align 4, !dbg !3174
  call void @llvm.dbg.value(metadata i32 %27, metadata !3144, metadata !DIExpression()), !dbg !3162
  %30 = add nsw i32 %17, -1, !dbg !3175
  call void @llvm.dbg.value(metadata i32 %30, metadata !3143, metadata !DIExpression()), !dbg !3149
  %31 = icmp sgt i32 %17, 1, !dbg !3176
  br i1 %31, label %15, label %32, !dbg !3163, !llvm.loop !3177

32:                                               ; preds = %15
  %33 = sdiv i32 %27, 10000, !dbg !3179
  %34 = add nsw i32 %33, %14, !dbg !3180
  call void @llvm.dbg.value(metadata i32 %34, metadata !3148, metadata !DIExpression()), !dbg !3162
  %35 = mul i32 %33, 10000
  %36 = sub i32 %27, %35
  call void @llvm.dbg.value(metadata i32 %36, metadata !3141, metadata !DIExpression()), !dbg !3149
  %37 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %12, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32 noundef %34) #24, !dbg !3181
  %38 = getelementptr inbounds i8, i8* %12, i32 4, !dbg !3182
  call void @llvm.dbg.value(metadata i8* %38, metadata !3136, metadata !DIExpression()), !dbg !3149
  %39 = add nsw i32 %13, -14, !dbg !3183
  call void @llvm.dbg.value(metadata i32 %39, metadata !3142, metadata !DIExpression()), !dbg !3149
  %40 = icmp ugt i32 %13, 14, !dbg !3184
  br i1 %40, label %11, label %41, !dbg !3185, !llvm.loop !3186

41:                                               ; preds = %32
  %42 = bitcast i8* %0 to i32*, !dbg !3188
  call void @llvm.dbg.value(metadata i32* %42, metadata !3135, metadata !DIExpression()), !dbg !3149
  tail call fastcc void @atomic_dec(i32* noundef %42) #25, !dbg !3189
  call void @llvm.lifetime.end.p0i8(i64 3364, i8* nonnull %5) #23, !dbg !3190
  ret void, !dbg !3190
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #4

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_dec(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3191 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3197, metadata !DIExpression()), !dbg !3198
  tail call fastcc void @atomic_sub(i32* noundef %0) #25, !dbg !3199
  ret void, !dbg !3200
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_sub(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3201 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3205, metadata !DIExpression()), !dbg !3207
  call void @llvm.dbg.value(metadata i32 1, metadata !3206, metadata !DIExpression()), !dbg !3207
  %2 = atomicrmw sub i32* %0, i32 1 seq_cst, align 4, !dbg !3208
  ret void, !dbg !3209
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3210 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i32 0, i32 0), i32 noundef 240, i32 noundef 16) #24, !dbg !3217
  %1 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !3218
  call void @llvm.dbg.value(metadata i32 %1, metadata !3212, metadata !DIExpression()), !dbg !3219
  call void @llvm.dbg.value(metadata i32 0, metadata !3216, metadata !DIExpression()), !dbg !3219
  br label %8, !dbg !3220

2:                                                ; preds = %8
  %3 = load i32, i32* @counter, align 4, !dbg !3222
  %4 = icmp eq i32 %3, 0, !dbg !3223
  br i1 %4, label %18, label %5, !dbg !3223

5:                                                ; preds = %2
  %6 = tail call fastcc i64 @k_ms_to_ticks_ceil64() #25, !dbg !3219
  %7 = insertvalue [1 x i64] poison, i64 %6, 0
  br label %15, !dbg !3223

8:                                                ; preds = %0, %8
  %9 = phi i32 [ 0, %0 ], [ %13, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3216, metadata !DIExpression()), !dbg !3219
  %10 = getelementptr inbounds [16 x %struct.k_thread], [16 x %struct.k_thread]* @tthread, i32 0, i32 %9, !dbg !3224
  %11 = getelementptr inbounds [16 x [4480 x %struct.z_thread_stack_element]], [16 x [4480 x %struct.z_thread_stack_element]]* @tstack, i32 0, i32 %9, i32 0, !dbg !3227
  %12 = getelementptr inbounds [16 x [241 x i8]], [16 x [241 x i8]]* @buffer, i32 0, i32 %9, i32 0, !dbg !3228
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %10, %struct.z_thread_stack_element* noundef nonnull %11, i8* noundef nonnull %12) #25, !dbg !3229
  %13 = add nuw nsw i32 %9, 1, !dbg !3230
  call void @llvm.dbg.value(metadata i32 %13, metadata !3216, metadata !DIExpression()), !dbg !3219
  %14 = icmp eq i32 %13, 16, !dbg !3231
  br i1 %14, label %2, label %8, !dbg !3220, !llvm.loop !3232

15:                                               ; preds = %5, %15
  tail call fastcc void @k_sleep([1 x i64] %7) #25, !dbg !3234
  %16 = load i32, i32* @counter, align 4, !dbg !3222
  %17 = icmp eq i32 %16, 0, !dbg !3223
  br i1 %17, label %18, label %15, !dbg !3223, !llvm.loop !3236

18:                                               ; preds = %15, %2
  %19 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !3238
  call void @llvm.dbg.value(metadata i32 %19, metadata !3213, metadata !DIExpression()), !dbg !3219
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %1), metadata !3214, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3219
  call void @llvm.dbg.value(metadata i64 undef, metadata !3215, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3219
  call void @llvm.dbg.value(metadata i32 0, metadata !3216, metadata !DIExpression()), !dbg !3219
  br label %20, !dbg !3239

20:                                               ; preds = %18, %20
  %21 = phi i32 [ 0, %18 ], [ %23, %20 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3216, metadata !DIExpression()), !dbg !3219
  %22 = getelementptr inbounds [16 x [241 x i8]], [16 x [241 x i8]]* @buffer, i32 0, i32 %21, i32 0, !dbg !3241
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i32 0, i32 0), i32 noundef %21, i8* noundef nonnull %22) #24, !dbg !3244
  %23 = add nuw nsw i32 %21, 1, !dbg !3245
  call void @llvm.dbg.value(metadata i32 %23, metadata !3216, metadata !DIExpression()), !dbg !3219
  %24 = icmp eq i32 %23, 16, !dbg !3246
  br i1 %24, label %25, label %20, !dbg !3239, !llvm.loop !3247

25:                                               ; preds = %20
  %26 = sub i32 %19, %1, !dbg !3249
  call void @llvm.dbg.value(metadata i32 %26, metadata !3214, metadata !DIExpression()), !dbg !3219
  %27 = zext i32 %26 to i64, !dbg !3250
  %28 = tail call fastcc i64 @k_cyc_to_ns_floor64(i64 noundef %27) #25, !dbg !3251
  call void @llvm.dbg.value(metadata i64 %28, metadata !3215, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3219
  %29 = trunc i64 %28 to i32, !dbg !3252
  call void @llvm.dbg.value(metadata i32 %29, metadata !3215, metadata !DIExpression()), !dbg !3219
  %30 = udiv i32 %29, 1000000, !dbg !3253
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i32 0, i32 0), i32 noundef 16, i32 noundef 1, i32 noundef %30) #24, !dbg !3254
  ret void, !dbg !3255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !3256 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !3259
  ret i32 %1, !dbg !3260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64() unnamed_addr #6 !dbg !3261 {
  call void @llvm.dbg.value(metadata i64 1, metadata !3266, metadata !DIExpression()), !dbg !3267
  ret i64 10, !dbg !3268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3269 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3291, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3282, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3283, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata i32 4384, metadata !3284, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_thread, metadata !3285, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata i8* bitcast (i32* @counter to i8*), metadata !3286, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata i8* %2, metadata !3287, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata i8* null, metadata !3288, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata i32 -6, metadata !3289, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata i32 0, metadata !3290, metadata !DIExpression()), !dbg !3292
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3293, !srcloc !3295
  %4 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 4384, void (i8*, i8*, i8*)* noundef nonnull @test_thread, i8* noundef bitcast (i32* @counter to i8*), i8* noundef %2, i8* noundef null, i32 noundef -6, i32 noundef 0, [1 x i64] zeroinitializer) #24, !dbg !3296
  ret void, !dbg !3297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3298 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3302, metadata !DIExpression()), !dbg !3303
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3304, !srcloc !3306
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #24, !dbg !3307
  ret void, !dbg !3308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_cyc_to_ns_floor64(i64 noundef %0) unnamed_addr #6 !dbg !3309 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3311, metadata !DIExpression()), !dbg !3312
  call void @llvm.dbg.value(metadata i64 %0, metadata !3313, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.value(metadata i32 84000000, metadata !3318, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.value(metadata i32 1000000000, metadata !3319, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.value(metadata i8 1, metadata !3320, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.value(metadata i8 0, metadata !3321, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.value(metadata i1 false, metadata !3322, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3330
  call void @llvm.dbg.value(metadata i8 0, metadata !3323, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.value(metadata i1 false, metadata !3324, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3330
  call void @llvm.dbg.value(metadata i1 false, metadata !3325, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3330
  call void @llvm.dbg.value(metadata i64 0, metadata !3326, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.value(metadata i64 0, metadata !3326, metadata !DIExpression()), !dbg !3330
  %2 = udiv i64 %0, 84000000, !dbg !3332
  %3 = mul i64 %2, 1000000000, !dbg !3339
  %4 = mul i64 %2, 84000000
  %5 = sub i64 %0, %4
  %6 = mul nuw nsw i64 %5, 1000000000, !dbg !3340
  %7 = udiv i64 %6, 84000000, !dbg !3341
  %8 = add i64 %7, %3, !dbg !3342
  ret i64 %8, !dbg !3343
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !3344 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !3346
  ret i32 %1, !dbg !3347
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3348 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3363, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %0, metadata !3359, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %1, metadata !3360, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %2, metadata !3361, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %3, metadata !3362, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %0, metadata !3364, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %0, metadata !3365, metadata !DIExpression()), !dbg !3426
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3427
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3427
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3368, metadata !DIExpression()), !dbg !3428
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3429
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3429
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3370, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i32 0, metadata !3371, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 0, metadata !3372, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 0, metadata !3373, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 -1, metadata !3374, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8 0, metadata !3377, metadata !DIExpression()), !dbg !3426
  %12 = and i32 %2, 4, !dbg !3431
  %13 = icmp eq i32 %12, 0, !dbg !3432
  call void @llvm.dbg.value(metadata i1 %13, metadata !3378, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3426
  %14 = lshr i32 %2, 3, !dbg !3433
  %15 = and i32 %14, 7, !dbg !3433
  %16 = add nuw nsw i32 %15, 1, !dbg !3434
  call void @llvm.dbg.value(metadata i32 %16, metadata !3379, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8 0, metadata !3380, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %0, metadata !3381, metadata !DIExpression()), !dbg !3426
  %17 = ptrtoint i8* %0 to i32, !dbg !3435
  %18 = and i32 %17, 3, !dbg !3437
  %19 = icmp eq i32 %18, 0, !dbg !3437
  br i1 %19, label %20, label %320, !dbg !3438

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3439
  call void @llvm.dbg.value(metadata i8* %21, metadata !3365, metadata !DIExpression()), !dbg !3426
  %22 = icmp eq i8* %0, null, !dbg !3440
  %23 = and i32 %1, 7, !dbg !3442
  %24 = sub nuw nsw i32 8, %23, !dbg !3442
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3442
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3442
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3442
  call void @llvm.dbg.value(metadata i32 %27, metadata !3360, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %26, metadata !3365, metadata !DIExpression()), !dbg !3426
  br i1 %22, label %33, label %28, !dbg !3443

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3445
  %30 = sub i32 4, %17, !dbg !3445
  %31 = add i32 %30, %29, !dbg !3446
  %32 = icmp ugt i32 %31, %27, !dbg !3447
  br i1 %32, label %320, label %33, !dbg !3448

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3449
  call void @llvm.dbg.value(metadata i8* %34, metadata !3362, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %3, metadata !3376, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 4, metadata !3367, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 4, metadata !3366, metadata !DIExpression()), !dbg !3426
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3450

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3363, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %42, metadata !3362, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %43, metadata !3365, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %44, metadata !3366, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %45, metadata !3367, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %72, metadata !3374, metadata !DIExpression()), !dbg !3426
  br i1 %46, label %73, label %47, !dbg !3451

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3452
  %49 = zext i1 %48 to i32, !dbg !3456
  %50 = add nsw i32 %72, %49, !dbg !3456
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3456
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3456
  call void @llvm.dbg.value(metadata i32 %52, metadata !3366, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %51, metadata !3367, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8 poison, metadata !3377, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %50, metadata !3374, metadata !DIExpression()), !dbg !3426
  br label %53, !dbg !3457

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3363, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %40, metadata !3362, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %58, metadata !3365, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %57, metadata !3366, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %56, metadata !3367, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8 poison, metadata !3377, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %54, metadata !3374, metadata !DIExpression()), !dbg !3426
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3458
  call void @llvm.dbg.value(metadata i8* %60, metadata !3362, metadata !DIExpression()), !dbg !3426
  %61 = load i8, i8* %60, align 1, !dbg !3460
  %62 = icmp eq i8 %61, 0, !dbg !3461
  br i1 %62, label %226, label %63, !dbg !3462, !llvm.loop !3463

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3451

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3466

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3377, metadata !DIExpression()), !dbg !3426
  %75 = add nsw i32 %72, -1, !dbg !3467
  call void @llvm.dbg.value(metadata i32 %75, metadata !3374, metadata !DIExpression()), !dbg !3426
  br label %53, !dbg !3468

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3469

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3367, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 4, metadata !3366, metadata !DIExpression()), !dbg !3426
  br label %53, !dbg !3470

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3367, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 4, metadata !3366, metadata !DIExpression()), !dbg !3426
  br label %53, !dbg !3471

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3472
  %81 = icmp eq i8 %80, 108, !dbg !3474
  br i1 %81, label %82, label %109, !dbg !3475

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3476
  %84 = load i8, i8* %83, align 1, !dbg !3476
  %85 = icmp eq i8 %84, 108, !dbg !3479
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3480
  %89 = add i32 %88, 7, !dbg !3480
  %90 = and i32 %89, -8, !dbg !3480
  %91 = inttoptr i32 %90 to i8*, !dbg !3480
  %92 = inttoptr i32 %90 to double*, !dbg !3480
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3480
  %94 = load double, double* %92, align 8, !dbg !3480
  call void @llvm.dbg.value(metadata i8* %93, metadata !3363, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 8, metadata !3366, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 8, metadata !3367, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata double %94, metadata !3394, metadata !DIExpression()), !dbg !3482
  %95 = ptrtoint i8* %43 to i32, !dbg !3483
  %96 = add i32 %95, 7, !dbg !3483
  %97 = and i32 %96, -8, !dbg !3483
  %98 = inttoptr i32 %97 to i8*, !dbg !3484
  call void @llvm.dbg.value(metadata i8* %98, metadata !3365, metadata !DIExpression()), !dbg !3426
  br i1 %22, label %104, label %99, !dbg !3485

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3486
  %101 = icmp ugt i32 %100, %196, !dbg !3490
  br i1 %101, label %320, label %102, !dbg !3491

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3492
  store double %94, double* %103, align 8, !dbg !3492
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3495
  call void @llvm.dbg.value(metadata i8* %105, metadata !3365, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8 poison, metadata !3377, metadata !DIExpression()), !dbg !3426
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3377, metadata !DIExpression()), !dbg !3426
  br label %53, !dbg !3496

107:                                              ; preds = %73, %73
  br label %109, !dbg !3497

108:                                              ; preds = %73
  br label %109, !dbg !3497

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3426
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3426
  call void @llvm.dbg.value(metadata i32 %113, metadata !3366, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %112, metadata !3367, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8 poison, metadata !3380, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8 poison, metadata !3377, metadata !DIExpression()), !dbg !3426
  %114 = ptrtoint i8* %43 to i32, !dbg !3497
  %115 = add i32 %114, -1, !dbg !3497
  %116 = add i32 %115, %112, !dbg !3497
  %117 = sub i32 0, %112, !dbg !3497
  %118 = and i32 %116, %117, !dbg !3497
  %119 = inttoptr i32 %118 to i8*, !dbg !3498
  call void @llvm.dbg.value(metadata i8* %119, metadata !3365, metadata !DIExpression()), !dbg !3426
  br i1 %22, label %124, label %120, !dbg !3499

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3501
  %122 = add i32 %121, %118, !dbg !3502
  %123 = icmp ugt i32 %122, %196, !dbg !3503
  br i1 %123, label %320, label %124, !dbg !3504

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3505

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3498
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3506
  call void @llvm.dbg.value(metadata i8* %127, metadata !3363, metadata !DIExpression()), !dbg !3426
  %128 = bitcast i8* %41 to i8**, !dbg !3506
  %129 = load i8*, i8** %128, align 4, !dbg !3506
  call void @llvm.dbg.value(metadata i8* %129, metadata !3376, metadata !DIExpression()), !dbg !3426
  br label %130, !dbg !3507

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3426
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3508
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3426
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3509
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3426
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3426
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3426
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3426
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3426
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3426
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3510
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3363, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %142, metadata !3360, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %141, metadata !3362, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %140, metadata !3365, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %139, metadata !3366, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %138, metadata !3367, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %137, metadata !3371, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %136, metadata !3379, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %135, metadata !3372, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8 poison, metadata !3377, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %133, metadata !3376, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %132, metadata !3374, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %131, metadata !3373, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.label(metadata !3425), !dbg !3512
  br i1 %22, label %146, label %144, !dbg !3513

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3514
  store i8* %133, i8** %145, align 4, !dbg !3517
  br label %146, !dbg !3518

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3519
  call void @llvm.dbg.value(metadata i32 %147, metadata !3379, metadata !DIExpression()), !dbg !3426
  %148 = icmp sgt i32 %136, 0, !dbg !3520
  br i1 %148, label %152, label %149, !dbg !3521

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #25, !dbg !3522
  %151 = zext i1 %150 to i32, !dbg !3522
  br label %152, !dbg !3521

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3521
  %154 = icmp eq i32 %153, 0, !dbg !3521
  call void @llvm.dbg.value(metadata i1 %154, metadata !3403, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3523
  call void @llvm.dbg.value(metadata i1 %36, metadata !3406, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3523
  %155 = or i1 %36, %154, !dbg !3524
  br i1 %155, label %156, label %192, !dbg !3524

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3525
  %158 = sub i32 %157, %17, !dbg !3525
  %159 = lshr i32 %158, 2, !dbg !3526
  call void @llvm.dbg.value(metadata i32 %159, metadata !3407, metadata !DIExpression()), !dbg !3527
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3528
  br i1 %161, label %162, label %163, !dbg !3528

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 635) #24, !dbg !3530
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.8, i32 0, i32 0)) #24, !dbg !3530
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 635) #24, !dbg !3530
  unreachable, !dbg !3530

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3535
  br i1 %164, label %165, label %166, !dbg !3537

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 640) #24, !dbg !3538
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #24, !dbg !3538
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 640) #24, !dbg !3538
  unreachable, !dbg !3538

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3543

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3544
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3547
  store i8 %168, i8* %169, align 1, !dbg !3548
  %170 = trunc i32 %132 to i8, !dbg !3549
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3550
  store i8 %170, i8* %171, align 1, !dbg !3551
  br i1 %154, label %175, label %172, !dbg !3552

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3553
  store i8 %173, i8* %169, align 1, !dbg !3553
  %174 = add i32 %131, 1, !dbg !3556
  call void @llvm.dbg.value(metadata i32 %174, metadata !3373, metadata !DIExpression()), !dbg !3426
  br label %187, !dbg !3557

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3558
  call void @llvm.dbg.value(metadata i32 %176, metadata !3372, metadata !DIExpression()), !dbg !3426
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3560

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3561
  call void @llvm.dbg.value(metadata i32 %179, metadata !3360, metadata !DIExpression()), !dbg !3426
  br label %187, !dbg !3564

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3565

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3566
  call void @llvm.dbg.value(metadata i32 %182, metadata !3360, metadata !DIExpression()), !dbg !3426
  br label %187, !dbg !3569

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #24, !dbg !3570
  %185 = add i32 %142, 2, !dbg !3572
  %186 = add i32 %185, %184, !dbg !3573
  call void @llvm.dbg.value(metadata i32 %186, metadata !3360, metadata !DIExpression()), !dbg !3426
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3426
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3426
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3426
  call void @llvm.dbg.value(metadata i32 %190, metadata !3360, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %189, metadata !3372, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %188, metadata !3373, metadata !DIExpression()), !dbg !3426
  %191 = add nuw nsw i32 %137, 1, !dbg !3574
  call void @llvm.dbg.value(metadata i32 %191, metadata !3371, metadata !DIExpression()), !dbg !3426
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3426
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3509
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3426
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3510
  call void @llvm.dbg.value(metadata i32 %196, metadata !3360, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %195, metadata !3371, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %194, metadata !3372, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %193, metadata !3373, metadata !DIExpression()), !dbg !3426
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3575
  call void @llvm.dbg.value(metadata i8* %197, metadata !3365, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %143, metadata !3363, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %141, metadata !3362, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %139, metadata !3366, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %138, metadata !3367, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8 poison, metadata !3380, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8 poison, metadata !3377, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %132, metadata !3374, metadata !DIExpression()), !dbg !3426
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3458
  call void @llvm.dbg.value(metadata i8* %198, metadata !3362, metadata !DIExpression()), !dbg !3426
  %199 = load i8, i8* %198, align 1, !dbg !3460
  %200 = icmp eq i8 %199, 0, !dbg !3461
  br i1 %200, label %226, label %63, !dbg !3462

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3576

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3577
  call void @llvm.dbg.value(metadata i8* %203, metadata !3363, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 undef, metadata !3410, metadata !DIExpression()), !dbg !3578
  br i1 %22, label %219, label %204, !dbg !3579

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3577
  %206 = load i32, i32* %205, align 4, !dbg !3577
  call void @llvm.dbg.value(metadata i32 %206, metadata !3410, metadata !DIExpression()), !dbg !3578
  %207 = inttoptr i32 %118 to i32*, !dbg !3580
  store i32 %206, i32* %207, align 4, !dbg !3583
  br label %219, !dbg !3584

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3585
  %210 = add i32 %209, 7, !dbg !3585
  %211 = and i32 %210, -8, !dbg !3585
  %212 = inttoptr i32 %211 to i8*, !dbg !3585
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3585
  call void @llvm.dbg.value(metadata i8* %213, metadata !3363, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i64 undef, metadata !3416, metadata !DIExpression()), !dbg !3586
  br i1 %22, label %219, label %214, !dbg !3587

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3585
  %216 = load i64, i64* %215, align 8, !dbg !3585
  call void @llvm.dbg.value(metadata i64 %216, metadata !3416, metadata !DIExpression()), !dbg !3586
  %217 = inttoptr i32 %118 to i64*, !dbg !3588
  store i64 %216, i64* %217, align 8, !dbg !3593
  br label %219, !dbg !3594

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 709) #24, !dbg !3595
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #24, !dbg !3595
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 709) #24, !dbg !3595
  unreachable, !dbg !3595

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3600
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3600
  call void @llvm.dbg.value(metadata i8* %221, metadata !3363, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %40, metadata !3362, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %222, metadata !3365, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %113, metadata !3366, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %112, metadata !3367, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8 poison, metadata !3380, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8 poison, metadata !3377, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %72, metadata !3374, metadata !DIExpression()), !dbg !3426
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3458
  call void @llvm.dbg.value(metadata i8* %223, metadata !3362, metadata !DIExpression()), !dbg !3426
  %224 = load i8, i8* %223, align 1, !dbg !3460
  %225 = icmp eq i8 %224, 0, !dbg !3461
  br i1 %225, label %226, label %38, !dbg !3462

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3601
  %228 = ptrtoint i8* %227 to i32, !dbg !3602
  %229 = sub i32 %228, %17, !dbg !3602
  %230 = lshr i32 %229, 2, !dbg !3604
  %231 = icmp ugt i32 %229, 1023, !dbg !3605
  br i1 %231, label %232, label %233, !dbg !3606

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 721) #24, !dbg !3607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #24, !dbg !3607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 721) #24, !dbg !3607
  unreachable, !dbg !3607

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3612

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3613
  %236 = add i32 %235, %229, !dbg !3616
  br label %320, !dbg !3617

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3618
  store i8 %238, i8* %0, align 1, !dbg !3619
  %239 = trunc i32 %194 to i8, !dbg !3620
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3622
  store i8 %240, i8* %242, align 1, !dbg !3624
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3625
  store i8 %241, i8* %243, align 1, !dbg !3626
  %244 = trunc i32 %193 to i8, !dbg !3627
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3628
  store i8 %244, i8* %245, align 1, !dbg !3629
  %246 = icmp eq i32 %193, 0, !dbg !3630
  %247 = xor i1 %246, true, !dbg !3631
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3631
  call void @llvm.dbg.value(metadata i8* %227, metadata !3365, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 0, metadata !3375, metadata !DIExpression()), !dbg !3426
  br i1 %249, label %250, label %269, !dbg !3631

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3632

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3365, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %254, metadata !3375, metadata !DIExpression()), !dbg !3426
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3633
  %256 = load i8, i8* %255, align 1, !dbg !3633
  %257 = icmp sgt i8 %256, -1, !dbg !3635
  br i1 %257, label %265, label %258, !dbg !3636

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3419, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3637
  %259 = ptrtoint i8* %253 to i32, !dbg !3638
  %260 = add i32 %251, %259, !dbg !3640
  %261 = icmp ugt i32 %260, %196, !dbg !3641
  br i1 %261, label %320, label %262, !dbg !3642

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3643
  call void @llvm.dbg.value(metadata i8 %263, metadata !3419, metadata !DIExpression()), !dbg !3637
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3644
  call void @llvm.dbg.value(metadata i8* %264, metadata !3365, metadata !DIExpression()), !dbg !3426
  store i8 %263, i8* %253, align 1, !dbg !3645
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3575
  call void @llvm.dbg.value(metadata i8* %266, metadata !3365, metadata !DIExpression()), !dbg !3426
  %267 = add nuw i32 %254, 1, !dbg !3646
  call void @llvm.dbg.value(metadata i32 %267, metadata !3375, metadata !DIExpression()), !dbg !3426
  %268 = icmp eq i32 %267, %195, !dbg !3647
  br i1 %268, label %269, label %252, !dbg !3632, !llvm.loop !3648

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3575
  call void @llvm.dbg.value(metadata i8* %270, metadata !3365, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 0, metadata !3375, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %133, metadata !3376, metadata !DIExpression()), !dbg !3426
  %271 = icmp eq i32 %195, 0, !dbg !3650
  br i1 %271, label %316, label %272, !dbg !3653

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3653

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3365, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %276, metadata !3376, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %277, metadata !3375, metadata !DIExpression()), !dbg !3426
  br i1 %246, label %282, label %278, !dbg !3654

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3657
  %280 = load i8, i8* %279, align 1, !dbg !3657
  %281 = icmp sgt i8 %280, -1, !dbg !3658
  br i1 %281, label %282, label %311, !dbg !3659

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3660

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3366, metadata !DIExpression()), !dbg !3426
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3661
  %285 = load i8, i8* %284, align 1, !dbg !3661
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3664
  call void @llvm.dbg.value(metadata i8* %286, metadata !3365, metadata !DIExpression()), !dbg !3426
  store i8 %285, i8* %275, align 1, !dbg !3665
  br label %297, !dbg !3666

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3667
  %289 = load i8, i8* %288, align 1, !dbg !3667
  %290 = zext i8 %289 to i32, !dbg !3667
  %291 = shl nuw nsw i32 %290, 2, !dbg !3669
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3670
  %293 = bitcast i8* %292 to i8**, !dbg !3671
  %294 = load i8*, i8** %293, align 4, !dbg !3671
  call void @llvm.dbg.value(metadata i8* %294, metadata !3376, metadata !DIExpression()), !dbg !3426
  store i8* null, i8** %293, align 4, !dbg !3672
  %295 = tail call i32 @strlen(i8* noundef %294) #24, !dbg !3673
  %296 = add i32 %295, 1, !dbg !3674
  call void @llvm.dbg.value(metadata i32 %296, metadata !3366, metadata !DIExpression()), !dbg !3426
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3426
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3675
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3426
  call void @llvm.dbg.value(metadata i8* %300, metadata !3365, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %299, metadata !3366, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %298, metadata !3376, metadata !DIExpression()), !dbg !3426
  %301 = ptrtoint i8* %300 to i32, !dbg !3676
  %302 = add i32 %273, %299, !dbg !3678
  %303 = add i32 %302, %301, !dbg !3679
  %304 = icmp ugt i32 %303, %196, !dbg !3680
  br i1 %304, label %320, label %305, !dbg !3681

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3682
  %307 = load i8, i8* %306, align 1, !dbg !3682
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3683
  call void @llvm.dbg.value(metadata i8* %308, metadata !3365, metadata !DIExpression()), !dbg !3426
  store i8 %307, i8* %300, align 1, !dbg !3684
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #24, !dbg !3685
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3686
  call void @llvm.dbg.value(metadata i8* %310, metadata !3365, metadata !DIExpression()), !dbg !3426
  br label %311, !dbg !3687

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3688
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3426
  call void @llvm.dbg.value(metadata i8* %313, metadata !3365, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %312, metadata !3376, metadata !DIExpression()), !dbg !3426
  %314 = add nuw i32 %277, 1, !dbg !3689
  call void @llvm.dbg.value(metadata i32 %314, metadata !3375, metadata !DIExpression()), !dbg !3426
  %315 = icmp eq i32 %314, %195, !dbg !3650
  br i1 %315, label %316, label %274, !dbg !3653, !llvm.loop !3690

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3575
  %318 = ptrtoint i8* %317 to i32, !dbg !3692
  %319 = sub i32 %318, %17, !dbg !3692
  br label %320, !dbg !3693

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3694
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3694
  ret i32 %321, !dbg !3694
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !3695 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3699, metadata !DIExpression()), !dbg !3700
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #25, !dbg !3701
  ret i1 %2, !dbg !3702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !3703 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3708, metadata !DIExpression()), !dbg !3709
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3710
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3711
  %4 = and i1 %2, %3, !dbg !3711
  ret i1 %4, !dbg !3712
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3713 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3717, metadata !DIExpression()), !dbg !3723
  call void @llvm.dbg.value(metadata i32 %1, metadata !3718, metadata !DIExpression()), !dbg !3723
  call void @llvm.dbg.value(metadata i32 %2, metadata !3719, metadata !DIExpression()), !dbg !3723
  call void @llvm.dbg.value(metadata i8* %3, metadata !3720, metadata !DIExpression()), !dbg !3723
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3724
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3724
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3721, metadata !DIExpression()), !dbg !3725
  call void @llvm.va_start(i8* nonnull %6), !dbg !3726
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3727
  %8 = load i32, i32* %7, align 4, !dbg !3727
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3727
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #25, !dbg !3727
  call void @llvm.dbg.value(metadata i32 %10, metadata !3722, metadata !DIExpression()), !dbg !3723
  call void @llvm.va_end(i8* nonnull %6), !dbg !3728
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3729
  ret i32 %10, !dbg !3730
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3731 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3743, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3744, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata i8* %2, metadata !3745, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata i8* %3, metadata !3746, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata i8* %3, metadata !3747, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata i8* %3, metadata !3748, metadata !DIExpression()), !dbg !3762
  %5 = icmp eq i8* %3, null, !dbg !3763
  br i1 %5, label %45, label %6, !dbg !3765

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3757, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3762
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3766
  %8 = load i8, i8* %7, align 1, !dbg !3766
  %9 = zext i8 %8 to i32, !dbg !3767
  call void @llvm.dbg.value(metadata i32 %9, metadata !3758, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata i8 undef, metadata !3759, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3762
  call void @llvm.dbg.value(metadata i8 undef, metadata !3760, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3762
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3762
  call void @llvm.dbg.value(metadata i32 0, metadata !3756, metadata !DIExpression()), !dbg !3762
  %10 = icmp eq i8 %8, 0, !dbg !3768
  br i1 %10, label %39, label %11, !dbg !3771

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3772
  call void @llvm.dbg.value(metadata i8 %12, metadata !3757, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3762
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3762
  %13 = zext i8 %12 to i32, !dbg !3773
  call void @llvm.dbg.value(metadata i32 %13, metadata !3757, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3762
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3762
  %14 = shl nuw nsw i32 %13, 2, !dbg !3774
  call void @llvm.dbg.value(metadata i32 %14, metadata !3757, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3762
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3775
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3762
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3776
  %17 = load i8, i8* %16, align 1, !dbg !3776
  call void @llvm.dbg.value(metadata i8 %17, metadata !3759, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3762
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3762
  %18 = zext i8 %17 to i32, !dbg !3777
  call void @llvm.dbg.value(metadata i32 %18, metadata !3759, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3762
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3778
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3762
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3779
  %21 = load i8, i8* %20, align 1, !dbg !3779
  call void @llvm.dbg.value(metadata i8 %21, metadata !3760, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3762
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3762
  %22 = zext i8 %21 to i32, !dbg !3780
  call void @llvm.dbg.value(metadata i32 %22, metadata !3760, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3762
  %23 = shl nuw nsw i32 %22, 1, !dbg !3781
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3762
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3782
  call void @llvm.dbg.value(metadata i8* %24, metadata !3754, metadata !DIExpression()), !dbg !3762
  br label %25, !dbg !3771

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3754, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata i32 %27, metadata !3756, metadata !DIExpression()), !dbg !3762
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3783
  call void @llvm.dbg.value(metadata i8* %28, metadata !3754, metadata !DIExpression()), !dbg !3762
  %29 = load i8, i8* %26, align 1, !dbg !3785
  %30 = zext i8 %29 to i32, !dbg !3785
  call void @llvm.dbg.value(metadata i32 %30, metadata !3761, metadata !DIExpression()), !dbg !3762
  %31 = shl nuw nsw i32 %30, 2, !dbg !3786
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3787
  %33 = bitcast i8* %32 to i8**, !dbg !3788
  call void @llvm.dbg.value(metadata i8** %33, metadata !3755, metadata !DIExpression()), !dbg !3762
  store i8* %28, i8** %33, align 4, !dbg !3789
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #24, !dbg !3790
  %35 = add i32 %34, 1, !dbg !3791
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3792
  call void @llvm.dbg.value(metadata i8* %36, metadata !3754, metadata !DIExpression()), !dbg !3762
  %37 = add nuw nsw i32 %27, 1, !dbg !3793
  call void @llvm.dbg.value(metadata i32 %37, metadata !3756, metadata !DIExpression()), !dbg !3762
  %38 = icmp eq i32 %37, %9, !dbg !3768
  br i1 %38, label %39, label %25, !dbg !3771, !llvm.loop !3794

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3796
  call void @llvm.dbg.value(metadata i8* %40, metadata !3747, metadata !DIExpression()), !dbg !3762
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3797
  %42 = bitcast i8* %41 to i8**, !dbg !3797
  %43 = load i8*, i8** %42, align 1, !dbg !3797
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #25, !dbg !3798
  br label %45, !dbg !3799

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3762
  ret i32 %46, !dbg !3800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3801 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3805, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3806, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i8* %2, metadata !3807, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i8* %3, metadata !3808, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i8* %4, metadata !3809, metadata !DIExpression()), !dbg !3815
  call void @llvm.dbg.value(metadata i8* %4, metadata !3810, metadata !DIExpression()), !dbg !3815
  %6 = ptrtoint i8* %4 to i32, !dbg !3816
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3816
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #24, !dbg !3816
  ret i32 %8, !dbg !3817
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !3818 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3822, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i32 %1, metadata !3823, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i8 0, metadata !3825, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i32 0, metadata !3826, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i8 poison, metadata !3825, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i8* %0, metadata !3822, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3827
  %3 = load i8, i8* %0, align 1, !dbg !3828
  call void @llvm.dbg.value(metadata i8 %3, metadata !3824, metadata !DIExpression()), !dbg !3827
  %4 = icmp eq i8 %3, 0, !dbg !3829
  br i1 %4, label %29, label %5, !dbg !3830

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3831
  call void @llvm.dbg.value(metadata i32 %8, metadata !3826, metadata !DIExpression()), !dbg !3827
  br i1 %9, label %11, label %22, !dbg !3832

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3834
  br i1 %12, label %13, label %17, !dbg !3838

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3839
  br i1 %14, label %29, label %15, !dbg !3842

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !3843
  br i1 %16, label %29, label %22, !dbg !3845

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !3846
  %19 = xor i1 %18, true, !dbg !3848
  %20 = zext i1 %18 to i32, !dbg !3848
  %21 = add nsw i32 %8, %20, !dbg !3848
  br label %22, !dbg !3848

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3827
  call void @llvm.dbg.value(metadata i32 %24, metadata !3826, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i8 poison, metadata !3825, metadata !DIExpression()), !dbg !3827
  %25 = icmp eq i8 %6, 37, !dbg !3849
  %26 = xor i1 %25, %23, !dbg !3851
  call void @llvm.dbg.value(metadata i8* %10, metadata !3822, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.value(metadata i8* %10, metadata !3822, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3827
  %27 = load i8, i8* %10, align 1, !dbg !3828
  call void @llvm.dbg.value(metadata i8 %27, metadata !3824, metadata !DIExpression()), !dbg !3827
  %28 = icmp eq i8 %27, 0, !dbg !3829
  br i1 %28, label %29, label %5, !dbg !3830, !llvm.loop !3852

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3827
  ret i1 %30, !dbg !3854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #6 !dbg !3855 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3859, metadata !DIExpression()), !dbg !3860
  %2 = add i8 %0, -64, !dbg !3861
  %3 = icmp ult i8 %2, 59, !dbg !3861
  ret i1 %3, !dbg !3862
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3863 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3871, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %1, metadata !3872, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3873, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8* %3, metadata !3874, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %4, metadata !3875, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i16* %5, metadata !3876, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %6, metadata !3877, metadata !DIExpression()), !dbg !3940
  %11 = icmp eq i8* %0, null, !dbg !3941
  br i1 %11, label %12, label %13, !dbg !3944

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 916) #24, !dbg !3945
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 916) #24, !dbg !3945
  unreachable, !dbg !3945

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3878, metadata !DIExpression()), !dbg !3940
  %14 = bitcast i8* %0 to i32*, !dbg !3947
  call void @llvm.dbg.value(metadata i32* %14, metadata !3879, metadata !DIExpression()), !dbg !3940
  %15 = and i32 %4, 8, !dbg !3948
  %16 = icmp eq i32 %15, 0, !dbg !3949
  call void @llvm.dbg.value(metadata i1 %16, metadata !3883, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3940
  call void @llvm.dbg.value(metadata i8* %0, metadata !3886, metadata !DIExpression()), !dbg !3940
  %17 = icmp eq i32 %1, 0, !dbg !3950
  br i1 %17, label %18, label %20, !dbg !3951

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #25, !dbg !3952
  br label %20, !dbg !3951

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3951
  call void @llvm.dbg.value(metadata i32 %21, metadata !3872, metadata !DIExpression()), !dbg !3940
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3953
  %23 = load i8, i8* %22, align 1, !dbg !3953
  %24 = zext i8 %23 to i32, !dbg !3954
  call void @llvm.dbg.value(metadata i32 %24, metadata !3881, metadata !DIExpression()), !dbg !3940
  %25 = icmp ne i8 %23, 0, !dbg !3955
  %26 = and i32 %4, 1, !dbg !3956
  %27 = icmp ne i32 %26, 0, !dbg !3956
  %28 = and i1 %27, %25, !dbg !3956
  call void @llvm.dbg.value(metadata i1 %28, metadata !3885, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3940
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3957
  %30 = load i8, i8* %29, align 1, !dbg !3957
  %31 = zext i8 %30 to i32, !dbg !3958
  call void @llvm.dbg.value(metadata i32 %31, metadata !3882, metadata !DIExpression()), !dbg !3940
  %32 = icmp ne i8 %30, 0, !dbg !3959
  %33 = and i32 %4, 2, !dbg !3960
  %34 = icmp ne i32 %33, 0, !dbg !3960
  %35 = and i1 %34, %32, !dbg !3960
  call void @llvm.dbg.value(metadata i1 %35, metadata !3884, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3940
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3961
  br i1 %36, label %41, label %37, !dbg !3961

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3963
  br i1 %38, label %287, label %39, !dbg !3966

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #24, !dbg !3967
  br label %287, !dbg !3969

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3970
  %43 = zext i8 %42 to i32, !dbg !3971
  %44 = shl nuw nsw i32 %43, 2, !dbg !3972
  call void @llvm.dbg.value(metadata i32 %44, metadata !3880, metadata !DIExpression()), !dbg !3940
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3973
  %46 = bitcast i8* %45 to i8**, !dbg !3974
  %47 = load i8*, i8** %46, align 4, !dbg !3974
  call void @llvm.dbg.value(metadata i8* %47, metadata !3889, metadata !DIExpression()), !dbg !3940
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3975
  call void @llvm.dbg.value(metadata i8* %48, metadata !3890, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 0, metadata !3891, metadata !DIExpression()), !dbg !3940
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3976
  br i1 %49, label %50, label %135, !dbg !3977

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3888, metadata !DIExpression()), !dbg !3940
  br i1 %28, label %51, label %76, !dbg !3978

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3888, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8* %48, metadata !3890, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 0, metadata !3891, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 0, metadata !3892, metadata !DIExpression()), !dbg !3979
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3980

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3888, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8* %55, metadata !3890, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %56, metadata !3891, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %57, metadata !3892, metadata !DIExpression()), !dbg !3979
  %58 = load i8, i8* %55, align 1, !dbg !3981
  %59 = zext i8 %58 to i32, !dbg !3982
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3982
  %61 = bitcast i32* %60 to i8**, !dbg !3983
  %62 = load i8*, i8** %61, align 4, !dbg !3983
  call void @llvm.dbg.value(metadata i8* %62, metadata !3898, metadata !DIExpression()), !dbg !3984
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #25, !dbg !3985
  call void @llvm.dbg.value(metadata i32 %63, metadata !3901, metadata !DIExpression()), !dbg !3984
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3986
  br i1 %65, label %66, label %70, !dbg !3986

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3988
  %68 = add nuw i32 %56, 1, !dbg !3990
  call void @llvm.dbg.value(metadata i32 %68, metadata !3891, metadata !DIExpression()), !dbg !3940
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3991
  store i16 %67, i16* %69, align 2, !dbg !3992
  br label %70, !dbg !3993

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3940
  call void @llvm.dbg.value(metadata i32 %71, metadata !3891, metadata !DIExpression()), !dbg !3940
  %72 = add nsw i32 %63, %54, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %72, metadata !3888, metadata !DIExpression()), !dbg !3940
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3995
  call void @llvm.dbg.value(metadata i8* %73, metadata !3890, metadata !DIExpression()), !dbg !3940
  %74 = add nuw nsw i32 %57, 1, !dbg !3996
  call void @llvm.dbg.value(metadata i32 %74, metadata !3892, metadata !DIExpression()), !dbg !3979
  %75 = icmp eq i32 %74, %24, !dbg !3997
  br i1 %75, label %82, label %53, !dbg !3980, !llvm.loop !3998

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4000
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4000
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4000
  br label %82, !dbg !4000

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4003
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3940
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4004
  call void @llvm.dbg.value(metadata i1 undef, metadata !3902, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4005
  call void @llvm.dbg.value(metadata i32 0, metadata !3903, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %85, metadata !3888, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8* %84, metadata !3890, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %83, metadata !3891, metadata !DIExpression()), !dbg !3940
  %86 = icmp eq i8 %30, 0, !dbg !4007
  br i1 %86, label %287, label %87, !dbg !4008

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4009
  %89 = icmp eq i32 %88, 0, !dbg !4010
  call void @llvm.dbg.value(metadata i1 %89, metadata !3902, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4005
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4008

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3888, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8* %96, metadata !3890, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %97, metadata !3891, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %98, metadata !3903, metadata !DIExpression()), !dbg !4006
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4011
  call void @llvm.dbg.value(metadata i8* %99, metadata !3890, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8 undef, metadata !3905, metadata !DIExpression()), !dbg !4012
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4013
  call void @llvm.dbg.value(metadata i8* %100, metadata !3890, metadata !DIExpression()), !dbg !3940
  %101 = load i8, i8* %99, align 1, !dbg !4014
  call void @llvm.dbg.value(metadata i8 %101, metadata !3908, metadata !DIExpression()), !dbg !4012
  %102 = zext i8 %101 to i32, !dbg !4015
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4015
  %104 = bitcast i32* %103 to i8**, !dbg !4016
  %105 = load i8*, i8** %104, align 4, !dbg !4016
  call void @llvm.dbg.value(metadata i8* %105, metadata !3909, metadata !DIExpression()), !dbg !4012
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #25, !dbg !4017
  call void @llvm.dbg.value(metadata i1 %106, metadata !3910, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4012
  br i1 %16, label %113, label %107, !dbg !4018

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4020
  call void @llvm.dbg.value(metadata i8 %108, metadata !3905, metadata !DIExpression()), !dbg !4012
  %109 = zext i8 %108 to i32, !dbg !4021
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #25, !dbg !4022
  br i1 %110, label %111, label %113, !dbg !4023

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #24, !dbg !4024
  %112 = add nsw i32 %95, -2, !dbg !4030
  call void @llvm.dbg.value(metadata i32 %112, metadata !3888, metadata !DIExpression()), !dbg !3940
  br label %130, !dbg !4031

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4032

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4033

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4035
  call void @llvm.dbg.value(metadata i32 %116, metadata !3888, metadata !DIExpression()), !dbg !3940
  br label %130, !dbg !4038

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4039

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3936), !dbg !4040
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #25, !dbg !4041
  call void @llvm.dbg.value(metadata i32 %119, metadata !3911, metadata !DIExpression()), !dbg !4012
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4042
  br i1 %121, label %122, label %126, !dbg !4042

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4044
  %124 = add nuw i32 %97, 1, !dbg !4046
  call void @llvm.dbg.value(metadata i32 %124, metadata !3891, metadata !DIExpression()), !dbg !3940
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4047
  store i16 %123, i16* %125, align 2, !dbg !4048
  br label %126, !dbg !4049

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3940
  call void @llvm.dbg.value(metadata i32 %127, metadata !3891, metadata !DIExpression()), !dbg !3940
  %128 = add i32 %95, -1, !dbg !4050
  %129 = add i32 %128, %119, !dbg !4051
  call void @llvm.dbg.value(metadata i32 %129, metadata !3888, metadata !DIExpression()), !dbg !3940
  br label %130, !dbg !4052

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3940
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4012
  call void @llvm.dbg.value(metadata i32 %132, metadata !3888, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %131, metadata !3891, metadata !DIExpression()), !dbg !3940
  %133 = add nuw nsw i32 %98, 1, !dbg !4053
  call void @llvm.dbg.value(metadata i8* %100, metadata !3890, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %133, metadata !3903, metadata !DIExpression()), !dbg !4006
  %134 = icmp eq i32 %133, %31, !dbg !4007
  br i1 %134, label %287, label %94, !dbg !4008, !llvm.loop !4054

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3913, metadata !DIExpression()), !dbg !4056
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3914, metadata !DIExpression()), !dbg !4057
  br i1 %28, label %136, label %138, !dbg !4058

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3915, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8 0, metadata !3916, metadata !DIExpression()), !dbg !3940
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4059
  call void @llvm.dbg.value(metadata i8* %137, metadata !3917, metadata !DIExpression()), !dbg !3940
  br label %143, !dbg !4062

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4063
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4063

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3917, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8 undef, metadata !3916, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8 0, metadata !3915, metadata !DIExpression()), !dbg !3940
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #24, !dbg !4065
  br label %148, !dbg !4068

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4069
  call void @llvm.dbg.value(metadata i8* %151, metadata !3890, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 0, metadata !3919, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i8 %149, metadata !3916, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8 %150, metadata !3915, metadata !DIExpression()), !dbg !3940
  %152 = icmp eq i8 %30, 0, !dbg !4071
  br i1 %152, label %153, label %155, !dbg !4072

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4073
  br label %160, !dbg !4072

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4072

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4073
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4074
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4075
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3940
  call void @llvm.dbg.value(metadata i8 undef, metadata !3912, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3940
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4076
  %166 = load i8, i8* %165, align 1, !dbg !4076
  %167 = zext i8 %162 to i32, !dbg !4077
  %168 = add i8 %166, %162, !dbg !4078
  call void @llvm.dbg.value(metadata i8 %168, metadata !3912, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3940
  %169 = icmp eq i32 %33, 0, !dbg !4079
  %170 = lshr i8 %163, 1, !dbg !4080
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4080
  call void @llvm.dbg.value(metadata i8 %171, metadata !3912, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3940
  %172 = icmp eq i32 %26, 0, !dbg !4081
  %173 = icmp eq i32 %161, 0, !dbg !4073
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4073
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4073
  call void @llvm.dbg.value(metadata i8 %175, metadata !3912, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3940
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3927, metadata !DIExpression()), !dbg !4082
  %176 = load i32, i32* %14, align 1, !dbg !4083
  store i8 %168, i8* %165, align 1, !dbg !4084
  store i8 %175, i8* %22, align 1, !dbg !4084
  store i8 %171, i8* %29, align 1, !dbg !4084
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #24, !dbg !4085
  call void @llvm.dbg.value(metadata i32 %177, metadata !3918, metadata !DIExpression()), !dbg !3940
  %178 = icmp slt i32 %177, 0, !dbg !4086
  br i1 %178, label %287, label %240, !dbg !4088

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3890, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %181, metadata !3919, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i8 %182, metadata !3916, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8 %183, metadata !3915, metadata !DIExpression()), !dbg !3940
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4089
  call void @llvm.dbg.value(metadata i8* %184, metadata !3890, metadata !DIExpression()), !dbg !3940
  %185 = load i8, i8* %180, align 1, !dbg !4090
  call void @llvm.dbg.value(metadata i8 %185, metadata !3921, metadata !DIExpression()), !dbg !4091
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4092
  call void @llvm.dbg.value(metadata i8* %186, metadata !3890, metadata !DIExpression()), !dbg !3940
  %187 = load i8, i8* %184, align 1, !dbg !4093
  call void @llvm.dbg.value(metadata i8 %187, metadata !3924, metadata !DIExpression()), !dbg !4091
  %188 = zext i8 %187 to i32, !dbg !4094
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4094
  %190 = bitcast i32* %189 to i8**, !dbg !4095
  %191 = load i8*, i8** %190, align 4, !dbg !4095
  call void @llvm.dbg.value(metadata i8* %191, metadata !3925, metadata !DIExpression()), !dbg !4091
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #25, !dbg !4096
  call void @llvm.dbg.value(metadata i1 %192, metadata !3926, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4091
  br i1 %16, label %196, label %193, !dbg !4097

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4099
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #25, !dbg !4100
  br i1 %195, label %235, label %196, !dbg !4101

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4102

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4103

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4106
  br i1 %199, label %201, label %200, !dbg !4111

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4112
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4112
  unreachable, !dbg !4112

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4106
  %203 = add nuw nsw i8 %183, 1, !dbg !4114
  call void @llvm.dbg.value(metadata i8 %203, metadata !3915, metadata !DIExpression()), !dbg !3940
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4115
  br label %231, !dbg !4116

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4117

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4118
  br i1 %207, label %209, label %208, !dbg !4123

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4124
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4124
  unreachable, !dbg !4124

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4118
  %211 = add nuw nsw i8 %182, 1, !dbg !4126
  call void @llvm.dbg.value(metadata i8 %211, metadata !3916, metadata !DIExpression()), !dbg !3940
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4127
  br label %231, !dbg !4128

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4129

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4131
  br i1 %215, label %217, label %216, !dbg !4136

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4137
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4137
  unreachable, !dbg !4137

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4131
  %219 = add nuw nsw i8 %183, 1, !dbg !4139
  call void @llvm.dbg.value(metadata i8 %219, metadata !3915, metadata !DIExpression()), !dbg !3940
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4140
  br label %231, !dbg !4141

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4142
  br i1 %222, label %224, label %223, !dbg !4146

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4147
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4147
  unreachable, !dbg !4147

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4142
  %226 = add nuw nsw i8 %182, 1, !dbg !4149
  call void @llvm.dbg.value(metadata i8 %226, metadata !3916, metadata !DIExpression()), !dbg !3940
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4150
  store i8 %185, i8* %227, align 1, !dbg !4151
  %228 = add nuw nsw i8 %182, 2, !dbg !4152
  call void @llvm.dbg.value(metadata i8 %228, metadata !3916, metadata !DIExpression()), !dbg !3940
  %229 = zext i8 %226 to i32, !dbg !4153
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4153
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4154
  br label %235, !dbg !4155

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3940
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4075
  call void @llvm.dbg.value(metadata i8 %237, metadata !3916, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i8 %236, metadata !3915, metadata !DIExpression()), !dbg !3940
  %238 = add nuw nsw i32 %181, 1, !dbg !4155
  call void @llvm.dbg.value(metadata i8* %186, metadata !3890, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %238, metadata !3919, metadata !DIExpression()), !dbg !4070
  %239 = icmp eq i32 %238, %31, !dbg !4071
  br i1 %239, label %160, label %179, !dbg !4072, !llvm.loop !4156

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4080
  call void @llvm.dbg.value(metadata i32 %177, metadata !3888, metadata !DIExpression()), !dbg !3940
  store i32 %176, i32* %14, align 1, !dbg !4158
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4159
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #24, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %243, metadata !3918, metadata !DIExpression()), !dbg !3940
  %244 = icmp slt i32 %243, 0, !dbg !4161
  br i1 %244, label %287, label %245, !dbg !4163

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3888, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3940
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4164
  %248 = add nuw nsw i32 %44, %24, !dbg !4164
  %249 = sub i32 %247, %248, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %249, metadata !3928, metadata !DIExpression()), !dbg !3940
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #24, !dbg !4165
  call void @llvm.dbg.value(metadata i32 %250, metadata !3918, metadata !DIExpression()), !dbg !3940
  %251 = icmp slt i32 %250, 0, !dbg !4166
  br i1 %251, label %287, label %252, !dbg !4168

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4169
  call void @llvm.dbg.value(metadata i32 %253, metadata !3888, metadata !DIExpression()), !dbg !3940
  %254 = add nuw nsw i32 %253, %250, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %254, metadata !3888, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 0, metadata !3929, metadata !DIExpression()), !dbg !4171
  %255 = icmp eq i8 %162, 0, !dbg !4172
  br i1 %255, label %284, label %256, !dbg !4173

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4173

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3929, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %260, metadata !3888, metadata !DIExpression()), !dbg !3940
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4174
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4175
  %262 = load i8, i8* %261, align 1, !dbg !4175
  call void @llvm.dbg.value(metadata i8 %262, metadata !3931, metadata !DIExpression()), !dbg !4176
  store i8 %262, i8* %10, align 1, !dbg !4177
  %263 = zext i8 %262 to i32, !dbg !4178
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4178
  %265 = bitcast i32* %264 to i8**, !dbg !4179
  %266 = load i8*, i8** %265, align 4, !dbg !4179
  call void @llvm.dbg.value(metadata i8* %266, metadata !3934, metadata !DIExpression()), !dbg !4176
  br i1 %257, label %270, label %267, !dbg !4180

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4181
  %269 = load i16, i16* %268, align 2, !dbg !4181
  br label %270, !dbg !4180

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4180
  call void @llvm.dbg.value(metadata i32 undef, metadata !3935, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4176
  call void @llvm.dbg.value(metadata i8* %10, metadata !3931, metadata !DIExpression(DW_OP_deref)), !dbg !4176
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #24, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %272, metadata !3918, metadata !DIExpression()), !dbg !3940
  %273 = icmp slt i32 %272, 0, !dbg !4183
  br i1 %273, label %277, label %274, !dbg !4185

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3935, metadata !DIExpression()), !dbg !4176
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3888, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3940
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #25, !dbg !4186
  call void @llvm.dbg.value(metadata i32 %275, metadata !3918, metadata !DIExpression()), !dbg !3940
  %276 = icmp slt i32 %275, 0, !dbg !4187
  br i1 %276, label %277, label %279, !dbg !4189

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3888, metadata !DIExpression()), !dbg !3940
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4190
  call void @llvm.dbg.value(metadata i32 undef, metadata !3888, metadata !DIExpression()), !dbg !3940
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4191
  call void @llvm.dbg.value(metadata i32 %280, metadata !3888, metadata !DIExpression()), !dbg !3940
  %281 = add nsw i32 %280, %275, !dbg !4192
  call void @llvm.dbg.value(metadata i32 %281, metadata !3888, metadata !DIExpression()), !dbg !3940
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4190
  %282 = add nuw nsw i32 %259, 1, !dbg !4193
  call void @llvm.dbg.value(metadata i32 %282, metadata !3929, metadata !DIExpression()), !dbg !4171
  %283 = icmp eq i32 %282, %167, !dbg !4172
  br i1 %283, label %284, label %258, !dbg !4173, !llvm.loop !4194

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4170
  call void @llvm.dbg.value(metadata i32 %285, metadata !3888, metadata !DIExpression()), !dbg !3940
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #24, !dbg !4196
  br label %287, !dbg !4197

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3940
  ret i32 %288, !dbg !4198
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4199 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4203, metadata !DIExpression()), !dbg !4211
  %2 = icmp eq i8* %0, null, !dbg !4212
  br i1 %2, label %3, label %4, !dbg !4215

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 198) #24, !dbg !4216
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 198) #24, !dbg !4216
  unreachable, !dbg !4216

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4204, metadata !DIExpression()), !dbg !4211
  call void @llvm.dbg.value(metadata i8* %0, metadata !4205, metadata !DIExpression()), !dbg !4211
  %5 = load i8, i8* %0, align 1, !dbg !4218
  %6 = zext i8 %5 to i32, !dbg !4218
  %7 = shl nuw nsw i32 %6, 2, !dbg !4219
  call void @llvm.dbg.value(metadata i32 %7, metadata !4206, metadata !DIExpression()), !dbg !4211
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4220
  %9 = load i8, i8* %8, align 1, !dbg !4220
  %10 = zext i8 %9 to i32, !dbg !4220
  call void @llvm.dbg.value(metadata i32 %10, metadata !4207, metadata !DIExpression()), !dbg !4211
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4221
  %12 = load i8, i8* %11, align 1, !dbg !4221
  %13 = zext i8 %12 to i32, !dbg !4221
  call void @llvm.dbg.value(metadata i32 %13, metadata !4208, metadata !DIExpression()), !dbg !4211
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4222
  call void @llvm.dbg.value(metadata i8* %14, metadata !4204, metadata !DIExpression()), !dbg !4211
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4223
  call void @llvm.dbg.value(metadata i8* %15, metadata !4204, metadata !DIExpression()), !dbg !4211
  call void @llvm.dbg.value(metadata i32 0, metadata !4209, metadata !DIExpression()), !dbg !4224
  %16 = icmp eq i8 %9, 0, !dbg !4225
  br i1 %16, label %17, label %22, !dbg !4227

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4211
  %19 = ptrtoint i8* %18 to i32, !dbg !4228
  %20 = ptrtoint i8* %0 to i32, !dbg !4228
  %21 = sub i32 %19, %20, !dbg !4228
  ret i32 %21, !dbg !4229

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4209, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %24, metadata !4204, metadata !DIExpression()), !dbg !4211
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4230
  call void @llvm.dbg.value(metadata i8* %25, metadata !4204, metadata !DIExpression()), !dbg !4211
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #24, !dbg !4232
  %27 = add i32 %26, 1, !dbg !4233
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4234
  call void @llvm.dbg.value(metadata i8* %28, metadata !4204, metadata !DIExpression()), !dbg !4211
  %29 = add nuw nsw i32 %23, 1, !dbg !4235
  call void @llvm.dbg.value(metadata i32 %29, metadata !4209, metadata !DIExpression()), !dbg !4224
  %30 = icmp eq i32 %29, %10, !dbg !4225
  br i1 %30, label %17, label %22, !dbg !4227, !llvm.loop !4236
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4238 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4242, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8* %1, metadata !4243, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i8* %2, metadata !4244, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.value(metadata i16 %3, metadata !4245, metadata !DIExpression()), !dbg !4246
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4247
  br i1 %5, label %6, label %9, !dbg !4249

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4250
  %8 = add i32 %7, 1, !dbg !4252
  br label %20, !dbg !4253

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4254
  br i1 %10, label %13, label %11, !dbg !4255

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4255
  br label %16, !dbg !4255

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4256
  %15 = add i32 %14, 1, !dbg !4257
  br label %16, !dbg !4255

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4255
  %18 = and i32 %17, 65535, !dbg !4258
  call void @llvm.dbg.value(metadata i32 %17, metadata !4245, metadata !DIExpression()), !dbg !4246
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #24, !dbg !4259
  br label %20, !dbg !4260

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4246
  ret i32 %21, !dbg !4261
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4264, metadata !DIExpression()), !dbg !4265
  ret i32 0, !dbg !4266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !4267 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4271, metadata !DIExpression()), !dbg !4272
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4273
  ret void, !dbg !4274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !4275 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4278
  ret i8* %1, !dbg !4279
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4280 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4291, metadata !DIExpression()), !dbg !4302
  call void @llvm.dbg.value(metadata i8* %0, metadata !4290, metadata !DIExpression()), !dbg !4302
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !4303
  ret void, !dbg !4305
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4310, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.value(metadata i8* %1, metadata !4311, metadata !DIExpression()), !dbg !4312
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4313
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !4313
  ret i32 %4, !dbg !4314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4315 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4322, metadata !DIExpression()), !dbg !4323
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4319, metadata !DIExpression()), !dbg !4323
  call void @llvm.dbg.value(metadata i8* %1, metadata !4320, metadata !DIExpression()), !dbg !4323
  call void @llvm.dbg.value(metadata i8* %2, metadata !4321, metadata !DIExpression()), !dbg !4323
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !4324
  ret void, !dbg !4325
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4326 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4330, metadata !DIExpression()), !dbg !4333
  call void @llvm.dbg.value(metadata i32 %1, metadata !4331, metadata !DIExpression()), !dbg !4333
  call void @llvm.dbg.value(metadata i32 0, metadata !4332, metadata !DIExpression()), !dbg !4333
  %3 = icmp eq i32 %1, 0, !dbg !4334
  br i1 %3, label %13, label %4, !dbg !4337

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4332, metadata !DIExpression()), !dbg !4333
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4338
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4340
  %8 = load i8, i8* %7, align 1, !dbg !4340
  %9 = zext i8 %8 to i32, !dbg !4340
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !4338
  %11 = add nuw i32 %5, 1, !dbg !4341
  call void @llvm.dbg.value(metadata i32 %11, metadata !4332, metadata !DIExpression()), !dbg !4333
  %12 = icmp eq i32 %11, %1, !dbg !4334
  br i1 %12, label %13, label %4, !dbg !4337, !llvm.loop !4342

13:                                               ; preds = %4, %2
  ret void, !dbg !4344
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4345 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4349, metadata !DIExpression()), !dbg !4351
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4352
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4352
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4350, metadata !DIExpression()), !dbg !4353
  call void @llvm.va_start(i8* nonnull %3), !dbg !4354
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4355
  %5 = load i32, i32* %4, align 4, !dbg !4355
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4355
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !4355
  call void @llvm.va_end(i8* nonnull %3), !dbg !4356
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4357
  ret void, !dbg !4357
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4358 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4362, metadata !DIExpression()), !dbg !4367
  call void @llvm.dbg.value(metadata i32 %1, metadata !4363, metadata !DIExpression()), !dbg !4367
  call void @llvm.dbg.value(metadata i8* %2, metadata !4364, metadata !DIExpression()), !dbg !4367
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4368
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4368
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4365, metadata !DIExpression()), !dbg !4369
  call void @llvm.va_start(i8* nonnull %5), !dbg !4370
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4371
  %7 = load i32, i32* %6, align 4, !dbg !4371
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4371
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !4371
  call void @llvm.dbg.value(metadata i32 %9, metadata !4366, metadata !DIExpression()), !dbg !4367
  call void @llvm.va_end(i8* nonnull %5), !dbg !4372
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4373
  ret i32 %9, !dbg !4374
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4375 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4382, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.value(metadata i8* %0, metadata !4379, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.value(metadata i32 %1, metadata !4380, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.value(metadata i8* %2, metadata !4381, metadata !DIExpression()), !dbg !4389
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4390
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4390
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4383, metadata !DIExpression()), !dbg !4391
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4392
  store i8* %0, i8** %7, align 4, !dbg !4392
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4392
  store i32 %1, i32* %8, align 4, !dbg !4392
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4392
  store i32 0, i32* %9, align 4, !dbg !4392
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !4393
  %10 = load i32, i32* %9, align 4, !dbg !4394
  %11 = load i32, i32* %8, align 4, !dbg !4396
  %12 = icmp slt i32 %10, %11, !dbg !4397
  br i1 %12, label %13, label %15, !dbg !4398

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4399
  store i8 0, i8* %14, align 1, !dbg !4401
  br label %15, !dbg !4402

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4403
  ret i32 %10, !dbg !4404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !4405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4410, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4411, metadata !DIExpression()), !dbg !4412
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4413
  %4 = load i8*, i8** %3, align 4, !dbg !4413
  %5 = icmp eq i8* %4, null, !dbg !4415
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4416
  br i1 %5, label %12, label %8, !dbg !4417

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4418
  %10 = load i32, i32* %9, align 4, !dbg !4418
  %11 = icmp slt i32 %7, %10, !dbg !4419
  br i1 %11, label %15, label %12, !dbg !4420

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4421
  %14 = add nsw i32 %7, 1, !dbg !4423
  store i32 %14, i32* %13, align 4, !dbg !4423
  br label %25, !dbg !4424

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4425
  %17 = icmp eq i32 %7, %16, !dbg !4427
  br i1 %17, label %18, label %21, !dbg !4428

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4429
  store i32 %19, i32* %6, align 4, !dbg !4429
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4431
  store i8 0, i8* %20, align 1, !dbg !4432
  br label %25, !dbg !4433

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4434
  %23 = add nsw i32 %7, 1, !dbg !4436
  store i32 %23, i32* %6, align 4, !dbg !4436
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4437
  store i8 %22, i8* %24, align 1, !dbg !4438
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4439
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !4440 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4445, metadata !DIExpression()), !dbg !4449
  call void @llvm.dbg.value(metadata i8* %1, metadata !4446, metadata !DIExpression()), !dbg !4449
  call void @llvm.dbg.value(metadata i8* %2, metadata !4447, metadata !DIExpression()), !dbg !4449
  call void @llvm.dbg.value(metadata i8* %3, metadata !4448, metadata !DIExpression()), !dbg !4449
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !4450
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4451
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !4452
  unreachable, !dbg !4453
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !4454 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4561
  ret %struct.k_thread* %1, !dbg !4562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4563 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4567, metadata !DIExpression()), !dbg !4568
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4569, !srcloc !4571
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !4572
  ret void, !dbg !4573
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !4574 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4575, !srcloc !4577
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !4578
  ret %struct.k_thread* %1, !dbg !4579
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4580 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4593, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4590, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i8* %1, metadata !4591, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i8* %2, metadata !4592, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i32 %4, metadata !4594, metadata !DIExpression()), !dbg !4719
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4720
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4720
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4595, metadata !DIExpression()), !dbg !4721
  call void @llvm.dbg.value(metadata i32 0, metadata !4599, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i1 undef, metadata !4601, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4719
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4722

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4722

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4723
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4593, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i8* %30, metadata !4592, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i32 %29, metadata !4599, metadata !DIExpression()), !dbg !4719
  %31 = load i8, i8* %30, align 1, !dbg !4724
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4722

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4724
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4725
  call void @llvm.dbg.value(metadata i8* %34, metadata !4592, metadata !DIExpression()), !dbg !4719
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !4725
  call void @llvm.dbg.value(metadata i32 %35, metadata !4603, metadata !DIExpression()), !dbg !4726
  %36 = icmp slt i32 %35, 0, !dbg !4727
  %37 = add i32 %29, 1, !dbg !4725
  call void @llvm.dbg.value(metadata i32 undef, metadata !4599, metadata !DIExpression()), !dbg !4719
  br i1 %36, label %365, label %28, !llvm.loop !4729

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4731
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4608, metadata !DIExpression()), !dbg !4732
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4732
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4651, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4654, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8* %30, metadata !4657, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 -1, metadata !4658, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 -1, metadata !4659, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8* null, metadata !4660, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8* %14, metadata !4661, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8 0, metadata !4662, metadata !DIExpression()), !dbg !4733
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !4734
  call void @llvm.dbg.value(metadata i8* %39, metadata !4592, metadata !DIExpression()), !dbg !4719
  %40 = load i24, i24* %15, align 8, !dbg !4735
  %41 = and i24 %40, 256, !dbg !4735
  %42 = icmp eq i24 %41, 0, !dbg !4735
  br i1 %42, label %51, label %43, !dbg !4737

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4738
  call void @llvm.dbg.value(metadata i8* %44, metadata !4593, metadata !DIExpression()), !dbg !4719
  %45 = bitcast i8* %27 to i32*, !dbg !4738
  %46 = load i32, i32* %45, align 4, !dbg !4738
  call void @llvm.dbg.value(metadata i32 %46, metadata !4658, metadata !DIExpression()), !dbg !4733
  %47 = icmp slt i32 %46, 0, !dbg !4740
  br i1 %47, label %48, label %56, !dbg !4742

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4743
  store i24 %49, i24* %15, align 8, !dbg !4743
  %50 = sub nsw i32 0, %46, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %50, metadata !4658, metadata !DIExpression()), !dbg !4733
  br label %56, !dbg !4746

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4747
  %53 = icmp eq i24 %52, 0, !dbg !4747
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4749
  br label %56, !dbg !4749

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4750
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4733
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4593, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i32 %58, metadata !4658, metadata !DIExpression()), !dbg !4733
  %60 = and i24 %57, 1024, !dbg !4750
  %61 = icmp eq i24 %60, 0, !dbg !4750
  br i1 %61, label %69, label %62, !dbg !4751

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4752
  call void @llvm.dbg.value(metadata i8* %63, metadata !4593, metadata !DIExpression()), !dbg !4719
  %64 = bitcast i8* %59 to i32*, !dbg !4752
  %65 = load i32, i32* %64, align 4, !dbg !4752
  call void @llvm.dbg.value(metadata i32 %65, metadata !4663, metadata !DIExpression()), !dbg !4753
  %66 = icmp slt i32 %65, 0, !dbg !4754
  br i1 %66, label %67, label %74, !dbg !4756

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4757
  store i24 %68, i24* %15, align 8, !dbg !4757
  br label %74, !dbg !4759

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4760
  %71 = icmp eq i24 %70, 0, !dbg !4760
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4762
  br label %74, !dbg !4762

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4763
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4733
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4733
  call void @llvm.dbg.value(metadata i8* %77, metadata !4593, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i32 %76, metadata !4659, metadata !DIExpression()), !dbg !4733
  store i32 0, i32* %16, align 4, !dbg !4764
  store i32 0, i32* %17, align 8, !dbg !4765
  %78 = lshr i24 %75, 16, !dbg !4763
  call void @llvm.dbg.value(metadata i24 %78, metadata !4666, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4733
  %79 = lshr i24 %75, 11, !dbg !4766
  %80 = and i24 %79, 15, !dbg !4766
  %81 = zext i24 %80 to i32, !dbg !4766
  call void @llvm.dbg.value(metadata i32 %81, metadata !4667, metadata !DIExpression()), !dbg !4733
  %82 = trunc i24 %78 to i3, !dbg !4767
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4767

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4768

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4771
  call void @llvm.dbg.value(metadata i8* %85, metadata !4593, metadata !DIExpression()), !dbg !4719
  %86 = bitcast i8* %77 to i32*, !dbg !4771
  %87 = load i32, i32* %86, align 4, !dbg !4771
  %88 = sext i32 %87 to i64, !dbg !4771
  store i64 %88, i64* %20, align 8, !dbg !4773
  br label %115, !dbg !4774

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4775
  call void @llvm.dbg.value(metadata i8* %90, metadata !4593, metadata !DIExpression()), !dbg !4719
  %91 = bitcast i8* %77 to i32*, !dbg !4775
  %92 = load i32, i32* %91, align 4, !dbg !4775
  %93 = sext i32 %92 to i64, !dbg !4775
  store i64 %93, i64* %20, align 8, !dbg !4778
  br label %115, !dbg !4779

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4780
  %96 = add i32 %95, 7, !dbg !4780
  %97 = and i32 %96, -8, !dbg !4780
  %98 = inttoptr i32 %97 to i8*, !dbg !4780
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4780
  call void @llvm.dbg.value(metadata i8* %99, metadata !4593, metadata !DIExpression()), !dbg !4719
  %100 = inttoptr i32 %97 to i64*, !dbg !4780
  %101 = load i64, i64* %100, align 8, !dbg !4780
  store i64 %101, i64* %20, align 8, !dbg !4781
  br label %115, !dbg !4782

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4783
  %104 = add i32 %103, 7, !dbg !4783
  %105 = and i32 %104, -8, !dbg !4783
  %106 = inttoptr i32 %105 to i8*, !dbg !4783
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4783
  call void @llvm.dbg.value(metadata i8* %107, metadata !4593, metadata !DIExpression()), !dbg !4719
  %108 = inttoptr i32 %105 to i64*, !dbg !4783
  %109 = load i64, i64* %108, align 8, !dbg !4783
  store i64 %109, i64* %20, align 8, !dbg !4784
  br label %115, !dbg !4785

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4786
  call void @llvm.dbg.value(metadata i8* %111, metadata !4593, metadata !DIExpression()), !dbg !4719
  %112 = bitcast i8* %77 to i32*, !dbg !4786
  %113 = load i32, i32* %112, align 4, !dbg !4786
  %114 = sext i32 %113 to i64, !dbg !4787
  store i64 %114, i64* %20, align 8, !dbg !4788
  br label %115, !dbg !4789

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4790
  call void @llvm.dbg.value(metadata i8* %117, metadata !4593, metadata !DIExpression()), !dbg !4719
  %118 = trunc i24 %79 to i4, !dbg !4791
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4791

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4792
  %121 = ashr exact i64 %120, 56, !dbg !4792
  store i64 %121, i64* %20, align 8, !dbg !4795
  br label %177, !dbg !4796

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4797
  %124 = ashr exact i64 %123, 48, !dbg !4797
  store i64 %124, i64* %20, align 8, !dbg !4800
  br label %177, !dbg !4801

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4802

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4805
  call void @llvm.dbg.value(metadata i8* %127, metadata !4593, metadata !DIExpression()), !dbg !4719
  %128 = bitcast i8* %77 to i32*, !dbg !4805
  %129 = load i32, i32* %128, align 4, !dbg !4805
  %130 = zext i32 %129 to i64, !dbg !4805
  store i64 %130, i64* %20, align 8, !dbg !4807
  br label %157, !dbg !4808

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4809
  call void @llvm.dbg.value(metadata i8* %132, metadata !4593, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i8* %132, metadata !4593, metadata !DIExpression()), !dbg !4719
  %133 = bitcast i8* %77 to i32*, !dbg !4809
  %134 = load i32, i32* %133, align 4, !dbg !4809
  %135 = zext i32 %134 to i64, !dbg !4809
  store i64 %135, i64* %20, align 8, !dbg !4809
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4811
  %138 = add i32 %137, 7, !dbg !4811
  %139 = and i32 %138, -8, !dbg !4811
  %140 = inttoptr i32 %139 to i8*, !dbg !4811
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4811
  call void @llvm.dbg.value(metadata i8* %141, metadata !4593, metadata !DIExpression()), !dbg !4719
  %142 = inttoptr i32 %139 to i64*, !dbg !4811
  %143 = load i64, i64* %142, align 8, !dbg !4811
  store i64 %143, i64* %20, align 8, !dbg !4812
  br label %157, !dbg !4813

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4814
  %146 = add i32 %145, 7, !dbg !4814
  %147 = and i32 %146, -8, !dbg !4814
  %148 = inttoptr i32 %147 to i8*, !dbg !4814
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4814
  call void @llvm.dbg.value(metadata i8* %149, metadata !4593, metadata !DIExpression()), !dbg !4719
  %150 = inttoptr i32 %147 to i64*, !dbg !4814
  %151 = load i64, i64* %150, align 8, !dbg !4814
  store i64 %151, i64* %20, align 8, !dbg !4815
  br label %157, !dbg !4816

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4817
  call void @llvm.dbg.value(metadata i8* %153, metadata !4593, metadata !DIExpression()), !dbg !4719
  %154 = bitcast i8* %77 to i32*, !dbg !4817
  %155 = load i32, i32* %154, align 4, !dbg !4817
  %156 = zext i32 %155 to i64, !dbg !4818
  store i64 %156, i64* %20, align 8, !dbg !4819
  br label %157, !dbg !4820

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4821
  call void @llvm.dbg.value(metadata i8* %159, metadata !4593, metadata !DIExpression()), !dbg !4719
  %160 = trunc i24 %79 to i4, !dbg !4822
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4822

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4823
  store i64 %162, i64* %20, align 8, !dbg !4826
  br label %177, !dbg !4827

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4828
  store i64 %164, i64* %20, align 8, !dbg !4831
  br label %177, !dbg !4832

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4833
  %167 = add i32 %166, 7, !dbg !4833
  %168 = and i32 %167, -8, !dbg !4833
  %169 = inttoptr i32 %168 to i8*, !dbg !4833
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4833
  call void @llvm.dbg.value(metadata i8* %170, metadata !4593, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i8* %170, metadata !4593, metadata !DIExpression()), !dbg !4719
  %171 = inttoptr i32 %168 to double*, !dbg !4833
  %172 = load double, double* %171, align 8, !dbg !4833
  store double %172, double* %19, align 8, !dbg !4833
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4837
  call void @llvm.dbg.value(metadata i8* %174, metadata !4593, metadata !DIExpression()), !dbg !4719
  %175 = bitcast i8* %77 to i8**, !dbg !4837
  %176 = load i8*, i8** %175, align 4, !dbg !4837
  store i8* %176, i8** %18, align 8, !dbg !4840
  br label %177, !dbg !4841

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4733
  call void @llvm.dbg.value(metadata i8* %178, metadata !4593, metadata !DIExpression()), !dbg !4719
  %179 = and i24 %75, 3, !dbg !4842
  %180 = icmp eq i24 %179, 0, !dbg !4842
  br i1 %180, label %185, label %181, !dbg !4842

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %182, metadata !4668, metadata !DIExpression()), !dbg !4844
  %183 = icmp slt i32 %182, 0, !dbg !4845
  %184 = add i32 %182, %29, !dbg !4843
  call void @llvm.dbg.value(metadata i32 undef, metadata !4599, metadata !DIExpression()), !dbg !4719
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4847
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4848

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !4849
  call void @llvm.dbg.value(metadata i32 %188, metadata !4672, metadata !DIExpression()), !dbg !4850
  %189 = icmp slt i32 %188, 0, !dbg !4851
  %190 = add i32 %29, 1, !dbg !4849
  call void @llvm.dbg.value(metadata i32 undef, metadata !4599, metadata !DIExpression()), !dbg !4719
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4853
  call void @llvm.dbg.value(metadata i8* %192, metadata !4660, metadata !DIExpression()), !dbg !4733
  %193 = icmp sgt i32 %76, -1, !dbg !4854
  br i1 %193, label %194, label %196, !dbg !4856

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !4857
  call void @llvm.dbg.value(metadata i32 %195, metadata !4675, metadata !DIExpression()), !dbg !4859
  br label %241, !dbg !4860

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !4861
  call void @llvm.dbg.value(metadata i32 %197, metadata !4675, metadata !DIExpression()), !dbg !4859
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4660, metadata !DIExpression()), !dbg !4733
  %199 = load i64, i64* %20, align 8, !dbg !4863
  %200 = trunc i64 %199 to i8, !dbg !4864
  store i8 %200, i8* %10, align 1, !dbg !4865
  call void @llvm.dbg.value(metadata i8* %23, metadata !4661, metadata !DIExpression()), !dbg !4733
  br label %245, !dbg !4866

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4867
  %203 = icmp eq i24 %202, 0, !dbg !4867
  %204 = trunc i24 %75 to i8, !dbg !4869
  %205 = shl i8 %204, 1, !dbg !4869
  %206 = and i8 %205, 32, !dbg !4869
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4869
  call void @llvm.dbg.value(metadata i8 %207, metadata !4662, metadata !DIExpression()), !dbg !4733
  %208 = load i64, i64* %20, align 8, !dbg !4870
  call void @llvm.dbg.value(metadata i64 %208, metadata !4600, metadata !DIExpression()), !dbg !4719
  %209 = icmp slt i64 %208, 0, !dbg !4871
  br i1 %209, label %210, label %212, !dbg !4873

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4662, metadata !DIExpression()), !dbg !4733
  %211 = sub nsw i64 0, %208, !dbg !4874
  store i64 %211, i64* %20, align 8, !dbg !4876
  br label %212, !dbg !4877

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4733
  call void @llvm.dbg.value(metadata i8 %213, metadata !4662, metadata !DIExpression()), !dbg !4733
  %214 = load i64, i64* %20, align 8, !dbg !4878
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4879
  call void @llvm.dbg.value(metadata i8* %215, metadata !4660, metadata !DIExpression()), !dbg !4733
  br label %216, !dbg !4880

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4881
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4882
  call void @llvm.dbg.value(metadata i8* %218, metadata !4660, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8 %217, metadata !4662, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.label(metadata !4718), !dbg !4883
  %219 = icmp sgt i32 %76, -1, !dbg !4884
  br i1 %219, label %222, label %220, !dbg !4885

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4886
  br label %245, !dbg !4885

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4888
  %224 = sub i32 %22, %223, !dbg !4888
  call void @llvm.dbg.value(metadata i32 %224, metadata !4677, metadata !DIExpression()), !dbg !4889
  %225 = load i24, i24* %15, align 8, !dbg !4890
  %226 = and i24 %225, -65, !dbg !4890
  store i24 %226, i24* %15, align 8, !dbg !4890
  %227 = icmp ugt i32 %76, %224, !dbg !4891
  br i1 %227, label %228, label %245, !dbg !4893

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4894
  store i32 %229, i32* %16, align 4, !dbg !4896
  br label %245, !dbg !4897

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4898
  %232 = icmp eq i8* %231, null, !dbg !4900
  br i1 %232, label %245, label %233, !dbg !4901

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4902
  %235 = zext i32 %234 to i64, !dbg !4902
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4904
  call void @llvm.dbg.value(metadata i8* %236, metadata !4660, metadata !DIExpression()), !dbg !4733
  %237 = load i24, i24* %15, align 8, !dbg !4905
  %238 = or i24 %237, 1048576, !dbg !4905
  store i24 %238, i24* %15, align 8, !dbg !4905
  store i8 120, i8* %21, align 1, !dbg !4906
  br label %216, !dbg !4907

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4908
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !4911
  br label %363, !dbg !4912

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4913
  call void @llvm.dbg.value(metadata i32 %242, metadata !4675, metadata !DIExpression()), !dbg !4859
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4914
  call void @llvm.dbg.value(metadata i32 -1, metadata !4659, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %29, metadata !4599, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i8* %192, metadata !4660, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8* %243, metadata !4661, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8 0, metadata !4662, metadata !DIExpression()), !dbg !4733
  %244 = icmp eq i8* %192, null, !dbg !4915
  br i1 %244, label %363, label %245, !dbg !4917, !llvm.loop !4729

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4886
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4680, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4733
  call void @llvm.dbg.value(metadata i32 0, metadata !4681, metadata !DIExpression()), !dbg !4733
  %250 = zext i8 %249 to i32, !dbg !4918
  %251 = icmp eq i8 %249, 0, !dbg !4920
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4680, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4733
  call void @llvm.dbg.value(metadata i32 undef, metadata !4680, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4680, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4733
  call void @llvm.dbg.value(metadata i32 undef, metadata !4680, metadata !DIExpression()), !dbg !4733
  %252 = icmp sgt i32 %58, 0, !dbg !4921
  br i1 %252, label %253, label %302, !dbg !4922

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4886
  %255 = icmp eq i24 %254, 0, !dbg !4886
  %256 = ptrtoint i8* %248 to i32, !dbg !4923
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4680, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4733
  %257 = ptrtoint i8* %247 to i32, !dbg !4923
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4680, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4733
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4680, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4733
  %258 = xor i1 %251, true, !dbg !4924
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4680, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4733
  %259 = sext i1 %258 to i32, !dbg !4924
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4680, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4733
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4680, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4733
  %260 = lshr i24 %246, 19, !dbg !4925
  %261 = and i24 %260, 1, !dbg !4925
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4925
  %263 = zext i24 %262 to i32, !dbg !4925
  %264 = add i32 %257, %259, !dbg !4925
  %265 = add i32 %256, %263, !dbg !4925
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4680, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4733
  %266 = and i24 %246, 4194304, !dbg !4926
  %267 = icmp eq i24 %266, 0, !dbg !4926
  %268 = load i32, i32* %16, align 4, !dbg !4928
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4680, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4733
  call void @llvm.dbg.value(metadata i32 undef, metadata !4680, metadata !DIExpression()), !dbg !4733
  %269 = load i32, i32* %17, align 8, !dbg !4929
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4929
  call void @llvm.dbg.value(metadata i32 undef, metadata !4680, metadata !DIExpression()), !dbg !4733
  %271 = add i32 %264, %58, !dbg !4929
  %272 = add i32 %265, %268, !dbg !4929
  %273 = add i32 %272, %270, !dbg !4930
  %274 = sub i32 %271, %273, !dbg !4930
  call void @llvm.dbg.value(metadata i32 %274, metadata !4658, metadata !DIExpression()), !dbg !4733
  %275 = and i24 %246, 4, !dbg !4931
  %276 = icmp eq i24 %275, 0, !dbg !4931
  br i1 %276, label %277, label %302, !dbg !4932

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4682, metadata !DIExpression()), !dbg !4933
  %278 = and i24 %246, 64, !dbg !4934
  %279 = icmp eq i24 %278, 0, !dbg !4934
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4935
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4935
  %282 = select i1 %279, i32 32, i32 48, !dbg !4935
  br i1 %280, label %287, label %283, !dbg !4935

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !4936
  call void @llvm.dbg.value(metadata i32 %284, metadata !4687, metadata !DIExpression()), !dbg !4937
  %285 = icmp slt i32 %284, 0, !dbg !4938
  %286 = add i32 %29, 1, !dbg !4936
  call void @llvm.dbg.value(metadata i32 undef, metadata !4599, metadata !DIExpression()), !dbg !4719
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4733
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4723
  call void @llvm.dbg.value(metadata i32 %290, metadata !4599, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i8 undef, metadata !4682, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata i8 %288, metadata !4662, metadata !DIExpression()), !dbg !4733
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4940
  %292 = add i32 %291, -1, !dbg !4940
  br label %293, !dbg !4940

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4941
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4723
  call void @llvm.dbg.value(metadata i32 %295, metadata !4599, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i32 %294, metadata !4658, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i32 %294, metadata !4658, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4733
  %296 = icmp sgt i32 %294, 0, !dbg !4942
  br i1 %296, label %297, label %302, !dbg !4940

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4943
  call void @llvm.dbg.value(metadata i32 %298, metadata !4658, metadata !DIExpression()), !dbg !4733
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !4944
  call void @llvm.dbg.value(metadata i32 %299, metadata !4693, metadata !DIExpression()), !dbg !4945
  %300 = icmp slt i32 %299, 0, !dbg !4946
  %301 = add i32 %295, 1, !dbg !4944
  call void @llvm.dbg.value(metadata i32 undef, metadata !4599, metadata !DIExpression()), !dbg !4719
  br i1 %300, label %361, label %293, !llvm.loop !4948

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4733
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4733
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4723
  call void @llvm.dbg.value(metadata i32 %305, metadata !4599, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i32 %304, metadata !4658, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.value(metadata i8 %303, metadata !4662, metadata !DIExpression()), !dbg !4733
  %306 = icmp eq i8 %303, 0, !dbg !4950
  br i1 %306, label %312, label %307, !dbg !4951

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4952
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !4953
  call void @llvm.dbg.value(metadata i32 %309, metadata !4696, metadata !DIExpression()), !dbg !4954
  %310 = icmp slt i32 %309, 0, !dbg !4955
  %311 = add i32 %305, 1, !dbg !4953
  call void @llvm.dbg.value(metadata i32 undef, metadata !4599, metadata !DIExpression()), !dbg !4719
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4723
  call void @llvm.dbg.value(metadata i32 %313, metadata !4599, metadata !DIExpression()), !dbg !4719
  %314 = lshr i24 %246, 20, !dbg !4957
  %315 = lshr i24 %246, 19, !dbg !4958
  %316 = or i24 %314, %315, !dbg !4959
  %317 = and i24 %316, 1, !dbg !4959
  %318 = icmp eq i24 %317, 0, !dbg !4959
  br i1 %318, label %323, label %319, !dbg !4960

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4961
  call void @llvm.dbg.value(metadata i32 %320, metadata !4700, metadata !DIExpression()), !dbg !4962
  %321 = icmp slt i32 %320, 0, !dbg !4963
  %322 = add i32 %313, 1, !dbg !4961
  call void @llvm.dbg.value(metadata i32 undef, metadata !4599, metadata !DIExpression()), !dbg !4719
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4723
  call void @llvm.dbg.value(metadata i32 %324, metadata !4599, metadata !DIExpression()), !dbg !4719
  %325 = and i24 %246, 1048576, !dbg !4965
  %326 = icmp eq i24 %325, 0, !dbg !4965
  br i1 %326, label %333, label %327, !dbg !4966

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4967
  %329 = zext i8 %328 to i32, !dbg !4967
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !4967
  call void @llvm.dbg.value(metadata i32 %330, metadata !4706, metadata !DIExpression()), !dbg !4968
  %331 = icmp slt i32 %330, 0, !dbg !4969
  %332 = add i32 %324, 1, !dbg !4967
  call void @llvm.dbg.value(metadata i32 undef, metadata !4599, metadata !DIExpression()), !dbg !4719
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4723
  call void @llvm.dbg.value(metadata i32 %334, metadata !4599, metadata !DIExpression()), !dbg !4719
  %335 = load i32, i32* %16, align 4, !dbg !4971
  call void @llvm.dbg.value(metadata i32 %335, metadata !4681, metadata !DIExpression()), !dbg !4733
  br label %336, !dbg !4972

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4973
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4723
  call void @llvm.dbg.value(metadata i32 %338, metadata !4599, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i32 %337, metadata !4681, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4733
  %339 = icmp sgt i32 %337, 0, !dbg !4974
  br i1 %339, label %340, label %345, !dbg !4972

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4975
  call void @llvm.dbg.value(metadata i32 %341, metadata !4681, metadata !DIExpression()), !dbg !4733
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4976
  call void @llvm.dbg.value(metadata i32 %342, metadata !4710, metadata !DIExpression()), !dbg !4977
  %343 = icmp slt i32 %342, 0, !dbg !4978
  %344 = add i32 %338, 1, !dbg !4976
  call void @llvm.dbg.value(metadata i32 undef, metadata !4599, metadata !DIExpression()), !dbg !4719
  br i1 %343, label %361, label %336, !llvm.loop !4980

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %346, metadata !4713, metadata !DIExpression()), !dbg !4983
  %347 = icmp slt i32 %346, 0, !dbg !4984
  call void @llvm.dbg.value(metadata i32 undef, metadata !4599, metadata !DIExpression()), !dbg !4719
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %349, metadata !4599, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i32 %304, metadata !4658, metadata !DIExpression()), !dbg !4733
  %350 = icmp sgt i32 %304, 0, !dbg !4986
  br i1 %350, label %351, label %363, !dbg !4987

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4987
  %353 = add i32 %352, %338, !dbg !4987
  br label %354, !dbg !4987

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4599, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata i32 %355, metadata !4658, metadata !DIExpression()), !dbg !4733
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !4988
  call void @llvm.dbg.value(metadata i32 %356, metadata !4715, metadata !DIExpression()), !dbg !4989
  %357 = icmp slt i32 %356, 0, !dbg !4990
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4992
  call void @llvm.dbg.value(metadata i32 undef, metadata !4599, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4719
  call void @llvm.dbg.value(metadata i32 %359, metadata !4658, metadata !DIExpression()), !dbg !4733
  %360 = icmp sgt i32 %355, 1, !dbg !4986
  br i1 %360, label %354, label %363, !dbg !4987, !llvm.loop !4993

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4599, metadata !DIExpression()), !dbg !4719
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4730
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4723
  call void @llvm.dbg.value(metadata i32 %364, metadata !4599, metadata !DIExpression()), !dbg !4719
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4730
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4719
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4995
  ret i32 %366, !dbg !4995
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4996 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5000, metadata !DIExpression()), !dbg !5002
  call void @llvm.dbg.value(metadata i8* %1, metadata !5001, metadata !DIExpression()), !dbg !5002
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5003
  store i24 0, i24* %3, align 4, !dbg !5003
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5003
  store i8 0, i8* %4, align 1, !dbg !5003
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5003
  store i32 0, i32* %5, align 4, !dbg !5003
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5003
  store i32 0, i32* %6, align 4, !dbg !5003
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5004
  call void @llvm.dbg.value(metadata i8* %7, metadata !5001, metadata !DIExpression()), !dbg !5002
  %8 = load i8, i8* %7, align 1, !dbg !5005
  %9 = icmp eq i8 %8, 37, !dbg !5007
  br i1 %9, label %10, label %12, !dbg !5008

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5009
  call void @llvm.dbg.value(metadata i8* %11, metadata !5001, metadata !DIExpression()), !dbg !5002
  store i8 37, i8* %4, align 1, !dbg !5011
  br label %18, !dbg !5012

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !5013
  call void @llvm.dbg.value(metadata i8* %13, metadata !5001, metadata !DIExpression()), !dbg !5002
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !5014
  call void @llvm.dbg.value(metadata i8* %14, metadata !5001, metadata !DIExpression()), !dbg !5002
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !5015
  call void @llvm.dbg.value(metadata i8* %15, metadata !5001, metadata !DIExpression()), !dbg !5002
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !5016
  call void @llvm.dbg.value(metadata i8* %16, metadata !5001, metadata !DIExpression()), !dbg !5002
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !5017
  call void @llvm.dbg.value(metadata i8* %17, metadata !5001, metadata !DIExpression()), !dbg !5002
  br label %18, !dbg !5018

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5002
  ret i8* %19, !dbg !5019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5020 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5024, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i8* %1, metadata !5025, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i8* %2, metadata !5026, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i8* %3, metadata !5027, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i32 0, metadata !5028, metadata !DIExpression()), !dbg !5031
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5032

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5033
  call void @llvm.dbg.value(metadata i32 %9, metadata !5028, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.value(metadata i8* %8, metadata !5026, metadata !DIExpression()), !dbg !5031
  %10 = icmp ult i8* %8, %3, !dbg !5034
  br i1 %10, label %11, label %13, !dbg !5035

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5036
  br label %17, !dbg !5035

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5037

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5038
  %16 = icmp eq i8 %15, 0, !dbg !5037
  br i1 %16, label %24, label %17, !dbg !5032

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5036
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5039
  call void @llvm.dbg.value(metadata i8* %19, metadata !5026, metadata !DIExpression()), !dbg !5031
  %20 = zext i8 %18 to i32, !dbg !5040
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !5041
  call void @llvm.dbg.value(metadata i32 %21, metadata !5029, metadata !DIExpression()), !dbg !5042
  %22 = icmp slt i32 %21, 0, !dbg !5043
  %23 = add i32 %9, 1, !dbg !5045
  call void @llvm.dbg.value(metadata i32 undef, metadata !5028, metadata !DIExpression()), !dbg !5031
  br i1 %22, label %24, label %7, !llvm.loop !5046

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5031
  ret i32 %25, !dbg !5048
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5049 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5053, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5054, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i8* %2, metadata !5055, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i8* %3, metadata !5056, metadata !DIExpression()), !dbg !5063
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5064
  %6 = load i8, i8* %5, align 1, !dbg !5064
  %7 = zext i8 %6 to i32, !dbg !5065
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !5066
  %9 = icmp eq i32 %8, 0, !dbg !5066
  call void @llvm.dbg.value(metadata i1 %9, metadata !5057, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5063
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !5067
  call void @llvm.dbg.value(metadata i32 %10, metadata !5058, metadata !DIExpression()), !dbg !5063
  %11 = ptrtoint i8* %3 to i32, !dbg !5068
  %12 = ptrtoint i8* %2 to i32, !dbg !5068
  %13 = sub i32 %11, %12, !dbg !5068
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5069
  call void @llvm.dbg.value(metadata i8* %14, metadata !5060, metadata !DIExpression()), !dbg !5063
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5070

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5063
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5053, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i8* %18, metadata !5060, metadata !DIExpression()), !dbg !5063
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5071
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5072
  call void @llvm.dbg.value(metadata i32 %25, metadata !5061, metadata !DIExpression()), !dbg !5073
  %26 = icmp ult i32 %25, 10, !dbg !5074
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5075
  %28 = add i32 %27, %25, !dbg !5073
  %29 = trunc i32 %28 to i8, !dbg !5075
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5076
  call void @llvm.dbg.value(metadata i8* %30, metadata !5060, metadata !DIExpression()), !dbg !5063
  store i8 %29, i8* %30, align 1, !dbg !5077
  call void @llvm.dbg.value(metadata i64 %22, metadata !5053, metadata !DIExpression()), !dbg !5063
  %31 = icmp uge i64 %19, %15, !dbg !5078
  %32 = icmp ugt i8* %30, %2, !dbg !5079
  %33 = and i1 %31, %32, !dbg !5079
  br i1 %33, label %17, label %34, !dbg !5080, !llvm.loop !5081

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5083
  %36 = load i24, i24* %35, align 4, !dbg !5083
  %37 = and i24 %36, 32, !dbg !5083
  %38 = icmp eq i24 %37, 0, !dbg !5083
  br i1 %38, label %44, label %39, !dbg !5085

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5086

40:                                               ; preds = %39
  br label %41, !dbg !5088

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5092
  store i24 %43, i24* %35, align 4, !dbg !5092
  br label %44, !dbg !5093

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5094 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5100, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.value(metadata i8* %1, metadata !5101, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.value(metadata i32 %2, metadata !5102, metadata !DIExpression()), !dbg !5103
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5104
  %5 = load i24, i24* %4, align 4, !dbg !5104
  %6 = lshr i24 %5, 11, !dbg !5104
  %7 = and i24 %6, 15, !dbg !5104
  %8 = zext i24 %7 to i32, !dbg !5104
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5105

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5106
  store i32 %2, i32* %10, align 4, !dbg !5108
  br label %28, !dbg !5109

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5110
  store i8 %12, i8* %1, align 1, !dbg !5111
  br label %28, !dbg !5112

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5113
  %15 = bitcast i8* %1 to i16*, !dbg !5114
  store i16 %14, i16* %15, align 2, !dbg !5115
  br label %28, !dbg !5116

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5117
  store i32 %2, i32* %17, align 4, !dbg !5118
  br label %28, !dbg !5119

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5120
  %20 = bitcast i8* %1 to i64*, !dbg !5121
  store i64 %19, i64* %20, align 8, !dbg !5122
  br label %28, !dbg !5123

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5124
  %23 = bitcast i8* %1 to i64*, !dbg !5125
  store i64 %22, i64* %23, align 8, !dbg !5126
  br label %28, !dbg !5127

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5128
  store i32 %2, i32* %25, align 4, !dbg !5129
  br label %28, !dbg !5130

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5131
  store i32 %2, i32* %27, align 4, !dbg !5132
  br label %28, !dbg !5133

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5134
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #6 !dbg !5135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5138, metadata !DIExpression()), !dbg !5139
  %2 = add i32 %0, -65, !dbg !5140
  %3 = icmp ult i32 %2, 26, !dbg !5141
  %4 = zext i1 %3 to i32, !dbg !5141
  ret i32 %4, !dbg !5142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #6 !dbg !5143 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5147, metadata !DIExpression()), !dbg !5148
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5149

2:                                                ; preds = %1
  br label %4, !dbg !5150

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5152

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5153
  ret i32 %5, !dbg !5154
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5155 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5157, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.value(metadata i8* %1, metadata !5158, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.value(metadata i8 1, metadata !5159, metadata !DIExpression()), !dbg !5160
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5161

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5159, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.value(metadata i8* %5, metadata !5158, metadata !DIExpression()), !dbg !5160
  %6 = load i8, i8* %5, align 1, !dbg !5162
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5164

7:                                                ; preds = %4
  br label %11, !dbg !5165

8:                                                ; preds = %4
  br label %11, !dbg !5167

9:                                                ; preds = %4
  br label %11, !dbg !5168

10:                                               ; preds = %4
  br label %11, !dbg !5169

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5170
  %14 = or i24 %13, %12, !dbg !5170
  store i24 %14, i24* %3, align 4, !dbg !5170
  call void @llvm.dbg.value(metadata i8 poison, metadata !5159, metadata !DIExpression()), !dbg !5160
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5158, metadata !DIExpression()), !dbg !5160
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5159, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.value(metadata i8* %15, metadata !5158, metadata !DIExpression()), !dbg !5160
  %17 = load i24, i24* %3, align 4, !dbg !5171
  %18 = and i24 %17, 68, !dbg !5173
  %19 = icmp eq i24 %18, 68, !dbg !5173
  br i1 %19, label %20, label %22, !dbg !5173

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5174
  store i24 %21, i24* %3, align 4, !dbg !5174
  br label %22, !dbg !5176

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5177
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5178 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5180, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i8* %1, metadata !5181, metadata !DIExpression()), !dbg !5184
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5185
  %5 = load i24, i24* %4, align 4, !dbg !5186
  %6 = or i24 %5, 128, !dbg !5186
  store i24 %6, i24* %4, align 4, !dbg !5186
  call void @llvm.dbg.value(metadata i8* %1, metadata !5181, metadata !DIExpression()), !dbg !5184
  %7 = load i8, i8* %1, align 1, !dbg !5187
  %8 = icmp eq i8 %7, 42, !dbg !5189
  br i1 %8, label %9, label %12, !dbg !5190

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5191
  store i24 %10, i24* %4, align 4, !dbg !5191
  call void @llvm.dbg.value(metadata i8* %1, metadata !5181, metadata !DIExpression()), !dbg !5184
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5193
  call void @llvm.dbg.value(metadata i8* %11, metadata !5181, metadata !DIExpression()), !dbg !5184
  store i8* %11, i8** %3, align 4, !dbg !5193
  br label %29, !dbg !5194

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5182, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i8** %3, metadata !5181, metadata !DIExpression(DW_OP_deref)), !dbg !5184
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !5195
  call void @llvm.dbg.value(metadata i32 %13, metadata !5183, metadata !DIExpression()), !dbg !5184
  %14 = load i8*, i8** %3, align 4, !dbg !5196
  call void @llvm.dbg.value(metadata i8* %14, metadata !5181, metadata !DIExpression()), !dbg !5184
  %15 = icmp eq i8* %14, %1, !dbg !5198
  br i1 %15, label %29, label %16, !dbg !5199

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5200
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5202
  store i32 %13, i32* %18, align 4, !dbg !5203
  %19 = lshr i32 %13, 31, !dbg !5204
  %20 = lshr i24 %17, 1, !dbg !5205
  %21 = and i24 %20, 1, !dbg !5205
  %22 = zext i24 %21 to i32, !dbg !5205
  %23 = or i32 %19, %22, !dbg !5205
  %24 = trunc i32 %23 to i24, !dbg !5205
  %25 = shl nuw nsw i24 %24, 1, !dbg !5205
  %26 = and i24 %17, -131, !dbg !5205
  %27 = or i24 %26, 128, !dbg !5205
  %28 = or i24 %25, %27, !dbg !5205
  store i24 %28, i24* %4, align 4, !dbg !5205
  br label %29, !dbg !5206

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5184
  ret i8* %30, !dbg !5207
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5208 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5210, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata i8* %1, metadata !5211, metadata !DIExpression()), !dbg !5213
  %4 = load i8, i8* %1, align 1, !dbg !5214
  %5 = icmp eq i8 %4, 46, !dbg !5215
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5216
  %7 = load i24, i24* %6, align 4, !dbg !5217
  %8 = select i1 %5, i24 512, i24 0, !dbg !5217
  %9 = and i24 %7, -513, !dbg !5217
  %10 = or i24 %9, %8, !dbg !5217
  store i24 %10, i24* %6, align 4, !dbg !5217
  br i1 %5, label %11, label %32, !dbg !5218

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5211, metadata !DIExpression()), !dbg !5213
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5219
  call void @llvm.dbg.value(metadata i8* %12, metadata !5211, metadata !DIExpression()), !dbg !5213
  store i8* %12, i8** %3, align 4, !dbg !5219
  %13 = load i8, i8* %12, align 1, !dbg !5220
  %14 = icmp eq i8 %13, 42, !dbg !5222
  br i1 %14, label %15, label %18, !dbg !5223

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5224
  store i24 %16, i24* %6, align 4, !dbg !5224
  call void @llvm.dbg.value(metadata i8* %12, metadata !5211, metadata !DIExpression()), !dbg !5213
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5226
  call void @llvm.dbg.value(metadata i8* %17, metadata !5211, metadata !DIExpression()), !dbg !5213
  store i8* %17, i8** %3, align 4, !dbg !5226
  br label %32, !dbg !5227

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5211, metadata !DIExpression(DW_OP_deref)), !dbg !5213
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !5228
  call void @llvm.dbg.value(metadata i32 %19, metadata !5212, metadata !DIExpression()), !dbg !5213
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5229
  store i32 %19, i32* %20, align 4, !dbg !5230
  %21 = lshr i32 %19, 31, !dbg !5231
  %22 = load i24, i24* %6, align 4, !dbg !5232
  %23 = lshr i24 %22, 1, !dbg !5232
  %24 = and i24 %23, 1, !dbg !5232
  %25 = zext i24 %24 to i32, !dbg !5232
  %26 = or i32 %21, %25, !dbg !5232
  %27 = trunc i32 %26 to i24, !dbg !5232
  %28 = shl nuw nsw i24 %27, 1, !dbg !5232
  %29 = and i24 %22, -3, !dbg !5232
  %30 = or i24 %28, %29, !dbg !5232
  store i24 %30, i24* %6, align 4, !dbg !5232
  %31 = load i8*, i8** %3, align 4, !dbg !5233
  call void @llvm.dbg.value(metadata i8* %31, metadata !5211, metadata !DIExpression()), !dbg !5213
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5213
  ret i8* %33, !dbg !5234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5235 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5237, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.value(metadata i8* %1, metadata !5238, metadata !DIExpression()), !dbg !5239
  %3 = load i8, i8* %1, align 1, !dbg !5240
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5241

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5242
  call void @llvm.dbg.value(metadata i8* %5, metadata !5238, metadata !DIExpression()), !dbg !5239
  %6 = load i8, i8* %5, align 1, !dbg !5245
  %7 = icmp eq i8 %6, 104, !dbg !5246
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5247
  %9 = load i24, i24* %8, align 4, !dbg !5247
  %10 = and i24 %9, -30721, !dbg !5247
  br i1 %7, label %11, label %14, !dbg !5248

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5249
  store i24 %12, i24* %8, align 4, !dbg !5249
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5251
  call void @llvm.dbg.value(metadata i8* %13, metadata !5238, metadata !DIExpression()), !dbg !5239
  br label %56, !dbg !5252

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5253
  store i24 %15, i24* %8, align 4, !dbg !5253
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5255
  call void @llvm.dbg.value(metadata i8* %17, metadata !5238, metadata !DIExpression()), !dbg !5239
  %18 = load i8, i8* %17, align 1, !dbg !5257
  %19 = icmp eq i8 %18, 108, !dbg !5258
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5259
  %21 = load i24, i24* %20, align 4, !dbg !5259
  %22 = and i24 %21, -30721, !dbg !5259
  br i1 %19, label %23, label %26, !dbg !5260

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5261
  store i24 %24, i24* %20, align 4, !dbg !5261
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5263
  call void @llvm.dbg.value(metadata i8* %25, metadata !5238, metadata !DIExpression()), !dbg !5239
  br label %56, !dbg !5264

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5265
  store i24 %27, i24* %20, align 4, !dbg !5265
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5267
  %30 = load i24, i24* %29, align 4, !dbg !5268
  %31 = and i24 %30, -30721, !dbg !5268
  %32 = or i24 %31, 10240, !dbg !5268
  store i24 %32, i24* %29, align 4, !dbg !5268
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5269
  call void @llvm.dbg.value(metadata i8* %33, metadata !5238, metadata !DIExpression()), !dbg !5239
  br label %56, !dbg !5270

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5271
  %36 = load i24, i24* %35, align 4, !dbg !5272
  %37 = and i24 %36, -30721, !dbg !5272
  %38 = or i24 %37, 12288, !dbg !5272
  store i24 %38, i24* %35, align 4, !dbg !5272
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5273
  call void @llvm.dbg.value(metadata i8* %39, metadata !5238, metadata !DIExpression()), !dbg !5239
  br label %56, !dbg !5274

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5275
  %42 = load i24, i24* %41, align 4, !dbg !5276
  %43 = and i24 %42, -30721, !dbg !5276
  %44 = or i24 %43, 14336, !dbg !5276
  store i24 %44, i24* %41, align 4, !dbg !5276
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5277
  call void @llvm.dbg.value(metadata i8* %45, metadata !5238, metadata !DIExpression()), !dbg !5239
  br label %56, !dbg !5278

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5279
  %48 = load i24, i24* %47, align 4, !dbg !5280
  %49 = and i24 %48, -30723, !dbg !5280
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5281
  call void @llvm.dbg.value(metadata i8* %50, metadata !5238, metadata !DIExpression()), !dbg !5239
  %51 = or i24 %49, 16386, !dbg !5282
  store i24 %51, i24* %47, align 4, !dbg !5282
  br label %56, !dbg !5283

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5284
  %54 = load i24, i24* %53, align 4, !dbg !5285
  %55 = and i24 %54, -30721, !dbg !5285
  store i24 %55, i24* %53, align 4, !dbg !5285
  br label %56, !dbg !5286

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5238, metadata !DIExpression()), !dbg !5239
  ret i8* %57, !dbg !5287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5288 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5290, metadata !DIExpression()), !dbg !5295
  call void @llvm.dbg.value(metadata i8* %1, metadata !5291, metadata !DIExpression()), !dbg !5295
  call void @llvm.dbg.value(metadata i8 0, metadata !5292, metadata !DIExpression()), !dbg !5295
  call void @llvm.dbg.value(metadata i8* %1, metadata !5291, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5295
  %3 = load i8, i8* %1, align 1, !dbg !5296
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5297
  store i8 %3, i8* %4, align 1, !dbg !5298
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5299

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5300

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5301
  %9 = load i24, i24* %8, align 4, !dbg !5301
  %10 = and i24 %9, -458753, !dbg !5301
  %11 = or i24 %10, %7, !dbg !5301
  call void @llvm.dbg.label(metadata !5293), !dbg !5302
  %12 = and i24 %9, 30720, !dbg !5303
  %13 = icmp eq i24 %12, 16384, !dbg !5303
  %14 = zext i1 %13 to i24, !dbg !5305
  %15 = or i24 %11, %14, !dbg !5305
  %16 = icmp eq i8 %3, 99, !dbg !5306
  br i1 %16, label %17, label %43, !dbg !5308

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5309
  %19 = icmp ne i24 %18, 0, !dbg !5309
  call void @llvm.dbg.value(metadata i1 %19, metadata !5292, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5295
  br label %43, !dbg !5311

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5312
  %22 = load i24, i24* %21, align 4, !dbg !5313
  %23 = and i24 %22, -458753, !dbg !5313
  %24 = or i24 %23, 262144, !dbg !5313
  call void @llvm.dbg.value(metadata i8 1, metadata !5292, metadata !DIExpression()), !dbg !5295
  br label %43, !dbg !5314

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5317
  %27 = load i24, i24* %26, align 4, !dbg !5318
  %28 = and i24 %27, -458753, !dbg !5318
  %29 = or i24 %28, 196608, !dbg !5318
  %30 = and i24 %27, 30720, !dbg !5319
  %31 = icmp eq i24 %30, 16384, !dbg !5319
  br label %43, !dbg !5321

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5322
  %34 = load i24, i24* %33, align 4, !dbg !5323
  %35 = and i24 %34, -458753, !dbg !5323
  %36 = or i24 %35, 196608, !dbg !5323
  %37 = and i24 %34, 30720, !dbg !5324
  %38 = icmp ne i24 %37, 0, !dbg !5324
  br label %43, !dbg !5326

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5327
  %41 = load i24, i24* %40, align 4, !dbg !5328
  %42 = or i24 %41, 1, !dbg !5328
  br label %43, !dbg !5329

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5330
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5331
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5332
  call void @llvm.dbg.value(metadata i8* %48, metadata !5291, metadata !DIExpression()), !dbg !5295
  call void @llvm.dbg.value(metadata i8 poison, metadata !5292, metadata !DIExpression()), !dbg !5295
  %49 = lshr i24 %44, 1, !dbg !5330
  %50 = and i24 %49, 1, !dbg !5330
  %51 = zext i24 %50 to i32, !dbg !5330
  %52 = or i32 %51, %47, !dbg !5330
  %53 = trunc i32 %52 to i24, !dbg !5330
  %54 = shl nuw nsw i24 %53, 1, !dbg !5330
  %55 = and i24 %44, -3, !dbg !5330
  %56 = or i24 %54, %55, !dbg !5330
  store i24 %56, i24* %46, align 4, !dbg !5330
  ret i8* %48, !dbg !5333
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5334 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5338, metadata !DIExpression()), !dbg !5341
  %2 = load i8*, i8** %0, align 4, !dbg !5342
  call void @llvm.dbg.value(metadata i8* %2, metadata !5339, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.value(metadata i32 0, metadata !5340, metadata !DIExpression()), !dbg !5341
  %3 = load i8, i8* %2, align 1, !dbg !5343
  %4 = zext i8 %3 to i32, !dbg !5344
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !5345
  %6 = icmp eq i32 %5, 0, !dbg !5346
  br i1 %6, label %19, label %7, !dbg !5346

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5340, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.value(metadata i8* %10, metadata !5339, metadata !DIExpression()), !dbg !5341
  %11 = mul i32 %9, 10, !dbg !5347
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5349
  call void @llvm.dbg.value(metadata i8* %12, metadata !5339, metadata !DIExpression()), !dbg !5341
  %13 = add i32 %11, -48, !dbg !5350
  %14 = add i32 %13, %8, !dbg !5351
  call void @llvm.dbg.value(metadata i32 %14, metadata !5340, metadata !DIExpression()), !dbg !5341
  %15 = load i8, i8* %12, align 1, !dbg !5343
  %16 = zext i8 %15 to i32, !dbg !5344
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !5345
  %18 = icmp eq i32 %17, 0, !dbg !5346
  br i1 %18, label %19, label %7, !dbg !5346, !llvm.loop !5352

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5341
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5341
  store i8* %20, i8** %0, align 4, !dbg !5354
  ret i32 %21, !dbg !5355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #6 !dbg !5356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5358, metadata !DIExpression()), !dbg !5359
  %2 = add i32 %0, -48, !dbg !5360
  %3 = icmp ult i32 %2, 10, !dbg !5361
  %4 = zext i1 %3 to i32, !dbg !5361
  ret i32 %4, !dbg !5362
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5363 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5368, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.value(metadata i32 %1, metadata !5369, metadata !DIExpression()), !dbg !5370
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5371, !srcloc !5373
  ret void, !dbg !5374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5375 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5377, metadata !DIExpression()), !dbg !5385
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5386
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5386
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5378, metadata !DIExpression()), !dbg !5387
  call void @llvm.va_start(i8* nonnull %3), !dbg !5388
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5389
  %5 = load i32, i32* %4, align 4, !dbg !5389
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5389
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !5389
  call void @llvm.va_end(i8* nonnull %3), !dbg !5390
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5391
  ret void, !dbg !5391
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5392 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,11\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6036, !srcloc !6037
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6038, !srcloc !6039
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6040, !srcloc !6041
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6042, !srcloc !6043
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6044, !srcloc !6045
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6046, !srcloc !6047
  ret void, !dbg !6048
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6049 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6051, metadata !DIExpression()), !dbg !6053
  tail call fastcc void @LL_FLASH_EnableInstCache() #25, !dbg !6054
  tail call fastcc void @LL_FLASH_EnableDataCache() #25, !dbg !6055
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6056, !srcloc !6065
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6056
  call void @llvm.dbg.value(metadata i32 %3, metadata !6062, metadata !DIExpression()) #23, !dbg !6066
  call void @llvm.dbg.value(metadata i32 undef, metadata !6063, metadata !DIExpression()) #23, !dbg !6066
  call void @llvm.dbg.value(metadata i32 %3, metadata !6052, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.value(metadata i32 %3, metadata !6067, metadata !DIExpression()) #23, !dbg !6072
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6074, !srcloc !6075
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6076
  ret i32 0, !dbg !6077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6078 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6080
  %2 = or i32 %1, 512, !dbg !6080
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6080
  ret void, !dbg !6081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6082 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6083
  %2 = or i32 %1, 1024, !dbg !6083
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6083
  ret void, !dbg !6084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #6 !dbg !6085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6087, metadata !DIExpression()), !dbg !6088
  ret i32 0, !dbg !6089
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6090 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6093, metadata !DIExpression()), !dbg !6101
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6102
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6102
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6094, metadata !DIExpression()), !dbg !6103
  call void @llvm.va_start(i8* nonnull %3), !dbg !6104
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6105
  %5 = load i32, i32* %4, align 4, !dbg !6105
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6105
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !6105
  call void @llvm.va_end(i8* nonnull %3), !dbg !6106
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6107
  ret void, !dbg !6107
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6108 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6113, metadata !DIExpression()), !dbg !6114
  call void @llvm.dbg.value(metadata i8* %0, metadata !6112, metadata !DIExpression()), !dbg !6114
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #24, !dbg !6115
  ret void, !dbg !6116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6121, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.value(metadata i8* %1, metadata !6122, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.value(metadata i32 %2, metadata !6123, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.value(metadata i8* %1, metadata !6124, metadata !DIExpression()), !dbg !6125
  %4 = icmp eq i32 %2, 0, !dbg !6126
  br i1 %4, label %14, label %5, !dbg !6127

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #25, !dbg !6125
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6127

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6124, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.value(metadata i32 %10, metadata !6123, metadata !DIExpression()), !dbg !6125
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #24, !dbg !6128
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #25, !dbg !6130
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6131
  call void @llvm.dbg.value(metadata i32 %11, metadata !6123, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.value(metadata i8* %12, metadata !6124, metadata !DIExpression()), !dbg !6125
  br i1 %13, label %14, label %8, !dbg !6131, !llvm.loop !6132

14:                                               ; preds = %8, %3
  ret void, !dbg !6134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #6 !dbg !6135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6140, metadata !DIExpression()), !dbg !6141
  %2 = add i32 %0, -1, !dbg !6142
  %3 = icmp ult i32 %2, 4, !dbg !6142
  %4 = shl i32 %2, 3, !dbg !6142
  %5 = lshr i32 1145657157, %4, !dbg !6142
  %6 = trunc i32 %5 to i8, !dbg !6142
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6142
  ret i8 %7, !dbg !6143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6144 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6148, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.value(metadata i32 %1, metadata !6149, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.value(metadata i32 0, metadata !6150, metadata !DIExpression()), !dbg !6160
  br label %4, !dbg !6161

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #24, !dbg !6162
  call void @llvm.dbg.value(metadata i32 0, metadata !6152, metadata !DIExpression()), !dbg !6163
  br label %16, !dbg !6164

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6150, metadata !DIExpression()), !dbg !6160
  %6 = icmp ult i32 %5, %1, !dbg !6165
  br i1 %6, label %7, label %11, !dbg !6169

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6170
  %9 = load i8, i8* %8, align 1, !dbg !6170
  %10 = zext i8 %9 to i32, !dbg !6172
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #24, !dbg !6173
  br label %12, !dbg !6174

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #24, !dbg !6175
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6177
  call void @llvm.dbg.value(metadata i32 %13, metadata !6150, metadata !DIExpression()), !dbg !6160
  %14 = icmp eq i32 %13, 8, !dbg !6178
  br i1 %14, label %3, label %4, !dbg !6161, !llvm.loop !6179

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #24, !dbg !6181
  ret void, !dbg !6182

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6152, metadata !DIExpression()), !dbg !6163
  %18 = icmp ult i32 %17, %1, !dbg !6183
  br i1 %18, label %19, label %26, !dbg !6184

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6185
  %21 = load i8, i8* %20, align 1, !dbg !6185
  call void @llvm.dbg.value(metadata i8 %21, metadata !6154, metadata !DIExpression()), !dbg !6186
  %22 = zext i8 %21 to i32, !dbg !6187
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #25, !dbg !6188
  %24 = icmp eq i32 %23, 0, !dbg !6189
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6188
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #24, !dbg !6190
  br label %27, !dbg !6191

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #24, !dbg !6192
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6194
  call void @llvm.dbg.value(metadata i32 %28, metadata !6152, metadata !DIExpression()), !dbg !6163
  %29 = icmp eq i32 %28, 8, !dbg !6195
  br i1 %29, label %15, label %16, !dbg !6164, !llvm.loop !6196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #6 !dbg !6198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6200, metadata !DIExpression()), !dbg !6201
  %2 = add i32 %0, -32, !dbg !6202
  %3 = icmp ult i32 %2, 95, !dbg !6202
  %4 = zext i1 %3 to i32, !dbg !6202
  ret i32 %4, !dbg !6203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6253, metadata !DIExpression()), !dbg !6255
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6254, metadata !DIExpression()), !dbg !6255
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6256
  br i1 %3, label %5, label %4, !dbg !6258

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #25, !dbg !6259
  br label %5, !dbg !6261

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !6262
  ret void, !dbg !6263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6264 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6268, metadata !DIExpression()), !dbg !6269
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6270
  %3 = load i32, i32* %2, align 4, !dbg !6270
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6270
  %5 = load i32, i32* %4, align 4, !dbg !6270
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6270
  %7 = load i32, i32* %6, align 4, !dbg !6270
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #24, !dbg !6270
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6275
  %9 = load i32, i32* %8, align 4, !dbg !6275
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6275
  %11 = load i32, i32* %10, align 4, !dbg !6275
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6275
  %13 = load i32, i32* %12, align 4, !dbg !6275
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #24, !dbg !6275
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6280
  %15 = load i32, i32* %14, align 4, !dbg !6280
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #24, !dbg !6280
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6285
  %17 = load i32, i32* %16, align 4, !dbg !6285
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !6285
  ret void, !dbg !6290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6291 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6308, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6309, metadata !DIExpression()), !dbg !6311
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6312
  %4 = load i32, i32* %3, align 4, !dbg !6312
  call void @llvm.dbg.value(metadata i32 %4, metadata !6310, metadata !DIExpression()), !dbg !6311
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !6313
  ret void, !dbg !6314
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !6315 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6319, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.value(metadata i8* %0, metadata !6320, metadata !DIExpression()), !dbg !6322
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6323
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6323
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6321, metadata !DIExpression()), !dbg !6324
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6324
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6325
  %5 = bitcast i8* %4 to i32*, !dbg !6325
  %6 = load i32, i32* %5, align 4, !dbg !6325
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6326
  store i32 %6, i32* %7, align 4, !dbg !6327
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !6328
  unreachable, !dbg !6329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6333, metadata !DIExpression()), !dbg !6334
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !6335
  ret void, !dbg !6336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6337 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6341, metadata !DIExpression()), !dbg !6342
  %2 = icmp sgt i32 %0, -1, !dbg !6343
  br i1 %2, label %3, label %8, !dbg !6345

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6346, !srcloc !6348
  %4 = and i32 %0, 31, !dbg !6349
  %5 = shl nuw i32 1, %4, !dbg !6350
  %6 = lshr i32 %0, 5, !dbg !6351
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6352
  store volatile i32 %5, i32* %7, align 4, !dbg !6353
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6354, !srcloc !6355
  br label %8, !dbg !6356

8:                                                ; preds = %3, %1
  ret void, !dbg !6357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6360, metadata !DIExpression()), !dbg !6361
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !6362
  ret void, !dbg !6363
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6366, metadata !DIExpression()), !dbg !6367
  %2 = icmp sgt i32 %0, -1, !dbg !6368
  br i1 %2, label %3, label %8, !dbg !6370

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6371
  %5 = shl nuw i32 1, %4, !dbg !6373
  %6 = lshr i32 %0, 5, !dbg !6374
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6375
  store volatile i32 %5, i32* %7, align 4, !dbg !6376
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6377, !srcloc !6381
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6382, !srcloc !6385
  br label %8, !dbg !6386

8:                                                ; preds = %3, %1
  ret void, !dbg !6387
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #5 !dbg !6388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6392, metadata !DIExpression()), !dbg !6393
  %2 = lshr i32 %0, 5, !dbg !6394
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6395
  %4 = load volatile i32, i32* %3, align 4, !dbg !6395
  %5 = and i32 %0, 31, !dbg !6396
  %6 = shl nuw i32 1, %5, !dbg !6396
  %7 = and i32 %4, %6, !dbg !6397
  ret i32 %7, !dbg !6398
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6403, metadata !DIExpression()), !dbg !6406
  call void @llvm.dbg.value(metadata i32 %1, metadata !6404, metadata !DIExpression()), !dbg !6406
  call void @llvm.dbg.value(metadata i32 %2, metadata !6405, metadata !DIExpression()), !dbg !6406
  %4 = add i32 %1, 1, !dbg !6407
  call void @llvm.dbg.value(metadata i32 %4, metadata !6404, metadata !DIExpression()), !dbg !6406
  %5 = icmp ult i32 %4, 16, !dbg !6410
  br i1 %5, label %7, label %6, !dbg !6413

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #24, !dbg !6414
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #24, !dbg !6414
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #24, !dbg !6414
  unreachable, !dbg !6414

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !6416
  ret void, !dbg !6417
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6422, metadata !DIExpression()), !dbg !6424
  call void @llvm.dbg.value(metadata i32 %1, metadata !6423, metadata !DIExpression()), !dbg !6424
  %3 = trunc i32 %1 to i8, !dbg !6425
  %4 = shl i8 %3, 4, !dbg !6425
  %5 = and i32 %0, 15, !dbg !6427
  %6 = add nsw i32 %5, -4, !dbg !6427
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6427
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6427
  %9 = icmp slt i32 %0, 0, !dbg !6427
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6427
  store volatile i8 %4, i8* %10, align 1, !dbg !6425
  ret void, !dbg !6428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6429 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6431, metadata !DIExpression()), !dbg !6432
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !6433
  ret void, !dbg !6434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6435 {
  tail call void @z_SysNmiOnReset() #24, !dbg !6437
  tail call void @z_arm_int_exit() #24, !dbg !6438
  ret void, !dbg !6439
}

; Function Attrs: optsize
declare !dbg !6440 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6441 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !6443 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !6445
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !6446
  tail call void @z_bss_zero() #24, !dbg !6447
  tail call void @z_data_copy() #24, !dbg !6448
  tail call void @z_arm_interrupt_init() #24, !dbg !6449
  tail call void @z_cstart() #27, !dbg !6450
  unreachable, !dbg !6450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6451 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6452
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6453, !srcloc !6456
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6457, !srcloc !6460
  ret void, !dbg !6461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6462 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6463
  %2 = and i32 %1, -15728641, !dbg !6463
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6463
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6464, !srcloc !6469
  call void @llvm.dbg.value(metadata i32 %3, metadata !6467, metadata !DIExpression()) #23, !dbg !6470
  %4 = and i32 %3, -5, !dbg !6471
  call void @llvm.dbg.value(metadata i32 %4, metadata !6472, metadata !DIExpression()) #23, !dbg !6477
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6479, !srcloc !6480
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6481, !srcloc !6460
  ret void, !dbg !6483
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6487, metadata !DIExpression()), !dbg !6488
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6489
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6490
  store i32 %0, i32* %3, align 4, !dbg !6491
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6492
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6493
  store i32 %4, i32* %5, align 4, !dbg !6494
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6495
  %7 = or i32 %6, 268435456, !dbg !6495
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6495
  call void @llvm.dbg.value(metadata i32 0, metadata !6496, metadata !DIExpression()) #23, !dbg !6499
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6501, !srcloc !6502
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6503
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6504
  %10 = load i32, i32* %9, align 4, !dbg !6504
  ret i32 %10, !dbg !6505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !6506 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6619, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6620, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.value(metadata i8* %2, metadata !6621, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6622, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.value(metadata i8* %4, metadata !6623, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.value(metadata i8* %5, metadata !6624, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.value(metadata i8* %6, metadata !6625, metadata !DIExpression()), !dbg !6627
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6628
  call void @llvm.dbg.value(metadata i8* %8, metadata !6626, metadata !DIExpression()), !dbg !6627
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6629
  %10 = bitcast i8* %9 to i32*, !dbg !6629
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6630
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6631
  %12 = bitcast i8* %8 to i32*, !dbg !6632
  store i32 %11, i32* %12, align 4, !dbg !6633
  %13 = ptrtoint i8* %4 to i32, !dbg !6634
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6635
  %15 = bitcast i8* %14 to i32*, !dbg !6635
  store i32 %13, i32* %15, align 4, !dbg !6636
  %16 = ptrtoint i8* %5 to i32, !dbg !6637
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6638
  %18 = bitcast i8* %17 to i32*, !dbg !6638
  store i32 %16, i32* %18, align 4, !dbg !6639
  %19 = ptrtoint i8* %6 to i32, !dbg !6640
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6641
  %21 = bitcast i8* %20 to i32*, !dbg !6641
  store i32 %19, i32* %21, align 4, !dbg !6642
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6643
  %23 = bitcast i8* %22 to i32*, !dbg !6643
  store i32 16777216, i32* %23, align 4, !dbg !6644
  %24 = ptrtoint i8* %8 to i32, !dbg !6645
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6646
  store i32 %24, i32* %25, align 8, !dbg !6647
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6648
  store i32 0, i32* %26, align 4, !dbg !6649
  ret void, !dbg !6650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6651 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6656, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i32 %1, metadata !6657, metadata !DIExpression()), !dbg !6662
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6663
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6658, metadata !DIExpression()), !dbg !6662
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6664
  br i1 %4, label %19, label %5, !dbg !6666

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6661, metadata !DIExpression()), !dbg !6662
  %6 = icmp eq i32 %0, -22, !dbg !6667
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6667
  %8 = load i32, i32* %7, align 4, !dbg !6667
  br i1 %6, label %16, label %9, !dbg !6669

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6667
  %11 = icmp ule i32 %10, %0, !dbg !6667
  %12 = icmp ugt i32 %8, %0, !dbg !6667
  %13 = and i1 %12, %11, !dbg !6667
  %14 = icmp ugt i32 %8, %1, !dbg !6667
  %15 = and i1 %14, %13, !dbg !6667
  br i1 %15, label %18, label %19, !dbg !6667

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6667
  br i1 %17, label %18, label %19, !dbg !6669

18:                                               ; preds = %9, %16
  br label %19, !dbg !6670

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6662
  ret i32 %20, !dbg !6672
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !6673 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6677, metadata !DIExpression()), !dbg !6680
  call void @llvm.dbg.value(metadata i8* %1, metadata !6678, metadata !DIExpression()), !dbg !6680
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6679, metadata !DIExpression()), !dbg !6680
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6681
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !6682
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6683, !srcloc !6684
  unreachable, !dbg !6685
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6686 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6704, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata i32 %1, metadata !6705, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata i32 %2, metadata !6706, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6707, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata i32 0, metadata !6708, metadata !DIExpression()), !dbg !6714
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6715
  call void @llvm.dbg.value(metadata i32 %8, metadata !6709, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6714
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6716
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6716
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6717
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6717
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6713, metadata !DIExpression()), !dbg !6718
  call void @llvm.dbg.value(metadata i32 0, metadata !6719, metadata !DIExpression()) #23, !dbg !6722
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6724, !srcloc !6725
  call void @llvm.dbg.value(metadata i8* %6, metadata !6711, metadata !DIExpression(DW_OP_deref)), !dbg !6714
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !6726
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6712, metadata !DIExpression()), !dbg !6714
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6727
  br i1 %11, label %12, label %13, !dbg !6730

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #24, !dbg !6731
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #24, !dbg !6731
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #24, !dbg !6731
  unreachable, !dbg !6731

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6733
  call void @llvm.dbg.value(metadata i32 %14, metadata !6709, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata i8* %5, metadata !6710, metadata !DIExpression(DW_OP_deref)), !dbg !6714
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #25, !dbg !6734
  call void @llvm.dbg.value(metadata i32 %15, metadata !6708, metadata !DIExpression()), !dbg !6714
  %16 = load i8, i8* %5, align 1, !dbg !6735, !range !6737
  call void @llvm.dbg.value(metadata i8 %16, metadata !6710, metadata !DIExpression()), !dbg !6714
  %17 = icmp eq i8 %16, 0, !dbg !6735
  br i1 %17, label %18, label %35, !dbg !6738

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6739
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #24, !dbg !6740
  %21 = load i8, i8* %6, align 1, !dbg !6741, !range !6737
  call void @llvm.dbg.value(metadata i8 %21, metadata !6711, metadata !DIExpression()), !dbg !6714
  %22 = icmp eq i8 %21, 0, !dbg !6741
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6743
  %24 = load i32, i32* %23, align 4, !dbg !6743
  br i1 %22, label %30, label %25, !dbg !6744

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6745
  %27 = icmp eq i32 %26, 0, !dbg !6748
  br i1 %27, label %28, label %34, !dbg !6749

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6750
  br label %32, !dbg !6752

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6753
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6743
  br label %34, !dbg !6755

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #24, !dbg !6755
  br label %35, !dbg !6756

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6756
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6756
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6756
  ret void, !dbg !6756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6762, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.value(metadata i32 %1, metadata !6763, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.value(metadata i32 %2, metadata !6764, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.value(metadata i8* %3, metadata !6765, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.value(metadata i8 0, metadata !6766, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6767, metadata !DIExpression()), !dbg !6768
  store i8 0, i8* %3, align 1, !dbg !6769
  %5 = icmp ugt i32 %2, -16777217, !dbg !6770
  br i1 %5, label %6, label %17, !dbg !6772

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6773
  %8 = icmp eq i32 %7, 8, !dbg !6773
  br i1 %8, label %9, label %10, !dbg !6773

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #24, !dbg !6775
  br label %17, !dbg !6781

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6782
  %12 = icmp eq i32 %11, 0, !dbg !6782
  br i1 %12, label %13, label %14, !dbg !6783

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6767, metadata !DIExpression()), !dbg !6768
  store i8 1, i8* %3, align 1, !dbg !6786
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6768
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6767, metadata !DIExpression()), !dbg !6768
  br label %17, !dbg !6789

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6768
  ret %struct.__esf* %18, !dbg !6790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6791 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6795, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata i32 %1, metadata !6796, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata i8* %2, metadata !6797, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata i32 0, metadata !6798, metadata !DIExpression()), !dbg !6799
  store i8 0, i8* %2, align 1, !dbg !6800
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6801

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !6802
  call void @llvm.dbg.value(metadata i32 %5, metadata !6798, metadata !DIExpression()), !dbg !6799
  br label %12, !dbg !6804

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6805
  call void @llvm.dbg.value(metadata i32 %7, metadata !6798, metadata !DIExpression()), !dbg !6799
  br label %12, !dbg !6806

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6807
  call void @llvm.dbg.value(metadata i32 0, metadata !6798, metadata !DIExpression()), !dbg !6799
  br label %12, !dbg !6808

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !6809
  call void @llvm.dbg.value(metadata i32 0, metadata !6798, metadata !DIExpression()), !dbg !6799
  br label %12, !dbg !6810

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !6811
  br label %12, !dbg !6812

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #25, !dbg !6813
  br label %12, !dbg !6814

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6799
  call void @llvm.dbg.value(metadata i32 %13, metadata !6798, metadata !DIExpression()), !dbg !6799
  ret i32 %13, !dbg !6815
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6816 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6820, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i8* %1, metadata !6821, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 0, metadata !6822, metadata !DIExpression()), !dbg !6823
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #24, !dbg !6824
  store i8 0, i8* %1, align 1, !dbg !6829
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6830
  %4 = and i32 %3, 2, !dbg !6832
  %5 = icmp eq i32 %4, 0, !dbg !6833
  br i1 %5, label %7, label %6, !dbg !6834

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #24, !dbg !6835
  br label %38, !dbg !6841

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6842
  %9 = icmp sgt i32 %8, -1, !dbg !6844
  br i1 %9, label %11, label %10, !dbg !6845

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #24, !dbg !6846
  br label %38, !dbg !6852

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6853
  %13 = and i32 %12, 1073741824, !dbg !6855
  %14 = icmp eq i32 %13, 0, !dbg !6856
  br i1 %14, label %37, label %15, !dbg !6857

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #24, !dbg !6858
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !6864
  br i1 %16, label %17, label %21, !dbg !6866

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6867
  %19 = load i32, i32* %18, align 4, !dbg !6867
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #24, !dbg !6867
  %20 = load i32, i32* %18, align 4, !dbg !6873
  call void @llvm.dbg.value(metadata i32 %20, metadata !6822, metadata !DIExpression()), !dbg !6823
  br label %38, !dbg !6874

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6875
  %23 = and i32 %22, 255, !dbg !6877
  %24 = icmp eq i32 %23, 0, !dbg !6878
  br i1 %24, label %27, label %25, !dbg !6879

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6880
  call void @llvm.dbg.value(metadata i32 %26, metadata !6822, metadata !DIExpression()), !dbg !6823
  br label %38, !dbg !6882

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6883
  %29 = and i32 %28, 65280, !dbg !6885
  %30 = icmp eq i32 %29, 0, !dbg !6886
  br i1 %30, label %32, label %31, !dbg !6887

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6888
  call void @llvm.dbg.value(metadata i32 0, metadata !6822, metadata !DIExpression()), !dbg !6823
  br label %38, !dbg !6890

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6891
  %34 = icmp ult i32 %33, 65536, !dbg !6893
  br i1 %34, label %36, label %35, !dbg !6894

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #25, !dbg !6895
  call void @llvm.dbg.value(metadata i32 0, metadata !6822, metadata !DIExpression()), !dbg !6823
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #24, !dbg !6897
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #24, !dbg !6897
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #24, !dbg !6897
  unreachable, !dbg !6897

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #24, !dbg !6902
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #24, !dbg !6902
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #24, !dbg !6902
  unreachable, !dbg !6902

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6823
  call void @llvm.dbg.value(metadata i32 %39, metadata !6822, metadata !DIExpression()), !dbg !6823
  ret i32 %39, !dbg !6907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6908 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6910, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i32 %1, metadata !6911, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i8* %2, metadata !6912, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i32 0, metadata !6913, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i32 -22, metadata !6914, metadata !DIExpression()), !dbg !6923
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #24, !dbg !6924
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6929
  %5 = and i32 %4, 16, !dbg !6931
  %6 = icmp eq i32 %5, 0, !dbg !6932
  br i1 %6, label %8, label %7, !dbg !6933

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #24, !dbg !6934
  br label %8, !dbg !6940

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6941
  %10 = and i32 %9, 8, !dbg !6943
  %11 = icmp eq i32 %10, 0, !dbg !6944
  br i1 %11, label %13, label %12, !dbg !6945

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !6946
  br label %13, !dbg !6952

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6953
  %15 = and i32 %14, 2, !dbg !6954
  %16 = icmp eq i32 %15, 0, !dbg !6955
  br i1 %16, label %27, label %17, !dbg !6956

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #24, !dbg !6957
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6962
  call void @llvm.dbg.value(metadata i32 %18, metadata !6915, metadata !DIExpression()), !dbg !6963
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6964
  %20 = and i32 %19, 128, !dbg !6966
  %21 = icmp eq i32 %20, 0, !dbg !6967
  br i1 %21, label %27, label %22, !dbg !6968

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6914, metadata !DIExpression()), !dbg !6923
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #24, !dbg !6969
  %23 = icmp eq i32 %1, 0, !dbg !6975
  br i1 %23, label %27, label %24, !dbg !6977

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6978
  %26 = and i32 %25, -129, !dbg !6978
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6978
  br label %27, !dbg !6980

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6923
  call void @llvm.dbg.value(metadata i32 %28, metadata !6914, metadata !DIExpression()), !dbg !6923
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6981
  %30 = and i32 %29, 1, !dbg !6983
  %31 = icmp eq i32 %30, 0, !dbg !6984
  br i1 %31, label %33, label %32, !dbg !6985

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #24, !dbg !6986
  br label %33, !dbg !6992

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6993
  %35 = and i32 %34, 32, !dbg !6995
  %36 = icmp eq i32 %35, 0, !dbg !6996
  br i1 %36, label %38, label %37, !dbg !6997

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #24, !dbg !6998
  br label %38, !dbg !7004

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7005
  %40 = and i32 %39, 16, !dbg !7006
  %41 = icmp eq i32 %40, 0, !dbg !7006
  br i1 %41, label %42, label %46, !dbg !7007

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7008
  %44 = and i32 %43, 2, !dbg !7009
  %45 = icmp eq i32 %44, 0, !dbg !7009
  br i1 %45, label %60, label %46, !dbg !7010

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7011
  %48 = and i32 %47, 2048, !dbg !7012
  %49 = icmp eq i32 %48, 0, !dbg !7012
  br i1 %49, label %60, label %50, !dbg !7013

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7014
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #24, !dbg !7015
  call void @llvm.dbg.value(metadata i32 %52, metadata !6918, metadata !DIExpression()), !dbg !7016
  %53 = icmp eq i32 %52, 0, !dbg !7017
  br i1 %53, label %55, label %54, !dbg !7019

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7020, metadata !DIExpression()) #23, !dbg !7023
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7026, !srcloc !7027
  call void @llvm.dbg.value(metadata i32 2, metadata !6913, metadata !DIExpression()), !dbg !6923
  br label %60, !dbg !7028

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7029
  %57 = and i32 %56, 16, !dbg !7029
  %58 = icmp eq i32 %57, 0, !dbg !7029
  br i1 %58, label %60, label %59, !dbg !7033

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #24, !dbg !7034
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #24, !dbg !7034
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #24, !dbg !7034
  unreachable, !dbg !7034

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6923
  call void @llvm.dbg.value(metadata i32 %61, metadata !6913, metadata !DIExpression()), !dbg !6923
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7036
  %63 = and i32 %62, 32, !dbg !7038
  %64 = icmp eq i32 %63, 0, !dbg !7039
  br i1 %64, label %68, label %65, !dbg !7040

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7041
  %67 = and i32 %66, -8193, !dbg !7041
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7041
  br label %68, !dbg !7043

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7044
  %70 = or i32 %69, 255, !dbg !7044
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7044
  store i8 0, i8* %2, align 1, !dbg !7045
  ret i32 %61, !dbg !7046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7047 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7051, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i32 %0, metadata !7052, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i8* %1, metadata !7053, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.value(metadata i32 0, metadata !7054, metadata !DIExpression()), !dbg !7058
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #24, !dbg !7059
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7064
  %4 = and i32 %3, 4096, !dbg !7066
  %5 = icmp eq i32 %4, 0, !dbg !7066
  br i1 %5, label %7, label %6, !dbg !7067

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #24, !dbg !7068
  br label %7, !dbg !7074

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7075
  %9 = and i32 %8, 2048, !dbg !7077
  %10 = icmp eq i32 %9, 0, !dbg !7077
  br i1 %10, label %12, label %11, !dbg !7078

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !7079
  br label %12, !dbg !7085

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7086
  %14 = and i32 %13, 512, !dbg !7087
  %15 = icmp eq i32 %14, 0, !dbg !7087
  br i1 %15, label %26, label %16, !dbg !7088

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #24, !dbg !7089
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7094
  call void @llvm.dbg.value(metadata i32 %17, metadata !7055, metadata !DIExpression()), !dbg !7095
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7096
  %19 = and i32 %18, 32768, !dbg !7098
  %20 = icmp eq i32 %19, 0, !dbg !7099
  br i1 %20, label %26, label %21, !dbg !7100

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !7101
  %22 = icmp eq i32 %0, 0, !dbg !7107
  br i1 %22, label %26, label %23, !dbg !7109

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7110
  %25 = and i32 %24, -32769, !dbg !7110
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7110
  br label %26, !dbg !7112

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7113
  %28 = and i32 %27, 1024, !dbg !7115
  %29 = icmp eq i32 %28, 0, !dbg !7115
  br i1 %29, label %31, label %30, !dbg !7116

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #24, !dbg !7117
  br label %31, !dbg !7123

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7124
  %33 = and i32 %32, 256, !dbg !7126
  %34 = icmp eq i32 %33, 0, !dbg !7127
  br i1 %34, label %35, label %39, !dbg !7128

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7129
  %37 = and i32 %36, 8192, !dbg !7131
  %38 = icmp eq i32 %37, 0, !dbg !7131
  br i1 %38, label %41, label %39, !dbg !7132

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #24, !dbg !7133
  br label %41, !dbg !7134

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7134
  %43 = or i32 %42, 65280, !dbg !7134
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7134
  store i8 0, i8* %1, align 1, !dbg !7135
  ret void, !dbg !7136
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7137 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7143, metadata !DIExpression()), !dbg !7145
  call void @llvm.dbg.value(metadata i32 0, metadata !7144, metadata !DIExpression()), !dbg !7145
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #24, !dbg !7146
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7151
  %2 = and i32 %1, 33554432, !dbg !7153
  %3 = icmp eq i32 %2, 0, !dbg !7154
  br i1 %3, label %5, label %4, !dbg !7155

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #24, !dbg !7156
  br label %5, !dbg !7162

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7163
  %7 = and i32 %6, 16777216, !dbg !7165
  %8 = icmp eq i32 %7, 0, !dbg !7166
  br i1 %8, label %10, label %9, !dbg !7167

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #24, !dbg !7168
  br label %10, !dbg !7174

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7175
  %12 = and i32 %11, 524288, !dbg !7177
  %13 = icmp eq i32 %12, 0, !dbg !7178
  br i1 %13, label %15, label %14, !dbg !7179

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #24, !dbg !7180
  br label %15, !dbg !7186

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7187
  %17 = and i32 %16, 262144, !dbg !7189
  %18 = icmp eq i32 %17, 0, !dbg !7190
  br i1 %18, label %20, label %19, !dbg !7191

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #24, !dbg !7192
  br label %20, !dbg !7198

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7199
  %22 = and i32 %21, 131072, !dbg !7201
  %23 = icmp eq i32 %22, 0, !dbg !7202
  br i1 %23, label %25, label %24, !dbg !7203

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #24, !dbg !7204
  br label %25, !dbg !7210

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7211
  %27 = and i32 %26, 65536, !dbg !7213
  %28 = icmp eq i32 %27, 0, !dbg !7214
  br i1 %28, label %30, label %29, !dbg !7215

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #24, !dbg !7216
  br label %30, !dbg !7222

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7223
  %32 = or i32 %31, -65536, !dbg !7223
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7223
  ret void, !dbg !7224
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7225 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7229, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.value(metadata i8* %0, metadata !7230, metadata !DIExpression()), !dbg !7231
  store i8 0, i8* %0, align 1, !dbg !7232
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #24, !dbg !7233
  ret void, !dbg !7238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7239 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7243, metadata !DIExpression()), !dbg !7245
  call void @llvm.dbg.value(metadata i32 %0, metadata !7244, metadata !DIExpression()), !dbg !7245
  %2 = icmp slt i32 %0, 16, !dbg !7246
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7246
  %4 = add nsw i32 %0, -16, !dbg !7246
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #24, !dbg !7246
  ret void, !dbg !7251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7252 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7256, metadata !DIExpression()), !dbg !7259
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7260
  %3 = load i32, i32* %2, align 4, !dbg !7260
  %4 = inttoptr i32 %3 to i16*, !dbg !7261
  call void @llvm.dbg.value(metadata i16* %4, metadata !7257, metadata !DIExpression()), !dbg !7259
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7262
  %6 = or i32 %5, 256, !dbg !7262
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7262
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7263, !srcloc !7266
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7267, !srcloc !7270
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7271
  %8 = load i16, i16* %7, align 2, !dbg !7272
  call void @llvm.dbg.value(metadata i16 %8, metadata !7258, metadata !DIExpression()), !dbg !7259
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7273
  %10 = and i32 %9, -257, !dbg !7273
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7273
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7274, !srcloc !7266
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7276, !srcloc !7270
  %11 = icmp eq i16 %8, -8446, !dbg !7278
  ret i1 %11, !dbg !7280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7281 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7282
  %2 = or i32 %1, 16, !dbg !7282
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7282
  ret void, !dbg !7283
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7284 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7287, metadata !DIExpression()), !dbg !7288
  br label %1, !dbg !7289

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7287, metadata !DIExpression()), !dbg !7288
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #25, !dbg !7291
  %3 = add nuw nsw i32 %2, 1, !dbg !7294
  call void @llvm.dbg.value(metadata i32 %3, metadata !7287, metadata !DIExpression()), !dbg !7288
  %4 = icmp eq i32 %3, 97, !dbg !7295
  br i1 %4, label %5, label %1, !dbg !7289, !llvm.loop !7296

5:                                                ; preds = %1
  ret void, !dbg !7298
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #15 !dbg !7299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7301, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i32 1, metadata !7302, metadata !DIExpression()), !dbg !7303
  %2 = and i32 %0, 15, !dbg !7304
  %3 = add nsw i32 %2, -4, !dbg !7304
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7304
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7304
  %6 = icmp slt i32 %0, 0, !dbg !7304
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7304
  store volatile i8 16, i8* %7, align 1, !dbg !7305
  ret void, !dbg !7307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7308 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7417, metadata !DIExpression()), !dbg !7418
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7419
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7421
  br i1 %3, label %4, label %12, !dbg !7422

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7423, !srcloc !7435
  call void @llvm.dbg.value(metadata i32 %5, metadata !7426, metadata !DIExpression()) #23, !dbg !7436
  %6 = icmp eq i32 %5, 0, !dbg !7437
  br i1 %6, label %12, label %7, !dbg !7438

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7439
  %9 = or i32 %8, 268435456, !dbg !7439
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7439
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7441
  %11 = and i32 %10, -32769, !dbg !7441
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7441
  br label %12, !dbg !7442

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !7443
  ret void, !dbg !7444
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7445 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !7446
  ret void, !dbg !7447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !391 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !499, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i8 0, metadata !500, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 64, metadata !502, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 undef, metadata !501, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7448
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7449
  %3 = load i32, i32* %2, align 4, !dbg !7449
  call void @llvm.dbg.value(metadata i32 %3, metadata !501, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7448
  %4 = add i32 %3, -64, !dbg !7451
  call void @llvm.dbg.value(metadata i32 %4, metadata !501, metadata !DIExpression()), !dbg !7448
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7452
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7453
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7454
  call void @llvm.dbg.value(metadata i8 1, metadata !500, metadata !DIExpression()), !dbg !7448
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !7455
  ret void, !dbg !7456
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7457 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7458
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7459, !srcloc !7462
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7463, !srcloc !7466
  ret void, !dbg !7467
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7468 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7469, !srcloc !7472
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7473
  ret void, !dbg !7474
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7475 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7490, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i8 %1, metadata !7491, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i32 %2, metadata !7492, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata i32 %3, metadata !7493, metadata !DIExpression()), !dbg !7494
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !7495
  %6 = icmp eq i32 %5, -22, !dbg !7497
  br i1 %6, label %7, label %9, !dbg !7498

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #24, !dbg !7499
  %8 = zext i8 %1 to i32, !dbg !7499
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #24, !dbg !7499
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #24, !dbg !7499
  unreachable, !dbg !7499

9:                                                ; preds = %4
  ret void, !dbg !7504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7505 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7510, metadata !DIExpression()), !dbg !7515
  call void @llvm.dbg.value(metadata i8 %1, metadata !7511, metadata !DIExpression()), !dbg !7515
  call void @llvm.dbg.value(metadata i32 undef, metadata !7512, metadata !DIExpression()), !dbg !7515
  call void @llvm.dbg.value(metadata i32 undef, metadata !7513, metadata !DIExpression()), !dbg !7515
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7516
  call void @llvm.dbg.value(metadata i8 %3, metadata !7514, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7515
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !7517
  call void @llvm.dbg.value(metadata i32 %4, metadata !7514, metadata !DIExpression()), !dbg !7515
  %5 = trunc i32 %4 to i8, !dbg !7518
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7519
  ret i32 %4, !dbg !7520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7521 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7525, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.value(metadata i8 %1, metadata !7526, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.value(metadata i8 %2, metadata !7527, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.value(metadata i1 %3, metadata !7528, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7531
  %5 = zext i8 %2 to i32, !dbg !7532
  call void @llvm.dbg.value(metadata i32 %5, metadata !7530, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.value(metadata i32 0, metadata !7529, metadata !DIExpression()), !dbg !7531
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7530, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.value(metadata i32 0, metadata !7529, metadata !DIExpression()), !dbg !7531
  %7 = icmp eq i8 %1, 0, !dbg !7533
  br i1 %7, label %30, label %8, !dbg !7536

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7530, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.value(metadata i32 %10, metadata !7529, metadata !DIExpression()), !dbg !7531
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7537
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7540
  %13 = load i32, i32* %12, align 4, !dbg !7540
  %14 = icmp eq i32 %13, 0, !dbg !7541
  br i1 %14, label %26, label %15, !dbg !7542

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7543

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !7545
  %18 = icmp eq i32 %17, 0, !dbg !7545
  br i1 %18, label %19, label %20, !dbg !7546

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #24, !dbg !7547
  br label %30, !dbg !7553

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7554
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !7555
  call void @llvm.dbg.value(metadata i32 %22, metadata !7530, metadata !DIExpression()), !dbg !7531
  %23 = icmp eq i32 %22, -22, !dbg !7556
  br i1 %23, label %30, label %24, !dbg !7558

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7559
  call void @llvm.dbg.value(metadata i32 %25, metadata !7530, metadata !DIExpression()), !dbg !7531
  br label %26, !dbg !7560

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7531
  call void @llvm.dbg.value(metadata i32 %27, metadata !7530, metadata !DIExpression()), !dbg !7531
  %28 = add nuw nsw i32 %10, 1, !dbg !7561
  call void @llvm.dbg.value(metadata i32 %28, metadata !7529, metadata !DIExpression()), !dbg !7531
  %29 = icmp eq i32 %28, %6, !dbg !7533
  br i1 %29, label %30, label %8, !dbg !7536, !llvm.loop !7562

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7531
  ret i32 %31, !dbg !7564
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7565 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7569, metadata !DIExpression()), !dbg !7571
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7572
  %3 = load i32, i32* %2, align 4, !dbg !7572
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7573, !range !7574
  %5 = icmp ult i32 %4, 2, !dbg !7573
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7575
  br i1 %7, label %8, label %15, !dbg !7575

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7576
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7577
  %11 = load i32, i32* %10, align 4, !dbg !7577
  %12 = and i32 %11, %9, !dbg !7578
  %13 = icmp eq i32 %12, 0, !dbg !7579
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7570, metadata !DIExpression()), !dbg !7571
  ret i32 %16, !dbg !7580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7581 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7585, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7586, metadata !DIExpression()), !dbg !7588
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7589
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7589
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7587, metadata !DIExpression()), !dbg !7590
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7591
  %6 = load i32, i32* %5, align 4, !dbg !7591
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7592
  store i32 %6, i32* %7, align 4, !dbg !7593
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7594
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7595
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7596
  %11 = load i32, i32* %10, align 4, !dbg !7596
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #25, !dbg !7597
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !7598
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7599
  ret i32 %12, !dbg !7600
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7601 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7608, metadata !DIExpression()), !dbg !7612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7609, metadata !DIExpression()), !dbg !7612
  call void @llvm.dbg.value(metadata i32 undef, metadata !7610, metadata !DIExpression()), !dbg !7612
  call void @llvm.dbg.value(metadata i32 %2, metadata !7611, metadata !DIExpression()), !dbg !7612
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7613
  %5 = load i32, i32* %4, align 4, !dbg !7613
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !7614
  %7 = or i32 %6, %5, !dbg !7615
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7616
  store i32 %7, i32* %8, align 4, !dbg !7617
  ret void, !dbg !7618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7619 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7623, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7624, metadata !DIExpression()), !dbg !7625
  %3 = zext i8 %0 to i32, !dbg !7626
  %4 = icmp ugt i8 %0, 7, !dbg !7628
  br i1 %4, label %5, label %6, !dbg !7629

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #24, !dbg !7630
  br label %7, !dbg !7636

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !7637
  br label %7, !dbg !7638

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7625
  ret i32 %8, !dbg !7639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7644, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7645, metadata !DIExpression()), !dbg !7646
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !7647
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7648
  %4 = load i32, i32* %3, align 4, !dbg !7648
  %5 = and i32 %4, -32, !dbg !7649
  %6 = or i32 %5, %0, !dbg !7650
  %7 = or i32 %6, 16, !dbg !7650
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7651
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7652
  %9 = load i32, i32* %8, align 4, !dbg !7652
  %10 = or i32 %9, 1, !dbg !7653
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7654
  ret void, !dbg !7655
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7656 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7659, metadata !DIExpression()), !dbg !7660
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7661
  ret void, !dbg !7662
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !7663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7667, metadata !DIExpression()), !dbg !7668
  %2 = icmp ult i32 %0, 33, !dbg !7669
  br i1 %2, label %11, label %3, !dbg !7671

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7672
  br i1 %4, label %11, label %5, !dbg !7674

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7675
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7676, !range !7574
  %8 = mul nsw i32 %7, -2, !dbg !7677
  %9 = add nsw i32 %8, 62, !dbg !7677
  %10 = and i32 %9, 62, !dbg !7678
  br label %11, !dbg !7679

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7668
  ret i32 %12, !dbg !7680
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7681 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7685, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.value(metadata i8 %1, metadata !7686, metadata !DIExpression()), !dbg !7687
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !7688
  %4 = icmp eq i32 %3, -22, !dbg !7690
  br i1 %4, label %5, label %7, !dbg !7691

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #24, !dbg !7692
  %6 = zext i8 %1 to i32, !dbg !7692
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #24, !dbg !7692
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #24, !dbg !7692
  unreachable, !dbg !7692

7:                                                ; preds = %2
  ret void, !dbg !7697
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7698 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7702, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.value(metadata i8 %1, metadata !7703, metadata !DIExpression()), !dbg !7709
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7710
  call void @llvm.dbg.value(metadata i8 %3, metadata !7704, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7709
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !7711
  call void @llvm.dbg.value(metadata i32 %4, metadata !7704, metadata !DIExpression()), !dbg !7709
  %5 = icmp ne i32 %4, -22, !dbg !7712
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7713
  call void @llvm.dbg.value(metadata i32 %4, metadata !7705, metadata !DIExpression()), !dbg !7714
  br i1 %7, label %8, label %12, !dbg !7713

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7705, metadata !DIExpression()), !dbg !7714
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !7715
  %10 = add i32 %9, 1, !dbg !7718
  call void @llvm.dbg.value(metadata i32 %10, metadata !7705, metadata !DIExpression()), !dbg !7714
  %11 = icmp eq i32 %10, 8, !dbg !7719
  br i1 %11, label %12, label %8, !dbg !7720, !llvm.loop !7721

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7727, metadata !DIExpression()), !dbg !7728
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7729
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7730
  ret void, !dbg !7731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7732 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7737
  %2 = icmp ugt i32 %1, 8, !dbg !7739
  br i1 %2, label %3, label %4, !dbg !7740

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #24, !dbg !7741
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #24, !dbg !7741
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #24, !dbg !7741
  unreachable, !dbg !7741

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !7746
  call void @llvm.dbg.value(metadata i32 0, metadata !7736, metadata !DIExpression()), !dbg !7747
  %5 = icmp eq i32 %1, 0, !dbg !7748
  br i1 %5, label %13, label %6, !dbg !7751

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7751

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7736, metadata !DIExpression()), !dbg !7747
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7752
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #25, !dbg !7754
  %11 = add nuw i32 %9, 1, !dbg !7755
  call void @llvm.dbg.value(metadata i32 %11, metadata !7736, metadata !DIExpression()), !dbg !7747
  %12 = icmp eq i32 %11, %1, !dbg !7748
  br i1 %12, label %13, label %8, !dbg !7751, !llvm.loop !7756

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7758
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7759
  tail call void @arm_core_mpu_enable() #25, !dbg !7760
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7761
  %16 = and i32 %15, 65280, !dbg !7761
  %17 = icmp eq i32 %16, 2048, !dbg !7761
  br i1 %17, label %19, label %18, !dbg !7764

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #24, !dbg !7765
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #24, !dbg !7765
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #24, !dbg !7765
  unreachable, !dbg !7765

19:                                               ; preds = %13
  ret i32 0, !dbg !7767
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7768 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7775, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i8* %1, metadata !7776, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i8* %0, metadata !7777, metadata !DIExpression()), !dbg !7778
  %3 = load i8, i8* %1, align 1, !dbg !7779
  %4 = icmp eq i8 %3, 0, !dbg !7780
  br i1 %4, label %13, label %5, !dbg !7781

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7775, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i8* %8, metadata !7776, metadata !DIExpression()), !dbg !7778
  store i8 %6, i8* %7, align 1, !dbg !7782
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7784
  call void @llvm.dbg.value(metadata i8* %9, metadata !7775, metadata !DIExpression()), !dbg !7778
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7785
  call void @llvm.dbg.value(metadata i8* %10, metadata !7776, metadata !DIExpression()), !dbg !7778
  %11 = load i8, i8* %10, align 1, !dbg !7779
  %12 = icmp eq i8 %11, 0, !dbg !7780
  br i1 %12, label %13, label %5, !dbg !7781, !llvm.loop !7786

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7788
  ret i8* %0, !dbg !7789
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7790 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7794, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata i8* %1, metadata !7795, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata i32 %2, metadata !7796, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata i8* %0, metadata !7797, metadata !DIExpression()), !dbg !7798
  %4 = icmp eq i32 %2, 0, !dbg !7799
  br i1 %4, label %22, label %5, !dbg !7800

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7794, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata i32 %7, metadata !7796, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata i8* %8, metadata !7795, metadata !DIExpression()), !dbg !7798
  %9 = load i8, i8* %8, align 1, !dbg !7801
  %10 = icmp eq i8 %9, 0, !dbg !7802
  br i1 %10, label %16, label %11, !dbg !7803

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7804
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7806
  call void @llvm.dbg.value(metadata i8* %12, metadata !7795, metadata !DIExpression()), !dbg !7798
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7807
  call void @llvm.dbg.value(metadata i8* %13, metadata !7794, metadata !DIExpression()), !dbg !7798
  %14 = add i32 %7, -1, !dbg !7808
  call void @llvm.dbg.value(metadata i32 %14, metadata !7796, metadata !DIExpression()), !dbg !7798
  %15 = icmp eq i32 %14, 0, !dbg !7799
  br i1 %15, label %22, label %5, !dbg !7800, !llvm.loop !7809

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7794, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata i32 %18, metadata !7796, metadata !DIExpression()), !dbg !7798
  store i8 0, i8* %17, align 1, !dbg !7811
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7813
  call void @llvm.dbg.value(metadata i8* %19, metadata !7794, metadata !DIExpression()), !dbg !7798
  %20 = add i32 %18, -1, !dbg !7814
  call void @llvm.dbg.value(metadata i32 %20, metadata !7796, metadata !DIExpression()), !dbg !7798
  %21 = icmp eq i32 %20, 0, !dbg !7815
  br i1 %21, label %22, label %16, !dbg !7816, !llvm.loop !7817

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7819
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7820 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7824, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.value(metadata i32 %1, metadata !7825, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.value(metadata i32 %1, metadata !7826, metadata !DIExpression()), !dbg !7827
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7828

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7824, metadata !DIExpression()), !dbg !7827
  %6 = load i8, i8* %5, align 1, !dbg !7829
  %7 = icmp eq i8 %6, %3, !dbg !7830
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7831
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7832
  call void @llvm.dbg.value(metadata i8* %10, metadata !7824, metadata !DIExpression()), !dbg !7827
  br i1 %9, label %11, label %4, !dbg !7831, !llvm.loop !7834

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7836
  ret i8* %12, !dbg !7837
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7838 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7840, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata i32 %1, metadata !7841, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata i8* null, metadata !7842, metadata !DIExpression()), !dbg !7843
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7844

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7843
  call void @llvm.dbg.value(metadata i8* %6, metadata !7842, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata i8* %5, metadata !7840, metadata !DIExpression()), !dbg !7843
  %7 = load i8, i8* %5, align 1, !dbg !7845
  %8 = icmp eq i8 %7, %3, !dbg !7848
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7849
  call void @llvm.dbg.value(metadata i8* %9, metadata !7842, metadata !DIExpression()), !dbg !7843
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7850
  call void @llvm.dbg.value(metadata i8* %10, metadata !7840, metadata !DIExpression()), !dbg !7843
  %11 = icmp eq i8 %7, 0, !dbg !7851
  br i1 %11, label %12, label %4, !dbg !7851, !llvm.loop !7852

12:                                               ; preds = %4
  ret i8* %9, !dbg !7854
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !7855 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7859, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.value(metadata i32 0, metadata !7860, metadata !DIExpression()), !dbg !7861
  %2 = load i8, i8* %0, align 1, !dbg !7862
  %3 = icmp eq i8 %2, 0, !dbg !7863
  br i1 %3, label %11, label %4, !dbg !7864

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7860, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.value(metadata i8* %6, metadata !7859, metadata !DIExpression()), !dbg !7861
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7865
  call void @llvm.dbg.value(metadata i8* %7, metadata !7859, metadata !DIExpression()), !dbg !7861
  %8 = add i32 %5, 1, !dbg !7867
  call void @llvm.dbg.value(metadata i32 %8, metadata !7860, metadata !DIExpression()), !dbg !7861
  %9 = load i8, i8* %7, align 1, !dbg !7862
  %10 = icmp eq i8 %9, 0, !dbg !7863
  br i1 %10, label %11, label %4, !dbg !7864, !llvm.loop !7868

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7861
  ret i32 %12, !dbg !7870
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7871 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7875, metadata !DIExpression()), !dbg !7878
  call void @llvm.dbg.value(metadata i32 %1, metadata !7876, metadata !DIExpression()), !dbg !7878
  call void @llvm.dbg.value(metadata i32 0, metadata !7877, metadata !DIExpression()), !dbg !7878
  %3 = load i8, i8* %0, align 1, !dbg !7879
  %4 = icmp ne i8 %3, 0, !dbg !7880
  %5 = icmp ne i32 %1, 0, !dbg !7881
  %6 = and i1 %4, %5, !dbg !7881
  br i1 %6, label %7, label %16, !dbg !7882

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7877, metadata !DIExpression()), !dbg !7878
  call void @llvm.dbg.value(metadata i8* %9, metadata !7875, metadata !DIExpression()), !dbg !7878
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7883
  call void @llvm.dbg.value(metadata i8* %10, metadata !7875, metadata !DIExpression()), !dbg !7878
  %11 = add nuw i32 %8, 1, !dbg !7885
  call void @llvm.dbg.value(metadata i32 %11, metadata !7877, metadata !DIExpression()), !dbg !7878
  %12 = load i8, i8* %10, align 1, !dbg !7879
  %13 = icmp ne i8 %12, 0, !dbg !7880
  %14 = icmp ult i32 %11, %1, !dbg !7881
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7881
  br i1 %15, label %7, label %16, !dbg !7882, !llvm.loop !7886

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7878
  ret i32 %17, !dbg !7888
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !7889 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7893, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i8* %1, metadata !7894, metadata !DIExpression()), !dbg !7895
  %3 = load i8, i8* %0, align 1, !dbg !7896
  %4 = load i8, i8* %1, align 1, !dbg !7897
  %5 = icmp ne i8 %3, %4, !dbg !7898
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7899
  br i1 %7, label %18, label %8, !dbg !7899

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7894, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i8* %10, metadata !7893, metadata !DIExpression()), !dbg !7895
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7900
  call void @llvm.dbg.value(metadata i8* %11, metadata !7893, metadata !DIExpression()), !dbg !7895
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7902
  call void @llvm.dbg.value(metadata i8* %12, metadata !7894, metadata !DIExpression()), !dbg !7895
  %13 = load i8, i8* %11, align 1, !dbg !7896
  %14 = load i8, i8* %12, align 1, !dbg !7897
  %15 = icmp ne i8 %13, %14, !dbg !7898
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7899
  br i1 %17, label %18, label %8, !dbg !7899, !llvm.loop !7903

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7896
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7897
  %21 = zext i8 %19 to i32, !dbg !7906
  %22 = zext i8 %20 to i32, !dbg !7907
  %23 = sub nsw i32 %21, %22, !dbg !7908
  ret i32 %23, !dbg !7909
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7910 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7914, metadata !DIExpression()), !dbg !7917
  call void @llvm.dbg.value(metadata i8* %1, metadata !7915, metadata !DIExpression()), !dbg !7917
  call void @llvm.dbg.value(metadata i32 %2, metadata !7916, metadata !DIExpression()), !dbg !7917
  %4 = icmp eq i32 %2, 0, !dbg !7918
  br i1 %4, label %23, label %5, !dbg !7918

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7916, metadata !DIExpression()), !dbg !7917
  call void @llvm.dbg.value(metadata i8* %7, metadata !7915, metadata !DIExpression()), !dbg !7917
  call void @llvm.dbg.value(metadata i8* %8, metadata !7914, metadata !DIExpression()), !dbg !7917
  %9 = load i8, i8* %8, align 1, !dbg !7919
  %10 = load i8, i8* %7, align 1, !dbg !7920
  %11 = icmp ne i8 %9, %10, !dbg !7921
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7922
  br i1 %13, label %19, label %14, !dbg !7922

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7923
  call void @llvm.dbg.value(metadata i8* %15, metadata !7914, metadata !DIExpression()), !dbg !7917
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7925
  call void @llvm.dbg.value(metadata i8* %16, metadata !7915, metadata !DIExpression()), !dbg !7917
  %17 = add i32 %6, -1, !dbg !7926
  call void @llvm.dbg.value(metadata i32 %17, metadata !7916, metadata !DIExpression()), !dbg !7917
  %18 = icmp eq i32 %17, 0, !dbg !7918
  br i1 %18, label %23, label %5, !dbg !7918, !llvm.loop !7927

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7930
  %21 = zext i8 %10 to i32, !dbg !7931
  %22 = sub nsw i32 %20, %21, !dbg !7932
  br label %23, !dbg !7933

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7933
  ret i32 %24, !dbg !7934
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7935 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7939, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i8* %1, metadata !7940, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.value(metadata i8** %2, metadata !7941, metadata !DIExpression()), !dbg !7944
  %4 = icmp eq i8* %0, null, !dbg !7945
  br i1 %4, label %5, label %7, !dbg !7945

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7946
  br label %7, !dbg !7945

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7945
  call void @llvm.dbg.value(metadata i8* %8, metadata !7942, metadata !DIExpression()), !dbg !7944
  %9 = load i8, i8* %8, align 1, !dbg !7947
  %10 = icmp eq i8 %9, 0, !dbg !7947
  br i1 %10, label %33, label %11, !dbg !7948

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7942, metadata !DIExpression()), !dbg !7944
  %14 = zext i8 %12 to i32, !dbg !7947
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !7949
  %16 = icmp eq i8* %15, null, !dbg !7948
  br i1 %16, label %21, label %17, !dbg !7950

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7951
  call void @llvm.dbg.value(metadata i8* %18, metadata !7942, metadata !DIExpression()), !dbg !7944
  %19 = load i8, i8* %18, align 1, !dbg !7947
  %20 = icmp eq i8 %19, 0, !dbg !7947
  br i1 %20, label %33, label %11, !dbg !7948, !llvm.loop !7953

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7943, metadata !DIExpression()), !dbg !7944
  %24 = zext i8 %22 to i32, !dbg !7955
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !7956
  %26 = icmp eq i8* %25, null, !dbg !7957
  br i1 %26, label %27, label %31, !dbg !7958

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7959
  call void @llvm.dbg.value(metadata i8* %28, metadata !7943, metadata !DIExpression()), !dbg !7944
  %29 = load i8, i8* %28, align 1, !dbg !7955
  %30 = icmp eq i8 %29, 0, !dbg !7955
  br i1 %30, label %33, label %21, !dbg !7961, !llvm.loop !7962

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7964
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7967
  br label %33, !dbg !7968

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7944
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7944
  store i8* %34, i8** %2, align 4, !dbg !7944
  ret i8* %35, !dbg !7969
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7970 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7972, metadata !DIExpression()), !dbg !7974
  call void @llvm.dbg.value(metadata i8* %1, metadata !7973, metadata !DIExpression()), !dbg !7974
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7975
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7976
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !7977
  ret i8* %0, !dbg !7978
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7979 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7981, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i8* %1, metadata !7982, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i32 %2, metadata !7983, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i8* %0, metadata !7984, metadata !DIExpression()), !dbg !7986
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7987
  call void @llvm.dbg.value(metadata i32 %4, metadata !7985, metadata !DIExpression()), !dbg !7986
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7988
  call void @llvm.dbg.value(metadata i8* %5, metadata !7981, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i8* %1, metadata !7982, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i32 %2, metadata !7983, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i32 %2, metadata !7983, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7986
  %6 = icmp eq i32 %2, 0, !dbg !7989
  br i1 %6, label %18, label %7, !dbg !7990

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7991
  call void @llvm.dbg.value(metadata i8* %9, metadata !7981, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i8* %10, metadata !7982, metadata !DIExpression()), !dbg !7986
  %12 = load i8, i8* %10, align 1, !dbg !7992
  %13 = icmp eq i8 %12, 0, !dbg !7993
  br i1 %13, label %18, label %14, !dbg !7994

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7995
  call void @llvm.dbg.value(metadata i8* %15, metadata !7982, metadata !DIExpression()), !dbg !7986
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7997
  call void @llvm.dbg.value(metadata i8* %16, metadata !7981, metadata !DIExpression()), !dbg !7986
  store i8 %12, i8* %9, align 1, !dbg !7998
  call void @llvm.dbg.value(metadata i32 %11, metadata !7983, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.value(metadata i32 %11, metadata !7983, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7986
  %17 = icmp eq i32 %11, 0, !dbg !7989
  br i1 %17, label %18, label %7, !dbg !7990, !llvm.loop !7999

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7986
  store i8 0, i8* %19, align 1, !dbg !8001
  ret i8* %0, !dbg !8002
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8003 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8007, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %1, metadata !8008, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 %2, metadata !8009, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %0, metadata !8010, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %1, metadata !8011, metadata !DIExpression()), !dbg !8012
  %4 = icmp eq i32 %2, 0, !dbg !8013
  br i1 %4, label %31, label %5, !dbg !8015

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8011, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %0, metadata !8010, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 %2, metadata !8009, metadata !DIExpression()), !dbg !8012
  %6 = add i32 %2, -1, !dbg !8016
  call void @llvm.dbg.value(metadata i32 %6, metadata !8009, metadata !DIExpression()), !dbg !8012
  %7 = icmp eq i32 %6, 0, !dbg !8017
  br i1 %7, label %23, label %8, !dbg !8018

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8019
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8019
  br label %11, !dbg !8019

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8011, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i8* %14, metadata !8010, metadata !DIExpression()), !dbg !8012
  %15 = load i8, i8* %14, align 1, !dbg !8020
  %16 = load i8, i8* %13, align 1, !dbg !8021
  %17 = icmp eq i8 %15, %16, !dbg !8022
  br i1 %17, label %18, label %23, !dbg !8019

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8023
  call void @llvm.dbg.value(metadata i8* %19, metadata !8010, metadata !DIExpression()), !dbg !8012
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8025
  call void @llvm.dbg.value(metadata i8* %20, metadata !8011, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.value(metadata i32 %12, metadata !8009, metadata !DIExpression()), !dbg !8012
  %21 = add i32 %12, -1, !dbg !8016
  call void @llvm.dbg.value(metadata i32 %21, metadata !8009, metadata !DIExpression()), !dbg !8012
  %22 = icmp eq i32 %21, 0, !dbg !8017
  br i1 %22, label %23, label %11, !dbg !8018, !llvm.loop !8026

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8012
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8012
  %26 = load i8, i8* %24, align 1, !dbg !8028
  %27 = zext i8 %26 to i32, !dbg !8028
  %28 = load i8, i8* %25, align 1, !dbg !8029
  %29 = zext i8 %28 to i32, !dbg !8029
  %30 = sub nsw i32 %27, %29, !dbg !8030
  br label %31, !dbg !8031

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8012
  ret i32 %32, !dbg !8032
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8033 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8037, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i8* %1, metadata !8038, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i32 %2, metadata !8039, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i8* %0, metadata !8040, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i8* %1, metadata !8041, metadata !DIExpression()), !dbg !8042
  %4 = ptrtoint i8* %0 to i32, !dbg !8043
  %5 = ptrtoint i8* %1 to i32, !dbg !8043
  %6 = sub i32 %4, %5, !dbg !8043
  %7 = icmp ult i32 %6, %2, !dbg !8045
  br i1 %7, label %10, label %8, !dbg !8046

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8041, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i8* %0, metadata !8040, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i32 %2, metadata !8039, metadata !DIExpression()), !dbg !8042
  %9 = icmp eq i32 %2, 0, !dbg !8047
  br i1 %9, label %26, label %17, !dbg !8049

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8039, metadata !DIExpression()), !dbg !8042
  %12 = add i32 %11, -1, !dbg !8050
  call void @llvm.dbg.value(metadata i32 %12, metadata !8039, metadata !DIExpression()), !dbg !8042
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8053
  %14 = load i8, i8* %13, align 1, !dbg !8053
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8054
  store i8 %14, i8* %15, align 1, !dbg !8055
  %16 = icmp eq i32 %12, 0, !dbg !8056
  br i1 %16, label %26, label %10, !dbg !8057, !llvm.loop !8058

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8041, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i8* %19, metadata !8040, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i32 %20, metadata !8039, metadata !DIExpression()), !dbg !8042
  %21 = load i8, i8* %18, align 1, !dbg !8060
  store i8 %21, i8* %19, align 1, !dbg !8062
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8063
  call void @llvm.dbg.value(metadata i8* %22, metadata !8040, metadata !DIExpression()), !dbg !8042
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8064
  call void @llvm.dbg.value(metadata i8* %23, metadata !8041, metadata !DIExpression()), !dbg !8042
  %24 = add i32 %20, -1, !dbg !8065
  call void @llvm.dbg.value(metadata i32 %24, metadata !8039, metadata !DIExpression()), !dbg !8042
  %25 = icmp eq i32 %24, 0, !dbg !8047
  br i1 %25, label %26, label %17, !dbg !8049, !llvm.loop !8066

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8068
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8069 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8075, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.value(metadata i8* %1, metadata !8076, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.value(metadata i32 %2, metadata !8077, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.value(metadata i8* %0, metadata !8078, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.value(metadata i8* %1, metadata !8079, metadata !DIExpression()), !dbg !8080
  %4 = icmp eq i32 %2, 0, !dbg !8081
  br i1 %4, label %14, label %5, !dbg !8082

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8079, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.value(metadata i8* %7, metadata !8078, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.value(metadata i32 %8, metadata !8077, metadata !DIExpression()), !dbg !8080
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8083
  call void @llvm.dbg.value(metadata i8* %9, metadata !8079, metadata !DIExpression()), !dbg !8080
  %10 = load i8, i8* %6, align 1, !dbg !8085
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8086
  call void @llvm.dbg.value(metadata i8* %11, metadata !8078, metadata !DIExpression()), !dbg !8080
  store i8 %10, i8* %7, align 1, !dbg !8087
  %12 = add i32 %8, -1, !dbg !8088
  call void @llvm.dbg.value(metadata i32 %12, metadata !8077, metadata !DIExpression()), !dbg !8080
  %13 = icmp eq i32 %12, 0, !dbg !8081
  br i1 %13, label %14, label %5, !dbg !8082, !llvm.loop !8089

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8091
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8092 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8096, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %1, metadata !8097, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %2, metadata !8098, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i8* %0, metadata !8099, metadata !DIExpression()), !dbg !8101
  %4 = trunc i32 %1 to i8, !dbg !8102
  call void @llvm.dbg.value(metadata i8 %4, metadata !8100, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i32 %2, metadata !8098, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i8* %0, metadata !8099, metadata !DIExpression()), !dbg !8101
  %5 = icmp eq i32 %2, 0, !dbg !8103
  br i1 %5, label %12, label %6, !dbg !8104

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8098, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata i8* %8, metadata !8099, metadata !DIExpression()), !dbg !8101
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8105
  call void @llvm.dbg.value(metadata i8* %9, metadata !8099, metadata !DIExpression()), !dbg !8101
  store i8 %4, i8* %8, align 1, !dbg !8107
  %10 = add i32 %7, -1, !dbg !8108
  call void @llvm.dbg.value(metadata i32 %10, metadata !8098, metadata !DIExpression()), !dbg !8101
  %11 = icmp eq i32 %10, 0, !dbg !8103
  br i1 %11, label %12, label %6, !dbg !8104, !llvm.loop !8109

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8111
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8112 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8116, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.value(metadata i32 %1, metadata !8117, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.value(metadata i32 %2, metadata !8118, metadata !DIExpression()), !dbg !8122
  %4 = icmp eq i32 %2, 0, !dbg !8123
  br i1 %4, label %17, label %5, !dbg !8124

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8125

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8126
  call void @llvm.dbg.value(metadata i8* %9, metadata !8119, metadata !DIExpression()), !dbg !8126
  call void @llvm.dbg.value(metadata i32 %8, metadata !8118, metadata !DIExpression()), !dbg !8122
  call void @llvm.dbg.value(metadata i8* %9, metadata !8119, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8126
  %10 = load i8, i8* %9, align 1, !dbg !8127
  %11 = icmp eq i8 %10, %6, !dbg !8130
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8131
  call void @llvm.dbg.value(metadata i8* %12, metadata !8119, metadata !DIExpression()), !dbg !8126
  call void @llvm.dbg.value(metadata i32 %13, metadata !8118, metadata !DIExpression()), !dbg !8122
  br i1 %15, label %16, label %7, !dbg !8131, !llvm.loop !8132

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8134

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8122
  ret i8* %19, !dbg !8135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !8136 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8138, metadata !DIExpression()), !dbg !8139
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8140
  ret void, !dbg !8141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #6 !dbg !8142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8144, metadata !DIExpression()), !dbg !8145
  ret i32 -1, !dbg !8146
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8151, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i32* %1, metadata !8152, metadata !DIExpression()), !dbg !8153
  %3 = ptrtoint i32* %1 to i32, !dbg !8154
  %4 = and i32 %3, -2, !dbg !8154
  %5 = icmp eq i32 %4, 2, !dbg !8154
  br i1 %5, label %6, label %9, !dbg !8154

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8155
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !8155
  br label %9, !dbg !8156

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8156
  ret i32 %10, !dbg !8157
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8160, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i32* %1, metadata !8161, metadata !DIExpression()), !dbg !8162
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8163
  ret i32 %3, !dbg !8164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8168, metadata !DIExpression()), !dbg !8170
  call void @llvm.dbg.value(metadata i32* %1, metadata !8169, metadata !DIExpression()), !dbg !8170
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8171, !srcloc !8173
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8174
  ret i32 %3, !dbg !8175
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8176 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8181, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.value(metadata i32* %1, metadata !8182, metadata !DIExpression()), !dbg !8185
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8186
  call void @llvm.dbg.value(metadata i32 %3, metadata !8183, metadata !DIExpression()), !dbg !8185
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !8187
  call void @llvm.dbg.value(metadata i32 %4, metadata !8184, metadata !DIExpression()), !dbg !8185
  %5 = icmp ne i32 %3, %4, !dbg !8188
  %6 = sext i1 %5 to i32, !dbg !8189
  ret i32 %6, !dbg !8190
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8191 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8195, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i32 %1, metadata !8196, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i32 %2, metadata !8197, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i32* %3, metadata !8198, metadata !DIExpression()), !dbg !8199
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8200
  ret i32 %5, !dbg !8201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8202 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8204, metadata !DIExpression()), !dbg !8208
  call void @llvm.dbg.value(metadata i32 %1, metadata !8205, metadata !DIExpression()), !dbg !8208
  call void @llvm.dbg.value(metadata i32 %2, metadata !8206, metadata !DIExpression()), !dbg !8208
  call void @llvm.dbg.value(metadata i32* %3, metadata !8207, metadata !DIExpression()), !dbg !8208
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8209, !srcloc !8211
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8212
  ret i32 %5, !dbg !8213
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8214 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8216, metadata !DIExpression()), !dbg !8224
  call void @llvm.dbg.value(metadata i32 %1, metadata !8217, metadata !DIExpression()), !dbg !8224
  call void @llvm.dbg.value(metadata i32 %2, metadata !8218, metadata !DIExpression()), !dbg !8224
  call void @llvm.dbg.value(metadata i32* %3, metadata !8219, metadata !DIExpression()), !dbg !8224
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8225
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8227
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8227
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8227
  br i1 %11, label %33, label %12, !dbg !8227

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8224
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8224
  call void @llvm.dbg.value(metadata i8* %14, metadata !8222, metadata !DIExpression()), !dbg !8224
  call void @llvm.dbg.value(metadata i32 %13, metadata !8220, metadata !DIExpression()), !dbg !8224
  call void @llvm.dbg.value(metadata i32 %1, metadata !8221, metadata !DIExpression()), !dbg !8224
  br label %15, !dbg !8228

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8230
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8224
  call void @llvm.dbg.value(metadata i8* %17, metadata !8222, metadata !DIExpression()), !dbg !8224
  call void @llvm.dbg.value(metadata i32 %16, metadata !8221, metadata !DIExpression()), !dbg !8224
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8231
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8234
  call void @llvm.dbg.value(metadata i8* %19, metadata !8222, metadata !DIExpression()), !dbg !8224
  %20 = load i8, i8* %17, align 1, !dbg !8235
  %21 = zext i8 %20 to i32, !dbg !8236
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !8231
  %23 = icmp eq i32 %22, -1, !dbg !8237
  br i1 %23, label %30, label %24, !dbg !8238

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8239
  call void @llvm.dbg.value(metadata i32 %25, metadata !8221, metadata !DIExpression()), !dbg !8224
  %26 = icmp eq i32 %25, 0, !dbg !8240
  br i1 %26, label %27, label %15, !dbg !8241, !llvm.loop !8242

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8244
  call void @llvm.dbg.value(metadata i32 %28, metadata !8220, metadata !DIExpression()), !dbg !8224
  %29 = icmp eq i32 %28, 0, !dbg !8245
  br i1 %29, label %30, label %12, !dbg !8246, !llvm.loop !8247

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8224
  call void @llvm.dbg.value(metadata i32 %31, metadata !8220, metadata !DIExpression()), !dbg !8224
  call void @llvm.dbg.label(metadata !8223), !dbg !8250
  %32 = sub i32 %2, %31, !dbg !8251
  br label %33, !dbg !8252

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8224
  ret i32 %34, !dbg !8253
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8254 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8258, metadata !DIExpression()), !dbg !8259
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8260
  %3 = icmp eq i32 %2, -1, !dbg !8262
  br i1 %3, label %8, label %4, !dbg !8263

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8264
  %6 = icmp eq i32 %5, -1, !dbg !8265
  %7 = sext i1 %6 to i32, !dbg !8264
  br label %8, !dbg !8266

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8259
  ret i32 %9, !dbg !8267
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintf(i8* noalias noundef %0, i32 noundef %1, i8* noalias noundef %2, ...) local_unnamed_addr #1 !dbg !8268 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca %struct.emitter, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8273, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i32 %1, metadata !8274, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.value(metadata i8* %2, metadata !8275, metadata !DIExpression()), !dbg !8290
  %7 = bitcast %struct.__va_list* %4 to i8*, !dbg !8291
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8291
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !8276, metadata !DIExpression()), !dbg !8292
  %8 = bitcast %struct.emitter* %5 to i8*, !dbg !8293
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8293
  call void @llvm.dbg.declare(metadata %struct.emitter* %5, metadata !8283, metadata !DIExpression()), !dbg !8294
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8295
  %9 = icmp eq i32 %1, 0, !dbg !8296
  %10 = select i1 %9, i8* %6, i8* %0, !dbg !8298
  call void @llvm.dbg.value(metadata i8* %10, metadata !8273, metadata !DIExpression()), !dbg !8290
  %11 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 0, !dbg !8299
  store i8* %10, i8** %11, align 4, !dbg !8300
  %12 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 1, !dbg !8301
  store i32 %1, i32* %12, align 4, !dbg !8302
  call void @llvm.va_start(i8* nonnull %7), !dbg !8303
  %13 = bitcast %struct.__va_list* %4 to i32*, !dbg !8304
  %14 = load i32, i32* %13, align 4, !dbg !8304
  %15 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !8304
  %16 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %8, i8* noundef %2, [1 x i32] %15) #25, !dbg !8304
  call void @llvm.dbg.value(metadata i32 %16, metadata !8288, metadata !DIExpression()), !dbg !8290
  call void @llvm.va_end(i8* nonnull %7), !dbg !8305
  %17 = load i8*, i8** %11, align 4, !dbg !8306
  store i8 0, i8* %17, align 1, !dbg !8307
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8308
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8308
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8308
  ret i32 %16, !dbg !8309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbvprintf.85(i8* noundef %0, i8* noundef %1, [1 x i32] %2) unnamed_addr #1 !dbg !8310 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !8317, metadata !DIExpression()), !dbg !8318
  call void @llvm.dbg.value(metadata i32 (...)* bitcast (i32 (i32, %struct.emitter*)* @sprintf_out to i32 (...)*), metadata !8314, metadata !DIExpression()), !dbg !8318
  call void @llvm.dbg.value(metadata i8* %0, metadata !8315, metadata !DIExpression()), !dbg !8318
  call void @llvm.dbg.value(metadata i8* %1, metadata !8316, metadata !DIExpression()), !dbg !8318
  %4 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef bitcast (i32 (i32, %struct.emitter*)* @sprintf_out to i32 (...)*), i8* noundef %0, i8* noundef %1, [1 x i32] %2, i32 noundef 0) #24, !dbg !8319
  ret i32 %4, !dbg !8320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @sprintf_out(i32 noundef %0, %struct.emitter* nocapture noundef %1) #11 !dbg !8321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8326, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata %struct.emitter* %1, metadata !8327, metadata !DIExpression()), !dbg !8328
  %3 = getelementptr inbounds %struct.emitter, %struct.emitter* %1, i32 0, i32 1, !dbg !8329
  %4 = load i32, i32* %3, align 4, !dbg !8329
  %5 = icmp sgt i32 %4, 1, !dbg !8331
  br i1 %5, label %6, label %14, !dbg !8332

6:                                                ; preds = %2
  %7 = trunc i32 %0 to i8, !dbg !8333
  %8 = getelementptr inbounds %struct.emitter, %struct.emitter* %1, i32 0, i32 0, !dbg !8335
  %9 = load i8*, i8** %8, align 4, !dbg !8335
  store i8 %7, i8* %9, align 1, !dbg !8336
  %10 = load i8*, i8** %8, align 4, !dbg !8337
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8337
  store i8* %11, i8** %8, align 4, !dbg !8337
  %12 = load i32, i32* %3, align 4, !dbg !8338
  %13 = add nsw i32 %12, -1, !dbg !8338
  store i32 %13, i32* %3, align 4, !dbg !8338
  br label %14, !dbg !8339

14:                                               ; preds = %6, %2
  ret i32 0, !dbg !8340
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sprintf(i8* noalias noundef %0, i8* noalias noundef %1, ...) local_unnamed_addr #1 !dbg !8341 {
  %3 = alloca %struct.__va_list, align 4
  %4 = alloca %struct.emitter, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8345, metadata !DIExpression()), !dbg !8350
  call void @llvm.dbg.value(metadata i8* %1, metadata !8346, metadata !DIExpression()), !dbg !8350
  %5 = bitcast %struct.__va_list* %3 to i8*, !dbg !8351
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8351
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !8347, metadata !DIExpression()), !dbg !8352
  %6 = bitcast %struct.emitter* %4 to i8*, !dbg !8353
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #23, !dbg !8353
  call void @llvm.dbg.declare(metadata %struct.emitter* %4, metadata !8348, metadata !DIExpression()), !dbg !8354
  %7 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 0, !dbg !8355
  store i8* %0, i8** %7, align 4, !dbg !8356
  %8 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 1, !dbg !8357
  store i32 2147483647, i32* %8, align 4, !dbg !8358
  call void @llvm.va_start(i8* nonnull %5), !dbg !8359
  %9 = bitcast %struct.__va_list* %3 to i32*, !dbg !8360
  %10 = load i32, i32* %9, align 4, !dbg !8360
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !8360
  %12 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %6, i8* noundef %1, [1 x i32] %11) #25, !dbg !8360
  call void @llvm.dbg.value(metadata i32 %12, metadata !8349, metadata !DIExpression()), !dbg !8350
  call void @llvm.va_end(i8* nonnull %5), !dbg !8361
  %13 = load i8*, i8** %7, align 4, !dbg !8362
  store i8 0, i8* %13, align 1, !dbg !8363
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #23, !dbg !8364
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8364
  ret i32 %12, !dbg !8365
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintf(i8* noalias noundef %0, i32 noundef %1, i8* noalias noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !8366 {
  %5 = alloca %struct.emitter, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !8373, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.value(metadata i8* %0, metadata !8370, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.value(metadata i32 %1, metadata !8371, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.value(metadata i8* %2, metadata !8372, metadata !DIExpression()), !dbg !8377
  %7 = bitcast %struct.emitter* %5 to i8*, !dbg !8378
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #23, !dbg !8378
  call void @llvm.dbg.declare(metadata %struct.emitter* %5, metadata !8374, metadata !DIExpression()), !dbg !8379
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8380
  %8 = icmp eq i32 %1, 0, !dbg !8381
  %9 = select i1 %8, i8* %6, i8* %0, !dbg !8383
  call void @llvm.dbg.value(metadata i8* %9, metadata !8370, metadata !DIExpression()), !dbg !8377
  %10 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 0, !dbg !8384
  store i8* %9, i8** %10, align 4, !dbg !8385
  %11 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 1, !dbg !8386
  store i32 %1, i32* %11, align 4, !dbg !8387
  %12 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %7, i8* noundef %2, [1 x i32] %3) #25, !dbg !8388
  call void @llvm.dbg.value(metadata i32 %12, metadata !8375, metadata !DIExpression()), !dbg !8377
  %13 = load i8*, i8** %10, align 4, !dbg !8389
  store i8 0, i8* %13, align 1, !dbg !8390
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8391
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #23, !dbg !8391
  ret i32 %12, !dbg !8392
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsprintf(i8* noalias noundef %0, i8* noalias noundef %1, [1 x i32] %2) local_unnamed_addr #1 !dbg !8393 {
  %4 = alloca %struct.emitter, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !8399, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.value(metadata i8* %0, metadata !8397, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.value(metadata i8* %1, metadata !8398, metadata !DIExpression()), !dbg !8402
  %5 = bitcast %struct.emitter* %4 to i8*, !dbg !8403
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #23, !dbg !8403
  call void @llvm.dbg.declare(metadata %struct.emitter* %4, metadata !8400, metadata !DIExpression()), !dbg !8404
  %6 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 0, !dbg !8405
  store i8* %0, i8** %6, align 4, !dbg !8406
  %7 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 1, !dbg !8407
  store i32 2147483647, i32* %7, align 4, !dbg !8408
  %8 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %5, i8* noundef %1, [1 x i32] %2) #25, !dbg !8409
  call void @llvm.dbg.value(metadata i32 %8, metadata !8401, metadata !DIExpression()), !dbg !8402
  %9 = load i8*, i8** %6, align 4, !dbg !8410
  store i8 0, i8* %9, align 1, !dbg !8411
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #23, !dbg !8412
  ret i32 %8, !dbg !8413
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8414 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8416, metadata !DIExpression()), !dbg !8417
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !8418
  ret void, !dbg !8419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8420 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8424, metadata !DIExpression()), !dbg !8430
  call void @llvm.dbg.value(metadata i32 %1, metadata !8425, metadata !DIExpression()), !dbg !8430
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8426, metadata !DIExpression()), !dbg !8430
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8431
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8431
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8431
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8427, metadata !DIExpression()), !dbg !8430
  call void @llvm.dbg.value(metadata i32 %0, metadata !8429, metadata !DIExpression()), !dbg !8430
  %7 = icmp slt i32 %0, %1, !dbg !8432
  br i1 %7, label %8, label %22, !dbg !8435

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8429, metadata !DIExpression()), !dbg !8430
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !8436
  %11 = icmp eq i32 %10, 0, !dbg !8436
  br i1 %11, label %19, label %12, !dbg !8439

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !8440
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8442
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8442
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8444
  br i1 %15, label %19, label %16, !dbg !8445

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8446
  %18 = load i8*, i8** %17, align 4, !dbg !8446
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !8447
  br label %19, !dbg !8448

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8449
  call void @llvm.dbg.value(metadata i32 %20, metadata !8429, metadata !DIExpression()), !dbg !8430
  %21 = icmp eq i32 %20, %1, !dbg !8432
  br i1 %21, label %22, label %8, !dbg !8435, !llvm.loop !8450

22:                                               ; preds = %19, %3
  ret void, !dbg !8452
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #5 !dbg !8453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8455, metadata !DIExpression()), !dbg !8456
  %2 = shl nuw i32 1, %0, !dbg !8457
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !8460
  ret i32 %3, !dbg !8461
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8466, metadata !DIExpression()), !dbg !8467
  %2 = shl nuw i32 1, %0, !dbg !8468
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !8471
  ret void, !dbg !8472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8476, metadata !DIExpression()), !dbg !8477
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8478
  ret void, !dbg !8479
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #5 !dbg !8480 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8482, metadata !DIExpression()), !dbg !8483
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8484
  %3 = and i32 %2, %0, !dbg !8484
  %4 = icmp eq i32 %3, %0, !dbg !8485
  %5 = zext i1 %4 to i32, !dbg !8485
  ret i32 %5, !dbg !8486
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8489, metadata !DIExpression()), !dbg !8490
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !8491
  ret void, !dbg !8492
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8493 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8495, metadata !DIExpression()), !dbg !8496
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !8497
  ret void, !dbg !8498
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8499 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8501, metadata !DIExpression()), !dbg !8502
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !8503
  ret void, !dbg !8504
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8505 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8507, metadata !DIExpression()), !dbg !8508
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #25, !dbg !8509
  ret void, !dbg !8510
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8511 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8513, metadata !DIExpression()), !dbg !8514
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #25, !dbg !8515
  ret void, !dbg !8516
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8517 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8519, metadata !DIExpression()), !dbg !8520
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !8521
  ret void, !dbg !8522
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8523 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8525, metadata !DIExpression()), !dbg !8526
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #25, !dbg !8527
  ret void, !dbg !8528
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8529 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8531, metadata !DIExpression()), !dbg !8532
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #25, !dbg !8533
  ret void, !dbg !8534
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8535 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8537, metadata !DIExpression()), !dbg !8538
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !8539
  ret void, !dbg !8540
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8541 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8543, metadata !DIExpression()), !dbg !8544
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !8545
  ret void, !dbg !8546
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8547 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8549, metadata !DIExpression()), !dbg !8550
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !8551
  ret i32 0, !dbg !8552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !764 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !768, metadata !DIExpression()), !dbg !8553
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !8554
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !8556
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !8558
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !8560
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !8562
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !8564
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !8566
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #24, !dbg !8568
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #24, !dbg !8570
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #24, !dbg !8572
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #24, !dbg !8574
  ret void, !dbg !8576
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8579, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.value(metadata i32 0, metadata !8580, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.value(metadata i32 undef, metadata !8580, metadata !DIExpression()), !dbg !8581
  %2 = lshr i32 6684671, %0, !dbg !8582
  %3 = and i32 %2, 1, !dbg !8582
  %4 = or i32 %3, %0, !dbg !8584
  %5 = icmp eq i32 %4, 0, !dbg !8584
  br i1 %5, label %6, label %7, !dbg !8584

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.95, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #24, !dbg !8585
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #24, !dbg !8585
  unreachable, !dbg !8585

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8590
  %9 = load i32, i32* %8, align 4, !dbg !8590
  call void @llvm.dbg.value(metadata i32 %9, metadata !8580, metadata !DIExpression()), !dbg !8581
  %10 = shl nuw i32 1, %0, !dbg !8591
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #25, !dbg !8592
  tail call void @arch_irq_enable(i32 noundef %9) #24, !dbg !8593
  ret void, !dbg !8594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8597, metadata !DIExpression()), !dbg !8598
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8599
  %3 = or i32 %2, %0, !dbg !8599
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8599
  ret void, !dbg !8600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8601 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8603, metadata !DIExpression()), !dbg !8604
  %2 = icmp slt i32 %0, 32, !dbg !8605
  br i1 %2, label %3, label %5, !dbg !8607

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8608
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !8610
  br label %5, !dbg !8611

5:                                                ; preds = %1, %3
  ret void, !dbg !8612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8615, metadata !DIExpression()), !dbg !8616
  %2 = xor i32 %0, -1, !dbg !8617
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8617
  %4 = and i32 %3, %2, !dbg !8617
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8617
  ret void, !dbg !8618
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8623, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata i32 %1, metadata !8624, metadata !DIExpression()), !dbg !8625
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8626

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8627
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !8629
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !8630
  br label %11, !dbg !8631

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8632
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !8633
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !8634
  br label %11, !dbg !8635

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8636
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !8637
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !8638
  br label %11, !dbg !8639

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8640
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !8641
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !8642
  br label %11, !dbg !8643

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8644
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8647, metadata !DIExpression()), !dbg !8648
  %2 = xor i32 %0, -1, !dbg !8649
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8649
  %4 = and i32 %3, %2, !dbg !8649
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8649
  ret void, !dbg !8650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8651 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8653, metadata !DIExpression()), !dbg !8654
  %2 = xor i32 %0, -1, !dbg !8655
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8655
  %4 = and i32 %3, %2, !dbg !8655
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8655
  ret void, !dbg !8656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8657 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8659, metadata !DIExpression()), !dbg !8660
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8661
  %3 = or i32 %2, %0, !dbg !8661
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8661
  ret void, !dbg !8662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8665, metadata !DIExpression()), !dbg !8666
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8667
  %3 = or i32 %2, %0, !dbg !8667
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8667
  ret void, !dbg !8668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !8669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8673, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8674, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i8* %2, metadata !8675, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8676, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8678, metadata !DIExpression()), !dbg !8679
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8680
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8680
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8682
  br i1 %6, label %7, label %9, !dbg !8683

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8684
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8685
  store i8* %2, i8** %8, align 4, !dbg !8686
  br label %9, !dbg !8687

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8679
  ret i32 %10, !dbg !8688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !8689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8691, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8692, metadata !DIExpression()), !dbg !8694
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8693, metadata !DIExpression()), !dbg !8694
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8695
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8696
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8697
  store i8* null, i8** %3, align 4, !dbg !8698
  ret void, !dbg !8699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8700 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8702, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i8* %1, metadata !8703, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.value(metadata i8* %1, metadata !8704, metadata !DIExpression()), !dbg !8707
  %3 = bitcast i8* %1 to i32*, !dbg !8708
  %4 = load i32, i32* %3, align 4, !dbg !8708
  %5 = add i32 %4, -169, !dbg !8708
  %6 = icmp ult i32 %5, -121, !dbg !8708
  br i1 %6, label %15, label %7, !dbg !8710

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8711
  %9 = inttoptr i32 %8 to i32*, !dbg !8712
  call void @llvm.dbg.value(metadata i32* %9, metadata !8705, metadata !DIExpression()), !dbg !8707
  %10 = load volatile i32, i32* %9, align 4, !dbg !8713
  call void @llvm.dbg.value(metadata i32 %10, metadata !8706, metadata !DIExpression()), !dbg !8707
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8714
  %12 = bitcast i8* %11 to i32*, !dbg !8714
  %13 = load i32, i32* %12, align 4, !dbg !8714
  %14 = or i32 %13, %10, !dbg !8715
  call void @llvm.dbg.value(metadata i32 %14, metadata !8706, metadata !DIExpression()), !dbg !8707
  store volatile i32 %14, i32* %9, align 4, !dbg !8716
  br label %15, !dbg !8717

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8707
  ret i32 %16, !dbg !8718
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8719 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8721, metadata !DIExpression()), !dbg !8726
  call void @llvm.dbg.value(metadata i8* %1, metadata !8722, metadata !DIExpression()), !dbg !8726
  call void @llvm.dbg.value(metadata i8* %1, metadata !8723, metadata !DIExpression()), !dbg !8726
  %3 = bitcast i8* %1 to i32*, !dbg !8727
  %4 = load i32, i32* %3, align 4, !dbg !8727
  %5 = add i32 %4, -169, !dbg !8727
  %6 = icmp ult i32 %5, -121, !dbg !8727
  br i1 %6, label %16, label %7, !dbg !8729

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8730
  %9 = inttoptr i32 %8 to i32*, !dbg !8731
  call void @llvm.dbg.value(metadata i32* %9, metadata !8724, metadata !DIExpression()), !dbg !8726
  %10 = load volatile i32, i32* %9, align 4, !dbg !8732
  call void @llvm.dbg.value(metadata i32 %10, metadata !8725, metadata !DIExpression()), !dbg !8726
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8733
  %12 = bitcast i8* %11 to i32*, !dbg !8733
  %13 = load i32, i32* %12, align 4, !dbg !8733
  %14 = xor i32 %13, -1, !dbg !8734
  %15 = and i32 %10, %14, !dbg !8735
  call void @llvm.dbg.value(metadata i32 %15, metadata !8725, metadata !DIExpression()), !dbg !8726
  store volatile i32 %15, i32* %9, align 4, !dbg !8736
  br label %16, !dbg !8737

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8726
  ret i32 %17, !dbg !8738
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8739 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8741, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i8* %1, metadata !8742, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i32* %2, metadata !8743, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i8* %1, metadata !8744, metadata !DIExpression()), !dbg !8749
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8750
  call void @llvm.dbg.value(metadata i32 %4, metadata !8745, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i32 undef, metadata !8746, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i32 undef, metadata !8747, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.value(metadata i32 %4, metadata !8748, metadata !DIExpression()), !dbg !8749
  %5 = bitcast i8* %1 to i32*, !dbg !8751
  %6 = load i32, i32* %5, align 4, !dbg !8751
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8752

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #25, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %8, metadata !8746, metadata !DIExpression()), !dbg !8749
  br label %19, !dbg !8754

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #25, !dbg !8756
  call void @llvm.dbg.value(metadata i32 %10, metadata !8747, metadata !DIExpression()), !dbg !8749
  br label %19, !dbg !8757

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #24, !dbg !8758
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #25, !dbg !8759
  br label %19, !dbg !8760

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #24, !dbg !8761
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #25, !dbg !8762
  br label %19, !dbg !8763

17:                                               ; preds = %3
  br label %19, !dbg !8764

18:                                               ; preds = %3
  br label %19, !dbg !8765

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8766
  br label %21, !dbg !8767

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8749
  ret i32 %22, !dbg !8767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8770, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i8* %1, metadata !8771, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i8* %2, metadata !8772, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.value(metadata i8* %1, metadata !8773, metadata !DIExpression()), !dbg !8778
  %4 = bitcast i8* %1 to i32*, !dbg !8779
  %5 = load i32, i32* %4, align 4, !dbg !8779
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !8780
  call void @llvm.dbg.value(metadata i32 %6, metadata !8777, metadata !DIExpression()), !dbg !8778
  %7 = icmp slt i32 %6, 0, !dbg !8781
  br i1 %7, label %22, label %8, !dbg !8783

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8773, metadata !DIExpression()), !dbg !8778
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8784
  %10 = bitcast i8* %9 to i32*, !dbg !8784
  %11 = load i32, i32* %10, align 4, !dbg !8784
  %12 = lshr i32 %11, 16, !dbg !8784
  %13 = and i32 %12, 7, !dbg !8784
  %14 = lshr i32 %11, 8, !dbg !8785
  %15 = and i32 %14, 31, !dbg !8785
  %16 = shl i32 %13, %15, !dbg !8786
  call void @llvm.dbg.value(metadata i32 %16, metadata !8776, metadata !DIExpression()), !dbg !8778
  %17 = and i32 %11, 255, !dbg !8787
  %18 = or i32 %17, 1073887232, !dbg !8788
  %19 = inttoptr i32 %18 to i32*, !dbg !8789
  call void @llvm.dbg.value(metadata i32* %19, metadata !8774, metadata !DIExpression()), !dbg !8778
  %20 = load volatile i32, i32* %19, align 4, !dbg !8790
  call void @llvm.dbg.value(metadata i32 %20, metadata !8775, metadata !DIExpression()), !dbg !8778
  %21 = or i32 %16, %20, !dbg !8791
  call void @llvm.dbg.value(metadata i32 %21, metadata !8775, metadata !DIExpression()), !dbg !8778
  store volatile i32 %21, i32* %19, align 4, !dbg !8792
  br label %22, !dbg !8793

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8778
  ret i32 %23, !dbg !8794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #6 !dbg !8795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8799, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.value(metadata i32 0, metadata !8800, metadata !DIExpression()), !dbg !8801
  %2 = add i32 %0, -1, !dbg !8802
  %3 = icmp ult i32 %2, 6, !dbg !8802
  br i1 %3, label %4, label %7, !dbg !8802

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8802
  %6 = load i32, i32* %5, align 4, !dbg !8802
  call void @llvm.dbg.value(metadata i32 %6, metadata !8800, metadata !DIExpression()), !dbg !8801
  br label %7, !dbg !8803

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8801
  ret i32 %8, !dbg !8804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !8805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8809, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.value(metadata i32 %1, metadata !8810, metadata !DIExpression()), !dbg !8811
  %3 = udiv i32 %0, %1, !dbg !8812
  ret i32 %3, !dbg !8813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !8814 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8818, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i32 8, metadata !8819, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i32 84, metadata !8820, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i32 %1, metadata !8821, metadata !DIExpression()), !dbg !8822
  %3 = mul i32 %0, 84, !dbg !8823
  %4 = shl nsw i32 %1, 3, !dbg !8824
  %5 = udiv i32 %3, %4, !dbg !8825
  ret i32 %5, !dbg !8826
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8827 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8829, metadata !DIExpression()), !dbg !8832
  tail call void @config_enable_default_clocks() #24, !dbg !8833
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !8834
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !8834
  %4 = lshr i32 %3, 4, !dbg !8834
  %5 = and i32 %4, 15, !dbg !8834
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8834
  %7 = load i8, i8* %6, align 1, !dbg !8834
  %8 = zext i8 %7 to i32, !dbg !8834
  %9 = lshr i32 %2, %8, !dbg !8834
  call void @llvm.dbg.value(metadata i32 %9, metadata !8830, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8831, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8832
  %10 = icmp ult i32 %9, 84000000, !dbg !8835
  br i1 %10, label %11, label %13, !dbg !8837

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !8838
  br label %13, !dbg !8840

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !8841
  tail call fastcc void @set_up_plls() #25, !dbg !8842
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !8843
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #25, !dbg !8846
  br label %14, !dbg !8847

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8848
  %16 = icmp eq i32 %15, 8, !dbg !8849
  br i1 %16, label %17, label %14, !dbg !8847, !llvm.loop !8850

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8852
  br i1 %18, label %19, label %21, !dbg !8854

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !8855
  br label %21, !dbg !8857

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8858
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !8859
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !8860
  ret i32 0, !dbg !8861
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #5 !dbg !8862 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8864
  %2 = and i32 %1, 240, !dbg !8864
  ret i32 %2, !dbg !8865
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8866 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !8867
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !8872
  br label %1, !dbg !8873

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !8874
  %3 = icmp eq i32 %2, 1, !dbg !8875
  br i1 %3, label %4, label %1, !dbg !8873, !llvm.loop !8876

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #25, !dbg !8878
  br label %5, !dbg !8881

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #25, !dbg !8882
  %7 = icmp eq i32 %6, 1, !dbg !8883
  br i1 %7, label %8, label %5, !dbg !8881, !llvm.loop !8884

8:                                                ; preds = %5
  ret void, !dbg !8886
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8887 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8888
  %2 = icmp eq i32 %1, 8, !dbg !8890
  br i1 %2, label %3, label %4, !dbg !8891

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !8892
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !8894
  br label %4, !dbg !8895

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !8896
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8897
  %6 = and i32 %5, -196609, !dbg !8897
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8897
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8898
  %8 = and i32 %7, -251658241, !dbg !8898
  %9 = or i32 %8, 134217728, !dbg !8898
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8898
  tail call void @config_pll_sysclock() #24, !dbg !8899
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !8900
  br label %10, !dbg !8901

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !8902
  %12 = icmp eq i32 %11, 1, !dbg !8903
  br i1 %12, label %13, label %10, !dbg !8901, !llvm.loop !8904

13:                                               ; preds = %10
  ret void, !dbg !8906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8907 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8909, metadata !DIExpression()), !dbg !8910
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8911
  %2 = and i32 %1, -241, !dbg !8911
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8911
  ret void, !dbg !8912
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8915, metadata !DIExpression()), !dbg !8916
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8917
  %3 = and i32 %2, -4, !dbg !8917
  %4 = or i32 %3, %0, !dbg !8917
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8917
  ret void, !dbg !8918
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #5 !dbg !8919 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8920
  %2 = and i32 %1, 12, !dbg !8920
  ret i32 %2, !dbg !8921
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8922 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8924, metadata !DIExpression()), !dbg !8925
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8926
  %2 = and i32 %1, -7169, !dbg !8926
  %3 = or i32 %2, 4096, !dbg !8926
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8926
  ret void, !dbg !8927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8928 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8930, metadata !DIExpression()), !dbg !8931
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8932
  %2 = and i32 %1, -57345, !dbg !8932
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8932
  ret void, !dbg !8933
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8934 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !8935
  %2 = icmp eq i32 %1, 1, !dbg !8937
  br i1 %2, label %7, label %3, !dbg !8938

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !8939
  br label %4, !dbg !8941

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !8942
  %6 = icmp eq i32 %5, 1, !dbg !8943
  br i1 %6, label %7, label %4, !dbg !8941, !llvm.loop !8944

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #25, !dbg !8946
  br label %8, !dbg !8947

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8948
  %10 = icmp eq i32 %9, 0, !dbg !8949
  br i1 %10, label %11, label %8, !dbg !8947, !llvm.loop !8950

11:                                               ; preds = %8
  ret void, !dbg !8952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8953 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8954
  %2 = and i32 %1, -16777217, !dbg !8954
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8954
  ret void, !dbg !8955
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8956 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8957
  %2 = or i32 %1, 16777216, !dbg !8957
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8957
  ret void, !dbg !8958
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #5 !dbg !8959 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8960
  %2 = lshr i32 %1, 25, !dbg !8961
  %3 = and i32 %2, 1, !dbg !8961
  ret i32 %3, !dbg !8962
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #5 !dbg !8963 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8964
  %2 = lshr i32 %1, 1, !dbg !8965
  %3 = and i32 %2, 1, !dbg !8965
  ret i32 %3, !dbg !8966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8967 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8968
  %2 = or i32 %1, 1, !dbg !8968
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8968
  ret void, !dbg !8969
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8970 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8971
  %2 = and i32 %1, -262145, !dbg !8971
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8971
  ret void, !dbg !8972
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8973 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8974
  %2 = or i32 %1, 65536, !dbg !8974
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8974
  ret void, !dbg !8975
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #5 !dbg !8976 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8977
  %2 = lshr i32 %1, 17, !dbg !8978
  %3 = and i32 %2, 1, !dbg !8978
  ret i32 %3, !dbg !8979
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8980 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8981
  %2 = or i32 %1, 1, !dbg !8981
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8981
  ret void, !dbg !8982
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #5 !dbg !8983 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8984
  %2 = lshr i32 %1, 1, !dbg !8985
  %3 = and i32 %2, 1, !dbg !8985
  ret i32 %3, !dbg !8986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #6 !dbg !8987 {
  ret i32 16000000, !dbg !8989
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8993 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !8994
  ret void, !dbg !8995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8996 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9000, metadata !DIExpression()), !dbg !9004
  call void @llvm.dbg.value(metadata i32 8, metadata !9001, metadata !DIExpression()), !dbg !9004
  call void @llvm.dbg.value(metadata i32 84, metadata !9002, metadata !DIExpression()), !dbg !9004
  call void @llvm.dbg.value(metadata i32 0, metadata !9003, metadata !DIExpression()), !dbg !9004
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9005
  %2 = and i32 %1, -4227072, !dbg !9005
  %3 = or i32 %2, 4199688, !dbg !9005
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9005
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9006
  %5 = and i32 %4, -196609, !dbg !9006
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9006
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9007
  %7 = and i32 %6, -1879048193, !dbg !9007
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9007
  ret void, !dbg !9008
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !9009 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !9010
  ret void, !dbg !9011
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !9012 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9015, metadata !DIExpression()), !dbg !9017
  %2 = bitcast i32* %1 to i8*, !dbg !9018
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9018
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9016, metadata !DIExpression()), !dbg !9019
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9020
  %4 = or i32 %3, 268435456, !dbg !9020
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9020
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9021
  %6 = and i32 %5, 268435456, !dbg !9021
  store volatile i32 %6, i32* %1, align 4, !dbg !9022
  %7 = load volatile i32, i32* %1, align 4, !dbg !9023
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9024
  ret void, !dbg !9024
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9025 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9027, metadata !DIExpression()), !dbg !9028
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !9029
  br i1 %2, label %3, label %4, !dbg !9031

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !9032
  br label %4, !dbg !9033

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9028
  ret i32 %5, !dbg !9034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9035 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9040, metadata !DIExpression()), !dbg !9041
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9042, !srcloc !9044
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !9045
  ret i1 %1, !dbg !9046
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9047 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9048
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9049
  ret void, !dbg !9050
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9053, metadata !DIExpression()), !dbg !9054
  %2 = icmp eq i32 %0, 10, !dbg !9055
  br i1 %2, label %3, label %4, !dbg !9057

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !9058
  br label %4, !dbg !9060

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9061
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !9062
  ret i32 %0, !dbg !9063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9064 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9067, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata i8 %0, metadata !9068, metadata !DIExpression()), !dbg !9069
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9070, !srcloc !9072
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !9073
  ret void, !dbg !9074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9075 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9077, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i8 %0, metadata !9078, metadata !DIExpression()), !dbg !9080
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9081
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9079, metadata !DIExpression()), !dbg !9080
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9082
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9082
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #24, !dbg !9083
  ret void, !dbg !9084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9085 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9087, metadata !DIExpression()), !dbg !9088
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #24, !dbg !9089
  ret i1 %1, !dbg !9090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #6 !dbg !9091 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9140, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9141, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9142, metadata !DIExpression()), !dbg !9143
  ret void, !dbg !9144
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9145 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9147, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.value(metadata i8 %1, metadata !9148, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.value(metadata i32 %2, metadata !9149, metadata !DIExpression()), !dbg !9152
  %5 = bitcast i32* %4 to i8*, !dbg !9153
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9153
  call void @llvm.dbg.value(metadata i32* %4, metadata !9151, metadata !DIExpression(DW_OP_deref)), !dbg !9152
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !9154
  call void @llvm.dbg.value(metadata i32 %6, metadata !9150, metadata !DIExpression()), !dbg !9152
  %7 = icmp eq i32 %6, 0, !dbg !9155
  br i1 %7, label %8, label %31, !dbg !9157

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9150, metadata !DIExpression()), !dbg !9152
  %9 = and i32 %2, 131072, !dbg !9158
  %10 = icmp eq i32 %9, 0, !dbg !9160
  br i1 %10, label %28, label %11, !dbg !9161

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9162
  %13 = icmp eq i32 %12, 0, !dbg !9165
  br i1 %13, label %18, label %14, !dbg !9166

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9167
  %16 = shl nuw i32 1, %15, !dbg !9167
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !9169
  br label %25, !dbg !9170

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9171
  %20 = icmp eq i32 %19, 0, !dbg !9173
  %21 = zext i8 %1 to i32, !dbg !9152
  br i1 %20, label %25, label %22, !dbg !9174

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9175
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !9177
  br label %25, !dbg !9178

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9179
  %27 = load i32, i32* %4, align 4, !dbg !9180
  call void @llvm.dbg.value(metadata i32 %30, metadata !9151, metadata !DIExpression()), !dbg !9152
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !9181
  br label %31, !dbg !9182

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9179
  %30 = load i32, i32* %4, align 4, !dbg !9180
  call void @llvm.dbg.value(metadata i32 %30, metadata !9151, metadata !DIExpression()), !dbg !9152
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !9181
  call void @llvm.dbg.value(metadata i32 0, metadata !9150, metadata !DIExpression()), !dbg !9152
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9183
  ret i32 %6, !dbg !9183
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #5 !dbg !9184 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9188, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.value(metadata i32* %1, metadata !9189, metadata !DIExpression()), !dbg !9193
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9194
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9194
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9194
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9190, metadata !DIExpression()), !dbg !9193
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9195
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9195
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9195
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9192, metadata !DIExpression()), !dbg !9193
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !9196
  store i32 %9, i32* %1, align 4, !dbg !9197
  ret i32 0, !dbg !9198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9199 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9201, metadata !DIExpression()), !dbg !9207
  call void @llvm.dbg.value(metadata i32 %1, metadata !9202, metadata !DIExpression()), !dbg !9207
  call void @llvm.dbg.value(metadata i32 %2, metadata !9203, metadata !DIExpression()), !dbg !9207
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9208
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9208
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9208
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9204, metadata !DIExpression()), !dbg !9207
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9209
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9209
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9209
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9205, metadata !DIExpression()), !dbg !9207
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !9210
  call void @llvm.dbg.value(metadata i32 %10, metadata !9206, metadata !DIExpression()), !dbg !9207
  %11 = xor i32 %1, -1, !dbg !9211
  %12 = and i32 %10, %11, !dbg !9212
  %13 = and i32 %2, %1, !dbg !9213
  %14 = or i32 %12, %13, !dbg !9214
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !9215
  ret i32 0, !dbg !9216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9217 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9219, metadata !DIExpression()), !dbg !9223
  call void @llvm.dbg.value(metadata i32 %1, metadata !9220, metadata !DIExpression()), !dbg !9223
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9224
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9224
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9224
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9221, metadata !DIExpression()), !dbg !9223
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9225
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9225
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9225
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9222, metadata !DIExpression()), !dbg !9223
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9226
  store volatile i32 %1, i32* %9, align 4, !dbg !9226
  ret i32 0, !dbg !9227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9228 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9230, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.value(metadata i32 %1, metadata !9231, metadata !DIExpression()), !dbg !9234
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9235
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9235
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9235
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9232, metadata !DIExpression()), !dbg !9234
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9236
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9236
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9236
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9233, metadata !DIExpression()), !dbg !9234
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !9237
  ret i32 0, !dbg !9238
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9239 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9241, metadata !DIExpression()), !dbg !9245
  call void @llvm.dbg.value(metadata i32 %1, metadata !9242, metadata !DIExpression()), !dbg !9245
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9246
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9246
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9246
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9243, metadata !DIExpression()), !dbg !9245
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9247
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9247
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9247
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9244, metadata !DIExpression()), !dbg !9245
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9248
  %10 = load volatile i32, i32* %9, align 4, !dbg !9248
  %11 = xor i32 %10, %1, !dbg !9248
  store volatile i32 %11, i32* %9, align 4, !dbg !9248
  ret i32 0, !dbg !9249
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9250 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9252, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i8 %1, metadata !9253, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i32 %2, metadata !9254, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i32 %3, metadata !9255, metadata !DIExpression()), !dbg !9262
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9263
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9263
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9263
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9256, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i8* undef, metadata !9257, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i32 0, metadata !9259, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i32 0, metadata !9260, metadata !DIExpression()), !dbg !9262
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9264

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9265
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !9269
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9270
  %12 = load i32, i32* %11, align 4, !dbg !9270
  %13 = icmp eq i32 %10, %12, !dbg !9271
  br i1 %13, label %14, label %29, !dbg !9272

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !9273
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !9275
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !9276
  br label %29, !dbg !9277

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9278
  %17 = load i8*, i8** %16, align 4, !dbg !9278
  call void @llvm.dbg.value(metadata i8* %17, metadata !9257, metadata !DIExpression()), !dbg !9262
  %18 = zext i8 %1 to i32, !dbg !9279
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !9281
  %20 = icmp eq i32 %19, 0, !dbg !9282
  br i1 %20, label %21, label %29, !dbg !9283

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9284
  %23 = load i32, i32* %22, align 4, !dbg !9284
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !9285
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9286

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9259, metadata !DIExpression()), !dbg !9262
  br label %27, !dbg !9287

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9259, metadata !DIExpression()), !dbg !9262
  br label %27, !dbg !9289

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9259, metadata !DIExpression()), !dbg !9262
  br label %27, !dbg !9290

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9262
  call void @llvm.dbg.value(metadata i32 %28, metadata !9259, metadata !DIExpression()), !dbg !9262
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !9291
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !9292
  br label %29, !dbg !9292

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9262
  call void @llvm.dbg.value(metadata i32 %30, metadata !9260, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.label(metadata !9261), !dbg !9293
  ret i32 %30, !dbg !9294
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9295 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9297, metadata !DIExpression()), !dbg !9301
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9298, metadata !DIExpression()), !dbg !9301
  call void @llvm.dbg.value(metadata i1 %2, metadata !9299, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9301
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9302
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9302
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9302
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9300, metadata !DIExpression()), !dbg !9301
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9303
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !9304
  ret i32 %8, !dbg !9305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9306 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9312, metadata !DIExpression()), !dbg !9315
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9313, metadata !DIExpression()), !dbg !9315
  call void @llvm.dbg.value(metadata i1 %2, metadata !9314, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9315
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9316
  br i1 %4, label %5, label %6, !dbg !9319

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #24, !dbg !9320
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.110, i32 0, i32 0)) #24, !dbg !9320
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #24, !dbg !9320
  unreachable, !dbg !9320

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9322
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9322
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9322
  br i1 %9, label %10, label %11, !dbg !9325

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #24, !dbg !9326
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #24, !dbg !9326
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #24, !dbg !9326
  unreachable, !dbg !9326

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !9328
  br i1 %12, label %18, label %13, !dbg !9330

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9331
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #25, !dbg !9334
  %16 = or i1 %15, %2, !dbg !9335
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9335
  br i1 %2, label %19, label %21, !dbg !9335

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9336

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9337
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #25, !dbg !9340
  br label %21, !dbg !9341

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9315
  ret i32 %22, !dbg !9342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9343 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9347, metadata !DIExpression()), !dbg !9348
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9349
  %3 = icmp eq %struct._snode* %2, null, !dbg !9349
  ret i1 %3, !dbg !9349
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9350 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9354, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9355, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9356, metadata !DIExpression()), !dbg !9358
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9359
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9357, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9356, metadata !DIExpression()), !dbg !9358
  %4 = icmp eq %struct._snode* %3, null, !dbg !9361
  br i1 %4, label %15, label %5, !dbg !9359

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9357, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9356, metadata !DIExpression()), !dbg !9358
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9363
  br i1 %6, label %9, label %11, !dbg !9366

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9357, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9356, metadata !DIExpression()), !dbg !9358
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9363
  br i1 %8, label %9, label %11, !dbg !9366, !llvm.loop !9367

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !9368
  br label %15, !dbg !9368

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9357, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9356, metadata !DIExpression()), !dbg !9358
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !9361
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9357, metadata !DIExpression()), !dbg !9358
  %14 = icmp eq %struct._snode* %13, null, !dbg !9361
  br i1 %14, label %15, label %7, !dbg !9359, !llvm.loop !9367

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !9371 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9375, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9376, metadata !DIExpression()), !dbg !9377
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9378
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !9378
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !9378
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9379
  %5 = icmp eq %struct._snode* %4, null, !dbg !9379
  br i1 %5, label %6, label %8, !dbg !9378

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9381
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !9381
  br label %8, !dbg !9381

8:                                                ; preds = %6, %2
  ret void, !dbg !9378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9383 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9387, metadata !DIExpression()), !dbg !9388
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9389
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9389
  ret %struct._snode* %3, !dbg !9390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9391 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9395, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9396, metadata !DIExpression()), !dbg !9397
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9398
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9399
  ret void, !dbg !9400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9401 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9403, metadata !DIExpression()), !dbg !9405
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9404, metadata !DIExpression()), !dbg !9405
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9406
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9407
  ret void, !dbg !9408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9409 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9411, metadata !DIExpression()), !dbg !9412
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9413
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9413
  ret %struct._snode* %3, !dbg !9414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9415 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9417, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9418, metadata !DIExpression()), !dbg !9419
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9420
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9421
  ret void, !dbg !9422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !9423 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9427, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9428, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9429, metadata !DIExpression()), !dbg !9430
  %4 = icmp eq %struct._snode* %1, null, !dbg !9431
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !9433
  br i1 %4, label %6, label %11, !dbg !9434

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !9435
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9437
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9437
  br i1 %8, label %9, label %15, !dbg !9435

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9439
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !9439
  br label %15, !dbg !9439

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !9441
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9443
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9443
  br i1 %13, label %14, label %15, !dbg !9441

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !9445
  br label %15, !dbg !9445

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !9434
  ret void, !dbg !9434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !9447 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9451, metadata !DIExpression()), !dbg !9452
  %2 = icmp eq %struct._snode* %0, null, !dbg !9453
  br i1 %2, label %5, label %3, !dbg !9453

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !9453
  br label %5, !dbg !9453

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9453
  ret %struct._snode* %6, !dbg !9453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9454 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9456, metadata !DIExpression()), !dbg !9457
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !9458
  ret %struct._snode* %2, !dbg !9458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9459 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9461, metadata !DIExpression()), !dbg !9462
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9463
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9463
  ret %struct._snode* %3, !dbg !9464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9467, metadata !DIExpression()), !dbg !9470
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !9471, !range !9472
  call void @llvm.dbg.value(metadata i32 %2, metadata !9468, metadata !DIExpression()), !dbg !9470
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !9473
  call void @llvm.dbg.value(metadata i32 %3, metadata !9469, metadata !DIExpression()), !dbg !9470
  ret i32 %3, !dbg !9474
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9477, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.value(metadata i8* %1, metadata !9478, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.value(metadata i8* %1, metadata !9479, metadata !DIExpression()), !dbg !9480
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9481
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9481
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9482
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9482
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9482
  %8 = shl nuw i32 1, %0, !dbg !9483
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !9484
  ret void, !dbg !9485
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9486 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9490, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.value(metadata i32 %1, metadata !9491, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9492, metadata !DIExpression()), !dbg !9496
  %4 = bitcast i64* %3 to i8*, !dbg !9497
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9497
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9494, metadata !DIExpression()), !dbg !9496
  store i64 70368744177732, i64* %3, align 8, !dbg !9498
  call void @llvm.dbg.value(metadata i64* %3, metadata !9494, metadata !DIExpression(DW_OP_deref)), !dbg !9496
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #25, !dbg !9499
  call void @llvm.dbg.value(metadata i32 %5, metadata !9495, metadata !DIExpression()), !dbg !9496
  %6 = icmp eq i32 %5, 0, !dbg !9500
  br i1 %6, label %7, label %8, !dbg !9502

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !9503
  br label %8, !dbg !9504

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9505
  ret void, !dbg !9505
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9506 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9508, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.value(metadata i8* %0, metadata !9509, metadata !DIExpression()), !dbg !9511
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9512
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9510, metadata !DIExpression()), !dbg !9511
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9513
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9513
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #24, !dbg !9514
  ret i32 %5, !dbg !9515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9518, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i32 %1, metadata !9519, metadata !DIExpression()), !dbg !9521
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !9522
  call void @llvm.dbg.value(metadata i32 %3, metadata !9520, metadata !DIExpression()), !dbg !9521
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !9523
  ret void, !dbg !9524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #6 !dbg !9525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9529, metadata !DIExpression()), !dbg !9530
  %2 = sdiv i32 %0, 4, !dbg !9531
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9532
  %6 = add nsw i32 %5, 16, !dbg !9533
  %7 = shl i32 15, %6, !dbg !9534
  %8 = or i32 %7, %2, !dbg !9535
  ret i32 %8, !dbg !9536
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9541, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata i32 %1, metadata !9542, metadata !DIExpression()), !dbg !9543
  %3 = and i32 %1, 255, !dbg !9544
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9544
  %5 = load volatile i32, i32* %4, align 4, !dbg !9544
  %6 = lshr i32 %1, 16, !dbg !9544
  %7 = xor i32 %6, -1, !dbg !9544
  %8 = and i32 %5, %7, !dbg !9544
  call void @llvm.dbg.value(metadata i32 %6, metadata !9545, metadata !DIExpression()) #23, !dbg !9549
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9551, !srcloc !9552
  call void @llvm.dbg.value(metadata i32 %9, metadata !9548, metadata !DIExpression()) #23, !dbg !9549
  call void @llvm.dbg.value(metadata i32 %9, metadata !9553, metadata !DIExpression()) #23, !dbg !9558
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9560, !range !7574
  %11 = shl i32 %0, %10, !dbg !9544
  %12 = or i32 %11, %8, !dbg !9544
  store volatile i32 %12, i32* %4, align 4, !dbg !9544
  ret void, !dbg !9561
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9562 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9566, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9567, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.value(metadata i32 %2, metadata !9568, metadata !DIExpression()), !dbg !9571
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9572
  %5 = icmp eq %struct._snode* %4, null, !dbg !9572
  br i1 %5, label %24, label %6, !dbg !9572

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !9574
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9570, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9569, metadata !DIExpression()), !dbg !9571
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9575
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9575
  %12 = load i32, i32* %11, align 4, !dbg !9575
  %13 = and i32 %12, %2, !dbg !9579
  %14 = icmp eq i32 %13, 0, !dbg !9579
  br i1 %14, label %22, label %15, !dbg !9580

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9581
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9581
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9581
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9581
  br i1 %19, label %20, label %21, !dbg !9585

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #24, !dbg !9586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #24, !dbg !9586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #24, !dbg !9586
  unreachable, !dbg !9586

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #24, !dbg !9588
  br label %22, !dbg !9589

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9569, metadata !DIExpression()), !dbg !9571
  %23 = icmp eq %struct._snode* %8, null, !dbg !9590
  br i1 %23, label %24, label %6, !dbg !9590

24:                                               ; preds = %22, %3
  ret void, !dbg !9591
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9594, metadata !DIExpression()), !dbg !9595
  %2 = and i32 %0, 255, !dbg !9596
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9596
  %4 = load volatile i32, i32* %3, align 4, !dbg !9596
  %5 = lshr i32 %0, 16, !dbg !9596
  %6 = and i32 %4, %5, !dbg !9596
  call void @llvm.dbg.value(metadata i32 %5, metadata !9545, metadata !DIExpression()) #23, !dbg !9597
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9599, !srcloc !9552
  call void @llvm.dbg.value(metadata i32 %7, metadata !9548, metadata !DIExpression()) #23, !dbg !9597
  call void @llvm.dbg.value(metadata i32 %7, metadata !9553, metadata !DIExpression()) #23, !dbg !9600
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9602, !range !7574
  %9 = lshr i32 %6, %8, !dbg !9603
  ret i32 %9, !dbg !9604
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9605 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9610, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata i32 %1, metadata !9611, metadata !DIExpression()), !dbg !9612
  %3 = shl i32 %1, 16, !dbg !9613
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9613
  store volatile i32 %3, i32* %4, align 4, !dbg !9613
  ret void, !dbg !9614
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !9615 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9619, metadata !DIExpression()), !dbg !9620
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9621
  %3 = load volatile i32, i32* %2, align 4, !dbg !9621
  ret i32 %3, !dbg !9622
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9623 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9625, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.value(metadata i32 %1, metadata !9626, metadata !DIExpression()), !dbg !9627
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9628
  store volatile i32 %1, i32* %3, align 4, !dbg !9628
  ret void, !dbg !9629
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !9630 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9632, metadata !DIExpression()), !dbg !9633
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9634
  %3 = load volatile i32, i32* %2, align 4, !dbg !9634
  ret i32 %3, !dbg !9635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !9636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9640, metadata !DIExpression()), !dbg !9642
  call void @llvm.dbg.value(metadata i32* %1, metadata !9641, metadata !DIExpression()), !dbg !9642
  %3 = and i32 %0, 131072, !dbg !9643
  %4 = icmp eq i32 %3, 0, !dbg !9645
  br i1 %4, label %22, label %5, !dbg !9646

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9647
  %6 = and i32 %0, 2, !dbg !9649
  %7 = icmp eq i32 %6, 0, !dbg !9651
  br i1 %7, label %11, label %8, !dbg !9652

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9653
  %10 = icmp eq i32 %9, 0, !dbg !9653
  br i1 %10, label %33, label %11, !dbg !9656

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9657
  store i32 %12, i32* %1, align 4, !dbg !9657
  %13 = and i32 %0, 16, !dbg !9658
  %14 = icmp eq i32 %13, 0, !dbg !9660
  br i1 %14, label %17, label %15, !dbg !9661

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9662
  br label %31, !dbg !9664

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9665
  %19 = icmp eq i32 %18, 0, !dbg !9667
  br i1 %19, label %33, label %20, !dbg !9668

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9669
  br label %31, !dbg !9671

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9672
  %24 = icmp eq i32 %23, 0, !dbg !9674
  br i1 %24, label %31, label %25, !dbg !9675

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9676
  %27 = icmp eq i32 %26, 0, !dbg !9679
  br i1 %27, label %28, label %31, !dbg !9680

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9681
  br label %33, !dbg !9682

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9642
  ret i32 %34, !dbg !9682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9683 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9687, metadata !DIExpression()), !dbg !9698
  call void @llvm.dbg.value(metadata i32 %1, metadata !9688, metadata !DIExpression()), !dbg !9698
  call void @llvm.dbg.value(metadata i32 %2, metadata !9689, metadata !DIExpression()), !dbg !9698
  call void @llvm.dbg.value(metadata i32 %3, metadata !9690, metadata !DIExpression()), !dbg !9698
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9699
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9699
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9699
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9691, metadata !DIExpression()), !dbg !9698
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9700
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9700
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9700
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9692, metadata !DIExpression()), !dbg !9698
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !9701
  call void @llvm.dbg.value(metadata i32 %11, metadata !9693, metadata !DIExpression()), !dbg !9698
  %12 = and i32 %2, 48, !dbg !9702
  call void @llvm.dbg.value(metadata i32 %12, metadata !9694, metadata !DIExpression()), !dbg !9698
  call void @llvm.dbg.value(metadata i32 %2, metadata !9695, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9698
  call void @llvm.dbg.value(metadata i32 %2, metadata !9696, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9698
  call void @llvm.dbg.value(metadata i32 %2, metadata !9697, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9698
  %13 = lshr i32 %2, 6, !dbg !9703
  %14 = and i32 %13, 1, !dbg !9703
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !9704
  %15 = lshr i32 %2, 7, !dbg !9705
  %16 = and i32 %15, 3, !dbg !9705
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !9706
  %17 = lshr i32 %2, 9, !dbg !9707
  %18 = and i32 %17, 3, !dbg !9707
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !9708
  %19 = icmp eq i32 %12, 32, !dbg !9709
  br i1 %19, label %20, label %24, !dbg !9711

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9712
  br i1 %21, label %22, label %23, !dbg !9715

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !9716
  br label %24, !dbg !9718

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !9719
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9721
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !9722
  ret void, !dbg !9723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #6 !dbg !9724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9726, metadata !DIExpression()), !dbg !9728
  %2 = shl nuw i32 1, %0, !dbg !9729
  call void @llvm.dbg.value(metadata i32 %2, metadata !9727, metadata !DIExpression()), !dbg !9728
  ret i32 %2, !dbg !9730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9731 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9735, metadata !DIExpression()), !dbg !9738
  call void @llvm.dbg.value(metadata i32 %1, metadata !9736, metadata !DIExpression()), !dbg !9738
  call void @llvm.dbg.value(metadata i32 %2, metadata !9737, metadata !DIExpression()), !dbg !9738
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9739
  %5 = load volatile i32, i32* %4, align 4, !dbg !9739
  %6 = xor i32 %1, -1, !dbg !9739
  %7 = and i32 %5, %6, !dbg !9739
  %8 = mul i32 %2, %1, !dbg !9739
  %9 = or i32 %7, %8, !dbg !9739
  store volatile i32 %9, i32* %4, align 4, !dbg !9739
  ret void, !dbg !9740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9741 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9743, metadata !DIExpression()), !dbg !9746
  call void @llvm.dbg.value(metadata i32 %1, metadata !9744, metadata !DIExpression()), !dbg !9746
  call void @llvm.dbg.value(metadata i32 %2, metadata !9745, metadata !DIExpression()), !dbg !9746
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9747
  %5 = load volatile i32, i32* %4, align 4, !dbg !9747
  call void @llvm.dbg.value(metadata i32 %1, metadata !9545, metadata !DIExpression()) #23, !dbg !9748
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9750, !srcloc !9552
  call void @llvm.dbg.value(metadata i32 %6, metadata !9548, metadata !DIExpression()) #23, !dbg !9748
  call void @llvm.dbg.value(metadata i32 %6, metadata !9553, metadata !DIExpression()) #23, !dbg !9751
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9753, !range !7574
  %8 = shl nuw nsw i32 %7, 1, !dbg !9747
  %9 = shl i32 3, %8, !dbg !9747
  %10 = xor i32 %9, -1, !dbg !9747
  %11 = and i32 %5, %10, !dbg !9747
  call void @llvm.dbg.value(metadata i32 %1, metadata !9545, metadata !DIExpression()) #23, !dbg !9754
  call void @llvm.dbg.value(metadata i32 %6, metadata !9548, metadata !DIExpression()) #23, !dbg !9754
  call void @llvm.dbg.value(metadata i32 %6, metadata !9553, metadata !DIExpression()) #23, !dbg !9756
  %12 = shl i32 %2, %8, !dbg !9747
  %13 = or i32 %11, %12, !dbg !9747
  store volatile i32 %13, i32* %4, align 4, !dbg !9747
  ret void, !dbg !9758
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9759 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9761, metadata !DIExpression()), !dbg !9764
  call void @llvm.dbg.value(metadata i32 %1, metadata !9762, metadata !DIExpression()), !dbg !9764
  call void @llvm.dbg.value(metadata i32 %2, metadata !9763, metadata !DIExpression()), !dbg !9764
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9765
  %5 = load volatile i32, i32* %4, align 4, !dbg !9765
  call void @llvm.dbg.value(metadata i32 %1, metadata !9545, metadata !DIExpression()) #23, !dbg !9766
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9768, !srcloc !9552
  call void @llvm.dbg.value(metadata i32 %6, metadata !9548, metadata !DIExpression()) #23, !dbg !9766
  call void @llvm.dbg.value(metadata i32 %6, metadata !9553, metadata !DIExpression()) #23, !dbg !9769
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9771, !range !7574
  %8 = shl nuw nsw i32 %7, 1, !dbg !9765
  %9 = shl i32 3, %8, !dbg !9765
  %10 = xor i32 %9, -1, !dbg !9765
  %11 = and i32 %5, %10, !dbg !9765
  call void @llvm.dbg.value(metadata i32 %1, metadata !9545, metadata !DIExpression()) #23, !dbg !9772
  call void @llvm.dbg.value(metadata i32 %6, metadata !9548, metadata !DIExpression()) #23, !dbg !9772
  call void @llvm.dbg.value(metadata i32 %6, metadata !9553, metadata !DIExpression()) #23, !dbg !9774
  %12 = shl i32 %2, %8, !dbg !9765
  %13 = or i32 %11, %12, !dbg !9765
  store volatile i32 %13, i32* %4, align 4, !dbg !9765
  ret void, !dbg !9776
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9777 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9779, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i32 %1, metadata !9780, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.value(metadata i32 %2, metadata !9781, metadata !DIExpression()), !dbg !9782
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9783
  %5 = load volatile i32, i32* %4, align 4, !dbg !9783
  call void @llvm.dbg.value(metadata i32 %1, metadata !9545, metadata !DIExpression()) #23, !dbg !9784
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9786, !srcloc !9552
  call void @llvm.dbg.value(metadata i32 %6, metadata !9548, metadata !DIExpression()) #23, !dbg !9784
  call void @llvm.dbg.value(metadata i32 %6, metadata !9553, metadata !DIExpression()) #23, !dbg !9787
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9789, !range !7574
  %8 = shl nuw nsw i32 %7, 2, !dbg !9783
  %9 = shl i32 15, %8, !dbg !9783
  %10 = xor i32 %9, -1, !dbg !9783
  %11 = and i32 %5, %10, !dbg !9783
  call void @llvm.dbg.value(metadata i32 %1, metadata !9545, metadata !DIExpression()) #23, !dbg !9790
  call void @llvm.dbg.value(metadata i32 %6, metadata !9548, metadata !DIExpression()) #23, !dbg !9790
  call void @llvm.dbg.value(metadata i32 %6, metadata !9553, metadata !DIExpression()) #23, !dbg !9792
  %12 = shl i32 %2, %8, !dbg !9783
  %13 = or i32 %11, %12, !dbg !9783
  store volatile i32 %13, i32* %4, align 4, !dbg !9783
  ret void, !dbg !9794
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9795 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9797, metadata !DIExpression()), !dbg !9800
  call void @llvm.dbg.value(metadata i32 %1, metadata !9798, metadata !DIExpression()), !dbg !9800
  call void @llvm.dbg.value(metadata i32 %2, metadata !9799, metadata !DIExpression()), !dbg !9800
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9801
  %5 = load volatile i32, i32* %4, align 4, !dbg !9801
  %6 = lshr i32 %1, 8, !dbg !9801
  call void @llvm.dbg.value(metadata i32 %6, metadata !9545, metadata !DIExpression()) #23, !dbg !9802
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9804, !srcloc !9552
  call void @llvm.dbg.value(metadata i32 %7, metadata !9548, metadata !DIExpression()) #23, !dbg !9802
  call void @llvm.dbg.value(metadata i32 %7, metadata !9553, metadata !DIExpression()) #23, !dbg !9805
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9807, !range !7574
  %9 = shl nuw nsw i32 %8, 2, !dbg !9801
  %10 = shl i32 15, %9, !dbg !9801
  %11 = xor i32 %10, -1, !dbg !9801
  %12 = and i32 %5, %11, !dbg !9801
  call void @llvm.dbg.value(metadata i32 %6, metadata !9545, metadata !DIExpression()) #23, !dbg !9808
  call void @llvm.dbg.value(metadata i32 %7, metadata !9548, metadata !DIExpression()) #23, !dbg !9808
  call void @llvm.dbg.value(metadata i32 %7, metadata !9553, metadata !DIExpression()) #23, !dbg !9810
  %13 = shl i32 %2, %9, !dbg !9801
  %14 = or i32 %12, %13, !dbg !9801
  store volatile i32 %14, i32* %4, align 4, !dbg !9801
  ret void, !dbg !9812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9813 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9815, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata i32 %1, metadata !9816, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata i32 %2, metadata !9817, metadata !DIExpression()), !dbg !9818
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9819
  %5 = load volatile i32, i32* %4, align 4, !dbg !9819
  call void @llvm.dbg.value(metadata i32 %1, metadata !9545, metadata !DIExpression()) #23, !dbg !9820
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9822, !srcloc !9552
  call void @llvm.dbg.value(metadata i32 %6, metadata !9548, metadata !DIExpression()) #23, !dbg !9820
  call void @llvm.dbg.value(metadata i32 %6, metadata !9553, metadata !DIExpression()) #23, !dbg !9823
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9825, !range !7574
  %8 = shl nuw nsw i32 %7, 1, !dbg !9819
  %9 = shl i32 3, %8, !dbg !9819
  %10 = xor i32 %9, -1, !dbg !9819
  %11 = and i32 %5, %10, !dbg !9819
  call void @llvm.dbg.value(metadata i32 %1, metadata !9545, metadata !DIExpression()) #23, !dbg !9826
  call void @llvm.dbg.value(metadata i32 %6, metadata !9548, metadata !DIExpression()) #23, !dbg !9826
  call void @llvm.dbg.value(metadata i32 %6, metadata !9553, metadata !DIExpression()) #23, !dbg !9828
  %12 = shl i32 %2, %8, !dbg !9819
  %13 = or i32 %11, %12, !dbg !9819
  store volatile i32 %13, i32* %4, align 4, !dbg !9819
  ret void, !dbg !9830
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9831 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9833, metadata !DIExpression()), !dbg !9836
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9837
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9837
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9837
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9834, metadata !DIExpression()), !dbg !9836
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9838
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9839
  %6 = tail call fastcc zeroext i1 @device_is_ready.122() #25, !dbg !9840
  br i1 %6, label %7, label %11, !dbg !9842

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !9843
  call void @llvm.dbg.value(metadata i32 %8, metadata !9835, metadata !DIExpression()), !dbg !9836
  %9 = icmp slt i32 %8, 0, !dbg !9844
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9846
  br label %11, !dbg !9846

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9836
  ret i32 %12, !dbg !9847
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.122() unnamed_addr #1 !dbg !9848 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9852, metadata !DIExpression()), !dbg !9853
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9854, !srcloc !9856
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.123() #25, !dbg !9857
  ret i1 %1, !dbg !9858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9859 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9863, metadata !DIExpression()), !dbg !9868
  call void @llvm.dbg.value(metadata i8 1, metadata !9864, metadata !DIExpression()), !dbg !9868
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9869
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9869
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9869
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9865, metadata !DIExpression()), !dbg !9868
  call void @llvm.dbg.value(metadata i32 0, metadata !9866, metadata !DIExpression()), !dbg !9868
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9867, metadata !DIExpression()), !dbg !9868
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9870
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9873
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #25, !dbg !9874
  call void @llvm.dbg.value(metadata i32 %7, metadata !9866, metadata !DIExpression()), !dbg !9868
  ret i32 %7, !dbg !9875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.123() unnamed_addr #1 !dbg !9876 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9878, metadata !DIExpression()), !dbg !9879
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #24, !dbg !9880
  ret i1 %1, !dbg !9881
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9882 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9886, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i32 %1, metadata !9887, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i32 %2, metadata !9888, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i32 %3, metadata !9889, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i32 0, metadata !9890, metadata !DIExpression()), !dbg !9894
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !9895
  %5 = icmp eq i32 %3, 17, !dbg !9896
  br i1 %5, label %6, label %14, !dbg !9897

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9898
  call void @llvm.dbg.value(metadata i32 %7, metadata !9891, metadata !DIExpression()), !dbg !9899
  %8 = icmp eq i32 %7, 0, !dbg !9900
  %9 = shl nuw i32 1, %1, !dbg !9902
  br i1 %8, label %12, label %10, !dbg !9903

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !9904
  br label %14, !dbg !9906

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !9907
  br label %14, !dbg !9910

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9911
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9912 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9914, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i8* %1, metadata !9915, metadata !DIExpression()), !dbg !9918
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9919
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9919
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9919
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9916, metadata !DIExpression()), !dbg !9918
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9920
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9920
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !9922
  %9 = icmp eq i32 %8, 0, !dbg !9922
  br i1 %9, label %12, label %10, !dbg !9923

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9924
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !9926
  br label %12, !dbg !9927

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9928
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !9930
  %15 = icmp eq i32 %14, 0, !dbg !9930
  br i1 %15, label %19, label %16, !dbg !9931

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9932
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !9933
  store i8 %18, i8* %1, align 1, !dbg !9934
  br label %19, !dbg !9935

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9918
  ret i32 %20, !dbg !9936
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9937 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9939, metadata !DIExpression()), !dbg !9943
  call void @llvm.dbg.value(metadata i8 %1, metadata !9940, metadata !DIExpression()), !dbg !9943
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9944
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9944
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9944
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9941, metadata !DIExpression()), !dbg !9943
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9945

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9946
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !9949
  %10 = icmp eq i32 %9, 0, !dbg !9949
  br i1 %10, label %18, label %11, !dbg !9950

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9951, !srcloc !9958
  call void @llvm.dbg.value(metadata i32 undef, metadata !9954, metadata !DIExpression()) #23, !dbg !9959
  call void @llvm.dbg.value(metadata i32 undef, metadata !9955, metadata !DIExpression()) #23, !dbg !9959
  call void @llvm.dbg.value(metadata i32 undef, metadata !9942, metadata !DIExpression()), !dbg !9943
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9960
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !9962
  %15 = icmp eq i32 %14, 0, !dbg !9962
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9951
  br i1 %15, label %17, label %19, !dbg !9963

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9954, metadata !DIExpression()) #23, !dbg !9959
  call void @llvm.dbg.value(metadata i32 %16, metadata !9942, metadata !DIExpression()), !dbg !9943
  call void @llvm.dbg.value(metadata i32 undef, metadata !9964, metadata !DIExpression()) #23, !dbg !9967
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9969, !srcloc !9970
  br label %18, !dbg !9971

18:                                               ; preds = %17, %7
  br label %7, !dbg !9946, !llvm.loop !9972

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9951
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9974
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !9975
  call void @llvm.dbg.value(metadata i32 %20, metadata !9964, metadata !DIExpression()) #23, !dbg !9976
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9978, !srcloc !9970
  ret void, !dbg !9979
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9980 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9982, metadata !DIExpression()), !dbg !9985
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9986
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9986
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9986
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9983, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.value(metadata i32 0, metadata !9984, metadata !DIExpression()), !dbg !9985
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9987
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9987
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !9989
  %8 = icmp ne i32 %7, 0, !dbg !9989
  %9 = zext i1 %8 to i32, !dbg !9990
  call void @llvm.dbg.value(metadata i32 %9, metadata !9984, metadata !DIExpression()), !dbg !9985
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9991
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !9993
  %12 = icmp eq i32 %11, 0, !dbg !9993
  %13 = or i32 %9, 2, !dbg !9994
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9994
  call void @llvm.dbg.value(metadata i32 %14, metadata !9984, metadata !DIExpression()), !dbg !9985
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9995
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !9997
  %17 = icmp eq i32 %16, 0, !dbg !9997
  %18 = or i32 %14, 4, !dbg !9998
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9998
  call void @llvm.dbg.value(metadata i32 %19, metadata !9984, metadata !DIExpression()), !dbg !9985
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9999
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !10001
  %22 = icmp eq i32 %21, 0, !dbg !10001
  %23 = or i32 %19, 8, !dbg !10002
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10002
  call void @llvm.dbg.value(metadata i32 %24, metadata !9984, metadata !DIExpression()), !dbg !9985
  %25 = and i32 %24, 8, !dbg !10003
  %26 = icmp eq i32 %25, 0, !dbg !10003
  br i1 %26, label %29, label %27, !dbg !10005

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10006
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !10008
  br label %29, !dbg !10009

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10010
  %31 = icmp eq i32 %30, 0, !dbg !10010
  br i1 %31, label %34, label %32, !dbg !10012

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10013
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !10015
  br label %34, !dbg !10016

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10017
  %36 = icmp eq i32 %35, 0, !dbg !10017
  br i1 %36, label %39, label %37, !dbg !10019

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10020
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !10022
  br label %39, !dbg !10023

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10024
  %41 = icmp eq i32 %40, 0, !dbg !10024
  br i1 %41, label %44, label %42, !dbg !10026

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10027
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !10029
  br label %44, !dbg !10030

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10031
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !10032
  ret i32 %24, !dbg !10033
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10034 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10036, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10037, metadata !DIExpression()), !dbg !10045
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10046
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10046
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10046
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10038, metadata !DIExpression()), !dbg !10045
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10047
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10047
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10047
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10039, metadata !DIExpression()), !dbg !10045
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10048
  %10 = load i8, i8* %9, align 4, !dbg !10048
  %11 = zext i8 %10 to i32, !dbg !10049
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !10050
  call void @llvm.dbg.value(metadata i32 %12, metadata !10041, metadata !DIExpression()), !dbg !10045
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10051
  %14 = load i8, i8* %13, align 1, !dbg !10051
  %15 = zext i8 %14 to i32, !dbg !10052
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !10053
  call void @llvm.dbg.value(metadata i32 %16, metadata !10042, metadata !DIExpression()), !dbg !10045
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10054
  %18 = load i8, i8* %17, align 2, !dbg !10054
  %19 = zext i8 %18 to i32, !dbg !10055
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !10056
  call void @llvm.dbg.value(metadata i32 %20, metadata !10043, metadata !DIExpression()), !dbg !10045
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10057
  %22 = load i8, i8* %21, align 1, !dbg !10057
  %23 = zext i8 %22 to i32, !dbg !10058
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !10059
  call void @llvm.dbg.value(metadata i32 %24, metadata !10044, metadata !DIExpression()), !dbg !10045
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10060

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10062
  br i1 %26, label %69, label %27, !dbg !10064

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10065

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10066
  br i1 %29, label %65, label %30, !dbg !10066

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10068
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10045
  br i1 %31, label %38, label %34, !dbg !10070

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10071
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !10071

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10074
  br i1 %37, label %38, label %69, !dbg !10075

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10076
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !10077
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !10078
  %41 = icmp eq i32 %12, %40, !dbg !10080
  br i1 %41, label %43, label %42, !dbg !10081

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !10082
  br label %43, !dbg !10084

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !10085
  %45 = icmp eq i32 %16, %44, !dbg !10087
  br i1 %45, label %47, label %46, !dbg !10088

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !10089
  br label %47, !dbg !10091

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !10092
  %49 = icmp eq i32 %20, %48, !dbg !10094
  br i1 %49, label %51, label %50, !dbg !10095

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !10096
  br label %51, !dbg !10098

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !10099
  %53 = icmp eq i32 %24, %52, !dbg !10101
  br i1 %53, label %55, label %54, !dbg !10102

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !10103
  br label %55, !dbg !10105

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10106
  %57 = load i32, i32* %56, align 4, !dbg !10106
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10108
  %59 = load i32, i32* %58, align 4, !dbg !10108
  %60 = icmp eq i32 %57, %59, !dbg !10109
  br i1 %60, label %63, label %61, !dbg !10110

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !10111
  %62 = load i32, i32* %56, align 4, !dbg !10113
  store i32 %62, i32* %58, align 4, !dbg !10114
  br label %63, !dbg !10115

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10116
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !10117
  br label %69, !dbg !10118

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10066
  %67 = and i8 %66, 1, !dbg !10066
  %68 = icmp eq i8 %67, 0, !dbg !10066
  br i1 %68, label %30, label %69, !dbg !10066

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10045
  ret i32 %70, !dbg !10119
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10120 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10122, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10123, metadata !DIExpression()), !dbg !10125
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10126
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10126
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10126
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10124, metadata !DIExpression()), !dbg !10125
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10127
  %7 = load i32, i32* %6, align 4, !dbg !10127
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10128
  store i32 %7, i32* %8, align 4, !dbg !10129
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !10130, !range !10131
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !10132
  %11 = trunc i32 %10 to i8, !dbg !10132
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10133
  store i8 %11, i8* %12, align 4, !dbg !10134
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !10135, !range !10136
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !10137
  %15 = trunc i32 %14 to i8, !dbg !10137
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10138
  store i8 %15, i8* %16, align 1, !dbg !10139
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !10140
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !10141, !range !10131
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !10142
  %20 = trunc i32 %19 to i8, !dbg !10142
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10143
  store i8 %20, i8* %21, align 2, !dbg !10144
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !10145, !range !10146
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !10147
  %24 = trunc i32 %23 to i8, !dbg !10147
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10148
  store i8 %24, i8* %25, align 1, !dbg !10149
  ret i32 0, !dbg !10150
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10151 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10155, metadata !DIExpression()), !dbg !10157
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10158
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10158
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10158
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10156, metadata !DIExpression()), !dbg !10157
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10159
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10159
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !10160
  ret i32 %7, !dbg !10161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #6 !dbg !10162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10166, metadata !DIExpression()), !dbg !10167
  %2 = icmp eq i32 %0, 1024, !dbg !10168
  %3 = select i1 %2, i32 2, i32 0, !dbg !10168
  %4 = icmp eq i32 %0, 1536, !dbg !10168
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10168
  ret i32 %5, !dbg !10169
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10170 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10172, metadata !DIExpression()), !dbg !10174
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10175
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10175
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10175
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10173, metadata !DIExpression()), !dbg !10174
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10176
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10176
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !10177
  ret i32 %7, !dbg !10178
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #13 !dbg !10179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10183, metadata !DIExpression()), !dbg !10184
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10185
  %3 = icmp ult i32 %2, 4, !dbg !10185
  br i1 %3, label %4, label %7, !dbg !10185

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10185
  %6 = load i32, i32* %5, align 4, !dbg !10185
  br label %7, !dbg !10185

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10186
  ret i32 %8, !dbg !10188
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10189 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10191, metadata !DIExpression()), !dbg !10193
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10194
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10194
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10194
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10192, metadata !DIExpression()), !dbg !10193
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10195
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10195
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !10196
  ret i32 %7, !dbg !10197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !10198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10202, metadata !DIExpression()), !dbg !10204
  call void @llvm.dbg.value(metadata i32 %1, metadata !10203, metadata !DIExpression()), !dbg !10204
  %3 = icmp eq i32 %0, 4096, !dbg !10205
  %4 = icmp eq i32 %1, 0, !dbg !10205
  %5 = select i1 %4, i32 4, i32 3, !dbg !10205
  %6 = select i1 %4, i32 3, i32 2, !dbg !10205
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10205
  ret i32 %7, !dbg !10206
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10207 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10209, metadata !DIExpression()), !dbg !10211
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10212
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10212
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10212
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10210, metadata !DIExpression()), !dbg !10211
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10213
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10213
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !10214
  ret i32 %7, !dbg !10215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !10216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10220, metadata !DIExpression()), !dbg !10221
  %2 = icmp eq i32 %0, 768, !dbg !10222
  %3 = zext i1 %2 to i32, !dbg !10221
  ret i32 %3, !dbg !10224
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10225 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10230, metadata !DIExpression()), !dbg !10231
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10232
  %3 = load volatile i32, i32* %2, align 4, !dbg !10232
  %4 = and i32 %3, 768, !dbg !10232
  ret i32 %4, !dbg !10233
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10234 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10236, metadata !DIExpression()), !dbg !10237
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10238
  %3 = load volatile i32, i32* %2, align 4, !dbg !10238
  %4 = and i32 %3, 4096, !dbg !10238
  ret i32 %4, !dbg !10239
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10240 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10242, metadata !DIExpression()), !dbg !10243
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10244
  %3 = load volatile i32, i32* %2, align 4, !dbg !10244
  %4 = and i32 %3, 12288, !dbg !10244
  ret i32 %4, !dbg !10245
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10246 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10248, metadata !DIExpression()), !dbg !10249
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10250
  %3 = load volatile i32, i32* %2, align 4, !dbg !10250
  %4 = and i32 %3, 1536, !dbg !10250
  ret i32 %4, !dbg !10251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #6 !dbg !10252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10256, metadata !DIExpression()), !dbg !10257
  %2 = icmp eq i32 %0, 2, !dbg !10258
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10258
  %4 = icmp eq i32 %0, 1, !dbg !10258
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10258
  ret i32 %5, !dbg !10259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !10260 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10264, metadata !DIExpression()), !dbg !10265
  %2 = icmp ult i32 %0, 3, !dbg !10266
  br i1 %2, label %3, label %6, !dbg !10266

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10266
  %5 = load i32, i32* %4, align 4, !dbg !10266
  br label %6, !dbg !10266

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10267
  ret i32 %7, !dbg !10269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !10270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10274, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.value(metadata i32 %1, metadata !10275, metadata !DIExpression()), !dbg !10276
  %3 = icmp eq i32 %0, 4, !dbg !10277
  %4 = icmp eq i32 %1, 0, !dbg !10277
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10277
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10277
  ret i32 %6, !dbg !10278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !10279 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10283, metadata !DIExpression()), !dbg !10284
  %2 = icmp eq i32 %0, 1, !dbg !10285
  %3 = select i1 %2, i32 768, i32 0, !dbg !10284
  ret i32 %3, !dbg !10287
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10288 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10292, metadata !DIExpression()), !dbg !10293
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10294
  %3 = load volatile i32, i32* %2, align 4, !dbg !10294
  %4 = and i32 %3, -8193, !dbg !10294
  store volatile i32 %4, i32* %2, align 4, !dbg !10294
  ret void, !dbg !10295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10296 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10300, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata i32 %1, metadata !10301, metadata !DIExpression()), !dbg !10303
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10304
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10304
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10304
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10302, metadata !DIExpression()), !dbg !10303
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10305
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10305
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10306
  ret void, !dbg !10307
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10308 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10310, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i32 %1, metadata !10311, metadata !DIExpression()), !dbg !10313
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10314
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10314
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10314
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10312, metadata !DIExpression()), !dbg !10313
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10315
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10315
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10316
  ret void, !dbg !10317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10318 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10320, metadata !DIExpression()), !dbg !10323
  call void @llvm.dbg.value(metadata i32 %1, metadata !10321, metadata !DIExpression()), !dbg !10323
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10324
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10324
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10324
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10322, metadata !DIExpression()), !dbg !10323
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10325
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10325
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10326
  ret void, !dbg !10327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10328 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10330, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 %1, metadata !10331, metadata !DIExpression()), !dbg !10333
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10334
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10334
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10334
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10332, metadata !DIExpression()), !dbg !10333
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10335
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10335
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10336
  ret void, !dbg !10337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10338 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10340, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.value(metadata i32 %1, metadata !10341, metadata !DIExpression()), !dbg !10345
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10346
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10346
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10346
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10342, metadata !DIExpression()), !dbg !10345
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10347
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10347
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10347
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10343, metadata !DIExpression()), !dbg !10345
  %10 = bitcast i32* %3 to i8*, !dbg !10348
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10348
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10349
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10349
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10353
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10353
  %15 = load i8*, i8** %14, align 4, !dbg !10353
  call void @llvm.dbg.value(metadata i32* %3, metadata !10344, metadata !DIExpression(DW_OP_deref)), !dbg !10345
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !10354
  %17 = icmp slt i32 %16, 0, !dbg !10355
  br i1 %17, label %18, label %21, !dbg !10356

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.126(i32 noundef 1) #25, !dbg !10357
  %20 = zext i8 %19 to i32, !dbg !10357
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.127, i32 0, i32 0), i32 noundef %20) #24, !dbg !10357
  br label %31, !dbg !10363

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10364
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10364
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #25, !dbg !10365
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10366
  %25 = load i32, i32* %3, align 4, !dbg !10367
  call void @llvm.dbg.value(metadata i32 %25, metadata !10344, metadata !DIExpression()), !dbg !10345
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #25, !dbg !10368
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10369
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10369
  %28 = load volatile i32, i32* %27, align 4, !dbg !10369
  %29 = icmp ugt i32 %28, 16, !dbg !10369
  br i1 %29, label %31, label %30, !dbg !10372

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.130, i32 0, i32 0), i32 noundef 190) #24, !dbg !10373
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.131, i32 0, i32 0)) #24, !dbg !10373
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.130, i32 0, i32 0), i32 noundef 190) #24, !dbg !10373
  unreachable, !dbg !10373

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10375
  ret void, !dbg !10375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10376 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10378, metadata !DIExpression()), !dbg !10379
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10380
  %3 = load volatile i32, i32* %2, align 4, !dbg !10380
  %4 = or i32 %3, 8192, !dbg !10380
  store volatile i32 %4, i32* %2, align 4, !dbg !10380
  ret void, !dbg !10381
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10382 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10384, metadata !DIExpression()), !dbg !10388
  call void @llvm.dbg.value(metadata i8* %1, metadata !10385, metadata !DIExpression()), !dbg !10388
  call void @llvm.dbg.value(metadata i32* %2, metadata !10386, metadata !DIExpression()), !dbg !10388
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10389
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10389
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10389
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10387, metadata !DIExpression()), !dbg !10388
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10390
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10390
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10392
  br i1 %9, label %12, label %10, !dbg !10393

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !10394
  br label %12, !dbg !10395

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10388
  ret i32 %13, !dbg !10396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.126(i32 noundef %0) unnamed_addr #6 !dbg !10397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10399, metadata !DIExpression()), !dbg !10400
  %2 = icmp eq i32 %0, 2, !dbg !10401
  %3 = select i1 %2, i8 87, i8 63, !dbg !10401
  %4 = icmp eq i32 %0, 1, !dbg !10401
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10401
  ret i8 %5, !dbg !10402
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10403 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10407, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.value(metadata i32 0, metadata !10408, metadata !DIExpression()), !dbg !10409
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10410
  %3 = load volatile i32, i32* %2, align 4, !dbg !10410
  %4 = and i32 %3, -32769, !dbg !10410
  store volatile i32 %4, i32* %2, align 4, !dbg !10410
  ret void, !dbg !10411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10412 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10416, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata i32 %1, metadata !10417, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata i32 0, metadata !10418, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata i32 %2, metadata !10419, metadata !DIExpression()), !dbg !10420
  %4 = zext i32 %1 to i64, !dbg !10421
  %5 = mul nuw nsw i64 %4, 25, !dbg !10421
  %6 = zext i32 %2 to i64, !dbg !10421
  %7 = shl nuw nsw i64 %6, 2, !dbg !10421
  %8 = udiv i64 %5, %7, !dbg !10421
  %9 = trunc i64 %8 to i32, !dbg !10421
  %10 = udiv i32 %9, 100, !dbg !10421
  %11 = shl nuw nsw i32 %10, 4, !dbg !10421
  %12 = mul i32 %10, -100, !dbg !10421
  %13 = add i32 %12, %9, !dbg !10421
  %14 = shl i32 %13, 4, !dbg !10421
  %15 = add i32 %14, 50, !dbg !10421
  %16 = udiv i32 %15, 100, !dbg !10421
  %17 = and i32 %16, 240, !dbg !10421
  %18 = add nuw nsw i32 %17, %11, !dbg !10421
  %19 = and i32 %16, 15, !dbg !10421
  %20 = and i32 %18, 65520, !dbg !10424
  %21 = or i32 %20, %19, !dbg !10424
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10425
  store volatile i32 %21, i32* %22, align 4, !dbg !10426
  ret void, !dbg !10427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10428 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10430, metadata !DIExpression()), !dbg !10432
  call void @llvm.dbg.value(metadata i32 %1, metadata !10431, metadata !DIExpression()), !dbg !10432
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10433
  %4 = load volatile i32, i32* %3, align 4, !dbg !10433
  %5 = and i32 %4, -769, !dbg !10433
  %6 = or i32 %5, %1, !dbg !10433
  store volatile i32 %6, i32* %3, align 4, !dbg !10433
  ret void, !dbg !10434
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10435 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10437, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.value(metadata i32 %1, metadata !10438, metadata !DIExpression()), !dbg !10439
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10440
  %4 = load volatile i32, i32* %3, align 4, !dbg !10440
  %5 = and i32 %4, -4097, !dbg !10440
  %6 = or i32 %5, %1, !dbg !10440
  store volatile i32 %6, i32* %3, align 4, !dbg !10440
  ret void, !dbg !10441
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10442 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10444, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.value(metadata i32 %1, metadata !10445, metadata !DIExpression()), !dbg !10446
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10447
  %4 = load volatile i32, i32* %3, align 4, !dbg !10447
  %5 = and i32 %4, -12289, !dbg !10447
  %6 = or i32 %5, %1, !dbg !10447
  store volatile i32 %6, i32* %3, align 4, !dbg !10447
  ret void, !dbg !10448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10449 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10451, metadata !DIExpression()), !dbg !10453
  call void @llvm.dbg.value(metadata i32 %1, metadata !10452, metadata !DIExpression()), !dbg !10453
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10454
  %4 = load volatile i32, i32* %3, align 4, !dbg !10454
  %5 = and i32 %4, -1537, !dbg !10454
  %6 = or i32 %5, %1, !dbg !10454
  store volatile i32 %6, i32* %3, align 4, !dbg !10454
  ret void, !dbg !10455
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10456 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10458, metadata !DIExpression()), !dbg !10459
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10460
  %3 = load volatile i32, i32* %2, align 4, !dbg !10460
  %4 = lshr i32 %3, 3, !dbg !10461
  %5 = and i32 %4, 1, !dbg !10461
  ret i32 %5, !dbg !10462
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10463 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10465, metadata !DIExpression()), !dbg !10466
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10467
  %3 = load volatile i32, i32* %2, align 4, !dbg !10467
  %4 = and i32 %3, 1, !dbg !10467
  ret i32 %4, !dbg !10468
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10469 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10471, metadata !DIExpression()), !dbg !10472
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10473
  %3 = load volatile i32, i32* %2, align 4, !dbg !10473
  %4 = lshr i32 %3, 1, !dbg !10474
  %5 = and i32 %4, 1, !dbg !10474
  ret i32 %5, !dbg !10475
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10476 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10478, metadata !DIExpression()), !dbg !10479
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10480
  %3 = load volatile i32, i32* %2, align 4, !dbg !10480
  %4 = lshr i32 %3, 8, !dbg !10481
  %5 = and i32 %4, 1, !dbg !10481
  ret i32 %5, !dbg !10482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10483 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10485, metadata !DIExpression()), !dbg !10486
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10487
  store volatile i32 -257, i32* %2, align 4, !dbg !10487
  ret void, !dbg !10488
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10489 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10491, metadata !DIExpression()), !dbg !10493
  %3 = bitcast i32* %2 to i8*, !dbg !10494
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10494
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10492, metadata !DIExpression()), !dbg !10495
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10496
  %5 = load volatile i32, i32* %4, align 4, !dbg !10496
  store volatile i32 %5, i32* %2, align 4, !dbg !10497
  %6 = load volatile i32, i32* %2, align 4, !dbg !10498
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10499
  %8 = load volatile i32, i32* %7, align 4, !dbg !10499
  store volatile i32 %8, i32* %2, align 4, !dbg !10500
  %9 = load volatile i32, i32* %2, align 4, !dbg !10501
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10502
  ret void, !dbg !10502
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10503 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10505, metadata !DIExpression()), !dbg !10507
  %3 = bitcast i32* %2 to i8*, !dbg !10508
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10508
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10506, metadata !DIExpression()), !dbg !10509
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10510
  %5 = load volatile i32, i32* %4, align 4, !dbg !10510
  store volatile i32 %5, i32* %2, align 4, !dbg !10511
  %6 = load volatile i32, i32* %2, align 4, !dbg !10512
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10513
  %8 = load volatile i32, i32* %7, align 4, !dbg !10513
  store volatile i32 %8, i32* %2, align 4, !dbg !10514
  %9 = load volatile i32, i32* %2, align 4, !dbg !10515
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10516
  ret void, !dbg !10516
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10517 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10519, metadata !DIExpression()), !dbg !10521
  %3 = bitcast i32* %2 to i8*, !dbg !10522
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10522
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10520, metadata !DIExpression()), !dbg !10523
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10524
  %5 = load volatile i32, i32* %4, align 4, !dbg !10524
  store volatile i32 %5, i32* %2, align 4, !dbg !10525
  %6 = load volatile i32, i32* %2, align 4, !dbg !10526
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10527
  %8 = load volatile i32, i32* %7, align 4, !dbg !10527
  store volatile i32 %8, i32* %2, align 4, !dbg !10528
  %9 = load volatile i32, i32* %2, align 4, !dbg !10529
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10530
  ret void, !dbg !10530
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10531 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10533, metadata !DIExpression()), !dbg !10535
  %3 = bitcast i32* %2 to i8*, !dbg !10536
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10536
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10534, metadata !DIExpression()), !dbg !10537
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10538
  %5 = load volatile i32, i32* %4, align 4, !dbg !10538
  store volatile i32 %5, i32* %2, align 4, !dbg !10539
  %6 = load volatile i32, i32* %2, align 4, !dbg !10540
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10541
  %8 = load volatile i32, i32* %7, align 4, !dbg !10541
  store volatile i32 %8, i32* %2, align 4, !dbg !10542
  %9 = load volatile i32, i32* %2, align 4, !dbg !10543
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10544
  ret void, !dbg !10544
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10545 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10547, metadata !DIExpression()), !dbg !10548
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10549
  %3 = load volatile i32, i32* %2, align 4, !dbg !10549
  %4 = lshr i32 %3, 7, !dbg !10550
  %5 = and i32 %4, 1, !dbg !10550
  ret i32 %5, !dbg !10551
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10552 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10556, metadata !DIExpression()), !dbg !10558
  call void @llvm.dbg.value(metadata i8 %1, metadata !10557, metadata !DIExpression()), !dbg !10558
  %3 = zext i8 %1 to i32, !dbg !10559
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10560
  store volatile i32 %3, i32* %4, align 4, !dbg !10561
  ret void, !dbg !10562
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10563 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10565, metadata !DIExpression()), !dbg !10566
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10567
  %3 = load volatile i32, i32* %2, align 4, !dbg !10567
  %4 = lshr i32 %3, 5, !dbg !10568
  %5 = and i32 %4, 1, !dbg !10568
  ret i32 %5, !dbg !10569
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10570 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10574, metadata !DIExpression()), !dbg !10575
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10576
  %3 = load volatile i32, i32* %2, align 4, !dbg !10576
  %4 = trunc i32 %3 to i8, !dbg !10577
  ret i8 %4, !dbg !10578
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10579 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10581, metadata !DIExpression()), !dbg !10587
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10588
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10588
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10588
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10582, metadata !DIExpression()), !dbg !10587
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10589
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10589
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10589
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10583, metadata !DIExpression()), !dbg !10587
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !10590
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10591
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10591
  %10 = tail call fastcc zeroext i1 @device_is_ready.138(%struct.device* noundef %9) #25, !dbg !10593
  br i1 %10, label %14, label %11, !dbg !10594

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.126(i32 noundef 1) #25, !dbg !10595
  %13 = zext i8 %12 to i32, !dbg !10595
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.139, i32 0, i32 0), i32 noundef %13) #24, !dbg !10595
  br label %62, !dbg !10601

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10602
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10603
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10603
  %18 = load i8*, i8** %17, align 4, !dbg !10603
  %19 = tail call fastcc i32 @clock_control_on.140(%struct.device* noundef %15, i8* noundef %18) #25, !dbg !10604
  call void @llvm.dbg.value(metadata i32 %19, metadata !10586, metadata !DIExpression()), !dbg !10587
  %20 = icmp eq i32 %19, 0, !dbg !10605
  br i1 %20, label %24, label %21, !dbg !10607

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.126(i32 noundef 1) #25, !dbg !10608
  %23 = zext i8 %22 to i32, !dbg !10608
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11.141, i32 0, i32 0), i32 noundef %23) #24, !dbg !10608
  br label %62, !dbg !10614

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10615
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10615
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #25, !dbg !10616
  call void @llvm.dbg.value(metadata i32 %27, metadata !10586, metadata !DIExpression()), !dbg !10587
  %28 = icmp slt i32 %27, 0, !dbg !10617
  br i1 %28, label %62, label %29, !dbg !10619

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10620
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10620
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #25, !dbg !10621
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10622
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #25, !dbg !10623
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10624
  %34 = load i32, i32* %33, align 4, !dbg !10624
  %35 = icmp ult i32 %34, 3, !dbg !10626
  br i1 %35, label %39, label %36, !dbg !10626

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.126(i32 noundef 2) #25, !dbg !10627
  %38 = zext i8 %37 to i32, !dbg !10627
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12.142, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #24, !dbg !10627
  call void @llvm.dbg.value(metadata i32 0, metadata !10584, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.value(metadata i32 0, metadata !10585, metadata !DIExpression()), !dbg !10587
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10626
  %41 = load i32, i32* %40, align 4, !dbg !10626
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.13, i32 0, i32 %34, !dbg !10626
  %43 = load i32, i32* %42, align 4, !dbg !10626
  br label %44, !dbg !10626

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10636
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10636
  call void @llvm.dbg.value(metadata i32 %46, metadata !10585, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.value(metadata i32 %45, metadata !10584, metadata !DIExpression()), !dbg !10587
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10637
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #25, !dbg !10638
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10639
  %49 = load i8, i8* %48, align 4, !dbg !10639, !range !6737
  %50 = icmp eq i8 %49, 0, !dbg !10639
  br i1 %50, label %52, label %51, !dbg !10641

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !10642
  br label %52, !dbg !10644

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10645
  %54 = load i32, i32* %53, align 4, !dbg !10645
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #25, !dbg !10646
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10647
  %56 = load i8, i8* %55, align 4, !dbg !10647, !range !6737
  %57 = icmp eq i8 %56, 0, !dbg !10647
  br i1 %57, label %60, label %58, !dbg !10649

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10650
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #25, !dbg !10652
  br label %60, !dbg !10653

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10654
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #25, !dbg !10655
  br label %62, !dbg !10656

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10587
  ret i32 %63, !dbg !10657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !10658 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10662, metadata !DIExpression()), !dbg !10666
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10667
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10667
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10667
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10663, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10664, metadata !DIExpression()), !dbg !10666
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10668
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10669
  ret void, !dbg !10670
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.138(%struct.device* noundef %0) unnamed_addr #1 !dbg !10671 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10675, metadata !DIExpression()), !dbg !10676
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10677, !srcloc !10679
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.143(%struct.device* noundef %0) #25, !dbg !10680
  ret i1 %2, !dbg !10681
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.140(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10682 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10684, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i8* %1, metadata !10685, metadata !DIExpression()), !dbg !10687
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10688
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10688
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10688
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10686, metadata !DIExpression()), !dbg !10687
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10689
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10689
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !10690
  ret i32 %8, !dbg !10691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10692 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10696, metadata !DIExpression()), !dbg !10700
  call void @llvm.dbg.value(metadata i8 0, metadata !10697, metadata !DIExpression()), !dbg !10700
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10701
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10701
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10699, metadata !DIExpression(DW_OP_deref)), !dbg !10700
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !10702
  call void @llvm.dbg.value(metadata i32 %4, metadata !10698, metadata !DIExpression()), !dbg !10700
  %5 = icmp slt i32 %4, 0, !dbg !10703
  br i1 %5, label %9, label %6, !dbg !10705

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10706
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10699, metadata !DIExpression()), !dbg !10700
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !10707
  br label %9, !dbg !10708

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10700
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10709
  ret i32 %10, !dbg !10709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10710 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10712, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.value(metadata i32 12, metadata !10713, metadata !DIExpression()), !dbg !10716
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10717

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10718, metadata !DIExpression()) #23, !dbg !10724
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10727, !srcloc !10728
  call void @llvm.dbg.value(metadata i32 %4, metadata !10723, metadata !DIExpression()) #23, !dbg !10724
  %5 = or i32 %4, 12, !dbg !10729
  call void @llvm.dbg.value(metadata i32 %5, metadata !10714, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.value(metadata i32 %5, metadata !10731, metadata !DIExpression()) #23, !dbg !10738
  call void @llvm.dbg.value(metadata i32* %2, metadata !10736, metadata !DIExpression()) #23, !dbg !10738
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10740, !srcloc !10741
  call void @llvm.dbg.value(metadata i32 %6, metadata !10737, metadata !DIExpression()) #23, !dbg !10738
  %7 = icmp eq i32 %6, 0, !dbg !10717
  br i1 %7, label %8, label %3, !dbg !10729, !llvm.loop !10742

8:                                                ; preds = %3
  ret void, !dbg !10743
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10744 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10746, metadata !DIExpression()), !dbg !10750
  call void @llvm.dbg.value(metadata i32 %1, metadata !10747, metadata !DIExpression()), !dbg !10750
  call void @llvm.dbg.value(metadata i32 %2, metadata !10748, metadata !DIExpression()), !dbg !10750
  call void @llvm.dbg.value(metadata i32 0, metadata !10749, metadata !DIExpression()), !dbg !10750
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10751
  %5 = load volatile i32, i32* %4, align 4, !dbg !10751
  %6 = and i32 %5, -5633, !dbg !10751
  %7 = or i32 %2, %1, !dbg !10751
  %8 = or i32 %7, %6, !dbg !10751
  store volatile i32 %8, i32* %4, align 4, !dbg !10751
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10752
  %10 = load volatile i32, i32* %9, align 4, !dbg !10752
  %11 = and i32 %10, -12289, !dbg !10752
  store volatile i32 %11, i32* %9, align 4, !dbg !10752
  ret void, !dbg !10753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10754 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10756, metadata !DIExpression()), !dbg !10757
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10758
  %3 = load volatile i32, i32* %2, align 4, !dbg !10758
  %4 = or i32 %3, 8, !dbg !10758
  store volatile i32 %4, i32* %2, align 4, !dbg !10758
  ret void, !dbg !10759
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10760 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10764, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10765, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata i32 0, metadata !10766, metadata !DIExpression()), !dbg !10767
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10768
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10768
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10769
  %5 = load i8, i8* %4, align 4, !dbg !10769
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !10770
  ret i32 %6, !dbg !10771
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.143(%struct.device* noundef %0) unnamed_addr #1 !dbg !10772 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10774, metadata !DIExpression()), !dbg !10775
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !10776
  ret i1 %2, !dbg !10777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10778 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10780, metadata !DIExpression()), !dbg !10781
  tail call fastcc void @__NVIC_SetPriority.145() #25, !dbg !10782
  store i32 8399, i32* @last_load, align 4, !dbg !10783
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10784
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10785
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10786
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10787
  %3 = or i32 %2, 7, !dbg !10787
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10787
  ret i32 0, !dbg !10788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.145() unnamed_addr #15 !dbg !10789 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10791, metadata !DIExpression()), !dbg !10793
  call void @llvm.dbg.value(metadata i32 1, metadata !10792, metadata !DIExpression()), !dbg !10793
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10794
  ret void, !dbg !10797
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10798 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10800, metadata !DIExpression()), !dbg !10802
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !10803
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10804
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10805
  %5 = add i32 %4, %3, !dbg !10805
  store i32 %5, i32* @cycle_count, align 4, !dbg !10805
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10806
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10807
  %7 = sub i32 %5, %6, !dbg !10810
  %8 = udiv i32 %7, 8400, !dbg !10811
  call void @llvm.dbg.value(metadata i32 %8, metadata !10801, metadata !DIExpression()), !dbg !10802
  %9 = mul nuw i32 %8, 8400, !dbg !10812
  %10 = add i32 %9, %6, !dbg !10813
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10813
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !10814
  tail call void @z_arm_int_exit() #24, !dbg !10815
  ret void, !dbg !10816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10817 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10822
  call void @llvm.dbg.value(metadata i32 %1, metadata !10819, metadata !DIExpression()), !dbg !10823
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10824
  call void @llvm.dbg.value(metadata i32 %2, metadata !10820, metadata !DIExpression()), !dbg !10823
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10825
  call void @llvm.dbg.value(metadata i32 %3, metadata !10821, metadata !DIExpression()), !dbg !10823
  %4 = and i32 %2, 65536, !dbg !10826
  %5 = icmp ne i32 %4, 0, !dbg !10826
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10828
  %8 = load i32, i32* @last_load, align 4, !dbg !10823
  br i1 %7, label %9, label %13, !dbg !10828

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10829
  %11 = add i32 %10, %8, !dbg !10829
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10829
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10831
  br label %13, !dbg !10832

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10833
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10834
  %16 = add i32 %14, %15, !dbg !10835
  ret i32 %16, !dbg !10836
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10841, metadata !DIExpression()), !dbg !10854
  call void @llvm.dbg.value(metadata i1 %1, metadata !10842, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10854
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10855
  br i1 %4, label %5, label %8, !dbg !10855

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10857
  %7 = and i32 %6, -2, !dbg !10857
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10857
  store i32 -16777216, i32* @last_load, align 4, !dbg !10859
  br label %60, !dbg !10860

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10861
  call void @llvm.dbg.value(metadata i32 %9, metadata !10846, metadata !DIExpression()), !dbg !10854
  br i1 %3, label %18, label %10, !dbg !10862

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10862
  call void @llvm.dbg.value(metadata i32 undef, metadata !10841, metadata !DIExpression()), !dbg !10854
  %12 = icmp slt i32 %11, 1, !dbg !10863
  br i1 %12, label %18, label %13, !dbg !10863

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10863
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10863
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10863
  %17 = add nuw nsw i32 %16, 8399, !dbg !10863
  br label %18, !dbg !10863

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10841, metadata !DIExpression()), !dbg !10854
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10864, metadata !DIExpression()) #23, !dbg !10871
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10873, !srcloc !10879
  call void @llvm.dbg.value(metadata i32 undef, metadata !10876, metadata !DIExpression()) #23, !dbg !10880
  call void @llvm.dbg.value(metadata i32 undef, metadata !10877, metadata !DIExpression()) #23, !dbg !10880
  call void @llvm.dbg.value(metadata i32 undef, metadata !10870, metadata !DIExpression()) #23, !dbg !10871
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10881
  br i1 %21, label %23, label %22, !dbg !10884

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 148) #24, !dbg !10885
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.149, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10885
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 148) #24, !dbg !10885
  unreachable, !dbg !10885

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10873
  call void @llvm.dbg.value(metadata i32 %24, metadata !10876, metadata !DIExpression()) #23, !dbg !10880
  call void @llvm.dbg.value(metadata i32 %24, metadata !10870, metadata !DIExpression()) #23, !dbg !10871
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10887
  call void @llvm.dbg.value(metadata i32 %24, metadata !10847, metadata !DIExpression()), !dbg !10854
  %25 = tail call fastcc i32 @elapsed() #25, !dbg !10888
  call void @llvm.dbg.value(metadata i32 %25, metadata !10852, metadata !DIExpression()), !dbg !10854
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10889
  call void @llvm.dbg.value(metadata i32 %26, metadata !10844, metadata !DIExpression()), !dbg !10854
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10890
  %28 = add i32 %27, %25, !dbg !10890
  store i32 %28, i32* @cycle_count, align 4, !dbg !10890
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10891
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10892
  %30 = sub i32 %28, %29, !dbg !10893
  call void @llvm.dbg.value(metadata i32 %30, metadata !10853, metadata !DIExpression()), !dbg !10854
  %31 = icmp slt i32 %30, 0, !dbg !10894
  br i1 %31, label %41, label %32, !dbg !10896

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10843, metadata !DIExpression()), !dbg !10854
  call void @llvm.dbg.value(metadata i32 undef, metadata !10843, metadata !DIExpression()), !dbg !10854
  %33 = add nuw i32 %19, %30, !dbg !10897
  %34 = urem i32 %33, 8400, !dbg !10899
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10843, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10854
  %35 = sub nuw nsw i32 %19, %34, !dbg !10900
  call void @llvm.dbg.value(metadata i32 %35, metadata !10843, metadata !DIExpression()), !dbg !10854
  %36 = icmp ugt i32 %35, 1024, !dbg !10901
  br i1 %36, label %37, label %39, !dbg !10901

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10843, metadata !DIExpression()), !dbg !10854
  %38 = icmp ugt i32 %35, 16766400, !dbg !10902
  br i1 %38, label %41, label %39, !dbg !10904

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10905
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10906
  call void @llvm.dbg.value(metadata i32 %43, metadata !10845, metadata !DIExpression()), !dbg !10854
  %44 = add nsw i32 %42, -1, !dbg !10907
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10908
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10909
  %45 = icmp ult i32 %26, %43, !dbg !10910
  br i1 %45, label %46, label %51, !dbg !10912

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10913
  %48 = add i32 %26, %9, !dbg !10915
  %49 = sub i32 %48, %43, !dbg !10916
  %50 = add i32 %49, %47, !dbg !10913
  br label %55, !dbg !10917

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10918
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10920
  %54 = add i32 %52, %53, !dbg !10920
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10921
  store i32 %56, i32* @cycle_count, align 4, !dbg !10921
  call void @llvm.dbg.value(metadata i32 undef, metadata !10922, metadata !DIExpression()) #23, !dbg !10928
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10927, metadata !DIExpression()) #23, !dbg !10928
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10930
  br i1 %57, label %59, label %58, !dbg !10933

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 194) #24, !dbg !10934
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.151, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10934
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 194) #24, !dbg !10934
  unreachable, !dbg !10934

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10922, metadata !DIExpression()) #23, !dbg !10928
  call void @llvm.dbg.value(metadata i32 %24, metadata !10936, metadata !DIExpression()) #23, !dbg !10939
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10941, !srcloc !10942
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10943
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10944 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10864, metadata !DIExpression()) #23, !dbg !10948
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10950, !srcloc !10879
  call void @llvm.dbg.value(metadata i32 undef, metadata !10876, metadata !DIExpression()) #23, !dbg !10952
  call void @llvm.dbg.value(metadata i32 undef, metadata !10877, metadata !DIExpression()) #23, !dbg !10952
  call void @llvm.dbg.value(metadata i32 undef, metadata !10870, metadata !DIExpression()) #23, !dbg !10948
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10953
  br i1 %2, label %4, label %3, !dbg !10954

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 148) #24, !dbg !10955
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.149, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10955
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 148) #24, !dbg !10955
  unreachable, !dbg !10955

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10876, metadata !DIExpression()) #23, !dbg !10952
  call void @llvm.dbg.value(metadata i32 undef, metadata !10870, metadata !DIExpression()) #23, !dbg !10948
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10956
  call void @llvm.dbg.value(metadata i32 undef, metadata !10946, metadata !DIExpression()), !dbg !10957
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10958
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10959
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10960
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10947, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10957
  call void @llvm.dbg.value(metadata i32 undef, metadata !10922, metadata !DIExpression()) #23, !dbg !10961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10927, metadata !DIExpression()) #23, !dbg !10961
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10963
  br i1 %8, label %10, label %9, !dbg !10964

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 194) #24, !dbg !10965
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.151, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10965
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 194) #24, !dbg !10965
  unreachable, !dbg !10965

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10966
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10947, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10957
  %12 = sub i32 %11, %7, !dbg !10967
  call void @llvm.dbg.value(metadata i32 %12, metadata !10947, metadata !DIExpression()), !dbg !10957
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10950
  call void @llvm.dbg.value(metadata i32 %13, metadata !10876, metadata !DIExpression()) #23, !dbg !10952
  call void @llvm.dbg.value(metadata i32 %13, metadata !10870, metadata !DIExpression()) #23, !dbg !10948
  call void @llvm.dbg.value(metadata i32 %13, metadata !10946, metadata !DIExpression()), !dbg !10957
  call void @llvm.dbg.value(metadata i32 undef, metadata !10922, metadata !DIExpression()) #23, !dbg !10961
  call void @llvm.dbg.value(metadata i32 undef, metadata !10936, metadata !DIExpression()) #23, !dbg !10968
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10970, !srcloc !10942
  %14 = udiv i32 %12, 8400, !dbg !10971
  ret i32 %14, !dbg !10972
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10973 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10864, metadata !DIExpression()) #23, !dbg !10977
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10979, !srcloc !10879
  call void @llvm.dbg.value(metadata i32 undef, metadata !10876, metadata !DIExpression()) #23, !dbg !10981
  call void @llvm.dbg.value(metadata i32 undef, metadata !10877, metadata !DIExpression()) #23, !dbg !10981
  call void @llvm.dbg.value(metadata i32 undef, metadata !10870, metadata !DIExpression()) #23, !dbg !10977
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10982
  br i1 %2, label %4, label %3, !dbg !10983

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 148) #24, !dbg !10984
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.149, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10984
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 148) #24, !dbg !10984
  unreachable, !dbg !10984

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10876, metadata !DIExpression()) #23, !dbg !10981
  call void @llvm.dbg.value(metadata i32 undef, metadata !10870, metadata !DIExpression()) #23, !dbg !10977
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10985
  call void @llvm.dbg.value(metadata i32 undef, metadata !10975, metadata !DIExpression()), !dbg !10986
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !10987
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10988
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10976, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10986
  call void @llvm.dbg.value(metadata i32 undef, metadata !10922, metadata !DIExpression()) #23, !dbg !10989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10927, metadata !DIExpression()) #23, !dbg !10989
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10991
  br i1 %7, label %9, label %8, !dbg !10992

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 194) #24, !dbg !10993
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.151, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10993
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 194) #24, !dbg !10993
  unreachable, !dbg !10993

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10994
  call void @llvm.dbg.value(metadata i32 %10, metadata !10976, metadata !DIExpression()), !dbg !10986
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10979
  call void @llvm.dbg.value(metadata i32 %11, metadata !10876, metadata !DIExpression()) #23, !dbg !10981
  call void @llvm.dbg.value(metadata i32 %11, metadata !10870, metadata !DIExpression()) #23, !dbg !10977
  call void @llvm.dbg.value(metadata i32 %11, metadata !10975, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 undef, metadata !10922, metadata !DIExpression()) #23, !dbg !10989
  call void @llvm.dbg.value(metadata i32 undef, metadata !10936, metadata !DIExpression()) #23, !dbg !10995
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10997, !srcloc !10942
  ret i32 %10, !dbg !10998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10999 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11000
  %2 = icmp eq i32 %1, -16777216, !dbg !11002
  br i1 %2, label %3, label %6, !dbg !11003

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11004
  %5 = or i32 %4, 1, !dbg !11004
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11004
  br label %6, !dbg !11006

6:                                                ; preds = %3, %0
  ret void, !dbg !11007
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11008 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11009
  %2 = and i32 %1, -2, !dbg !11009
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11009
  ret void, !dbg !11010
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11011 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11037, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata i8 %1, metadata !11038, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11039, metadata !DIExpression()), !dbg !11040
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11041
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11041
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11040
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11042
  %8 = load i8, i8* %6, align 4, !dbg !11043
  %9 = zext i8 %8 to i32, !dbg !11044
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11044
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11045
  br i1 %11, label %18, label %24, !dbg !11046

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11040
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11042
  %14 = load i8, i8* %6, align 4, !dbg !11043
  %15 = zext i8 %14 to i32, !dbg !11044
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11044
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11045
  br i1 %17, label %18, label %24, !dbg !11046, !llvm.loop !11047

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11049
  %21 = load i8, i8* %20, align 1, !dbg !11049
  %22 = icmp eq i8 %21, %1, !dbg !11052
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11053
  br i1 %22, label %24, label %12, !dbg !11054

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11040
  ret i32 %25, !dbg !11055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11056 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11067, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i8 %1, metadata !11068, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i32 %2, metadata !11069, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i32 0, metadata !11072, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i32 0, metadata !11073, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i8 0, metadata !11074, metadata !DIExpression()), !dbg !11084
  %4 = icmp eq i8 %1, 0, !dbg !11085
  br i1 %4, label %35, label %5, !dbg !11086

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11085
  br label %9, !dbg !11086

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11074, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i32 %29, metadata !11072, metadata !DIExpression()), !dbg !11083
  %8 = icmp eq i32 %34, %6, !dbg !11085
  br i1 %8, label %35, label %9, !dbg !11086, !llvm.loop !11087

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11074, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i32 %11, metadata !11072, metadata !DIExpression()), !dbg !11083
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11089
  %13 = load i32, i32* %12, align 4, !dbg !11089
  call void @llvm.dbg.value(metadata i32 %13, metadata !11071, metadata !DIExpression()), !dbg !11083
  %14 = and i32 %13, 31, !dbg !11090
  %15 = icmp ult i32 %14, 16, !dbg !11091
  br i1 %15, label %16, label %20, !dbg !11092

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11093
  %18 = load i32, i32* %17, align 4, !dbg !11093
  %19 = or i32 %18, 32, !dbg !11095
  call void @llvm.dbg.value(metadata i32 %19, metadata !11072, metadata !DIExpression()), !dbg !11083
  br label %28, !dbg !11096

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11097

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11098
  %23 = load i32, i32* %22, align 4, !dbg !11098
  call void @llvm.dbg.value(metadata i32 %23, metadata !11076, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11099
  %24 = lshr i32 %23, 7, !dbg !11100
  %25 = and i32 %24, 16, !dbg !11100
  %26 = or i32 %25, %23, !dbg !11100
  call void @llvm.dbg.value(metadata i32 %26, metadata !11072, metadata !DIExpression()), !dbg !11083
  br label %28, !dbg !11101

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11083
  call void @llvm.dbg.value(metadata i32 %29, metadata !11072, metadata !DIExpression()), !dbg !11083
  %30 = lshr i32 %13, 5, !dbg !11102
  %31 = and i32 %30, 255, !dbg !11102
  call void @llvm.dbg.value(metadata i32 %31, metadata !11070, metadata !DIExpression()), !dbg !11083
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !11103
  call void @llvm.dbg.value(metadata i32 %32, metadata !11073, metadata !DIExpression()), !dbg !11083
  %33 = icmp slt i32 %32, 0, !dbg !11104
  %34 = add nuw nsw i32 %10, 1, !dbg !11106
  call void @llvm.dbg.value(metadata i32 %34, metadata !11074, metadata !DIExpression()), !dbg !11084
  br i1 %33, label %35, label %7, !dbg !11107

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11113, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.value(metadata i32 %1, metadata !11114, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.value(metadata i32 %2, metadata !11115, metadata !DIExpression()), !dbg !11117
  %4 = icmp ugt i32 %0, 175, !dbg !11118
  br i1 %4, label %16, label %5, !dbg !11120

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11121
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11122
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11122
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11116, metadata !DIExpression()), !dbg !11117
  %9 = add nsw i32 %6, -8, !dbg !11123
  %10 = icmp ult i32 %9, 3, !dbg !11123
  br i1 %10, label %16, label %11, !dbg !11125

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.158(%struct.device* noundef %8) #25, !dbg !11126
  br i1 %12, label %13, label %16, !dbg !11127

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11128
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #24, !dbg !11129
  br label %16, !dbg !11130

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11117
  ret i32 %17, !dbg !11131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.158(%struct.device* noundef %0) unnamed_addr #1 !dbg !11132 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11136, metadata !DIExpression()), !dbg !11137
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11138, !srcloc !11140
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.159(%struct.device* noundef %0) #25, !dbg !11141
  ret i1 %2, !dbg !11142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.159(%struct.device* noundef %0) unnamed_addr #1 !dbg !11143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11145, metadata !DIExpression()), !dbg !11146
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !11147
  ret i1 %2, !dbg !11148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #6 !dbg !11149 {
  ret void, !dbg !11150
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #5 !dbg !11151 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11153, metadata !DIExpression()), !dbg !11158
  call void @llvm.dbg.value(metadata i32 0, metadata !11154, metadata !DIExpression()), !dbg !11158
  call void @llvm.dbg.value(metadata i32 2, metadata !11155, metadata !DIExpression()), !dbg !11158
  call void @llvm.dbg.value(metadata i32 0, metadata !11156, metadata !DIExpression()), !dbg !11158
  call void @llvm.dbg.value(metadata i32 2, metadata !11157, metadata !DIExpression()), !dbg !11158
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11159
  %2 = and i32 %1, 12, !dbg !11160
  call void @llvm.dbg.value(metadata i32 %2, metadata !11153, metadata !DIExpression()), !dbg !11158
  %3 = icmp eq i32 %2, 8, !dbg !11161
  br i1 %3, label %4, label %18, !dbg !11161

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11162
  call void @llvm.dbg.value(metadata i32 %5, metadata !11156, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11158
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11164
  %7 = and i32 %6, 63, !dbg !11165
  call void @llvm.dbg.value(metadata i32 %7, metadata !11157, metadata !DIExpression()), !dbg !11158
  %8 = udiv i32 16000000, %7, !dbg !11166
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11166
  %10 = lshr i32 %9, 6, !dbg !11166
  %11 = and i32 %10, 511, !dbg !11166
  %12 = mul i32 %11, %8, !dbg !11166
  call void @llvm.dbg.value(metadata i32 %12, metadata !11154, metadata !DIExpression()), !dbg !11158
  call void @llvm.dbg.value(metadata i32 %12, metadata !11154, metadata !DIExpression()), !dbg !11158
  call void @llvm.dbg.value(metadata i32 %12, metadata !11154, metadata !DIExpression()), !dbg !11158
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11168
  %14 = lshr i32 %13, 15, !dbg !11169
  %15 = and i32 %14, 6, !dbg !11169
  %16 = add nuw nsw i32 %15, 2, !dbg !11169
  call void @llvm.dbg.value(metadata i32 %16, metadata !11155, metadata !DIExpression()), !dbg !11158
  %17 = udiv i32 %12, %16, !dbg !11170
  br label %18, !dbg !11171

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11172
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11173
  %21 = lshr i32 %20, 4, !dbg !11174
  %22 = and i32 %21, 15, !dbg !11174
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11175
  %24 = load i8, i8* %23, align 1, !dbg !11175
  %25 = zext i8 %24 to i32, !dbg !11175
  call void @llvm.dbg.value(metadata i32 %25, metadata !11153, metadata !DIExpression()), !dbg !11158
  %26 = lshr i32 %19, %25, !dbg !11176
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11176
  ret void, !dbg !11177
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11178 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11220, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.value(metadata i32 0, metadata !11221, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.value(metadata i32 0, metadata !11222, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.value(metadata i32 0, metadata !11223, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.value(metadata i32 0, metadata !11224, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.value(metadata i32 0, metadata !11225, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.value(metadata i32 0, metadata !11226, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.value(metadata i32 0, metadata !11227, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.value(metadata i32 0, metadata !11228, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.value(metadata i32 0, metadata !11229, metadata !DIExpression()), !dbg !11234
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !11235
  %4 = load i32, i32* %3, align 4, !dbg !11235
  %5 = and i32 %4, 1, !dbg !11237
  %6 = icmp eq i32 %5, 0, !dbg !11238
  br i1 %6, label %17, label %7, !dbg !11239

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11240
  %9 = and i32 %8, -100663297, !dbg !11240
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11240
  %11 = load i32, i32* %10, align 4, !dbg !11240
  %12 = or i32 %9, %11, !dbg !11240
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11240
  %13 = load i32, i32* %10, align 4, !dbg !11242
  %14 = icmp eq i32 %13, 0, !dbg !11244
  %15 = zext i1 %14 to i32, !dbg !11245
  %16 = load i32, i32* %3, align 4, !dbg !11246
  br label %17, !dbg !11245

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !11246
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !11234
  call void @llvm.dbg.value(metadata i32 %19, metadata !11228, metadata !DIExpression()), !dbg !11234
  %20 = and i32 %18, 2, !dbg !11248
  %21 = icmp eq i32 %20, 0, !dbg !11249
  br i1 %21, label %32, label %22, !dbg !11250

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11251
  %24 = and i32 %23, -402653185, !dbg !11251
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11251
  %26 = load i32, i32* %25, align 4, !dbg !11251
  %27 = or i32 %24, %26, !dbg !11251
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11251
  %28 = load i32, i32* %25, align 4, !dbg !11253
  %29 = icmp eq i32 %28, 0, !dbg !11255
  %30 = select i1 %29, i32 1, i32 %19, !dbg !11256
  %31 = load i32, i32* %3, align 4, !dbg !11257
  br label %32, !dbg !11256

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !11257
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !11234
  call void @llvm.dbg.value(metadata i32 %34, metadata !11228, metadata !DIExpression()), !dbg !11234
  %35 = and i32 %33, 4, !dbg !11259
  %36 = icmp eq i32 %35, 0, !dbg !11260
  br i1 %36, label %49, label %37, !dbg !11261

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11262
  %39 = and i32 %38, -3145729, !dbg !11262
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11262
  %41 = load i32, i32* %40, align 4, !dbg !11262
  %42 = or i32 %39, %41, !dbg !11262
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11262
  %43 = load i32, i32* %40, align 4, !dbg !11264
  %44 = icmp eq i32 %43, 1048576, !dbg !11266
  %45 = select i1 %44, i32 1, i32 %34, !dbg !11267
  call void @llvm.dbg.value(metadata i32 %45, metadata !11228, metadata !DIExpression()), !dbg !11234
  %46 = icmp eq i32 %43, 0, !dbg !11268
  %47 = zext i1 %46 to i32, !dbg !11270
  %48 = load i32, i32* %3, align 4, !dbg !11271
  br label %49, !dbg !11270

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !11271
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !11234
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !11234
  call void @llvm.dbg.value(metadata i32 %52, metadata !11229, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.value(metadata i32 %51, metadata !11228, metadata !DIExpression()), !dbg !11234
  %53 = and i32 %50, 8, !dbg !11273
  %54 = icmp eq i32 %53, 0, !dbg !11274
  br i1 %54, label %67, label %55, !dbg !11275

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11276
  %57 = and i32 %56, -12582913, !dbg !11276
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11276
  %59 = load i32, i32* %58, align 4, !dbg !11276
  %60 = or i32 %57, %59, !dbg !11276
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11276
  %61 = load i32, i32* %58, align 4, !dbg !11278
  %62 = icmp eq i32 %61, 4194304, !dbg !11280
  %63 = select i1 %62, i32 1, i32 %51, !dbg !11281
  call void @llvm.dbg.value(metadata i32 %63, metadata !11228, metadata !DIExpression()), !dbg !11234
  %64 = icmp eq i32 %61, 0, !dbg !11282
  %65 = select i1 %64, i32 1, i32 %52, !dbg !11284
  %66 = load i32, i32* %3, align 4, !dbg !11285
  br label %67, !dbg !11284

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !11285
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !11234
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !11234
  call void @llvm.dbg.value(metadata i32 %70, metadata !11229, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.value(metadata i32 %69, metadata !11228, metadata !DIExpression()), !dbg !11234
  %71 = and i32 %68, 32, !dbg !11286
  %72 = icmp eq i32 %71, 0, !dbg !11287
  br i1 %72, label %131, label %73, !dbg !11288

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !11289
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !11289
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11230, metadata !DIExpression()), !dbg !11289
  store volatile i32 0, i32* %2, align 4, !dbg !11289
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11289
  %76 = or i32 %75, 268435456, !dbg !11289
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11289
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11289
  %78 = and i32 %77, 268435456, !dbg !11289
  store volatile i32 %78, i32* %2, align 4, !dbg !11289
  %79 = load volatile i32, i32* %2, align 4, !dbg !11289
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !11290
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11291
  %81 = or i32 %80, 256, !dbg !11291
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11291
  %82 = tail call i32 @HAL_GetTick() #24, !dbg !11292
  call void @llvm.dbg.value(metadata i32 %82, metadata !11221, metadata !DIExpression()), !dbg !11234
  br label %83, !dbg !11293

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11294
  %85 = and i32 %84, 256, !dbg !11295
  %86 = icmp eq i32 %85, 0, !dbg !11296
  br i1 %86, label %87, label %91, !dbg !11293

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #24, !dbg !11297
  %89 = sub i32 %88, %82, !dbg !11300
  %90 = icmp ugt i32 %89, 2, !dbg !11301
  br i1 %90, label %439, label %83, !dbg !11302, !llvm.loop !11303

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11305
  %93 = and i32 %92, 768, !dbg !11306
  call void @llvm.dbg.value(metadata i32 %93, metadata !11222, metadata !DIExpression()), !dbg !11234
  %94 = icmp eq i32 %93, 0, !dbg !11307
  br i1 %94, label %116, label %95, !dbg !11309

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11310
  %97 = load i32, i32* %96, align 4, !dbg !11310
  %98 = and i32 %97, 768, !dbg !11311
  %99 = icmp eq i32 %93, %98, !dbg !11312
  br i1 %99, label %116, label %100, !dbg !11313

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11314
  %102 = and i32 %101, -769, !dbg !11316
  call void @llvm.dbg.value(metadata i32 %102, metadata !11222, metadata !DIExpression()), !dbg !11234
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !11317
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !11318
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11319
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11320
  %104 = and i32 %103, 1, !dbg !11320
  %105 = icmp eq i32 %104, 0, !dbg !11320
  br i1 %105, label %116, label %106, !dbg !11322

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #24, !dbg !11323
  call void @llvm.dbg.value(metadata i32 %107, metadata !11221, metadata !DIExpression()), !dbg !11234
  br label %108, !dbg !11325

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11326
  %110 = and i32 %109, 2, !dbg !11327
  %111 = icmp eq i32 %110, 0, !dbg !11327
  br i1 %111, label %112, label %116, !dbg !11325

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #24, !dbg !11328
  %114 = sub i32 %113, %107, !dbg !11331
  %115 = icmp ugt i32 %114, 5000, !dbg !11332
  br i1 %115, label %439, label %108, !dbg !11333, !llvm.loop !11334

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11336
  %118 = load i32, i32* %117, align 4, !dbg !11336
  %119 = and i32 %118, 768, !dbg !11336
  %120 = icmp eq i32 %119, 768, !dbg !11336
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11336
  %122 = and i32 %121, -2031617, !dbg !11336
  %123 = and i32 %118, 268434687, !dbg !11336
  %124 = select i1 %120, i32 %123, i32 0, !dbg !11336
  %125 = or i32 %122, %124, !dbg !11336
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11336
  %126 = load i32, i32* %117, align 4, !dbg !11336
  %127 = and i32 %126, 4095, !dbg !11336
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11336
  %129 = or i32 %128, %127, !dbg !11336
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11336
  %130 = load i32, i32* %3, align 4, !dbg !11338
  br label %131, !dbg !11340

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !11338
  %133 = and i32 %132, 16, !dbg !11341
  %134 = icmp eq i32 %133, 0, !dbg !11342
  br i1 %134, label %140, label %135, !dbg !11343

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11344
  %137 = load i8, i8* %136, align 4, !dbg !11344
  %138 = zext i8 %137 to i32, !dbg !11344
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !11344
  %139 = load i32, i32* %3, align 4, !dbg !11346
  br label %140, !dbg !11348

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !11346
  %142 = and i32 %141, 128, !dbg !11349
  %143 = icmp eq i32 %142, 0, !dbg !11350
  br i1 %143, label %151, label %144, !dbg !11351

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11352
  %146 = and i32 %145, -12582913, !dbg !11352
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11352
  %148 = load i32, i32* %147, align 4, !dbg !11352
  %149 = or i32 %146, %148, !dbg !11352
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11352
  %150 = load i32, i32* %3, align 4, !dbg !11354
  br label %151, !dbg !11356

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !11354
  %153 = and i32 %152, 64, !dbg !11357
  %154 = icmp eq i32 %153, 0, !dbg !11358
  br i1 %154, label %162, label %155, !dbg !11359

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11360
  %157 = and i32 %156, -67108865, !dbg !11360
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11360
  %159 = load i32, i32* %158, align 4, !dbg !11360
  %160 = or i32 %157, %159, !dbg !11360
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11360
  %161 = load i32, i32* %3, align 4, !dbg !11362
  br label %162, !dbg !11364

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !11362
  %164 = and i32 %163, 256, !dbg !11365
  %165 = icmp eq i32 %164, 0, !dbg !11366
  br i1 %165, label %176, label %166, !dbg !11367

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11368
  %168 = and i32 %167, -134217729, !dbg !11368
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11368
  %170 = load i32, i32* %169, align 4, !dbg !11368
  %171 = or i32 %168, %170, !dbg !11368
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11368
  %172 = load i32, i32* %169, align 4, !dbg !11370
  %173 = icmp eq i32 %172, 134217728, !dbg !11372
  %174 = select i1 %173, i32 1, i32 %70, !dbg !11373
  %175 = load i32, i32* %3, align 4, !dbg !11374
  br label %176, !dbg !11373

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !11374
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !11234
  call void @llvm.dbg.value(metadata i32 %178, metadata !11229, metadata !DIExpression()), !dbg !11234
  %179 = and i32 %177, 512, !dbg !11376
  %180 = icmp eq i32 %179, 0, !dbg !11377
  br i1 %180, label %188, label %181, !dbg !11378

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11379
  %183 = and i32 %182, -268435457, !dbg !11379
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11379
  %185 = load i32, i32* %184, align 4, !dbg !11379
  %186 = or i32 %183, %185, !dbg !11379
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11379
  %187 = load i32, i32* %3, align 4, !dbg !11381
  br label %188, !dbg !11383

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !11381
  %190 = and i32 %189, 1024, !dbg !11384
  %191 = icmp eq i32 %190, 0, !dbg !11385
  br i1 %191, label %204, label %192, !dbg !11386

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11387
  %194 = and i32 %193, -536870913, !dbg !11387
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11387
  %196 = load i32, i32* %195, align 4, !dbg !11387
  %197 = or i32 %194, %196, !dbg !11387
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11387
  %198 = load i32, i32* %195, align 4, !dbg !11389
  %199 = icmp eq i32 %198, 536870912, !dbg !11391
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !11392
  call void @llvm.dbg.value(metadata i32 %69, metadata !11228, metadata !DIExpression()), !dbg !11234
  br i1 %201, label %209, label %202, !dbg !11392

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !11393
  br label %206, !dbg !11392

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !11228, metadata !DIExpression()), !dbg !11234
  %205 = icmp eq i32 %69, 1, !dbg !11395
  br i1 %205, label %209, label %206, !dbg !11396

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !11393
  %208 = icmp eq i32 %207, 2048, !dbg !11397
  br i1 %208, label %209, label %356, !dbg !11398

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11399
  %210 = tail call i32 @HAL_GetTick() #24, !dbg !11401
  call void @llvm.dbg.value(metadata i32 %210, metadata !11221, metadata !DIExpression()), !dbg !11234
  br label %211, !dbg !11402

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11403
  %213 = and i32 %212, 134217728, !dbg !11403
  %214 = icmp eq i32 %213, 0, !dbg !11403
  br i1 %214, label %219, label %215, !dbg !11402

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #24, !dbg !11404
  %217 = sub i32 %216, %210, !dbg !11407
  %218 = icmp ugt i32 %217, 2, !dbg !11408
  br i1 %218, label %439, label %211, !dbg !11409, !llvm.loop !11410

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !11412
  %221 = and i32 %220, 1, !dbg !11414
  %222 = icmp eq i32 %221, 0, !dbg !11415
  br i1 %222, label %227, label %223, !dbg !11416

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11417
  %225 = load i32, i32* %224, align 4, !dbg !11417
  %226 = icmp eq i32 %225, 0, !dbg !11418
  br i1 %226, label %234, label %227, !dbg !11419

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !11420
  %229 = icmp eq i32 %228, 0, !dbg !11421
  br i1 %229, label %252, label %230, !dbg !11422

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11423
  %232 = load i32, i32* %231, align 4, !dbg !11423
  %233 = icmp eq i32 %232, 0, !dbg !11424
  br i1 %233, label %234, label %252, !dbg !11425

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11426
  %236 = and i32 %235, 196608, !dbg !11428
  call void @llvm.dbg.value(metadata i32 %236, metadata !11223, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11234
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11429
  %238 = and i32 %237, 251658240, !dbg !11430
  call void @llvm.dbg.value(metadata i32 %238, metadata !11224, metadata !DIExpression()), !dbg !11234
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11431
  %240 = load i32, i32* %239, align 4, !dbg !11431
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11431
  %242 = load i32, i32* %241, align 4, !dbg !11431
  %243 = shl i32 %242, 6, !dbg !11431
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11431
  %245 = load i32, i32* %244, align 4, !dbg !11431
  %246 = shl i32 %245, 28, !dbg !11431
  %247 = or i32 %240, %236, !dbg !11431
  %248 = or i32 %247, %238, !dbg !11431
  %249 = or i32 %248, %243, !dbg !11431
  %250 = or i32 %249, %246, !dbg !11431
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11431
  %251 = load i32, i32* %3, align 4, !dbg !11432
  br label %252, !dbg !11434

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !11432
  %254 = and i32 %253, 4, !dbg !11435
  %255 = icmp eq i32 %254, 0, !dbg !11436
  br i1 %255, label %260, label %256, !dbg !11437

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11438
  %258 = load i32, i32* %257, align 4, !dbg !11438
  %259 = icmp eq i32 %258, 1048576, !dbg !11439
  br i1 %259, label %267, label %260, !dbg !11440

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !11441
  %262 = icmp eq i32 %261, 0, !dbg !11442
  br i1 %262, label %291, label %263, !dbg !11443

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11444
  %265 = load i32, i32* %264, align 4, !dbg !11444
  %266 = icmp eq i32 %265, 4194304, !dbg !11445
  br i1 %266, label %267, label %291, !dbg !11446

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11447
  %269 = and i32 %268, 196608, !dbg !11449
  call void @llvm.dbg.value(metadata i32 %269, metadata !11223, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11234
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11450
  %271 = and i32 %270, 1879048192, !dbg !11451
  call void @llvm.dbg.value(metadata i32 %271, metadata !11225, metadata !DIExpression()), !dbg !11234
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11452
  %273 = load i32, i32* %272, align 4, !dbg !11452
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11452
  %275 = load i32, i32* %274, align 4, !dbg !11452
  %276 = shl i32 %275, 6, !dbg !11452
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11452
  %278 = load i32, i32* %277, align 4, !dbg !11452
  %279 = shl i32 %278, 24, !dbg !11452
  %280 = or i32 %273, %269, !dbg !11452
  %281 = or i32 %280, %271, !dbg !11452
  %282 = or i32 %281, %276, !dbg !11452
  %283 = or i32 %282, %279, !dbg !11452
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11452
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11453
  %285 = and i32 %284, -32, !dbg !11453
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11453
  %287 = load i32, i32* %286, align 4, !dbg !11453
  %288 = add i32 %287, -1, !dbg !11453
  %289 = or i32 %288, %285, !dbg !11453
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11453
  %290 = load i32, i32* %3, align 4, !dbg !11454
  br label %291, !dbg !11456

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !11454
  %293 = and i32 %292, 1024, !dbg !11457
  %294 = icmp eq i32 %293, 0, !dbg !11458
  br i1 %294, label %321, label %295, !dbg !11459

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11460
  %297 = load i32, i32* %296, align 4, !dbg !11460
  %298 = icmp eq i32 %297, 536870912, !dbg !11461
  br i1 %298, label %299, label %321, !dbg !11462

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11463
  call void @llvm.dbg.value(metadata i32 %300, metadata !11224, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11234
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11465
  %302 = and i32 %301, 1879048192, !dbg !11466
  call void @llvm.dbg.value(metadata i32 %302, metadata !11225, metadata !DIExpression()), !dbg !11234
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11467
  %304 = load i32, i32* %303, align 4, !dbg !11467
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11467
  %306 = load i32, i32* %305, align 4, !dbg !11467
  %307 = shl i32 %306, 6, !dbg !11467
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11467
  %309 = load i32, i32* %308, align 4, !dbg !11467
  %310 = shl i32 %309, 15, !dbg !11467
  %311 = add i32 %310, -65536, !dbg !11467
  %312 = and i32 %311, -65536, !dbg !11467
  %313 = shl i32 %300, 9, !dbg !11467
  %314 = and i32 %313, 100663296, !dbg !11467
  %315 = add nuw nsw i32 %314, 33554432, !dbg !11467
  %316 = or i32 %302, %304, !dbg !11467
  %317 = or i32 %316, %315, !dbg !11467
  %318 = or i32 %317, %307, !dbg !11467
  %319 = or i32 %318, %312, !dbg !11467
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11467
  %320 = load i32, i32* %3, align 4, !dbg !11468
  br label %321, !dbg !11470

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !11468
  %323 = and i32 %322, 2048, !dbg !11471
  %324 = icmp eq i32 %323, 0, !dbg !11472
  br i1 %324, label %346, label %325, !dbg !11473

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11474
  %327 = load i32, i32* %326, align 4, !dbg !11474
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11474
  %329 = load i32, i32* %328, align 4, !dbg !11474
  %330 = shl i32 %329, 6, !dbg !11474
  %331 = or i32 %330, %327, !dbg !11474
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11474
  %333 = load i32, i32* %332, align 4, !dbg !11474
  %334 = shl i32 %333, 15, !dbg !11474
  %335 = add i32 %334, -65536, !dbg !11474
  %336 = and i32 %335, -65536, !dbg !11474
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11474
  %338 = load i32, i32* %337, align 4, !dbg !11474
  %339 = shl i32 %338, 24, !dbg !11474
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11474
  %341 = load i32, i32* %340, align 4, !dbg !11474
  %342 = shl i32 %341, 28, !dbg !11474
  %343 = or i32 %331, %339, !dbg !11474
  %344 = or i32 %343, %336, !dbg !11474
  %345 = or i32 %344, %342, !dbg !11474
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11474
  br label %346, !dbg !11476

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11477
  %347 = tail call i32 @HAL_GetTick() #24, !dbg !11478
  call void @llvm.dbg.value(metadata i32 %347, metadata !11221, metadata !DIExpression()), !dbg !11234
  br label %348, !dbg !11479

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11480
  %350 = and i32 %349, 134217728, !dbg !11481
  %351 = icmp eq i32 %350, 0, !dbg !11481
  br i1 %351, label %352, label %356, !dbg !11479

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #24, !dbg !11482
  %354 = sub i32 %353, %347, !dbg !11485
  %355 = icmp ugt i32 %354, 2, !dbg !11486
  br i1 %355, label %439, label %348, !dbg !11487, !llvm.loop !11488

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !11490
  br i1 %357, label %358, label %439, !dbg !11492

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11493
  %359 = tail call i32 @HAL_GetTick() #24, !dbg !11495
  call void @llvm.dbg.value(metadata i32 %359, metadata !11221, metadata !DIExpression()), !dbg !11234
  br label %360, !dbg !11496

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11497
  %362 = and i32 %361, 536870912, !dbg !11497
  %363 = icmp eq i32 %362, 0, !dbg !11497
  br i1 %363, label %368, label %364, !dbg !11496

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #24, !dbg !11498
  %366 = sub i32 %365, %359, !dbg !11501
  %367 = icmp ugt i32 %366, 2, !dbg !11502
  br i1 %367, label %439, label %360, !dbg !11503, !llvm.loop !11504

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !11506
  %370 = and i32 %369, 4, !dbg !11508
  %371 = icmp eq i32 %370, 0, !dbg !11509
  br i1 %371, label %376, label %372, !dbg !11510

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11511
  %374 = load i32, i32* %373, align 4, !dbg !11511
  %375 = icmp eq i32 %374, 0, !dbg !11512
  br i1 %375, label %383, label %376, !dbg !11513

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !11514
  %378 = icmp eq i32 %377, 0, !dbg !11515
  br i1 %378, label %405, label %379, !dbg !11516

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11517
  %381 = load i32, i32* %380, align 4, !dbg !11517
  %382 = icmp eq i32 %381, 0, !dbg !11518
  br i1 %382, label %383, label %405, !dbg !11519

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11520
  %385 = and i32 %384, 196608, !dbg !11522
  call void @llvm.dbg.value(metadata i32 %385, metadata !11226, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11234
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11523
  %387 = load i32, i32* %386, align 4, !dbg !11523
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11523
  %389 = load i32, i32* %388, align 4, !dbg !11523
  %390 = shl i32 %389, 6, !dbg !11523
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11523
  %392 = load i32, i32* %391, align 4, !dbg !11523
  %393 = shl i32 %392, 24, !dbg !11523
  %394 = or i32 %385, %387, !dbg !11523
  %395 = or i32 %394, %390, !dbg !11523
  %396 = or i32 %395, %393, !dbg !11523
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11523
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11524
  %398 = and i32 %397, -7937, !dbg !11524
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11524
  %400 = load i32, i32* %399, align 4, !dbg !11524
  %401 = shl i32 %400, 8, !dbg !11524
  %402 = add i32 %401, -256, !dbg !11524
  %403 = or i32 %402, %398, !dbg !11524
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11524
  %404 = load i32, i32* %3, align 4, !dbg !11525
  br label %405, !dbg !11527

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !11525
  %407 = and i32 %406, 256, !dbg !11528
  %408 = icmp eq i32 %407, 0, !dbg !11529
  br i1 %408, label %429, label %409, !dbg !11530

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11531
  %411 = load i32, i32* %410, align 4, !dbg !11531
  %412 = icmp eq i32 %411, 134217728, !dbg !11532
  br i1 %412, label %413, label %429, !dbg !11533

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11534
  %415 = and i32 %414, 251658240, !dbg !11536
  call void @llvm.dbg.value(metadata i32 %415, metadata !11227, metadata !DIExpression()), !dbg !11234
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11537
  %417 = load i32, i32* %416, align 4, !dbg !11537
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11537
  %419 = load i32, i32* %418, align 4, !dbg !11537
  %420 = shl i32 %419, 6, !dbg !11537
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11537
  %422 = load i32, i32* %421, align 4, !dbg !11537
  %423 = shl i32 %422, 15, !dbg !11537
  %424 = add i32 %423, -65536, !dbg !11537
  %425 = and i32 %424, -65536, !dbg !11537
  %426 = or i32 %415, %417, !dbg !11537
  %427 = or i32 %426, %420, !dbg !11537
  %428 = or i32 %427, %425, !dbg !11537
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11537
  br label %429, !dbg !11538

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11539
  %430 = tail call i32 @HAL_GetTick() #24, !dbg !11540
  call void @llvm.dbg.value(metadata i32 %430, metadata !11221, metadata !DIExpression()), !dbg !11234
  br label %431, !dbg !11541

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11542
  %433 = and i32 %432, 536870912, !dbg !11543
  %434 = icmp eq i32 %433, 0, !dbg !11543
  br i1 %434, label %435, label %439, !dbg !11541

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #24, !dbg !11544
  %437 = sub i32 %436, %430, !dbg !11547
  %438 = icmp ugt i32 %437, 2, !dbg !11548
  br i1 %438, label %439, label %431, !dbg !11549, !llvm.loop !11550

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !11234
  ret i32 %440, !dbg !11552
}

; Function Attrs: optsize
declare !dbg !11553 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #5 !dbg !11555 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11559, metadata !DIExpression()), !dbg !11561
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !11562
  store i32 2047, i32* %2, align 4, !dbg !11563
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11564
  %4 = and i32 %3, 63, !dbg !11565
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11566
  store i32 %4, i32* %5, align 4, !dbg !11567
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11568
  %7 = lshr i32 %6, 6, !dbg !11569
  %8 = and i32 %7, 511, !dbg !11569
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11570
  store i32 %8, i32* %9, align 4, !dbg !11571
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11572
  %11 = lshr i32 %10, 15, !dbg !11573
  %12 = and i32 %11, 6, !dbg !11573
  %13 = add nuw nsw i32 %12, 2, !dbg !11573
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11574
  store i32 %13, i32* %14, align 4, !dbg !11575
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11576
  %16 = lshr i32 %15, 24, !dbg !11577
  %17 = and i32 %16, 15, !dbg !11577
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11578
  store i32 %17, i32* %18, align 4, !dbg !11579
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11580
  %20 = lshr i32 %19, 28, !dbg !11581
  %21 = and i32 %20, 7, !dbg !11581
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11582
  store i32 %21, i32* %22, align 4, !dbg !11583
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11584
  %24 = and i32 %23, 63, !dbg !11585
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11586
  store i32 %24, i32* %25, align 4, !dbg !11587
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11588
  %27 = lshr i32 %26, 6, !dbg !11589
  %28 = and i32 %27, 511, !dbg !11589
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11590
  store i32 %28, i32* %29, align 4, !dbg !11591
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11592
  %31 = lshr i32 %30, 15, !dbg !11593
  %32 = and i32 %31, 6, !dbg !11593
  %33 = add nuw nsw i32 %32, 2, !dbg !11593
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11594
  store i32 %33, i32* %34, align 4, !dbg !11595
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11596
  %36 = lshr i32 %35, 24, !dbg !11597
  %37 = and i32 %36, 15, !dbg !11597
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11598
  store i32 %37, i32* %38, align 4, !dbg !11599
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11600
  %40 = and i32 %39, 31, !dbg !11601
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11602
  store i32 %40, i32* %41, align 4, !dbg !11603
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11604
  %43 = lshr i32 %42, 8, !dbg !11605
  %44 = and i32 %43, 31, !dbg !11605
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11606
  store i32 %44, i32* %45, align 4, !dbg !11607
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11608
  %47 = and i32 %46, 3145728, !dbg !11608
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11609
  store i32 %47, i32* %48, align 4, !dbg !11610
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11611
  %50 = and i32 %49, 12582912, !dbg !11611
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11612
  store i32 %50, i32* %51, align 4, !dbg !11613
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11614
  %53 = and i32 %52, 100663296, !dbg !11614
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11615
  store i32 %53, i32* %54, align 4, !dbg !11616
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11617
  %56 = and i32 %55, 402653184, !dbg !11617
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11618
  store i32 %56, i32* %57, align 4, !dbg !11619
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11620
  %59 = and i32 %58, 2031616, !dbg !11621
  call void @llvm.dbg.value(metadata i32 %59, metadata !11560, metadata !DIExpression()), !dbg !11561
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11622
  %61 = and i32 %60, 768, !dbg !11623
  %62 = or i32 %61, %59, !dbg !11624
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11625
  store i32 %62, i32* %63, align 4, !dbg !11626
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11627
  %65 = and i32 %64, 67108864, !dbg !11627
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11628
  store i32 %65, i32* %66, align 4, !dbg !11629
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11630
  %68 = and i32 %67, 12582912, !dbg !11630
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11631
  store i32 %68, i32* %69, align 4, !dbg !11632
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11633
  %71 = and i32 %70, 134217728, !dbg !11633
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11634
  store i32 %71, i32* %72, align 4, !dbg !11635
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11636
  %74 = and i32 %73, 268435456, !dbg !11636
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11637
  store i32 %74, i32* %75, align 4, !dbg !11638
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11639
  %77 = and i32 %76, 536870912, !dbg !11639
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11640
  store i32 %77, i32* %78, align 4, !dbg !11641
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11642
  %80 = lshr i32 %79, 24, !dbg !11644
  %81 = trunc i32 %80 to i8, !dbg !11644
  %82 = and i8 %81, 1, !dbg !11644
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11645
  store i8 %82, i8* %83, align 4, !dbg !11647
  ret void, !dbg !11648
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #5 !dbg !11649 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11651, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 0, metadata !11652, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 0, metadata !11653, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 0, metadata !11654, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 0, metadata !11655, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 0, metadata !11656, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 0, metadata !11657, metadata !DIExpression()), !dbg !11658
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !11659

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11660
  call void @llvm.dbg.value(metadata i32 %3, metadata !11655, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 %3, metadata !11655, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !11658
  %4 = lshr i32 %3, 20, !dbg !11663
  %5 = and i32 %4, 15, !dbg !11663
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !11663

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11664
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11668
  %9 = and i32 %8, 63, !dbg !11668
  %10 = udiv i32 16000000, %9, !dbg !11668
  call void @llvm.dbg.value(metadata i32 %10, metadata !11654, metadata !DIExpression()), !dbg !11658
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11669
  %12 = lshr i32 %11, 24, !dbg !11670
  %13 = and i32 %12, 15, !dbg !11670
  call void @llvm.dbg.value(metadata i32 %13, metadata !11652, metadata !DIExpression()), !dbg !11658
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11671
  %15 = lshr i32 %14, 6, !dbg !11672
  %16 = and i32 %15, 511, !dbg !11672
  %17 = mul i32 %16, %10, !dbg !11673
  %18 = udiv i32 %17, %13, !dbg !11674
  call void @llvm.dbg.value(metadata i32 %18, metadata !11653, metadata !DIExpression()), !dbg !11658
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11675
  %20 = lshr i32 %19, 8, !dbg !11676
  %21 = and i32 %20, 31, !dbg !11676
  %22 = add nuw nsw i32 %21, 1, !dbg !11677
  call void @llvm.dbg.value(metadata i32 %22, metadata !11652, metadata !DIExpression()), !dbg !11658
  %23 = udiv i32 %18, %22, !dbg !11678
  call void @llvm.dbg.value(metadata i32 %23, metadata !11653, metadata !DIExpression()), !dbg !11658
  br label %123, !dbg !11679

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11680
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11683
  %27 = and i32 %26, 63, !dbg !11683
  %28 = udiv i32 16000000, %27, !dbg !11683
  call void @llvm.dbg.value(metadata i32 %28, metadata !11654, metadata !DIExpression()), !dbg !11658
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11684
  %30 = lshr i32 %29, 24, !dbg !11685
  %31 = and i32 %30, 15, !dbg !11685
  call void @llvm.dbg.value(metadata i32 %31, metadata !11652, metadata !DIExpression()), !dbg !11658
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11686
  %33 = lshr i32 %32, 6, !dbg !11687
  %34 = and i32 %33, 511, !dbg !11687
  %35 = mul i32 %34, %28, !dbg !11688
  %36 = udiv i32 %35, %31, !dbg !11689
  call void @llvm.dbg.value(metadata i32 %36, metadata !11653, metadata !DIExpression()), !dbg !11658
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11690
  %38 = and i32 %37, 31, !dbg !11691
  %39 = add nuw nsw i32 %38, 1, !dbg !11692
  call void @llvm.dbg.value(metadata i32 %39, metadata !11652, metadata !DIExpression()), !dbg !11658
  %40 = udiv i32 %36, %39, !dbg !11693
  call void @llvm.dbg.value(metadata i32 %40, metadata !11653, metadata !DIExpression()), !dbg !11658
  br label %123, !dbg !11694

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11695
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11698
  %44 = and i32 %43, 63, !dbg !11698
  %45 = udiv i32 16000000, %44, !dbg !11698
  call void @llvm.dbg.value(metadata i32 %45, metadata !11654, metadata !DIExpression()), !dbg !11658
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11699
  %47 = lshr i32 %46, 28, !dbg !11700
  %48 = and i32 %47, 7, !dbg !11700
  call void @llvm.dbg.value(metadata i32 %48, metadata !11652, metadata !DIExpression()), !dbg !11658
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11701
  %50 = lshr i32 %49, 6, !dbg !11702
  %51 = and i32 %50, 511, !dbg !11702
  %52 = mul i32 %51, %45, !dbg !11703
  %53 = udiv i32 %52, %48, !dbg !11704
  call void @llvm.dbg.value(metadata i32 %53, metadata !11653, metadata !DIExpression()), !dbg !11658
  br label %123, !dbg !11705

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !11653, metadata !DIExpression()), !dbg !11658
  br label %123, !dbg !11706

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11708
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11653, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11653, metadata !DIExpression()), !dbg !11658
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11711
  call void @llvm.dbg.value(metadata i32 %58, metadata !11656, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !11658
  %59 = lshr i32 %58, 25, !dbg !11713
  %60 = and i32 %59, 3, !dbg !11713
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !11713

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11714
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11718
  %64 = and i32 %63, 63, !dbg !11718
  %65 = udiv i32 16000000, %64, !dbg !11718
  call void @llvm.dbg.value(metadata i32 %65, metadata !11654, metadata !DIExpression()), !dbg !11658
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11719
  %67 = lshr i32 %66, 6, !dbg !11720
  %68 = and i32 %67, 511, !dbg !11720
  %69 = mul i32 %68, %65, !dbg !11721
  call void @llvm.dbg.value(metadata i32 %69, metadata !11657, metadata !DIExpression()), !dbg !11658
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11722
  %71 = lshr i32 %70, 28, !dbg !11723
  %72 = and i32 %71, 7, !dbg !11723
  %73 = udiv i32 %69, %72, !dbg !11724
  call void @llvm.dbg.value(metadata i32 %73, metadata !11653, metadata !DIExpression()), !dbg !11658
  br label %123, !dbg !11725

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11726
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11729
  %77 = and i32 %76, 63, !dbg !11729
  %78 = udiv i32 16000000, %77, !dbg !11729
  call void @llvm.dbg.value(metadata i32 %78, metadata !11654, metadata !DIExpression()), !dbg !11658
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11730
  %80 = lshr i32 %79, 6, !dbg !11731
  %81 = and i32 %80, 511, !dbg !11731
  %82 = mul i32 %81, %78, !dbg !11732
  call void @llvm.dbg.value(metadata i32 %82, metadata !11657, metadata !DIExpression()), !dbg !11658
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11733
  %84 = lshr i32 %83, 28, !dbg !11734
  %85 = and i32 %84, 7, !dbg !11734
  %86 = udiv i32 %82, %85, !dbg !11735
  call void @llvm.dbg.value(metadata i32 %86, metadata !11653, metadata !DIExpression()), !dbg !11658
  br label %123, !dbg !11736

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11737
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11653, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11653, metadata !DIExpression()), !dbg !11658
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11740
  call void @llvm.dbg.value(metadata i32 %91, metadata !11656, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !11658
  %92 = lshr i32 %91, 27, !dbg !11742
  %93 = and i32 %92, 3, !dbg !11742
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !11742

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11743
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11747
  %97 = and i32 %96, 63, !dbg !11747
  %98 = udiv i32 16000000, %97, !dbg !11747
  call void @llvm.dbg.value(metadata i32 %98, metadata !11654, metadata !DIExpression()), !dbg !11658
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11748
  %100 = lshr i32 %99, 6, !dbg !11749
  %101 = and i32 %100, 511, !dbg !11749
  %102 = mul i32 %101, %98, !dbg !11750
  call void @llvm.dbg.value(metadata i32 %102, metadata !11657, metadata !DIExpression()), !dbg !11658
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11751
  %104 = lshr i32 %103, 28, !dbg !11752
  %105 = and i32 %104, 7, !dbg !11752
  %106 = udiv i32 %102, %105, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %106, metadata !11653, metadata !DIExpression()), !dbg !11658
  br label %123, !dbg !11754

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11755
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11654, metadata !DIExpression()), !dbg !11658
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11758
  %110 = and i32 %109, 63, !dbg !11758
  %111 = udiv i32 16000000, %110, !dbg !11758
  call void @llvm.dbg.value(metadata i32 %111, metadata !11654, metadata !DIExpression()), !dbg !11658
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11759
  %113 = lshr i32 %112, 6, !dbg !11760
  %114 = and i32 %113, 511, !dbg !11760
  %115 = mul i32 %114, %111, !dbg !11761
  call void @llvm.dbg.value(metadata i32 %115, metadata !11657, metadata !DIExpression()), !dbg !11658
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11762
  %117 = lshr i32 %116, 28, !dbg !11763
  %118 = and i32 %117, 7, !dbg !11763
  %119 = udiv i32 %115, %118, !dbg !11764
  call void @llvm.dbg.value(metadata i32 %119, metadata !11653, metadata !DIExpression()), !dbg !11658
  br label %123, !dbg !11765

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11766
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11653, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11653, metadata !DIExpression()), !dbg !11658
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !11658
  call void @llvm.dbg.value(metadata i32 %124, metadata !11653, metadata !DIExpression()), !dbg !11658
  ret i32 %124, !dbg !11769
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #15 !dbg !11770 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11774, metadata !DIExpression()), !dbg !11775
  %2 = icmp eq i8 %0, 1, !dbg !11776
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11778
  %4 = and i32 %3, -9, !dbg !11779
  %5 = select i1 %2, i32 8, i32 0, !dbg !11779
  %6 = or i32 %4, %5, !dbg !11779
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11778
  ret void, !dbg !11780
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11781 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !11786, metadata !DIExpression()), !dbg !11788
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11789
  %2 = tail call i32 @HAL_GetTick() #24, !dbg !11790
  call void @llvm.dbg.value(metadata i32 %2, metadata !11787, metadata !DIExpression()), !dbg !11788
  br label %3, !dbg !11791

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11792
  %5 = and i32 %4, 134217728, !dbg !11792
  %6 = icmp eq i32 %5, 0, !dbg !11792
  br i1 %6, label %11, label %7, !dbg !11791

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #24, !dbg !11793
  %9 = sub i32 %8, %2, !dbg !11796
  %10 = icmp ugt i32 %9, 2, !dbg !11797
  br i1 %10, label %41, label %3, !dbg !11798, !llvm.loop !11799

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !11801
  %13 = load i32, i32* %12, align 4, !dbg !11801
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !11801
  %15 = load i32, i32* %14, align 4, !dbg !11801
  %16 = shl i32 %15, 6, !dbg !11801
  %17 = or i32 %16, %13, !dbg !11801
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !11801
  %19 = load i32, i32* %18, align 4, !dbg !11801
  %20 = shl i32 %19, 15, !dbg !11801
  %21 = add i32 %20, -65536, !dbg !11801
  %22 = and i32 %21, -65536, !dbg !11801
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !11801
  %24 = load i32, i32* %23, align 4, !dbg !11801
  %25 = shl i32 %24, 24, !dbg !11801
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !11801
  %27 = load i32, i32* %26, align 4, !dbg !11801
  %28 = shl i32 %27, 28, !dbg !11801
  %29 = or i32 %17, %25, !dbg !11801
  %30 = or i32 %29, %22, !dbg !11801
  %31 = or i32 %30, %28, !dbg !11801
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11801
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11802
  %32 = tail call i32 @HAL_GetTick() #24, !dbg !11803
  call void @llvm.dbg.value(metadata i32 %32, metadata !11787, metadata !DIExpression()), !dbg !11788
  br label %33, !dbg !11804

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11805
  %35 = and i32 %34, 134217728, !dbg !11806
  %36 = icmp eq i32 %35, 0, !dbg !11806
  br i1 %36, label %37, label %41, !dbg !11804

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #24, !dbg !11807
  %39 = sub i32 %38, %32, !dbg !11810
  %40 = icmp ugt i32 %39, 2, !dbg !11811
  br i1 %40, label %41, label %33, !dbg !11812, !llvm.loop !11813

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !11788
  ret i32 %42, !dbg !11815
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !11816 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11821
  %1 = tail call i32 @HAL_GetTick() #24, !dbg !11822
  call void @llvm.dbg.value(metadata i32 %1, metadata !11820, metadata !DIExpression()), !dbg !11823
  br label %2, !dbg !11824

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11825
  %4 = and i32 %3, 134217728, !dbg !11825
  %5 = icmp eq i32 %4, 0, !dbg !11826
  br i1 %5, label %10, label %6, !dbg !11824

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #24, !dbg !11827
  %8 = sub i32 %7, %1, !dbg !11830
  %9 = icmp ugt i32 %8, 2, !dbg !11831
  br i1 %9, label %10, label %2, !dbg !11832, !llvm.loop !11833

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11823
  ret i32 %11, !dbg !11835
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11836 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !11841, metadata !DIExpression()), !dbg !11843
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11844
  %2 = tail call i32 @HAL_GetTick() #24, !dbg !11845
  call void @llvm.dbg.value(metadata i32 %2, metadata !11842, metadata !DIExpression()), !dbg !11843
  br label %3, !dbg !11846

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11847
  %5 = and i32 %4, 536870912, !dbg !11847
  %6 = icmp eq i32 %5, 0, !dbg !11847
  br i1 %6, label %11, label %7, !dbg !11846

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #24, !dbg !11848
  %9 = sub i32 %8, %2, !dbg !11851
  %10 = icmp ugt i32 %9, 2, !dbg !11852
  br i1 %10, label %37, label %3, !dbg !11853, !llvm.loop !11854

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !11856
  %13 = load i32, i32* %12, align 4, !dbg !11856
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !11856
  %15 = load i32, i32* %14, align 4, !dbg !11856
  %16 = shl i32 %15, 6, !dbg !11856
  %17 = or i32 %16, %13, !dbg !11856
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !11856
  %19 = load i32, i32* %18, align 4, !dbg !11856
  %20 = shl i32 %19, 15, !dbg !11856
  %21 = add i32 %20, -65536, !dbg !11856
  %22 = and i32 %21, -65536, !dbg !11856
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !11856
  %24 = load i32, i32* %23, align 4, !dbg !11856
  %25 = shl i32 %24, 24, !dbg !11856
  %26 = or i32 %17, %25, !dbg !11856
  %27 = or i32 %26, %22, !dbg !11856
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11856
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11857
  %28 = tail call i32 @HAL_GetTick() #24, !dbg !11858
  call void @llvm.dbg.value(metadata i32 %28, metadata !11842, metadata !DIExpression()), !dbg !11843
  br label %29, !dbg !11859

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11860
  %31 = and i32 %30, 536870912, !dbg !11861
  %32 = icmp eq i32 %31, 0, !dbg !11861
  br i1 %32, label %33, label %37, !dbg !11859

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #24, !dbg !11862
  %35 = sub i32 %34, %28, !dbg !11865
  %36 = icmp ugt i32 %35, 2, !dbg !11866
  br i1 %36, label %37, label %29, !dbg !11867, !llvm.loop !11868

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !11843
  ret i32 %38, !dbg !11870
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !11871 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11874
  %1 = tail call i32 @HAL_GetTick() #24, !dbg !11875
  call void @llvm.dbg.value(metadata i32 %1, metadata !11873, metadata !DIExpression()), !dbg !11876
  br label %2, !dbg !11877

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11878
  %4 = and i32 %3, 536870912, !dbg !11878
  %5 = icmp eq i32 %4, 0, !dbg !11878
  br i1 %5, label %10, label %6, !dbg !11877

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #24, !dbg !11879
  %8 = sub i32 %7, %1, !dbg !11882
  %9 = icmp ugt i32 %8, 2, !dbg !11883
  br i1 %9, label %10, label %2, !dbg !11884, !llvm.loop !11885

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11876
  ret i32 %11, !dbg !11887
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #5 !dbg !11888 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11890, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.value(metadata i32 0, metadata !11891, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.value(metadata i32 0, metadata !11892, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.value(metadata i32 0, metadata !11893, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.value(metadata i32 0, metadata !11894, metadata !DIExpression()), !dbg !11895
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11896
  %2 = lshr i32 %1, 2, !dbg !11897
  %3 = and i32 %2, 3, !dbg !11897
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !11897

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11898
  %6 = and i32 %5, 63, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %6, metadata !11890, metadata !DIExpression()), !dbg !11895
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11902
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11904
  %9 = lshr i32 %8, 6, !dbg !11904
  %10 = and i32 %9, 511, !dbg !11904
  %11 = zext i32 %10 to i64, !dbg !11904
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11904
  %13 = zext i32 %6 to i64, !dbg !11904
  %14 = udiv i64 %12, %13, !dbg !11904
  %15 = trunc i64 %14 to i32, !dbg !11904
  call void @llvm.dbg.value(metadata i32 %15, metadata !11891, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.value(metadata i32 %15, metadata !11891, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.value(metadata i32 %15, metadata !11891, metadata !DIExpression()), !dbg !11895
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11905
  %17 = lshr i32 %16, 15, !dbg !11906
  %18 = and i32 %17, 6, !dbg !11906
  %19 = add nuw nsw i32 %18, 2, !dbg !11906
  call void @llvm.dbg.value(metadata i32 %19, metadata !11892, metadata !DIExpression()), !dbg !11895
  %20 = udiv i32 %15, %19, !dbg !11907
  call void @llvm.dbg.value(metadata i32 %20, metadata !11894, metadata !DIExpression()), !dbg !11895
  br label %38, !dbg !11908

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11909
  %23 = and i32 %22, 63, !dbg !11911
  call void @llvm.dbg.value(metadata i32 %23, metadata !11890, metadata !DIExpression()), !dbg !11895
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11912
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11914
  %26 = lshr i32 %25, 6, !dbg !11914
  %27 = and i32 %26, 511, !dbg !11914
  %28 = zext i32 %27 to i64, !dbg !11914
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !11914
  %30 = zext i32 %23 to i64, !dbg !11914
  %31 = udiv i64 %29, %30, !dbg !11914
  %32 = trunc i64 %31 to i32, !dbg !11914
  call void @llvm.dbg.value(metadata i32 %32, metadata !11891, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.value(metadata i32 %32, metadata !11891, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.value(metadata i32 %32, metadata !11891, metadata !DIExpression()), !dbg !11895
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11915
  %34 = lshr i32 %33, 28, !dbg !11916
  %35 = and i32 %34, 7, !dbg !11916
  call void @llvm.dbg.value(metadata i32 %35, metadata !11893, metadata !DIExpression()), !dbg !11895
  %36 = udiv i32 %32, %35, !dbg !11917
  call void @llvm.dbg.value(metadata i32 %36, metadata !11894, metadata !DIExpression()), !dbg !11895
  br label %38, !dbg !11918

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !11919
  call void @llvm.dbg.value(metadata i32 %39, metadata !11894, metadata !DIExpression()), !dbg !11895
  ret i32 %39, !dbg !11920
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11921 {
  %1 = tail call i32 @HAL_GetTick() #24, !dbg !11924
  call void @llvm.dbg.value(metadata i32 %1, metadata !11923, metadata !DIExpression()), !dbg !11925
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11926
  %3 = or i32 %2, 1, !dbg !11926
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11926
  br label %4, !dbg !11927

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11928
  %6 = and i32 %5, 2, !dbg !11928
  %7 = icmp eq i32 %6, 0, !dbg !11929
  br i1 %7, label %8, label %12, !dbg !11927

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #24, !dbg !11930
  %10 = sub i32 %9, %1, !dbg !11933
  %11 = icmp ugt i32 %10, 2, !dbg !11934
  br i1 %11, label %89, label %4, !dbg !11935, !llvm.loop !11936

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11938
  %14 = or i32 %13, 128, !dbg !11938
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11938
  %15 = tail call i32 @HAL_GetTick() #24, !dbg !11939
  call void @llvm.dbg.value(metadata i32 %15, metadata !11923, metadata !DIExpression()), !dbg !11925
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11940
  br label %16, !dbg !11941

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11942
  %18 = and i32 %17, 12, !dbg !11942
  %19 = icmp eq i32 %18, 0, !dbg !11943
  %20 = tail call i32 @HAL_GetTick() #24, !dbg !11925
  br i1 %19, label %24, label %21, !dbg !11941

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !11944
  %23 = icmp ugt i32 %22, 5000, !dbg !11947
  br i1 %23, label %89, label %16, !dbg !11948, !llvm.loop !11949

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !11923, metadata !DIExpression()), !dbg !11925
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11951
  %26 = and i32 %25, -851969, !dbg !11951
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11951
  br label %27, !dbg !11952

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11953
  %29 = and i32 %28, 131072, !dbg !11953
  %30 = icmp eq i32 %29, 0, !dbg !11954
  %31 = tail call i32 @HAL_GetTick() #24, !dbg !11925
  br i1 %30, label %35, label %32, !dbg !11952

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !11955
  %34 = icmp ugt i32 %33, 100, !dbg !11958
  br i1 %34, label %89, label %27, !dbg !11959, !llvm.loop !11960

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !11923, metadata !DIExpression()), !dbg !11925
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11962
  %37 = and i32 %36, -16777217, !dbg !11962
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11962
  br label %38, !dbg !11963

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11964
  %40 = and i32 %39, 33554432, !dbg !11964
  %41 = icmp eq i32 %40, 0, !dbg !11965
  %42 = tail call i32 @HAL_GetTick() #24, !dbg !11925
  br i1 %41, label %46, label %43, !dbg !11963

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !11966
  %45 = icmp ugt i32 %44, 2, !dbg !11969
  br i1 %45, label %89, label %38, !dbg !11970, !llvm.loop !11971

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !11923, metadata !DIExpression()), !dbg !11925
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11973
  %48 = and i32 %47, -67108865, !dbg !11973
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11973
  br label %49, !dbg !11974

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11975
  %51 = and i32 %50, 134217728, !dbg !11975
  %52 = icmp eq i32 %51, 0, !dbg !11976
  %53 = tail call i32 @HAL_GetTick() #24, !dbg !11925
  br i1 %52, label %57, label %54, !dbg !11974

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !11977
  %56 = icmp ugt i32 %55, 2, !dbg !11980
  br i1 %56, label %89, label %49, !dbg !11981, !llvm.loop !11982

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !11923, metadata !DIExpression()), !dbg !11925
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11984
  %59 = and i32 %58, -268435457, !dbg !11984
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11984
  br label %60, !dbg !11985

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11986
  %62 = and i32 %61, 536870912, !dbg !11986
  %63 = icmp eq i32 %62, 0, !dbg !11987
  br i1 %63, label %68, label %64, !dbg !11985

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #24, !dbg !11988
  %66 = sub i32 %65, %53, !dbg !11991
  %67 = icmp ugt i32 %66, 2, !dbg !11992
  br i1 %67, label %89, label %60, !dbg !11993, !llvm.loop !11994

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11996
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11997
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11998
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11999
  %70 = and i32 %69, -7937, !dbg !11999
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11999
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12000
  %72 = and i32 %71, -8193, !dbg !12000
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12000
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12001
  %74 = and i32 %73, -16385, !dbg !12001
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12001
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12002
  %76 = or i32 %75, 10420224, !dbg !12002
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12002
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12003
  %78 = or i32 %77, 2097152, !dbg !12003
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12003
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12004
  %80 = or i32 %79, 4194304, !dbg !12004
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12004
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12005
  %82 = and i32 %81, -2, !dbg !12005
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12005
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12006
  %84 = or i32 %83, 16777216, !dbg !12006
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12006
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !12007
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !12008
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #24, !dbg !12010
  %87 = icmp ne i32 %86, 0, !dbg !12011
  %88 = zext i1 %87 to i32, !dbg !12012
  br label %89, !dbg !12012

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !11925
  ret i32 %90, !dbg !12013
}

; Function Attrs: optsize
declare !dbg !12014 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12017 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12043, metadata !DIExpression()), !dbg !12054
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12055
  br i1 %3, label %337, label %4, !dbg !12057

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12058
  %6 = load i32, i32* %5, align 4, !dbg !12058
  %7 = and i32 %6, 1, !dbg !12060
  %8 = icmp eq i32 %7, 0, !dbg !12061
  br i1 %8, label %74, label %9, !dbg !12062

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12063
  %11 = and i32 %10, 12, !dbg !12063
  %12 = icmp eq i32 %11, 4, !dbg !12066
  br i1 %12, label %29, label %13, !dbg !12067

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12068
  %15 = and i32 %14, 12, !dbg !12068
  %16 = icmp eq i32 %15, 8, !dbg !12069
  br i1 %16, label %17, label %21, !dbg !12070

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12071
  %19 = and i32 %18, 4194304, !dbg !12072
  %20 = icmp eq i32 %19, 0, !dbg !12073
  br i1 %20, label %21, label %29, !dbg !12074

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12075
  %23 = and i32 %22, 12, !dbg !12075
  %24 = icmp eq i32 %23, 12, !dbg !12076
  br i1 %24, label %25, label %37, !dbg !12077

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12078
  %27 = and i32 %26, 4194304, !dbg !12079
  %28 = icmp eq i32 %27, 0, !dbg !12080
  br i1 %28, label %37, label %29, !dbg !12081

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12082
  %31 = and i32 %30, 131072, !dbg !12082
  %32 = icmp eq i32 %31, 0, !dbg !12082
  br i1 %32, label %74, label %33, !dbg !12085

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12086
  %35 = load i32, i32* %34, align 4, !dbg !12086
  %36 = icmp eq i32 %35, 0, !dbg !12087
  br i1 %36, label %337, label %74, !dbg !12088

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12089
  %39 = load i32, i32* %38, align 4, !dbg !12089
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !12093

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12094
  %42 = or i32 %41, 65536, !dbg !12094
  br label %53, !dbg !12094

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12096
  %45 = or i32 %44, 262144, !dbg !12096
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12096
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12096
  %47 = or i32 %46, 65536, !dbg !12096
  br label %53, !dbg !12096

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12099
  %50 = and i32 %49, -65537, !dbg !12099
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12099
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12099
  %52 = and i32 %51, -262145, !dbg !12099
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12101
  %55 = load i32, i32* %38, align 4, !dbg !12102
  %56 = icmp eq i32 %55, 0, !dbg !12104
  %57 = tail call i32 @HAL_GetTick() #24, !dbg !12105
  call void @llvm.dbg.value(metadata i32 %57, metadata !12044, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %57, metadata !12044, metadata !DIExpression()), !dbg !12054
  br i1 %56, label %66, label %58, !dbg !12106

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12107
  %60 = and i32 %59, 131072, !dbg !12109
  %61 = icmp eq i32 %60, 0, !dbg !12109
  br i1 %61, label %62, label %74, !dbg !12110

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #24, !dbg !12111
  %64 = sub i32 %63, %57, !dbg !12114
  %65 = icmp ugt i32 %64, 100, !dbg !12115
  br i1 %65, label %337, label %58, !dbg !12116, !llvm.loop !12117

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12119
  %68 = and i32 %67, 131072, !dbg !12119
  %69 = icmp eq i32 %68, 0, !dbg !12119
  br i1 %69, label %74, label %70, !dbg !12121

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #24, !dbg !12122
  %72 = sub i32 %71, %57, !dbg !12125
  %73 = icmp ugt i32 %72, 100, !dbg !12126
  br i1 %73, label %337, label %66, !dbg !12127, !llvm.loop !12128

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !12130
  %76 = and i32 %75, 2, !dbg !12132
  %77 = icmp eq i32 %76, 0, !dbg !12133
  br i1 %77, label %137, label %78, !dbg !12134

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12135
  %80 = and i32 %79, 12, !dbg !12135
  %81 = icmp eq i32 %80, 0, !dbg !12138
  br i1 %81, label %98, label %82, !dbg !12139

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12140
  %84 = and i32 %83, 12, !dbg !12140
  %85 = icmp eq i32 %84, 8, !dbg !12141
  br i1 %85, label %86, label %90, !dbg !12142

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12143
  %88 = and i32 %87, 4194304, !dbg !12144
  %89 = icmp eq i32 %88, 0, !dbg !12145
  br i1 %89, label %98, label %90, !dbg !12146

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12147
  %92 = and i32 %91, 12, !dbg !12147
  %93 = icmp eq i32 %92, 12, !dbg !12148
  br i1 %93, label %94, label %106, !dbg !12149

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12150
  %96 = and i32 %95, 4194304, !dbg !12151
  %97 = icmp eq i32 %96, 0, !dbg !12152
  br i1 %97, label %98, label %106, !dbg !12153

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12154
  %100 = and i32 %99, 2, !dbg !12154
  %101 = icmp eq i32 %100, 0, !dbg !12154
  br i1 %101, label %130, label %102, !dbg !12157

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12158
  %104 = load i32, i32* %103, align 4, !dbg !12158
  %105 = icmp eq i32 %104, 1, !dbg !12159
  br i1 %105, label %130, label %337, !dbg !12160

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12161
  %108 = load i32, i32* %107, align 4, !dbg !12161
  %109 = icmp eq i32 %108, 0, !dbg !12164
  br i1 %109, label %120, label %110, !dbg !12165

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12166
  %111 = tail call i32 @HAL_GetTick() #24, !dbg !12168
  call void @llvm.dbg.value(metadata i32 %111, metadata !12044, metadata !DIExpression()), !dbg !12054
  br label %112, !dbg !12169

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12170
  %114 = and i32 %113, 2, !dbg !12171
  %115 = icmp eq i32 %114, 0, !dbg !12171
  br i1 %115, label %116, label %130, !dbg !12169

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #24, !dbg !12172
  %118 = sub i32 %117, %111, !dbg !12175
  %119 = icmp ugt i32 %118, 2, !dbg !12176
  br i1 %119, label %337, label %112, !dbg !12177, !llvm.loop !12178

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12180
  %121 = tail call i32 @HAL_GetTick() #24, !dbg !12182
  call void @llvm.dbg.value(metadata i32 %121, metadata !12044, metadata !DIExpression()), !dbg !12054
  br label %122, !dbg !12183

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12184
  %124 = and i32 %123, 2, !dbg !12184
  %125 = icmp eq i32 %124, 0, !dbg !12184
  br i1 %125, label %137, label %126, !dbg !12183

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #24, !dbg !12185
  %128 = sub i32 %127, %121, !dbg !12188
  %129 = icmp ugt i32 %128, 2, !dbg !12189
  br i1 %129, label %337, label %122, !dbg !12190, !llvm.loop !12191

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12193
  %132 = and i32 %131, -249, !dbg !12193
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12193
  %134 = load i32, i32* %133, align 4, !dbg !12193
  %135 = shl i32 %134, 3, !dbg !12193
  %136 = or i32 %135, %132, !dbg !12193
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12193
  br label %137, !dbg !12194

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !12194
  %139 = and i32 %138, 8, !dbg !12196
  %140 = icmp eq i32 %139, 0, !dbg !12197
  br i1 %140, label %165, label %141, !dbg !12198

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12199
  %143 = load i32, i32* %142, align 4, !dbg !12199
  %144 = icmp eq i32 %143, 0, !dbg !12202
  br i1 %144, label %155, label %145, !dbg !12203

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12204
  %146 = tail call i32 @HAL_GetTick() #24, !dbg !12206
  call void @llvm.dbg.value(metadata i32 %146, metadata !12044, metadata !DIExpression()), !dbg !12054
  br label %147, !dbg !12207

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12208
  %149 = and i32 %148, 2, !dbg !12209
  %150 = icmp eq i32 %149, 0, !dbg !12209
  br i1 %150, label %151, label %165, !dbg !12207

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #24, !dbg !12210
  %153 = sub i32 %152, %146, !dbg !12213
  %154 = icmp ugt i32 %153, 2, !dbg !12214
  br i1 %154, label %337, label %147, !dbg !12215, !llvm.loop !12216

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12218
  %156 = tail call i32 @HAL_GetTick() #24, !dbg !12220
  call void @llvm.dbg.value(metadata i32 %156, metadata !12044, metadata !DIExpression()), !dbg !12054
  br label %157, !dbg !12221

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12222
  %159 = and i32 %158, 2, !dbg !12222
  %160 = icmp eq i32 %159, 0, !dbg !12222
  br i1 %160, label %165, label %161, !dbg !12221

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #24, !dbg !12223
  %163 = sub i32 %162, %156, !dbg !12226
  %164 = icmp ugt i32 %163, 2, !dbg !12227
  br i1 %164, label %337, label %157, !dbg !12228, !llvm.loop !12229

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !12231
  %167 = and i32 %166, 4, !dbg !12232
  %168 = icmp eq i32 %167, 0, !dbg !12233
  br i1 %168, label %237, label %169, !dbg !12234

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !12046, metadata !DIExpression()), !dbg !12235
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12236
  %171 = and i32 %170, 268435456, !dbg !12236
  %172 = icmp eq i32 %171, 0, !dbg !12236
  br i1 %172, label %173, label %180, !dbg !12237

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !12238
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !12238
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12050, metadata !DIExpression()), !dbg !12238
  store volatile i32 0, i32* %2, align 4, !dbg !12238
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12238
  %176 = or i32 %175, 268435456, !dbg !12238
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12238
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12238
  %178 = and i32 %177, 268435456, !dbg !12238
  store volatile i32 %178, i32* %2, align 4, !dbg !12238
  %179 = load volatile i32, i32* %2, align 4, !dbg !12238
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !12239
  call void @llvm.dbg.value(metadata i32 1, metadata !12046, metadata !DIExpression()), !dbg !12235
  br label %180, !dbg !12240

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !12046, metadata !DIExpression()), !dbg !12235
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12241
  %182 = and i32 %181, 256, !dbg !12241
  %183 = icmp eq i32 %182, 0, !dbg !12241
  br i1 %183, label %184, label %196, !dbg !12243

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12244
  %186 = or i32 %185, 256, !dbg !12244
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12244
  %187 = tail call i32 @HAL_GetTick() #24, !dbg !12246
  call void @llvm.dbg.value(metadata i32 %187, metadata !12044, metadata !DIExpression()), !dbg !12054
  br label %188, !dbg !12247

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12248
  %190 = and i32 %189, 256, !dbg !12248
  %191 = icmp eq i32 %190, 0, !dbg !12248
  br i1 %191, label %192, label %196, !dbg !12247

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #24, !dbg !12249
  %194 = sub i32 %193, %187, !dbg !12252
  %195 = icmp ugt i32 %194, 2, !dbg !12253
  br i1 %195, label %337, label %188, !dbg !12254, !llvm.loop !12255

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12257
  %198 = load i32, i32* %197, align 4, !dbg !12257
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !12260

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12261
  %201 = or i32 %200, 1, !dbg !12261
  br label %212, !dbg !12261

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12263
  %204 = or i32 %203, 4, !dbg !12263
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12263
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12263
  %206 = or i32 %205, 1, !dbg !12263
  br label %212, !dbg !12263

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12266
  %209 = and i32 %208, -2, !dbg !12266
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12266
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12266
  %211 = and i32 %210, -5, !dbg !12266
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12268
  %214 = load i32, i32* %197, align 4, !dbg !12269
  %215 = icmp eq i32 %214, 0, !dbg !12271
  %216 = tail call i32 @HAL_GetTick() #24, !dbg !12272
  call void @llvm.dbg.value(metadata i32 %216, metadata !12044, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %216, metadata !12044, metadata !DIExpression()), !dbg !12054
  br i1 %215, label %225, label %217, !dbg !12273

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12274
  %219 = and i32 %218, 2, !dbg !12276
  %220 = icmp eq i32 %219, 0, !dbg !12276
  br i1 %220, label %221, label %233, !dbg !12277

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #24, !dbg !12278
  %223 = sub i32 %222, %216, !dbg !12281
  %224 = icmp ugt i32 %223, 5000, !dbg !12282
  br i1 %224, label %337, label %217, !dbg !12283, !llvm.loop !12284

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12286
  %227 = and i32 %226, 2, !dbg !12286
  %228 = icmp eq i32 %227, 0, !dbg !12286
  br i1 %228, label %233, label %229, !dbg !12288

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #24, !dbg !12289
  %231 = sub i32 %230, %216, !dbg !12292
  %232 = icmp ugt i32 %231, 5000, !dbg !12293
  br i1 %232, label %337, label %225, !dbg !12294, !llvm.loop !12295

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !12297

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12298
  %236 = and i32 %235, -268435457, !dbg !12298
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12298
  br label %237, !dbg !12301

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12302
  %239 = load i32, i32* %238, align 4, !dbg !12302
  %240 = icmp eq i32 %239, 0, !dbg !12304
  br i1 %240, label %336, label %241, !dbg !12305

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12306
  %243 = and i32 %242, 12, !dbg !12306
  %244 = icmp eq i32 %243, 8, !dbg !12309
  br i1 %244, label %297, label %245, !dbg !12310

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !12311
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12314
  %247 = tail call i32 @HAL_GetTick() #24, !dbg !12314
  call void @llvm.dbg.value(metadata i32 %247, metadata !12044, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %247, metadata !12044, metadata !DIExpression()), !dbg !12054
  br i1 %246, label %248, label %289, !dbg !12315

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12316
  %250 = and i32 %249, 33554432, !dbg !12316
  %251 = icmp eq i32 %250, 0, !dbg !12316
  br i1 %251, label %256, label %252, !dbg !12318

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #24, !dbg !12319
  %254 = sub i32 %253, %247, !dbg !12322
  %255 = icmp ugt i32 %254, 2, !dbg !12323
  br i1 %255, label %337, label %248, !dbg !12324, !llvm.loop !12325

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12327
  %258 = load i32, i32* %257, align 4, !dbg !12327
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12327
  %260 = load i32, i32* %259, align 4, !dbg !12327
  %261 = or i32 %260, %258, !dbg !12327
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12327
  %263 = load i32, i32* %262, align 4, !dbg !12327
  %264 = shl i32 %263, 6, !dbg !12327
  %265 = or i32 %261, %264, !dbg !12327
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12327
  %267 = load i32, i32* %266, align 4, !dbg !12327
  %268 = shl i32 %267, 15, !dbg !12327
  %269 = add i32 %268, -65536, !dbg !12327
  %270 = and i32 %269, -65536, !dbg !12327
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12327
  %272 = load i32, i32* %271, align 4, !dbg !12327
  %273 = shl i32 %272, 24, !dbg !12327
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12327
  %275 = load i32, i32* %274, align 4, !dbg !12327
  %276 = shl i32 %275, 28, !dbg !12327
  %277 = or i32 %265, %273, !dbg !12327
  %278 = or i32 %277, %270, !dbg !12327
  %279 = or i32 %278, %276, !dbg !12327
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12327
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12328
  %280 = tail call i32 @HAL_GetTick() #24, !dbg !12329
  call void @llvm.dbg.value(metadata i32 %280, metadata !12044, metadata !DIExpression()), !dbg !12054
  br label %281, !dbg !12330

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12331
  %283 = and i32 %282, 33554432, !dbg !12332
  %284 = icmp eq i32 %283, 0, !dbg !12332
  br i1 %284, label %285, label %336, !dbg !12330

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #24, !dbg !12333
  %287 = sub i32 %286, %280, !dbg !12336
  %288 = icmp ugt i32 %287, 2, !dbg !12337
  br i1 %288, label %337, label %281, !dbg !12338, !llvm.loop !12339

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12341
  %291 = and i32 %290, 33554432, !dbg !12341
  %292 = icmp eq i32 %291, 0, !dbg !12341
  br i1 %292, label %336, label %293, !dbg !12343

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #24, !dbg !12344
  %295 = sub i32 %294, %247, !dbg !12347
  %296 = icmp ugt i32 %295, 2, !dbg !12348
  br i1 %296, label %337, label %289, !dbg !12349, !llvm.loop !12350

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !12352
  br i1 %298, label %337, label %299, !dbg !12355

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12356
  call void @llvm.dbg.value(metadata i32 %300, metadata !12045, metadata !DIExpression()), !dbg !12054
  %301 = and i32 %300, 4194304, !dbg !12358
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12360
  %303 = load i32, i32* %302, align 4, !dbg !12360
  %304 = icmp eq i32 %301, %303, !dbg !12361
  br i1 %304, label %305, label %337, !dbg !12362

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !12363
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12364
  %308 = load i32, i32* %307, align 4, !dbg !12364
  %309 = icmp eq i32 %306, %308, !dbg !12365
  br i1 %309, label %310, label %337, !dbg !12366

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !12367
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12368
  %313 = load i32, i32* %312, align 4, !dbg !12368
  %314 = shl i32 %313, 6, !dbg !12369
  %315 = icmp eq i32 %311, %314, !dbg !12370
  br i1 %315, label %316, label %337, !dbg !12371

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !12372
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12373
  %319 = load i32, i32* %318, align 4, !dbg !12373
  %320 = shl i32 %319, 15, !dbg !12374
  %321 = add i32 %320, -65536, !dbg !12374
  %322 = and i32 %321, -65536, !dbg !12374
  %323 = icmp eq i32 %317, %322, !dbg !12375
  br i1 %323, label %324, label %337, !dbg !12376

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !12377
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12378
  %327 = load i32, i32* %326, align 4, !dbg !12378
  %328 = shl i32 %327, 24, !dbg !12379
  %329 = icmp eq i32 %325, %328, !dbg !12380
  br i1 %329, label %330, label %337, !dbg !12381

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !12382
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12383
  %333 = load i32, i32* %332, align 4, !dbg !12383
  %334 = shl i32 %333, 28, !dbg !12384
  %335 = icmp eq i32 %331, %334, !dbg !12385
  br i1 %335, label %336, label %337, !dbg !12386

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !12387

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !12054
  ret i32 %338, !dbg !12388
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #5 !dbg !12389 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12393, metadata !DIExpression()), !dbg !12394
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12395
  store i32 15, i32* %2, align 4, !dbg !12396
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12397
  %4 = and i32 %3, 262144, !dbg !12399
  %5 = icmp eq i32 %4, 0, !dbg !12400
  br i1 %5, label %8, label %6, !dbg !12401

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12402
  store i32 327680, i32* %7, align 4, !dbg !12404
  br label %15, !dbg !12405

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12406
  %10 = and i32 %9, 65536, !dbg !12408
  %11 = icmp eq i32 %10, 0, !dbg !12409
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12410
  br i1 %11, label %14, label %13, !dbg !12411

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12412
  br label %15, !dbg !12414

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12415
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12417
  %17 = and i32 %16, 1, !dbg !12419
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12420
  store i32 %17, i32* %18, align 4, !dbg !12422
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12423
  %20 = lshr i32 %19, 3, !dbg !12424
  %21 = and i32 %20, 31, !dbg !12424
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12425
  store i32 %21, i32* %22, align 4, !dbg !12426
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12427
  %24 = and i32 %23, 4, !dbg !12429
  %25 = icmp eq i32 %24, 0, !dbg !12430
  br i1 %25, label %28, label %26, !dbg !12431

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12432
  store i32 5, i32* %27, align 4, !dbg !12434
  br label %35, !dbg !12435

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12436
  %30 = and i32 %29, 1, !dbg !12438
  %31 = icmp eq i32 %30, 0, !dbg !12439
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12440
  br i1 %31, label %34, label %33, !dbg !12441

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12442
  br label %35, !dbg !12444

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12445
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12447
  %37 = and i32 %36, 1, !dbg !12449
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12450
  store i32 %37, i32* %38, align 4, !dbg !12452
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12453
  %40 = and i32 %39, 16777216, !dbg !12455
  %41 = icmp eq i32 %40, 0, !dbg !12456
  %42 = select i1 %41, i32 1, i32 2, !dbg !12457
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12458
  store i32 %42, i32* %43, align 4, !dbg !12460
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12461
  %45 = and i32 %44, 4194304, !dbg !12462
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12463
  store i32 %45, i32* %46, align 4, !dbg !12464
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12465
  %48 = and i32 %47, 63, !dbg !12466
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12467
  store i32 %48, i32* %49, align 4, !dbg !12468
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12469
  %51 = lshr i32 %50, 6, !dbg !12470
  %52 = and i32 %51, 511, !dbg !12470
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12471
  store i32 %52, i32* %53, align 4, !dbg !12472
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12473
  %55 = shl i32 %54, 1, !dbg !12474
  %56 = and i32 %55, 393216, !dbg !12474
  %57 = add nuw nsw i32 %56, 131072, !dbg !12474
  %58 = lshr exact i32 %57, 16, !dbg !12475
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12476
  store i32 %58, i32* %59, align 4, !dbg !12477
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12478
  %61 = lshr i32 %60, 24, !dbg !12479
  %62 = and i32 %61, 15, !dbg !12479
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12480
  store i32 %62, i32* %63, align 4, !dbg !12481
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12482
  %65 = lshr i32 %64, 28, !dbg !12483
  %66 = and i32 %65, 7, !dbg !12483
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12484
  store i32 %66, i32* %67, align 4, !dbg !12485
  ret void, !dbg !12486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !12487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12490, metadata !DIExpression()), !dbg !12491
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !12492
  ret void, !dbg !12493
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !12494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12497, metadata !DIExpression()), !dbg !12499
  call void @llvm.dbg.value(metadata i32 1000, metadata !12498, metadata !DIExpression()), !dbg !12499
  %2 = udiv i32 %0, 1000, !dbg !12500
  %3 = add nsw i32 %2, -1, !dbg !12501
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12502
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12503
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12504
  ret void, !dbg !12505
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !12506 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12508, metadata !DIExpression()), !dbg !12510
  %3 = bitcast i32* %2 to i8*, !dbg !12511
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12511
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12509, metadata !DIExpression()), !dbg !12512
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12513
  store volatile i32 %4, i32* %2, align 4, !dbg !12512
  %5 = load volatile i32, i32* %2, align 4, !dbg !12514
  %6 = icmp eq i32 %0, -1, !dbg !12515
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12508, metadata !DIExpression()), !dbg !12510
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12510
  call void @llvm.dbg.value(metadata i32 %8, metadata !12508, metadata !DIExpression()), !dbg !12510
  br label %9, !dbg !12517

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12508, metadata !DIExpression()), !dbg !12510
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12518
  call void @llvm.dbg.value(metadata i32 undef, metadata !12508, metadata !DIExpression()), !dbg !12510
  %12 = shl i32 %11, 15, !dbg !12510
  %13 = ashr i32 %12, 31, !dbg !12510
  %14 = add i32 %13, %10, !dbg !12510
  call void @llvm.dbg.value(metadata i32 %14, metadata !12508, metadata !DIExpression()), !dbg !12510
  %15 = icmp eq i32 %14, 0, !dbg !12517
  br i1 %15, label %16, label %9, !dbg !12517

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12521
  ret void, !dbg !12521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !12522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12524, metadata !DIExpression()), !dbg !12525
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12526
  ret void, !dbg !12527
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12533, metadata !DIExpression()), !dbg !12538
  call void @llvm.dbg.value(metadata i32 0, metadata !12536, metadata !DIExpression()), !dbg !12538
  call void @llvm.dbg.value(metadata i32 0, metadata !12537, metadata !DIExpression()), !dbg !12538
  %2 = icmp eq i32 %0, 0, !dbg !12539
  br i1 %2, label %72, label %3, !dbg !12541

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !12542
  %5 = icmp eq i32 %4, 49152, !dbg !12545
  br i1 %5, label %6, label %21, !dbg !12546

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12547
  %8 = select i1 %7, i32 0, i32 5, !dbg !12550
  call void @llvm.dbg.value(metadata i32 %8, metadata !12536, metadata !DIExpression()), !dbg !12538
  %9 = add i32 %0, -120000001, !dbg !12551
  %10 = icmp ult i32 %9, 30000000, !dbg !12551
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12551
  call void @llvm.dbg.value(metadata i32 %11, metadata !12536, metadata !DIExpression()), !dbg !12538
  %12 = icmp ult i32 %9, -30000000, !dbg !12553
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12553
  call void @llvm.dbg.value(metadata i32 %13, metadata !12536, metadata !DIExpression()), !dbg !12538
  %14 = icmp ugt i32 %0, 60000000, !dbg !12555
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12557
  br i1 %16, label %21, label %17, !dbg !12557

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12558
  %19 = and i1 %18, %15, !dbg !12561
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12561
  br label %21, !dbg !12561

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12538
  call void @llvm.dbg.value(metadata i32 %22, metadata !12536, metadata !DIExpression()), !dbg !12538
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !12562
  %24 = icmp eq i32 %23, 32768, !dbg !12564
  br i1 %24, label %25, label %45, !dbg !12565

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !12566
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12569
  %29 = select i1 %28, i32 5, i32 %22, !dbg !12569
  call void @llvm.dbg.value(metadata i32 %29, metadata !12536, metadata !DIExpression()), !dbg !12538
  %30 = icmp ugt i32 %0, 12000000, !dbg !12570
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12572
  %33 = select i1 %32, i32 4, i32 %29, !dbg !12572
  call void @llvm.dbg.value(metadata i32 %33, metadata !12536, metadata !DIExpression()), !dbg !12538
  %34 = icmp ugt i32 %0, 90000000, !dbg !12573
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12575
  %37 = select i1 %36, i32 3, i32 %33, !dbg !12575
  call void @llvm.dbg.value(metadata i32 %37, metadata !12536, metadata !DIExpression()), !dbg !12538
  %38 = icmp ugt i32 %0, 60000000, !dbg !12576
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !12578
  br i1 %40, label %45, label %41, !dbg !12578

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !12579
  %43 = select i1 %42, i1 %39, i1 false, !dbg !12582
  %44 = select i1 %43, i32 1, i32 %37, !dbg !12582
  br label %45, !dbg !12582

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !12583
  call void @llvm.dbg.value(metadata i32 %46, metadata !12536, metadata !DIExpression()), !dbg !12538
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !12584
  %48 = icmp eq i32 %47, 16384, !dbg !12586
  br i1 %48, label %49, label %61, !dbg !12587

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !12588
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !12591
  %53 = select i1 %52, i32 3, i32 %46, !dbg !12591
  call void @llvm.dbg.value(metadata i32 %53, metadata !12536, metadata !DIExpression()), !dbg !12538
  %54 = icmp ugt i32 %0, 60000000, !dbg !12592
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !12594
  br i1 %56, label %61, label %57, !dbg !12594

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !12595
  %59 = select i1 %58, i1 %55, i1 false, !dbg !12598
  %60 = select i1 %59, i32 1, i32 %53, !dbg !12598
  br label %61, !dbg !12598

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !12583
  call void @llvm.dbg.value(metadata i32 %62, metadata !12536, metadata !DIExpression()), !dbg !12538
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #25, !dbg !12599
  call void @llvm.dbg.value(metadata i32 2, metadata !12534, metadata !DIExpression()), !dbg !12538
  br label %63, !dbg !12600

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !12583
  call void @llvm.dbg.value(metadata i32 %64, metadata !12534, metadata !DIExpression()), !dbg !12538
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !12601
  call void @llvm.dbg.value(metadata i32 %65, metadata !12535, metadata !DIExpression()), !dbg !12538
  %66 = add nsw i32 %64, -1, !dbg !12603
  call void @llvm.dbg.value(metadata i32 %66, metadata !12534, metadata !DIExpression()), !dbg !12538
  %67 = icmp ne i32 %65, %62, !dbg !12604
  %68 = icmp ne i32 %66, 0, !dbg !12605
  %69 = select i1 %67, i1 %68, i1 false, !dbg !12605
  br i1 %69, label %63, label %70, !dbg !12606, !llvm.loop !12607

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !12609
  call void @llvm.dbg.value(metadata i32 %73, metadata !12537, metadata !DIExpression()), !dbg !12538
  ret i32 %73, !dbg !12610
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #5 !dbg !12611 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12613
  %2 = and i32 %1, 49152, !dbg !12613
  ret i32 %2, !dbg !12614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12617, metadata !DIExpression()), !dbg !12618
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12619
  %3 = and i32 %2, -16, !dbg !12619
  %4 = or i32 %3, %0, !dbg !12619
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12619
  ret void, !dbg !12620
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #5 !dbg !12621 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12622
  %2 = and i32 %1, 15, !dbg !12622
  ret i32 %2, !dbg !12623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12624 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12642, metadata !DIExpression()), !dbg !12646
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12643, metadata !DIExpression()), !dbg !12646
  call void @llvm.dbg.value(metadata i32 0, metadata !12644, metadata !DIExpression()), !dbg !12646
  call void @llvm.dbg.value(metadata i32 0, metadata !12645, metadata !DIExpression()), !dbg !12646
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !12647
  %4 = icmp eq i32 %3, 0, !dbg !12649
  br i1 %4, label %5, label %21, !dbg !12650

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #25, !dbg !12651
  call void @llvm.dbg.value(metadata i32 %6, metadata !12645, metadata !DIExpression()), !dbg !12646
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.168() #25, !dbg !12653
  %8 = icmp eq i32 %7, 1, !dbg !12655
  br i1 %8, label %13, label %9, !dbg !12656

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.169() #25, !dbg !12657
  br label %10, !dbg !12659

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.168() #25, !dbg !12660
  %12 = icmp eq i32 %11, 1, !dbg !12661
  br i1 %12, label %13, label %10, !dbg !12659, !llvm.loop !12662

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12664
  %15 = load i32, i32* %14, align 4, !dbg !12664
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12665
  %17 = load i32, i32* %16, align 4, !dbg !12665
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12666
  %19 = load i32, i32* %18, align 4, !dbg !12666
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.170(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #25, !dbg !12667
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !12668
  call void @llvm.dbg.value(metadata i32 %20, metadata !12644, metadata !DIExpression()), !dbg !12646
  br label %21, !dbg !12669

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12670
  call void @llvm.dbg.value(metadata i32 %22, metadata !12644, metadata !DIExpression()), !dbg !12646
  ret i32 %22, !dbg !12671
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #5 !dbg !12672 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12676, metadata !DIExpression()), !dbg !12677
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.172() #25, !dbg !12678
  %2 = icmp ne i32 %1, 0, !dbg !12680
  call void @llvm.dbg.value(metadata i1 %2, metadata !12676, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12677
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #25, !dbg !12681
  %4 = icmp ne i32 %3, 0, !dbg !12683
  call void @llvm.dbg.value(metadata i1 undef, metadata !12676, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12677
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #25, !dbg !12684
  %6 = icmp ne i32 %5, 0, !dbg !12686
  %7 = select i1 %6, i1 true, i1 %4, !dbg !12687
  %8 = select i1 %7, i1 true, i1 %2, !dbg !12687
  %9 = zext i1 %8 to i32, !dbg !12687
  call void @llvm.dbg.value(metadata i32 %9, metadata !12676, metadata !DIExpression()), !dbg !12677
  ret i32 %9, !dbg !12688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !12689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12693, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12694, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.value(metadata i32 0, metadata !12695, metadata !DIExpression()), !dbg !12696
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12697
  %4 = load i32, i32* %3, align 4, !dbg !12697
  %5 = and i32 %4, 63, !dbg !12698
  %6 = udiv i32 %0, %5, !dbg !12699
  call void @llvm.dbg.value(metadata i32 %6, metadata !12695, metadata !DIExpression()), !dbg !12696
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12700
  %8 = load i32, i32* %7, align 4, !dbg !12700
  %9 = and i32 %8, 511, !dbg !12701
  %10 = mul i32 %9, %6, !dbg !12702
  call void @llvm.dbg.value(metadata i32 %10, metadata !12695, metadata !DIExpression()), !dbg !12696
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12703
  %12 = load i32, i32* %11, align 4, !dbg !12703
  %13 = lshr i32 %12, 15, !dbg !12704
  %14 = and i32 %13, 131070, !dbg !12704
  %15 = add nuw nsw i32 %14, 2, !dbg !12704
  %16 = udiv i32 %10, %15, !dbg !12705
  call void @llvm.dbg.value(metadata i32 %16, metadata !12695, metadata !DIExpression()), !dbg !12696
  ret i32 %16, !dbg !12706
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.168() unnamed_addr #5 !dbg !12707 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12708
  %2 = lshr i32 %1, 1, !dbg !12709
  %3 = and i32 %2, 1, !dbg !12709
  ret i32 %3, !dbg !12710
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.169() unnamed_addr #15 !dbg !12711 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12712
  %2 = or i32 %1, 1, !dbg !12712
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12712
  ret void, !dbg !12713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.170(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12714 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12716, metadata !DIExpression()), !dbg !12720
  call void @llvm.dbg.value(metadata i32 %1, metadata !12717, metadata !DIExpression()), !dbg !12720
  call void @llvm.dbg.value(metadata i32 %2, metadata !12718, metadata !DIExpression()), !dbg !12720
  call void @llvm.dbg.value(metadata i32 %3, metadata !12719, metadata !DIExpression()), !dbg !12720
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12721
  %6 = and i32 %5, -4227072, !dbg !12721
  %7 = or i32 %1, %0, !dbg !12721
  %8 = shl i32 %2, 6, !dbg !12721
  %9 = or i32 %7, %8, !dbg !12721
  %10 = or i32 %9, %6, !dbg !12721
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12721
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12722
  %12 = and i32 %11, -196609, !dbg !12722
  %13 = or i32 %12, %3, !dbg !12722
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12722
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12723
  %15 = and i32 %14, -1879048193, !dbg !12723
  %16 = or i32 %15, %3, !dbg !12723
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12723
  ret void, !dbg !12724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12725 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12729, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12730, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata i32 0, metadata !12731, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.value(metadata i32 0, metadata !12732, metadata !DIExpression()), !dbg !12733
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12734
  %4 = load i32, i32* %3, align 4, !dbg !12734
  %5 = lshr i32 %4, 4, !dbg !12734
  %6 = and i32 %5, 15, !dbg !12734
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12734
  %8 = load i8, i8* %7, align 1, !dbg !12734
  %9 = zext i8 %8 to i32, !dbg !12734
  %10 = lshr i32 %0, %9, !dbg !12734
  call void @llvm.dbg.value(metadata i32 %10, metadata !12732, metadata !DIExpression()), !dbg !12733
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12735
  %12 = icmp ult i32 %11, %10, !dbg !12737
  br i1 %12, label %13, label %16, !dbg !12738

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !12739
  call void @llvm.dbg.value(metadata i32 %14, metadata !12731, metadata !DIExpression()), !dbg !12733
  %15 = icmp eq i32 %14, 0, !dbg !12741
  br i1 %15, label %16, label %30, !dbg !12743

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.171() #25, !dbg !12744
  br label %17, !dbg !12746

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.172() #25, !dbg !12747
  %19 = icmp eq i32 %18, 1, !dbg !12748
  br i1 %19, label %20, label %17, !dbg !12746, !llvm.loop !12749

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12751
  tail call fastcc void @LL_RCC_SetAHBPrescaler.173(i32 noundef %21) #25, !dbg !12752
  tail call fastcc void @LL_RCC_SetSysClkSource.174() #25, !dbg !12753
  br label %22, !dbg !12754

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.175() #25, !dbg !12755
  %24 = icmp eq i32 %23, 8, !dbg !12756
  br i1 %24, label %25, label %22, !dbg !12754, !llvm.loop !12757

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12759
  %27 = load i32, i32* %26, align 4, !dbg !12759
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.176(i32 noundef %27) #25, !dbg !12760
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12761
  %29 = load i32, i32* %28, align 4, !dbg !12761
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.177(i32 noundef %29) #25, !dbg !12762
  br label %30, !dbg !12763

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12764
  %33 = icmp ugt i32 %32, %10, !dbg !12766
  br i1 %33, label %34, label %36, !dbg !12767

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !12768
  call void @llvm.dbg.value(metadata i32 %35, metadata !12731, metadata !DIExpression()), !dbg !12733
  br label %36, !dbg !12770

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12733
  call void @llvm.dbg.value(metadata i32 %37, metadata !12731, metadata !DIExpression()), !dbg !12733
  %38 = icmp eq i32 %37, 0, !dbg !12771
  br i1 %38, label %39, label %40, !dbg !12773

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !12774
  br label %40, !dbg !12776

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12777
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.171() unnamed_addr #15 !dbg !12778 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12779
  %2 = or i32 %1, 16777216, !dbg !12779
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12779
  ret void, !dbg !12780
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.172() unnamed_addr #5 !dbg !12781 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12782
  %2 = lshr i32 %1, 25, !dbg !12783
  %3 = and i32 %2, 1, !dbg !12783
  ret i32 %3, !dbg !12784
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.173(i32 noundef %0) unnamed_addr #15 !dbg !12785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12787, metadata !DIExpression()), !dbg !12788
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12789
  %3 = and i32 %2, -241, !dbg !12789
  %4 = or i32 %3, %0, !dbg !12789
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12789
  ret void, !dbg !12790
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.174() unnamed_addr #15 !dbg !12791 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12793, metadata !DIExpression()), !dbg !12794
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12795
  %2 = and i32 %1, -4, !dbg !12795
  %3 = or i32 %2, 2, !dbg !12795
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12795
  ret void, !dbg !12796
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.175() unnamed_addr #5 !dbg !12797 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12798
  %2 = and i32 %1, 12, !dbg !12798
  ret i32 %2, !dbg !12799
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.176(i32 noundef %0) unnamed_addr #15 !dbg !12800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12802, metadata !DIExpression()), !dbg !12803
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12804
  %3 = and i32 %2, -7169, !dbg !12804
  %4 = or i32 %3, %0, !dbg !12804
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12804
  ret void, !dbg !12805
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.177(i32 noundef %0) unnamed_addr #15 !dbg !12806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12808, metadata !DIExpression()), !dbg !12809
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12810
  %3 = and i32 %2, -57345, !dbg !12810
  %4 = or i32 %3, %0, !dbg !12810
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12810
  ret void, !dbg !12811
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #5 !dbg !12812 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12813
  %2 = lshr i32 %1, 29, !dbg !12814
  %3 = and i32 %2, 1, !dbg !12814
  ret i32 %3, !dbg !12815
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #5 !dbg !12816 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12817
  %2 = lshr i32 %1, 27, !dbg !12818
  %3 = and i32 %2, 1, !dbg !12818
  ret i32 %3, !dbg !12819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12824, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i32 %1, metadata !12825, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12826, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12827, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i32 0, metadata !12828, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i32 0, metadata !12829, metadata !DIExpression()), !dbg !12830
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !12831
  %6 = icmp eq i32 %5, 0, !dbg !12833
  br i1 %6, label %7, label %27, !dbg !12834

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #25, !dbg !12835
  call void @llvm.dbg.value(metadata i32 %8, metadata !12829, metadata !DIExpression()), !dbg !12830
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.178() #25, !dbg !12837
  %10 = icmp eq i32 %9, 1, !dbg !12839
  br i1 %10, label %19, label %11, !dbg !12840

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12841
  br i1 %12, label %13, label %14, !dbg !12844

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !12845
  br label %15, !dbg !12847

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.179() #25, !dbg !12848
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.180() #25, !dbg !12850
  br label %16, !dbg !12851

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.178() #25, !dbg !12852
  %18 = icmp eq i32 %17, 1, !dbg !12853
  br i1 %18, label %19, label %16, !dbg !12851, !llvm.loop !12854

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12856
  %21 = load i32, i32* %20, align 4, !dbg !12856
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12857
  %23 = load i32, i32* %22, align 4, !dbg !12857
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12858
  %25 = load i32, i32* %24, align 4, !dbg !12858
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.170(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #25, !dbg !12859
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !12860
  call void @llvm.dbg.value(metadata i32 %26, metadata !12828, metadata !DIExpression()), !dbg !12830
  br label %27, !dbg !12861

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12862
  call void @llvm.dbg.value(metadata i32 %28, metadata !12828, metadata !DIExpression()), !dbg !12830
  ret i32 %28, !dbg !12863
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.178() unnamed_addr #5 !dbg !12864 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12865
  %2 = lshr i32 %1, 17, !dbg !12866
  %3 = and i32 %2, 1, !dbg !12866
  ret i32 %3, !dbg !12867
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12868 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12869
  %2 = or i32 %1, 262144, !dbg !12869
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12869
  ret void, !dbg !12870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.179() unnamed_addr #15 !dbg !12871 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12872
  %2 = and i32 %1, -262145, !dbg !12872
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12872
  ret void, !dbg !12873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.180() unnamed_addr #15 !dbg !12874 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12875
  %2 = or i32 %1, 65536, !dbg !12875
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12875
  ret void, !dbg !12876
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12877 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12880, metadata !DIExpression()), !dbg !12896
  call void @llvm.dbg.value(metadata i32 undef, metadata !12880, metadata !DIExpression()), !dbg !12896
  call void @llvm.dbg.value(metadata i32 undef, metadata !12880, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12896
  ret void, !dbg !12897
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12898 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12902, metadata !DIExpression()), !dbg !12904
  %2 = icmp eq i8* %0, null, !dbg !12905
  br i1 %2, label %29, label %3, !dbg !12907

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12908
  %5 = icmp eq i8 %4, 0, !dbg !12909
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12910
  br i1 %6, label %29, label %8, !dbg !12910

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12903, metadata !DIExpression()), !dbg !12904
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12911

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12903, metadata !DIExpression()), !dbg !12904
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !12913
  br i1 %10, label %11, label %15, !dbg !12918

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12919
  %13 = load i8*, i8** %12, align 4, !dbg !12919
  %14 = icmp eq i8* %13, %0, !dbg !12920
  br i1 %14, label %29, label %15, !dbg !12921

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12922
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12903, metadata !DIExpression()), !dbg !12904
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12923
  br i1 %17, label %7, label %8, !dbg !12924, !llvm.loop !12925

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12903, metadata !DIExpression()), !dbg !12904
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !12927
  br i1 %20, label %21, label %26, !dbg !12931

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12932
  %23 = load i8*, i8** %22, align 4, !dbg !12932
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !12933
  %25 = icmp eq i32 %24, 0, !dbg !12934
  br i1 %25, label %29, label %26, !dbg !12935

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12936
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12903, metadata !DIExpression()), !dbg !12904
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12937
  br i1 %28, label %29, label %18, !dbg !12911, !llvm.loop !12938

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12904
  ret %struct.device* %30, !dbg !12940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !12941 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12945, metadata !DIExpression()), !dbg !12946
  %2 = icmp eq %struct.device* %0, null, !dbg !12947
  br i1 %2, label %14, label %3, !dbg !12949

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12950
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12950
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12951
  %7 = load i8, i8* %6, align 1, !dbg !12951
  %8 = and i8 %7, 1, !dbg !12951
  %9 = icmp eq i8 %8, 0, !dbg !12951
  br i1 %9, label %14, label %10, !dbg !12952

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12953
  %12 = load i8, i8* %11, align 1, !dbg !12953
  %13 = icmp eq i8 %12, 0, !dbg !12954
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12946
  ret i1 %15, !dbg !12955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !12956 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12961, metadata !DIExpression()), !dbg !12962
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12963
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12964
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12965 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12973, metadata !DIExpression()), !dbg !12978
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12974, metadata !DIExpression()), !dbg !12978
  call void @llvm.dbg.value(metadata i8* %2, metadata !12975, metadata !DIExpression()), !dbg !12978
  %5 = bitcast i32* %4 to i8*, !dbg !12979
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12979
  call void @llvm.dbg.value(metadata i32 0, metadata !12976, metadata !DIExpression()), !dbg !12978
  store i32 0, i32* %4, align 4, !dbg !12980
  call void @llvm.dbg.value(metadata i32* %4, metadata !12976, metadata !DIExpression(DW_OP_deref)), !dbg !12978
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12981
  call void @llvm.dbg.value(metadata i16* %6, metadata !12977, metadata !DIExpression()), !dbg !12978
  %7 = load i32, i32* %4, align 4, !dbg !12982
  call void @llvm.dbg.value(metadata i32 %7, metadata !12976, metadata !DIExpression()), !dbg !12978
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12983
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12984
  ret i32 %8, !dbg !12985
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12986 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12990, metadata !DIExpression()), !dbg !12996
  call void @llvm.dbg.value(metadata i32* %1, metadata !12991, metadata !DIExpression()), !dbg !12996
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12997
  %4 = load i16*, i16** %3, align 4, !dbg !12997
  call void @llvm.dbg.value(metadata i16* %4, metadata !12992, metadata !DIExpression()), !dbg !12996
  %5 = icmp eq i16* %4, null, !dbg !12998
  br i1 %5, label %14, label %6, !dbg !12999

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13000
  call void @llvm.dbg.value(metadata i32 %7, metadata !12993, metadata !DIExpression()), !dbg !13000
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13001
  %9 = load i16, i16* %8, align 2, !dbg !13001
  %10 = add i16 %9, -32767, !dbg !13002
  %11 = icmp ult i16 %10, 2, !dbg !13002
  %12 = add i32 %7, 1, !dbg !13003
  call void @llvm.dbg.value(metadata i32 %12, metadata !12993, metadata !DIExpression()), !dbg !13000
  br i1 %11, label %13, label %6, !dbg !13002, !llvm.loop !13005

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13008
  br label %14, !dbg !13009

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13010
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13011 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13015, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 %1, metadata !13016, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13017, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i8* %3, metadata !13018, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.value(metadata i32 0, metadata !13019, metadata !DIExpression()), !dbg !13027
  %5 = icmp eq i32 %1, 0, !dbg !13028
  br i1 %5, label %16, label %8, !dbg !13029

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13019, metadata !DIExpression()), !dbg !13027
  %7 = icmp eq i32 %15, %1, !dbg !13028
  br i1 %7, label %16, label %8, !dbg !13029, !llvm.loop !13030

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13019, metadata !DIExpression()), !dbg !13027
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13032
  %11 = load i16, i16* %10, align 2, !dbg !13032
  call void @llvm.dbg.value(metadata i16 %11, metadata !13021, metadata !DIExpression()), !dbg !13033
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !13034
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13024, metadata !DIExpression()), !dbg !13033
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !13035
  call void @llvm.dbg.value(metadata i32 %13, metadata !13025, metadata !DIExpression()), !dbg !13033
  %14 = icmp slt i32 %13, 0, !dbg !13036
  %15 = add nuw i32 %9, 1, !dbg !13038
  call void @llvm.dbg.value(metadata i32 %15, metadata !13019, metadata !DIExpression()), !dbg !13027
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #6 !dbg !13040 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13044, metadata !DIExpression()), !dbg !13047
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13045, metadata !DIExpression()), !dbg !13047
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13046, metadata !DIExpression()), !dbg !13047
  %2 = sext i16 %0 to i32, !dbg !13048
  %3 = icmp slt i16 %0, 1, !dbg !13050
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13051
  %6 = add nsw i32 %2, -1, !dbg !13051
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13051
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13051
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13045, metadata !DIExpression()), !dbg !13047
  ret %struct.device* %8, !dbg !13052
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13053 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13055, metadata !DIExpression()), !dbg !13060
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13056, metadata !DIExpression()), !dbg !13060
  call void @llvm.dbg.value(metadata i8* %2, metadata !13057, metadata !DIExpression()), !dbg !13060
  %5 = bitcast i32* %4 to i8*, !dbg !13061
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13061
  call void @llvm.dbg.value(metadata i32 0, metadata !13058, metadata !DIExpression()), !dbg !13060
  store i32 0, i32* %4, align 4, !dbg !13062
  call void @llvm.dbg.value(metadata i32* %4, metadata !13058, metadata !DIExpression(DW_OP_deref)), !dbg !13060
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !13063
  call void @llvm.dbg.value(metadata i16* %6, metadata !13059, metadata !DIExpression()), !dbg !13060
  %7 = load i32, i32* %4, align 4, !dbg !13064
  call void @llvm.dbg.value(metadata i32 %7, metadata !13058, metadata !DIExpression()), !dbg !13060
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !13065
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13066
  ret i32 %8, !dbg !13067
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13068 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13070, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.value(metadata i32* %1, metadata !13071, metadata !DIExpression()), !dbg !13075
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13076
  %4 = load i16*, i16** %3, align 4, !dbg !13076
  call void @llvm.dbg.value(metadata i16* %4, metadata !13072, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.value(metadata i32 0, metadata !13073, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.value(metadata i32 0, metadata !13074, metadata !DIExpression()), !dbg !13075
  %5 = icmp eq i16* %4, null, !dbg !13077
  br i1 %5, label %22, label %6, !dbg !13079

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13073, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.value(metadata i16* %8, metadata !13072, metadata !DIExpression()), !dbg !13075
  %9 = load i16, i16* %8, align 2, !dbg !13080
  %10 = icmp eq i16 %9, -32768, !dbg !13084
  call void @llvm.dbg.value(metadata i32 undef, metadata !13073, metadata !DIExpression()), !dbg !13075
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13085
  call void @llvm.dbg.value(metadata i16* %11, metadata !13072, metadata !DIExpression()), !dbg !13075
  %12 = zext i1 %10 to i32, !dbg !13086
  %13 = add i32 %7, %12, !dbg !13086
  call void @llvm.dbg.value(metadata i32 %13, metadata !13073, metadata !DIExpression()), !dbg !13075
  %14 = icmp eq i32 %13, 2, !dbg !13087
  br i1 %14, label %15, label %6, !dbg !13088

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13075
  call void @llvm.dbg.value(metadata i32 %16, metadata !13074, metadata !DIExpression()), !dbg !13075
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13089
  %18 = load i16, i16* %17, align 2, !dbg !13089
  %19 = icmp eq i16 %18, 32767, !dbg !13090
  %20 = add i32 %16, 1, !dbg !13091
  call void @llvm.dbg.value(metadata i32 %20, metadata !13074, metadata !DIExpression()), !dbg !13075
  br i1 %19, label %21, label %15, !dbg !13093, !llvm.loop !13094

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13096
  br label %22, !dbg !13097

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13098
  call void @llvm.dbg.value(metadata i16* %23, metadata !13072, metadata !DIExpression()), !dbg !13075
  ret i16* %23, !dbg !13099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !13100 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13103
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13104
  ret i32* %2, !dbg !13105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #6 !dbg !13106 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13257, metadata !DIExpression()), !dbg !13260
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13258, metadata !DIExpression()), !dbg !13260
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13259, metadata !DIExpression()), !dbg !13260
  ret void, !dbg !13261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !13262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13266, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.value(metadata i32 %1, metadata !13267, metadata !DIExpression()), !dbg !13268
  ret void, !dbg !13269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !13270 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13274, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i32 %1, metadata !13275, metadata !DIExpression()), !dbg !13276
  ret void, !dbg !13277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !13278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13282, metadata !DIExpression()), !dbg !13284
  call void @llvm.dbg.value(metadata i8* %1, metadata !13283, metadata !DIExpression()), !dbg !13284
  ret i32 -134, !dbg !13285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !13286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13290, metadata !DIExpression()), !dbg !13292
  call void @llvm.dbg.value(metadata i8* %1, metadata !13291, metadata !DIExpression()), !dbg !13292
  ret i32 -134, !dbg !13293
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !13294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13297, metadata !DIExpression()), !dbg !13298
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13299, !srcloc !13305
  call void @llvm.dbg.value(metadata i32 undef, metadata !13302, metadata !DIExpression()) #23, !dbg !13306
  call void @llvm.dbg.value(metadata i32 undef, metadata !13303, metadata !DIExpression()) #23, !dbg !13306
  br label %3, !dbg !13307

3:                                                ; preds = %3, %1
  br label %3, !dbg !13308, !llvm.loop !13311
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13318, metadata !DIExpression()), !dbg !13320
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13319, metadata !DIExpression()), !dbg !13320
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.185, i32 0, i32 0), i32 noundef 69) #24, !dbg !13321
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13326
  unreachable, !dbg !13326
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !13327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13329, metadata !DIExpression()), !dbg !13330
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13331
  unreachable, !dbg !13331
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13334, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13335, metadata !DIExpression()), !dbg !13338
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13339, !srcloc !13305
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13339
  call void @llvm.dbg.value(metadata i32 %4, metadata !13302, metadata !DIExpression()) #23, !dbg !13341
  call void @llvm.dbg.value(metadata i32 undef, metadata !13303, metadata !DIExpression()) #23, !dbg !13341
  call void @llvm.dbg.value(metadata i32 %4, metadata !13336, metadata !DIExpression()), !dbg !13338
  %5 = tail call fastcc %struct.k_thread* @k_current_get.188() #26, !dbg !13342
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13337, metadata !DIExpression()), !dbg !13338
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #25, !dbg !13343
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.189, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #24, !dbg !13343
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13348
  br i1 %7, label %20, label %8, !dbg !13350

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13351, metadata !DIExpression()), !dbg !13356
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13358
  %10 = load i32, i32* %9, align 4, !dbg !13358
  %11 = and i32 %10, 511, !dbg !13359
  %12 = icmp eq i32 %11, 0, !dbg !13360
  br i1 %12, label %14, label %13, !dbg !13361

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.190, i32 0, i32 0), i32 noundef 69) #24, !dbg !13362
  br label %14, !dbg !13368

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #25, !dbg !13369
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.191, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #24, !dbg !13369
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !13374
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13351, metadata !DIExpression()), !dbg !13375
  %16 = load i32, i32* %9, align 4, !dbg !13380
  %17 = and i32 %16, 511, !dbg !13381
  %18 = icmp eq i32 %17, 0, !dbg !13382
  br i1 %18, label %22, label %19, !dbg !13383

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13384, metadata !DIExpression()) #23, !dbg !13387
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13390, !srcloc !13391
  br label %25, !dbg !13392

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #25, !dbg !13369
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.191, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #24, !dbg !13369
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !13374
  br label %22, !dbg !13393

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13394
  call void @llvm.dbg.value(metadata i32 %4, metadata !13384, metadata !DIExpression()) #23, !dbg !13397
  call void @llvm.dbg.value(metadata i32 %4, metadata !13384, metadata !DIExpression()) #23, !dbg !13400
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13338
  br i1 %23, label %25, label %24, !dbg !13402

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.192(%struct.k_thread* noundef %5) #25, !dbg !13403
  br label %25, !dbg !13406

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13406
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.188() unnamed_addr #13 !dbg !13407 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.200() #26, !dbg !13411
  ret %struct.k_thread* %1, !dbg !13412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #6 !dbg !13413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13417, metadata !DIExpression()), !dbg !13418
  %2 = icmp ult i32 %0, 5, !dbg !13419
  br i1 %2, label %3, label %6, !dbg !13419

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13419
  %5 = load i8*, i8** %4, align 4, !dbg !13419
  br label %6, !dbg !13419

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.194, i32 0, i32 0), %1 ], !dbg !13420
  ret i8* %7, !dbg !13422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13423 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13427, metadata !DIExpression()), !dbg !13429
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13430
  br i1 %2, label %9, label %3, !dbg !13431

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #24, !dbg !13432
  call void @llvm.dbg.value(metadata i8* %4, metadata !13428, metadata !DIExpression()), !dbg !13429
  %5 = icmp eq i8* %4, null, !dbg !13433
  br i1 %5, label %9, label %6, !dbg !13435

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13436
  %8 = icmp eq i8 %7, 0, !dbg !13437
  br i1 %8, label %9, label %10, !dbg !13438

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.193, i32 0, i32 0), metadata !13428, metadata !DIExpression()), !dbg !13429
  br label %10, !dbg !13439

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.193, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13429
  call void @llvm.dbg.value(metadata i8* %11, metadata !13428, metadata !DIExpression()), !dbg !13429
  ret i8* %11, !dbg !13441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.192(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13442 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13446, metadata !DIExpression()), !dbg !13447
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13448, !srcloc !13450
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !13451
  ret void, !dbg !13452
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.200() unnamed_addr #13 !dbg !13453 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13454, !srcloc !13456
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !13457
  ret %struct.k_thread* %1, !dbg !13458
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13459 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13463, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i32 %1, metadata !13464, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.value(metadata i32 %2, metadata !13465, metadata !DIExpression()), !dbg !13466
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !13467
  ret void, !dbg !13468
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13469 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13473, metadata !DIExpression()), !dbg !13476
  call void @llvm.dbg.value(metadata i8* %1, metadata !13474, metadata !DIExpression()), !dbg !13476
  call void @llvm.dbg.value(metadata i32 %2, metadata !13475, metadata !DIExpression()), !dbg !13476
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !13477
  ret void, !dbg !13478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13479 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !13480
  ret void, !dbg !13481
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13484, metadata !DIExpression()), !dbg !13485
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !13486
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13487
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13488
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13489
  %4 = trunc i32 %0 to i8, !dbg !13490
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13491
  store i8 %4, i8* %5, align 4, !dbg !13492
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13493
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !13494
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13495
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13496
  store i8* %8, i8** %9, align 4, !dbg !13497
  ret void, !dbg !13498
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13501, metadata !DIExpression()), !dbg !13507
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13508
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13502, metadata !DIExpression()), !dbg !13507
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13509
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13503, metadata !DIExpression()), !dbg !13507
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.207, i32 0, i32 0), metadata !13506, metadata !DIExpression()), !dbg !13507
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13510
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13511
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.207, i32 0, i32 0)) #24, !dbg !13512
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !13513
  ret void, !dbg !13514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !13515 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13519, metadata !DIExpression()), !dbg !13520
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13521
  ret i8* %2, !dbg !13522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !13523 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13528, metadata !DIExpression()), !dbg !13529
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13530
  %3 = load i8, i8* %2, align 1, !dbg !13531
  %4 = and i8 %3, -5, !dbg !13531
  store i8 %4, i8* %2, align 1, !dbg !13531
  ret void, !dbg !13532
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !13533 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !13536
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !13537
  %3 = ptrtoint i8* %2 to i32, !dbg !13546
  %4 = add i32 %3, 2048, !dbg !13547
  call void @llvm.dbg.value(metadata i32 %4, metadata !13541, metadata !DIExpression()) #23, !dbg !13548
  call void @llvm.dbg.value(metadata i32 %4, metadata !13549, metadata !DIExpression()) #23, !dbg !13552
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13554, !srcloc !13555
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13556
  %6 = or i32 %5, 512, !dbg !13556
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13556
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -2, i32 noundef 255) #24, !dbg !13557
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -5, i32 noundef 0) #24, !dbg !13560
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -12, i32 noundef 0) #24, !dbg !13561
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -11, i32 noundef 0) #24, !dbg !13562
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -10, i32 noundef 0) #24, !dbg !13563
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -4, i32 noundef 0) #24, !dbg !13564
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13565
  %8 = or i32 %7, 458752, !dbg !13565
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13565
  tail call void @z_arm_fault_init() #24, !dbg !13566
  tail call void @z_arm_cpu_idle_init() #24, !dbg !13567
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13568
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13571
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !13572
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !13573
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13574
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13574
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13535, metadata !DIExpression()), !dbg !13575
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !13576
  call void @z_device_state_init() #24, !dbg !13577
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !13578
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !13579
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !13580
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13581
  unreachable, !dbg !13581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2139, metadata !DIExpression()), !dbg !13582
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13583
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13583
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2140, metadata !DIExpression()), !dbg !13582
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2140, metadata !DIExpression()), !dbg !13582
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13584
  br i1 %7, label %8, label %35, !dbg !13585

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2140, metadata !DIExpression()), !dbg !13582
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13586
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13586
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2150, metadata !DIExpression()), !dbg !13587
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13588
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13588
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !13589
  call void @llvm.dbg.value(metadata i32 %14, metadata !2154, metadata !DIExpression()), !dbg !13587
  %15 = icmp eq %struct.device* %11, null, !dbg !13590
  br i1 %15, label %32, label %16, !dbg !13592

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13593
  br i1 %17, label %26, label %18, !dbg !13596

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13597
  call void @llvm.dbg.value(metadata i32 %19, metadata !2154, metadata !DIExpression()), !dbg !13587
  %20 = icmp ult i32 %19, 255, !dbg !13599
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13599
  call void @llvm.dbg.value(metadata i32 %21, metadata !2154, metadata !DIExpression()), !dbg !13587
  %22 = trunc i32 %21 to i8, !dbg !13600
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13601
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13601
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13602
  store i8 %22, i8* %25, align 1, !dbg !13603
  br label %26, !dbg !13604

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13605
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13605
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13606
  %30 = load i8, i8* %29, align 1, !dbg !13607
  %31 = or i8 %30, 1, !dbg !13607
  store i8 %31, i8* %29, align 1, !dbg !13607
  br label %32, !dbg !13608

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13609
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2140, metadata !DIExpression()), !dbg !13582
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13584
  br i1 %34, label %8, label %35, !dbg !13585, !llvm.loop !13610

35:                                               ; preds = %32, %1
  ret void, !dbg !13612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.210(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13615, metadata !DIExpression()), !dbg !13617
  call void @llvm.dbg.value(metadata i32 %1, metadata !13616, metadata !DIExpression()), !dbg !13617
  %3 = trunc i32 %1 to i8, !dbg !13618
  %4 = shl i8 %3, 4, !dbg !13618
  %5 = and i32 %0, 15, !dbg !13621
  %6 = add nsw i32 %5, -4, !dbg !13622
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13623
  store volatile i8 %4, i8* %7, align 1, !dbg !13624
  ret void, !dbg !13625
}

; Function Attrs: optsize
declare !dbg !13626 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !13627 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13630, metadata !DIExpression()), !dbg !13631
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13632
  store i8 1, i8* %2, align 1, !dbg !13633
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13634
  store i8 1, i8* %3, align 4, !dbg !13635
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13636
  store i32 0, i32* %4, align 4, !dbg !13637
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13638
  store i32 0, i32* %5, align 4, !dbg !13639
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13640
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13641
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13642
  ret void, !dbg !13643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13644 {
  tail call void @z_sched_init() #24, !dbg !13649
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13650
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 11, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.211, i32 0, i32 0)) #24, !dbg !13651
  call void @llvm.dbg.value(metadata i8* %1, metadata !13648, metadata !DIExpression()), !dbg !13652
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13653
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13654
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !13655
  ret i8* %1, !dbg !13656
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !13657 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13661, metadata !DIExpression()), !dbg !13662
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !13663
  unreachable, !dbg !13664
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13665 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13667, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.value(metadata i8* %1, metadata !13668, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.value(metadata i8* %2, metadata !13669, metadata !DIExpression()), !dbg !13670
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13671
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !13672
  tail call void @boot_banner() #24, !dbg !13673
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !13674
  tail call void @z_init_static_threads() #24, !dbg !13675
  tail call void @main() #24, !dbg !13676
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13677
  %5 = and i8 %4, -2, !dbg !13677
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13677
  ret void, !dbg !13678
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !13679 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13689, metadata !DIExpression()), !dbg !13691
  call void @llvm.dbg.value(metadata i8* %1, metadata !13690, metadata !DIExpression()), !dbg !13691
  ret void, !dbg !13692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !13693 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13695, metadata !DIExpression()), !dbg !13697
  call void @llvm.dbg.value(metadata i8* %1, metadata !13696, metadata !DIExpression()), !dbg !13697
  ret void, !dbg !13698
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13699 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13700, !srcloc !13707
  call void @llvm.dbg.value(metadata i32 %1, metadata !13703, metadata !DIExpression()) #23, !dbg !13708
  %2 = icmp ne i32 %1, 0, !dbg !13709
  ret i1 %2, !dbg !13710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !13711 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13712
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13713
  %3 = load i8, i8* %2, align 4, !dbg !13714
  %4 = or i8 %3, 1, !dbg !13714
  store i8 %4, i8* %2, align 4, !dbg !13714
  ret void, !dbg !13715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !13716 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13717
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13718
  %3 = load i8, i8* %2, align 4, !dbg !13719
  %4 = and i8 %3, -2, !dbg !13719
  store i8 %4, i8* %2, align 4, !dbg !13719
  ret void, !dbg !13720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !13721 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13722
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13723
  %3 = load i8, i8* %2, align 4, !dbg !13723
  %4 = and i8 %3, 1, !dbg !13724
  %5 = icmp ne i8 %4, 0, !dbg !13725
  ret i1 %5, !dbg !13726
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13727 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13731, metadata !DIExpression()), !dbg !13733
  call void @llvm.dbg.value(metadata i8* %1, metadata !13732, metadata !DIExpression()), !dbg !13733
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13734
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13736
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13731, metadata !DIExpression()), !dbg !13733
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13737
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #24, !dbg !13738
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13739
  store i8 0, i8* %8, align 1, !dbg !13740
  ret i32 0, !dbg !13741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #6 !dbg !13742 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13746, metadata !DIExpression()), !dbg !13747
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13748
  ret i8* %2, !dbg !13749
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13750 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13754, metadata !DIExpression()), !dbg !13757
  call void @llvm.dbg.value(metadata i8* %1, metadata !13755, metadata !DIExpression()), !dbg !13757
  call void @llvm.dbg.value(metadata i32 %2, metadata !13756, metadata !DIExpression()), !dbg !13757
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13758
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #24, !dbg !13759
  ret i32 0, !dbg !13760
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2165 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2282, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata i8* %1, metadata !2283, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata i32 %2, metadata !2284, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata i32 0, metadata !2285, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata i8 undef, metadata !2287, metadata !DIExpression()), !dbg !13761
  %4 = icmp eq i8* %1, null, !dbg !13762
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13764
  br i1 %6, label %46, label %7, !dbg !13764

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13765
  %9 = load i8, i8* %8, align 1, !dbg !13765
  call void @llvm.dbg.value(metadata i8 %9, metadata !2287, metadata !DIExpression()), !dbg !13761
  %10 = add i32 %2, -1, !dbg !13766
  call void @llvm.dbg.value(metadata i32 %10, metadata !2284, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata i8 0, metadata !2288, metadata !DIExpression()), !dbg !13767
  call void @llvm.dbg.value(metadata i8 %9, metadata !2287, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata i32 0, metadata !2285, metadata !DIExpression()), !dbg !13761
  %11 = icmp eq i8 %9, 0, !dbg !13768
  br i1 %11, label %12, label %15, !dbg !13770

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13771
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13772
  store i8 0, i8* %14, align 1, !dbg !13773
  br label %46, !dbg !13774

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2288, metadata !DIExpression()), !dbg !13767
  call void @llvm.dbg.value(metadata i8 %17, metadata !2287, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata i32 %18, metadata !2285, metadata !DIExpression()), !dbg !13761
  %19 = zext i8 %17 to i32, !dbg !13775
  %20 = zext i8 %16 to i32, !dbg !13776
  %21 = shl nuw i32 1, %20, !dbg !13776
  call void @llvm.dbg.value(metadata i32 %21, metadata !2286, metadata !DIExpression()), !dbg !13761
  %22 = and i32 %21, %19, !dbg !13778
  %23 = icmp eq i32 %22, 0, !dbg !13780
  br i1 %23, label %42, label %24, !dbg !13781

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13782
  %26 = sub i32 %10, %18, !dbg !13783
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13784
  %28 = load i8*, i8** %27, align 4, !dbg !13784
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13785
  %30 = load i32, i32* %29, align 4, !dbg !13785
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !13786
  %32 = add i32 %31, %18, !dbg !13787
  call void @llvm.dbg.value(metadata i32 %32, metadata !2285, metadata !DIExpression()), !dbg !13761
  %33 = trunc i32 %21 to i8, !dbg !13788
  %34 = xor i8 %33, -1, !dbg !13788
  %35 = and i8 %17, %34, !dbg !13788
  call void @llvm.dbg.value(metadata i8 %35, metadata !2287, metadata !DIExpression()), !dbg !13761
  %36 = icmp eq i8 %35, 0, !dbg !13789
  br i1 %36, label %12, label %37, !dbg !13791

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13792
  %39 = sub i32 %10, %32, !dbg !13794
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.214, i32 0, i32 0), i32 noundef 1) #25, !dbg !13795
  %41 = add i32 %40, %32, !dbg !13796
  call void @llvm.dbg.value(metadata i32 %41, metadata !2285, metadata !DIExpression()), !dbg !13761
  br label %42, !dbg !13797

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13761
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13761
  call void @llvm.dbg.value(metadata i8 %44, metadata !2287, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata i32 %43, metadata !2285, metadata !DIExpression()), !dbg !13761
  %45 = add i8 %16, 1, !dbg !13798
  call void @llvm.dbg.value(metadata i8 %45, metadata !2288, metadata !DIExpression()), !dbg !13767
  br label %15, !dbg !13770

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.215, i32 0, i32 0), %3 ], !dbg !13761
  ret i8* %47, !dbg !13799
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13800 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13804, metadata !DIExpression()), !dbg !13809
  call void @llvm.dbg.value(metadata i32 %1, metadata !13805, metadata !DIExpression()), !dbg !13809
  call void @llvm.dbg.value(metadata i8* %2, metadata !13806, metadata !DIExpression()), !dbg !13809
  call void @llvm.dbg.value(metadata i32 %3, metadata !13807, metadata !DIExpression()), !dbg !13809
  %5 = icmp ult i32 %1, %3, !dbg !13810
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13810
  call void @llvm.dbg.value(metadata i32 %6, metadata !13808, metadata !DIExpression()), !dbg !13809
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !13811
  ret i32 %6, !dbg !13812
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13813 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13817, metadata !DIExpression()), !dbg !13818
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !13819
  ret void, !dbg !13820
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13821 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13830, metadata !DIExpression()), !dbg !13841
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13831, metadata !DIExpression()), !dbg !13841
  call void @llvm.dbg.value(metadata i32 %2, metadata !13832, metadata !DIExpression()), !dbg !13841
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13833, metadata !DIExpression()), !dbg !13841
  call void @llvm.dbg.value(metadata i8* %4, metadata !13834, metadata !DIExpression()), !dbg !13841
  call void @llvm.dbg.value(metadata i8* %5, metadata !13835, metadata !DIExpression()), !dbg !13841
  call void @llvm.dbg.value(metadata i8* %6, metadata !13836, metadata !DIExpression()), !dbg !13841
  call void @llvm.dbg.value(metadata i32 %7, metadata !13837, metadata !DIExpression()), !dbg !13841
  call void @llvm.dbg.value(metadata i32 %8, metadata !13838, metadata !DIExpression()), !dbg !13841
  call void @llvm.dbg.value(metadata i8* %9, metadata !13839, metadata !DIExpression()), !dbg !13841
  %11 = icmp eq i32 %7, 15, !dbg !13842
  br i1 %11, label %12, label %15, !dbg !13842

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13842
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #25, !dbg !13842
  br i1 %14, label %19, label %18, !dbg !13842

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13842
  %17 = icmp ult i32 %16, 31, !dbg !13842
  br i1 %17, label %19, label %18, !dbg !13842

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 536) #24, !dbg !13846
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.228, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #24, !dbg !13846
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 536) #24, !dbg !13846
  unreachable, !dbg !13846

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13848
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #25, !dbg !13849
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13850
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !13851
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !13852
  call void @llvm.dbg.value(metadata i8* %22, metadata !13840, metadata !DIExpression()), !dbg !13841
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !13853
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13854
  store i8* null, i8** %23, align 4, !dbg !13855
  %24 = icmp eq i8* %9, null, !dbg !13856
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13858
  br i1 %24, label %29, label %26, !dbg !13859

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #24, !dbg !13860
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13862
  store i8 0, i8* %28, align 1, !dbg !13863
  br label %30, !dbg !13864

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13865
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13867
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13867
  br i1 %32, label %36, label %33, !dbg !13869

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13870
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13870
  br label %36, !dbg !13871

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13841
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13872
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13874
  ret i8* %22, !dbg !13875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #6 !dbg !13876 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13880, metadata !DIExpression()), !dbg !13881
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13882
  ret i1 %2, !dbg !13883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !13884 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13889, metadata !DIExpression()), !dbg !13890
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13891
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !13892
  ret void, !dbg !13893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !13894 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13899, metadata !DIExpression()), !dbg !13903
  call void @llvm.dbg.value(metadata i32 %1, metadata !13900, metadata !DIExpression()), !dbg !13903
  call void @llvm.dbg.value(metadata i32 %2, metadata !13901, metadata !DIExpression()), !dbg !13903
  call void @llvm.dbg.value(metadata i32 %3, metadata !13902, metadata !DIExpression()), !dbg !13903
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13904
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13905
  %6 = trunc i32 %3 to i8, !dbg !13906
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13907
  store i8 %6, i8* %7, align 4, !dbg !13908
  %8 = trunc i32 %2 to i8, !dbg !13909
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13910
  store i8 %8, i8* %9, align 1, !dbg !13911
  %10 = trunc i32 %1 to i8, !dbg !13912
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13913
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13913
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13913
  store i8 %10, i8* %13, align 2, !dbg !13914
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13915
  store i8 0, i8* %14, align 1, !dbg !13916
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !13917
  ret void, !dbg !13918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !13919 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13923, metadata !DIExpression()), !dbg !13931
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13924, metadata !DIExpression()), !dbg !13931
  call void @llvm.dbg.value(metadata i32 %2, metadata !13925, metadata !DIExpression()), !dbg !13931
  call void @llvm.dbg.value(metadata i32 0, metadata !13930, metadata !DIExpression()), !dbg !13931
  %4 = add i32 %2, 7, !dbg !13932
  %5 = and i32 %4, -8, !dbg !13932
  %6 = add i32 %5, 64, !dbg !13932
  call void @llvm.dbg.value(metadata i32 %6, metadata !13926, metadata !DIExpression()), !dbg !13931
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.229(%struct.z_thread_stack_element* noundef %1) #25, !dbg !13934
  call void @llvm.dbg.value(metadata i8* %7, metadata !13929, metadata !DIExpression()), !dbg !13931
  call void @llvm.dbg.value(metadata i32 %5, metadata !13927, metadata !DIExpression()), !dbg !13931
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13935
  call void @llvm.dbg.value(metadata i8* %8, metadata !13928, metadata !DIExpression()), !dbg !13931
  call void @llvm.dbg.value(metadata i32 0, metadata !13930, metadata !DIExpression()), !dbg !13931
  %9 = ptrtoint i8* %7 to i32, !dbg !13936
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13937
  store i32 %9, i32* %10, align 4, !dbg !13938
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13939
  store i32 %5, i32* %11, align 4, !dbg !13940
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13941
  store i32 0, i32* %12, align 4, !dbg !13942
  call void @llvm.dbg.value(metadata i8* %8, metadata !13928, metadata !DIExpression()), !dbg !13931
  ret i8* %8, !dbg !13943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.229(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !13944 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13948, metadata !DIExpression()), !dbg !13949
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13950
  ret i8* %2, !dbg !13951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13952 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13957, metadata !DIExpression()), !dbg !13958
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13959
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13960
  ret void, !dbg !13961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13962 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13964, metadata !DIExpression()), !dbg !13965
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13966
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !13967
  ret void, !dbg !13968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13969 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13973, metadata !DIExpression()), !dbg !13974
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13975
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13976
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13977
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13978
  ret void, !dbg !13979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !13980 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13985, metadata !DIExpression()), !dbg !13986
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13987
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13988
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13989
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13990
  ret void, !dbg !13991
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13992 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14009, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14000, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14001, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.value(metadata i32 %2, metadata !14002, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14003, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.value(metadata i8* %4, metadata !14004, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.value(metadata i8* %5, metadata !14005, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.value(metadata i8* %6, metadata !14006, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.value(metadata i32 %7, metadata !14007, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.value(metadata i32 %8, metadata !14008, metadata !DIExpression()), !dbg !14010
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14011, !srcloc !13707
  call void @llvm.dbg.value(metadata i32 %11, metadata !13703, metadata !DIExpression()) #23, !dbg !14016
  %12 = icmp eq i32 %11, 0, !dbg !14017
  br i1 %12, label %14, label %13, !dbg !14018

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 647) #24, !dbg !14019
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.233, i32 0, i32 0)) #24, !dbg !14019
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 647) #24, !dbg !14019
  unreachable, !dbg !14019

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14009, metadata !DIExpression()), !dbg !14010
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #25, !dbg !14021
  %17 = icmp eq i64 %15, -1, !dbg !14022
  br i1 %17, label %19, label %18, !dbg !14024

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !14025
  br label %19, !dbg !14027

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14029 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14034, metadata !DIExpression()), !dbg !14035
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14033, metadata !DIExpression()), !dbg !14035
  %4 = icmp eq i64 %3, 0, !dbg !14036
  br i1 %4, label %5, label %6, !dbg !14038

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !14039
  br label %7, !dbg !14041

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !14042
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14045 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14049, metadata !DIExpression()), !dbg !14050
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14051, !srcloc !14053
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !14054
  ret void, !dbg !14055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14056 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14059, metadata !DIExpression()), !dbg !14060
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14058, metadata !DIExpression()), !dbg !14060
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14061
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !14062
  ret void, !dbg !14063
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14064 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14066, metadata !DIExpression()), !dbg !14086
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14087

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 750) #24, !dbg !14091
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.237, i32 0, i32 0)) #24, !dbg !14091
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 750) #24, !dbg !14091
  unreachable, !dbg !14091

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14066, metadata !DIExpression()), !dbg !14086
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14094
  br i1 %4, label %6, label %5, !dbg !14095

5:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !14096
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14084, metadata !DIExpression()), !dbg !14097
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14098

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14102
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14102
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14104
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14104
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14105
  %12 = load i32, i32* %11, align 4, !dbg !14105
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14106
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14106
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14107
  %16 = load i8*, i8** %15, align 4, !dbg !14107
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14108
  %18 = load i8*, i8** %17, align 4, !dbg !14108
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14109
  %20 = load i8*, i8** %19, align 4, !dbg !14109
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14110
  %22 = load i32, i32* %21, align 4, !dbg !14110
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14111
  %24 = load i32, i32* %23, align 4, !dbg !14111
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14112
  %26 = load i8*, i8** %25, align 4, !dbg !14112
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #25, !dbg !14113
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14114
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14115
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14116
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14116
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14117
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14066, metadata !DIExpression()), !dbg !14086
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14118
  br i1 %32, label %1, label %2, !dbg !14087, !llvm.loop !14119

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 781) #24, !dbg !14121
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.237, i32 0, i32 0)) #24, !dbg !14121
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 781) #24, !dbg !14121
  unreachable, !dbg !14121

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14084, metadata !DIExpression()), !dbg !14097
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14124
  br i1 %36, label %38, label %37, !dbg !14125

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #24, !dbg !14126
  ret void, !dbg !14127

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14128
  %40 = load i32, i32* %39, align 4, !dbg !14128
  %41 = icmp eq i32 %40, -1, !dbg !14131
  br i1 %41, label %50, label %42, !dbg !14132

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14133
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14133
  %45 = icmp sgt i32 %40, 0, !dbg !14135
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14135
  %47 = zext i32 %46 to i64, !dbg !14135
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.238(i64 noundef %47) #25, !dbg !14135
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14136
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #25, !dbg !14136
  br label %50, !dbg !14137

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14138
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14084, metadata !DIExpression()), !dbg !14097
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14139
  br i1 %52, label %33, label %34, !dbg !14098, !llvm.loop !14140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.238(i64 noundef %0) unnamed_addr #6 !dbg !14142 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14144, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i64 %0, metadata !14146, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.value(metadata i32 1000, metadata !14149, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.value(metadata i32 10000, metadata !14150, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.value(metadata i8 1, metadata !14151, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.value(metadata i8 0, metadata !14152, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.value(metadata i8 1, metadata !14153, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.value(metadata i8 0, metadata !14154, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.value(metadata i8 1, metadata !14155, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.value(metadata i8 0, metadata !14156, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.value(metadata i64 0, metadata !14157, metadata !DIExpression()), !dbg !14161
  call void @llvm.dbg.value(metadata i64 0, metadata !14157, metadata !DIExpression()), !dbg !14161
  %2 = mul i64 %0, 10, !dbg !14163
  ret i64 %2, !dbg !14169
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !14170 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14172, metadata !DIExpression()), !dbg !14176
  call void @llvm.dbg.value(metadata i8* %1, metadata !14173, metadata !DIExpression()), !dbg !14176
  call void @llvm.dbg.value(metadata i8* %2, metadata !14174, metadata !DIExpression()), !dbg !14176
  call void @llvm.dbg.value(metadata i8* %3, metadata !14175, metadata !DIExpression()), !dbg !14176
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14177
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14178
  %7 = load i8, i8* %6, align 4, !dbg !14179
  %8 = or i8 %7, 4, !dbg !14179
  store i8 %8, i8* %6, align 4, !dbg !14179
  tail call void @z_thread_essential_clear() #25, !dbg !14180
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14181
  unreachable, !dbg !14181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !14182 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14187, metadata !DIExpression()), !dbg !14189
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14190
  %3 = load i32, i32* %2, align 4, !dbg !14190
  call void @llvm.dbg.value(metadata i32 %3, metadata !14188, metadata !DIExpression()), !dbg !14189
  %4 = icmp eq i32 %3, 0, !dbg !14191
  br i1 %4, label %10, label %5, !dbg !14193

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14194
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14197
  %8 = zext i8 %7 to i32, !dbg !14198
  %9 = icmp eq i32 %6, %8, !dbg !14199
  br i1 %9, label %11, label %10, !dbg !14200

10:                                               ; preds = %5, %1
  br label %11, !dbg !14201

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14189
  ret i1 %12, !dbg !14202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #11 !dbg !14203 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14205, metadata !DIExpression()), !dbg !14206
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14207
  %3 = load i32, i32* %2, align 4, !dbg !14207
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14209
  %5 = zext i8 %4 to i32, !dbg !14210
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14211
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14212
  %8 = or i32 %7, %5, !dbg !14213
  %9 = icmp eq i32 %3, %8, !dbg !14214
  br i1 %9, label %10, label %11, !dbg !14215

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14216
  br label %11, !dbg !14217

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #11 !dbg !14219 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14223, metadata !DIExpression()), !dbg !14224
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14225
  %3 = zext i8 %2 to i32, !dbg !14226
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14227
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14228
  %6 = or i32 %5, %3, !dbg !14229
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14230
  store i32 %6, i32* %7, align 4, !dbg !14231
  ret void, !dbg !14232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !14233 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14237, metadata !DIExpression()), !dbg !14238
  ret i32 -134, !dbg !14239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #6 !dbg !14240 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14244, metadata !DIExpression()), !dbg !14246
  call void @llvm.dbg.value(metadata i32 %1, metadata !14245, metadata !DIExpression()), !dbg !14246
  ret i32 -134, !dbg !14247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #6 !dbg !14248 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14255, metadata !DIExpression()), !dbg !14257
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14256, metadata !DIExpression()), !dbg !14257
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14258
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14260
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14257
  ret i32 %6, !dbg !14261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #6 !dbg !14262 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14266, metadata !DIExpression()), !dbg !14267
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14268
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14267
  ret i32 %3, !dbg !14270
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14271 {
  tail call void @sys_clock_idle_exit() #24, !dbg !14273
  ret void, !dbg !14274
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !14275 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14277, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i8* %1, metadata !14278, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata i8* %2, metadata !14279, metadata !DIExpression()), !dbg !14280
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14281
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14281
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14281
  %7 = load i8, i8* %6, align 2, !dbg !14281
  %8 = icmp sgt i8 %7, -1, !dbg !14281
  br i1 %8, label %10, label %9, !dbg !14284

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 39) #24, !dbg !14285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 39) #24, !dbg !14285
  unreachable, !dbg !14285

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14287, !srcloc !14294
  call void @llvm.dbg.value(metadata i32 undef, metadata !14290, metadata !DIExpression()) #23, !dbg !14295
  call void @llvm.dbg.value(metadata i32 undef, metadata !14291, metadata !DIExpression()) #23, !dbg !14295
  tail call fastcc void @k_cpu_idle() #25, !dbg !14296
  br label %10, !dbg !14297, !llvm.loop !14298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14300 {
  tail call void @arch_cpu_idle() #24, !dbg !14301
  ret void, !dbg !14302
}

; Function Attrs: optsize
declare !dbg !14303 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !14304 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14308, metadata !DIExpression()), !dbg !14312
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14309, metadata !DIExpression()), !dbg !14312
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14313
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14313
  %5 = load i8, i8* %4, align 2, !dbg !14313
  call void @llvm.dbg.value(metadata i8 %5, metadata !14310, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14312
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14314
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14314
  %8 = load i8, i8* %7, align 2, !dbg !14314
  call void @llvm.dbg.value(metadata i8 %8, metadata !14311, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14312
  %9 = icmp eq i8 %8, %5, !dbg !14315
  %10 = sext i8 %5 to i32, !dbg !14317
  %11 = sext i8 %8 to i32, !dbg !14317
  %12 = sub nsw i32 %11, %10, !dbg !14317
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14317
  ret i32 %13, !dbg !14318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14319 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14323, metadata !DIExpression()), !dbg !14324
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !14325
  %3 = icmp eq i32 %2, 0, !dbg !14327
  br i1 %3, label %8, label %4, !dbg !14328

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !14329
  %6 = add i32 %5, %2, !dbg !14331
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14332
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !14333
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !14334
  br label %8, !dbg !14335

8:                                                ; preds = %4, %1
  ret void, !dbg !14336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !14337 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14341, metadata !DIExpression()), !dbg !14343
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14344
  call void @llvm.dbg.value(metadata i32 %1, metadata !14342, metadata !DIExpression()), !dbg !14343
  ret i32 %1, !dbg !14345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14350, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.value(metadata i32 %1, metadata !14351, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.value(metadata i32 0, metadata !14352, metadata !DIExpression()), !dbg !14360
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !14368
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14370, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !14368
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14378
  br i1 %4, label %6, label %5, !dbg !14381

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !14382
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14382
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !14382
  unreachable, !dbg !14382

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !14368
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14358, metadata !DIExpression()), !dbg !14360
  call void @llvm.dbg.value(metadata i32 undef, metadata !14352, metadata !DIExpression()), !dbg !14360
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14385
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !14388
  %8 = icmp sgt i32 %0, 0, !dbg !14389
  %9 = icmp sgt i32 %7, 2, !dbg !14391
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14391
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14391
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14392
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14393
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14394
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !14401
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !14401
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14403
  br i1 %12, label %14, label %13, !dbg !14406

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !14407
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14407
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !14407
  unreachable, !dbg !14407

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14370
  call void @llvm.dbg.value(metadata i32 %15, metadata !14373, metadata !DIExpression()) #23, !dbg !14377
  call void @llvm.dbg.value(metadata i32 %15, metadata !14367, metadata !DIExpression()) #23, !dbg !14368
  call void @llvm.dbg.value(metadata i32 %15, metadata !14358, metadata !DIExpression()), !dbg !14360
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !14401
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !14412
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14414, !srcloc !14415
  call void @llvm.dbg.value(metadata i32 1, metadata !14352, metadata !DIExpression()), !dbg !14360
  call void @llvm.dbg.value(metadata i32 undef, metadata !14352, metadata !DIExpression()), !dbg !14360
  ret void, !dbg !14416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #6 !dbg !14417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14419, metadata !DIExpression()), !dbg !14420
  call void @llvm.dbg.value(metadata i32 %0, metadata !14421, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14436
  call void @llvm.dbg.value(metadata i32 1000, metadata !14424, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.value(metadata i32 10000, metadata !14425, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.value(metadata i8 1, metadata !14426, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.value(metadata i1 true, metadata !14427, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14436
  call void @llvm.dbg.value(metadata i1 true, metadata !14428, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14436
  call void @llvm.dbg.value(metadata i8 0, metadata !14429, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.value(metadata i1 true, metadata !14430, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14436
  call void @llvm.dbg.value(metadata i1 false, metadata !14431, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14436
  call void @llvm.dbg.value(metadata i64 0, metadata !14432, metadata !DIExpression()), !dbg !14436
  call void @llvm.dbg.value(metadata i64 0, metadata !14432, metadata !DIExpression()), !dbg !14436
  %2 = mul i32 %0, 10, !dbg !14438
  ret i32 %2, !dbg !14444
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14447, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !14450
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14452, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !14450
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14455
  br i1 %3, label %5, label %4, !dbg !14456

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !14457
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14457
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !14457
  unreachable, !dbg !14457

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14452
  call void @llvm.dbg.value(metadata i32 %6, metadata !14373, metadata !DIExpression()) #23, !dbg !14454
  call void @llvm.dbg.value(metadata i32 %6, metadata !14367, metadata !DIExpression()) #23, !dbg !14450
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14458
  call void @llvm.dbg.value(metadata i32 %6, metadata !14448, metadata !DIExpression()), !dbg !14449
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14459
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14461
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14462
  br i1 %9, label %10, label %14, !dbg !14463

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14464
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !14466
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !14466
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14468
  br i1 %11, label %13, label %12, !dbg !14469

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !14470
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14470
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !14470
  unreachable, !dbg !14470

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14395, metadata !DIExpression()) #23, !dbg !14466
  call void @llvm.dbg.value(metadata i32 %6, metadata !14409, metadata !DIExpression()) #23, !dbg !14471
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14473, !srcloc !14415
  br label %33, !dbg !14474

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14475
  %15 = tail call fastcc i32 @slice_time() #25, !dbg !14476
  %16 = icmp eq i32 %15, 0, !dbg !14476
  br i1 %16, label %27, label %17, !dbg !14478

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #25, !dbg !14479
  br i1 %18, label %19, label %27, !dbg !14480

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14481
  %21 = icmp sgt i32 %20, %0, !dbg !14484
  br i1 %21, label %25, label %22, !dbg !14485

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14486
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #25, !dbg !14486
  call void @llvm.dbg.value(metadata i32 %24, metadata !14448, metadata !DIExpression()), !dbg !14449
  br label %28, !dbg !14488

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14489
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14489
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14491
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14449
  call void @llvm.dbg.value(metadata i32 %29, metadata !14448, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !14493
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !14493
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14495
  br i1 %30, label %32, label %31, !dbg !14496

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !14497
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14497
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !14497
  unreachable, !dbg !14497

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14395, metadata !DIExpression()) #23, !dbg !14493
  call void @llvm.dbg.value(metadata i32 %29, metadata !14409, metadata !DIExpression()) #23, !dbg !14498
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14500, !srcloc !14415
  br label %33, !dbg !14501

33:                                               ; preds = %32, %13
  ret void, !dbg !14501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !14502 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14506, metadata !DIExpression()), !dbg !14508
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !14509
  %3 = icmp eq i32 %2, 0, !dbg !14509
  br i1 %3, label %16, label %4, !dbg !14510

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !14511
  br i1 %5, label %16, label %6, !dbg !14512

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14513
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14513
  %9 = load i8, i8* %8, align 2, !dbg !14513
  %10 = sext i8 %9 to i32, !dbg !14514
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14515
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !14516
  br i1 %12, label %16, label %13, !dbg !14517

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !14518
  %15 = xor i1 %14, true, !dbg !14519
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14508
  call void @llvm.dbg.value(metadata i1 %17, metadata !14507, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14508
  ret i1 %17, !dbg !14520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14521 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14525, metadata !DIExpression()), !dbg !14527
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14528
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14526, metadata !DIExpression()), !dbg !14527
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !14529
  br i1 %3, label %5, label %4, !dbg !14531

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !14532
  br label %5, !dbg !14534

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14525, metadata !DIExpression()), !dbg !14527
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14535
  ret i32 %6, !dbg !14536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14537 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14539, metadata !DIExpression()), !dbg !14541
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14542
  %3 = load i8, i8* %2, align 1, !dbg !14542
  call void @llvm.dbg.value(metadata i8 %3, metadata !14540, metadata !DIExpression()), !dbg !14541
  %4 = and i8 %3, 31, !dbg !14543
  %5 = icmp ne i8 %4, 0, !dbg !14544
  ret i1 %5, !dbg !14545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14548, metadata !DIExpression()), !dbg !14549
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14550
  br i1 %2, label %3, label %7, !dbg !14552

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14553, metadata !DIExpression()) #23, !dbg !14556
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14559
  %5 = load i8, i8* %4, align 1, !dbg !14560
  %6 = and i8 %5, 127, !dbg !14560
  store i8 %6, i8* %4, align 1, !dbg !14560
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14561, metadata !DIExpression()) #23, !dbg !14564
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14568
  br label %7, !dbg !14569

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14570, metadata !DIExpression()) #23, !dbg !14573
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14575
  %9 = load i8, i8* %8, align 1, !dbg !14576
  %10 = or i8 %9, -128, !dbg !14576
  store i8 %10, i8* %8, align 1, !dbg !14576
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14577, metadata !DIExpression()) #23, !dbg !14580
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14584, metadata !DIExpression()) #23, !dbg !14592
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14590, metadata !DIExpression()) #23, !dbg !14592
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14594
  br i1 %11, label %12, label %13, !dbg !14597

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 186) #24, !dbg !14598
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 186) #24, !dbg !14598
  unreachable, !dbg !14598

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14600
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14591, metadata !DIExpression()) #23, !dbg !14592
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14602
  br i1 %15, label %26, label %16, !dbg !14600

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14591, metadata !DIExpression()) #23, !dbg !14592
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14604
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14591, metadata !DIExpression()) #23, !dbg !14592
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #24, !dbg !14605
  %20 = icmp sgt i32 %19, 0, !dbg !14608
  br i1 %20, label %21, label %23, !dbg !14609

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14610
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #24, !dbg !14612
  br label %28, !dbg !14613

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #24, !dbg !14602
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14591, metadata !DIExpression()) #23, !dbg !14592
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14602
  br i1 %25, label %26, label %16, !dbg !14600, !llvm.loop !14614

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14616
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #24, !dbg !14617
  br label %28, !dbg !14618

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14619
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14620
  %31 = zext i1 %30 to i32, !dbg !14620
  tail call fastcc void @update_cache(i32 noundef %31) #25, !dbg !14621
  ret void, !dbg !14622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14623 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14625, metadata !DIExpression()), !dbg !14626
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #25, !dbg !14627
  ret i1 %2, !dbg !14628
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14629 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14631, metadata !DIExpression()), !dbg !14633
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14632, metadata !DIExpression()), !dbg !14633
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !14634
  br i1 %3, label %4, label %5, !dbg !14637

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1139) #24, !dbg !14638
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1139) #24, !dbg !14638
  unreachable, !dbg !14638

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14640
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #25, !dbg !14641
  ret void, !dbg !14642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #6 !dbg !14643 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14645, metadata !DIExpression()), !dbg !14646
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14647
  ret i1 %2, !dbg !14648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !14649 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14653, metadata !DIExpression()), !dbg !14654
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !14655
  br i1 %2, label %6, label %3, !dbg !14655

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14656
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14656
  br label %6, !dbg !14655

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14655
  ret %struct._dnode* %7, !dbg !14657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !14658 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14662, metadata !DIExpression()), !dbg !14666
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14663, metadata !DIExpression()), !dbg !14666
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14667
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14667
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14664, metadata !DIExpression()), !dbg !14666
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14668
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14669
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14670
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14671
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14672
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14673
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14674
  ret void, !dbg !14675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14676 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14680, metadata !DIExpression()), !dbg !14682
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14681, metadata !DIExpression()), !dbg !14682
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14683
  br i1 %3, label %6, label %4, !dbg !14684

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !14685
  br label %6, !dbg !14684

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14684
  ret %struct._dnode* %7, !dbg !14686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !14687 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14691, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14692, metadata !DIExpression()), !dbg !14694
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14695
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14695
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14693, metadata !DIExpression()), !dbg !14694
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14696
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14697
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14698
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14699
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14700
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14701
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14702
  ret void, !dbg !14703
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14706, metadata !DIExpression()), !dbg !14708
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14709
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14716, metadata !DIExpression()) #23, !dbg !14718
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14719
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14720
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14720
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14707, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14721, metadata !DIExpression()) #23, !dbg !14727
  call void @llvm.dbg.value(metadata i32 %0, metadata !14726, metadata !DIExpression()) #23, !dbg !14727
  %6 = icmp eq i32 %0, 0, !dbg !14730
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14732
  br i1 %6, label %8, label %18, !dbg !14733

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14734
  br i1 %9, label %10, label %11, !dbg !14737

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 137) #24, !dbg !14738
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.259, i32 0, i32 0)) #24, !dbg !14738
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 137) #24, !dbg !14738
  unreachable, !dbg !14738

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #24, !dbg !14740
  br i1 %12, label %18, label %13, !dbg !14742

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !14743
  br i1 %14, label %18, label %15, !dbg !14745

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #24, !dbg !14746
  %17 = icmp eq i32 %16, 0, !dbg !14746
  br i1 %17, label %21, label %18, !dbg !14748

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14749
  br i1 %19, label %21, label %20, !dbg !14752

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14753
  br label %21, !dbg !14755

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14732
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14732
  ret void, !dbg !14756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !14757 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14761, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14762, metadata !DIExpression()), !dbg !14764
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !14765
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14763, metadata !DIExpression()), !dbg !14764
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14762, metadata !DIExpression()), !dbg !14764
  ret %struct.k_thread* %3, !dbg !14766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14767 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14769, metadata !DIExpression()), !dbg !14770
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14771
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14772
  %4 = xor i1 %3, true, !dbg !14773
  ret i1 %4, !dbg !14774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14775 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14777, metadata !DIExpression()), !dbg !14778
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14779
  %3 = load i16, i16* %2, align 2, !dbg !14779
  %4 = icmp ult i16 %3, 128, !dbg !14780
  %5 = zext i1 %4 to i32, !dbg !14780
  ret i32 %5, !dbg !14781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14782 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14788, metadata !DIExpression()), !dbg !14789
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14790
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !14791
  %4 = xor i1 %3, true, !dbg !14792
  ret i1 %4, !dbg !14793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14794 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14800, metadata !DIExpression()), !dbg !14801
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14802
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14802
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14803
  ret i1 %4, !dbg !14804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14805 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14807, metadata !DIExpression()), !dbg !14809
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14808, metadata !DIExpression()), !dbg !14809
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14810
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14810
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14811
  br i1 %5, label %9, label %6, !dbg !14812

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14813
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14813
  br label %9, !dbg !14812

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14812
  ret %struct._dnode* %10, !dbg !14814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !14815 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14819, metadata !DIExpression()), !dbg !14820
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14821
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14821
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14822
  ret i1 %4, !dbg !14823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !14824 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14828, metadata !DIExpression()), !dbg !14831
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14832
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14832
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14829, metadata !DIExpression()), !dbg !14831
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14833
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14833
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14830, metadata !DIExpression()), !dbg !14831
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14834
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14835
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14836
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14837
  tail call fastcc void @sys_dnode_init.260(%struct._dnode* noundef %0) #25, !dbg !14838
  ret void, !dbg !14839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.260(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14840 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14842, metadata !DIExpression()), !dbg !14843
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14844
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14845
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14846
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14847
  ret void, !dbg !14848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !14849 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14853, metadata !DIExpression()), !dbg !14855
  call void @llvm.dbg.value(metadata i32 %1, metadata !14854, metadata !DIExpression()), !dbg !14855
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14856
  %4 = load i8, i8* %3, align 1, !dbg !14856
  %5 = zext i8 %4 to i32, !dbg !14857
  %6 = and i32 %5, %1, !dbg !14858
  %7 = icmp ne i32 %6, 0, !dbg !14859
  ret i1 %7, !dbg !14860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14865, metadata !DIExpression()), !dbg !14867
  call void @llvm.dbg.value(metadata i32 %1, metadata !14866, metadata !DIExpression()), !dbg !14867
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !14868
  ret i1 %3, !dbg !14869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14872, metadata !DIExpression()), !dbg !14874
  call void @llvm.dbg.value(metadata i32 %1, metadata !14873, metadata !DIExpression()), !dbg !14874
  %3 = icmp slt i32 %0, %1, !dbg !14875
  ret i1 %3, !dbg !14876
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14877 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14879, metadata !DIExpression()), !dbg !14883
  call void @llvm.dbg.value(metadata i32 0, metadata !14880, metadata !DIExpression()), !dbg !14884
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !14885
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14887, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !14889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !14889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !14885
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14890
  br i1 %3, label %5, label %4, !dbg !14891

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !14892
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14892
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !14892
  unreachable, !dbg !14892

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !14889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !14885
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14893
  call void @llvm.dbg.value(metadata i32 undef, metadata !14882, metadata !DIExpression()), !dbg !14884
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()), !dbg !14884
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14894
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !14899
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !14899
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14901
  br i1 %6, label %8, label %7, !dbg !14902

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !14903
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14903
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !14903
  unreachable, !dbg !14903

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14887
  call void @llvm.dbg.value(metadata i32 %9, metadata !14373, metadata !DIExpression()) #23, !dbg !14889
  call void @llvm.dbg.value(metadata i32 %9, metadata !14367, metadata !DIExpression()) #23, !dbg !14885
  call void @llvm.dbg.value(metadata i32 %9, metadata !14882, metadata !DIExpression()), !dbg !14884
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !14899
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !14904
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14906, !srcloc !14415
  call void @llvm.dbg.value(metadata i32 1, metadata !14880, metadata !DIExpression()), !dbg !14884
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()), !dbg !14884
  ret void, !dbg !14907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14908 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14910, metadata !DIExpression()), !dbg !14911
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14912
  br i1 %2, label %27, label %3, !dbg !14914

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !14915
  br i1 %4, label %5, label %27, !dbg !14916

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14570, metadata !DIExpression()) #23, !dbg !14917
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14920
  %7 = load i8, i8* %6, align 1, !dbg !14921
  %8 = or i8 %7, -128, !dbg !14921
  store i8 %8, i8* %6, align 1, !dbg !14921
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14577, metadata !DIExpression()) #23, !dbg !14922
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14584, metadata !DIExpression()) #23, !dbg !14924
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14590, metadata !DIExpression()) #23, !dbg !14924
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14926
  br i1 %9, label %10, label %11, !dbg !14927

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 186) #24, !dbg !14928
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 186) #24, !dbg !14928
  unreachable, !dbg !14928

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14929
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14591, metadata !DIExpression()) #23, !dbg !14924
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14930
  br i1 %13, label %24, label %14, !dbg !14929

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14591, metadata !DIExpression()) #23, !dbg !14924
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14931
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14591, metadata !DIExpression()) #23, !dbg !14924
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #24, !dbg !14932
  %18 = icmp sgt i32 %17, 0, !dbg !14933
  br i1 %18, label %19, label %21, !dbg !14934

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14935
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #24, !dbg !14936
  br label %26, !dbg !14937

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #24, !dbg !14930
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14591, metadata !DIExpression()) #23, !dbg !14924
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14930
  br i1 %23, label %24, label %14, !dbg !14929, !llvm.loop !14938

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14940
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #24, !dbg !14941
  br label %26, !dbg !14942

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !14943
  br label %27, !dbg !14944

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14946 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14948, metadata !DIExpression()), !dbg !14949
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !14950
  br i1 %2, label %6, label %3, !dbg !14951

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !14952
  %5 = xor i1 %4, true, !dbg !14951
  br label %6, !dbg !14951

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14954 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14956, metadata !DIExpression()), !dbg !14960
  call void @llvm.dbg.value(metadata i32 0, metadata !14957, metadata !DIExpression()), !dbg !14961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !14962
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14964, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !14966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !14966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !14962
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14967
  br i1 %3, label %5, label %4, !dbg !14968

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !14969
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14969
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !14969
  unreachable, !dbg !14969

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !14966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !14962
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14970
  call void @llvm.dbg.value(metadata i32 undef, metadata !14959, metadata !DIExpression()), !dbg !14961
  call void @llvm.dbg.value(metadata i32 undef, metadata !14957, metadata !DIExpression()), !dbg !14961
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !14971
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !14974
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !14974
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14976
  br i1 %6, label %8, label %7, !dbg !14977

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !14978
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14978
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !14978
  unreachable, !dbg !14978

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14964
  call void @llvm.dbg.value(metadata i32 %9, metadata !14373, metadata !DIExpression()) #23, !dbg !14966
  call void @llvm.dbg.value(metadata i32 %9, metadata !14367, metadata !DIExpression()) #23, !dbg !14962
  call void @llvm.dbg.value(metadata i32 %9, metadata !14959, metadata !DIExpression()), !dbg !14961
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !14974
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !14979
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14981, !srcloc !14415
  call void @llvm.dbg.value(metadata i32 1, metadata !14957, metadata !DIExpression()), !dbg !14961
  call void @llvm.dbg.value(metadata i32 undef, metadata !14957, metadata !DIExpression()), !dbg !14961
  ret void, !dbg !14982
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14983 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14985, metadata !DIExpression()), !dbg !14987
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !14988
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14990, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !14992
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !14992
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !14988
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14993
  br i1 %3, label %5, label %4, !dbg !14994

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !14995
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14995
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !14995
  unreachable, !dbg !14995

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14990
  call void @llvm.dbg.value(metadata i32 %6, metadata !14373, metadata !DIExpression()) #23, !dbg !14992
  call void @llvm.dbg.value(metadata i32 %6, metadata !14367, metadata !DIExpression()) #23, !dbg !14988
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14996
  call void @llvm.dbg.value(metadata i32 %6, metadata !14986, metadata !DIExpression()), !dbg !14987
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !14997
  br i1 %7, label %8, label %12, !dbg !14999

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15000
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !15000
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15003
  br i1 %9, label %11, label %10, !dbg !15004

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15005
  unreachable, !dbg !15005

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14395, metadata !DIExpression()) #23, !dbg !15000
  call void @llvm.dbg.value(metadata i32 %6, metadata !14409, metadata !DIExpression()) #23, !dbg !15006
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15008, !srcloc !14415
  br label %14, !dbg !15009

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.265(%struct.k_thread* noundef %0) #25, !dbg !15010
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !15011
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15012
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !15012
  br label %14, !dbg !15013

14:                                               ; preds = %12, %11
  ret void, !dbg !15013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15014 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15016, metadata !DIExpression()), !dbg !15017
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15018
  %3 = load i8, i8* %2, align 1, !dbg !15018
  %4 = and i8 %3, 4, !dbg !15019
  %5 = icmp eq i8 %4, 0, !dbg !15020
  ret i1 %5, !dbg !15021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.265(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15022 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15024, metadata !DIExpression()), !dbg !15025
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15026
  %3 = load i8, i8* %2, align 1, !dbg !15027
  %4 = and i8 %3, -5, !dbg !15027
  store i8 %4, i8* %2, align 1, !dbg !15027
  ret void, !dbg !15028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15029 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15032, metadata !DIExpression()), !dbg !15033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15031, metadata !DIExpression()), !dbg !15033
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !15034
  br i1 %4, label %5, label %12, !dbg !15036

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !15037
  br i1 %6, label %7, label %12, !dbg !15038

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15039, metadata !DIExpression()) #23, !dbg !15045
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15044, metadata !DIExpression()) #23, !dbg !15045
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15048, metadata !DIExpression()) #23, !dbg !15053
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !15055
  br i1 %8, label %10, label %9, !dbg !15058

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !15059
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !15059
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !15059
  unreachable, !dbg !15059

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15039, metadata !DIExpression()) #23, !dbg !15045
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !15061
  br label %16, !dbg !15062

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15063
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14400, metadata !DIExpression()) #23, !dbg !15063
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !15066
  br i1 %13, label %15, label %14, !dbg !15067

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15068
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !15068
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15068
  unreachable, !dbg !15068

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14395, metadata !DIExpression()) #23, !dbg !15063
  call void @llvm.dbg.value(metadata i32 %3, metadata !14409, metadata !DIExpression()) #23, !dbg !15069
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15071, !srcloc !14415
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15072
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15077, metadata !DIExpression()), !dbg !15078
  call void @llvm.dbg.value(metadata i32 %0, metadata !15079, metadata !DIExpression()), !dbg !15084
  %2 = icmp eq i32 %0, 0, !dbg !15086
  br i1 %2, label %3, label %6, !dbg !15087

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15088, !srcloc !15095
  call void @llvm.dbg.value(metadata i32 %4, metadata !15091, metadata !DIExpression()) #23, !dbg !15096
  %5 = icmp eq i32 %4, 0, !dbg !15097
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15078
  ret i1 %7, !dbg !15098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !15099 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15102
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15101, metadata !DIExpression()), !dbg !15103
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15104
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15105
  ret i1 %3, !dbg !15106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15109, metadata !DIExpression()), !dbg !15111
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !15112
  call void @llvm.dbg.value(metadata i32 %2, metadata !15110, metadata !DIExpression()), !dbg !15111
  ret i32 %2, !dbg !15113
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15114 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15116, metadata !DIExpression()), !dbg !15120
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15121
  call void @llvm.dbg.value(metadata i32 0, metadata !15117, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !15123
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15125, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15127
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15127
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15123
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15128
  br i1 %4, label %6, label %5, !dbg !15129

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15130
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15130
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15130
  unreachable, !dbg !15130

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15125
  call void @llvm.dbg.value(metadata i32 %7, metadata !14373, metadata !DIExpression()) #23, !dbg !15127
  call void @llvm.dbg.value(metadata i32 %7, metadata !14367, metadata !DIExpression()) #23, !dbg !15123
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15131
  call void @llvm.dbg.value(metadata i32 %7, metadata !15119, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.value(metadata i32 undef, metadata !15117, metadata !DIExpression()), !dbg !15122
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !15132
  br i1 %8, label %9, label %13, !dbg !15136

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14553, metadata !DIExpression()) #23, !dbg !15137
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15140
  %11 = load i8, i8* %10, align 1, !dbg !15141
  %12 = and i8 %11, 127, !dbg !15141
  store i8 %12, i8* %10, align 1, !dbg !15141
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14561, metadata !DIExpression()) #23, !dbg !15142
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15144
  br label %13, !dbg !15145

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !15146
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15147
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15148
  %16 = zext i1 %15 to i32, !dbg !15148
  tail call fastcc void @update_cache(i32 noundef %16) #25, !dbg !15149
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15150
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !15150
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15152
  br i1 %17, label %19, label %18, !dbg !15153

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15154
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15154
  unreachable, !dbg !15154

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14395, metadata !DIExpression()) #23, !dbg !15150
  call void @llvm.dbg.value(metadata i32 %7, metadata !14409, metadata !DIExpression()) #23, !dbg !15155
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15157, !srcloc !14415
  call void @llvm.dbg.value(metadata i32 1, metadata !15117, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.value(metadata i32 undef, metadata !15117, metadata !DIExpression()), !dbg !15122
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15158
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15160
  br i1 %21, label %22, label %23, !dbg !15161

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15162
  br label %23, !dbg !15164

23:                                               ; preds = %22, %19
  ret void, !dbg !15165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15166 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15168, metadata !DIExpression()), !dbg !15169
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15170
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15171
  ret i32 %3, !dbg !15172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15173 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15175, metadata !DIExpression()), !dbg !15176
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15177
  %3 = load i8, i8* %2, align 1, !dbg !15178
  %4 = or i8 %3, 16, !dbg !15178
  store i8 %4, i8* %2, align 1, !dbg !15178
  ret void, !dbg !15179
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15180 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15181, !srcloc !14376
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15181
  call void @llvm.dbg.value(metadata i32 %2, metadata !14373, metadata !DIExpression()) #23, !dbg !15183
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15183
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !15184
  ret void, !dbg !15185
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15188, metadata !DIExpression()), !dbg !15189
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !15190
  br i1 %2, label %3, label %5, !dbg !15192

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !15193
  br label %6, !dbg !15195

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14409, metadata !DIExpression()) #23, !dbg !15196
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15199, !srcloc !14415
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15201 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15203, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !15206
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15208, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15210
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15210
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15206
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15211
  br i1 %3, label %5, label %4, !dbg !15212

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15213
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15213
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15213
  unreachable, !dbg !15213

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15208
  call void @llvm.dbg.value(metadata i32 %6, metadata !14373, metadata !DIExpression()) #23, !dbg !15210
  call void @llvm.dbg.value(metadata i32 %6, metadata !14367, metadata !DIExpression()) #23, !dbg !15206
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15214
  call void @llvm.dbg.value(metadata i32 %6, metadata !15204, metadata !DIExpression()), !dbg !15205
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !15215
  br i1 %7, label %12, label %8, !dbg !15217

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15218
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !15218
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15221
  br i1 %9, label %11, label %10, !dbg !15222

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15223
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15223
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15223
  unreachable, !dbg !15223

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14395, metadata !DIExpression()) #23, !dbg !15218
  call void @llvm.dbg.value(metadata i32 %6, metadata !14409, metadata !DIExpression()) #23, !dbg !15224
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15226, !srcloc !14415
  br label %14, !dbg !15227

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !15228
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !15229
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15230
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !15230
  br label %14, !dbg !15231

14:                                               ; preds = %12, %11
  ret void, !dbg !15231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15232 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15234, metadata !DIExpression()), !dbg !15235
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15236
  %3 = load i8, i8* %2, align 1, !dbg !15236
  %4 = and i8 %3, 16, !dbg !15237
  %5 = icmp ne i8 %4, 0, !dbg !15238
  ret i1 %5, !dbg !15239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15240 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15242, metadata !DIExpression()), !dbg !15243
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15244
  %3 = load i8, i8* %2, align 1, !dbg !15245
  %4 = and i8 %3, -17, !dbg !15245
  store i8 %4, i8* %2, align 1, !dbg !15245
  ret void, !dbg !15246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15247 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15257, metadata !DIExpression()), !dbg !15261
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15255, metadata !DIExpression()), !dbg !15261
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15256, metadata !DIExpression()), !dbg !15261
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15262
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15262
  br i1 %5, label %9, label %6, !dbg !15262

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #25, !dbg !15262
  br i1 %7, label %9, label %8, !dbg !15265

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 773) #24, !dbg !15266
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 773) #24, !dbg !15266
  unreachable, !dbg !15266

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15258, metadata !DIExpression()), !dbg !15268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !15269
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15271, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15273
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15273
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15269
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15274
  br i1 %11, label %13, label %12, !dbg !15275

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15276
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15276
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15276
  unreachable, !dbg !15276

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15273
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15269
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15277
  call void @llvm.dbg.value(metadata i32 undef, metadata !15260, metadata !DIExpression()), !dbg !15268
  call void @llvm.dbg.value(metadata i32 undef, metadata !15258, metadata !DIExpression()), !dbg !15268
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !15278
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15281
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !15281
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15283
  br i1 %14, label %16, label %15, !dbg !15284

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15285
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15285
  unreachable, !dbg !15285

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15271
  call void @llvm.dbg.value(metadata i32 %17, metadata !14373, metadata !DIExpression()) #23, !dbg !15273
  call void @llvm.dbg.value(metadata i32 %17, metadata !14367, metadata !DIExpression()) #23, !dbg !15269
  call void @llvm.dbg.value(metadata i32 %17, metadata !15260, metadata !DIExpression()), !dbg !15268
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15281
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !15286
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15288, !srcloc !14415
  call void @llvm.dbg.value(metadata i32 1, metadata !15258, metadata !DIExpression()), !dbg !15268
  call void @llvm.dbg.value(metadata i32 undef, metadata !15258, metadata !DIExpression()), !dbg !15268
  ret void, !dbg !15289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15290 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15292, metadata !DIExpression()), !dbg !15293
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15294
  %3 = load i8, i8* %2, align 1, !dbg !15294
  %4 = and i8 %3, 1, !dbg !15295
  %5 = icmp ne i8 %4, 0, !dbg !15296
  ret i1 %5, !dbg !15297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15298 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15302, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15300, metadata !DIExpression()), !dbg !15303
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15301, metadata !DIExpression()), !dbg !15303
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !15304
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !15305
  ret void, !dbg !15306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15307 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15311, metadata !DIExpression()), !dbg !15313
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15312, metadata !DIExpression()), !dbg !15313
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !15314
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !15315
  %3 = icmp eq %union.anon* %1, null, !dbg !15316
  br i1 %3, label %24, label %4, !dbg !15318

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15319
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15321
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15322
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14584, metadata !DIExpression()) #23, !dbg !15323
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14590, metadata !DIExpression()) #23, !dbg !15323
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !15325
  br i1 %7, label %8, label %9, !dbg !15326

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 186) #24, !dbg !15327
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 186) #24, !dbg !15327
  unreachable, !dbg !15327

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !15328
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14591, metadata !DIExpression()) #23, !dbg !15323
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15329
  br i1 %11, label %22, label %12, !dbg !15328

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14591, metadata !DIExpression()) #23, !dbg !15323
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15330
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14591, metadata !DIExpression()) #23, !dbg !15323
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #24, !dbg !15331
  %16 = icmp sgt i32 %15, 0, !dbg !15332
  br i1 %16, label %17, label %19, !dbg !15333

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15334
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !15335
  br label %24, !dbg !15336

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #24, !dbg !15329
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14591, metadata !DIExpression()) #23, !dbg !15323
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15329
  br i1 %21, label %22, label %12, !dbg !15328, !llvm.loop !15337

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15339
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #24, !dbg !15340
  br label %24, !dbg !15341

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15343 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15348, metadata !DIExpression()), !dbg !15349
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15347, metadata !DIExpression()), !dbg !15349
  %4 = icmp eq i64 %3, -1, !dbg !15350
  br i1 %4, label %6, label %5, !dbg !15352

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.267(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !15353
  br label %6, !dbg !15355

6:                                                ; preds = %5, %2
  ret void, !dbg !15356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.267(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15357 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15360, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15359, metadata !DIExpression()), !dbg !15361
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15362
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !15363
  ret void, !dbg !15364
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15365 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15367, metadata !DIExpression()), !dbg !15375
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15376
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15368, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata i32 0, metadata !15369, metadata !DIExpression()), !dbg !15377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !15378
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15380, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15382
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15382
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15378
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15383
  br i1 %5, label %7, label %6, !dbg !15384

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15385
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15385
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15385
  unreachable, !dbg !15385

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15382
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15378
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15386
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()), !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !15369, metadata !DIExpression()), !dbg !15377
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15387
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15388
  %10 = load i8, i8* %9, align 1, !dbg !15388
  %11 = and i8 %10, 40, !dbg !15389
  %12 = icmp eq i8 %11, 0, !dbg !15389
  call void @llvm.dbg.value(metadata i1 %12, metadata !15372, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15390
  br i1 %12, label %13, label %20, !dbg !15391

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15392
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !15392
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !15392
  %17 = icmp eq %union.anon* %16, null, !dbg !15396
  br i1 %17, label %19, label %18, !dbg !15397

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !15398
  br label %19, !dbg !15400

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.265(%struct.k_thread* noundef nonnull %3) #25, !dbg !15401
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !15402
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !15403
  br label %20, !dbg !15404

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !15405
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15407
  br i1 %21, label %23, label %22, !dbg !15408

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15409
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15409
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15409
  unreachable, !dbg !15409

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15380
  call void @llvm.dbg.value(metadata i32 %24, metadata !14373, metadata !DIExpression()) #23, !dbg !15382
  call void @llvm.dbg.value(metadata i32 %24, metadata !14367, metadata !DIExpression()) #23, !dbg !15378
  call void @llvm.dbg.value(metadata i32 %24, metadata !15371, metadata !DIExpression()), !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15405
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !15410
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15412, !srcloc !14415
  call void @llvm.dbg.value(metadata i32 1, metadata !15369, metadata !DIExpression()), !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !15369, metadata !DIExpression()), !dbg !15377
  ret void, !dbg !15413
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15414 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15416, metadata !DIExpression()), !dbg !15417
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #25, !dbg !15418
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15419
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !15420
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15421
  store %union.anon* null, %union.anon** %3, align 8, !dbg !15422
  ret void, !dbg !15423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15424 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15428, metadata !DIExpression()), !dbg !15429
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15430
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !15430
  %4 = icmp eq %union.anon* %3, null, !dbg !15430
  br i1 %4, label %5, label %6, !dbg !15433

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 726) #24, !dbg !15434
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 726) #24, !dbg !15434
  unreachable, !dbg !15434

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !15436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15437 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15439, metadata !DIExpression()), !dbg !15440
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15441
  %3 = load i8, i8* %2, align 1, !dbg !15442
  %4 = and i8 %3, -3, !dbg !15442
  store i8 %4, i8* %2, align 1, !dbg !15442
  ret void, !dbg !15443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15444 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15446, metadata !DIExpression()), !dbg !15447
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !15448
  br i1 %2, label %3, label %7, !dbg !15450

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14553, metadata !DIExpression()) #23, !dbg !15451
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15454
  %5 = load i8, i8* %4, align 1, !dbg !15455
  %6 = and i8 %5, 127, !dbg !15455
  store i8 %6, i8* %4, align 1, !dbg !15455
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14561, metadata !DIExpression()) #23, !dbg !15456
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15458
  br label %7, !dbg !15459

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15460
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15461
  %10 = zext i1 %9 to i32, !dbg !15461
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !15462
  ret void, !dbg !15463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !15464 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15466, metadata !DIExpression()), !dbg !15467
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15468
  %3 = load i8, i8* %2, align 1, !dbg !15469
  %4 = or i8 %3, 2, !dbg !15469
  store i8 %4, i8* %2, align 1, !dbg !15469
  ret void, !dbg !15470
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15471 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15473, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i32 0, metadata !15474, metadata !DIExpression()), !dbg !15478
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !15479
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15481, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15483
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15483
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15479
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15484
  br i1 %3, label %5, label %4, !dbg !15485

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15486
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15486
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15486
  unreachable, !dbg !15486

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15483
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15479
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15487
  call void @llvm.dbg.value(metadata i32 undef, metadata !15476, metadata !DIExpression()), !dbg !15478
  call void @llvm.dbg.value(metadata i32 undef, metadata !15474, metadata !DIExpression()), !dbg !15478
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15491
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !15491
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15493
  br i1 %6, label %8, label %7, !dbg !15494

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15495
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15495
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15495
  unreachable, !dbg !15495

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %9, metadata !14373, metadata !DIExpression()) #23, !dbg !15483
  call void @llvm.dbg.value(metadata i32 %9, metadata !14367, metadata !DIExpression()) #23, !dbg !15479
  call void @llvm.dbg.value(metadata i32 %9, metadata !15476, metadata !DIExpression()), !dbg !15478
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15491
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !15496
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15498, !srcloc !14415
  call void @llvm.dbg.value(metadata i32 1, metadata !15474, metadata !DIExpression()), !dbg !15478
  call void @llvm.dbg.value(metadata i32 undef, metadata !15474, metadata !DIExpression()), !dbg !15478
  ret void, !dbg !15499
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15500 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15506, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.value(metadata i32 %0, metadata !15504, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15505, metadata !DIExpression()), !dbg !15511
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15512
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !15513
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15514
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15515
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !15516
  call void @llvm.dbg.value(metadata i32 %6, metadata !15507, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.value(metadata i32 0, metadata !15508, metadata !DIExpression()), !dbg !15517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !15518
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15520, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15522
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15522
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15518
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15523
  br i1 %8, label %10, label %9, !dbg !15524

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15525
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15525
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15525
  unreachable, !dbg !15525

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15522
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15518
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15526
  call void @llvm.dbg.value(metadata i32 undef, metadata !15510, metadata !DIExpression()), !dbg !15517
  call void @llvm.dbg.value(metadata i32 undef, metadata !15508, metadata !DIExpression()), !dbg !15517
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15527
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15531
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15532
  br i1 %13, label %14, label %15, !dbg !15533

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15534
  br label %15, !dbg !15536

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15537
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !15537
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15539
  br i1 %16, label %18, label %17, !dbg !15540

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15541
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15541
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15541
  unreachable, !dbg !15541

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15520
  call void @llvm.dbg.value(metadata i32 %19, metadata !14373, metadata !DIExpression()) #23, !dbg !15522
  call void @llvm.dbg.value(metadata i32 %19, metadata !14367, metadata !DIExpression()) #23, !dbg !15518
  call void @llvm.dbg.value(metadata i32 %19, metadata !15510, metadata !DIExpression()), !dbg !15517
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15537
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !15542
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15544, !srcloc !14415
  call void @llvm.dbg.value(metadata i32 1, metadata !15508, metadata !DIExpression()), !dbg !15517
  call void @llvm.dbg.value(metadata i32 undef, metadata !15508, metadata !DIExpression()), !dbg !15517
  ret i32 %6, !dbg !15545
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15546 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15551, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata i64 undef, metadata !15553, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15550, metadata !DIExpression()), !dbg !15554
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15552, metadata !DIExpression()), !dbg !15554
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15555
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15556
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15557
  br i1 %6, label %7, label %8, !dbg !15560

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 846) #24, !dbg !15561
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 846) #24, !dbg !15561
  unreachable, !dbg !15561

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !15563
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15565, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15567
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15567
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15563
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15568
  br i1 %10, label %12, label %11, !dbg !15569

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15570
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15570
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15570
  unreachable, !dbg !15570

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15567
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15563
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15571
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15572
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !15573
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15048, metadata !DIExpression()) #23, !dbg !15574
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !15576
  br i1 %14, label %16, label %15, !dbg !15577

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !15578
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !15578
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !15578
  unreachable, !dbg !15578

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15039, metadata !DIExpression()) #23, !dbg !15579
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15044, metadata !DIExpression()) #23, !dbg !15579
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15048, metadata !DIExpression()) #23, !dbg !15581
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15583
  br i1 %17, label %19, label %18, !dbg !15584

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !15585
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15585
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !15585
  unreachable, !dbg !15585

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15039, metadata !DIExpression()) #23, !dbg !15579
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #24, !dbg !15586
  ret i32 %21, !dbg !15587
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15588 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15592, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15593, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 0, metadata !15594, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !15599
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15601, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15603
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15603
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15599
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15604
  br i1 %3, label %5, label %4, !dbg !15605

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15606
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15606
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15606
  unreachable, !dbg !15606

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15603
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15599
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15607
  call void @llvm.dbg.value(metadata i32 undef, metadata !15596, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15593, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 undef, metadata !15594, metadata !DIExpression()), !dbg !15598
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !15608
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15593, metadata !DIExpression()), !dbg !15597
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15611
  br i1 %8, label %10, label %9, !dbg !15613

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !15614
  br label %10, !dbg !15616

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15617
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !15617
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15619
  br i1 %11, label %13, label %12, !dbg !15620

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15621
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15621
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15621
  unreachable, !dbg !15621

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15601
  call void @llvm.dbg.value(metadata i32 %14, metadata !14373, metadata !DIExpression()) #23, !dbg !15603
  call void @llvm.dbg.value(metadata i32 %14, metadata !14367, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 %14, metadata !15596, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15617
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !15622
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15624, !srcloc !14415
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15593, metadata !DIExpression()), !dbg !15597
  call void @llvm.dbg.value(metadata i32 undef, metadata !15594, metadata !DIExpression()), !dbg !15598
  ret %struct.k_thread* %7, !dbg !15625
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15626 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15628, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15629, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 0, metadata !15630, metadata !DIExpression()), !dbg !15634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !15635
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15637, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15639
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15639
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15635
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15640
  br i1 %3, label %5, label %4, !dbg !15641

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15642
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15642
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15642
  unreachable, !dbg !15642

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15639
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15635
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15643
  call void @llvm.dbg.value(metadata i32 undef, metadata !15632, metadata !DIExpression()), !dbg !15634
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15629, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !15630, metadata !DIExpression()), !dbg !15634
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !15644
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15629, metadata !DIExpression()), !dbg !15633
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15647
  br i1 %8, label %11, label %9, !dbg !15649

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !15650
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !15652
  br label %11, !dbg !15653

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15654
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !15654
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15656
  br i1 %12, label %14, label %13, !dbg !15657

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15658
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15658
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15658
  unreachable, !dbg !15658

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15637
  call void @llvm.dbg.value(metadata i32 %15, metadata !14373, metadata !DIExpression()) #23, !dbg !15639
  call void @llvm.dbg.value(metadata i32 %15, metadata !14367, metadata !DIExpression()) #23, !dbg !15635
  call void @llvm.dbg.value(metadata i32 %15, metadata !15632, metadata !DIExpression()), !dbg !15634
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15654
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !15659
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15661, !srcloc !14415
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15629, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.value(metadata i32 undef, metadata !15630, metadata !DIExpression()), !dbg !15634
  ret %struct.k_thread* %7, !dbg !15662
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15663 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15665, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15473, metadata !DIExpression()) #23, !dbg !15667
  call void @llvm.dbg.value(metadata i32 0, metadata !15474, metadata !DIExpression()) #23, !dbg !15669
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !15670
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15672, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15670
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15675
  br i1 %3, label %5, label %4, !dbg !15676

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15677
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15677
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15677
  unreachable, !dbg !15677

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15670
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15678
  call void @llvm.dbg.value(metadata i32 undef, metadata !15476, metadata !DIExpression()) #23, !dbg !15669
  call void @llvm.dbg.value(metadata i32 undef, metadata !15474, metadata !DIExpression()) #23, !dbg !15669
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15679
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15680
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !15680
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15682
  br i1 %6, label %8, label %7, !dbg !15683

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15684
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15684
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15684
  unreachable, !dbg !15684

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15672
  call void @llvm.dbg.value(metadata i32 %9, metadata !14373, metadata !DIExpression()) #23, !dbg !15674
  call void @llvm.dbg.value(metadata i32 %9, metadata !14367, metadata !DIExpression()) #23, !dbg !15670
  call void @llvm.dbg.value(metadata i32 %9, metadata !15476, metadata !DIExpression()) #23, !dbg !15669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15680
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !15685
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15687, !srcloc !14415
  call void @llvm.dbg.value(metadata i32 1, metadata !15474, metadata !DIExpression()) #23, !dbg !15669
  call void @llvm.dbg.value(metadata i32 undef, metadata !15474, metadata !DIExpression()) #23, !dbg !15669
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15688
  ret void, !dbg !15689
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15692, metadata !DIExpression()), !dbg !15698
  call void @llvm.dbg.value(metadata i32 %1, metadata !15693, metadata !DIExpression()), !dbg !15698
  call void @llvm.dbg.value(metadata i8 0, metadata !15694, metadata !DIExpression()), !dbg !15698
  call void @llvm.dbg.value(metadata i32 0, metadata !15695, metadata !DIExpression()), !dbg !15699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !15700
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15702, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15700
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15705
  br i1 %4, label %6, label %5, !dbg !15706

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15707
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15707
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15707
  unreachable, !dbg !15707

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15700
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15708
  call void @llvm.dbg.value(metadata i32 undef, metadata !15697, metadata !DIExpression()), !dbg !15699
  call void @llvm.dbg.value(metadata i8 poison, metadata !15694, metadata !DIExpression()), !dbg !15698
  call void @llvm.dbg.value(metadata i32 undef, metadata !15695, metadata !DIExpression()), !dbg !15699
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !15709
  call void @llvm.dbg.value(metadata i1 %9, metadata !15694, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15698
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15712

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14553, metadata !DIExpression()) #23, !dbg !15713
  %14 = load i8, i8* %7, align 1, !dbg !15719
  %15 = and i8 %14, 127, !dbg !15719
  store i8 %15, i8* %7, align 1, !dbg !15719
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14561, metadata !DIExpression()) #23, !dbg !15720
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15722
  store i8 %12, i8* %11, align 2, !dbg !15723
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14570, metadata !DIExpression()) #23, !dbg !15724
  %16 = load i8, i8* %7, align 1, !dbg !15726
  %17 = or i8 %16, -128, !dbg !15726
  store i8 %17, i8* %7, align 1, !dbg !15726
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14577, metadata !DIExpression()) #23, !dbg !15727
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14584, metadata !DIExpression()) #23, !dbg !15729
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14590, metadata !DIExpression()) #23, !dbg !15729
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !15731
  br i1 %18, label %19, label %20, !dbg !15732

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 186) #24, !dbg !15733
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 186) #24, !dbg !15733
  unreachable, !dbg !15733

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15734
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14591, metadata !DIExpression()) #23, !dbg !15729
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15735
  br i1 %22, label %32, label %23, !dbg !15734

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14591, metadata !DIExpression()) #23, !dbg !15729
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15736
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14591, metadata !DIExpression()) #23, !dbg !15729
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #24, !dbg !15737
  %27 = icmp sgt i32 %26, 0, !dbg !15738
  br i1 %27, label %28, label %29, !dbg !15739

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #24, !dbg !15740
  br label %33, !dbg !15741

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #24, !dbg !15735
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14591, metadata !DIExpression()) #23, !dbg !15729
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15735
  br i1 %31, label %32, label %23, !dbg !15734, !llvm.loop !15742

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #24, !dbg !15744
  br label %33, !dbg !15745

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15746
  br label %35, !dbg !15747

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15748
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15750
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !15750
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15752
  br i1 %36, label %38, label %37, !dbg !15753

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15754
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15754
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15754
  unreachable, !dbg !15754

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15702
  call void @llvm.dbg.value(metadata i32 %39, metadata !14373, metadata !DIExpression()) #23, !dbg !15704
  call void @llvm.dbg.value(metadata i32 %39, metadata !14367, metadata !DIExpression()) #23, !dbg !15700
  call void @llvm.dbg.value(metadata i32 %39, metadata !15697, metadata !DIExpression()), !dbg !15699
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15750
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !15755
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15757, !srcloc !14415
  call void @llvm.dbg.value(metadata i8 poison, metadata !15694, metadata !DIExpression()), !dbg !15698
  call void @llvm.dbg.value(metadata i32 undef, metadata !15695, metadata !DIExpression()), !dbg !15699
  ret i1 %9, !dbg !15758
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15759 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15763, metadata !DIExpression()), !dbg !15766
  call void @llvm.dbg.value(metadata i32 %1, metadata !15764, metadata !DIExpression()), !dbg !15766
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15767
  call void @llvm.dbg.value(metadata i1 %3, metadata !15765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15766
  br i1 %3, label %4, label %12, !dbg !15768

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15770
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15771
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15771
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15771
  %9 = load i8, i8* %8, align 1, !dbg !15771
  %10 = icmp eq i8 %9, 0, !dbg !15772
  br i1 %10, label %11, label %12, !dbg !15773

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15774
  br label %12, !dbg !15776

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15777
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15778 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15780, metadata !DIExpression()), !dbg !15783
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !15784
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15786, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15788
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15788
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15784
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15789
  br i1 %2, label %4, label %3, !dbg !15790

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15791
  unreachable, !dbg !15791

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15788
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15784
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15792
  call void @llvm.dbg.value(metadata i32 undef, metadata !15782, metadata !DIExpression()), !dbg !15783
  call void @llvm.dbg.value(metadata i32 undef, metadata !15780, metadata !DIExpression()), !dbg !15783
  tail call fastcc void @z_sched_lock() #25, !dbg !15793
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15796
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !15796
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15798
  br i1 %5, label %7, label %6, !dbg !15799

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15800
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15800
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15800
  unreachable, !dbg !15800

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15786
  call void @llvm.dbg.value(metadata i32 %8, metadata !14373, metadata !DIExpression()) #23, !dbg !15788
  call void @llvm.dbg.value(metadata i32 %8, metadata !14367, metadata !DIExpression()) #23, !dbg !15784
  call void @llvm.dbg.value(metadata i32 %8, metadata !15782, metadata !DIExpression()), !dbg !15783
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15796
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !15801
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15803, !srcloc !14415
  call void @llvm.dbg.value(metadata i32 1, metadata !15780, metadata !DIExpression()), !dbg !15783
  call void @llvm.dbg.value(metadata i32 undef, metadata !15780, metadata !DIExpression()), !dbg !15783
  ret void, !dbg !15804
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15805 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15806, !srcloc !15095
  call void @llvm.dbg.value(metadata i32 %1, metadata !15091, metadata !DIExpression()) #23, !dbg !15811
  %2 = icmp eq i32 %1, 0, !dbg !15812
  br i1 %2, label %4, label %3, !dbg !15813

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.275, i32 0, i32 0), i32 noundef 253) #24, !dbg !15814
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.259, i32 0, i32 0)) #24, !dbg !15814
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.275, i32 0, i32 0), i32 noundef 253) #24, !dbg !15814
  unreachable, !dbg !15814

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15816
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15816
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15816
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15816
  %9 = load i8, i8* %8, align 1, !dbg !15816
  %10 = icmp eq i8 %9, 1, !dbg !15816
  br i1 %10, label %11, label %12, !dbg !15819

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.275, i32 0, i32 0), i32 noundef 254) #24, !dbg !15820
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.259, i32 0, i32 0)) #24, !dbg !15820
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.275, i32 0, i32 0), i32 noundef 254) #24, !dbg !15820
  unreachable, !dbg !15820

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15822
  store i8 %13, i8* %8, align 1, !dbg !15822
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15823, !srcloc !15825
  ret void, !dbg !15826
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15827 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15829, metadata !DIExpression()), !dbg !15832
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !15833
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15835, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15833
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15838
  br i1 %2, label %4, label %3, !dbg !15839

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15840
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15840
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !15840
  unreachable, !dbg !15840

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !15833
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15841
  call void @llvm.dbg.value(metadata i32 undef, metadata !15831, metadata !DIExpression()), !dbg !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()), !dbg !15832
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15842
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15842
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15842
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15842
  %9 = load i8, i8* %8, align 1, !dbg !15842
  %10 = icmp eq i8 %9, 0, !dbg !15842
  br i1 %10, label %11, label %12, !dbg !15847

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.279, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 999) #24, !dbg !15848
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.259, i32 0, i32 0)) #24, !dbg !15848
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 999) #24, !dbg !15848
  unreachable, !dbg !15848

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15850, !srcloc !15095
  call void @llvm.dbg.value(metadata i32 %13, metadata !15091, metadata !DIExpression()) #23, !dbg !15855
  %14 = icmp eq i32 %13, 0, !dbg !15856
  br i1 %14, label %16, label %15, !dbg !15857

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15858
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.259, i32 0, i32 0)) #24, !dbg !15858
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15858
  unreachable, !dbg !15858

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15860
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15861
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15861
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15861
  %21 = load i8, i8* %20, align 1, !dbg !15862
  %22 = add i8 %21, 1, !dbg !15862
  store i8 %22, i8* %20, align 1, !dbg !15862
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !15863
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15864
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !15864
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15866
  br i1 %23, label %25, label %24, !dbg !15867

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15868
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15868
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !15868
  unreachable, !dbg !15868

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15835
  call void @llvm.dbg.value(metadata i32 %26, metadata !14373, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata i32 %26, metadata !14367, metadata !DIExpression()) #23, !dbg !15833
  call void @llvm.dbg.value(metadata i32 %26, metadata !15831, metadata !DIExpression()), !dbg !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !15864
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !15869
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15871, !srcloc !14415
  call void @llvm.dbg.value(metadata i32 1, metadata !15829, metadata !DIExpression()), !dbg !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()), !dbg !15832
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15872
  ret void, !dbg !15873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !15874 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15875
  ret %struct.k_thread* %1, !dbg !15876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15877 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15881, metadata !DIExpression()), !dbg !15886
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15882, metadata !DIExpression()), !dbg !15886
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15887
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15883, metadata !DIExpression()), !dbg !15886
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15888
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15884, metadata !DIExpression()), !dbg !15886
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !15889
  call void @llvm.dbg.value(metadata i32 %5, metadata !15885, metadata !DIExpression()), !dbg !15886
  %6 = icmp sgt i32 %5, 0, !dbg !15890
  br i1 %6, label %17, label %7, !dbg !15892

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15893
  br i1 %8, label %17, label %9, !dbg !15895

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15896
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15896
  %12 = load i32, i32* %11, align 8, !dbg !15896
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15898
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15898
  %15 = load i32, i32* %14, align 8, !dbg !15898
  %16 = icmp ult i32 %12, %15, !dbg !15899
  br label %17, !dbg !15900

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15901
  ret i1 %18, !dbg !15902
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15903 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15920, metadata !DIExpression()), !dbg !15935
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15921, metadata !DIExpression()), !dbg !15935
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15936
  br i1 %4, label %5, label %6, !dbg !15939

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15940
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15940
  unreachable, !dbg !15940

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15942
  %8 = load i32, i32* %7, align 4, !dbg !15943
  %9 = add nsw i32 %8, 1, !dbg !15943
  store i32 %9, i32* %7, align 4, !dbg !15943
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15944
  store i32 %8, i32* %10, align 8, !dbg !15945
  %11 = load i32, i32* %7, align 4, !dbg !15946
  %12 = icmp eq i32 %11, 0, !dbg !15947
  br i1 %12, label %13, label %35, !dbg !15948

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15949
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15949
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15923, metadata !DIExpression()), !dbg !15949
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15949
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15949
  %17 = load i32, i32* %16, align 4, !dbg !15949
  %18 = shl i32 %17, 2, !dbg !15949
  %19 = alloca i8, i32 %18, align 8, !dbg !15949
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15949
  store i8* %19, i8** %20, align 4, !dbg !15949
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15949
  %22 = alloca i8, i32 %17, align 8, !dbg !15949
  store i8* %22, i8** %21, align 4, !dbg !15949
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15949
  store i32 -1, i32* %23, align 4, !dbg !15949
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15950
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15932, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15922, metadata !DIExpression()), !dbg !15935
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15952
  br i1 %25, label %26, label %27, !dbg !15949

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15952
  br label %35, !dbg !15953

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15922, metadata !DIExpression()), !dbg !15935
  %29 = load i32, i32* %7, align 4, !dbg !15954
  %30 = add nsw i32 %29, 1, !dbg !15954
  store i32 %30, i32* %7, align 4, !dbg !15954
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15956
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15956
  store i32 %29, i32* %32, align 8, !dbg !15957
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15950
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15932, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15922, metadata !DIExpression()), !dbg !15935
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15952
  br i1 %34, label %26, label %27, !dbg !15949, !llvm.loop !15958

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15960
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15961
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #24, !dbg !15962
  ret void, !dbg !15963
}

; Function Attrs: optsize
declare !dbg !15964 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15969 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15972 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15974, metadata !DIExpression()), !dbg !15976
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15975, metadata !DIExpression()), !dbg !15976
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15977
  br i1 %3, label %4, label %5, !dbg !15980

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15981
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15981
  unreachable, !dbg !15981

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15983
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15984
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #24, !dbg !15985
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15986
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15986
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15988
  br i1 %10, label %11, label %13, !dbg !15989

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15990
  store i32 0, i32* %12, align 4, !dbg !15992
  br label %13, !dbg !15993

13:                                               ; preds = %11, %5
  ret void, !dbg !15994
}

; Function Attrs: optsize
declare !dbg !15995 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15996 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16000, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16001, metadata !DIExpression()), !dbg !16003
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16004
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !16005
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16002, metadata !DIExpression()), !dbg !16003
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16001, metadata !DIExpression()), !dbg !16003
  ret %struct.k_thread* %4, !dbg !16006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16007 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16011, metadata !DIExpression()), !dbg !16012
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !16013
  ret %struct.rbnode* %2, !dbg !16014
}

; Function Attrs: optsize
declare !dbg !16015 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16018 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16028, metadata !DIExpression()), !dbg !16032
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16033
  %3 = load i32, i32* %2, align 4, !dbg !16033
  %4 = icmp eq i32 %3, 0, !dbg !16035
  br i1 %4, label %10, label %5, !dbg !16036

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16029, metadata !DIExpression()), !dbg !16032
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16037, !range !7574
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16038
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16030, metadata !DIExpression()), !dbg !16032
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !16039
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16031, metadata !DIExpression()), !dbg !16032
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16029, metadata !DIExpression()), !dbg !16032
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16032
  ret %struct.k_thread* %11, !dbg !16040
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16041 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16045, metadata !DIExpression()), !dbg !16048
  call void @llvm.dbg.value(metadata i32 0, metadata !16046, metadata !DIExpression()), !dbg !16048
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !16049
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16047, metadata !DIExpression()), !dbg !16048
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16050
  br i1 %3, label %8, label %4, !dbg !16051

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !16052
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !16054
  call void @llvm.dbg.value(metadata i32 1, metadata !16046, metadata !DIExpression()), !dbg !16048
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !16049
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16047, metadata !DIExpression()), !dbg !16048
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16050
  br i1 %7, label %8, label %4, !dbg !16051, !llvm.loop !16055

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16048
  ret i32 %9, !dbg !16057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !16058 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16060, metadata !DIExpression()), !dbg !16061
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16062
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !16063
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16064
  ret %struct.k_thread* %4, !dbg !16065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !16066 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16075, metadata !DIExpression()), !dbg !16076
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16077
  tail call fastcc void @sys_dlist_init.280(%struct._dnode* noundef nonnull %2) #25, !dbg !16078
  ret void, !dbg !16079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.280(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16080 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16084, metadata !DIExpression()), !dbg !16085
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16086
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16087
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16088
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16089
  ret void, !dbg !16090
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16091 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !16092
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !16093
  ret void, !dbg !16094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !16095 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16100, metadata !DIExpression()), !dbg !16101
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16102
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16102
  %4 = load i8, i8* %3, align 2, !dbg !16102
  %5 = sext i8 %4 to i32, !dbg !16103
  ret i32 %5, !dbg !16104
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16105 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16109, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata i32 %1, metadata !16110, metadata !DIExpression()), !dbg !16112
  %3 = add i32 %1, 16, !dbg !16113
  %4 = icmp ult i32 %3, 31, !dbg !16113
  br i1 %4, label %6, label %5, !dbg !16113

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1331) #24, !dbg !16117
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.284, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #24, !dbg !16117
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1331) #24, !dbg !16117
  unreachable, !dbg !16117

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16119, !srcloc !15095
  call void @llvm.dbg.value(metadata i32 %7, metadata !15091, metadata !DIExpression()) #23, !dbg !16124
  %8 = icmp eq i32 %7, 0, !dbg !16125
  br i1 %8, label %10, label %9, !dbg !16126

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1332) #24, !dbg !16127
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.259, i32 0, i32 0)) #24, !dbg !16127
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1332) #24, !dbg !16127
  unreachable, !dbg !16127

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16111, metadata !DIExpression()), !dbg !16112
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !16129
  ret void, !dbg !16130
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16131 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !16132
  br i1 %1, label %8, label %2, !dbg !16133

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !16134
  br i1 %3, label %8, label %4, !dbg !16135

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16136
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !16137
  %7 = xor i1 %6, true, !dbg !16135
  br label %8, !dbg !16135

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !16139 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16140, !range !6737
  %2 = icmp eq i8 %1, 0, !dbg !16140
  ret i1 %2, !dbg !16141
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16142 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16145, !srcloc !15095
  call void @llvm.dbg.value(metadata i32 %1, metadata !15091, metadata !DIExpression()) #23, !dbg !16150
  %2 = icmp eq i32 %1, 0, !dbg !16151
  br i1 %2, label %4, label %3, !dbg !16152

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1392) #24, !dbg !16153
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.259, i32 0, i32 0)) #24, !dbg !16153
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1392) #24, !dbg !16153
  unreachable, !dbg !16153

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !16155
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16157, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !16159
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !16159
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !16155
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16160
  br i1 %6, label %8, label %7, !dbg !16161

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !16162
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16162
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !16162
  unreachable, !dbg !16162

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !16159
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !16155
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16163
  call void @llvm.dbg.value(metadata i32 undef, metadata !16144, metadata !DIExpression()), !dbg !16164
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16165
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14553, metadata !DIExpression()) #23, !dbg !16168
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16170
  %11 = load i8, i8* %10, align 1, !dbg !16171
  %12 = and i8 %11, 127, !dbg !16171
  store i8 %12, i8* %10, align 1, !dbg !16171
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14561, metadata !DIExpression()) #23, !dbg !16172
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #24, !dbg !16174
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16175
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14570, metadata !DIExpression()) #23, !dbg !16176
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16178
  %15 = load i8, i8* %14, align 1, !dbg !16179
  %16 = or i8 %15, -128, !dbg !16179
  store i8 %16, i8* %14, align 1, !dbg !16179
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14577, metadata !DIExpression()) #23, !dbg !16180
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14584, metadata !DIExpression()) #23, !dbg !16182
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14590, metadata !DIExpression()) #23, !dbg !16182
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #24, !dbg !16184
  br i1 %17, label %18, label %19, !dbg !16185

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 186) #24, !dbg !16186
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 186) #24, !dbg !16186
  unreachable, !dbg !16186

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !16187
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14591, metadata !DIExpression()) #23, !dbg !16182
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16188
  br i1 %21, label %32, label %22, !dbg !16187

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14591, metadata !DIExpression()) #23, !dbg !16182
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16189
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14591, metadata !DIExpression()) #23, !dbg !16182
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #24, !dbg !16190
  %26 = icmp sgt i32 %25, 0, !dbg !16191
  br i1 %26, label %27, label %29, !dbg !16192

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16193
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #24, !dbg !16194
  br label %34, !dbg !16195

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #24, !dbg !16188
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14591, metadata !DIExpression()) #23, !dbg !16182
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16188
  br i1 %31, label %32, label %22, !dbg !16187, !llvm.loop !16196

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16198
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #24, !dbg !16199
  br label %34, !dbg !16200

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !16201
  call void @llvm.dbg.value(metadata i32 undef, metadata !15039, metadata !DIExpression()) #23, !dbg !16202
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15044, metadata !DIExpression()) #23, !dbg !16202
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15048, metadata !DIExpression()) #23, !dbg !16204
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16206
  br i1 %35, label %37, label %36, !dbg !16207

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !16208
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16208
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !16208
  unreachable, !dbg !16208

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16157
  call void @llvm.dbg.value(metadata i32 %38, metadata !14373, metadata !DIExpression()) #23, !dbg !16159
  call void @llvm.dbg.value(metadata i32 %38, metadata !14367, metadata !DIExpression()) #23, !dbg !16155
  call void @llvm.dbg.value(metadata i32 %38, metadata !16144, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata i32 undef, metadata !15039, metadata !DIExpression()) #23, !dbg !16202
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #24, !dbg !16209
  ret void, !dbg !16210
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16211 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16215, metadata !DIExpression()), !dbg !16218
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16219, !srcloc !15095
  call void @llvm.dbg.value(metadata i32 %3, metadata !15091, metadata !DIExpression()) #23, !dbg !16224
  %4 = icmp eq i32 %3, 0, !dbg !16225
  br i1 %4, label %6, label %5, !dbg !16226

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1463) #24, !dbg !16227
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.259, i32 0, i32 0)) #24, !dbg !16227
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1463) #24, !dbg !16227
  unreachable, !dbg !16227

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16229
  br i1 %7, label %8, label %10, !dbg !16231

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16232
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #25, !dbg !16234
  br label %15, !dbg !16235

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16216, metadata !DIExpression()), !dbg !16218
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !16236
  %12 = sext i32 %11 to i64, !dbg !16236
  call void @llvm.dbg.value(metadata i64 %12, metadata !16216, metadata !DIExpression()), !dbg !16218
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #25, !dbg !16237
  %14 = trunc i64 %13 to i32, !dbg !16237
  call void @llvm.dbg.value(metadata i32 %14, metadata !16217, metadata !DIExpression()), !dbg !16218
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16218
  ret i32 %16, !dbg !16238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16239 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16243, metadata !DIExpression()), !dbg !16244
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16245, !srcloc !16247
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !16248
  ret void, !dbg !16249
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16250 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16254, metadata !DIExpression()), !dbg !16258
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16259, !srcloc !15095
  call void @llvm.dbg.value(metadata i32 %2, metadata !15091, metadata !DIExpression()) #23, !dbg !16264
  %3 = icmp eq i32 %2, 0, !dbg !16265
  br i1 %3, label %5, label %4, !dbg !16266

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1420) #24, !dbg !16267
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.259, i32 0, i32 0)) #24, !dbg !16267
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1420) #24, !dbg !16267
  unreachable, !dbg !16267

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16269
  br i1 %6, label %7, label %8, !dbg !16271

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #25, !dbg !16272
  br label %43, !dbg !16274

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16256, metadata !DIExpression()), !dbg !16258
  %9 = icmp sgt i64 %0, -3, !dbg !16275
  br i1 %9, label %10, label %14, !dbg !16277

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !16278
  %12 = trunc i64 %0 to i32, !dbg !16280
  %13 = add i32 %11, %12, !dbg !16280
  call void @llvm.dbg.value(metadata i32 %13, metadata !16255, metadata !DIExpression()), !dbg !16258
  br label %17, !dbg !16281

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16282
  %16 = sub i32 -2, %15, !dbg !16282
  call void @llvm.dbg.value(metadata i32 %16, metadata !16255, metadata !DIExpression()), !dbg !16258
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16284
  call void @llvm.dbg.value(metadata i32 %18, metadata !16255, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !16285
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16287, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !16285
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16290
  br i1 %20, label %22, label %21, !dbg !16291

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !16292
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16292
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !16292
  unreachable, !dbg !16292

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !16285
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()), !dbg !16258
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16294
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16295
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #25, !dbg !16296
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16297
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16298
  tail call fastcc void @z_add_thread_timeout.267(%struct.k_thread* noundef %24, [1 x i64] %25) #25, !dbg !16298
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16299
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #25, !dbg !16300
  call void @llvm.dbg.value(metadata i32 undef, metadata !15039, metadata !DIExpression()) #23, !dbg !16301
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15044, metadata !DIExpression()) #23, !dbg !16301
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15048, metadata !DIExpression()) #23, !dbg !16303
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16305
  br i1 %27, label %29, label %28, !dbg !16306

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !16307
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16307
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !16307
  unreachable, !dbg !16307

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16287
  call void @llvm.dbg.value(metadata i32 %30, metadata !14373, metadata !DIExpression()) #23, !dbg !16289
  call void @llvm.dbg.value(metadata i32 %30, metadata !14367, metadata !DIExpression()) #23, !dbg !16285
  call void @llvm.dbg.value(metadata i32 %30, metadata !16257, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.value(metadata i32 undef, metadata !15039, metadata !DIExpression()) #23, !dbg !16301
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #24, !dbg !16308
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16309
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #25, !dbg !16309
  br i1 %33, label %34, label %35, !dbg !16312

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1448) #24, !dbg !16313
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.259, i32 0, i32 0)) #24, !dbg !16313
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1448) #24, !dbg !16313
  unreachable, !dbg !16313

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16315
  %37 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !16316
  %38 = zext i32 %37 to i64, !dbg !16316
  %39 = sub nsw i64 %36, %38, !dbg !16317
  call void @llvm.dbg.value(metadata i64 %39, metadata !16254, metadata !DIExpression()), !dbg !16258
  %40 = icmp sgt i64 %39, 0, !dbg !16318
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16318
  %42 = trunc i64 %41 to i32, !dbg !16318
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16258
  ret i32 %44, !dbg !16319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #6 !dbg !16320 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16322, metadata !DIExpression()), !dbg !16323
  call void @llvm.dbg.value(metadata i64 %0, metadata !14421, metadata !DIExpression()), !dbg !16324
  call void @llvm.dbg.value(metadata i32 10000, metadata !14424, metadata !DIExpression()), !dbg !16324
  call void @llvm.dbg.value(metadata i32 1000, metadata !14425, metadata !DIExpression()), !dbg !16324
  call void @llvm.dbg.value(metadata i8 1, metadata !14426, metadata !DIExpression()), !dbg !16324
  call void @llvm.dbg.value(metadata i1 false, metadata !14427, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16324
  call void @llvm.dbg.value(metadata i1 false, metadata !14428, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16324
  call void @llvm.dbg.value(metadata i8 0, metadata !14429, metadata !DIExpression()), !dbg !16324
  call void @llvm.dbg.value(metadata i1 false, metadata !14430, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16324
  call void @llvm.dbg.value(metadata i1 true, metadata !14431, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16324
  call void @llvm.dbg.value(metadata i64 0, metadata !14432, metadata !DIExpression()), !dbg !16324
  call void @llvm.dbg.value(metadata i64 0, metadata !14432, metadata !DIExpression()), !dbg !16324
  call void @llvm.dbg.value(metadata i64 %0, metadata !14421, metadata !DIExpression()), !dbg !16324
  %2 = udiv i64 %0, 10, !dbg !16326
  ret i64 %2, !dbg !16330
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16331 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16332, !srcloc !16334
  tail call void @z_impl_k_yield() #25, !dbg !16335
  ret void, !dbg !16336
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16337 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16341, metadata !DIExpression()), !dbg !16343
  %2 = sext i32 %0 to i64, !dbg !16344
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !16345
  call void @llvm.dbg.value(metadata i64 %3, metadata !16342, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16343
  %4 = shl i64 %3, 32, !dbg !16346
  %5 = ashr exact i64 %4, 32, !dbg !16346
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !16347
  call void @llvm.dbg.value(metadata i32 %6, metadata !16342, metadata !DIExpression()), !dbg !16343
  %7 = sext i32 %6 to i64, !dbg !16348
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !16349
  %9 = trunc i64 %8 to i32, !dbg !16349
  ret i32 %9, !dbg !16350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !16351 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16353, metadata !DIExpression()), !dbg !16354
  call void @llvm.dbg.value(metadata i64 %0, metadata !14421, metadata !DIExpression()), !dbg !16355
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14424, metadata !DIExpression()), !dbg !16355
  call void @llvm.dbg.value(metadata i32 10000, metadata !14425, metadata !DIExpression()), !dbg !16355
  call void @llvm.dbg.value(metadata i8 1, metadata !14426, metadata !DIExpression()), !dbg !16355
  call void @llvm.dbg.value(metadata i1 false, metadata !14427, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16355
  call void @llvm.dbg.value(metadata i1 true, metadata !14428, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16355
  call void @llvm.dbg.value(metadata i8 0, metadata !14429, metadata !DIExpression()), !dbg !16355
  call void @llvm.dbg.value(metadata i1 false, metadata !14430, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16355
  call void @llvm.dbg.value(metadata i1 true, metadata !14431, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16355
  call void @llvm.dbg.value(metadata i64 0, metadata !14432, metadata !DIExpression()), !dbg !16355
  call void @llvm.dbg.value(metadata i64 0, metadata !14432, metadata !DIExpression()), !dbg !16355
  %2 = add i64 %0, 99, !dbg !16357
  call void @llvm.dbg.value(metadata i64 %2, metadata !14421, metadata !DIExpression()), !dbg !16355
  %3 = udiv i64 %2, 100, !dbg !16358
  ret i64 %3, !dbg !16359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #6 !dbg !16360 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16362, metadata !DIExpression()), !dbg !16363
  call void @llvm.dbg.value(metadata i64 %0, metadata !14421, metadata !DIExpression()), !dbg !16364
  call void @llvm.dbg.value(metadata i32 10000, metadata !14424, metadata !DIExpression()), !dbg !16364
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14425, metadata !DIExpression()), !dbg !16364
  call void @llvm.dbg.value(metadata i8 1, metadata !14426, metadata !DIExpression()), !dbg !16364
  call void @llvm.dbg.value(metadata i1 false, metadata !14427, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16364
  call void @llvm.dbg.value(metadata i1 false, metadata !14428, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16364
  call void @llvm.dbg.value(metadata i8 0, metadata !14429, metadata !DIExpression()), !dbg !16364
  call void @llvm.dbg.value(metadata i1 true, metadata !14430, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16364
  call void @llvm.dbg.value(metadata i1 false, metadata !14431, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16364
  call void @llvm.dbg.value(metadata i64 0, metadata !14432, metadata !DIExpression()), !dbg !16364
  call void @llvm.dbg.value(metadata i64 0, metadata !14432, metadata !DIExpression()), !dbg !16364
  %2 = mul i64 %0, 100, !dbg !16366
  ret i64 %2, !dbg !16368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16369 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16371, metadata !DIExpression()), !dbg !16372
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !16373
  br i1 %2, label %14, label %3, !dbg !16375

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !16376
  %5 = icmp slt i32 %4, 0, !dbg !16378
  br i1 %5, label %6, label %10, !dbg !16379

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16380
  %8 = load i8, i8* %7, align 1, !dbg !16380
  %9 = icmp eq i8 %8, 16, !dbg !16383
  br i1 %9, label %10, label %14, !dbg !16384

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !16385
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !16386
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16387, !srcloc !15095
  call void @llvm.dbg.value(metadata i32 %11, metadata !15091, metadata !DIExpression()) #23, !dbg !16391
  %12 = icmp eq i32 %11, 0, !dbg !16392
  br i1 %12, label %13, label %14, !dbg !16393

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !16394
  br label %14, !dbg !16396

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16398 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16400, metadata !DIExpression()), !dbg !16401
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16402
  %3 = load i8, i8* %2, align 1, !dbg !16402
  %4 = and i8 %3, 2, !dbg !16403
  %5 = icmp ne i8 %4, 0, !dbg !16404
  ret i1 %5, !dbg !16405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !16406 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16411
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16410, metadata !DIExpression()), !dbg !16412
  ret %struct.k_thread* %1, !dbg !16413
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16414 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16415, !srcloc !15095
  call void @llvm.dbg.value(metadata i32 %1, metadata !15091, metadata !DIExpression()) #23, !dbg !16418
  %2 = icmp eq i32 %1, 0, !dbg !16419
  br i1 %2, label %3, label %8, !dbg !16420

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16421
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !16422
  %6 = icmp ne i32 %5, 0, !dbg !16420
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16423
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16424 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16426, metadata !DIExpression()), !dbg !16428
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !16429
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16431, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !16433
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !16433
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !16429
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16434
  br i1 %3, label %5, label %4, !dbg !16435

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !16436
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16436
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !16436
  unreachable, !dbg !16436

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16431
  call void @llvm.dbg.value(metadata i32 %6, metadata !14373, metadata !DIExpression()) #23, !dbg !16433
  call void @llvm.dbg.value(metadata i32 %6, metadata !14367, metadata !DIExpression()) #23, !dbg !16429
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16437
  call void @llvm.dbg.value(metadata i32 %6, metadata !16427, metadata !DIExpression()), !dbg !16428
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16438
  %8 = load i8, i8* %7, align 4, !dbg !16438
  %9 = and i8 %8, 1, !dbg !16440
  %10 = icmp eq i8 %9, 0, !dbg !16441
  br i1 %10, label %15, label %11, !dbg !16442

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !16443
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !16443
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16446
  br i1 %12, label %14, label %13, !dbg !16447

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !16448
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16448
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !16448
  unreachable, !dbg !16448

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14395, metadata !DIExpression()) #23, !dbg !16443
  call void @llvm.dbg.value(metadata i32 %6, metadata !14409, metadata !DIExpression()) #23, !dbg !16449
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16451, !srcloc !14415
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1731) #24, !dbg !16452
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.293, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #24, !dbg !16452
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1731) #24, !dbg !16452
  unreachable, !dbg !16452

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16456
  %17 = load i8, i8* %16, align 1, !dbg !16456
  %18 = and i8 %17, 8, !dbg !16458
  %19 = icmp eq i8 %18, 0, !dbg !16459
  br i1 %19, label %24, label %20, !dbg !16460

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !16461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !16461
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16464
  br i1 %21, label %23, label %22, !dbg !16465

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !16466
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16466
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !16466
  unreachable, !dbg !16466

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14395, metadata !DIExpression()) #23, !dbg !16461
  call void @llvm.dbg.value(metadata i32 %6, metadata !14409, metadata !DIExpression()) #23, !dbg !16467
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16469, !srcloc !14415
  br label %39, !dbg !16470

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !16471
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16472
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16474
  br i1 %26, label %27, label %35, !dbg !16475

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16476, !srcloc !15095
  call void @llvm.dbg.value(metadata i32 %28, metadata !15091, metadata !DIExpression()) #23, !dbg !16479
  %29 = icmp eq i32 %28, 0, !dbg !16480
  br i1 %29, label %30, label %35, !dbg !16481

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15039, metadata !DIExpression()) #23, !dbg !16482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15044, metadata !DIExpression()) #23, !dbg !16482
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15048, metadata !DIExpression()) #23, !dbg !16485
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16487
  br i1 %31, label %33, label %32, !dbg !16488

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !16489
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16489
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !16489
  unreachable, !dbg !16489

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15039, metadata !DIExpression()) #23, !dbg !16482
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #24, !dbg !16490
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1778) #24, !dbg !16491
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.294, i32 0, i32 0)) #24, !dbg !16491
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1778) #24, !dbg !16491
  unreachable, !dbg !16491

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !16495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !16495
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16497
  br i1 %36, label %38, label %37, !dbg !16498

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !16499
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16499
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !16499
  unreachable, !dbg !16499

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14395, metadata !DIExpression()) #23, !dbg !16495
  call void @llvm.dbg.value(metadata i32 %6, metadata !14409, metadata !DIExpression()) #23, !dbg !16500
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16502, !srcloc !14415
  br label %39, !dbg !16503

39:                                               ; preds = %38, %23
  ret void, !dbg !16503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16504 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16506, metadata !DIExpression()), !dbg !16507
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16508
  %3 = load i8, i8* %2, align 1, !dbg !16508
  %4 = and i8 %3, 8, !dbg !16510
  %5 = icmp eq i8 %4, 0, !dbg !16511
  br i1 %5, label %6, label %20, !dbg !16512

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16513
  %8 = or i8 %7, 8, !dbg !16513
  store i8 %8, i8* %2, align 1, !dbg !16513
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !16515
  br i1 %9, label %10, label %12, !dbg !16517

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14553, metadata !DIExpression()) #23, !dbg !16518
  %11 = and i8 %8, 95, !dbg !16521
  store i8 %11, i8* %2, align 1, !dbg !16521
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14561, metadata !DIExpression()) #23, !dbg !16522
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !16524
  br label %12, !dbg !16525

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16526
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16526
  %15 = icmp eq %union.anon* %14, null, !dbg !16528
  br i1 %15, label %17, label %16, !dbg !16529

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !16530
  br label %17, !dbg !16532

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !16533
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16534
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !16535
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !16536
  br label %20, !dbg !16537

20:                                               ; preds = %17, %1
  ret void, !dbg !16538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16539 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16543, metadata !DIExpression()), !dbg !16545
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !16546
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16544, metadata !DIExpression()), !dbg !16545
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16547
  br i1 %3, label %10, label %4, !dbg !16548

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !16549
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !16551
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16552, metadata !DIExpression()), !dbg !16558
  call void @llvm.dbg.value(metadata i32 0, metadata !16557, metadata !DIExpression()), !dbg !16558
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16560
  store i32 0, i32* %7, align 4, !dbg !16561
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !16562
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !16546
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16544, metadata !DIExpression()), !dbg !16545
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16547
  br i1 %9, label %10, label %4, !dbg !16548, !llvm.loop !16563

10:                                               ; preds = %4, %1
  ret void, !dbg !16565
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16566 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16571, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16570, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !16575
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16577, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !16579
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !16579
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !16575
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16580
  br i1 %4, label %6, label %5, !dbg !16581

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !16582
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16582
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !16582
  unreachable, !dbg !16582

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16577
  call void @llvm.dbg.value(metadata i32 %7, metadata !14373, metadata !DIExpression()) #23, !dbg !16579
  call void @llvm.dbg.value(metadata i32 %7, metadata !14367, metadata !DIExpression()) #23, !dbg !16575
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16583
  call void @llvm.dbg.value(metadata i32 %7, metadata !16572, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i32 0, metadata !16573, metadata !DIExpression()), !dbg !16574
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16584
  %9 = load i8, i8* %8, align 1, !dbg !16584
  %10 = and i8 %9, 8, !dbg !16586
  %11 = icmp eq i8 %10, 0, !dbg !16587
  br i1 %11, label %12, label %35, !dbg !16588

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16571, metadata !DIExpression()), !dbg !16574
  %14 = icmp eq i64 %13, 0, !dbg !16589
  br i1 %14, label %35, label %15, !dbg !16591

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16592
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16594
  br i1 %17, label %35, label %18, !dbg !16595

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16596
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16596
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16597
  %22 = icmp eq %union.anon* %20, %21, !dbg !16598
  br i1 %22, label %35, label %23, !dbg !16599

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16600, !srcloc !15095
  call void @llvm.dbg.value(metadata i32 %24, metadata !15091, metadata !DIExpression()) #23, !dbg !16606
  %25 = icmp eq i32 %24, 0, !dbg !16607
  br i1 %25, label %27, label %26, !dbg !16608

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1809) #24, !dbg !16609
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.295, i32 0, i32 0)) #24, !dbg !16609
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 1809) #24, !dbg !16609
  unreachable, !dbg !16609

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16611
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16612
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #25, !dbg !16613
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16614
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #25, !dbg !16615
  call void @llvm.dbg.value(metadata i32 undef, metadata !15039, metadata !DIExpression()) #23, !dbg !16616
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15044, metadata !DIExpression()) #23, !dbg !16616
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15048, metadata !DIExpression()) #23, !dbg !16618
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16620
  br i1 %31, label %33, label %32, !dbg !16621

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !16622
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16622
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 225) #24, !dbg !16622
  unreachable, !dbg !16622

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15039, metadata !DIExpression()) #23, !dbg !16616
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #24, !dbg !16623
  call void @llvm.dbg.value(metadata i32 %34, metadata !16573, metadata !DIExpression()), !dbg !16574
  br label %40, !dbg !16624

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16625
  call void @llvm.dbg.value(metadata i32 %36, metadata !16573, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !16626
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !16626
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16628
  br i1 %37, label %39, label %38, !dbg !16629

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !16630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !16630
  unreachable, !dbg !16630

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14395, metadata !DIExpression()) #23, !dbg !16626
  call void @llvm.dbg.value(metadata i32 %7, metadata !14409, metadata !DIExpression()) #23, !dbg !16631
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16633, !srcloc !14415
  br label %40, !dbg !16634

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16574
  ret i32 %41, !dbg !16635
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16636 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16640, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i32 %1, metadata !16641, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i8* %2, metadata !16642, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i8 0, metadata !16644, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i32 0, metadata !16645, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14361, metadata !DIExpression()) #23, !dbg !16650
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16652, !srcloc !14376
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !16654
  call void @llvm.dbg.value(metadata i32 undef, metadata !14374, metadata !DIExpression()) #23, !dbg !16654
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !16650
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16655
  br i1 %5, label %7, label %6, !dbg !16656

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !16657
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.253, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16657
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 148) #24, !dbg !16657
  unreachable, !dbg !16657

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()) #23, !dbg !16654
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()) #23, !dbg !16650
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16658
  call void @llvm.dbg.value(metadata i32 undef, metadata !16647, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata i8 poison, metadata !16644, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i32 undef, metadata !16645, metadata !DIExpression()), !dbg !16649
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #25, !dbg !16659
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16643, metadata !DIExpression()), !dbg !16648
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16662
  br i1 %10, label %15, label %11, !dbg !16664

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16665, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata i32 %1, metadata !16671, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata i8* %2, metadata !16672, metadata !DIExpression()), !dbg !16673
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16552, metadata !DIExpression()), !dbg !16676
  call void @llvm.dbg.value(metadata i32 %1, metadata !16557, metadata !DIExpression()), !dbg !16676
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16678
  store i32 %1, i32* %12, align 4, !dbg !16679
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16680
  store i8* %2, i8** %13, align 4, !dbg !16681
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !16682
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !16683
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #25, !dbg !16684
  call void @llvm.dbg.value(metadata i8 1, metadata !16644, metadata !DIExpression()), !dbg !16648
  br label %15, !dbg !16685

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16644, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !16686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14400, metadata !DIExpression()) #23, !dbg !16686
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16688
  br i1 %16, label %18, label %17, !dbg !16689

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !16690
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.255, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16690
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.252, i32 0, i32 0), i32 noundef 194) #24, !dbg !16690
  unreachable, !dbg !16690

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16648
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16652
  call void @llvm.dbg.value(metadata i32 %20, metadata !14373, metadata !DIExpression()) #23, !dbg !16654
  call void @llvm.dbg.value(metadata i32 %20, metadata !14367, metadata !DIExpression()) #23, !dbg !16650
  call void @llvm.dbg.value(metadata i32 %20, metadata !16647, metadata !DIExpression()), !dbg !16649
  call void @llvm.dbg.value(metadata i32 undef, metadata !14395, metadata !DIExpression()) #23, !dbg !16686
  call void @llvm.dbg.value(metadata i32 undef, metadata !14409, metadata !DIExpression()) #23, !dbg !16691
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16693, !srcloc !14415
  call void @llvm.dbg.value(metadata i8 poison, metadata !16644, metadata !DIExpression()), !dbg !16648
  call void @llvm.dbg.value(metadata i32 undef, metadata !16645, metadata !DIExpression()), !dbg !16649
  ret i1 %19, !dbg !16694
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16695 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16701, metadata !DIExpression()), !dbg !16706
  call void @llvm.dbg.value(metadata i64 undef, metadata !16703, metadata !DIExpression()), !dbg !16706
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16700, metadata !DIExpression()), !dbg !16706
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16702, metadata !DIExpression()), !dbg !16706
  call void @llvm.dbg.value(metadata i8** %4, metadata !16704, metadata !DIExpression()), !dbg !16706
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !16707
  call void @llvm.dbg.value(metadata i32 %6, metadata !16705, metadata !DIExpression()), !dbg !16706
  %7 = icmp eq i8** %4, null, !dbg !16708
  br i1 %7, label %12, label %8, !dbg !16710

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16711
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16713
  %11 = load i8*, i8** %10, align 4, !dbg !16713
  store i8* %11, i8** %4, align 4, !dbg !16714
  br label %12, !dbg !16715

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16716
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16717 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !16719
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !16720
  ret void, !dbg !16721
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16722 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16732, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16730, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16731, metadata !DIExpression()), !dbg !16749
  %5 = icmp eq i64 %4, -1, !dbg !16750
  br i1 %5, label %63, label %6, !dbg !16752

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16753
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.300(%struct._dnode* noundef %7) #25, !dbg !16753
  br i1 %8, label %9, label %10, !dbg !16756

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.303, i32 0, i32 0), i32 noundef 99) #24, !dbg !16757
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.304, i32 0, i32 0)) #24, !dbg !16757
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.303, i32 0, i32 0), i32 noundef 99) #24, !dbg !16757
  unreachable, !dbg !16757

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16759
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16760
  call void @llvm.dbg.value(metadata i32 0, metadata !16733, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16762, metadata !DIExpression()) #23, !dbg !16769
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16771, !srcloc !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !16778
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !16778
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !16769
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16779
  br i1 %13, label %15, label %14, !dbg !16782

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !16783
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16783
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !16783
  unreachable, !dbg !16783

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16771
  call void @llvm.dbg.value(metadata i32 %16, metadata !16774, metadata !DIExpression()) #23, !dbg !16778
  call void @llvm.dbg.value(metadata i32 %16, metadata !16768, metadata !DIExpression()) #23, !dbg !16769
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16785
  call void @llvm.dbg.value(metadata i32 %16, metadata !16739, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()), !dbg !16761
  %17 = icmp slt i64 %4, -1, !dbg !16786
  br i1 %17, label %18, label %24, !dbg !16787

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16788
  %20 = add i64 %4, %19, !dbg !16789
  %21 = sub i64 -2, %20, !dbg !16789
  call void @llvm.dbg.value(metadata i64 %21, metadata !16743, metadata !DIExpression()), !dbg !16790
  %22 = icmp sgt i64 %21, 1, !dbg !16791
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16791
  br label %29, !dbg !16792

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16793
  %26 = tail call fastcc i32 @elapsed.308() #25, !dbg !16795
  %27 = sext i32 %26 to i64, !dbg !16795
  %28 = add nsw i64 %25, %27, !dbg !16796
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16797
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16798
  store i64 %30, i64* %31, align 8, !dbg !16799
  %32 = tail call fastcc %struct._timeout* @first() #25, !dbg !16800
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16740, metadata !DIExpression()), !dbg !16802
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16803
  br i1 %33, label %48, label %34, !dbg !16803

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16804
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16740, metadata !DIExpression()), !dbg !16802
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16808
  %38 = load i64, i64* %37, align 8, !dbg !16808
  %39 = icmp slt i64 %35, %38, !dbg !16809
  br i1 %39, label %40, label %44, !dbg !16810

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16808
  %42 = sub nsw i64 %38, %35, !dbg !16811
  store i64 %42, i64* %41, align 8, !dbg !16811
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16813
  tail call fastcc void @sys_dlist_insert.309(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #25, !dbg !16814
  br label %49, !dbg !16815

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16816
  store i64 %45, i64* %31, align 8, !dbg !16816
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #25, !dbg !16817
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16740, metadata !DIExpression()), !dbg !16802
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16803
  br i1 %47, label %48, label %34, !dbg !16803, !llvm.loop !16818

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.310(%struct._dnode* noundef nonnull %7) #25, !dbg !16820
  br label %49, !dbg !16823

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #25, !dbg !16824
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16825
  br i1 %51, label %52, label %59, !dbg !16826

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #25, !dbg !16827
  call void @llvm.dbg.value(metadata i32 %53, metadata !16746, metadata !DIExpression()), !dbg !16828
  %54 = icmp ne i32 %53, 0, !dbg !16829
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16831
  br i1 %57, label %59, label %58, !dbg !16831

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #24, !dbg !16832
  br label %59, !dbg !16834

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !16841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !16841
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16843
  br i1 %60, label %62, label %61, !dbg !16846

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !16847
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16847
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !16847
  unreachable, !dbg !16847

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16835, metadata !DIExpression()) #23, !dbg !16841
  call void @llvm.dbg.value(metadata i32 %16, metadata !16849, metadata !DIExpression()) #23, !dbg !16852
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16854, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 undef, metadata !16733, metadata !DIExpression()), !dbg !16761
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.300(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16857 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16863, metadata !DIExpression()), !dbg !16864
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16865
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16865
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16866
  ret i1 %4, !dbg !16867
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.308() unnamed_addr #1 !dbg !16868 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16871
  %2 = icmp eq i32 %1, 0, !dbg !16872
  br i1 %2, label %3, label %5, !dbg !16871

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !16873
  br label %5, !dbg !16871

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16871
  ret i32 %6, !dbg !16874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !16875 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.315() #25, !dbg !16881
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16879, metadata !DIExpression()), !dbg !16882
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16883
  ret %struct._timeout* %2, !dbg !16884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.309(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16885 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16889, metadata !DIExpression()), !dbg !16893
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16890, metadata !DIExpression()), !dbg !16893
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16894
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16894
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16891, metadata !DIExpression()), !dbg !16893
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16895
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16896
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16897
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16898
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16899
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16900
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16901
  ret void, !dbg !16902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !16903 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16907, metadata !DIExpression()), !dbg !16909
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16910
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.313(%struct._dnode* noundef %2) #25, !dbg !16911
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16908, metadata !DIExpression()), !dbg !16909
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16912
  ret %struct._timeout* %4, !dbg !16913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.310(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !16914 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16919, metadata !DIExpression()), !dbg !16922
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16920, metadata !DIExpression()), !dbg !16922
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16923
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16921, metadata !DIExpression()), !dbg !16922
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16924
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16925
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16926
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16927
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16928
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16929
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16930
  ret void, !dbg !16931
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16932 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !16937
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16934, metadata !DIExpression()), !dbg !16938
  %2 = tail call fastcc i32 @elapsed.308() #25, !dbg !16939
  call void @llvm.dbg.value(metadata i32 %2, metadata !16935, metadata !DIExpression()), !dbg !16938
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16940
  br i1 %3, label %14, label %4, !dbg !16942

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16943
  %6 = load i64, i64* %5, align 8, !dbg !16943
  %7 = sext i32 %2 to i64, !dbg !16944
  %8 = sub nsw i64 %6, %7, !dbg !16945
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16946
  br i1 %9, label %14, label %10, !dbg !16947

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16948
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16948
  %13 = trunc i64 %12 to i32, !dbg !16948
  call void @llvm.dbg.value(metadata i32 %13, metadata !16936, metadata !DIExpression()), !dbg !16938
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16950
  call void @llvm.dbg.value(metadata i32 %15, metadata !16936, metadata !DIExpression()), !dbg !16938
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16951
  %17 = icmp ne i32 %16, 0, !dbg !16953
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16954
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16954
  call void @llvm.dbg.value(metadata i32 %20, metadata !16936, metadata !DIExpression()), !dbg !16938
  ret i32 %20, !dbg !16955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.313(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16956 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16960, metadata !DIExpression()), !dbg !16962
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16961, metadata !DIExpression()), !dbg !16962
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16963
  br i1 %2, label %5, label %3, !dbg !16964

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.314(%struct._dnode* noundef nonnull %0) #25, !dbg !16965
  br label %5, !dbg !16964

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16964
  ret %struct._dnode* %6, !dbg !16966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.314(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16967 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16969, metadata !DIExpression()), !dbg !16971
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16970, metadata !DIExpression()), !dbg !16971
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16972
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16973
  br i1 %3, label %7, label %4, !dbg !16974

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16975
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16975
  br label %7, !dbg !16974

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16974
  ret %struct._dnode* %8, !dbg !16976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.315() unnamed_addr #10 !dbg !16977 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16981, metadata !DIExpression()), !dbg !16982
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.316() #25, !dbg !16983
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16983
  ret %struct._dnode* %3, !dbg !16984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.316() unnamed_addr #10 !dbg !16985 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16989, metadata !DIExpression()), !dbg !16990
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16991
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16992
  ret i1 %2, !dbg !16993
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16994 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16998, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 -22, metadata !16999, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 0, metadata !17000, metadata !DIExpression()), !dbg !17004
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16762, metadata !DIExpression()) #23, !dbg !17005
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17007, !srcloc !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17009
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17009
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17005
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17010
  br i1 %3, label %5, label %4, !dbg !17011

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17012
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17012
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17012
  unreachable, !dbg !17012

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17009
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17005
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17013
  call void @llvm.dbg.value(metadata i32 undef, metadata !17002, metadata !DIExpression()), !dbg !17004
  call void @llvm.dbg.value(metadata i32 -22, metadata !16999, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !17000, metadata !DIExpression()), !dbg !17004
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16999, metadata !DIExpression()), !dbg !17003
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.300(%struct._dnode* noundef %6) #25, !dbg !17014
  br i1 %7, label %8, label %9, !dbg !17018

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !17019
  call void @llvm.dbg.value(metadata i32 0, metadata !16999, metadata !DIExpression()), !dbg !17003
  br label %9, !dbg !17021

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17003
  call void @llvm.dbg.value(metadata i32 %10, metadata !16999, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17022
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17024
  br i1 %11, label %13, label %12, !dbg !17025

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17026
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17026
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17026
  unreachable, !dbg !17026

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17007
  call void @llvm.dbg.value(metadata i32 %14, metadata !16774, metadata !DIExpression()) #23, !dbg !17009
  call void @llvm.dbg.value(metadata i32 %14, metadata !16768, metadata !DIExpression()) #23, !dbg !17005
  call void @llvm.dbg.value(metadata i32 %14, metadata !17002, metadata !DIExpression()), !dbg !17004
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17022
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17027
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17029, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 %10, metadata !16999, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !17000, metadata !DIExpression()), !dbg !17004
  ret i32 %10, !dbg !17030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !17031 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17033, metadata !DIExpression()), !dbg !17034
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !17035
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17037
  br i1 %3, label %10, label %4, !dbg !17038

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17039
  %6 = load i64, i64* %5, align 8, !dbg !17039
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17041
  %8 = load i64, i64* %7, align 8, !dbg !17042
  %9 = add nsw i64 %8, %6, !dbg !17042
  store i64 %9, i64* %7, align 8, !dbg !17042
  br label %10, !dbg !17043

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17044
  tail call fastcc void @sys_dlist_remove.319(%struct._dnode* noundef %11) #25, !dbg !17045
  ret void, !dbg !17046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.319(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !17047 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17051, metadata !DIExpression()), !dbg !17054
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17055
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17055
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17052, metadata !DIExpression()), !dbg !17054
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17056
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17056
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17053, metadata !DIExpression()), !dbg !17054
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17057
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17058
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17059
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17060
  tail call fastcc void @sys_dnode_init.320(%struct._dnode* noundef %0) #25, !dbg !17061
  ret void, !dbg !17062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.320(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !17063 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17065, metadata !DIExpression()), !dbg !17066
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17067
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17068
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17069
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17070
  ret void, !dbg !17071
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17072 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17078, metadata !DIExpression()), !dbg !17083
  call void @llvm.dbg.value(metadata i64 0, metadata !17079, metadata !DIExpression()), !dbg !17083
  call void @llvm.dbg.value(metadata i32 0, metadata !17080, metadata !DIExpression()), !dbg !17084
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16762, metadata !DIExpression()) #23, !dbg !17085
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17087, !srcloc !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17089
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17089
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17085
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17090
  br i1 %3, label %5, label %4, !dbg !17091

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17092
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17092
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17092
  unreachable, !dbg !17092

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17089
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17085
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17093
  call void @llvm.dbg.value(metadata i32 undef, metadata !17082, metadata !DIExpression()), !dbg !17084
  call void @llvm.dbg.value(metadata i64 0, metadata !17079, metadata !DIExpression()), !dbg !17083
  call void @llvm.dbg.value(metadata i32 undef, metadata !17080, metadata !DIExpression()), !dbg !17084
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !17094
  call void @llvm.dbg.value(metadata i64 %6, metadata !17079, metadata !DIExpression()), !dbg !17083
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17097
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17097
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17099
  br i1 %7, label %9, label %8, !dbg !17100

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17101
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17101
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17101
  unreachable, !dbg !17101

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17087
  call void @llvm.dbg.value(metadata i32 %10, metadata !16774, metadata !DIExpression()) #23, !dbg !17089
  call void @llvm.dbg.value(metadata i32 %10, metadata !16768, metadata !DIExpression()) #23, !dbg !17085
  call void @llvm.dbg.value(metadata i32 %10, metadata !17082, metadata !DIExpression()), !dbg !17084
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17102
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17104, !srcloc !16855
  call void @llvm.dbg.value(metadata i64 %6, metadata !17079, metadata !DIExpression()), !dbg !17083
  call void @llvm.dbg.value(metadata i32 undef, metadata !17080, metadata !DIExpression()), !dbg !17084
  ret i64 %6, !dbg !17105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17106 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17108, metadata !DIExpression()), !dbg !17112
  call void @llvm.dbg.value(metadata i64 0, metadata !17109, metadata !DIExpression()), !dbg !17112
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.321(%struct._timeout* noundef %0) #25, !dbg !17113
  br i1 %2, label %21, label %3, !dbg !17115

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !17116
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17110, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i64 0, metadata !17109, metadata !DIExpression()), !dbg !17112
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17118
  br i1 %5, label %16, label %6, !dbg !17120

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17110, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i64 %8, metadata !17109, metadata !DIExpression()), !dbg !17112
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17121
  %10 = load i64, i64* %9, align 8, !dbg !17121
  %11 = add nsw i64 %10, %8, !dbg !17123
  call void @llvm.dbg.value(metadata i64 %11, metadata !17109, metadata !DIExpression()), !dbg !17112
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17124
  br i1 %12, label %16, label %13, !dbg !17126

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !17127
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17110, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.value(metadata i64 %11, metadata !17109, metadata !DIExpression()), !dbg !17112
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17118
  br i1 %15, label %16, label %6, !dbg !17120, !llvm.loop !17128

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17112
  call void @llvm.dbg.value(metadata i64 %17, metadata !17109, metadata !DIExpression()), !dbg !17112
  %18 = tail call fastcc i32 @elapsed.308() #25, !dbg !17130
  %19 = sext i32 %18 to i64, !dbg !17130
  %20 = sub nsw i64 %17, %19, !dbg !17131
  br label %21, !dbg !17132

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17112
  ret i64 %22, !dbg !17133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.321(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17134 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17138, metadata !DIExpression()), !dbg !17139
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17140
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.300(%struct._dnode* noundef %2) #25, !dbg !17141
  %4 = xor i1 %3, true, !dbg !17142
  ret i1 %4, !dbg !17143
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17144 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17146, metadata !DIExpression()), !dbg !17151
  call void @llvm.dbg.value(metadata i64 0, metadata !17147, metadata !DIExpression()), !dbg !17151
  call void @llvm.dbg.value(metadata i32 0, metadata !17148, metadata !DIExpression()), !dbg !17152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16762, metadata !DIExpression()) #23, !dbg !17153
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17155, !srcloc !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17157
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17157
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17153
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17158
  br i1 %3, label %5, label %4, !dbg !17159

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17160
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17160
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17160
  unreachable, !dbg !17160

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17157
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17153
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17161
  call void @llvm.dbg.value(metadata i32 undef, metadata !17150, metadata !DIExpression()), !dbg !17152
  call void @llvm.dbg.value(metadata i64 0, metadata !17147, metadata !DIExpression()), !dbg !17151
  call void @llvm.dbg.value(metadata i32 undef, metadata !17148, metadata !DIExpression()), !dbg !17152
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17162
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !17165
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17147, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17151
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17166
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17166
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17168
  br i1 %8, label %10, label %9, !dbg !17169

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17170
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17170
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17170
  unreachable, !dbg !17170

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17155
  call void @llvm.dbg.value(metadata i32 %11, metadata !16774, metadata !DIExpression()) #23, !dbg !17157
  call void @llvm.dbg.value(metadata i32 %11, metadata !16768, metadata !DIExpression()) #23, !dbg !17153
  call void @llvm.dbg.value(metadata i32 %11, metadata !17150, metadata !DIExpression()), !dbg !17152
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17147, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17151
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17166
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17171
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17173, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 undef, metadata !17148, metadata !DIExpression()), !dbg !17152
  %12 = add i64 %7, %6, !dbg !17174
  ret i64 %12, !dbg !17175
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17176 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17178, metadata !DIExpression()), !dbg !17182
  call void @llvm.dbg.value(metadata i32 0, metadata !17179, metadata !DIExpression()), !dbg !17183
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16762, metadata !DIExpression()) #23, !dbg !17184
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17186, !srcloc !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17188
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17188
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17184
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17189
  br i1 %2, label %4, label %3, !dbg !17190

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17191
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17191
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17191
  unreachable, !dbg !17191

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17188
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17184
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17192
  call void @llvm.dbg.value(metadata i32 undef, metadata !17181, metadata !DIExpression()), !dbg !17183
  call void @llvm.dbg.value(metadata i32 -1, metadata !17178, metadata !DIExpression()), !dbg !17182
  call void @llvm.dbg.value(metadata i32 undef, metadata !17179, metadata !DIExpression()), !dbg !17183
  %5 = tail call fastcc i32 @next_timeout() #25, !dbg !17193
  call void @llvm.dbg.value(metadata i32 %5, metadata !17178, metadata !DIExpression()), !dbg !17182
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17196
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17198
  br i1 %6, label %8, label %7, !dbg !17199

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17200
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17200
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17200
  unreachable, !dbg !17200

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17186
  call void @llvm.dbg.value(metadata i32 %9, metadata !16774, metadata !DIExpression()) #23, !dbg !17188
  call void @llvm.dbg.value(metadata i32 %9, metadata !16768, metadata !DIExpression()) #23, !dbg !17184
  call void @llvm.dbg.value(metadata i32 %9, metadata !17181, metadata !DIExpression()), !dbg !17183
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17196
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17201
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17203, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 %5, metadata !17178, metadata !DIExpression()), !dbg !17182
  call void @llvm.dbg.value(metadata i32 undef, metadata !17179, metadata !DIExpression()), !dbg !17183
  ret i32 %5, !dbg !17204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17207, metadata !DIExpression()), !dbg !17217
  call void @llvm.dbg.value(metadata i1 %1, metadata !17208, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17217
  call void @llvm.dbg.value(metadata i32 0, metadata !17209, metadata !DIExpression()), !dbg !17218
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16762, metadata !DIExpression()) #23, !dbg !17219
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17221, !srcloc !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17223
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17223
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17219
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17224
  br i1 %4, label %6, label %5, !dbg !17225

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17226
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17226
  unreachable, !dbg !17226

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17223
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17219
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17227
  call void @llvm.dbg.value(metadata i32 undef, metadata !17211, metadata !DIExpression()), !dbg !17218
  call void @llvm.dbg.value(metadata i32 undef, metadata !17209, metadata !DIExpression()), !dbg !17218
  %7 = tail call fastcc i32 @next_timeout() #25, !dbg !17228
  call void @llvm.dbg.value(metadata i32 %7, metadata !17212, metadata !DIExpression()), !dbg !17229
  call void @llvm.dbg.value(metadata i1 undef, metadata !17215, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17229
  %8 = icmp slt i32 %7, 2, !dbg !17230
  call void @llvm.dbg.value(metadata i1 %8, metadata !17216, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17229
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17231
  call void @llvm.dbg.value(metadata i1 %9, metadata !17215, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17229
  br i1 %10, label %14, label %11, !dbg !17231

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17233
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17233
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #24, !dbg !17235
  br label %14, !dbg !17236

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17237
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17237
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17239
  br i1 %15, label %17, label %16, !dbg !17240

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17241
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17241
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17241
  unreachable, !dbg !17241

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17221
  call void @llvm.dbg.value(metadata i32 %18, metadata !16774, metadata !DIExpression()) #23, !dbg !17223
  call void @llvm.dbg.value(metadata i32 %18, metadata !16768, metadata !DIExpression()) #23, !dbg !17219
  call void @llvm.dbg.value(metadata i32 %18, metadata !17211, metadata !DIExpression()), !dbg !17218
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17237
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17242
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17244, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 1, metadata !17209, metadata !DIExpression()), !dbg !17218
  call void @llvm.dbg.value(metadata i32 undef, metadata !17209, metadata !DIExpression()), !dbg !17218
  ret void, !dbg !17245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17250, metadata !DIExpression()), !dbg !17255
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !17256
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16762, metadata !DIExpression()) #23, !dbg !17257
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17259, !srcloc !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17261
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17261
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17257
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17262
  br i1 %3, label %5, label %4, !dbg !17263

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17264
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17264
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17264
  unreachable, !dbg !17264

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17261
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17257
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17265
  call void @llvm.dbg.value(metadata i32 undef, metadata !17251, metadata !DIExpression()), !dbg !17255
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !17251, metadata !DIExpression()), !dbg !17255
  %6 = tail call fastcc %struct._timeout* @first() #25, !dbg !17266
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17267
  br i1 %7, label %37, label %8, !dbg !17268

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17255
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17269
  %14 = load i64, i64* %13, align 8, !dbg !17269
  %15 = sext i32 %11 to i64, !dbg !17270
  %16 = icmp sgt i64 %14, %15, !dbg !17271
  br i1 %16, label %35, label %17, !dbg !17272

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17252, metadata !DIExpression()), !dbg !17273
  %18 = trunc i64 %14 to i32, !dbg !17274
  call void @llvm.dbg.value(metadata i32 %18, metadata !17254, metadata !DIExpression()), !dbg !17273
  %19 = sext i32 %18 to i64, !dbg !17275
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17276
  %21 = add i64 %20, %19, !dbg !17276
  store i64 %21, i64* @curr_tick, align 8, !dbg !17276
  store i64 0, i64* %13, align 8, !dbg !17277
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #25, !dbg !17278
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17279
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17281
  br i1 %22, label %24, label %23, !dbg !17282

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17283
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17283
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17283
  unreachable, !dbg !17283

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16835, metadata !DIExpression()) #23, !dbg !17279
  call void @llvm.dbg.value(metadata i32 %12, metadata !16849, metadata !DIExpression()) #23, !dbg !17284
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17286, !srcloc !16855
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17287
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17287
  tail call void %26(%struct._timeout* noundef nonnull %9) #24, !dbg !17288
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16762, metadata !DIExpression()) #23, !dbg !17289
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17291, !srcloc !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17293
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17293
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17289
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17294
  br i1 %28, label %30, label %29, !dbg !17295

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17296
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17296
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17296
  unreachable, !dbg !17296

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17293
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17289
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17297
  call void @llvm.dbg.value(metadata i32 undef, metadata !17251, metadata !DIExpression()), !dbg !17255
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17298
  %32 = sub nsw i32 %31, %18, !dbg !17298
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !17251, metadata !DIExpression()), !dbg !17255
  %33 = tail call fastcc %struct._timeout* @first() #25, !dbg !17266
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17267
  br i1 %34, label %37, label %8, !dbg !17268, !llvm.loop !17299

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17301
  store i64 %36, i64* %13, align 8, !dbg !17301
  br label %41, !dbg !17304

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17255
  %40 = sext i32 %39 to i64, !dbg !17305
  br label %41, !dbg !17305

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17305
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17306
  %45 = add i64 %44, %42, !dbg !17306
  store i64 %45, i64* @curr_tick, align 8, !dbg !17306
  store i32 0, i32* @announce_remaining, align 4, !dbg !17307
  %46 = tail call fastcc i32 @next_timeout() #25, !dbg !17308
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #24, !dbg !17309
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17310
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17310
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17312
  br i1 %47, label %49, label %48, !dbg !17313

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17314
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17314
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17314
  unreachable, !dbg !17314

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17255
  call void @llvm.dbg.value(metadata i32 %50, metadata !16835, metadata !DIExpression()) #23, !dbg !17310
  call void @llvm.dbg.value(metadata i32 %50, metadata !16849, metadata !DIExpression()) #23, !dbg !17315
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17317, !srcloc !16855
  ret void, !dbg !17318
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17319 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17323, metadata !DIExpression()), !dbg !17327
  call void @llvm.dbg.value(metadata i32 0, metadata !17324, metadata !DIExpression()), !dbg !17328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16762, metadata !DIExpression()) #23, !dbg !17329
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17331, !srcloc !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17333
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17333
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17329
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17334
  br i1 %2, label %4, label %3, !dbg !17335

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17336
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17336
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #24, !dbg !17336
  unreachable, !dbg !17336

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17333
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()) #23, !dbg !17329
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17337
  call void @llvm.dbg.value(metadata i32 undef, metadata !17326, metadata !DIExpression()), !dbg !17328
  call void @llvm.dbg.value(metadata i64 0, metadata !17323, metadata !DIExpression()), !dbg !17327
  call void @llvm.dbg.value(metadata i32 undef, metadata !17324, metadata !DIExpression()), !dbg !17328
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17338
  %6 = tail call fastcc i32 @elapsed.308() #25, !dbg !17341
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17327
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17342
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16840, metadata !DIExpression()) #23, !dbg !17342
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17344
  br i1 %7, label %9, label %8, !dbg !17345

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17346
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !17346
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #24, !dbg !17346
  unreachable, !dbg !17346

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17331
  call void @llvm.dbg.value(metadata i32 %10, metadata !16774, metadata !DIExpression()) #23, !dbg !17333
  call void @llvm.dbg.value(metadata i32 %10, metadata !16768, metadata !DIExpression()) #23, !dbg !17329
  call void @llvm.dbg.value(metadata i32 %10, metadata !17326, metadata !DIExpression()), !dbg !17328
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17327
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17327
  call void @llvm.dbg.value(metadata i32 undef, metadata !16835, metadata !DIExpression()) #23, !dbg !17342
  call void @llvm.dbg.value(metadata i32 undef, metadata !16849, metadata !DIExpression()) #23, !dbg !17347
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17349, !srcloc !16855
  call void @llvm.dbg.value(metadata i32 undef, metadata !17324, metadata !DIExpression()), !dbg !17328
  %11 = sext i32 %6 to i64, !dbg !17341
  %12 = add i64 %5, %11, !dbg !17350
  ret i64 %12, !dbg !17351
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17352 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !17353
  %2 = trunc i64 %1 to i32, !dbg !17354
  ret i32 %2, !dbg !17355
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17356 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !17357
  ret i64 %1, !dbg !17358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17361, metadata !DIExpression()), !dbg !17368
  %2 = icmp eq i32 %0, 0, !dbg !17369
  br i1 %2, label %10, label %3, !dbg !17371

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.328() #25, !dbg !17372
  call void @llvm.dbg.value(metadata i32 %4, metadata !17362, metadata !DIExpression()), !dbg !17368
  %5 = mul i32 %0, 84, !dbg !17373
  call void @llvm.dbg.value(metadata i32 %5, metadata !17363, metadata !DIExpression()), !dbg !17368
  br label %6, !dbg !17374

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.328() #25, !dbg !17375
  call void @llvm.dbg.value(metadata i32 %7, metadata !17364, metadata !DIExpression()), !dbg !17376
  %8 = sub i32 %7, %4, !dbg !17377
  %9 = icmp ult i32 %8, %5, !dbg !17379
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.328() unnamed_addr #1 !dbg !17381 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.329() #25, !dbg !17382
  ret i32 %1, !dbg !17383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.329() unnamed_addr #1 !dbg !17384 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !17385
  ret i32 %1, !dbg !17386
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17387 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17391, metadata !DIExpression()), !dbg !17393
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17394

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !17395
  br label %14, !dbg !17399

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17392, metadata !DIExpression()), !dbg !17393
  %6 = icmp slt i64 %2, -1, !dbg !17400
  br i1 %6, label %7, label %9, !dbg !17403

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17404
  br label %14, !dbg !17405

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !17407
  %11 = icmp ugt i64 %2, 1, !dbg !17408
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17408
  %13 = add nsw i64 %10, %12, !dbg !17409
  br label %14, !dbg !17410

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17411
  ret i64 %15, !dbg !17412
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17413 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.332, i32 0, i32 0)) #24, !dbg !17415
  ret void, !dbg !17416
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!801, !2, !2450, !27, !270, !295, !2452, !2454, !2488, !2490, !305, !356, !2492, !2495, !2506, !2552, !2554, !2582, !2610, !2653, !2725, !2770, !385, !528, !2798, !564, !2803, !574, !599, !839, !2806, !978, !1044, !1349, !1633, !2847, !1748, !1838, !2849, !2912, !2979, !1890, !2982, !1897, !2273, !3000, !2293, !3002, !2411, !3005}
!llvm.ident = !{!3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007, !3007}
!llvm.module.flags = !{!3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "tthread", scope: !27, file: !125, line: 29, type: !141, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !122, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/arch/smp/pi/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !106, !108, !113, !114, !118, !119, !120}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !104, line: 22, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !109, line: 46, baseType: !110)
!109 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!111 = !DISubroutineType(types: !112)
!112 = !{null, !113, !113, !113}
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !115, line: 46, baseType: !116)
!115 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !117)
!117 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!119 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !121)
!121 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!122 = !{!123, !25, !134, !139}
!123 = !DIGlobalVariableExpression(var: !124, expr: !DIExpression())
!124 = distinct !DIGlobalVariable(name: "tstack", scope: !27, file: !125, line: 28, type: !126, isLocal: true, isDefinition: true, align: 512)
!125 = !DIFile(filename: "zephyr/samples/arch/smp/pi/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 573440, elements: !131)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !127, file: !128, line: 48, baseType: !107, size: 8)
!131 = !{!132, !133}
!132 = !DISubrange(count: 16)
!133 = !DISubrange(count: 4480)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(name: "buffer", scope: !27, file: !125, line: 30, type: !136, isLocal: true, isDefinition: true)
!136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 30848, elements: !137)
!137 = !{!132, !138}
!138 = !DISubrange(count: 241)
!139 = !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!140 = distinct !DIGlobalVariable(name: "counter", scope: !27, file: !125, line: 31, type: !103, isLocal: true, isDefinition: true)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 20480, elements: !267)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !{!145, !214, !227, !228, !229, !233, !234, !242, !262}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !142, file: !143, line: 247, baseType: !146, size: 384)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !147)
!147 = !{!148, !176, !184, !187, !188, !201, !202, !203}
!148 = !DIDerivedType(tag: DW_TAG_member, scope: !146, file: !143, line: 60, baseType: !149, size: 64)
!149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !146, file: !143, line: 60, size: 64, elements: !150)
!150 = !{!151, !167}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !149, file: !143, line: 61, baseType: !152, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !155)
!155 = !{!156, !162}
!156 = !DIDerivedType(tag: DW_TAG_member, scope: !154, file: !153, line: 38, baseType: !157, size: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !154, file: !153, line: 38, size: 32, elements: !158)
!158 = !{!159, !161}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !157, file: !153, line: 39, baseType: !160, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !157, file: !153, line: 40, baseType: !160, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_member, scope: !154, file: !153, line: 42, baseType: !163, size: 32, offset: 32)
!163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !154, file: !153, line: 42, size: 32, elements: !164)
!164 = !{!165, !166}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !163, file: !153, line: 43, baseType: !160, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !163, file: !153, line: 44, baseType: !160, size: 32)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !149, file: !143, line: 62, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !170)
!169 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!170 = !{!171}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !168, file: !169, line: 50, baseType: !172, size: 64)
!172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 64, elements: !174)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!174 = !{!175}
!175 = !DISubrange(count: 2)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !146, file: !143, line: 68, baseType: !177, size: 32, offset: 64)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !180)
!179 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !181)
!181 = !{!182}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !180, file: !179, line: 232, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !154)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !146, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !186)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !146, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!188 = !DIDerivedType(tag: DW_TAG_member, scope: !146, file: !143, line: 90, baseType: !189, size: 16, offset: 112)
!189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !146, file: !143, line: 90, size: 16, elements: !190)
!190 = !{!191, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !143, line: 91, baseType: !192, size: 16)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !189, file: !143, line: 91, size: 16, elements: !193)
!193 = !{!194, !197}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !143, line: 96, baseType: !195, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !196)
!196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !192, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !189, file: !143, line: 100, baseType: !199, size: 16)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !200)
!200 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !146, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !146, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !146, file: !143, line: 131, baseType: !204, size: 192, offset: 192)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !205)
!205 = !{!206, !207, !213}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !204, file: !179, line: 245, baseType: !152, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !204, file: !179, line: 246, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DISubroutineType(types: !211)
!211 = !{null, !212}
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !204, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !142, file: !143, line: 250, baseType: !215, size: 288, offset: 384)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !217)
!216 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!217 = !{!218, !219, !220, !221, !222, !223, !224, !225, !226}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !215, file: !216, line: 26, baseType: !118, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !215, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !215, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !215, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !215, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !215, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !215, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !215, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !215, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !142, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !142, file: !143, line: 256, baseType: !178, size: 64, offset: 704)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !142, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 256, elements: !231)
!231 = !{!232}
!232 = !DISubrange(count: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !142, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !142, file: !143, line: 300, baseType: !235, size: 96, offset: 1056)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !236)
!236 = !{!237, !238, !241}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !235, file: !143, line: 153, baseType: !22, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !235, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !240, line: 214, baseType: !32)
!240 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !235, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !142, file: !143, line: 325, baseType: !243, size: 32, offset: 1152)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !246)
!245 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!246 = !{!247, !256, !257}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !244, file: !245, line: 5074, baseType: !248, size: 96)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{!251, !254, !255}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !248, file: !249, line: 57, baseType: !252, size: 32)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !249, line: 57, flags: DIFlagFwdDecl)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !248, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !248, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !244, file: !245, line: 5075, baseType: !178, size: 64, offset: 96)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !244, file: !245, line: 5076, baseType: !258, size: 32, offset: 160)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !260)
!259 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!260 = !{!261}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !258, file: !259, line: 52, baseType: !22, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !142, file: !143, line: 343, baseType: !263, size: 64, offset: 1184)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !264)
!264 = !{!265, !266}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !263, file: !216, line: 63, baseType: !118, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !263, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!267 = !{!132}
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !270, file: !286, line: 18, type: !287, isLocal: false, isDefinition: true)
!270 = distinct !DICompileUnit(language: DW_LANG_C99, file: !271, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !272, globals: !285, splitDebugInlining: false, nameTableKind: None)
!271 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!272 = !{!22, !113, !24, !273, !275, !277, !239, !119, !280, !281, !282, !283, !106, !284, !199, !278}
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!285 = !{!268}
!286 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = !{!291, !292}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !288, file: !289, line: 17, baseType: !278, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !288, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!293 = !DIGlobalVariableExpression(var: !294, expr: !DIExpression())
!294 = distinct !DIGlobalVariable(name: "_char_out", scope: !295, file: !299, line: 54, type: !300, isLocal: false, isDefinition: true)
!295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !296, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, globals: !298, splitDebugInlining: false, nameTableKind: None)
!296 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!297 = !{!113, !119}
!298 = !{!293}
!299 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = !DISubroutineType(types: !302)
!302 = !{!119, !119}
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !305, file: !322, line: 56, type: !323, isLocal: true, isDefinition: true, align: 32)
!305 = distinct !DICompileUnit(language: DW_LANG_C99, file: !306, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !307, globals: !321, splitDebugInlining: false, nameTableKind: None)
!306 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!307 = !{!308}
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 407, baseType: !311)
!310 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 398, size: 224, elements: !312)
!312 = !{!313, !315, !316, !317, !318, !319, !320}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !311, file: !310, line: 400, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !118)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !311, file: !310, line: 401, baseType: !314, size: 32, offset: 32)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !311, file: !310, line: 402, baseType: !314, size: 32, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !311, file: !310, line: 403, baseType: !314, size: 32, offset: 96)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !311, file: !310, line: 404, baseType: !314, size: 32, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !311, file: !310, line: 405, baseType: !314, size: 32, offset: 160)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !311, file: !310, line: 406, baseType: !314, size: 32, offset: 192)
!321 = !{!303}
!322 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = !{!327, !353}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !324, file: !325, line: 60, baseType: !328, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 32)
!329 = !DISubroutineType(types: !330)
!330 = !{!119, !331}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336, !337, !338, !339, !346, !347}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !333, file: !334, line: 380, baseType: !278, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !333, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !333, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !333, file: !334, line: 386, baseType: !340, size: 32, offset: 96)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 32)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !341, file: !334, line: 359, baseType: !185, size: 8)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !341, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!345 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !333, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !333, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !334, line: 43, baseType: !351)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !352)
!352 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !324, file: !325, line: 65, baseType: !331, size: 32, offset: 32)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !356, file: !359, line: 71, type: !360, isLocal: true, isDefinition: true, align: 32)
!356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !358, splitDebugInlining: false, nameTableKind: None)
!357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!358 = !{!354}
!359 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !361)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !362)
!362 = !{!363, !382}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !361, file: !325, line: 60, baseType: !364, size: 32)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DISubroutineType(types: !366)
!366 = !{!119, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !370)
!370 = !{!371, !372, !373, !374, !380, !381}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !369, file: !334, line: 380, baseType: !278, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !369, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !369, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !369, file: !334, line: 386, baseType: !375, size: 32, offset: 96)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !377)
!377 = !{!378, !379}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !376, file: !334, line: 359, baseType: !185, size: 8)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !376, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !369, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !369, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !361, file: !325, line: 65, baseType: !367, size: 32, offset: 32)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !385, file: !392, line: 17, type: !521, isLocal: false, isDefinition: true)
!385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !386, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !387, globals: !388, splitDebugInlining: false, nameTableKind: None)
!386 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!387 = !{!239, !119, !118, !113}
!388 = !{!383, !389, !517}
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !391, file: !392, line: 198, type: !503, isLocal: true, isDefinition: true)
!391 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !392, file: !392, line: 175, type: !393, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !498)
!392 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !DISubroutineType(types: !394)
!394 = !{null, !395}
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !397)
!397 = !{!398, !456, !468, !469, !470, !471, !472, !478, !493}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !396, file: !143, line: 247, baseType: !399, size: 384)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !400)
!400 = !{!401, !425, !432, !433, !434, !443, !444, !445}
!401 = !DIDerivedType(tag: DW_TAG_member, scope: !399, file: !143, line: 60, baseType: !402, size: 64)
!402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !399, file: !143, line: 60, size: 64, elements: !403)
!403 = !{!404, !419}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !402, file: !143, line: 61, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !406)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !407)
!407 = !{!408, !414}
!408 = !DIDerivedType(tag: DW_TAG_member, scope: !406, file: !153, line: 38, baseType: !409, size: 32)
!409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !406, file: !153, line: 38, size: 32, elements: !410)
!410 = !{!411, !413}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !409, file: !153, line: 39, baseType: !412, size: 32)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !409, file: !153, line: 40, baseType: !412, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, scope: !406, file: !153, line: 42, baseType: !415, size: 32, offset: 32)
!415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !406, file: !153, line: 42, size: 32, elements: !416)
!416 = !{!417, !418}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !415, file: !153, line: 43, baseType: !412, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !415, file: !153, line: 44, baseType: !412, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !402, file: !143, line: 62, baseType: !420, size: 64)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !421)
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !420, file: !169, line: 50, baseType: !423, size: 64)
!423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !424, size: 64, elements: !174)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !399, file: !143, line: 68, baseType: !426, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !429)
!429 = !{!430}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !428, file: !179, line: 232, baseType: !431, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !406)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !399, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !399, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!434 = !DIDerivedType(tag: DW_TAG_member, scope: !399, file: !143, line: 90, baseType: !435, size: 16, offset: 112)
!435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !399, file: !143, line: 90, size: 16, elements: !436)
!436 = !{!437, !442}
!437 = !DIDerivedType(tag: DW_TAG_member, scope: !435, file: !143, line: 91, baseType: !438, size: 16)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !143, line: 91, size: 16, elements: !439)
!439 = !{!440, !441}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !438, file: !143, line: 96, baseType: !195, size: 8)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !438, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !435, file: !143, line: 100, baseType: !199, size: 16)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !399, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !399, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !399, file: !143, line: 131, baseType: !446, size: 192, offset: 192)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !447)
!447 = !{!448, !449, !455}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !446, file: !179, line: 245, baseType: !405, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !446, file: !179, line: 246, baseType: !450, size: 32, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !451)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 32)
!452 = !DISubroutineType(types: !453)
!453 = !{null, !454}
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !446, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !396, file: !143, line: 250, baseType: !457, size: 288, offset: 384)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !458)
!458 = !{!459, !460, !461, !462, !463, !464, !465, !466, !467}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !457, file: !216, line: 26, baseType: !118, size: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !457, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !457, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !457, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !457, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !457, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !457, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !457, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !457, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !396, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !396, file: !143, line: 256, baseType: !427, size: 64, offset: 704)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !396, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !396, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !396, file: !143, line: 300, baseType: !473, size: 96, offset: 1056)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !474)
!474 = !{!475, !476, !477}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !473, file: !143, line: 153, baseType: !22, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !473, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !473, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !396, file: !143, line: 325, baseType: !479, size: 32, offset: 1152)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !481)
!481 = !{!482, !488, !489}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !480, file: !245, line: 5074, baseType: !483, size: 96)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !484)
!484 = !{!485, !486, !487}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !483, file: !249, line: 57, baseType: !252, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !483, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !483, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !480, file: !245, line: 5075, baseType: !427, size: 64, offset: 96)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !480, file: !245, line: 5076, baseType: !490, size: 32, offset: 160)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !491)
!491 = !{!492}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !490, file: !259, line: 52, baseType: !22, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !396, file: !143, line: 343, baseType: !494, size: 64, offset: 1184)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !495)
!495 = !{!496, !497}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !494, file: !216, line: 63, baseType: !118, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !494, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!498 = !{!499, !500, !501, !502}
!499 = !DILocalVariable(name: "thread", arg: 1, scope: !391, file: !392, line: 175, type: !395)
!500 = !DILocalVariable(name: "region_num", scope: !391, file: !392, line: 200, type: !185)
!501 = !DILocalVariable(name: "guard_start", scope: !391, file: !392, line: 265, type: !22)
!502 = !DILocalVariable(name: "guard_size", scope: !391, file: !392, line: 266, type: !239)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 96, elements: !515)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !505, line: 52, size: 96, elements: !506)
!505 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!506 = !{!507, !508, !509}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !504, file: !505, line: 53, baseType: !22, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !504, file: !505, line: 54, baseType: !239, size: 32, offset: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !504, file: !505, line: 55, baseType: !510, size: 32, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !511, line: 151, baseType: !512)
!511 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !511, line: 149, size: 32, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !512, file: !511, line: 150, baseType: !118, size: 32)
!515 = !{!516}
!516 = !DISubrange(count: 1)
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "static_regions", scope: !385, file: !392, line: 62, type: !519, isLocal: true, isDefinition: true)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !520, size: 96, elements: !515)
!520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !504)
!521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !523)
!523 = !{!524, !525}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !522, file: !289, line: 17, baseType: !278, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !522, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !528, file: !561, line: 39, type: !185, isLocal: true, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !530, globals: !560, splitDebugInlining: false, nameTableKind: None)
!529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!530 = !{!531, !113, !119, !548, !185}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !533, line: 1226, baseType: !534)
!533 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 1213, size: 352, elements: !535)
!535 = !{!536, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !534, file: !533, line: 1215, baseType: !537, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !534, file: !533, line: 1216, baseType: !314, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !534, file: !533, line: 1217, baseType: !314, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !534, file: !533, line: 1218, baseType: !314, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !534, file: !533, line: 1219, baseType: !314, size: 32, offset: 128)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !534, file: !533, line: 1220, baseType: !314, size: 32, offset: 160)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !534, file: !533, line: 1221, baseType: !314, size: 32, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !534, file: !533, line: 1222, baseType: !314, size: 32, offset: 224)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !534, file: !533, line: 1223, baseType: !314, size: 32, offset: 256)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !534, file: !533, line: 1224, baseType: !314, size: 32, offset: 288)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !534, file: !533, line: 1225, baseType: !314, size: 32, offset: 320)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !550)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !551, line: 27, size: 96, elements: !552)
!551 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !{!553, !554, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !550, file: !551, line: 29, baseType: !118, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !550, file: !551, line: 31, baseType: !278, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !550, file: !551, line: 37, baseType: !556, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !511, line: 146, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !511, line: 141, size: 32, elements: !558)
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !557, file: !511, line: 143, baseType: !118, size: 32)
!560 = !{!526}
!561 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !564, file: !571, line: 21, type: !300, isLocal: true, isDefinition: true)
!564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !566, globals: !570, splitDebugInlining: false, nameTableKind: None)
!565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!566 = !{!567, !119, !113}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !569, line: 22, baseType: !119)
!569 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!570 = !{!562}
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !574, file: !579, line: 13, type: !596, isLocal: true, isDefinition: true)
!574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !575, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !576, splitDebugInlining: false, nameTableKind: None)
!575 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!576 = !{!577, !572}
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "mpu_config", scope: !574, file: !579, line: 37, type: !580, isLocal: false, isDefinition: true)
!579 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !551, line: 41, size: 64, elements: !582)
!582 = !{!583, !584}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !581, file: !551, line: 43, baseType: !118, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !581, file: !551, line: 45, baseType: !585, size: 32, offset: 32)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !551, line: 27, size: 96, elements: !588)
!588 = !{!589, !590, !591}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !587, file: !551, line: 29, baseType: !118, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !587, file: !551, line: 31, baseType: !278, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !587, file: !551, line: 37, baseType: !592, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !511, line: 146, baseType: !593)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !511, line: 141, size: 32, elements: !594)
!594 = !{!595}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !593, file: !511, line: 143, baseType: !118, size: 32)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 192, elements: !174)
!597 = !DIGlobalVariableExpression(var: !598, expr: !DIExpression())
!598 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !599, file: !712, line: 72, type: !796, isLocal: true, isDefinition: true)
!599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !600, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !601, retainedTypes: !698, globals: !709, splitDebugInlining: false, nameTableKind: None)
!600 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!601 = !{!30, !602}
!602 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !310, line: 65, baseType: !119, size: 32, elements: !603)
!603 = !{!604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697}
!604 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!605 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!606 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!607 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!608 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!609 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!610 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!611 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!612 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!613 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!614 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!615 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!616 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!617 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!618 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!619 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!620 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!621 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!622 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!623 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!624 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!625 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!626 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!627 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!628 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!629 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!630 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!631 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!632 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!633 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!634 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!635 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!636 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!637 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!638 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!639 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!640 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!641 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!642 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!643 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!644 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!645 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!646 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!647 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!648 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!649 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!650 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!651 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!652 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!653 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!654 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!655 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!656 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!657 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!658 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!659 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!660 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!661 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!662 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!663 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!664 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!665 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!666 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!667 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!668 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!669 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!670 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!671 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!672 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!673 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!674 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!675 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!676 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!677 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!678 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!679 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!680 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!681 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!682 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!683 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!684 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!685 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!686 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!687 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!688 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!689 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!690 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!691 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!692 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!693 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!694 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!695 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!696 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!697 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!698 = !{!239, !119, !113, !699}
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !310, line: 392, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 384, size: 192, elements: !702)
!702 = !{!703, !704, !705, !706, !707, !708}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !701, file: !310, line: 386, baseType: !314, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !701, file: !310, line: 387, baseType: !314, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !701, file: !310, line: 388, baseType: !314, size: 32, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !701, file: !310, line: 389, baseType: !314, size: 32, offset: 96)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !701, file: !310, line: 390, baseType: !314, size: 32, offset: 128)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !701, file: !310, line: 391, baseType: !314, size: 32, offset: 160)
!709 = !{!710, !716, !732, !743, !760, !597, !762, !776, !778, !780, !782, !784, !786, !788, !790, !792, !794}
!710 = !DIGlobalVariableExpression(var: !711, expr: !DIExpression())
!711 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !599, file: !712, line: 424, type: !713, isLocal: false, isDefinition: true, align: 16)
!712 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 64, elements: !714)
!714 = !{!715}
!715 = !DISubrange(count: 4)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !599, file: !712, line: 424, type: !718, isLocal: false, isDefinition: true, align: 32)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !720)
!720 = !{!721, !722, !723, !724, !730, !731}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !719, file: !334, line: 380, baseType: !278, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !719, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !719, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !719, file: !334, line: 386, baseType: !725, size: 32, offset: 96)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 32)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !727)
!727 = !{!728, !729}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !726, file: !334, line: 359, baseType: !185, size: 8)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !726, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !719, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !719, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !599, file: !712, line: 424, type: !734, isLocal: true, isDefinition: true, align: 32)
!734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !735)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !736)
!736 = !{!737, !742}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !735, file: !325, line: 60, baseType: !738, size: 32)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 32)
!739 = !DISubroutineType(types: !740)
!740 = !{!119, !741}
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 32)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !735, file: !325, line: 65, baseType: !741, size: 32, offset: 32)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "exti_data", scope: !599, file: !712, line: 423, type: !745, isLocal: true, isDefinition: true)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !712, line: 107, size: 1472, elements: !746)
!746 = !{!747}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !745, file: !712, line: 109, baseType: !748, size: 1472)
!748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !749, size: 1472, elements: !758)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !712, line: 101, size: 64, elements: !750)
!750 = !{!751, !757}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !749, file: !712, line: 102, baseType: !752, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !753, line: 63, baseType: !754)
!753 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 32)
!755 = !DISubroutineType(types: !756)
!756 = !{null, !119, !113}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !749, file: !712, line: 103, baseType: !113, size: 32, offset: 32)
!758 = !{!759}
!759 = !DISubrange(count: 23)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !599, file: !712, line: 424, type: !726, isLocal: true, isDefinition: true, align: 8)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !764, file: !712, line: 493, type: !769, isLocal: true, isDefinition: true, align: 32)
!764 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !712, file: !712, line: 460, type: !765, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !767)
!765 = !DISubroutineType(types: !766)
!766 = !{null, !741}
!767 = !{!768}
!768 = !DILocalVariable(name: "dev", arg: 1, scope: !764, file: !712, line: 460, type: !741)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !770)
!770 = !{!771, !773, !774, !775}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !769, file: !10, line: 55, baseType: !772, size: 32)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !119)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !769, file: !10, line: 57, baseType: !772, size: 32, offset: 32)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !769, file: !10, line: 59, baseType: !113, size: 32, offset: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !769, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !764, file: !712, line: 497, type: !769, isLocal: true, isDefinition: true, align: 32)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !764, file: !712, line: 507, type: !769, isLocal: true, isDefinition: true, align: 32)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !764, file: !712, line: 512, type: !769, isLocal: true, isDefinition: true, align: 32)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !764, file: !712, line: 516, type: !769, isLocal: true, isDefinition: true, align: 32)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !764, file: !712, line: 523, type: !769, isLocal: true, isDefinition: true, align: 32)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !764, file: !712, line: 527, type: !769, isLocal: true, isDefinition: true, align: 32)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !764, file: !712, line: 581, type: !769, isLocal: true, isDefinition: true, align: 32)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !764, file: !712, line: 586, type: !769, isLocal: true, isDefinition: true, align: 32)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !764, file: !712, line: 591, type: !769, isLocal: true, isDefinition: true, align: 32)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !764, file: !712, line: 595, type: !769, isLocal: true, isDefinition: true, align: 32)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !797, size: 736, elements: !758)
!797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !798)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !310, line: 163, baseType: !602)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !801, file: !806, line: 25, type: !834, isLocal: false, isDefinition: true, align: 16)
!801 = distinct !DICompileUnit(language: DW_LANG_C99, file: !802, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !803, splitDebugInlining: false, nameTableKind: None)
!802 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!803 = !{!804, !799, !810, !812, !814, !816, !818, !820, !822, !824, !826, !828, !830, !832}
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !801, file: !806, line: 20, type: !807, isLocal: false, isDefinition: true, align: 16)
!806 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 240, elements: !808)
!808 = !{!809}
!809 = !DISubrange(count: 15)
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !801, file: !806, line: 32, type: !713, isLocal: false, isDefinition: true, align: 16)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !801, file: !806, line: 39, type: !713, isLocal: false, isDefinition: true, align: 16)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !801, file: !806, line: 46, type: !713, isLocal: false, isDefinition: true, align: 16)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !801, file: !806, line: 53, type: !713, isLocal: false, isDefinition: true, align: 16)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !801, file: !806, line: 60, type: !713, isLocal: false, isDefinition: true, align: 16)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !801, file: !806, line: 67, type: !713, isLocal: false, isDefinition: true, align: 16)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !801, file: !806, line: 74, type: !713, isLocal: false, isDefinition: true, align: 16)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !801, file: !806, line: 81, type: !713, isLocal: false, isDefinition: true, align: 16)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !801, file: !806, line: 88, type: !713, isLocal: false, isDefinition: true, align: 16)
!828 = !DIGlobalVariableExpression(var: !829, expr: !DIExpression())
!829 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !801, file: !806, line: 95, type: !713, isLocal: false, isDefinition: true, align: 16)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !801, file: !806, line: 102, type: !713, isLocal: false, isDefinition: true, align: 16)
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !801, file: !806, line: 109, type: !713, isLocal: false, isDefinition: true, align: 16)
!834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 48, elements: !835)
!835 = !{!836}
!836 = !DISubrange(count: 3)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !839, file: !904, line: 398, type: !937, isLocal: true, isDefinition: true)
!839 = distinct !DICompileUnit(language: DW_LANG_C99, file: !840, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !841, retainedTypes: !854, globals: !901, splitDebugInlining: false, nameTableKind: None)
!840 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!841 = !{!842, !30, !847}
!842 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !843, line: 197, baseType: !32, size: 32, elements: !844)
!843 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!844 = !{!845, !846}
!845 = !DIEnumerator(name: "SUCCESS", value: 0)
!846 = !DIEnumerator(name: "ERROR", value: 1)
!847 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !848, line: 44, baseType: !32, size: 32, elements: !849)
!848 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!849 = !{!850, !851, !852, !853}
!850 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!851 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!852 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!853 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!854 = !{!113, !119, !118, !855, !894, !900}
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 586, baseType: !857)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 550, size: 1216, elements: !858)
!858 = !{!859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !857, file: !310, line: 552, baseType: !314, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !857, file: !310, line: 553, baseType: !314, size: 32, offset: 32)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !857, file: !310, line: 554, baseType: !314, size: 32, offset: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !857, file: !310, line: 555, baseType: !314, size: 32, offset: 96)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !857, file: !310, line: 556, baseType: !314, size: 32, offset: 128)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !857, file: !310, line: 557, baseType: !314, size: 32, offset: 160)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !857, file: !310, line: 558, baseType: !314, size: 32, offset: 192)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !857, file: !310, line: 559, baseType: !118, size: 32, offset: 224)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !857, file: !310, line: 560, baseType: !314, size: 32, offset: 256)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !857, file: !310, line: 561, baseType: !314, size: 32, offset: 288)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !857, file: !310, line: 562, baseType: !870, size: 64, offset: 320)
!870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 64, elements: !174)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !857, file: !310, line: 563, baseType: !314, size: 32, offset: 384)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !857, file: !310, line: 564, baseType: !314, size: 32, offset: 416)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !857, file: !310, line: 565, baseType: !314, size: 32, offset: 448)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !857, file: !310, line: 566, baseType: !118, size: 32, offset: 480)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !857, file: !310, line: 567, baseType: !314, size: 32, offset: 512)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !857, file: !310, line: 568, baseType: !314, size: 32, offset: 544)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !857, file: !310, line: 569, baseType: !870, size: 64, offset: 576)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !857, file: !310, line: 570, baseType: !314, size: 32, offset: 640)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !857, file: !310, line: 571, baseType: !314, size: 32, offset: 672)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !857, file: !310, line: 572, baseType: !314, size: 32, offset: 704)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !857, file: !310, line: 573, baseType: !118, size: 32, offset: 736)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !857, file: !310, line: 574, baseType: !314, size: 32, offset: 768)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !857, file: !310, line: 575, baseType: !314, size: 32, offset: 800)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !857, file: !310, line: 576, baseType: !870, size: 64, offset: 832)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !857, file: !310, line: 577, baseType: !314, size: 32, offset: 896)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !857, file: !310, line: 578, baseType: !314, size: 32, offset: 928)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !857, file: !310, line: 579, baseType: !870, size: 64, offset: 960)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !857, file: !310, line: 580, baseType: !314, size: 32, offset: 1024)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !857, file: !310, line: 581, baseType: !314, size: 32, offset: 1056)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !857, file: !310, line: 582, baseType: !314, size: 32, offset: 1088)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !857, file: !310, line: 583, baseType: !314, size: 32, offset: 1120)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !857, file: !310, line: 584, baseType: !314, size: 32, offset: 1152)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !857, file: !310, line: 585, baseType: !314, size: 32, offset: 1184)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !896, line: 343, size: 64, elements: !897)
!896 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!897 = !{!898, !899}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !895, file: !896, line: 344, baseType: !118, size: 32)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !895, file: !896, line: 345, baseType: !118, size: 32, offset: 32)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!901 = !{!902, !908, !924, !935, !837}
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !839, file: !904, line: 752, type: !905, isLocal: false, isDefinition: true, align: 16)
!904 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 800, elements: !906)
!906 = !{!907}
!907 = !DISubrange(count: 50)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !839, file: !904, line: 752, type: !910, isLocal: false, isDefinition: true, align: 32)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !912)
!912 = !{!913, !914, !915, !916, !922, !923}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !911, file: !334, line: 380, baseType: !278, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !911, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !911, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !911, file: !334, line: 386, baseType: !917, size: 32, offset: 96)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !919)
!919 = !{!920, !921}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !918, file: !334, line: 359, baseType: !185, size: 8)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !918, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !911, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !911, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !839, file: !904, line: 752, type: !926, isLocal: true, isDefinition: true, align: 32)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !928)
!928 = !{!929, !934}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !927, file: !325, line: 60, baseType: !930, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = !DISubroutineType(types: !932)
!932 = !{!119, !933}
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !927, file: !325, line: 65, baseType: !933, size: 32, offset: 32)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !839, file: !904, line: 752, type: !918, isLocal: true, isDefinition: true, align: 8)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !848, line: 100, size: 224, elements: !938)
!938 = !{!939, !945, !946, !955, !960, !965, !971}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !937, file: !848, line: 101, baseType: !940, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !848, line: 76, baseType: !941)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DISubroutineType(types: !943)
!943 = !{!119, !933, !944}
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !848, line: 56, baseType: !113)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !937, file: !848, line: 102, baseType: !940, size: 32, offset: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !937, file: !848, line: 103, baseType: !947, size: 32, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !848, line: 83, baseType: !948)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 32)
!949 = !DISubroutineType(types: !950)
!950 = !{!119, !933, !944, !951, !113}
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !848, line: 72, baseType: !952)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DISubroutineType(types: !954)
!954 = !{null, !933, !944, !113}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !937, file: !848, line: 104, baseType: !956, size: 32, offset: 96)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !848, line: 79, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DISubroutineType(types: !959)
!959 = !{!119, !933, !944, !900}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !937, file: !848, line: 105, baseType: !961, size: 32, offset: 128)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !848, line: 88, baseType: !962)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DISubroutineType(types: !964)
!964 = !{!847, !933, !944}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !937, file: !848, line: 106, baseType: !966, size: 32, offset: 160)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !848, line: 92, baseType: !967)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DISubroutineType(types: !969)
!969 = !{!119, !933, !944, !970}
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !848, line: 64, baseType: !113)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !937, file: !848, line: 107, baseType: !972, size: 32, offset: 192)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !848, line: 96, baseType: !973)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{!119, !933, !944, !113}
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !978, file: !1035, line: 603, type: !1037, isLocal: true, isDefinition: true, align: 32)
!978 = distinct !DICompileUnit(language: DW_LANG_C99, file: !979, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !980, globals: !1032, splitDebugInlining: false, nameTableKind: None)
!979 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!980 = !{!113, !119, !981}
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !983)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !984, line: 336, size: 160, elements: !985)
!984 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!985 = !{!986, !1006, !1010, !1014, !1027}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !983, file: !984, line: 365, baseType: !987, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 32)
!988 = !DISubroutineType(types: !989)
!989 = !{!119, !990, !1005}
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !992)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !993)
!993 = !{!994, !995, !996, !997, !1003, !1004}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !992, file: !334, line: 380, baseType: !278, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !992, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !992, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !992, file: !334, line: 386, baseType: !998, size: 32, offset: 96)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 32)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1000)
!1000 = !{!1001, !1002}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !999, file: !334, line: 359, baseType: !185, size: 8)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !999, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !992, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !992, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !983, file: !984, line: 366, baseType: !1007, size: 32, offset: 32)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 32)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{null, !990, !186}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !983, file: !984, line: 374, baseType: !1011, size: 32, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!119, !990}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !983, file: !984, line: 377, baseType: !1015, size: 32, offset: 96)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 32)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!119, !990, !1018}
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !984, line: 122, size: 64, elements: !1021)
!1021 = !{!1022, !1023, !1024, !1025, !1026}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1020, file: !984, line: 123, baseType: !118, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1020, file: !984, line: 124, baseType: !185, size: 8, offset: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1020, file: !984, line: 125, baseType: !185, size: 8, offset: 40)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1020, file: !984, line: 126, baseType: !185, size: 8, offset: 48)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1020, file: !984, line: 127, baseType: !185, size: 8, offset: 56)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !983, file: !984, line: 379, baseType: !1028, size: 32, offset: 128)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!119, !990, !1031}
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1032 = !{!976, !1033}
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !978, file: !1035, line: 38, type: !1036, isLocal: true, isDefinition: true)
!1035 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!1037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1039)
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1038, file: !325, line: 60, baseType: !1011, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1038, file: !325, line: 65, baseType: !990, size: 32, offset: 32)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1044, file: !1215, line: 762, type: !1324, isLocal: true, isDefinition: true)
!1044 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1045, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1046, retainedTypes: !1064, globals: !1212, splitDebugInlining: false, nameTableKind: None)
!1045 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!1046 = !{!30, !1047, !1053, !1058, !847}
!1047 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1048, line: 506, baseType: !32, size: 32, elements: !1049)
!1048 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1049 = !{!1050, !1051, !1052}
!1050 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1051 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1052 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1053 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1048, line: 512, baseType: !32, size: 32, elements: !1054)
!1054 = !{!1055, !1056, !1057}
!1055 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1056 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1057 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1058 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !753, line: 43, baseType: !32, size: 32, elements: !1059)
!1059 = !{!1060, !1061, !1062, !1063}
!1060 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1061 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1062 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1063 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1064 = !{!113, !119, !1065, !1135, !1140, !1100, !1053, !1047, !1145, !1146, !118, !1160, !1115, !106, !1172, !1173}
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1067)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1048, line: 523, size: 288, elements: !1068)
!1068 = !{!1069, !1090, !1096, !1101, !1105, !1106, !1107, !1111, !1131}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1067, file: !1048, line: 524, baseType: !1070, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!119, !1073, !1088, !1089}
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1076)
!1076 = !{!1077, !1078, !1079, !1080, !1086, !1087}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1075, file: !334, line: 380, baseType: !278, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1075, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1075, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1075, file: !334, line: 386, baseType: !1081, size: 32, offset: 96)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1083)
!1083 = !{!1084, !1085}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1082, file: !334, line: 359, baseType: !185, size: 8)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1082, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1075, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1075, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1048, line: 237, baseType: !185)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1048, line: 257, baseType: !118)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1067, file: !1048, line: 530, baseType: !1091, size: 32, offset: 32)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!119, !1073, !1094}
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1048, line: 229, baseType: !118)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1067, file: !1048, line: 532, baseType: !1097, size: 32, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!119, !1073, !1100, !1095}
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1048, line: 216, baseType: !118)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1067, file: !1048, line: 535, baseType: !1102, size: 32, offset: 96)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!119, !1073, !1100}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1067, file: !1048, line: 537, baseType: !1102, size: 32, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1067, file: !1048, line: 539, baseType: !1102, size: 32, offset: 160)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1067, file: !1048, line: 541, baseType: !1108, size: 32, offset: 192)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!119, !1073, !1088, !1047, !1053}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1067, file: !1048, line: 544, baseType: !1112, size: 32, offset: 224)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!119, !1073, !1115, !345}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1048, line: 478, size: 96, elements: !1117)
!1117 = !{!1118, !1125, !1130}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1116, file: !1048, line: 482, baseType: !1119, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1120, line: 33, baseType: !1121)
!1120 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1120, line: 29, size: 32, elements: !1122)
!1122 = !{!1123}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1121, file: !1120, line: 30, baseType: !1124, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1116, file: !1048, line: 485, baseType: !1126, size: 32, offset: 32)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1048, line: 464, baseType: !1127)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{null, !1073, !1115, !1100}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1116, file: !1048, line: 493, baseType: !1100, size: 32, offset: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1067, file: !1048, line: 547, baseType: !1132, size: 32, offset: 256)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!118, !1073}
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1048, line: 428, size: 32, elements: !1138)
!1138 = !{!1139}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1137, file: !1048, line: 434, baseType: !1100, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1142)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1048, line: 441, size: 32, elements: !1143)
!1143 = !{!1144}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1142, file: !1048, line: 447, baseType: !1100, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !310, line: 469, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 458, size: 320, elements: !1149)
!1149 = !{!1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1148, file: !310, line: 460, baseType: !314, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1148, file: !310, line: 461, baseType: !314, size: 32, offset: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1148, file: !310, line: 462, baseType: !314, size: 32, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1148, file: !310, line: 463, baseType: !314, size: 32, offset: 96)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1148, file: !310, line: 464, baseType: !314, size: 32, offset: 128)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1148, file: !310, line: 465, baseType: !314, size: 32, offset: 160)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1148, file: !310, line: 466, baseType: !314, size: 32, offset: 192)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1148, file: !310, line: 467, baseType: !314, size: 32, offset: 224)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1148, file: !310, line: 468, baseType: !1159, size: 64, offset: 256)
!1159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 64, elements: !174)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !310, line: 484, baseType: !1162)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 475, size: 384, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1168, !1169, !1170, !1171}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1162, file: !310, line: 477, baseType: !314, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1162, file: !310, line: 478, baseType: !314, size: 32, offset: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1162, file: !310, line: 479, baseType: !1167, size: 128, offset: 64)
!1167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 128, elements: !714)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1162, file: !310, line: 480, baseType: !870, size: 64, offset: 192)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1162, file: !310, line: 481, baseType: !314, size: 32, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1162, file: !310, line: 482, baseType: !870, size: 64, offset: 288)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1162, file: !310, line: 483, baseType: !314, size: 32, offset: 352)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1175)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !848, line: 100, size: 224, elements: !1176)
!1176 = !{!1177, !1182, !1183, !1192, !1197, !1202, !1207}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1175, file: !848, line: 101, baseType: !1178, size: 32)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !848, line: 76, baseType: !1179)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{!119, !1073, !944}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1175, file: !848, line: 102, baseType: !1178, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1175, file: !848, line: 103, baseType: !1184, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !848, line: 83, baseType: !1185)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{!119, !1073, !944, !1188, !113}
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !848, line: 72, baseType: !1189)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 32)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{null, !1073, !944, !113}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1175, file: !848, line: 104, baseType: !1193, size: 32, offset: 96)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !848, line: 79, baseType: !1194)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 32)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!119, !1073, !944, !900}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1175, file: !848, line: 105, baseType: !1198, size: 32, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !848, line: 88, baseType: !1199)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!847, !1073, !944}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1175, file: !848, line: 106, baseType: !1203, size: 32, offset: 160)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !848, line: 92, baseType: !1204)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!119, !1073, !944, !970}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1175, file: !848, line: 107, baseType: !1208, size: 32, offset: 192)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !848, line: 96, baseType: !1209)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!119, !1073, !944, !113}
!1212 = !{!1213, !1219, !1221, !1231, !1233, !1235, !1237, !1239, !1241, !1243, !1248, !1250, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1276, !1290, !1292, !1294, !1296, !1298, !1300, !1302, !1304, !1306, !1308, !1310, !1312, !1314, !1316, !1318, !1042, !1320, !1322, !1335, !1337, !1339, !1341, !1343, !1345}
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1044, file: !1215, line: 762, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1215 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 80, elements: !1217)
!1217 = !{!1218}
!1218 = !DISubrange(count: 5)
!1219 = !DIGlobalVariableExpression(var: !1220, expr: !DIExpression())
!1220 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1044, file: !1215, line: 762, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1221 = !DIGlobalVariableExpression(var: !1222, expr: !DIExpression())
!1222 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1044, file: !1215, line: 762, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1225)
!1225 = !{!1226, !1230}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1224, file: !325, line: 60, baseType: !1227, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!119, !1073}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1224, file: !325, line: 65, baseType: !1073, size: 32, offset: 32)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1044, file: !1215, line: 766, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1044, file: !1215, line: 766, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1044, file: !1215, line: 766, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1044, file: !1215, line: 770, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1044, file: !1215, line: 770, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1044, file: !1215, line: 770, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1044, file: !1215, line: 774, type: !1245, isLocal: false, isDefinition: true, align: 16)
!1245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 144, elements: !1246)
!1246 = !{!1247}
!1247 = !DISubrange(count: 9)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1044, file: !1215, line: 774, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1044, file: !1215, line: 774, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1044, file: !1215, line: 778, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1044, file: !1215, line: 778, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1044, file: !1215, line: 778, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1044, file: !1215, line: 782, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1044, file: !1215, line: 782, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1044, file: !1215, line: 782, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1044, file: !1215, line: 786, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1044, file: !1215, line: 786, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1044, file: !1215, line: 786, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1044, file: !1215, line: 790, type: !1216, isLocal: false, isDefinition: true, align: 16)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1044, file: !1215, line: 790, type: !1074, isLocal: false, isDefinition: true, align: 32)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1044, file: !1215, line: 790, type: !1223, isLocal: true, isDefinition: true, align: 32)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1044, file: !1215, line: 762, type: !1278, isLocal: true, isDefinition: true)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1279, line: 237, size: 128, elements: !1280)
!1279 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1280 = !{!1281, !1282, !1283}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1278, file: !1279, line: 239, baseType: !1142, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1278, file: !1279, line: 241, baseType: !1073, size: 32, offset: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1278, file: !1279, line: 243, baseType: !1284, size: 64, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1120, line: 40, baseType: !1285)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1120, line: 35, size: 64, elements: !1286)
!1286 = !{!1287, !1289}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1285, file: !1120, line: 36, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1285, file: !1120, line: 37, baseType: !1288, size: 32, offset: 32)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1044, file: !1215, line: 762, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1044, file: !1215, line: 766, type: !1278, isLocal: true, isDefinition: true)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1044, file: !1215, line: 766, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1044, file: !1215, line: 770, type: !1278, isLocal: true, isDefinition: true)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1044, file: !1215, line: 770, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1044, file: !1215, line: 774, type: !1278, isLocal: true, isDefinition: true)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1044, file: !1215, line: 774, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1044, file: !1215, line: 778, type: !1278, isLocal: true, isDefinition: true)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1044, file: !1215, line: 778, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1044, file: !1215, line: 782, type: !1278, isLocal: true, isDefinition: true)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1044, file: !1215, line: 782, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1044, file: !1215, line: 786, type: !1278, isLocal: true, isDefinition: true)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1044, file: !1215, line: 786, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1044, file: !1215, line: 790, type: !1278, isLocal: true, isDefinition: true)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1044, file: !1215, line: 790, type: !1082, isLocal: true, isDefinition: true, align: 8)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1044, file: !1215, line: 656, type: !1066, isLocal: true, isDefinition: true)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1044, file: !1215, line: 766, type: !1324, isLocal: true, isDefinition: true)
!1324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1325)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1279, line: 224, size: 160, elements: !1326)
!1326 = !{!1327, !1328, !1329, !1330}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1325, file: !1279, line: 226, baseType: !1137, size: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1325, file: !1279, line: 228, baseType: !900, size: 32, offset: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1325, file: !1279, line: 230, baseType: !119, size: 32, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1325, file: !1279, line: 231, baseType: !1331, size: 64, offset: 96)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !896, line: 343, size: 64, elements: !1332)
!1332 = !{!1333, !1334}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1331, file: !896, line: 344, baseType: !118, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1331, file: !896, line: 345, baseType: !118, size: 32, offset: 32)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1044, file: !1215, line: 770, type: !1324, isLocal: true, isDefinition: true)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1044, file: !1215, line: 774, type: !1324, isLocal: true, isDefinition: true)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1044, file: !1215, line: 778, type: !1324, isLocal: true, isDefinition: true)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1044, file: !1215, line: 782, type: !1324, isLocal: true, isDefinition: true)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1044, file: !1215, line: 786, type: !1324, isLocal: true, isDefinition: true)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1044, file: !1215, line: 790, type: !1324, isLocal: true, isDefinition: true)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1349, file: !1488, line: 44, type: !1626, isLocal: false, isDefinition: true)
!1349 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1350, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1351, retainedTypes: !1384, globals: !1485, splitDebugInlining: false, nameTableKind: None)
!1350 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!1351 = !{!30, !1352, !1359, !1366, !1373, !1379, !847}
!1352 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !984, line: 47, baseType: !32, size: 32, elements: !1353)
!1353 = !{!1354, !1355, !1356, !1357, !1358}
!1354 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1355 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1356 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1357 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1358 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1359 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !984, line: 75, baseType: !32, size: 32, elements: !1360)
!1360 = !{!1361, !1362, !1363, !1364, !1365}
!1361 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1362 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1363 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1364 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1365 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1366 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !984, line: 92, baseType: !32, size: 32, elements: !1367)
!1367 = !{!1368, !1369, !1370, !1371, !1372}
!1368 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1369 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1370 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1371 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1372 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1373 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !984, line: 84, baseType: !32, size: 32, elements: !1374)
!1374 = !{!1375, !1376, !1377, !1378}
!1375 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1376 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1377 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1378 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1379 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !984, line: 107, baseType: !32, size: 32, elements: !1380)
!1380 = !{!1381, !1382, !1383}
!1381 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1382 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1383 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1384 = !{!113, !119, !1385, !186, !185, !1434, !118, !944, !1445, !199, !120, !1484}
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !984, line: 336, size: 160, elements: !1388)
!1388 = !{!1389, !1408, !1412, !1416, !1429}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1387, file: !984, line: 365, baseType: !1390, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!119, !1393, !1005}
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1395)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1396)
!1396 = !{!1397, !1398, !1399, !1400, !1406, !1407}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1395, file: !334, line: 380, baseType: !278, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1395, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1395, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1395, file: !334, line: 386, baseType: !1401, size: 32, offset: 96)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1403)
!1403 = !{!1404, !1405}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1402, file: !334, line: 359, baseType: !185, size: 8)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1402, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1395, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1395, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1387, file: !984, line: 366, baseType: !1409, size: 32, offset: 32)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 32)
!1410 = !DISubroutineType(types: !1411)
!1411 = !{null, !1393, !186}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1387, file: !984, line: 374, baseType: !1413, size: 32, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!1414 = !DISubroutineType(types: !1415)
!1415 = !{!119, !1393}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1387, file: !984, line: 377, baseType: !1417, size: 32, offset: 96)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!119, !1393, !1420}
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1422)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !984, line: 122, size: 64, elements: !1423)
!1423 = !{!1424, !1425, !1426, !1427, !1428}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1422, file: !984, line: 123, baseType: !118, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1422, file: !984, line: 124, baseType: !185, size: 8, offset: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1422, file: !984, line: 125, baseType: !185, size: 8, offset: 40)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1422, file: !984, line: 126, baseType: !185, size: 8, offset: 48)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1422, file: !984, line: 127, baseType: !185, size: 8, offset: 56)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1387, file: !984, line: 379, baseType: !1430, size: 32, offset: 128)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 32)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!119, !1393, !1433}
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !310, line: 783, baseType: !1436)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 774, size: 224, elements: !1437)
!1437 = !{!1438, !1439, !1440, !1441, !1442, !1443, !1444}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1436, file: !310, line: 776, baseType: !314, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1436, file: !310, line: 777, baseType: !314, size: 32, offset: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1436, file: !310, line: 778, baseType: !314, size: 32, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1436, file: !310, line: 779, baseType: !314, size: 32, offset: 96)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1436, file: !310, line: 780, baseType: !314, size: 32, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1436, file: !310, line: 781, baseType: !314, size: 32, offset: 160)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1436, file: !310, line: 782, baseType: !314, size: 32, offset: 192)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1447)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !848, line: 100, size: 224, elements: !1448)
!1448 = !{!1449, !1454, !1455, !1464, !1469, !1474, !1479}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1447, file: !848, line: 101, baseType: !1450, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !848, line: 76, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!119, !1393, !944}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1447, file: !848, line: 102, baseType: !1450, size: 32, offset: 32)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1447, file: !848, line: 103, baseType: !1456, size: 32, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !848, line: 83, baseType: !1457)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!119, !1393, !944, !1460, !113}
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !848, line: 72, baseType: !1461)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{null, !1393, !944, !113}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1447, file: !848, line: 104, baseType: !1465, size: 32, offset: 96)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !848, line: 79, baseType: !1466)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!119, !1393, !944, !900}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1447, file: !848, line: 105, baseType: !1470, size: 32, offset: 128)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !848, line: 88, baseType: !1471)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!847, !1393, !944}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1447, file: !848, line: 106, baseType: !1475, size: 32, offset: 160)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !848, line: 92, baseType: !1476)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!119, !1393, !944, !970}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1447, file: !848, line: 107, baseType: !1480, size: 32, offset: 192)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !848, line: 96, baseType: !1481)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!119, !1393, !944, !113}
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!1485 = !{!1347, !1486, !1492, !1494, !1501, !1503, !1505, !1507, !1509, !1511, !1513, !1515, !1517, !1519, !1521, !1523, !1525, !1527, !1571, !1574, !1576, !1579, !1582, !1584, !1590, !1592, !1594, !1596, !1598, !1600, !1602, !1604, !1606, !1608, !1610, !1612, !1614, !1616, !1618, !1620, !1622, !1624}
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1489, isLocal: false, isDefinition: true, align: 16)
!1488 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 128, elements: !1490)
!1490 = !{!1491}
!1491 = !DISubrange(count: 8)
!1492 = !DIGlobalVariableExpression(var: !1493, expr: !DIExpression())
!1493 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1394, isLocal: false, isDefinition: true, align: 32)
!1494 = !DIGlobalVariableExpression(var: !1495, expr: !DIExpression())
!1495 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1496, isLocal: true, isDefinition: true, align: 32)
!1496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1497)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1498)
!1498 = !{!1499, !1500}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1497, file: !325, line: 60, baseType: !1413, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1497, file: !325, line: 65, baseType: !1393, size: 32, offset: 32)
!1501 = !DIGlobalVariableExpression(var: !1502, expr: !DIExpression())
!1502 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1489, isLocal: false, isDefinition: true, align: 16)
!1503 = !DIGlobalVariableExpression(var: !1504, expr: !DIExpression())
!1504 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1394, isLocal: false, isDefinition: true, align: 32)
!1505 = !DIGlobalVariableExpression(var: !1506, expr: !DIExpression())
!1506 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1496, isLocal: true, isDefinition: true, align: 32)
!1507 = !DIGlobalVariableExpression(var: !1508, expr: !DIExpression())
!1508 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1489, isLocal: false, isDefinition: true, align: 16)
!1509 = !DIGlobalVariableExpression(var: !1510, expr: !DIExpression())
!1510 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1394, isLocal: false, isDefinition: true, align: 32)
!1511 = !DIGlobalVariableExpression(var: !1512, expr: !DIExpression())
!1512 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1496, isLocal: true, isDefinition: true, align: 32)
!1513 = !DIGlobalVariableExpression(var: !1514, expr: !DIExpression())
!1514 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1489, isLocal: false, isDefinition: true, align: 16)
!1515 = !DIGlobalVariableExpression(var: !1516, expr: !DIExpression())
!1516 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1394, isLocal: false, isDefinition: true, align: 32)
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1496, isLocal: true, isDefinition: true, align: 32)
!1519 = !DIGlobalVariableExpression(var: !1520, expr: !DIExpression())
!1520 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1402, isLocal: true, isDefinition: true, align: 8)
!1521 = !DIGlobalVariableExpression(var: !1522, expr: !DIExpression())
!1522 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1402, isLocal: true, isDefinition: true, align: 8)
!1523 = !DIGlobalVariableExpression(var: !1524, expr: !DIExpression())
!1524 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1402, isLocal: true, isDefinition: true, align: 8)
!1525 = !DIGlobalVariableExpression(var: !1526, expr: !DIExpression())
!1526 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1402, isLocal: true, isDefinition: true, align: 8)
!1527 = !DIGlobalVariableExpression(var: !1528, expr: !DIExpression())
!1528 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1349, file: !1488, line: 1914, type: !1529, isLocal: true, isDefinition: true)
!1529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1530)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1531, line: 22, size: 224, elements: !1532)
!1531 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1532 = !{!1533, !1534, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1530, file: !1531, line: 24, baseType: !1434, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1530, file: !1531, line: 26, baseType: !1535, size: 32, offset: 32)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1537)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !896, line: 343, size: 64, elements: !1538)
!1538 = !{!1539, !1540}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1537, file: !896, line: 344, baseType: !118, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1537, file: !896, line: 345, baseType: !118, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1530, file: !1531, line: 28, baseType: !239, size: 32, offset: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1530, file: !1531, line: 30, baseType: !345, size: 8, offset: 96)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1530, file: !1531, line: 32, baseType: !119, size: 32, offset: 128)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1530, file: !1531, line: 34, baseType: !345, size: 8, offset: 160)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1530, file: !1531, line: 36, baseType: !345, size: 8, offset: 168)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1530, file: !1531, line: 38, baseType: !345, size: 8, offset: 176)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1530, file: !1531, line: 40, baseType: !345, size: 8, offset: 184)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1530, file: !1531, line: 41, baseType: !1549, size: 32, offset: 192)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1551)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1552, line: 60, size: 64, elements: !1553)
!1552 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1553 = !{!1554, !1570}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1551, file: !1552, line: 69, baseType: !1555, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1557)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1552, line: 50, size: 64, elements: !1558)
!1558 = !{!1559, !1568, !1569}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1557, file: !1552, line: 52, baseType: !1560, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1563, line: 37, baseType: !1564)
!1563 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1563, line: 32, size: 64, elements: !1565)
!1565 = !{!1566, !1567}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1564, file: !1563, line: 34, baseType: !118, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1564, file: !1563, line: 36, baseType: !118, size: 32, offset: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1557, file: !1552, line: 54, baseType: !185, size: 8, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1557, file: !1552, line: 56, baseType: !185, size: 8, offset: 40)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1551, file: !1552, line: 71, baseType: !185, size: 8, offset: 32)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1349, file: !1488, line: 1914, type: !1573, isLocal: true, isDefinition: true)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1536, size: 64, elements: !515)
!1574 = !DIGlobalVariableExpression(var: !1575, expr: !DIExpression())
!1575 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1550, isLocal: true, isDefinition: true)
!1576 = !DIGlobalVariableExpression(var: !1577, expr: !DIExpression())
!1577 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1578, isLocal: true, isDefinition: true)
!1578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1556, size: 64, elements: !515)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1349, file: !1488, line: 1914, type: !1581, isLocal: true, isDefinition: true)
!1581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1561, size: 128, elements: !174)
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1349, file: !1488, line: 1539, type: !1386, isLocal: true, isDefinition: true)
!1584 = !DIGlobalVariableExpression(var: !1585, expr: !DIExpression())
!1585 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1349, file: !1488, line: 1914, type: !1586, isLocal: true, isDefinition: true)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1531, line: 74, size: 64, elements: !1587)
!1587 = !{!1588, !1589}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1586, file: !1531, line: 76, baseType: !118, size: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1586, file: !1531, line: 78, baseType: !1393, size: 32, offset: 32)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1349, file: !1488, line: 1914, type: !1529, isLocal: true, isDefinition: true)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1349, file: !1488, line: 1914, type: !1573, isLocal: true, isDefinition: true)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1550, isLocal: true, isDefinition: true)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1578, isLocal: true, isDefinition: true)
!1598 = !DIGlobalVariableExpression(var: !1599, expr: !DIExpression())
!1599 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1349, file: !1488, line: 1914, type: !1581, isLocal: true, isDefinition: true)
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1349, file: !1488, line: 1914, type: !1586, isLocal: true, isDefinition: true)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1349, file: !1488, line: 1914, type: !1529, isLocal: true, isDefinition: true)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1349, file: !1488, line: 1914, type: !1573, isLocal: true, isDefinition: true)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1550, isLocal: true, isDefinition: true)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1578, isLocal: true, isDefinition: true)
!1610 = !DIGlobalVariableExpression(var: !1611, expr: !DIExpression())
!1611 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1349, file: !1488, line: 1914, type: !1581, isLocal: true, isDefinition: true)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1349, file: !1488, line: 1914, type: !1586, isLocal: true, isDefinition: true)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1349, file: !1488, line: 1914, type: !1529, isLocal: true, isDefinition: true)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1349, file: !1488, line: 1914, type: !1573, isLocal: true, isDefinition: true)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1550, isLocal: true, isDefinition: true)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1578, isLocal: true, isDefinition: true)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1349, file: !1488, line: 1914, type: !1581, isLocal: true, isDefinition: true)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1349, file: !1488, line: 1914, type: !1586, isLocal: true, isDefinition: true)
!1626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1627)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !1628)
!1628 = !{!1629, !1630}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1627, file: !289, line: 17, baseType: !278, size: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1627, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1633, file: !1711, line: 65, type: !314, isLocal: true, isDefinition: true)
!1633 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1634, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1635, retainedTypes: !1636, globals: !1708, splitDebugInlining: false, nameTableKind: None)
!1634 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!1635 = !{!602}
!1636 = !{!114, !1637, !772, !185, !118, !1645, !1676}
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !533, line: 770, baseType: !1639)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 764, size: 128, elements: !1640)
!1640 = !{!1641, !1642, !1643, !1644}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1639, file: !533, line: 766, baseType: !314, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1639, file: !533, line: 767, baseType: !314, size: 32, offset: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1639, file: !533, line: 768, baseType: !314, size: 32, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1639, file: !533, line: 769, baseType: !537, size: 32, offset: 96)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !1648)
!1648 = !{!1649, !1651, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1666, !1671, !1675}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1647, file: !533, line: 413, baseType: !1650, size: 256)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 256, elements: !1490)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1647, file: !533, line: 414, baseType: !1652, size: 768, offset: 256)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 768, elements: !1653)
!1653 = !{!1654}
!1654 = !DISubrange(count: 24)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1647, file: !533, line: 415, baseType: !1650, size: 256, offset: 1024)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1647, file: !533, line: 416, baseType: !1652, size: 768, offset: 1280)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1647, file: !533, line: 417, baseType: !1650, size: 256, offset: 2048)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1647, file: !533, line: 418, baseType: !1652, size: 768, offset: 2304)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1647, file: !533, line: 419, baseType: !1650, size: 256, offset: 3072)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1647, file: !533, line: 420, baseType: !1652, size: 768, offset: 3328)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1647, file: !533, line: 421, baseType: !1650, size: 256, offset: 4096)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1647, file: !533, line: 422, baseType: !1663, size: 1792, offset: 4352)
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 1792, elements: !1664)
!1664 = !{!1665}
!1665 = !DISubrange(count: 56)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1647, file: !533, line: 423, baseType: !1667, size: 1920, offset: 6144)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1668, size: 1920, elements: !1669)
!1668 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!1669 = !{!1670}
!1670 = !DISubrange(count: 240)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1647, file: !533, line: 424, baseType: !1672, size: 20608, offset: 8064)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 20608, elements: !1673)
!1673 = !{!1674}
!1674 = !DISubrange(count: 644)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1647, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !1679)
!1679 = !{!1680, !1681, !1682, !1683, !1684, !1685, !1686, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1699, !1700, !1701, !1703, !1705, !1707}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1678, file: !533, line: 447, baseType: !537, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1678, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1678, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1678, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1678, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1678, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1678, file: !533, line: 453, baseType: !1687, size: 96, offset: 192)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1668, size: 96, elements: !1688)
!1688 = !{!1689}
!1689 = !DISubrange(count: 12)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1678, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1678, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1678, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1678, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1678, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1678, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1678, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1678, file: !533, line: 461, baseType: !1698, size: 64, offset: 512)
!1698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 64, elements: !174)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1678, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1678, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1678, file: !533, line: 464, baseType: !1702, size: 128, offset: 640)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 128, elements: !714)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1678, file: !533, line: 465, baseType: !1704, size: 160, offset: 768)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 160, elements: !1217)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1678, file: !533, line: 466, baseType: !1706, size: 160, offset: 928)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 160, elements: !1217)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1678, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!1708 = !{!1709, !1735, !1740, !1742, !1744, !1631}
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1633, file: !1711, line: 285, type: !1712, isLocal: true, isDefinition: true, align: 32)
!1711 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1713)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1714)
!1714 = !{!1715, !1734}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1713, file: !325, line: 60, baseType: !1716, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!119, !1719}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1721)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1722)
!1722 = !{!1723, !1724, !1725, !1726, !1732, !1733}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1721, file: !334, line: 380, baseType: !278, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1721, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1721, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1721, file: !334, line: 386, baseType: !1727, size: 32, offset: 96)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 32)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1729)
!1729 = !{!1730, !1731}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1728, file: !334, line: 359, baseType: !185, size: 8)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1728, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1721, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1721, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1713, file: !325, line: 65, baseType: !1719, size: 32, offset: 32)
!1735 = !DIGlobalVariableExpression(var: !1736, expr: !DIExpression())
!1736 = distinct !DIGlobalVariable(name: "lock", scope: !1633, file: !1711, line: 34, type: !1737, isLocal: true, isDefinition: true)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !1738)
!1738 = !{!1739}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1737, file: !259, line: 52, baseType: !22, size: 32)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "last_load", scope: !1633, file: !1711, line: 36, type: !118, isLocal: true, isDefinition: true)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1633, file: !1711, line: 48, type: !118, isLocal: true, isDefinition: true)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1633, file: !1711, line: 54, type: !118, isLocal: true, isDefinition: true)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1748, file: !1830, line: 22, type: !1832, isLocal: true, isDefinition: true)
!1748 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1749, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1750, retainedTypes: !1751, globals: !1827, splitDebugInlining: false, nameTableKind: None)
!1749 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!1750 = !{!1047, !1053}
!1751 = !{!1752, !1816, !1821, !1100, !1053, !1047, !1826, !113}
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1754)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1048, line: 523, size: 288, elements: !1755)
!1755 = !{!1756, !1775, !1779, !1783, !1787, !1788, !1789, !1793, !1812}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1754, file: !1048, line: 524, baseType: !1757, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = !DISubroutineType(types: !1759)
!1759 = !{!119, !1760, !1088, !1089}
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1762)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1763)
!1763 = !{!1764, !1765, !1766, !1767, !1773, !1774}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1762, file: !334, line: 380, baseType: !278, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1762, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1762, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1762, file: !334, line: 386, baseType: !1768, size: 32, offset: 96)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1770)
!1770 = !{!1771, !1772}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1769, file: !334, line: 359, baseType: !185, size: 8)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1769, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1762, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1762, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1754, file: !1048, line: 530, baseType: !1776, size: 32, offset: 32)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 32)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!119, !1760, !1094}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1754, file: !1048, line: 532, baseType: !1780, size: 32, offset: 64)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!119, !1760, !1100, !1095}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1754, file: !1048, line: 535, baseType: !1784, size: 32, offset: 96)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 32)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!119, !1760, !1100}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1754, file: !1048, line: 537, baseType: !1784, size: 32, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1754, file: !1048, line: 539, baseType: !1784, size: 32, offset: 160)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1754, file: !1048, line: 541, baseType: !1790, size: 32, offset: 192)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!119, !1760, !1088, !1047, !1053}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1754, file: !1048, line: 544, baseType: !1794, size: 32, offset: 224)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1795 = !DISubroutineType(types: !1796)
!1796 = !{!119, !1760, !1797, !345}
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 32)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1048, line: 478, size: 96, elements: !1799)
!1799 = !{!1800, !1806, !1811}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1798, file: !1048, line: 482, baseType: !1801, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1120, line: 33, baseType: !1802)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1120, line: 29, size: 32, elements: !1803)
!1803 = !{!1804}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1802, file: !1120, line: 30, baseType: !1805, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1798, file: !1048, line: 485, baseType: !1807, size: 32, offset: 32)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1048, line: 464, baseType: !1808)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{null, !1760, !1797, !1100}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1798, file: !1048, line: 493, baseType: !1100, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1754, file: !1048, line: 547, baseType: !1813, size: 32, offset: 256)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 32)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!118, !1760}
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1818)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1048, line: 428, size: 32, elements: !1819)
!1819 = !{!1820}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1818, file: !1048, line: 434, baseType: !1100, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1823)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1048, line: 441, size: 32, elements: !1824)
!1824 = !{!1825}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1823, file: !1048, line: 447, baseType: !1100, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 32)
!1827 = !{!1828, !1746}
!1828 = !DIGlobalVariableExpression(var: !1829, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1829 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1748, file: !1830, line: 37, type: !1831, isLocal: true, isDefinition: true)
!1830 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1833, size: 352, elements: !1834)
!1833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1760)
!1834 = !{!1835}
!1835 = !DISubrange(count: 11)
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1838, file: !1882, line: 139, type: !1887, isLocal: false, isDefinition: true)
!1838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1840, globals: !1879, splitDebugInlining: false, nameTableKind: None)
!1839 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!1840 = !{!1841}
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 586, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 550, size: 1216, elements: !1844)
!1844 = !{!1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1843, file: !310, line: 552, baseType: !314, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1843, file: !310, line: 553, baseType: !314, size: 32, offset: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1843, file: !310, line: 554, baseType: !314, size: 32, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1843, file: !310, line: 555, baseType: !314, size: 32, offset: 96)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1843, file: !310, line: 556, baseType: !314, size: 32, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1843, file: !310, line: 557, baseType: !314, size: 32, offset: 160)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1843, file: !310, line: 558, baseType: !314, size: 32, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1843, file: !310, line: 559, baseType: !118, size: 32, offset: 224)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1843, file: !310, line: 560, baseType: !314, size: 32, offset: 256)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1843, file: !310, line: 561, baseType: !314, size: 32, offset: 288)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1843, file: !310, line: 562, baseType: !870, size: 64, offset: 320)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1843, file: !310, line: 563, baseType: !314, size: 32, offset: 384)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1843, file: !310, line: 564, baseType: !314, size: 32, offset: 416)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1843, file: !310, line: 565, baseType: !314, size: 32, offset: 448)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1843, file: !310, line: 566, baseType: !118, size: 32, offset: 480)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1843, file: !310, line: 567, baseType: !314, size: 32, offset: 512)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1843, file: !310, line: 568, baseType: !314, size: 32, offset: 544)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1843, file: !310, line: 569, baseType: !870, size: 64, offset: 576)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1843, file: !310, line: 570, baseType: !314, size: 32, offset: 640)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1843, file: !310, line: 571, baseType: !314, size: 32, offset: 672)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1843, file: !310, line: 572, baseType: !314, size: 32, offset: 704)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1843, file: !310, line: 573, baseType: !118, size: 32, offset: 736)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1843, file: !310, line: 574, baseType: !314, size: 32, offset: 768)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1843, file: !310, line: 575, baseType: !314, size: 32, offset: 800)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1843, file: !310, line: 576, baseType: !870, size: 64, offset: 832)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1843, file: !310, line: 577, baseType: !314, size: 32, offset: 896)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1843, file: !310, line: 578, baseType: !314, size: 32, offset: 928)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1843, file: !310, line: 579, baseType: !870, size: 64, offset: 960)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1843, file: !310, line: 580, baseType: !314, size: 32, offset: 1024)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1843, file: !310, line: 581, baseType: !314, size: 32, offset: 1056)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1843, file: !310, line: 582, baseType: !314, size: 32, offset: 1088)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1843, file: !310, line: 583, baseType: !314, size: 32, offset: 1120)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1843, file: !310, line: 584, baseType: !314, size: 32, offset: 1152)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1843, file: !310, line: 585, baseType: !314, size: 32, offset: 1184)
!1879 = !{!1880, !1883, !1836}
!1880 = !DIGlobalVariableExpression(var: !1881, expr: !DIExpression())
!1881 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1838, file: !1882, line: 137, type: !118, isLocal: false, isDefinition: true)
!1882 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1883 = !DIGlobalVariableExpression(var: !1884, expr: !DIExpression())
!1884 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1838, file: !1882, line: 138, type: !1885, isLocal: false, isDefinition: true)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 128, elements: !267)
!1886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1886, size: 64, elements: !1490)
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression())
!1889 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1890, file: !1893, line: 23, type: !1894, isLocal: false, isDefinition: true)
!1890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, globals: !1892, splitDebugInlining: false, nameTableKind: None)
!1891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!1892 = !{!1888}
!1893 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!1895 = !DIGlobalVariableExpression(var: !1896, expr: !DIExpression())
!1896 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1897, file: !1901, line: 37, type: !2158, isLocal: false, isDefinition: true)
!1897 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1898, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1899, retainedTypes: !1908, globals: !1981, splitDebugInlining: false, nameTableKind: None)
!1898 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!1899 = !{!1900, !30, !602}
!1900 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1901, line: 63, baseType: !32, size: 32, elements: !1902)
!1901 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1902 = !{!1903, !1904, !1905, !1906, !1907}
!1903 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1904 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1905 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1906 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1907 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1908 = !{!239, !113, !119, !1909, !106, !118, !1939, !772, !185, !1964}
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1912, line: 51, size: 64, elements: !1913)
!1912 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1913 = !{!1914, !1934}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1911, file: !1912, line: 52, baseType: !1915, size: 32)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1912, line: 38, baseType: !1916)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = !DISubroutineType(types: !1918)
!1918 = !{!119, !1919, !284, !199}
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1921)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1922)
!1922 = !{!1923, !1924, !1925, !1926, !1932, !1933}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1921, file: !334, line: 380, baseType: !278, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1921, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1921, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1921, file: !334, line: 386, baseType: !1927, size: 32, offset: 96)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 32)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1929)
!1929 = !{!1930, !1931}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1928, file: !334, line: 359, baseType: !185, size: 8)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1928, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1921, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1921, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1911, file: !1912, line: 53, baseType: !1935, size: 32, offset: 32)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1912, line: 47, baseType: !1936)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!119, !1919, !284, !199, !118}
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !1941)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !1942)
!1942 = !{!1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1941, file: !533, line: 447, baseType: !537, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1941, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1941, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1941, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1941, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1941, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1941, file: !533, line: 453, baseType: !1687, size: 96, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1941, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1941, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1941, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1941, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1941, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1941, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1941, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1941, file: !533, line: 461, baseType: !1698, size: 64, offset: 512)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1941, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1941, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1941, file: !533, line: 464, baseType: !1702, size: 128, offset: 640)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1941, file: !533, line: 465, baseType: !1704, size: 160, offset: 768)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1941, file: !533, line: 466, baseType: !1706, size: 160, offset: 928)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1941, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !1967)
!1967 = !{!1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1966, file: !533, line: 413, baseType: !1650, size: 256)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1966, file: !533, line: 414, baseType: !1652, size: 768, offset: 256)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1966, file: !533, line: 415, baseType: !1650, size: 256, offset: 1024)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1966, file: !533, line: 416, baseType: !1652, size: 768, offset: 1280)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1966, file: !533, line: 417, baseType: !1650, size: 256, offset: 2048)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1966, file: !533, line: 418, baseType: !1652, size: 768, offset: 2304)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1966, file: !533, line: 419, baseType: !1650, size: 256, offset: 3072)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1966, file: !533, line: 420, baseType: !1652, size: 768, offset: 3328)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1966, file: !533, line: 421, baseType: !1650, size: 256, offset: 4096)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1966, file: !533, line: 422, baseType: !1663, size: 1792, offset: 4352)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1966, file: !533, line: 423, baseType: !1667, size: 1920, offset: 6144)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1966, file: !533, line: 424, baseType: !1672, size: 20608, offset: 8064)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1966, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!1981 = !{!1895, !1982, !2108, !2116, !2118, !2121, !2126, !2128, !2133}
!1982 = !DIGlobalVariableExpression(var: !1983, expr: !DIExpression())
!1983 = distinct !DIGlobalVariable(name: "_kernel", scope: !1897, file: !1901, line: 40, type: !1984, isLocal: false, isDefinition: true)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !179, line: 158, size: 288, elements: !1985)
!1985 = !{!1986, !2103}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1984, file: !179, line: 159, baseType: !1987, size: 192)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1988, size: 192, elements: !515)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !179, line: 100, size: 192, elements: !1989)
!1989 = !{!1990, !1991, !1992, !2096, !2097, !2098, !2099}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1988, file: !179, line: 102, baseType: !118, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1988, file: !179, line: 105, baseType: !106, size: 32, offset: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1988, file: !179, line: 108, baseType: !1993, size: 32, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !1995)
!1995 = !{!1996, !2054, !2066, !2067, !2068, !2069, !2070, !2076, !2091}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1994, file: !143, line: 247, baseType: !1997, size: 384)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !1998)
!1998 = !{!1999, !2023, !2030, !2031, !2032, !2041, !2042, !2043}
!1999 = !DIDerivedType(tag: DW_TAG_member, scope: !1997, file: !143, line: 60, baseType: !2000, size: 64)
!2000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1997, file: !143, line: 60, size: 64, elements: !2001)
!2001 = !{!2002, !2017}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2000, file: !143, line: 61, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2004)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2005)
!2005 = !{!2006, !2012}
!2006 = !DIDerivedType(tag: DW_TAG_member, scope: !2004, file: !153, line: 38, baseType: !2007, size: 32)
!2007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2004, file: !153, line: 38, size: 32, elements: !2008)
!2008 = !{!2009, !2011}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2007, file: !153, line: 39, baseType: !2010, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2007, file: !153, line: 40, baseType: !2010, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, scope: !2004, file: !153, line: 42, baseType: !2013, size: 32, offset: 32)
!2013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2004, file: !153, line: 42, size: 32, elements: !2014)
!2014 = !{!2015, !2016}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2013, file: !153, line: 43, baseType: !2010, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2013, file: !153, line: 44, baseType: !2010, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2000, file: !143, line: 62, baseType: !2018, size: 64)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2019)
!2019 = !{!2020}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2018, file: !169, line: 50, baseType: !2021, size: 64)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2022, size: 64, elements: !174)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1997, file: !143, line: 68, baseType: !2024, size: 32, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2026)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2027)
!2027 = !{!2028}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2026, file: !179, line: 232, baseType: !2029, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2004)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1997, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1997, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !1997, file: !143, line: 90, baseType: !2033, size: 16, offset: 112)
!2033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1997, file: !143, line: 90, size: 16, elements: !2034)
!2034 = !{!2035, !2040}
!2035 = !DIDerivedType(tag: DW_TAG_member, scope: !2033, file: !143, line: 91, baseType: !2036, size: 16)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2033, file: !143, line: 91, size: 16, elements: !2037)
!2037 = !{!2038, !2039}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2036, file: !143, line: 96, baseType: !195, size: 8)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2036, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2033, file: !143, line: 100, baseType: !199, size: 16)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1997, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1997, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1997, file: !143, line: 131, baseType: !2044, size: 192, offset: 192)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2045)
!2045 = !{!2046, !2047, !2053}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2044, file: !179, line: 245, baseType: !2003, size: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2044, file: !179, line: 246, baseType: !2048, size: 32, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2049)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 32)
!2050 = !DISubroutineType(types: !2051)
!2051 = !{null, !2052}
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2044, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1994, file: !143, line: 250, baseType: !2055, size: 288, offset: 384)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2055, file: !216, line: 26, baseType: !118, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2055, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2055, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2055, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2055, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2055, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2055, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2055, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2055, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1994, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1994, file: !143, line: 256, baseType: !2025, size: 64, offset: 704)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1994, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1994, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1994, file: !143, line: 300, baseType: !2071, size: 96, offset: 1056)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2072)
!2072 = !{!2073, !2074, !2075}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2071, file: !143, line: 153, baseType: !22, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2071, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2071, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1994, file: !143, line: 325, baseType: !2077, size: 32, offset: 1152)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 32)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2079)
!2079 = !{!2080, !2086, !2087}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2078, file: !245, line: 5074, baseType: !2081, size: 96)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2082)
!2082 = !{!2083, !2084, !2085}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2081, file: !249, line: 57, baseType: !252, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2081, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2081, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2078, file: !245, line: 5075, baseType: !2025, size: 64, offset: 96)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2078, file: !245, line: 5076, baseType: !2088, size: 32, offset: 160)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2089)
!2089 = !{!2090}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2088, file: !259, line: 52, baseType: !22, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1994, file: !143, line: 343, baseType: !2092, size: 64, offset: 1184)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2093)
!2093 = !{!2094, !2095}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2092, file: !216, line: 63, baseType: !118, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2092, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1988, file: !179, line: 111, baseType: !1993, size: 32, offset: 96)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1988, file: !179, line: 124, baseType: !119, size: 32, offset: 128)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1988, file: !179, line: 127, baseType: !185, size: 8, offset: 160)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1988, file: !179, line: 153, baseType: !2100, offset: 168)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2101, line: 33, elements: !2102)
!2101 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2102 = !{}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1984, file: !179, line: 170, baseType: !2104, size: 96, offset: 192)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !179, line: 83, size: 96, elements: !2105)
!2105 = !{!2106, !2107}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2104, file: !179, line: 86, baseType: !1993, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2104, file: !179, line: 90, baseType: !2029, size: 64, offset: 32)
!2108 = !DIGlobalVariableExpression(var: !2109, expr: !DIExpression())
!2109 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1897, file: !1901, line: 43, type: !2110, isLocal: false, isDefinition: true, align: 512)
!2110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2111, size: 8704, elements: !2114)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !2112)
!2112 = !{!2113}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2111, file: !128, line: 48, baseType: !107, size: 8)
!2114 = !{!2115}
!2115 = !DISubrange(count: 1088)
!2116 = !DIGlobalVariableExpression(var: !2117, expr: !DIExpression())
!2117 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1897, file: !1901, line: 44, type: !1994, isLocal: false, isDefinition: true)
!2118 = !DIGlobalVariableExpression(var: !2119, expr: !DIExpression())
!2119 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1897, file: !1901, line: 48, type: !2120, isLocal: false, isDefinition: true)
!2120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1994, size: 1280, elements: !515)
!2121 = !DIGlobalVariableExpression(var: !2122, expr: !DIExpression())
!2122 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1897, file: !1901, line: 86, type: !2123, isLocal: false, isDefinition: true, align: 512)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2111, size: 16896, elements: !2124)
!2124 = !{!516, !2125}
!2125 = !DISubrange(count: 2112)
!2126 = !DIGlobalVariableExpression(var: !2127, expr: !DIExpression())
!2127 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1897, file: !1901, line: 217, type: !345, isLocal: false, isDefinition: true)
!2128 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression())
!2129 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1897, file: !1901, line: 50, type: !2130, isLocal: true, isDefinition: true, align: 512)
!2130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2111, size: 3072, elements: !2131)
!2131 = !{!516, !2132}
!2132 = !DISubrange(count: 384)
!2133 = !DIGlobalVariableExpression(var: !2134, expr: !DIExpression())
!2134 = distinct !DIGlobalVariable(name: "levels", scope: !2135, file: !1901, line: 232, type: !2155, isLocal: true, isDefinition: true)
!2135 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1901, file: !1901, line: 230, type: !2136, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !2138)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{null, !1900}
!2138 = !{!2139, !2140, !2150, !2154}
!2139 = !DILocalVariable(name: "level", arg: 1, scope: !2135, file: !1901, line: 230, type: !1900)
!2140 = !DILocalVariable(name: "entry", scope: !2135, file: !1901, line: 244, type: !2141)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2143)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !2144)
!2144 = !{!2145, !2149}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2143, file: !325, line: 60, baseType: !2146, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 32)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{!119, !1919}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2143, file: !325, line: 65, baseType: !1919, size: 32, offset: 32)
!2150 = !DILocalVariable(name: "dev", scope: !2151, file: !1901, line: 247, type: !1919)
!2151 = distinct !DILexicalBlock(scope: !2152, file: !1901, line: 246, column: 64)
!2152 = distinct !DILexicalBlock(scope: !2153, file: !1901, line: 246, column: 2)
!2153 = distinct !DILexicalBlock(scope: !2135, file: !1901, line: 246, column: 2)
!2154 = !DILocalVariable(name: "rc", scope: !2151, file: !1901, line: 248, type: !119)
!2155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2141, size: 192, elements: !2156)
!2156 = !{!2157}
!2157 = !DISubrange(count: 6)
!2158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !2160)
!2160 = !{!2161, !2162}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2159, file: !289, line: 17, baseType: !278, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2159, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(name: "states_str", scope: !2165, file: !2166, line: 276, type: !2290, isLocal: true, isDefinition: true)
!2165 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2166, file: !2166, line: 271, type: !2167, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !2281)
!2166 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2167 = !DISubroutineType(types: !2168)
!2168 = !{!278, !2169, !106, !239}
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !2170)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 32)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !2172)
!2172 = !{!2173, !2231, !2243, !2244, !2245, !2246, !2247, !2253, !2268}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2171, file: !143, line: 247, baseType: !2174, size: 384)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !2175)
!2175 = !{!2176, !2200, !2207, !2208, !2209, !2218, !2219, !2220}
!2176 = !DIDerivedType(tag: DW_TAG_member, scope: !2174, file: !143, line: 60, baseType: !2177, size: 64)
!2177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2174, file: !143, line: 60, size: 64, elements: !2178)
!2178 = !{!2179, !2194}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2177, file: !143, line: 61, baseType: !2180, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2181)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2182)
!2182 = !{!2183, !2189}
!2183 = !DIDerivedType(tag: DW_TAG_member, scope: !2181, file: !153, line: 38, baseType: !2184, size: 32)
!2184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2181, file: !153, line: 38, size: 32, elements: !2185)
!2185 = !{!2186, !2188}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2184, file: !153, line: 39, baseType: !2187, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2184, file: !153, line: 40, baseType: !2187, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, scope: !2181, file: !153, line: 42, baseType: !2190, size: 32, offset: 32)
!2190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2181, file: !153, line: 42, size: 32, elements: !2191)
!2191 = !{!2192, !2193}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2190, file: !153, line: 43, baseType: !2187, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2190, file: !153, line: 44, baseType: !2187, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2177, file: !143, line: 62, baseType: !2195, size: 64)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2196)
!2196 = !{!2197}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2195, file: !169, line: 50, baseType: !2198, size: 64)
!2198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2199, size: 64, elements: !174)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2174, file: !143, line: 68, baseType: !2201, size: 32, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2203)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2204)
!2204 = !{!2205}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2203, file: !179, line: 232, baseType: !2206, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2181)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2174, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2174, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2209 = !DIDerivedType(tag: DW_TAG_member, scope: !2174, file: !143, line: 90, baseType: !2210, size: 16, offset: 112)
!2210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2174, file: !143, line: 90, size: 16, elements: !2211)
!2211 = !{!2212, !2217}
!2212 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !143, line: 91, baseType: !2213, size: 16)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2210, file: !143, line: 91, size: 16, elements: !2214)
!2214 = !{!2215, !2216}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2213, file: !143, line: 96, baseType: !195, size: 8)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2213, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2210, file: !143, line: 100, baseType: !199, size: 16)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2174, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2174, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2174, file: !143, line: 131, baseType: !2221, size: 192, offset: 192)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2222)
!2222 = !{!2223, !2224, !2230}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2221, file: !179, line: 245, baseType: !2180, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2221, file: !179, line: 246, baseType: !2225, size: 32, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2226)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{null, !2229}
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2221, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2171, file: !143, line: 250, baseType: !2232, size: 288, offset: 384)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2233)
!2233 = !{!2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2232, file: !216, line: 26, baseType: !118, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2232, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2232, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2232, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2232, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2232, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2232, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2232, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2232, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2171, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2171, file: !143, line: 256, baseType: !2202, size: 64, offset: 704)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2171, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2171, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2171, file: !143, line: 300, baseType: !2248, size: 96, offset: 1056)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2249)
!2249 = !{!2250, !2251, !2252}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2248, file: !143, line: 153, baseType: !22, size: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2248, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2248, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2171, file: !143, line: 325, baseType: !2254, size: 32, offset: 1152)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 32)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2256)
!2256 = !{!2257, !2263, !2264}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2255, file: !245, line: 5074, baseType: !2258, size: 96)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2259)
!2259 = !{!2260, !2261, !2262}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2258, file: !249, line: 57, baseType: !252, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2258, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2258, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2255, file: !245, line: 5075, baseType: !2202, size: 64, offset: 96)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2255, file: !245, line: 5076, baseType: !2265, size: 32, offset: 160)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2266)
!2266 = !{!2267}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2265, file: !259, line: 52, baseType: !22, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2171, file: !143, line: 343, baseType: !2269, size: 64, offset: 1184)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2270)
!2270 = !{!2271, !2272}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2269, file: !216, line: 63, baseType: !118, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2269, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2273 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2274, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2275, globals: !2277, splitDebugInlining: false, nameTableKind: None)
!2274 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2275 = !{!113, !278, !114, !185, !22, !119, !2276, !24, !239, !106, !118, !120}
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 32)
!2277 = !{!2163, !2278}
!2278 = !DIGlobalVariableExpression(var: !2279, expr: !DIExpression())
!2279 = distinct !DIGlobalVariable(name: "states_sz", scope: !2165, file: !2166, line: 279, type: !2280, isLocal: true, isDefinition: true)
!2280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1831, size: 256, elements: !1490)
!2281 = !{!2282, !2283, !2284, !2285, !2286, !2287, !2288}
!2282 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2165, file: !2166, line: 271, type: !2169)
!2283 = !DILocalVariable(name: "buf", arg: 2, scope: !2165, file: !2166, line: 271, type: !106)
!2284 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2165, file: !2166, line: 271, type: !239)
!2285 = !DILocalVariable(name: "off", scope: !2165, file: !2166, line: 273, type: !239)
!2286 = !DILocalVariable(name: "bit", scope: !2165, file: !2166, line: 274, type: !185)
!2287 = !DILocalVariable(name: "thread_state", scope: !2165, file: !2166, line: 275, type: !185)
!2288 = !DILocalVariable(name: "index", scope: !2289, file: !2166, line: 293, type: !185)
!2289 = distinct !DILexicalBlock(scope: !2165, file: !2166, line: 293, column: 2)
!2290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 256, elements: !1490)
!2291 = !DIGlobalVariableExpression(var: !2292, expr: !DIExpression())
!2292 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2293, file: !2404, line: 56, type: !2391, isLocal: false, isDefinition: true)
!2293 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2294, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2295, globals: !2401, splitDebugInlining: false, nameTableKind: None)
!2294 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2295 = !{!2296, !106, !113, !2399, !284, !114, !772, !119, !118, !120, !2400}
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 32)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !2298)
!2298 = !{!2299, !2357, !2369, !2370, !2371, !2372, !2373, !2379, !2394}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2297, file: !143, line: 247, baseType: !2300, size: 384)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !2301)
!2301 = !{!2302, !2326, !2333, !2334, !2335, !2344, !2345, !2346}
!2302 = !DIDerivedType(tag: DW_TAG_member, scope: !2300, file: !143, line: 60, baseType: !2303, size: 64)
!2303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2300, file: !143, line: 60, size: 64, elements: !2304)
!2304 = !{!2305, !2320}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2303, file: !143, line: 61, baseType: !2306, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2307)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2308)
!2308 = !{!2309, !2315}
!2309 = !DIDerivedType(tag: DW_TAG_member, scope: !2307, file: !153, line: 38, baseType: !2310, size: 32)
!2310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2307, file: !153, line: 38, size: 32, elements: !2311)
!2311 = !{!2312, !2314}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2310, file: !153, line: 39, baseType: !2313, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2310, file: !153, line: 40, baseType: !2313, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, scope: !2307, file: !153, line: 42, baseType: !2316, size: 32, offset: 32)
!2316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2307, file: !153, line: 42, size: 32, elements: !2317)
!2317 = !{!2318, !2319}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2316, file: !153, line: 43, baseType: !2313, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2316, file: !153, line: 44, baseType: !2313, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2303, file: !143, line: 62, baseType: !2321, size: 64)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2322)
!2322 = !{!2323}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2321, file: !169, line: 50, baseType: !2324, size: 64)
!2324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2325, size: 64, elements: !174)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2300, file: !143, line: 68, baseType: !2327, size: 32, offset: 64)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2329)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2330)
!2330 = !{!2331}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2329, file: !179, line: 232, baseType: !2332, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2307)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2300, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2300, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2335 = !DIDerivedType(tag: DW_TAG_member, scope: !2300, file: !143, line: 90, baseType: !2336, size: 16, offset: 112)
!2336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2300, file: !143, line: 90, size: 16, elements: !2337)
!2337 = !{!2338, !2343}
!2338 = !DIDerivedType(tag: DW_TAG_member, scope: !2336, file: !143, line: 91, baseType: !2339, size: 16)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2336, file: !143, line: 91, size: 16, elements: !2340)
!2340 = !{!2341, !2342}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2339, file: !143, line: 96, baseType: !195, size: 8)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2339, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2336, file: !143, line: 100, baseType: !199, size: 16)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2300, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2300, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2300, file: !143, line: 131, baseType: !2347, size: 192, offset: 192)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2348)
!2348 = !{!2349, !2350, !2356}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2347, file: !179, line: 245, baseType: !2306, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2347, file: !179, line: 246, baseType: !2351, size: 32, offset: 64)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2352)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 32)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{null, !2355}
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2347, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2297, file: !143, line: 250, baseType: !2358, size: 288, offset: 384)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2359)
!2359 = !{!2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2358, file: !216, line: 26, baseType: !118, size: 32)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2358, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2358, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2358, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2358, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2358, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2358, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2358, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2358, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2297, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2297, file: !143, line: 256, baseType: !2328, size: 64, offset: 704)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2297, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2297, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2297, file: !143, line: 300, baseType: !2374, size: 96, offset: 1056)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2375)
!2375 = !{!2376, !2377, !2378}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2374, file: !143, line: 153, baseType: !22, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2374, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2374, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2297, file: !143, line: 325, baseType: !2380, size: 32, offset: 1152)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 32)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2382)
!2382 = !{!2383, !2389, !2390}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2381, file: !245, line: 5074, baseType: !2384, size: 96)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2385)
!2385 = !{!2386, !2387, !2388}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2384, file: !249, line: 57, baseType: !252, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2384, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2384, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2381, file: !245, line: 5075, baseType: !2328, size: 64, offset: 96)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2381, file: !245, line: 5076, baseType: !2391, size: 32, offset: 160)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2392)
!2392 = !{!2393}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2391, file: !259, line: 52, baseType: !22, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2297, file: !143, line: 343, baseType: !2395, size: 64, offset: 1184)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2396)
!2396 = !{!2397, !2398}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2395, file: !216, line: 63, baseType: !118, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2395, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 32)
!2401 = !{!2291, !2402, !2405, !2407}
!2402 = !DIGlobalVariableExpression(var: !2403, expr: !DIExpression())
!2403 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2293, file: !2404, line: 404, type: !119, isLocal: true, isDefinition: true)
!2404 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2405 = !DIGlobalVariableExpression(var: !2406, expr: !DIExpression())
!2406 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2293, file: !2404, line: 405, type: !119, isLocal: true, isDefinition: true)
!2407 = !DIGlobalVariableExpression(var: !2408, expr: !DIExpression())
!2408 = distinct !DIGlobalVariable(name: "pending_current", scope: !2293, file: !2404, line: 425, type: !2296, isLocal: true, isDefinition: true)
!2409 = !DIGlobalVariableExpression(var: !2410, expr: !DIExpression())
!2410 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2411, file: !2441, line: 19, type: !2447, isLocal: true, isDefinition: true)
!2411 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2412, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2413, globals: !2438, splitDebugInlining: false, nameTableKind: None)
!2412 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2413 = !{!114, !113, !772, !118, !120, !119, !2414, !106, !116}
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 32)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2416)
!2416 = !{!2417, !2432, !2437}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2415, file: !179, line: 245, baseType: !2418, size: 64)
!2418 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2419)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2420)
!2420 = !{!2421, !2427}
!2421 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !153, line: 38, baseType: !2422, size: 32)
!2422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !153, line: 38, size: 32, elements: !2423)
!2423 = !{!2424, !2426}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2422, file: !153, line: 39, baseType: !2425, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2422, file: !153, line: 40, baseType: !2425, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !153, line: 42, baseType: !2428, size: 32, offset: 32)
!2428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2419, file: !153, line: 42, size: 32, elements: !2429)
!2429 = !{!2430, !2431}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2428, file: !153, line: 43, baseType: !2425, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2428, file: !153, line: 44, baseType: !2425, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2415, file: !179, line: 246, baseType: !2433, size: 32, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2434)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!2435 = !DISubroutineType(types: !2436)
!2436 = !{null, !2414}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2415, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2438 = !{!2439, !2409, !2442, !2444}
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2411, file: !2441, line: 15, type: !120, isLocal: true, isDefinition: true)
!2441 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2442 = !DIGlobalVariableExpression(var: !2443, expr: !DIExpression())
!2443 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2411, file: !2441, line: 25, type: !119, isLocal: true, isDefinition: true)
!2444 = !DIGlobalVariableExpression(var: !2445, expr: !DIExpression())
!2445 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2411, file: !2441, line: 17, type: !2446, isLocal: true, isDefinition: true)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2419)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2448)
!2448 = !{!2449}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2447, file: !259, line: 52, baseType: !22, size: 32)
!2450 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2451, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2451 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2454 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2455, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2456, retainedTypes: !2476, splitDebugInlining: false, nameTableKind: None)
!2455 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2456 = !{!2457, !2465}
!2457 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2458, line: 69, baseType: !32, size: 32, elements: !2459)
!2458 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2459 = !{!2460, !2461, !2462, !2463, !2464}
!2460 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2461 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2462 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2463 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2464 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2465 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2458, line: 56, baseType: !32, size: 32, elements: !2466)
!2466 = !{!2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475}
!2467 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2468 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2469 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2470 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2471 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2472 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2473 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2474 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2475 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2476 = !{!119, !2457, !2465, !2477, !196, !352, !2479, !2480, !186, !200, !278, !239, !113, !22, !32, !280, !2482, !2483, !105, !281, !117, !282, !2478, !2484, !2485, !2486, !2487}
!2477 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2458, line: 31, baseType: !2478)
!2478 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !117)
!2479 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !240, line: 329, baseType: !32)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2458, line: 32, baseType: !2481)
!2481 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !121)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !240, line: 145, baseType: !119)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 32)
!2488 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2489, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2489 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2492 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2493, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2494, splitDebugInlining: false, nameTableKind: None)
!2493 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2494 = !{!278, !186, !119, !32}
!2495 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2496, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2497, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2496 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2497 = !{!2498, !30}
!2498 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2499, line: 27, baseType: !32, size: 32, elements: !2500)
!2499 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2500 = !{!2501, !2502, !2503, !2504, !2505}
!2501 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2502 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2503 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2504 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2505 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2506 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2507, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2508, retainedTypes: !2509, splitDebugInlining: false, nameTableKind: None)
!2507 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2508 = !{!602, !2498, !30}
!2509 = !{!798, !2510, !113, !119, !772, !118, !185, !2527}
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !2512)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !2513)
!2513 = !{!2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2512, file: !533, line: 413, baseType: !1650, size: 256)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2512, file: !533, line: 414, baseType: !1652, size: 768, offset: 256)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2512, file: !533, line: 415, baseType: !1650, size: 256, offset: 1024)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2512, file: !533, line: 416, baseType: !1652, size: 768, offset: 1280)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2512, file: !533, line: 417, baseType: !1650, size: 256, offset: 2048)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2512, file: !533, line: 418, baseType: !1652, size: 768, offset: 2304)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2512, file: !533, line: 419, baseType: !1650, size: 256, offset: 3072)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2512, file: !533, line: 420, baseType: !1652, size: 768, offset: 3328)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2512, file: !533, line: 421, baseType: !1650, size: 256, offset: 4096)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2512, file: !533, line: 422, baseType: !1663, size: 1792, offset: 4352)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2512, file: !533, line: 423, baseType: !1667, size: 1920, offset: 6144)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2512, file: !533, line: 424, baseType: !1672, size: 20608, offset: 8064)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2512, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2529)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2530)
!2530 = !{!2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2529, file: !533, line: 447, baseType: !537, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2529, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2529, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2529, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2529, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2529, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2529, file: !533, line: 453, baseType: !1687, size: 96, offset: 192)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2529, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2529, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2529, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2529, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2529, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2529, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2529, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2529, file: !533, line: 461, baseType: !1698, size: 64, offset: 512)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2529, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2529, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2529, file: !533, line: 464, baseType: !1702, size: 128, offset: 640)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2529, file: !533, line: 465, baseType: !1704, size: 160, offset: 768)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2529, file: !533, line: 466, baseType: !1706, size: 160, offset: 928)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2529, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2552 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2553, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2553 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2554 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2555, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2556, splitDebugInlining: false, nameTableKind: None)
!2555 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2556 = !{!113, !119, !22, !2557}
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2559)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2560)
!2560 = !{!2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2559, file: !533, line: 447, baseType: !537, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2559, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2559, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2559, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2559, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2559, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2559, file: !533, line: 453, baseType: !1687, size: 96, offset: 192)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2559, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2559, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2559, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2559, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2559, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2559, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2559, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2559, file: !533, line: 461, baseType: !1698, size: 64, offset: 512)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2559, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2559, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2559, file: !533, line: 464, baseType: !1702, size: 128, offset: 640)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2559, file: !533, line: 465, baseType: !1704, size: 160, offset: 768)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2559, file: !533, line: 466, baseType: !1706, size: 160, offset: 928)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2559, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2583, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2584, splitDebugInlining: false, nameTableKind: None)
!2583 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2584 = !{!2585, !113, !119}
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2587)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2588)
!2588 = !{!2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2587, file: !533, line: 447, baseType: !537, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2587, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2587, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2587, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2587, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2587, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2587, file: !533, line: 453, baseType: !1687, size: 96, offset: 192)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2587, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2587, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2587, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2587, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2587, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2587, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2587, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2587, file: !533, line: 461, baseType: !1698, size: 64, offset: 512)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2587, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2587, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2587, file: !533, line: 464, baseType: !1702, size: 128, offset: 640)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2587, file: !533, line: 465, baseType: !1704, size: 160, offset: 768)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2587, file: !533, line: 466, baseType: !1706, size: 160, offset: 928)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2587, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2610 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2611, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2612, splitDebugInlining: false, nameTableKind: None)
!2611 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2612 = !{!2613, !118, !113, !119}
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 32)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2615, line: 98, size: 256, elements: !2616)
!2615 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2616 = !{!2617, !2622, !2627, !2632, !2637, !2642, !2647, !2652}
!2617 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2615, line: 99, baseType: !2618, size: 32)
!2618 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2615, line: 99, size: 32, elements: !2619)
!2619 = !{!2620, !2621}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2618, file: !2615, line: 99, baseType: !118, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2618, file: !2615, line: 99, baseType: !118, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2615, line: 100, baseType: !2623, size: 32, offset: 32)
!2623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2615, line: 100, size: 32, elements: !2624)
!2624 = !{!2625, !2626}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2623, file: !2615, line: 100, baseType: !118, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2623, file: !2615, line: 100, baseType: !118, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2615, line: 101, baseType: !2628, size: 32, offset: 64)
!2628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2615, line: 101, size: 32, elements: !2629)
!2629 = !{!2630, !2631}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2628, file: !2615, line: 101, baseType: !118, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2628, file: !2615, line: 101, baseType: !118, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2615, line: 102, baseType: !2633, size: 32, offset: 96)
!2633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2615, line: 102, size: 32, elements: !2634)
!2634 = !{!2635, !2636}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2633, file: !2615, line: 102, baseType: !118, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2633, file: !2615, line: 102, baseType: !118, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2615, line: 103, baseType: !2638, size: 32, offset: 128)
!2638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2615, line: 103, size: 32, elements: !2639)
!2639 = !{!2640, !2641}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2638, file: !2615, line: 103, baseType: !118, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2638, file: !2615, line: 103, baseType: !118, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2615, line: 104, baseType: !2643, size: 32, offset: 160)
!2643 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2615, line: 104, size: 32, elements: !2644)
!2644 = !{!2645, !2646}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2643, file: !2615, line: 104, baseType: !118, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2643, file: !2615, line: 104, baseType: !118, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2615, line: 105, baseType: !2648, size: 32, offset: 192)
!2648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2615, line: 105, size: 32, elements: !2649)
!2649 = !{!2650, !2651}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2648, file: !2615, line: 105, baseType: !118, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2648, file: !2615, line: 105, baseType: !118, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2614, file: !2615, line: 106, baseType: !118, size: 32, offset: 224)
!2653 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2654, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2497, retainedTypes: !2655, splitDebugInlining: false, nameTableKind: None)
!2654 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2655 = !{!2656, !113, !119, !2681, !2724, !118}
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2658)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2659)
!2659 = !{!2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2658, file: !533, line: 447, baseType: !537, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2658, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2658, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2658, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2658, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2658, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2658, file: !533, line: 453, baseType: !1687, size: 96, offset: 192)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2658, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2658, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2658, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2658, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2658, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2658, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2658, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2658, file: !533, line: 461, baseType: !1698, size: 64, offset: 512)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2658, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2658, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2658, file: !533, line: 464, baseType: !1702, size: 128, offset: 640)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2658, file: !533, line: 465, baseType: !1704, size: 160, offset: 768)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2658, file: !533, line: 466, baseType: !1706, size: 160, offset: 928)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2658, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2615, line: 141, baseType: !2683)
!2683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2615, line: 97, size: 256, elements: !2684)
!2684 = !{!2685}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2683, file: !2615, line: 107, baseType: !2686, size: 256)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2615, line: 98, size: 256, elements: !2687)
!2687 = !{!2688, !2693, !2698, !2703, !2708, !2713, !2718, !2723}
!2688 = !DIDerivedType(tag: DW_TAG_member, scope: !2686, file: !2615, line: 99, baseType: !2689, size: 32)
!2689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2686, file: !2615, line: 99, size: 32, elements: !2690)
!2690 = !{!2691, !2692}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2689, file: !2615, line: 99, baseType: !118, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2689, file: !2615, line: 99, baseType: !118, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, scope: !2686, file: !2615, line: 100, baseType: !2694, size: 32, offset: 32)
!2694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2686, file: !2615, line: 100, size: 32, elements: !2695)
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2694, file: !2615, line: 100, baseType: !118, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2694, file: !2615, line: 100, baseType: !118, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, scope: !2686, file: !2615, line: 101, baseType: !2699, size: 32, offset: 64)
!2699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2686, file: !2615, line: 101, size: 32, elements: !2700)
!2700 = !{!2701, !2702}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2699, file: !2615, line: 101, baseType: !118, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2699, file: !2615, line: 101, baseType: !118, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, scope: !2686, file: !2615, line: 102, baseType: !2704, size: 32, offset: 96)
!2704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2686, file: !2615, line: 102, size: 32, elements: !2705)
!2705 = !{!2706, !2707}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2704, file: !2615, line: 102, baseType: !118, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2704, file: !2615, line: 102, baseType: !118, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, scope: !2686, file: !2615, line: 103, baseType: !2709, size: 32, offset: 128)
!2709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2686, file: !2615, line: 103, size: 32, elements: !2710)
!2710 = !{!2711, !2712}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2709, file: !2615, line: 103, baseType: !118, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2709, file: !2615, line: 103, baseType: !118, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, scope: !2686, file: !2615, line: 104, baseType: !2714, size: 32, offset: 160)
!2714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2686, file: !2615, line: 104, size: 32, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2714, file: !2615, line: 104, baseType: !118, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2714, file: !2615, line: 104, baseType: !118, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, scope: !2686, file: !2615, line: 105, baseType: !2719, size: 32, offset: 192)
!2719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2686, file: !2615, line: 105, size: 32, elements: !2720)
!2720 = !{!2721, !2722}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2719, file: !2615, line: 105, baseType: !118, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2719, file: !2615, line: 105, baseType: !118, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2686, file: !2615, line: 106, baseType: !118, size: 32, offset: 224)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!2725 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2726, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1635, retainedTypes: !2727, splitDebugInlining: false, nameTableKind: None)
!2726 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2727 = !{!798, !772, !185, !118, !2728, !2745}
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !2730)
!2730 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !2731)
!2731 = !{!2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2730, file: !533, line: 413, baseType: !1650, size: 256)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2730, file: !533, line: 414, baseType: !1652, size: 768, offset: 256)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2730, file: !533, line: 415, baseType: !1650, size: 256, offset: 1024)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2730, file: !533, line: 416, baseType: !1652, size: 768, offset: 1280)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2730, file: !533, line: 417, baseType: !1650, size: 256, offset: 2048)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2730, file: !533, line: 418, baseType: !1652, size: 768, offset: 2304)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2730, file: !533, line: 419, baseType: !1650, size: 256, offset: 3072)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2730, file: !533, line: 420, baseType: !1652, size: 768, offset: 3328)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2730, file: !533, line: 421, baseType: !1650, size: 256, offset: 4096)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2730, file: !533, line: 422, baseType: !1663, size: 1792, offset: 4352)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2730, file: !533, line: 423, baseType: !1667, size: 1920, offset: 6144)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2730, file: !533, line: 424, baseType: !1672, size: 20608, offset: 8064)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2730, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2747)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2748)
!2748 = !{!2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2747, file: !533, line: 447, baseType: !537, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2747, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2747, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2747, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2747, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2747, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2747, file: !533, line: 453, baseType: !1687, size: 96, offset: 192)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2747, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2747, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2747, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2747, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2747, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2747, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2747, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2747, file: !533, line: 461, baseType: !1698, size: 64, offset: 512)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2747, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2747, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2747, file: !533, line: 464, baseType: !1702, size: 128, offset: 640)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2747, file: !533, line: 465, baseType: !1704, size: 160, offset: 768)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2747, file: !533, line: 466, baseType: !1706, size: 160, offset: 928)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2747, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2770 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2771, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2772, splitDebugInlining: false, nameTableKind: None)
!2771 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2772 = !{!2773, !113, !119}
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2775)
!2775 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2776)
!2776 = !{!2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2775, file: !533, line: 447, baseType: !537, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2775, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2775, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2775, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2775, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2775, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2775, file: !533, line: 453, baseType: !1687, size: 96, offset: 192)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2775, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2775, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2775, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2775, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2775, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2775, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2775, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2775, file: !533, line: 461, baseType: !1698, size: 64, offset: 512)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2775, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2775, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2775, file: !533, line: 464, baseType: !1702, size: 128, offset: 640)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2775, file: !533, line: 465, baseType: !1704, size: 160, offset: 768)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2775, file: !533, line: 466, baseType: !1706, size: 160, offset: 928)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2775, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2798 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2799, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2800, splitDebugInlining: false, nameTableKind: None)
!2799 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2800 = !{!107, !106, !239, !1005, !2801, !186, !113}
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 32)
!2802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!2803 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2804, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2805, splitDebugInlining: false, nameTableKind: None)
!2804 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/sprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2805 = !{!119, !113}
!2806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2807, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2808, splitDebugInlining: false, nameTableKind: None)
!2807 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2808 = !{!2809}
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 586, baseType: !2811)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 550, size: 1216, elements: !2812)
!2812 = !{!2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2811, file: !310, line: 552, baseType: !314, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2811, file: !310, line: 553, baseType: !314, size: 32, offset: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2811, file: !310, line: 554, baseType: !314, size: 32, offset: 64)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2811, file: !310, line: 555, baseType: !314, size: 32, offset: 96)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2811, file: !310, line: 556, baseType: !314, size: 32, offset: 128)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2811, file: !310, line: 557, baseType: !314, size: 32, offset: 160)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2811, file: !310, line: 558, baseType: !314, size: 32, offset: 192)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2811, file: !310, line: 559, baseType: !118, size: 32, offset: 224)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2811, file: !310, line: 560, baseType: !314, size: 32, offset: 256)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2811, file: !310, line: 561, baseType: !314, size: 32, offset: 288)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2811, file: !310, line: 562, baseType: !870, size: 64, offset: 320)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2811, file: !310, line: 563, baseType: !314, size: 32, offset: 384)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2811, file: !310, line: 564, baseType: !314, size: 32, offset: 416)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2811, file: !310, line: 565, baseType: !314, size: 32, offset: 448)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2811, file: !310, line: 566, baseType: !118, size: 32, offset: 480)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2811, file: !310, line: 567, baseType: !314, size: 32, offset: 512)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2811, file: !310, line: 568, baseType: !314, size: 32, offset: 544)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2811, file: !310, line: 569, baseType: !870, size: 64, offset: 576)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2811, file: !310, line: 570, baseType: !314, size: 32, offset: 640)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2811, file: !310, line: 571, baseType: !314, size: 32, offset: 672)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2811, file: !310, line: 572, baseType: !314, size: 32, offset: 704)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2811, file: !310, line: 573, baseType: !118, size: 32, offset: 736)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2811, file: !310, line: 574, baseType: !314, size: 32, offset: 768)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2811, file: !310, line: 575, baseType: !314, size: 32, offset: 800)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2811, file: !310, line: 576, baseType: !870, size: 64, offset: 832)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2811, file: !310, line: 577, baseType: !314, size: 32, offset: 896)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2811, file: !310, line: 578, baseType: !314, size: 32, offset: 928)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2811, file: !310, line: 579, baseType: !870, size: 64, offset: 960)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2811, file: !310, line: 580, baseType: !314, size: 32, offset: 1024)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2811, file: !310, line: 581, baseType: !314, size: 32, offset: 1056)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2811, file: !310, line: 582, baseType: !314, size: 32, offset: 1088)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2811, file: !310, line: 583, baseType: !314, size: 32, offset: 1120)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2811, file: !310, line: 584, baseType: !314, size: 32, offset: 1152)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2811, file: !310, line: 585, baseType: !314, size: 32, offset: 1184)
!2847 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2848, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2848 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2850, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2851, retainedTypes: !2867, splitDebugInlining: false, nameTableKind: None)
!2850 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2851 = !{!2852, !2859, !2863}
!2852 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2853, line: 38, baseType: !32, size: 32, elements: !2854)
!2853 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2854 = !{!2855, !2856, !2857, !2858}
!2855 = !DIEnumerator(name: "HAL_OK", value: 0)
!2856 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2857 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2858 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2859 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !843, line: 184, baseType: !32, size: 32, elements: !2860)
!2860 = !{!2861, !2862}
!2861 = !DIEnumerator(name: "RESET", value: 0)
!2862 = !DIEnumerator(name: "SET", value: 1)
!2863 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !843, line: 190, baseType: !32, size: 32, elements: !2864)
!2864 = !{!2865, !2866}
!2865 = !DIEnumerator(name: "DISABLE", value: 0)
!2866 = !DIEnumerator(name: "ENABLE", value: 1)
!2867 = !{!2868, !118, !2906, !1484, !185, !120, !113}
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 586, baseType: !2870)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 550, size: 1216, elements: !2871)
!2871 = !{!2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2870, file: !310, line: 552, baseType: !314, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2870, file: !310, line: 553, baseType: !314, size: 32, offset: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2870, file: !310, line: 554, baseType: !314, size: 32, offset: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2870, file: !310, line: 555, baseType: !314, size: 32, offset: 96)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2870, file: !310, line: 556, baseType: !314, size: 32, offset: 128)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2870, file: !310, line: 557, baseType: !314, size: 32, offset: 160)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2870, file: !310, line: 558, baseType: !314, size: 32, offset: 192)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2870, file: !310, line: 559, baseType: !118, size: 32, offset: 224)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2870, file: !310, line: 560, baseType: !314, size: 32, offset: 256)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2870, file: !310, line: 561, baseType: !314, size: 32, offset: 288)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2870, file: !310, line: 562, baseType: !870, size: 64, offset: 320)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2870, file: !310, line: 563, baseType: !314, size: 32, offset: 384)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2870, file: !310, line: 564, baseType: !314, size: 32, offset: 416)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2870, file: !310, line: 565, baseType: !314, size: 32, offset: 448)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2870, file: !310, line: 566, baseType: !118, size: 32, offset: 480)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2870, file: !310, line: 567, baseType: !314, size: 32, offset: 512)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2870, file: !310, line: 568, baseType: !314, size: 32, offset: 544)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2870, file: !310, line: 569, baseType: !870, size: 64, offset: 576)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2870, file: !310, line: 570, baseType: !314, size: 32, offset: 640)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2870, file: !310, line: 571, baseType: !314, size: 32, offset: 672)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2870, file: !310, line: 572, baseType: !314, size: 32, offset: 704)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2870, file: !310, line: 573, baseType: !118, size: 32, offset: 736)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2870, file: !310, line: 574, baseType: !314, size: 32, offset: 768)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2870, file: !310, line: 575, baseType: !314, size: 32, offset: 800)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2870, file: !310, line: 576, baseType: !870, size: 64, offset: 832)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2870, file: !310, line: 577, baseType: !314, size: 32, offset: 896)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2870, file: !310, line: 578, baseType: !314, size: 32, offset: 928)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2870, file: !310, line: 579, baseType: !870, size: 64, offset: 960)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2870, file: !310, line: 580, baseType: !314, size: 32, offset: 1024)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2870, file: !310, line: 581, baseType: !314, size: 32, offset: 1056)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2870, file: !310, line: 582, baseType: !314, size: 32, offset: 1088)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2870, file: !310, line: 583, baseType: !314, size: 32, offset: 1120)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2870, file: !310, line: 584, baseType: !314, size: 32, offset: 1152)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2870, file: !310, line: 585, baseType: !314, size: 32, offset: 1184)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 32)
!2907 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !310, line: 544, baseType: !2908)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 540, size: 64, elements: !2909)
!2909 = !{!2910, !2911}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2908, file: !310, line: 542, baseType: !314, size: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2908, file: !310, line: 543, baseType: !314, size: 32, offset: 32)
!2912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2913, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2914, retainedTypes: !2915, splitDebugInlining: false, nameTableKind: None)
!2913 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2914 = !{!842}
!2915 = !{!2916, !118, !2924, !2930, !2941}
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !533, line: 770, baseType: !2918)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 764, size: 128, elements: !2919)
!2919 = !{!2920, !2921, !2922, !2923}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2918, file: !533, line: 766, baseType: !314, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2918, file: !533, line: 767, baseType: !314, size: 32, offset: 32)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2918, file: !533, line: 768, baseType: !314, size: 32, offset: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2918, file: !533, line: 769, baseType: !537, size: 32, offset: 96)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !310, line: 544, baseType: !2926)
!2926 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 540, size: 64, elements: !2927)
!2927 = !{!2928, !2929}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2926, file: !310, line: 542, baseType: !314, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2926, file: !310, line: 543, baseType: !314, size: 32, offset: 32)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 407, baseType: !2932)
!2932 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 398, size: 224, elements: !2933)
!2933 = !{!2934, !2935, !2936, !2937, !2938, !2939, !2940}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2932, file: !310, line: 400, baseType: !314, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2932, file: !310, line: 401, baseType: !314, size: 32, offset: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2932, file: !310, line: 402, baseType: !314, size: 32, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2932, file: !310, line: 403, baseType: !314, size: 32, offset: 96)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2932, file: !310, line: 404, baseType: !314, size: 32, offset: 128)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2932, file: !310, line: 405, baseType: !314, size: 32, offset: 160)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2932, file: !310, line: 406, baseType: !314, size: 32, offset: 192)
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2942, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 586, baseType: !2943)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 550, size: 1216, elements: !2944)
!2944 = !{!2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2943, file: !310, line: 552, baseType: !314, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2943, file: !310, line: 553, baseType: !314, size: 32, offset: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2943, file: !310, line: 554, baseType: !314, size: 32, offset: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2943, file: !310, line: 555, baseType: !314, size: 32, offset: 96)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2943, file: !310, line: 556, baseType: !314, size: 32, offset: 128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2943, file: !310, line: 557, baseType: !314, size: 32, offset: 160)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2943, file: !310, line: 558, baseType: !314, size: 32, offset: 192)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2943, file: !310, line: 559, baseType: !118, size: 32, offset: 224)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2943, file: !310, line: 560, baseType: !314, size: 32, offset: 256)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2943, file: !310, line: 561, baseType: !314, size: 32, offset: 288)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2943, file: !310, line: 562, baseType: !870, size: 64, offset: 320)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2943, file: !310, line: 563, baseType: !314, size: 32, offset: 384)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2943, file: !310, line: 564, baseType: !314, size: 32, offset: 416)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2943, file: !310, line: 565, baseType: !314, size: 32, offset: 448)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2943, file: !310, line: 566, baseType: !118, size: 32, offset: 480)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2943, file: !310, line: 567, baseType: !314, size: 32, offset: 512)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2943, file: !310, line: 568, baseType: !314, size: 32, offset: 544)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2943, file: !310, line: 569, baseType: !870, size: 64, offset: 576)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2943, file: !310, line: 570, baseType: !314, size: 32, offset: 640)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2943, file: !310, line: 571, baseType: !314, size: 32, offset: 672)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2943, file: !310, line: 572, baseType: !314, size: 32, offset: 704)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2943, file: !310, line: 573, baseType: !118, size: 32, offset: 736)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2943, file: !310, line: 574, baseType: !314, size: 32, offset: 768)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2943, file: !310, line: 575, baseType: !314, size: 32, offset: 800)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2943, file: !310, line: 576, baseType: !870, size: 64, offset: 832)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2943, file: !310, line: 577, baseType: !314, size: 32, offset: 896)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2943, file: !310, line: 578, baseType: !314, size: 32, offset: 928)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2943, file: !310, line: 579, baseType: !870, size: 64, offset: 960)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2943, file: !310, line: 580, baseType: !314, size: 32, offset: 1024)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2943, file: !310, line: 581, baseType: !314, size: 32, offset: 1056)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2943, file: !310, line: 582, baseType: !314, size: 32, offset: 1088)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2943, file: !310, line: 583, baseType: !314, size: 32, offset: 1120)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2943, file: !310, line: 584, baseType: !314, size: 32, offset: 1152)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2943, file: !310, line: 585, baseType: !314, size: 32, offset: 1184)
!2979 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2980, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2981, splitDebugInlining: false, nameTableKind: None)
!2980 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2981 = !{!113, !239}
!2982 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2983, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2984, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2983 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!2984 = !{!2985, !2992, !2498, !30}
!2985 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2986, line: 14, baseType: !32, size: 32, elements: !2987)
!2986 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2987 = !{!2988, !2989, !2990, !2991}
!2988 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2989 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2990 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2991 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2992 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2986, line: 42, baseType: !32, size: 32, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997, !2998, !2999}
!2994 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2995 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2996 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2997 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2998 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2999 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!3001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!3002 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3003, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3004, splitDebugInlining: false, nameTableKind: None)
!3003 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!3004 = !{!22, !113, !119}
!3005 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3006, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!3006 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!3007 = !{!"Ubuntu clang version 14.0.6"}
!3008 = !{i32 7, !"Dwarf Version", i32 4}
!3009 = !{i32 2, !"Debug Info Version", i32 3}
!3010 = !{i32 1, !"wchar_size", i32 4}
!3011 = !{i32 1, !"min_enum_size", i32 4}
!3012 = !{i32 1, !"branch-target-enforcement", i32 0}
!3013 = !{i32 1, !"sign-return-address", i32 0}
!3014 = !{i32 1, !"sign-return-address-all", i32 0}
!3015 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3016 = !{i32 7, !"frame-pointer", i32 2}
!3017 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3018, file: !3018, line: 26, type: !3019, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !2102)
!3018 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3019 = !DISubroutineType(types: !3020)
!3020 = !{null}
!3021 = !DILocation(line: 28, column: 1, scope: !3017)
!3022 = !{i64 2155376014, i64 2155376034, i64 2155376097}
!3023 = !DILocation(line: 29, column: 1, scope: !3017)
!3024 = !{i64 2155376429, i64 2155376449, i64 2155376512}
!3025 = !DILocation(line: 30, column: 1, scope: !3017)
!3026 = !{i64 2155376848, i64 2155376868, i64 2155376931}
!3027 = !DILocation(line: 31, column: 1, scope: !3017)
!3028 = !{i64 2155377267, i64 2155377287, i64 2155377350}
!3029 = !DILocation(line: 33, column: 1, scope: !3017)
!3030 = !{i64 2155377559, i64 2155377579, i64 2155377642}
!3031 = !DILocation(line: 35, column: 1, scope: !3017)
!3032 = !{i64 2155377884, i64 2155377904, i64 2155377967}
!3033 = !DILocation(line: 50, column: 1, scope: !3017)
!3034 = !{i64 2155378311, i64 2155378331, i64 2155378394}
!3035 = !DILocation(line: 54, column: 1, scope: !3017)
!3036 = !{i64 2155378750, i64 2155378770, i64 2155378833}
!3037 = !DILocation(line: 61, column: 1, scope: !3017)
!3038 = !{i64 2155379067, i64 2155379087, i64 2155379150}
!3039 = !DILocation(line: 63, column: 1, scope: !3017)
!3040 = !{i64 2155379447, i64 2155379467, i64 2155379530}
!3041 = !DILocation(line: 64, column: 1, scope: !3017)
!3042 = !{i64 2155379969, i64 2155379989, i64 2155380052}
!3043 = !DILocation(line: 65, column: 1, scope: !3017)
!3044 = !{i64 2155380467, i64 2155380487, i64 2155380550}
!3045 = !DILocation(line: 66, column: 1, scope: !3017)
!3046 = !{i64 2155380949, i64 2155380969, i64 2155381032}
!3047 = !DILocation(line: 67, column: 1, scope: !3017)
!3048 = !{i64 2155381456, i64 2155381476, i64 2155381539}
!3049 = !DILocation(line: 68, column: 1, scope: !3017)
!3050 = !{i64 2155381944, i64 2155381964, i64 2155382027}
!3051 = !DILocation(line: 70, column: 1, scope: !3017)
!3052 = !{i64 2155382412, i64 2155382432, i64 2155382495}
!3053 = !DILocation(line: 71, column: 1, scope: !3017)
!3054 = !{i64 2155382854, i64 2155382874, i64 2155382937}
!3055 = !DILocation(line: 72, column: 1, scope: !3017)
!3056 = !{i64 2155383312, i64 2155383332, i64 2155383395}
!3057 = !DILocation(line: 79, column: 1, scope: !3017)
!3058 = !{i64 2155383766, i64 2155383786, i64 2155383849}
!3059 = !DILocation(line: 80, column: 1, scope: !3017)
!3060 = !{i64 2155384277, i64 2155384297, i64 2155384360}
!3061 = !DILocation(line: 82, column: 1, scope: !3017)
!3062 = !{i64 2155384768, i64 2155384788, i64 2155384851}
!3063 = !DILocation(line: 97, column: 1, scope: !3017)
!3064 = !{i64 2155385105, i64 2155385125, i64 2155385188}
!3065 = !DILocation(line: 99, column: 1, scope: !3017)
!3066 = !{i64 2155385323, i64 2155385343, i64 2155385406}
!3067 = !DILocation(line: 102, column: 1, scope: !3017)
!3068 = !{i64 2155389641, i64 2155389661, i64 2155389724}
!3069 = !DILocation(line: 105, column: 1, scope: !3017)
!3070 = !{i64 2155389881, i64 2155389901, i64 2155389964}
!3071 = !DILocation(line: 115, column: 1, scope: !3017)
!3072 = !{i64 2155390220, i64 2155390240, i64 2155390303}
!3073 = !DILocation(line: 118, column: 1, scope: !3017)
!3074 = !{i64 2155390564, i64 2155390584, i64 2155390647}
!3075 = !DILocation(line: 32, column: 1, scope: !3076)
!3076 = !DILexicalBlockFile(scope: !3017, file: !3077, discriminator: 0)
!3077 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3078 = !{i64 2155390920, i64 2155390940, i64 2155391003}
!3079 = !DILocation(line: 33, column: 1, scope: !3076)
!3080 = !{i64 2155391432, i64 2155391452, i64 2155391515}
!3081 = !DILocation(line: 53, column: 1, scope: !3076)
!3082 = !{i64 2155391940, i64 2155391960, i64 2155392023}
!3083 = !DILocation(line: 54, column: 1, scope: !3076)
!3084 = !{i64 2155392358, i64 2155392378, i64 2155392441}
!3085 = !DILocation(line: 55, column: 1, scope: !3076)
!3086 = !{i64 2155392776, i64 2155392796, i64 2155392859}
!3087 = !DILocation(line: 56, column: 1, scope: !3076)
!3088 = !{i64 2155393194, i64 2155393214, i64 2155393277}
!3089 = !DILocation(line: 57, column: 1, scope: !3076)
!3090 = !{i64 2155393612, i64 2155393632, i64 2155393695}
!3091 = !DILocation(line: 58, column: 1, scope: !3076)
!3092 = !{i64 2155394030, i64 2155394050, i64 2155394113}
!3093 = !DILocation(line: 59, column: 1, scope: !3076)
!3094 = !{i64 2155394448, i64 2155394468, i64 2155394531}
!3095 = !DILocation(line: 60, column: 1, scope: !3076)
!3096 = !{i64 2155394872, i64 2155394892, i64 2155394955}
!3097 = !DILocation(line: 61, column: 1, scope: !3076)
!3098 = !{i64 2155395189, i64 2155395209, i64 2155395272}
!3099 = !DILocation(line: 70, column: 1, scope: !3076)
!3100 = !{i64 2155395418, i64 2155395438, i64 2155395501}
!3101 = !DILocation(line: 72, column: 1, scope: !3076)
!3102 = !{i64 2155395750, i64 2155395770, i64 2155395833}
!3103 = !DILocation(line: 73, column: 1, scope: !3076)
!3104 = !{i64 2155396200, i64 2155396220, i64 2155396283}
!3105 = !DILocation(line: 74, column: 1, scope: !3076)
!3106 = !{i64 2155396650, i64 2155396670, i64 2155396733}
!3107 = !DILocation(line: 75, column: 1, scope: !3076)
!3108 = !{i64 2155397100, i64 2155397120, i64 2155397183}
!3109 = !DILocation(line: 76, column: 1, scope: !3076)
!3110 = !{i64 2155397550, i64 2155397570, i64 2155397633}
!3111 = !DILocation(line: 77, column: 1, scope: !3076)
!3112 = !{i64 2155398000, i64 2155398020, i64 2155398083}
!3113 = !DILocation(line: 78, column: 1, scope: !3076)
!3114 = !{i64 2155398450, i64 2155398470, i64 2155398533}
!3115 = !DILocation(line: 79, column: 1, scope: !3076)
!3116 = !{i64 2155398900, i64 2155398920, i64 2155398983}
!3117 = !DILocation(line: 80, column: 1, scope: !3076)
!3118 = !{i64 2155403414, i64 2155403434, i64 2155403497}
!3119 = !DILocation(line: 84, column: 1, scope: !3076)
!3120 = !{i64 2155403746, i64 2155403766, i64 2155403829}
!3121 = !DILocation(line: 91, column: 1, scope: !3076)
!3122 = !{i64 2155404143, i64 2155404163, i64 2155404226}
!3123 = !DILocation(line: 93, column: 1, scope: !3076)
!3124 = !{i64 2155404510, i64 2155404530, i64 2155404593}
!3125 = !DILocation(line: 106, column: 1, scope: !3076)
!3126 = !{i64 2155404780, i64 2155404800, i64 2155404863}
!3127 = !DILocation(line: 11, column: 1, scope: !3128)
!3128 = !DILexicalBlockFile(scope: !3017, file: !3129, discriminator: 0)
!3129 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3130 = distinct !DISubprogram(name: "test_thread", scope: !125, file: !125, line: 33, type: !111, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3131)
!3131 = !{!3132, !3133, !3134, !3135, !3136, !3137, !3141, !3142, !3143, !3144, !3148}
!3132 = !DILocalVariable(name: "arg1", arg: 1, scope: !3130, file: !125, line: 33, type: !113)
!3133 = !DILocalVariable(name: "arg2", arg: 2, scope: !3130, file: !125, line: 33, type: !113)
!3134 = !DILocalVariable(name: "arg3", arg: 3, scope: !3130, file: !125, line: 33, type: !113)
!3135 = !DILocalVariable(name: "counter", scope: !3130, file: !125, line: 35, type: !102)
!3136 = !DILocalVariable(name: "buffer", scope: !3130, file: !125, line: 36, type: !106)
!3137 = !DILocalVariable(name: "array", scope: !3130, file: !125, line: 52, type: !3138)
!3138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 26912, elements: !3139)
!3139 = !{!3140}
!3140 = !DISubrange(count: 841)
!3141 = !DILocalVariable(name: "carry", scope: !3130, file: !125, line: 53, type: !119)
!3142 = !DILocalVariable(name: "i", scope: !3130, file: !125, line: 54, type: !119)
!3143 = !DILocalVariable(name: "j", scope: !3130, file: !125, line: 54, type: !119)
!3144 = !DILocalVariable(name: "sum", scope: !3145, file: !125, line: 61, type: !119)
!3145 = distinct !DILexicalBlock(scope: !3146, file: !125, line: 60, column: 35)
!3146 = distinct !DILexicalBlock(scope: !3147, file: !125, line: 60, column: 2)
!3147 = distinct !DILexicalBlock(scope: !3130, file: !125, line: 60, column: 2)
!3148 = !DILocalVariable(name: "value", scope: !3145, file: !125, line: 61, type: !119)
!3149 = !DILocation(line: 0, scope: !3130)
!3150 = !DILocation(line: 52, column: 2, scope: !3130)
!3151 = !DILocation(line: 52, column: 6, scope: !3130)
!3152 = !DILocation(line: 56, column: 2, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3130, file: !125, line: 56, column: 2)
!3154 = !DILocation(line: 57, column: 3, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3156, file: !125, line: 56, column: 31)
!3156 = distinct !DILexicalBlock(scope: !3153, file: !125, line: 56, column: 2)
!3157 = !DILocation(line: 57, column: 12, scope: !3155)
!3158 = !DILocation(line: 56, column: 27, scope: !3156)
!3159 = !DILocation(line: 56, column: 16, scope: !3156)
!3160 = distinct !{!3160, !3152, !3161}
!3161 = !DILocation(line: 58, column: 2, scope: !3153)
!3162 = !DILocation(line: 0, scope: !3145)
!3163 = !DILocation(line: 63, column: 3, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3145, file: !125, line: 63, column: 3)
!3165 = !DILocation(line: 64, column: 14, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3167, file: !125, line: 63, column: 27)
!3167 = distinct !DILexicalBlock(scope: !3164, file: !125, line: 63, column: 3)
!3168 = !DILocation(line: 64, column: 31, scope: !3166)
!3169 = !DILocation(line: 64, column: 29, scope: !3166)
!3170 = !DILocation(line: 64, column: 18, scope: !3166)
!3171 = !DILocation(line: 65, column: 24, scope: !3166)
!3172 = !DILocation(line: 65, column: 28, scope: !3166)
!3173 = !DILocation(line: 66, column: 8, scope: !3166)
!3174 = !DILocation(line: 65, column: 13, scope: !3166)
!3175 = !DILocation(line: 63, column: 22, scope: !3167)
!3176 = !DILocation(line: 63, column: 17, scope: !3167)
!3177 = distinct !{!3177, !3163, !3178}
!3178 = !DILocation(line: 67, column: 3, scope: !3164)
!3179 = !DILocation(line: 69, column: 23, scope: !3145)
!3180 = !DILocation(line: 69, column: 17, scope: !3145)
!3181 = !DILocation(line: 73, column: 3, scope: !3145)
!3182 = !DILocation(line: 74, column: 10, scope: !3145)
!3183 = !DILocation(line: 60, column: 28, scope: !3146)
!3184 = !DILocation(line: 60, column: 21, scope: !3146)
!3185 = !DILocation(line: 60, column: 2, scope: !3147)
!3186 = distinct !{!3186, !3185, !3187}
!3187 = !DILocation(line: 75, column: 2, scope: !3147)
!3188 = !DILocation(line: 35, column: 22, scope: !3130)
!3189 = !DILocation(line: 77, column: 2, scope: !3130)
!3190 = !DILocation(line: 78, column: 1, scope: !3130)
!3191 = distinct !DISubprogram(name: "atomic_dec", scope: !3192, file: !3192, line: 141, type: !3193, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3196)
!3192 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3193 = !DISubroutineType(types: !3194)
!3194 = !{!3195, !102}
!3195 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !104, line: 23, baseType: !103)
!3196 = !{!3197}
!3197 = !DILocalVariable(name: "target", arg: 1, scope: !3191, file: !3192, line: 141, type: !102)
!3198 = !DILocation(line: 0, scope: !3191)
!3199 = !DILocation(line: 143, column: 9, scope: !3191)
!3200 = !DILocation(line: 143, column: 2, scope: !3191)
!3201 = distinct !DISubprogram(name: "atomic_sub", scope: !3192, file: !3192, line: 105, type: !3202, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3204)
!3202 = !DISubroutineType(types: !3203)
!3203 = !{!3195, !102, !3195}
!3204 = !{!3205, !3206}
!3205 = !DILocalVariable(name: "target", arg: 1, scope: !3201, file: !3192, line: 105, type: !102)
!3206 = !DILocalVariable(name: "value", arg: 2, scope: !3201, file: !3192, line: 105, type: !3195)
!3207 = !DILocation(line: 0, scope: !3201)
!3208 = !DILocation(line: 107, column: 9, scope: !3201)
!3209 = !DILocation(line: 107, column: 2, scope: !3201)
!3210 = distinct !DISubprogram(name: "main", scope: !125, file: !125, line: 80, type: !3019, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3211)
!3211 = !{!3212, !3213, !3214, !3215, !3216}
!3212 = !DILocalVariable(name: "start_time", scope: !3210, file: !125, line: 82, type: !118)
!3213 = !DILocalVariable(name: "stop_time", scope: !3210, file: !125, line: 82, type: !118)
!3214 = !DILocalVariable(name: "cycles_spent", scope: !3210, file: !125, line: 82, type: !118)
!3215 = !DILocalVariable(name: "nanoseconds_spent", scope: !3210, file: !125, line: 82, type: !118)
!3216 = !DILocalVariable(name: "i", scope: !3210, file: !125, line: 83, type: !119)
!3217 = !DILocation(line: 85, column: 2, scope: !3210)
!3218 = !DILocation(line: 89, column: 15, scope: !3210)
!3219 = !DILocation(line: 0, scope: !3210)
!3220 = !DILocation(line: 91, column: 2, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3210, file: !125, line: 91, column: 2)
!3222 = !DILocation(line: 99, column: 9, scope: !3210)
!3223 = !DILocation(line: 99, column: 2, scope: !3210)
!3224 = !DILocation(line: 92, column: 20, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3226, file: !125, line: 91, column: 36)
!3226 = distinct !DILexicalBlock(scope: !3221, file: !125, line: 91, column: 2)
!3227 = !DILocation(line: 92, column: 32, scope: !3225)
!3228 = !DILocation(line: 94, column: 37, scope: !3225)
!3229 = !DILocation(line: 92, column: 3, scope: !3225)
!3230 = !DILocation(line: 91, column: 32, scope: !3226)
!3231 = !DILocation(line: 91, column: 16, scope: !3226)
!3232 = distinct !{!3232, !3220, !3233}
!3233 = !DILocation(line: 96, column: 2, scope: !3221)
!3234 = !DILocation(line: 100, column: 3, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3210, file: !125, line: 99, column: 18)
!3236 = distinct !{!3236, !3223, !3237}
!3237 = !DILocation(line: 101, column: 2, scope: !3210)
!3238 = !DILocation(line: 104, column: 14, scope: !3210)
!3239 = !DILocation(line: 109, column: 2, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3210, file: !125, line: 109, column: 2)
!3241 = !DILocation(line: 110, column: 56, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3243, file: !125, line: 109, column: 36)
!3243 = distinct !DILexicalBlock(scope: !3240, file: !125, line: 109, column: 2)
!3244 = !DILocation(line: 110, column: 3, scope: !3242)
!3245 = !DILocation(line: 109, column: 32, scope: !3243)
!3246 = !DILocation(line: 109, column: 16, scope: !3243)
!3247 = distinct !{!3247, !3239, !3248}
!3248 = !DILocation(line: 111, column: 2, scope: !3240)
!3249 = !DILocation(line: 106, column: 27, scope: !3210)
!3250 = !DILocation(line: 107, column: 52, scope: !3210)
!3251 = !DILocation(line: 107, column: 32, scope: !3210)
!3252 = !DILocation(line: 107, column: 22, scope: !3210)
!3253 = !DILocation(line: 114, column: 45, scope: !3210)
!3254 = !DILocation(line: 113, column: 2, scope: !3210)
!3255 = !DILocation(line: 115, column: 1, scope: !3210)
!3256 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !245, file: !245, line: 1675, type: !3257, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2102)
!3257 = !DISubroutineType(types: !3258)
!3258 = !{!118}
!3259 = !DILocation(line: 1677, column: 9, scope: !3256)
!3260 = !DILocation(line: 1677, column: 2, scope: !3256)
!3261 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3262, file: !3262, line: 403, type: !3263, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3265)
!3262 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!120, !120}
!3265 = !{!3266}
!3266 = !DILocalVariable(name: "t", arg: 1, scope: !3261, file: !3262, line: 403, type: !120)
!3267 = !DILocation(line: 0, scope: !3261)
!3268 = !DILocation(line: 406, column: 2, scope: !3261)
!3269 = distinct !DISubprogram(name: "k_thread_create", scope: !3270, file: !3270, line: 24, type: !3271, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3281)
!3270 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!3271 = !DISubroutineType(types: !3272)
!3272 = !{!3273, !3274, !3275, !239, !108, !113, !113, !113, !119, !118, !3277}
!3273 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !3274)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!3275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3276, size: 32)
!3276 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !127)
!3277 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !3278)
!3278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !3279)
!3279 = !{!3280}
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3278, file: !115, line: 66, baseType: !114, size: 64)
!3281 = !{!3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291}
!3282 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3269, file: !3270, line: 24, type: !3274)
!3283 = !DILocalVariable(name: "stack", arg: 2, scope: !3269, file: !3270, line: 24, type: !3275)
!3284 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3269, file: !3270, line: 24, type: !239)
!3285 = !DILocalVariable(name: "entry", arg: 4, scope: !3269, file: !3270, line: 24, type: !108)
!3286 = !DILocalVariable(name: "p1", arg: 5, scope: !3269, file: !3270, line: 24, type: !113)
!3287 = !DILocalVariable(name: "p2", arg: 6, scope: !3269, file: !3270, line: 24, type: !113)
!3288 = !DILocalVariable(name: "p3", arg: 7, scope: !3269, file: !3270, line: 24, type: !113)
!3289 = !DILocalVariable(name: "prio", arg: 8, scope: !3269, file: !3270, line: 24, type: !119)
!3290 = !DILocalVariable(name: "options", arg: 9, scope: !3269, file: !3270, line: 24, type: !118)
!3291 = !DILocalVariable(name: "delay", arg: 10, scope: !3269, file: !3270, line: 24, type: !3277)
!3292 = !DILocation(line: 0, scope: !3269)
!3293 = !DILocation(line: 49, column: 2, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3269, file: !3270, line: 49, column: 2)
!3295 = !{i64 2155067374}
!3296 = !DILocation(line: 50, column: 9, scope: !3269)
!3297 = !DILocation(line: 50, column: 2, scope: !3269)
!3298 = distinct !DISubprogram(name: "k_sleep", scope: !3270, file: !3270, line: 91, type: !3299, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3301)
!3299 = !DISubroutineType(types: !3300)
!3300 = !{!772, !3277}
!3301 = !{!3302}
!3302 = !DILocalVariable(name: "timeout", arg: 1, scope: !3298, file: !3270, line: 91, type: !3277)
!3303 = !DILocation(line: 0, scope: !3298)
!3304 = !DILocation(line: 99, column: 2, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3298, file: !3270, line: 99, column: 2)
!3306 = !{i64 2155067578}
!3307 = !DILocation(line: 100, column: 9, scope: !3298)
!3308 = !DILocation(line: 100, column: 2, scope: !3298)
!3309 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !3262, file: !3262, line: 935, type: !3263, scopeLine: 936, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3310)
!3310 = !{!3311}
!3311 = !DILocalVariable(name: "t", arg: 1, scope: !3309, file: !3262, line: 935, type: !120)
!3312 = !DILocation(line: 0, scope: !3309)
!3313 = !DILocalVariable(name: "t", arg: 1, scope: !3314, file: !3262, line: 102, type: !120)
!3314 = distinct !DISubprogram(name: "z_tmcvt", scope: !3262, file: !3262, line: 102, type: !3315, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3317)
!3315 = !DISubroutineType(types: !3316)
!3316 = !{!120, !120, !118, !118, !345, !345, !345, !345}
!3317 = !{!3313, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327}
!3318 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3314, file: !3262, line: 102, type: !118)
!3319 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3314, file: !3262, line: 103, type: !118)
!3320 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3314, file: !3262, line: 103, type: !345)
!3321 = !DILocalVariable(name: "result32", arg: 5, scope: !3314, file: !3262, line: 104, type: !345)
!3322 = !DILocalVariable(name: "round_up", arg: 6, scope: !3314, file: !3262, line: 104, type: !345)
!3323 = !DILocalVariable(name: "round_off", arg: 7, scope: !3314, file: !3262, line: 105, type: !345)
!3324 = !DILocalVariable(name: "mul_ratio", scope: !3314, file: !3262, line: 107, type: !345)
!3325 = !DILocalVariable(name: "div_ratio", scope: !3314, file: !3262, line: 109, type: !345)
!3326 = !DILocalVariable(name: "off", scope: !3314, file: !3262, line: 116, type: !120)
!3327 = !DILocalVariable(name: "rdivisor", scope: !3328, file: !3262, line: 119, type: !118)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !3262, line: 118, column: 18)
!3329 = distinct !DILexicalBlock(scope: !3314, file: !3262, line: 118, column: 6)
!3330 = !DILocation(line: 0, scope: !3314, inlinedAt: !3331)
!3331 = distinct !DILocation(line: 938, column: 9, scope: !3309)
!3332 = !DILocation(line: 161, column: 14, scope: !3333, inlinedAt: !3331)
!3333 = distinct !DILexicalBlock(scope: !3334, file: !3262, line: 157, column: 10)
!3334 = distinct !DILexicalBlock(scope: !3335, file: !3262, line: 150, column: 14)
!3335 = distinct !DILexicalBlock(scope: !3336, file: !3262, line: 148, column: 7)
!3336 = distinct !DILexicalBlock(scope: !3337, file: !3262, line: 147, column: 9)
!3337 = distinct !DILexicalBlock(scope: !3338, file: !3262, line: 141, column: 13)
!3338 = distinct !DILexicalBlock(scope: !3314, file: !3262, line: 134, column: 6)
!3339 = !DILocation(line: 161, column: 25, scope: !3333, inlinedAt: !3331)
!3340 = !DILocation(line: 161, column: 50, scope: !3333, inlinedAt: !3331)
!3341 = !DILocation(line: 161, column: 65, scope: !3333, inlinedAt: !3331)
!3342 = !DILocation(line: 161, column: 33, scope: !3333, inlinedAt: !3331)
!3343 = !DILocation(line: 938, column: 2, scope: !3309)
!3344 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3345, file: !3345, line: 24, type: !3257, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2102)
!3345 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3346 = !DILocation(line: 26, column: 9, scope: !3344)
!3347 = !DILocation(line: 26, column: 2, scope: !3344)
!3348 = distinct !DISubprogram(name: "cbvprintf_package", scope: !286, file: !286, line: 233, type: !3349, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3358)
!3349 = !DISubroutineType(types: !3350)
!3350 = !{!119, !113, !239, !118, !278, !3351}
!3351 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3352, line: 99, baseType: !3353)
!3352 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3353 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3352, line: 40, baseType: !3354)
!3354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !286, baseType: !3355)
!3355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3356)
!3356 = !{!3357}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3355, file: !286, line: 18, baseType: !113, size: 32)
!3358 = !{!3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3394, !3403, !3406, !3407, !3410, !3413, !3416, !3419, !3425}
!3359 = !DILocalVariable(name: "packaged", arg: 1, scope: !3348, file: !286, line: 233, type: !113)
!3360 = !DILocalVariable(name: "len", arg: 2, scope: !3348, file: !286, line: 233, type: !239)
!3361 = !DILocalVariable(name: "flags", arg: 3, scope: !3348, file: !286, line: 233, type: !118)
!3362 = !DILocalVariable(name: "fmt", arg: 4, scope: !3348, file: !286, line: 234, type: !278)
!3363 = !DILocalVariable(name: "ap", arg: 5, scope: !3348, file: !286, line: 234, type: !3351)
!3364 = !DILocalVariable(name: "buf0", scope: !3348, file: !286, line: 247, type: !284)
!3365 = !DILocalVariable(name: "buf", scope: !3348, file: !286, line: 248, type: !284)
!3366 = !DILocalVariable(name: "size", scope: !3348, file: !286, line: 249, type: !32)
!3367 = !DILocalVariable(name: "align", scope: !3348, file: !286, line: 250, type: !32)
!3368 = !DILocalVariable(name: "str_ptr_pos", scope: !3348, file: !286, line: 251, type: !3369)
!3369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !267)
!3370 = !DILocalVariable(name: "str_ptr_arg", scope: !3348, file: !286, line: 252, type: !3369)
!3371 = !DILocalVariable(name: "s_idx", scope: !3348, file: !286, line: 253, type: !32)
!3372 = !DILocalVariable(name: "s_rw_cnt", scope: !3348, file: !286, line: 254, type: !32)
!3373 = !DILocalVariable(name: "s_ro_cnt", scope: !3348, file: !286, line: 255, type: !32)
!3374 = !DILocalVariable(name: "arg_idx", scope: !3348, file: !286, line: 256, type: !119)
!3375 = !DILocalVariable(name: "i", scope: !3348, file: !286, line: 257, type: !32)
!3376 = !DILocalVariable(name: "s", scope: !3348, file: !286, line: 258, type: !278)
!3377 = !DILocalVariable(name: "parsing", scope: !3348, file: !286, line: 259, type: !345)
!3378 = !DILocalVariable(name: "rws_pos_en", scope: !3348, file: !286, line: 263, type: !345)
!3379 = !DILocalVariable(name: "fros_cnt", scope: !3348, file: !286, line: 268, type: !119)
!3380 = !DILocalVariable(name: "is_str_arg", scope: !3348, file: !286, line: 269, type: !345)
!3381 = !DILocalVariable(name: "pkg_hdr", scope: !3348, file: !286, line: 270, type: !3382)
!3382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 32)
!3383 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3384, line: 78, size: 32, elements: !3385)
!3384 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3385 = !{!3386, !3393}
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3383, file: !3384, line: 80, baseType: !3387, size: 32)
!3387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3384, line: 45, size: 32, elements: !3388)
!3388 = !{!3389, !3390, !3391, !3392}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3387, file: !3384, line: 47, baseType: !185, size: 8)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3387, file: !3384, line: 50, baseType: !185, size: 8, offset: 8)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3387, file: !3384, line: 53, baseType: !185, size: 8, offset: 16)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3387, file: !3384, line: 56, baseType: !185, size: 8, offset: 24)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3383, file: !3384, line: 82, baseType: !113, size: 32)
!3394 = !DILocalVariable(name: "v", scope: !3395, file: !286, line: 567, type: !3399)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !286, line: 562, column: 14)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !286, line: 481, column: 18)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !286, line: 466, column: 3)
!3398 = distinct !DILexicalBlock(scope: !3348, file: !286, line: 343, column: 15)
!3399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3348, file: !286, line: 567, size: 64, elements: !3400)
!3400 = !{!3401, !3402}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3399, file: !286, line: 567, baseType: !276, size: 64)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3399, file: !286, line: 567, baseType: !274, size: 64)
!3403 = !DILocalVariable(name: "is_ro", scope: !3404, file: !286, line: 620, type: !345)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !286, line: 613, column: 19)
!3405 = distinct !DILexicalBlock(scope: !3398, file: !286, line: 613, column: 7)
!3406 = !DILocalVariable(name: "do_ro", scope: !3404, file: !286, line: 621, type: !345)
!3407 = !DILocalVariable(name: "s_ptr_idx", scope: !3408, file: !286, line: 626, type: !118)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !286, line: 625, column: 11)
!3409 = distinct !DILexicalBlock(scope: !3404, file: !286, line: 623, column: 8)
!3410 = !DILocalVariable(name: "v", scope: !3411, file: !286, line: 684, type: !119)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !286, line: 683, column: 35)
!3412 = distinct !DILexicalBlock(scope: !3405, file: !286, line: 683, column: 14)
!3413 = !DILocalVariable(name: "v", scope: !3414, file: !286, line: 691, type: !105)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !286, line: 690, column: 36)
!3415 = distinct !DILexicalBlock(scope: !3412, file: !286, line: 690, column: 14)
!3416 = !DILocalVariable(name: "v", scope: !3417, file: !286, line: 698, type: !117)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !286, line: 697, column: 41)
!3418 = distinct !DILexicalBlock(scope: !3415, file: !286, line: 697, column: 14)
!3419 = !DILocalVariable(name: "pos", scope: !3420, file: !286, line: 762, type: !185)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !286, line: 757, column: 31)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !286, line: 757, column: 3)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !286, line: 757, column: 3)
!3423 = distinct !DILexicalBlock(scope: !3424, file: !286, line: 756, column: 16)
!3424 = distinct !DILexicalBlock(scope: !3348, file: !286, line: 756, column: 6)
!3425 = !DILabel(scope: !3404, name: "process_string", file: !286, line: 615)
!3426 = !DILocation(line: 0, scope: !3348)
!3427 = !DILocation(line: 251, column: 2, scope: !3348)
!3428 = !DILocation(line: 251, column: 10, scope: !3348)
!3429 = !DILocation(line: 252, column: 2, scope: !3348)
!3430 = !DILocation(line: 252, column: 10, scope: !3348)
!3431 = !DILocation(line: 263, column: 29, scope: !3348)
!3432 = !DILocation(line: 263, column: 21, scope: !3348)
!3433 = !DILocation(line: 268, column: 21, scope: !3348)
!3434 = !DILocation(line: 268, column: 19, scope: !3348)
!3435 = !DILocation(line: 273, column: 6, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3348, file: !286, line: 273, column: 6)
!3437 = !DILocation(line: 273, column: 26, scope: !3436)
!3438 = !DILocation(line: 273, column: 6, scope: !3348)
!3439 = !DILocation(line: 297, column: 6, scope: !3348)
!3440 = !DILocation(line: 305, column: 11, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3348, file: !286, line: 305, column: 6)
!3442 = !DILocation(line: 305, column: 6, scope: !3348)
!3443 = !DILocation(line: 327, column: 19, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3348, file: !286, line: 327, column: 6)
!3445 = !DILocation(line: 327, column: 22, scope: !3444)
!3446 = !DILocation(line: 327, column: 33, scope: !3444)
!3447 = !DILocation(line: 327, column: 50, scope: !3444)
!3448 = !DILocation(line: 327, column: 6, scope: !3348)
!3449 = !DILocation(line: 338, column: 9, scope: !3348)
!3450 = !DILocation(line: 341, column: 2, scope: !3348)
!3451 = !DILocation(line: 472, column: 8, scope: !3397)
!3452 = !DILocation(line: 473, column: 14, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3454, file: !286, line: 473, column: 9)
!3454 = distinct !DILexicalBlock(scope: !3455, file: !286, line: 472, column: 18)
!3455 = distinct !DILexicalBlock(scope: !3397, file: !286, line: 472, column: 8)
!3456 = !DILocation(line: 473, column: 9, scope: !3454)
!3457 = !DILocation(line: 479, column: 5, scope: !3454)
!3458 = !DILocation(line: 468, column: 9, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3397, file: !286, line: 468, column: 8)
!3460 = !DILocation(line: 468, column: 8, scope: !3459)
!3461 = !DILocation(line: 468, column: 15, scope: !3459)
!3462 = !DILocation(line: 468, column: 8, scope: !3397)
!3463 = distinct !{!3463, !3464, !3465}
!3464 = !DILocation(line: 343, column: 2, scope: !3348)
!3465 = !DILocation(line: 712, column: 2, scope: !3348)
!3466 = !DILocation(line: 481, column: 4, scope: !3397)
!3467 = !DILocation(line: 484, column: 12, scope: !3396)
!3468 = !DILocation(line: 485, column: 5, scope: !3396)
!3469 = !DILocation(line: 505, column: 5, scope: !3396)
!3470 = !DILocation(line: 518, column: 5, scope: !3396)
!3471 = !DILocation(line: 523, column: 5, scope: !3396)
!3472 = !DILocation(line: 532, column: 9, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3396, file: !286, line: 532, column: 9)
!3474 = !DILocation(line: 532, column: 17, scope: !3473)
!3475 = !DILocation(line: 532, column: 9, scope: !3396)
!3476 = !DILocation(line: 533, column: 10, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3478, file: !286, line: 533, column: 10)
!3478 = distinct !DILexicalBlock(scope: !3473, file: !286, line: 532, column: 25)
!3479 = !DILocation(line: 533, column: 18, scope: !3477)
!3480 = !DILocation(line: 0, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3395, file: !286, line: 569, column: 9)
!3482 = !DILocation(line: 0, scope: !3395)
!3483 = !DILocation(line: 579, column: 20, scope: !3395)
!3484 = !DILocation(line: 579, column: 11, scope: !3395)
!3485 = !DILocation(line: 580, column: 9, scope: !3395)
!3486 = !DILocation(line: 582, column: 21, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !286, line: 582, column: 10)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !286, line: 580, column: 23)
!3489 = distinct !DILexicalBlock(scope: !3395, file: !286, line: 580, column: 9)
!3490 = !DILocation(line: 582, column: 28, scope: !3487)
!3491 = !DILocation(line: 582, column: 10, scope: !3488)
!3492 = !DILocation(line: 0, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !286, line: 587, column: 17)
!3494 = distinct !DILexicalBlock(scope: !3488, file: !286, line: 585, column: 10)
!3495 = !DILocation(line: 593, column: 9, scope: !3395)
!3496 = !DILocation(line: 600, column: 5, scope: !3396)
!3497 = !DILocation(line: 605, column: 18, scope: !3398)
!3498 = !DILocation(line: 605, column: 9, scope: !3398)
!3499 = !DILocation(line: 608, column: 20, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3398, file: !286, line: 608, column: 7)
!3501 = !DILocation(line: 608, column: 23, scope: !3500)
!3502 = !DILocation(line: 608, column: 34, scope: !3500)
!3503 = !DILocation(line: 608, column: 41, scope: !3500)
!3504 = !DILocation(line: 608, column: 7, scope: !3398)
!3505 = !DILocation(line: 613, column: 7, scope: !3398)
!3506 = !DILocation(line: 614, column: 8, scope: !3404)
!3507 = !DILocation(line: 614, column: 4, scope: !3404)
!3508 = !DILocation(line: 256, column: 6, scope: !3348)
!3509 = !DILocation(line: 254, column: 15, scope: !3348)
!3510 = !DILocation(line: 320, column: 7, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3441, file: !286, line: 305, column: 20)
!3512 = !DILocation(line: 615, column: 1, scope: !3404)
!3513 = !DILocation(line: 616, column: 8, scope: !3404)
!3514 = !DILocation(line: 617, column: 5, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !286, line: 616, column: 22)
!3516 = distinct !DILexicalBlock(scope: !3404, file: !286, line: 616, column: 8)
!3517 = !DILocation(line: 617, column: 25, scope: !3515)
!3518 = !DILocation(line: 618, column: 4, scope: !3515)
!3519 = !DILocation(line: 620, column: 26, scope: !3404)
!3520 = !DILocation(line: 620, column: 29, scope: !3404)
!3521 = !DILocation(line: 620, column: 17, scope: !3404)
!3522 = !DILocation(line: 620, column: 43, scope: !3404)
!3523 = !DILocation(line: 0, scope: !3404)
!3524 = !DILocation(line: 623, column: 14, scope: !3409)
!3525 = !DILocation(line: 626, column: 26, scope: !3408)
!3526 = !DILocation(line: 626, column: 37, scope: !3408)
!3527 = !DILocation(line: 0, scope: !3408)
!3528 = !DILocation(line: 634, column: 15, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3408, file: !286, line: 634, column: 9)
!3530 = !DILocation(line: 635, column: 6, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !286, line: 635, column: 6)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !286, line: 635, column: 6)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !286, line: 635, column: 6)
!3534 = distinct !DILexicalBlock(scope: !3529, file: !286, line: 634, column: 44)
!3535 = !DILocation(line: 639, column: 15, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3408, file: !286, line: 639, column: 9)
!3537 = !DILocation(line: 639, column: 9, scope: !3408)
!3538 = !DILocation(line: 640, column: 6, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !286, line: 640, column: 6)
!3540 = distinct !DILexicalBlock(scope: !3541, file: !286, line: 640, column: 6)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !286, line: 640, column: 6)
!3542 = distinct !DILexicalBlock(scope: !3536, file: !286, line: 639, column: 43)
!3543 = !DILocation(line: 644, column: 9, scope: !3408)
!3544 = !DILocation(line: 649, column: 27, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !286, line: 644, column: 23)
!3546 = distinct !DILexicalBlock(scope: !3408, file: !286, line: 644, column: 9)
!3547 = !DILocation(line: 649, column: 6, scope: !3545)
!3548 = !DILocation(line: 649, column: 25, scope: !3545)
!3549 = !DILocation(line: 650, column: 27, scope: !3545)
!3550 = !DILocation(line: 650, column: 6, scope: !3545)
!3551 = !DILocation(line: 650, column: 25, scope: !3545)
!3552 = !DILocation(line: 651, column: 10, scope: !3545)
!3553 = !DILocation(line: 653, column: 26, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !286, line: 651, column: 17)
!3555 = distinct !DILexicalBlock(scope: !3545, file: !286, line: 651, column: 10)
!3556 = !DILocation(line: 654, column: 15, scope: !3554)
!3557 = !DILocation(line: 655, column: 6, scope: !3554)
!3558 = !DILocation(line: 656, column: 15, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3555, file: !286, line: 655, column: 13)
!3560 = !DILocation(line: 658, column: 16, scope: !3546)
!3561 = !DILocation(line: 663, column: 10, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !286, line: 658, column: 23)
!3563 = distinct !DILexicalBlock(scope: !3546, file: !286, line: 658, column: 16)
!3564 = !DILocation(line: 664, column: 5, scope: !3562)
!3565 = !DILocation(line: 664, column: 16, scope: !3563)
!3566 = !DILocation(line: 669, column: 10, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !286, line: 664, column: 28)
!3568 = distinct !DILexicalBlock(scope: !3563, file: !286, line: 664, column: 16)
!3569 = !DILocation(line: 670, column: 5, scope: !3567)
!3570 = !DILocation(line: 675, column: 13, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3568, file: !286, line: 670, column: 12)
!3572 = !DILocation(line: 675, column: 27, scope: !3571)
!3573 = !DILocation(line: 675, column: 10, scope: !3571)
!3574 = !DILocation(line: 678, column: 10, scope: !3408)
!3575 = !DILocation(line: 680, column: 8, scope: !3404)
!3576 = !DILocation(line: 683, column: 14, scope: !3405)
!3577 = !DILocation(line: 684, column: 12, scope: !3411)
!3578 = !DILocation(line: 0, scope: !3411)
!3579 = !DILocation(line: 686, column: 8, scope: !3411)
!3580 = !DILocation(line: 687, column: 5, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3582, file: !286, line: 686, column: 22)
!3582 = distinct !DILexicalBlock(scope: !3411, file: !286, line: 686, column: 8)
!3583 = !DILocation(line: 687, column: 17, scope: !3581)
!3584 = !DILocation(line: 688, column: 4, scope: !3581)
!3585 = !DILocation(line: 698, column: 18, scope: !3417)
!3586 = !DILocation(line: 0, scope: !3417)
!3587 = !DILocation(line: 700, column: 8, scope: !3417)
!3588 = !DILocation(line: 704, column: 6, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !286, line: 703, column: 12)
!3590 = distinct !DILexicalBlock(scope: !3591, file: !286, line: 701, column: 9)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !286, line: 700, column: 22)
!3592 = distinct !DILexicalBlock(scope: !3417, file: !286, line: 700, column: 8)
!3593 = !DILocation(line: 704, column: 24, scope: !3589)
!3594 = !DILocation(line: 706, column: 4, scope: !3591)
!3595 = !DILocation(line: 709, column: 4, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3597, file: !286, line: 709, column: 4)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !286, line: 709, column: 4)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !286, line: 709, column: 4)
!3599 = distinct !DILexicalBlock(scope: !3418, file: !286, line: 708, column: 10)
!3600 = !DILocation(line: 0, scope: !3412)
!3601 = !DILocation(line: 0, scope: !3398)
!3602 = !DILocation(line: 720, column: 6, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3348, file: !286, line: 720, column: 6)
!3604 = !DILocation(line: 720, column: 17, scope: !3603)
!3605 = !DILocation(line: 720, column: 31, scope: !3603)
!3606 = !DILocation(line: 720, column: 6, scope: !3348)
!3607 = !DILocation(line: 721, column: 3, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !286, line: 721, column: 3)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !286, line: 721, column: 3)
!3610 = distinct !DILexicalBlock(scope: !3611, file: !286, line: 721, column: 3)
!3611 = distinct !DILexicalBlock(scope: !3603, file: !286, line: 720, column: 38)
!3612 = !DILocation(line: 729, column: 6, scope: !3348)
!3613 = !DILocation(line: 730, column: 21, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3615, file: !286, line: 729, column: 20)
!3615 = distinct !DILexicalBlock(scope: !3348, file: !286, line: 729, column: 6)
!3616 = !DILocation(line: 730, column: 27, scope: !3614)
!3617 = !DILocation(line: 730, column: 3, scope: !3614)
!3618 = !DILocation(line: 737, column: 22, scope: !3348)
!3619 = !DILocation(line: 737, column: 20, scope: !3348)
!3620 = !DILocation(line: 0, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3348, file: !286, line: 739, column: 6)
!3622 = !DILocation(line: 745, column: 17, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3621, file: !286, line: 743, column: 9)
!3624 = !DILocation(line: 745, column: 25, scope: !3623)
!3625 = !DILocation(line: 746, column: 17, scope: !3623)
!3626 = !DILocation(line: 746, column: 28, scope: !3623)
!3627 = !DILocation(line: 749, column: 29, scope: !3348)
!3628 = !DILocation(line: 749, column: 16, scope: !3348)
!3629 = !DILocation(line: 749, column: 27, scope: !3348)
!3630 = !DILocation(line: 756, column: 6, scope: !3424)
!3631 = !DILocation(line: 756, column: 6, scope: !3348)
!3632 = !DILocation(line: 757, column: 3, scope: !3422)
!3633 = !DILocation(line: 758, column: 10, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3420, file: !286, line: 758, column: 8)
!3635 = !DILocation(line: 758, column: 25, scope: !3634)
!3636 = !DILocation(line: 758, column: 8, scope: !3420)
!3637 = !DILocation(line: 0, scope: !3420)
!3638 = !DILocation(line: 765, column: 8, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3420, file: !286, line: 765, column: 8)
!3640 = !DILocation(line: 765, column: 19, scope: !3639)
!3641 = !DILocation(line: 765, column: 23, scope: !3639)
!3642 = !DILocation(line: 765, column: 8, scope: !3420)
!3643 = !DILocation(line: 762, column: 33, scope: !3420)
!3644 = !DILocation(line: 769, column: 8, scope: !3420)
!3645 = !DILocation(line: 769, column: 11, scope: !3420)
!3646 = !DILocation(line: 757, column: 27, scope: !3421)
!3647 = !DILocation(line: 757, column: 17, scope: !3421)
!3648 = distinct !{!3648, !3632, !3649}
!3649 = !DILocation(line: 770, column: 3, scope: !3422)
!3650 = !DILocation(line: 774, column: 16, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3652, file: !286, line: 774, column: 2)
!3652 = distinct !DILexicalBlock(scope: !3348, file: !286, line: 774, column: 2)
!3653 = !DILocation(line: 774, column: 2, scope: !3652)
!3654 = !DILocation(line: 776, column: 16, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3656, file: !286, line: 776, column: 7)
!3656 = distinct !DILexicalBlock(scope: !3651, file: !286, line: 774, column: 30)
!3657 = !DILocation(line: 776, column: 19, scope: !3655)
!3658 = !DILocation(line: 776, column: 34, scope: !3655)
!3659 = !DILocation(line: 776, column: 7, scope: !3656)
!3660 = !DILocation(line: 780, column: 7, scope: !3656)
!3661 = !DILocation(line: 782, column: 13, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !286, line: 780, column: 19)
!3663 = distinct !DILexicalBlock(scope: !3656, file: !286, line: 780, column: 7)
!3664 = !DILocation(line: 782, column: 8, scope: !3662)
!3665 = !DILocation(line: 782, column: 11, scope: !3662)
!3666 = !DILocation(line: 783, column: 3, scope: !3662)
!3667 = !DILocation(line: 785, column: 26, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3663, file: !286, line: 783, column: 10)
!3669 = !DILocation(line: 785, column: 41, scope: !3668)
!3670 = !DILocation(line: 785, column: 24, scope: !3668)
!3671 = !DILocation(line: 785, column: 8, scope: !3668)
!3672 = !DILocation(line: 787, column: 52, scope: !3668)
!3673 = !DILocation(line: 789, column: 11, scope: !3668)
!3674 = !DILocation(line: 789, column: 21, scope: !3668)
!3675 = !DILocation(line: 0, scope: !3663)
!3676 = !DILocation(line: 793, column: 7, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3656, file: !286, line: 793, column: 7)
!3678 = !DILocation(line: 793, column: 18, scope: !3677)
!3679 = !DILocation(line: 793, column: 22, scope: !3677)
!3680 = !DILocation(line: 793, column: 29, scope: !3677)
!3681 = !DILocation(line: 793, column: 7, scope: !3656)
!3682 = !DILocation(line: 797, column: 12, scope: !3656)
!3683 = !DILocation(line: 797, column: 7, scope: !3656)
!3684 = !DILocation(line: 797, column: 10, scope: !3656)
!3685 = !DILocation(line: 799, column: 3, scope: !3656)
!3686 = !DILocation(line: 800, column: 7, scope: !3656)
!3687 = !DILocation(line: 801, column: 2, scope: !3656)
!3688 = !DILocation(line: 338, column: 4, scope: !3348)
!3689 = !DILocation(line: 774, column: 26, scope: !3651)
!3690 = distinct !{!3690, !3653, !3691}
!3691 = !DILocation(line: 801, column: 2, scope: !3652)
!3692 = !DILocation(line: 808, column: 9, scope: !3348)
!3693 = !DILocation(line: 808, column: 2, scope: !3348)
!3694 = !DILocation(line: 813, column: 1, scope: !3348)
!3695 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !286, file: !286, line: 33, type: !3696, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3698)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{!345, !278}
!3698 = !{!3699}
!3699 = !DILocalVariable(name: "addr", arg: 1, scope: !3695, file: !286, line: 33, type: !278)
!3700 = !DILocation(line: 0, scope: !3695)
!3701 = !DILocation(line: 41, column: 9, scope: !3695)
!3702 = !DILocation(line: 41, column: 2, scope: !3695)
!3703 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3704, file: !3704, line: 24, type: !3705, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3707)
!3704 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3705 = !DISubroutineType(types: !3706)
!3706 = !{!345, !13}
!3707 = !{!3708}
!3708 = !DILocalVariable(name: "addr", arg: 1, scope: !3703, file: !3704, line: 24, type: !13)
!3709 = !DILocation(line: 0, scope: !3703)
!3710 = !DILocation(line: 49, column: 30, scope: !3703)
!3711 = !DILocation(line: 49, column: 57, scope: !3703)
!3712 = !DILocation(line: 49, column: 2, scope: !3703)
!3713 = distinct !DISubprogram(name: "cbprintf_package", scope: !286, file: !286, line: 815, type: !3714, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3716)
!3714 = !DISubroutineType(types: !3715)
!3715 = !{!119, !113, !239, !118, !278, null}
!3716 = !{!3717, !3718, !3719, !3720, !3721, !3722}
!3717 = !DILocalVariable(name: "packaged", arg: 1, scope: !3713, file: !286, line: 815, type: !113)
!3718 = !DILocalVariable(name: "len", arg: 2, scope: !3713, file: !286, line: 815, type: !239)
!3719 = !DILocalVariable(name: "flags", arg: 3, scope: !3713, file: !286, line: 815, type: !118)
!3720 = !DILocalVariable(name: "format", arg: 4, scope: !3713, file: !286, line: 816, type: !278)
!3721 = !DILocalVariable(name: "ap", scope: !3713, file: !286, line: 818, type: !3351)
!3722 = !DILocalVariable(name: "ret", scope: !3713, file: !286, line: 819, type: !119)
!3723 = !DILocation(line: 0, scope: !3713)
!3724 = !DILocation(line: 818, column: 2, scope: !3713)
!3725 = !DILocation(line: 818, column: 10, scope: !3713)
!3726 = !DILocation(line: 821, column: 2, scope: !3713)
!3727 = !DILocation(line: 822, column: 8, scope: !3713)
!3728 = !DILocation(line: 823, column: 2, scope: !3713)
!3729 = !DILocation(line: 825, column: 1, scope: !3713)
!3730 = !DILocation(line: 824, column: 2, scope: !3713)
!3731 = distinct !DISubprogram(name: "cbpprintf_external", scope: !286, file: !286, line: 827, type: !3732, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3742)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{!119, !3734, !3738, !113, !113}
!3734 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3384, line: 297, baseType: !3735)
!3735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3736, size: 32)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!119, null}
!3738 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3384, line: 328, baseType: !3739)
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3740, size: 32)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{!119, !3734, !113, !278, !3351}
!3742 = !{!3743, !3744, !3745, !3746, !3747, !3748, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761}
!3743 = !DILocalVariable(name: "out", arg: 1, scope: !3731, file: !286, line: 827, type: !3734)
!3744 = !DILocalVariable(name: "formatter", arg: 2, scope: !3731, file: !286, line: 828, type: !3738)
!3745 = !DILocalVariable(name: "ctx", arg: 3, scope: !3731, file: !286, line: 829, type: !113)
!3746 = !DILocalVariable(name: "packaged", arg: 4, scope: !3731, file: !286, line: 829, type: !113)
!3747 = !DILocalVariable(name: "buf", scope: !3731, file: !286, line: 831, type: !284)
!3748 = !DILocalVariable(name: "hdr", scope: !3731, file: !286, line: 832, type: !3749)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 32)
!3750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3384, line: 96, size: 64, elements: !3751)
!3751 = !{!3752, !3753}
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3750, file: !3384, line: 98, baseType: !3383, size: 32)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3750, file: !3384, line: 101, baseType: !106, size: 32, offset: 32)
!3754 = !DILocalVariable(name: "s", scope: !3731, file: !286, line: 833, type: !106)
!3755 = !DILocalVariable(name: "ps", scope: !3731, file: !286, line: 833, type: !283)
!3756 = !DILocalVariable(name: "i", scope: !3731, file: !286, line: 834, type: !32)
!3757 = !DILocalVariable(name: "args_size", scope: !3731, file: !286, line: 834, type: !32)
!3758 = !DILocalVariable(name: "s_nbr", scope: !3731, file: !286, line: 834, type: !32)
!3759 = !DILocalVariable(name: "ros_nbr", scope: !3731, file: !286, line: 834, type: !32)
!3760 = !DILocalVariable(name: "rws_nbr", scope: !3731, file: !286, line: 834, type: !32)
!3761 = !DILocalVariable(name: "s_idx", scope: !3731, file: !286, line: 834, type: !32)
!3762 = !DILocation(line: 0, scope: !3731)
!3763 = !DILocation(line: 836, column: 10, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3731, file: !286, line: 836, column: 6)
!3765 = !DILocation(line: 836, column: 6, scope: !3731)
!3766 = !DILocation(line: 842, column: 28, scope: !3731)
!3767 = !DILocation(line: 842, column: 14, scope: !3731)
!3768 = !DILocation(line: 852, column: 16, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !286, line: 852, column: 2)
!3770 = distinct !DILexicalBlock(scope: !3731, file: !286, line: 852, column: 2)
!3771 = !DILocation(line: 852, column: 2, scope: !3770)
!3772 = !DILocation(line: 841, column: 28, scope: !3731)
!3773 = !DILocation(line: 841, column: 14, scope: !3731)
!3774 = !DILocation(line: 841, column: 32, scope: !3731)
!3775 = !DILocation(line: 847, column: 19, scope: !3731)
!3776 = !DILocation(line: 843, column: 28, scope: !3731)
!3777 = !DILocation(line: 843, column: 14, scope: !3731)
!3778 = !DILocation(line: 847, column: 31, scope: !3731)
!3779 = !DILocation(line: 844, column: 28, scope: !3731)
!3780 = !DILocation(line: 844, column: 14, scope: !3731)
!3781 = !DILocation(line: 847, column: 45, scope: !3731)
!3782 = !DILocation(line: 847, column: 41, scope: !3731)
!3783 = !DILocation(line: 854, column: 24, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3769, file: !286, line: 852, column: 30)
!3785 = !DILocation(line: 854, column: 11, scope: !3784)
!3786 = !DILocation(line: 855, column: 30, scope: !3784)
!3787 = !DILocation(line: 855, column: 22, scope: !3784)
!3788 = !DILocation(line: 855, column: 8, scope: !3784)
!3789 = !DILocation(line: 857, column: 7, scope: !3784)
!3790 = !DILocation(line: 859, column: 8, scope: !3784)
!3791 = !DILocation(line: 859, column: 18, scope: !3784)
!3792 = !DILocation(line: 859, column: 5, scope: !3784)
!3793 = !DILocation(line: 852, column: 26, scope: !3769)
!3794 = distinct !{!3794, !3771, !3795}
!3795 = !DILocation(line: 860, column: 2, scope: !3770)
!3796 = !DILocation(line: 863, column: 6, scope: !3731)
!3797 = !DILocation(line: 866, column: 56, scope: !3731)
!3798 = !DILocation(line: 866, column: 9, scope: !3731)
!3799 = !DILocation(line: 866, column: 2, scope: !3731)
!3800 = !DILocation(line: 867, column: 1, scope: !3731)
!3801 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !286, file: !286, line: 179, type: !3802, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3804)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!119, !3734, !3738, !113, !278, !113}
!3804 = !{!3805, !3806, !3807, !3808, !3809, !3810}
!3805 = !DILocalVariable(name: "out", arg: 1, scope: !3801, file: !286, line: 179, type: !3734)
!3806 = !DILocalVariable(name: "formatter", arg: 2, scope: !3801, file: !286, line: 180, type: !3738)
!3807 = !DILocalVariable(name: "ctx", arg: 3, scope: !3801, file: !286, line: 181, type: !113)
!3808 = !DILocalVariable(name: "fmt", arg: 4, scope: !3801, file: !286, line: 182, type: !278)
!3809 = !DILocalVariable(name: "buf", arg: 5, scope: !3801, file: !286, line: 182, type: !113)
!3810 = !DILocalVariable(name: "u", scope: !3801, file: !286, line: 187, type: !3811)
!3811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3801, file: !286, line: 184, size: 32, elements: !3812)
!3812 = !{!3813, !3814}
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3811, file: !286, line: 185, baseType: !3351, size: 32)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3811, file: !286, line: 186, baseType: !113, size: 32)
!3815 = !DILocation(line: 0, scope: !3801)
!3816 = !DILocation(line: 191, column: 9, scope: !3801)
!3817 = !DILocation(line: 191, column: 2, scope: !3801)
!3818 = distinct !DISubprogram(name: "is_ptr", scope: !286, file: !286, line: 881, type: !3819, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3821)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!345, !278, !119}
!3821 = !{!3822, !3823, !3824, !3825, !3826}
!3822 = !DILocalVariable(name: "fmt", arg: 1, scope: !3818, file: !286, line: 881, type: !278)
!3823 = !DILocalVariable(name: "n", arg: 2, scope: !3818, file: !286, line: 881, type: !119)
!3824 = !DILocalVariable(name: "c", scope: !3818, file: !286, line: 883, type: !107)
!3825 = !DILocalVariable(name: "mod", scope: !3818, file: !286, line: 884, type: !345)
!3826 = !DILocalVariable(name: "cnt", scope: !3818, file: !286, line: 885, type: !119)
!3827 = !DILocation(line: 0, scope: !3818)
!3828 = !DILocation(line: 887, column: 14, scope: !3818)
!3829 = !DILocation(line: 887, column: 22, scope: !3818)
!3830 = !DILocation(line: 887, column: 2, scope: !3818)
!3831 = !DILocation(line: 887, column: 18, scope: !3818)
!3832 = !DILocation(line: 888, column: 7, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3818, file: !286, line: 887, column: 31)
!3834 = !DILocation(line: 889, column: 12, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !286, line: 889, column: 8)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !286, line: 888, column: 12)
!3837 = distinct !DILexicalBlock(scope: !3833, file: !286, line: 888, column: 7)
!3838 = !DILocation(line: 889, column: 8, scope: !3836)
!3839 = !DILocation(line: 890, column: 11, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3841, file: !286, line: 890, column: 9)
!3841 = distinct !DILexicalBlock(scope: !3835, file: !286, line: 889, column: 18)
!3842 = !DILocation(line: 890, column: 9, scope: !3841)
!3843 = !DILocation(line: 892, column: 16, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3840, file: !286, line: 892, column: 16)
!3845 = !DILocation(line: 892, column: 16, scope: !3840)
!3846 = !DILocation(line: 895, column: 15, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3835, file: !286, line: 895, column: 15)
!3848 = !DILocation(line: 895, column: 15, scope: !3835)
!3849 = !DILocation(line: 900, column: 9, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3833, file: !286, line: 900, column: 7)
!3851 = !DILocation(line: 900, column: 7, scope: !3833)
!3852 = distinct !{!3852, !3830, !3853}
!3853 = !DILocation(line: 903, column: 2, scope: !3818)
!3854 = !DILocation(line: 906, column: 1, scope: !3818)
!3855 = distinct !DISubprogram(name: "is_fmt_spec", scope: !286, file: !286, line: 873, type: !3856, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3858)
!3856 = !DISubroutineType(types: !3857)
!3857 = !{!345, !107}
!3858 = !{!3859}
!3859 = !DILocalVariable(name: "c", arg: 1, scope: !3855, file: !286, line: 873, type: !107)
!3860 = !DILocation(line: 0, scope: !3855)
!3861 = !DILocation(line: 875, column: 19, scope: !3855)
!3862 = !DILocation(line: 875, column: 2, scope: !3855)
!3863 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !286, file: !286, line: 908, type: !3864, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3870)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!119, !113, !239, !3866, !113, !118, !2724, !239}
!3866 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3384, line: 308, baseType: !3867)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 32)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!119, !13, !239, !113}
!3870 = !{!3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3888, !3889, !3890, !3891, !3892, !3898, !3901, !3902, !3903, !3905, !3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3921, !3924, !3925, !3926, !3927, !3928, !3929, !3931, !3934, !3935, !3936}
!3871 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3863, file: !286, line: 908, type: !113)
!3872 = !DILocalVariable(name: "in_len", arg: 2, scope: !3863, file: !286, line: 909, type: !239)
!3873 = !DILocalVariable(name: "cb", arg: 3, scope: !3863, file: !286, line: 910, type: !3866)
!3874 = !DILocalVariable(name: "ctx", arg: 4, scope: !3863, file: !286, line: 911, type: !113)
!3875 = !DILocalVariable(name: "flags", arg: 5, scope: !3863, file: !286, line: 912, type: !118)
!3876 = !DILocalVariable(name: "strl", arg: 6, scope: !3863, file: !286, line: 913, type: !2724)
!3877 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3863, file: !286, line: 914, type: !239)
!3878 = !DILocalVariable(name: "buf", scope: !3863, file: !286, line: 918, type: !284)
!3879 = !DILocalVariable(name: "buf32", scope: !3863, file: !286, line: 919, type: !900)
!3880 = !DILocalVariable(name: "args_size", scope: !3863, file: !286, line: 920, type: !32)
!3881 = !DILocalVariable(name: "ros_nbr", scope: !3863, file: !286, line: 920, type: !32)
!3882 = !DILocalVariable(name: "rws_nbr", scope: !3863, file: !286, line: 920, type: !32)
!3883 = !DILocalVariable(name: "fmt_present", scope: !3863, file: !286, line: 921, type: !345)
!3884 = !DILocalVariable(name: "rw_cpy", scope: !3863, file: !286, line: 922, type: !345)
!3885 = !DILocalVariable(name: "ro_cpy", scope: !3863, file: !286, line: 923, type: !345)
!3886 = !DILocalVariable(name: "in_desc", scope: !3863, file: !286, line: 924, type: !3887)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3387, size: 32)
!3888 = !DILocalVariable(name: "out_len", scope: !3863, file: !286, line: 960, type: !119)
!3889 = !DILocalVariable(name: "fmt", scope: !3863, file: !286, line: 965, type: !278)
!3890 = !DILocalVariable(name: "str_pos", scope: !3863, file: !286, line: 966, type: !284)
!3891 = !DILocalVariable(name: "strl_cnt", scope: !3863, file: !286, line: 967, type: !239)
!3892 = !DILocalVariable(name: "i", scope: !3893, file: !286, line: 973, type: !119)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !286, line: 973, column: 4)
!3894 = distinct !DILexicalBlock(scope: !3895, file: !286, line: 972, column: 15)
!3895 = distinct !DILexicalBlock(scope: !3896, file: !286, line: 972, column: 7)
!3896 = distinct !DILexicalBlock(scope: !3897, file: !286, line: 970, column: 18)
!3897 = distinct !DILexicalBlock(scope: !3863, file: !286, line: 970, column: 6)
!3898 = !DILocalVariable(name: "str", scope: !3899, file: !286, line: 974, type: !278)
!3899 = distinct !DILexicalBlock(scope: !3900, file: !286, line: 973, column: 38)
!3900 = distinct !DILexicalBlock(scope: !3893, file: !286, line: 973, column: 4)
!3901 = !DILocalVariable(name: "len", scope: !3899, file: !286, line: 975, type: !119)
!3902 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3896, file: !286, line: 990, type: !345)
!3903 = !DILocalVariable(name: "i", scope: !3904, file: !286, line: 995, type: !119)
!3904 = distinct !DILexicalBlock(scope: !3896, file: !286, line: 995, column: 3)
!3905 = !DILocalVariable(name: "arg_idx", scope: !3906, file: !286, line: 996, type: !185)
!3906 = distinct !DILexicalBlock(scope: !3907, file: !286, line: 995, column: 37)
!3907 = distinct !DILexicalBlock(scope: !3904, file: !286, line: 995, column: 3)
!3908 = !DILocalVariable(name: "arg_pos", scope: !3906, file: !286, line: 997, type: !185)
!3909 = !DILocalVariable(name: "str", scope: !3906, file: !286, line: 998, type: !278)
!3910 = !DILocalVariable(name: "is_ro", scope: !3906, file: !286, line: 999, type: !345)
!3911 = !DILocalVariable(name: "len", scope: !3906, file: !286, line: 1000, type: !119)
!3912 = !DILocalVariable(name: "out_desc", scope: !3863, file: !286, line: 1038, type: !3387)
!3913 = !DILocalVariable(name: "cpy_str_pos", scope: !3863, file: !286, line: 1040, type: !3369)
!3914 = !DILocalVariable(name: "keep_str_pos", scope: !3863, file: !286, line: 1042, type: !3369)
!3915 = !DILocalVariable(name: "scpy_cnt", scope: !3863, file: !286, line: 1043, type: !185)
!3916 = !DILocalVariable(name: "keep_cnt", scope: !3863, file: !286, line: 1044, type: !185)
!3917 = !DILocalVariable(name: "dst", scope: !3863, file: !286, line: 1045, type: !284)
!3918 = !DILocalVariable(name: "rv", scope: !3863, file: !286, line: 1046, type: !119)
!3919 = !DILocalVariable(name: "i", scope: !3920, file: !286, line: 1074, type: !119)
!3920 = distinct !DILexicalBlock(scope: !3863, file: !286, line: 1074, column: 2)
!3921 = !DILocalVariable(name: "arg_idx", scope: !3922, file: !286, line: 1075, type: !185)
!3922 = distinct !DILexicalBlock(scope: !3923, file: !286, line: 1074, column: 36)
!3923 = distinct !DILexicalBlock(scope: !3920, file: !286, line: 1074, column: 2)
!3924 = !DILocalVariable(name: "arg_pos", scope: !3922, file: !286, line: 1076, type: !185)
!3925 = !DILocalVariable(name: "str", scope: !3922, file: !286, line: 1077, type: !278)
!3926 = !DILocalVariable(name: "is_ro", scope: !3922, file: !286, line: 1078, type: !345)
!3927 = !DILocalVariable(name: "in_desc_backup", scope: !3863, file: !286, line: 1114, type: !3387)
!3928 = !DILocalVariable(name: "strs_len", scope: !3863, file: !286, line: 1134, type: !239)
!3929 = !DILocalVariable(name: "i", scope: !3930, file: !286, line: 1143, type: !119)
!3930 = distinct !DILexicalBlock(scope: !3863, file: !286, line: 1143, column: 2)
!3931 = !DILocalVariable(name: "loc", scope: !3932, file: !286, line: 1144, type: !185)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !286, line: 1143, column: 37)
!3933 = distinct !DILexicalBlock(scope: !3930, file: !286, line: 1143, column: 2)
!3934 = !DILocalVariable(name: "str", scope: !3932, file: !286, line: 1145, type: !278)
!3935 = !DILocalVariable(name: "str_len", scope: !3932, file: !286, line: 1146, type: !199)
!3936 = !DILabel(scope: !3937, name: "calculate_string_length", file: !286, line: 1021)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !286, line: 1020, column: 56)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !286, line: 1020, column: 15)
!3939 = distinct !DILexicalBlock(scope: !3906, file: !286, line: 1014, column: 8)
!3940 = !DILocation(line: 0, scope: !3863)
!3941 = !DILocation(line: 916, column: 2, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !286, line: 916, column: 2)
!3943 = distinct !DILexicalBlock(scope: !3863, file: !286, line: 916, column: 2)
!3944 = !DILocation(line: 916, column: 2, scope: !3943)
!3945 = !DILocation(line: 916, column: 2, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3942, file: !286, line: 916, column: 2)
!3947 = !DILocation(line: 919, column: 20, scope: !3863)
!3948 = !DILocation(line: 921, column: 27, scope: !3863)
!3949 = !DILocation(line: 921, column: 21, scope: !3863)
!3950 = !DILocation(line: 926, column: 18, scope: !3863)
!3951 = !DILocation(line: 926, column: 11, scope: !3863)
!3952 = !DILocation(line: 926, column: 34, scope: !3863)
!3953 = !DILocation(line: 931, column: 21, scope: !3863)
!3954 = !DILocation(line: 931, column: 12, scope: !3863)
!3955 = !DILocation(line: 932, column: 11, scope: !3863)
!3956 = !DILocation(line: 932, column: 19, scope: !3863)
!3957 = !DILocation(line: 938, column: 21, scope: !3863)
!3958 = !DILocation(line: 938, column: 12, scope: !3863)
!3959 = !DILocation(line: 939, column: 19, scope: !3863)
!3960 = !DILocation(line: 939, column: 23, scope: !3863)
!3961 = !DILocation(line: 946, column: 14, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3863, file: !286, line: 946, column: 6)
!3963 = !DILocation(line: 947, column: 7, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !286, line: 947, column: 7)
!3965 = distinct !DILexicalBlock(scope: !3962, file: !286, line: 946, column: 26)
!3966 = !DILocation(line: 947, column: 7, scope: !3965)
!3967 = !DILocation(line: 948, column: 4, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3964, file: !286, line: 947, column: 11)
!3969 = !DILocation(line: 949, column: 3, scope: !3968)
!3970 = !DILocation(line: 958, column: 23, scope: !3863)
!3971 = !DILocation(line: 958, column: 14, scope: !3863)
!3972 = !DILocation(line: 958, column: 27, scope: !3863)
!3973 = !DILocation(line: 965, column: 41, scope: !3863)
!3974 = !DILocation(line: 965, column: 20, scope: !3863)
!3975 = !DILocation(line: 966, column: 22, scope: !3863)
!3976 = !DILocation(line: 970, column: 9, scope: !3897)
!3977 = !DILocation(line: 970, column: 6, scope: !3863)
!3978 = !DILocation(line: 972, column: 7, scope: !3896)
!3979 = !DILocation(line: 0, scope: !3893)
!3980 = !DILocation(line: 973, column: 4, scope: !3893)
!3981 = !DILocation(line: 974, column: 46, scope: !3899)
!3982 = !DILocation(line: 974, column: 40, scope: !3899)
!3983 = !DILocation(line: 974, column: 23, scope: !3899)
!3984 = !DILocation(line: 0, scope: !3899)
!3985 = !DILocation(line: 975, column: 15, scope: !3899)
!3986 = !DILocation(line: 978, column: 14, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3899, file: !286, line: 978, column: 9)
!3988 = !DILocation(line: 979, column: 25, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3987, file: !286, line: 978, column: 38)
!3990 = !DILocation(line: 979, column: 19, scope: !3989)
!3991 = !DILocation(line: 979, column: 6, scope: !3989)
!3992 = !DILocation(line: 979, column: 23, scope: !3989)
!3993 = !DILocation(line: 980, column: 5, scope: !3989)
!3994 = !DILocation(line: 981, column: 13, scope: !3899)
!3995 = !DILocation(line: 982, column: 12, scope: !3899)
!3996 = !DILocation(line: 973, column: 34, scope: !3900)
!3997 = !DILocation(line: 973, column: 22, scope: !3900)
!3998 = distinct !{!3998, !3980, !3999}
!3999 = !DILocation(line: 983, column: 4, scope: !3893)
!4000 = !DILocation(line: 985, column: 16, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !286, line: 985, column: 8)
!4002 = distinct !DILexicalBlock(scope: !3895, file: !286, line: 984, column: 10)
!4003 = !DILocation(line: 967, column: 9, scope: !3863)
!4004 = !DILocation(line: 971, column: 11, scope: !3896)
!4005 = !DILocation(line: 0, scope: !3896)
!4006 = !DILocation(line: 0, scope: !3904)
!4007 = !DILocation(line: 995, column: 21, scope: !3907)
!4008 = !DILocation(line: 995, column: 3, scope: !3904)
!4009 = !DILocation(line: 990, column: 34, scope: !3896)
!4010 = !DILocation(line: 990, column: 26, scope: !3896)
!4011 = !DILocation(line: 996, column: 30, scope: !3906)
!4012 = !DILocation(line: 0, scope: !3906)
!4013 = !DILocation(line: 997, column: 30, scope: !3906)
!4014 = !DILocation(line: 997, column: 22, scope: !3906)
!4015 = !DILocation(line: 998, column: 39, scope: !3906)
!4016 = !DILocation(line: 998, column: 22, scope: !3906)
!4017 = !DILocation(line: 999, column: 17, scope: !3906)
!4018 = !DILocation(line: 1002, column: 20, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !3906, file: !286, line: 1002, column: 8)
!4020 = !DILocation(line: 996, column: 22, scope: !3906)
!4021 = !DILocation(line: 1002, column: 35, scope: !4019)
!4022 = !DILocation(line: 1002, column: 23, scope: !4019)
!4023 = !DILocation(line: 1002, column: 8, scope: !3906)
!4024 = !DILocation(line: 1003, column: 5, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !286, line: 1003, column: 5)
!4026 = distinct !DILexicalBlock(scope: !4027, file: !286, line: 1003, column: 5)
!4027 = distinct !DILexicalBlock(scope: !4028, file: !286, line: 1003, column: 5)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !286, line: 1003, column: 5)
!4029 = distinct !DILexicalBlock(scope: !4019, file: !286, line: 1002, column: 45)
!4030 = !DILocation(line: 1010, column: 13, scope: !4029)
!4031 = !DILocation(line: 1011, column: 5, scope: !4029)
!4032 = !DILocation(line: 1014, column: 8, scope: !3906)
!4033 = !DILocation(line: 1015, column: 9, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !3939, file: !286, line: 1014, column: 15)
!4035 = !DILocation(line: 1018, column: 14, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !286, line: 1017, column: 12)
!4037 = distinct !DILexicalBlock(scope: !4034, file: !286, line: 1015, column: 9)
!4038 = !DILocation(line: 1020, column: 4, scope: !4034)
!4039 = !DILocation(line: 1020, column: 15, scope: !3939)
!4040 = !DILocation(line: 1021, column: 1, scope: !3937)
!4041 = !DILocation(line: 1022, column: 11, scope: !3937)
!4042 = !DILocation(line: 1025, column: 14, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !3937, file: !286, line: 1025, column: 9)
!4044 = !DILocation(line: 1026, column: 25, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4043, file: !286, line: 1025, column: 38)
!4046 = !DILocation(line: 1026, column: 19, scope: !4045)
!4047 = !DILocation(line: 1026, column: 6, scope: !4045)
!4048 = !DILocation(line: 1026, column: 23, scope: !4045)
!4049 = !DILocation(line: 1027, column: 5, scope: !4045)
!4050 = !DILocation(line: 1031, column: 21, scope: !3937)
!4051 = !DILocation(line: 1031, column: 13, scope: !3937)
!4052 = !DILocation(line: 1032, column: 4, scope: !3937)
!4053 = !DILocation(line: 995, column: 33, scope: !3907)
!4054 = distinct !{!4054, !4008, !4055}
!4055 = !DILocation(line: 1033, column: 3, scope: !3904)
!4056 = !DILocation(line: 1040, column: 10, scope: !3863)
!4057 = !DILocation(line: 1042, column: 10, scope: !3863)
!4058 = !DILocation(line: 1052, column: 6, scope: !3863)
!4059 = !DILocation(line: 1055, column: 9, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !286, line: 1052, column: 14)
!4061 = distinct !DILexicalBlock(scope: !3863, file: !286, line: 1052, column: 6)
!4062 = !DILocation(line: 1056, column: 2, scope: !4060)
!4063 = !DILocation(line: 1056, column: 21, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4061, file: !286, line: 1056, column: 13)
!4065 = !DILocation(line: 1066, column: 3, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4067, file: !286, line: 1065, column: 11)
!4067 = distinct !DILexicalBlock(scope: !3863, file: !286, line: 1065, column: 6)
!4068 = !DILocation(line: 1067, column: 2, scope: !4066)
!4069 = !DILocation(line: 1068, column: 10, scope: !3863)
!4070 = !DILocation(line: 0, scope: !3920)
!4071 = !DILocation(line: 1074, column: 20, scope: !3923)
!4072 = !DILocation(line: 1074, column: 2, scope: !3920)
!4073 = !DILocation(line: 1110, column: 24, scope: !3863)
!4074 = !DILocation(line: 1053, column: 12, scope: !4060)
!4075 = !DILocation(line: 1054, column: 12, scope: !4060)
!4076 = !DILocation(line: 1108, column: 30, scope: !3863)
!4077 = !DILocation(line: 1108, column: 40, scope: !3863)
!4078 = !DILocation(line: 1108, column: 38, scope: !3863)
!4079 = !DILocation(line: 1109, column: 31, scope: !3863)
!4080 = !DILocation(line: 1109, column: 24, scope: !3863)
!4081 = !DILocation(line: 1110, column: 31, scope: !3863)
!4082 = !DILocation(line: 1114, column: 31, scope: !3863)
!4083 = !DILocation(line: 1114, column: 48, scope: !3863)
!4084 = !DILocation(line: 1115, column: 13, scope: !3863)
!4085 = !DILocation(line: 1118, column: 7, scope: !3863)
!4086 = !DILocation(line: 1119, column: 9, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !3863, file: !286, line: 1119, column: 6)
!4088 = !DILocation(line: 1119, column: 6, scope: !3863)
!4089 = !DILocation(line: 1075, column: 29, scope: !3922)
!4090 = !DILocation(line: 1075, column: 21, scope: !3922)
!4091 = !DILocation(line: 0, scope: !3922)
!4092 = !DILocation(line: 1076, column: 29, scope: !3922)
!4093 = !DILocation(line: 1076, column: 21, scope: !3922)
!4094 = !DILocation(line: 1077, column: 38, scope: !3922)
!4095 = !DILocation(line: 1077, column: 21, scope: !3922)
!4096 = !DILocation(line: 1078, column: 16, scope: !3922)
!4097 = !DILocation(line: 1080, column: 19, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !3922, file: !286, line: 1080, column: 7)
!4099 = !DILocation(line: 1080, column: 34, scope: !4098)
!4100 = !DILocation(line: 1080, column: 22, scope: !4098)
!4101 = !DILocation(line: 1080, column: 7, scope: !3922)
!4102 = !DILocation(line: 1084, column: 7, scope: !3922)
!4103 = !DILocation(line: 1085, column: 8, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !286, line: 1084, column: 14)
!4105 = distinct !DILexicalBlock(scope: !3922, file: !286, line: 1084, column: 7)
!4106 = !DILocation(line: 1086, column: 5, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !286, line: 1086, column: 5)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !286, line: 1086, column: 5)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !286, line: 1085, column: 49)
!4110 = distinct !DILexicalBlock(scope: !4104, file: !286, line: 1085, column: 8)
!4111 = !DILocation(line: 1086, column: 5, scope: !4108)
!4112 = !DILocation(line: 1086, column: 5, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4107, file: !286, line: 1086, column: 5)
!4114 = !DILocation(line: 1087, column: 25, scope: !4109)
!4115 = !DILocation(line: 1087, column: 5, scope: !4109)
!4116 = !DILocation(line: 1088, column: 4, scope: !4109)
!4117 = !DILocation(line: 1088, column: 15, scope: !4110)
!4118 = !DILocation(line: 1089, column: 5, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !286, line: 1089, column: 5)
!4120 = distinct !DILexicalBlock(scope: !4121, file: !286, line: 1089, column: 5)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !286, line: 1088, column: 61)
!4122 = distinct !DILexicalBlock(scope: !4110, file: !286, line: 1088, column: 15)
!4123 = !DILocation(line: 1089, column: 5, scope: !4120)
!4124 = !DILocation(line: 1089, column: 5, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4119, file: !286, line: 1089, column: 5)
!4126 = !DILocation(line: 1090, column: 26, scope: !4121)
!4127 = !DILocation(line: 1090, column: 5, scope: !4121)
!4128 = !DILocation(line: 1091, column: 4, scope: !4121)
!4129 = !DILocation(line: 1095, column: 8, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4105, file: !286, line: 1094, column: 10)
!4131 = !DILocation(line: 1096, column: 5, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !286, line: 1096, column: 5)
!4133 = distinct !DILexicalBlock(scope: !4134, file: !286, line: 1096, column: 5)
!4134 = distinct !DILexicalBlock(scope: !4135, file: !286, line: 1095, column: 49)
!4135 = distinct !DILexicalBlock(scope: !4130, file: !286, line: 1095, column: 8)
!4136 = !DILocation(line: 1096, column: 5, scope: !4133)
!4137 = !DILocation(line: 1096, column: 5, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4132, file: !286, line: 1096, column: 5)
!4139 = !DILocation(line: 1097, column: 25, scope: !4134)
!4140 = !DILocation(line: 1097, column: 5, scope: !4134)
!4141 = !DILocation(line: 1098, column: 4, scope: !4134)
!4142 = !DILocation(line: 1099, column: 5, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !286, line: 1099, column: 5)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !286, line: 1099, column: 5)
!4145 = distinct !DILexicalBlock(scope: !4135, file: !286, line: 1098, column: 11)
!4146 = !DILocation(line: 1099, column: 5, scope: !4144)
!4147 = !DILocation(line: 1099, column: 5, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4143, file: !286, line: 1099, column: 5)
!4149 = !DILocation(line: 1100, column: 26, scope: !4145)
!4150 = !DILocation(line: 1100, column: 5, scope: !4145)
!4151 = !DILocation(line: 1100, column: 30, scope: !4145)
!4152 = !DILocation(line: 1101, column: 26, scope: !4145)
!4153 = !DILocation(line: 1101, column: 5, scope: !4145)
!4154 = !DILocation(line: 0, scope: !4105)
!4155 = !DILocation(line: 1074, column: 32, scope: !3923)
!4156 = distinct !{!4156, !4072, !4157}
!4157 = !DILocation(line: 1104, column: 2, scope: !3920)
!4158 = !DILocation(line: 1124, column: 13, scope: !3863)
!4159 = !DILocation(line: 1127, column: 10, scope: !3863)
!4160 = !DILocation(line: 1127, column: 7, scope: !3863)
!4161 = !DILocation(line: 1128, column: 9, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !3863, file: !286, line: 1128, column: 6)
!4163 = !DILocation(line: 1128, column: 6, scope: !3863)
!4164 = !DILocation(line: 1134, column: 27, scope: !3863)
!4165 = !DILocation(line: 1136, column: 7, scope: !3863)
!4166 = !DILocation(line: 1137, column: 9, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !3863, file: !286, line: 1137, column: 6)
!4168 = !DILocation(line: 1137, column: 6, scope: !3863)
!4169 = !DILocation(line: 1131, column: 10, scope: !3863)
!4170 = !DILocation(line: 1140, column: 10, scope: !3863)
!4171 = !DILocation(line: 0, scope: !3930)
!4172 = !DILocation(line: 1143, column: 20, scope: !3933)
!4173 = !DILocation(line: 1143, column: 2, scope: !3930)
!4174 = !DILocation(line: 1144, column: 3, scope: !3932)
!4175 = !DILocation(line: 1144, column: 17, scope: !3932)
!4176 = !DILocation(line: 0, scope: !3932)
!4177 = !DILocation(line: 1144, column: 11, scope: !3932)
!4178 = !DILocation(line: 1145, column: 38, scope: !3932)
!4179 = !DILocation(line: 1145, column: 21, scope: !3932)
!4180 = !DILocation(line: 1146, column: 22, scope: !3932)
!4181 = !DILocation(line: 1146, column: 29, scope: !3932)
!4182 = !DILocation(line: 1148, column: 8, scope: !3932)
!4183 = !DILocation(line: 1149, column: 10, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !3932, file: !286, line: 1149, column: 7)
!4185 = !DILocation(line: 1149, column: 7, scope: !3932)
!4186 = !DILocation(line: 1154, column: 8, scope: !3932)
!4187 = !DILocation(line: 1155, column: 10, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !3932, file: !286, line: 1155, column: 7)
!4189 = !DILocation(line: 1155, column: 7, scope: !3932)
!4190 = !DILocation(line: 1159, column: 2, scope: !3933)
!4191 = !DILocation(line: 1152, column: 11, scope: !3932)
!4192 = !DILocation(line: 1158, column: 11, scope: !3932)
!4193 = !DILocation(line: 1143, column: 33, scope: !3933)
!4194 = distinct !{!4194, !4173, !4195}
!4195 = !DILocation(line: 1159, column: 2, scope: !3930)
!4196 = !DILocation(line: 1162, column: 8, scope: !3863)
!4197 = !DILocation(line: 1164, column: 2, scope: !3863)
!4198 = !DILocation(line: 1165, column: 1, scope: !3863)
!4199 = distinct !DISubprogram(name: "get_package_len", scope: !286, file: !286, line: 196, type: !4200, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !4202)
!4200 = !DISubroutineType(types: !4201)
!4201 = !{!239, !113}
!4202 = !{!4203, !4204, !4205, !4206, !4207, !4208, !4209}
!4203 = !DILocalVariable(name: "packaged", arg: 1, scope: !4199, file: !286, line: 196, type: !113)
!4204 = !DILocalVariable(name: "buf", scope: !4199, file: !286, line: 200, type: !284)
!4205 = !DILocalVariable(name: "start", scope: !4199, file: !286, line: 201, type: !284)
!4206 = !DILocalVariable(name: "args_size", scope: !4199, file: !286, line: 202, type: !32)
!4207 = !DILocalVariable(name: "s_nbr", scope: !4199, file: !286, line: 202, type: !32)
!4208 = !DILocalVariable(name: "ros_nbr", scope: !4199, file: !286, line: 202, type: !32)
!4209 = !DILocalVariable(name: "i", scope: !4210, file: !286, line: 215, type: !119)
!4210 = distinct !DILexicalBlock(scope: !4199, file: !286, line: 215, column: 2)
!4211 = !DILocation(line: 0, scope: !4199)
!4212 = !DILocation(line: 198, column: 2, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !286, line: 198, column: 2)
!4214 = distinct !DILexicalBlock(scope: !4199, file: !286, line: 198, column: 2)
!4215 = !DILocation(line: 198, column: 2, scope: !4214)
!4216 = !DILocation(line: 198, column: 2, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4213, file: !286, line: 198, column: 2)
!4218 = !DILocation(line: 204, column: 14, scope: !4199)
!4219 = !DILocation(line: 204, column: 21, scope: !4199)
!4220 = !DILocation(line: 205, column: 14, scope: !4199)
!4221 = !DILocation(line: 206, column: 14, scope: !4199)
!4222 = !DILocation(line: 209, column: 6, scope: !4199)
!4223 = !DILocation(line: 212, column: 6, scope: !4199)
!4224 = !DILocation(line: 0, scope: !4210)
!4225 = !DILocation(line: 215, column: 20, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4210, file: !286, line: 215, column: 2)
!4227 = !DILocation(line: 215, column: 2, scope: !4210)
!4228 = !DILocation(line: 220, column: 33, scope: !4199)
!4229 = !DILocation(line: 220, column: 2, scope: !4199)
!4230 = !DILocation(line: 216, column: 6, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4226, file: !286, line: 215, column: 34)
!4232 = !DILocation(line: 217, column: 10, scope: !4231)
!4233 = !DILocation(line: 217, column: 36, scope: !4231)
!4234 = !DILocation(line: 217, column: 7, scope: !4231)
!4235 = !DILocation(line: 215, column: 30, scope: !4226)
!4236 = distinct !{!4236, !4227, !4237}
!4237 = !DILocation(line: 218, column: 2, scope: !4210)
!4238 = distinct !DISubprogram(name: "append_string", scope: !286, file: !286, line: 223, type: !4239, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !4241)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{!119, !3866, !113, !278, !199}
!4241 = !{!4242, !4243, !4244, !4245}
!4242 = !DILocalVariable(name: "cb", arg: 1, scope: !4238, file: !286, line: 223, type: !3866)
!4243 = !DILocalVariable(name: "ctx", arg: 2, scope: !4238, file: !286, line: 223, type: !113)
!4244 = !DILocalVariable(name: "str", arg: 3, scope: !4238, file: !286, line: 223, type: !278)
!4245 = !DILocalVariable(name: "strl", arg: 4, scope: !4238, file: !286, line: 223, type: !199)
!4246 = !DILocation(line: 0, scope: !4238)
!4247 = !DILocation(line: 225, column: 9, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4238, file: !286, line: 225, column: 6)
!4249 = !DILocation(line: 225, column: 6, scope: !4238)
!4250 = !DILocation(line: 226, column: 14, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4248, file: !286, line: 225, column: 18)
!4252 = !DILocation(line: 226, column: 12, scope: !4251)
!4253 = !DILocation(line: 226, column: 3, scope: !4251)
!4254 = !DILocation(line: 229, column: 14, scope: !4238)
!4255 = !DILocation(line: 229, column: 9, scope: !4238)
!4256 = !DILocation(line: 229, column: 27, scope: !4238)
!4257 = !DILocation(line: 229, column: 39, scope: !4238)
!4258 = !DILocation(line: 230, column: 17, scope: !4238)
!4259 = !DILocation(line: 230, column: 9, scope: !4238)
!4260 = !DILocation(line: 230, column: 2, scope: !4238)
!4261 = !DILocation(line: 231, column: 1, scope: !4238)
!4262 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !299, file: !299, line: 45, type: !301, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4263)
!4263 = !{!4264}
!4264 = !DILocalVariable(name: "c", arg: 1, scope: !4262, file: !299, line: 45, type: !119)
!4265 = !DILocation(line: 0, scope: !4262)
!4266 = !DILocation(line: 50, column: 2, scope: !4262)
!4267 = distinct !DISubprogram(name: "__printk_hook_install", scope: !299, file: !299, line: 63, type: !4268, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4270)
!4268 = !DISubroutineType(types: !4269)
!4269 = !{null, !300}
!4270 = !{!4271}
!4271 = !DILocalVariable(name: "fn", arg: 1, scope: !4267, file: !299, line: 63, type: !300)
!4272 = !DILocation(line: 0, scope: !4267)
!4273 = !DILocation(line: 65, column: 12, scope: !4267)
!4274 = !DILocation(line: 66, column: 1, scope: !4267)
!4275 = distinct !DISubprogram(name: "__printk_get_hook", scope: !299, file: !299, line: 76, type: !4276, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !2102)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{!113}
!4278 = !DILocation(line: 78, column: 9, scope: !4275)
!4279 = !DILocation(line: 78, column: 2, scope: !4275)
!4280 = distinct !DISubprogram(name: "vprintk", scope: !299, file: !299, line: 113, type: !4281, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4289)
!4281 = !DISubroutineType(types: !4282)
!4282 = !{null, !278, !4283}
!4283 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3352, line: 99, baseType: !4284)
!4284 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3352, line: 40, baseType: !4285)
!4285 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !299, baseType: !4286)
!4286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4287)
!4287 = !{!4288}
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4286, file: !299, line: 79, baseType: !113, size: 32)
!4289 = !{!4290, !4291, !4292}
!4290 = !DILocalVariable(name: "fmt", arg: 1, scope: !4280, file: !299, line: 113, type: !278)
!4291 = !DILocalVariable(name: "ap", arg: 2, scope: !4280, file: !299, line: 113, type: !4283)
!4292 = !DILocalVariable(name: "ctx", scope: !4293, file: !299, line: 121, type: !4295)
!4293 = distinct !DILexicalBlock(scope: !4294, file: !299, line: 120, column: 27)
!4294 = distinct !DILexicalBlock(scope: !4280, file: !299, line: 120, column: 6)
!4295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !299, line: 81, size: 32, elements: !4296)
!4296 = !{!4297, !4298}
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4295, file: !299, line: 85, baseType: !32, size: 32)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4295, file: !299, line: 86, baseType: !4299, offset: 32)
!4299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, elements: !4300)
!4300 = !{!4301}
!4301 = !DISubrange(count: 0)
!4302 = !DILocation(line: 0, scope: !4280)
!4303 = !DILocation(line: 148, column: 3, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4294, file: !299, line: 138, column: 9)
!4305 = !DILocation(line: 155, column: 1, scope: !4280)
!4306 = distinct !DISubprogram(name: "char_out", scope: !299, file: !299, line: 107, type: !4307, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4309)
!4307 = !DISubroutineType(types: !4308)
!4308 = !{!119, !119, !113}
!4309 = !{!4310, !4311}
!4310 = !DILocalVariable(name: "c", arg: 1, scope: !4306, file: !299, line: 107, type: !119)
!4311 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4306, file: !299, line: 107, type: !113)
!4312 = !DILocation(line: 0, scope: !4306)
!4313 = !DILocation(line: 110, column: 9, scope: !4306)
!4314 = !DILocation(line: 110, column: 2, scope: !4306)
!4315 = distinct !DISubprogram(name: "cbvprintf", scope: !3384, file: !3384, line: 739, type: !4316, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4318)
!4316 = !DISubroutineType(types: !4317)
!4317 = !{!119, !3734, !113, !278, !4283}
!4318 = !{!4319, !4320, !4321, !4322}
!4319 = !DILocalVariable(name: "out", arg: 1, scope: !4315, file: !3384, line: 739, type: !3734)
!4320 = !DILocalVariable(name: "ctx", arg: 2, scope: !4315, file: !3384, line: 739, type: !113)
!4321 = !DILocalVariable(name: "format", arg: 3, scope: !4315, file: !3384, line: 739, type: !278)
!4322 = !DILocalVariable(name: "ap", arg: 4, scope: !4315, file: !3384, line: 739, type: !4283)
!4323 = !DILocation(line: 0, scope: !4315)
!4324 = !DILocation(line: 741, column: 9, scope: !4315)
!4325 = !DILocation(line: 741, column: 2, scope: !4315)
!4326 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !299, file: !299, line: 157, type: !4327, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4329)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{null, !106, !239}
!4329 = !{!4330, !4331, !4332}
!4330 = !DILocalVariable(name: "c", arg: 1, scope: !4326, file: !299, line: 157, type: !106)
!4331 = !DILocalVariable(name: "n", arg: 2, scope: !4326, file: !299, line: 157, type: !239)
!4332 = !DILocalVariable(name: "i", scope: !4326, file: !299, line: 159, type: !239)
!4333 = !DILocation(line: 0, scope: !4326)
!4334 = !DILocation(line: 164, column: 16, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4336, file: !299, line: 164, column: 2)
!4336 = distinct !DILexicalBlock(scope: !4326, file: !299, line: 164, column: 2)
!4337 = !DILocation(line: 164, column: 2, scope: !4336)
!4338 = !DILocation(line: 165, column: 3, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4335, file: !299, line: 164, column: 26)
!4340 = !DILocation(line: 165, column: 13, scope: !4339)
!4341 = !DILocation(line: 164, column: 22, scope: !4335)
!4342 = distinct !{!4342, !4337, !4343}
!4343 = !DILocation(line: 166, column: 2, scope: !4336)
!4344 = !DILocation(line: 171, column: 1, scope: !4326)
!4345 = distinct !DISubprogram(name: "printk", scope: !299, file: !299, line: 203, type: !4346, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4348)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{null, !278, null}
!4348 = !{!4349, !4350}
!4349 = !DILocalVariable(name: "fmt", arg: 1, scope: !4345, file: !299, line: 203, type: !278)
!4350 = !DILocalVariable(name: "ap", scope: !4345, file: !299, line: 205, type: !4283)
!4351 = !DILocation(line: 0, scope: !4345)
!4352 = !DILocation(line: 205, column: 2, scope: !4345)
!4353 = !DILocation(line: 205, column: 10, scope: !4345)
!4354 = !DILocation(line: 207, column: 2, scope: !4345)
!4355 = !DILocation(line: 209, column: 2, scope: !4345)
!4356 = !DILocation(line: 211, column: 2, scope: !4345)
!4357 = !DILocation(line: 212, column: 1, scope: !4345)
!4358 = distinct !DISubprogram(name: "snprintk", scope: !299, file: !299, line: 239, type: !4359, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4361)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{!119, !106, !239, !278, null}
!4361 = !{!4362, !4363, !4364, !4365, !4366}
!4362 = !DILocalVariable(name: "str", arg: 1, scope: !4358, file: !299, line: 239, type: !106)
!4363 = !DILocalVariable(name: "size", arg: 2, scope: !4358, file: !299, line: 239, type: !239)
!4364 = !DILocalVariable(name: "fmt", arg: 3, scope: !4358, file: !299, line: 239, type: !278)
!4365 = !DILocalVariable(name: "ap", scope: !4358, file: !299, line: 241, type: !4283)
!4366 = !DILocalVariable(name: "ret", scope: !4358, file: !299, line: 242, type: !119)
!4367 = !DILocation(line: 0, scope: !4358)
!4368 = !DILocation(line: 241, column: 2, scope: !4358)
!4369 = !DILocation(line: 241, column: 10, scope: !4358)
!4370 = !DILocation(line: 244, column: 2, scope: !4358)
!4371 = !DILocation(line: 245, column: 8, scope: !4358)
!4372 = !DILocation(line: 246, column: 2, scope: !4358)
!4373 = !DILocation(line: 249, column: 1, scope: !4358)
!4374 = !DILocation(line: 248, column: 2, scope: !4358)
!4375 = distinct !DISubprogram(name: "vsnprintk", scope: !299, file: !299, line: 251, type: !4376, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4378)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!119, !106, !239, !278, !4283}
!4378 = !{!4379, !4380, !4381, !4382, !4383}
!4379 = !DILocalVariable(name: "str", arg: 1, scope: !4375, file: !299, line: 251, type: !106)
!4380 = !DILocalVariable(name: "size", arg: 2, scope: !4375, file: !299, line: 251, type: !239)
!4381 = !DILocalVariable(name: "fmt", arg: 3, scope: !4375, file: !299, line: 251, type: !278)
!4382 = !DILocalVariable(name: "ap", arg: 4, scope: !4375, file: !299, line: 251, type: !4283)
!4383 = !DILocalVariable(name: "ctx", scope: !4375, file: !299, line: 253, type: !4384)
!4384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !299, line: 217, size: 96, elements: !4385)
!4385 = !{!4386, !4387, !4388}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4384, file: !299, line: 218, baseType: !106, size: 32)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4384, file: !299, line: 219, baseType: !119, size: 32, offset: 32)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4384, file: !299, line: 220, baseType: !119, size: 32, offset: 64)
!4389 = !DILocation(line: 0, scope: !4375)
!4390 = !DILocation(line: 253, column: 2, scope: !4375)
!4391 = !DILocation(line: 253, column: 21, scope: !4375)
!4392 = !DILocation(line: 253, column: 27, scope: !4375)
!4393 = !DILocation(line: 255, column: 2, scope: !4375)
!4394 = !DILocation(line: 257, column: 10, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4375, file: !299, line: 257, column: 6)
!4396 = !DILocation(line: 257, column: 22, scope: !4395)
!4397 = !DILocation(line: 257, column: 16, scope: !4395)
!4398 = !DILocation(line: 257, column: 6, scope: !4375)
!4399 = !DILocation(line: 258, column: 3, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4395, file: !299, line: 257, column: 27)
!4401 = !DILocation(line: 258, column: 18, scope: !4400)
!4402 = !DILocation(line: 259, column: 2, scope: !4400)
!4403 = !DILocation(line: 262, column: 1, scope: !4375)
!4404 = !DILocation(line: 261, column: 2, scope: !4375)
!4405 = distinct !DISubprogram(name: "str_out", scope: !299, file: !299, line: 223, type: !4406, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4409)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!119, !119, !4408}
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 32)
!4409 = !{!4410, !4411}
!4410 = !DILocalVariable(name: "c", arg: 1, scope: !4405, file: !299, line: 223, type: !119)
!4411 = !DILocalVariable(name: "ctx", arg: 2, scope: !4405, file: !299, line: 223, type: !4408)
!4412 = !DILocation(line: 0, scope: !4405)
!4413 = !DILocation(line: 225, column: 11, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4405, file: !299, line: 225, column: 6)
!4415 = !DILocation(line: 225, column: 15, scope: !4414)
!4416 = !DILocation(line: 0, scope: !4414)
!4417 = !DILocation(line: 225, column: 23, scope: !4414)
!4418 = !DILocation(line: 225, column: 45, scope: !4414)
!4419 = !DILocation(line: 225, column: 37, scope: !4414)
!4420 = !DILocation(line: 225, column: 6, scope: !4405)
!4421 = !DILocation(line: 226, column: 8, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4414, file: !299, line: 225, column: 50)
!4423 = !DILocation(line: 226, column: 13, scope: !4422)
!4424 = !DILocation(line: 227, column: 3, scope: !4422)
!4425 = !DILocation(line: 230, column: 29, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4405, file: !299, line: 230, column: 6)
!4427 = !DILocation(line: 230, column: 17, scope: !4426)
!4428 = !DILocation(line: 230, column: 6, scope: !4405)
!4429 = !DILocation(line: 231, column: 22, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4426, file: !299, line: 230, column: 34)
!4431 = !DILocation(line: 231, column: 3, scope: !4430)
!4432 = !DILocation(line: 231, column: 26, scope: !4430)
!4433 = !DILocation(line: 232, column: 2, scope: !4430)
!4434 = !DILocation(line: 233, column: 28, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4426, file: !299, line: 232, column: 9)
!4436 = !DILocation(line: 233, column: 22, scope: !4435)
!4437 = !DILocation(line: 233, column: 3, scope: !4435)
!4438 = !DILocation(line: 233, column: 26, scope: !4435)
!4439 = !DILocation(line: 237, column: 1, scope: !4405)
!4440 = distinct !DISubprogram(name: "z_thread_entry", scope: !4441, file: !4441, line: 30, type: !4442, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2452, retainedNodes: !4444)
!4441 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4442 = !DISubroutineType(types: !4443)
!4443 = !{null, !108, !113, !113, !113}
!4444 = !{!4445, !4446, !4447, !4448}
!4445 = !DILocalVariable(name: "entry", arg: 1, scope: !4440, file: !4441, line: 30, type: !108)
!4446 = !DILocalVariable(name: "p1", arg: 2, scope: !4440, file: !4441, line: 31, type: !113)
!4447 = !DILocalVariable(name: "p2", arg: 3, scope: !4440, file: !4441, line: 31, type: !113)
!4448 = !DILocalVariable(name: "p3", arg: 4, scope: !4440, file: !4441, line: 31, type: !113)
!4449 = !DILocation(line: 0, scope: !4440)
!4450 = !DILocation(line: 36, column: 2, scope: !4440)
!4451 = !DILocation(line: 38, column: 17, scope: !4440)
!4452 = !DILocation(line: 38, column: 2, scope: !4440)
!4453 = !DILocation(line: 45, column: 2, scope: !4440)
!4454 = distinct !DISubprogram(name: "k_current_get", scope: !245, file: !245, line: 530, type: !4455, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2452, retainedNodes: !2102)
!4455 = !DISubroutineType(types: !4456)
!4456 = !{!4457}
!4457 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !4458)
!4458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4459, size: 32)
!4459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !4460)
!4460 = !{!4461, !4519, !4531, !4532, !4533, !4534, !4535, !4541, !4556}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4459, file: !143, line: 247, baseType: !4462, size: 384)
!4462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !4463)
!4463 = !{!4464, !4488, !4495, !4496, !4497, !4506, !4507, !4508}
!4464 = !DIDerivedType(tag: DW_TAG_member, scope: !4462, file: !143, line: 60, baseType: !4465, size: 64)
!4465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4462, file: !143, line: 60, size: 64, elements: !4466)
!4466 = !{!4467, !4482}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4465, file: !143, line: 61, baseType: !4468, size: 64)
!4468 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !4469)
!4469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !4470)
!4470 = !{!4471, !4477}
!4471 = !DIDerivedType(tag: DW_TAG_member, scope: !4469, file: !153, line: 38, baseType: !4472, size: 32)
!4472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4469, file: !153, line: 38, size: 32, elements: !4473)
!4473 = !{!4474, !4476}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4472, file: !153, line: 39, baseType: !4475, size: 32)
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 32)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4472, file: !153, line: 40, baseType: !4475, size: 32)
!4477 = !DIDerivedType(tag: DW_TAG_member, scope: !4469, file: !153, line: 42, baseType: !4478, size: 32, offset: 32)
!4478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4469, file: !153, line: 42, size: 32, elements: !4479)
!4479 = !{!4480, !4481}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4478, file: !153, line: 43, baseType: !4475, size: 32)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4478, file: !153, line: 44, baseType: !4475, size: 32)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4465, file: !143, line: 62, baseType: !4483, size: 64)
!4483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !4484)
!4484 = !{!4485}
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4483, file: !169, line: 50, baseType: !4486, size: 64)
!4486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4487, size: 64, elements: !174)
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4483, size: 32)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4462, file: !143, line: 68, baseType: !4489, size: 32, offset: 64)
!4489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4490, size: 32)
!4490 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !4491)
!4491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !4492)
!4492 = !{!4493}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4491, file: !179, line: 232, baseType: !4494, size: 64)
!4494 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !4469)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4462, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4462, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!4497 = !DIDerivedType(tag: DW_TAG_member, scope: !4462, file: !143, line: 90, baseType: !4498, size: 16, offset: 112)
!4498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4462, file: !143, line: 90, size: 16, elements: !4499)
!4499 = !{!4500, !4505}
!4500 = !DIDerivedType(tag: DW_TAG_member, scope: !4498, file: !143, line: 91, baseType: !4501, size: 16)
!4501 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4498, file: !143, line: 91, size: 16, elements: !4502)
!4502 = !{!4503, !4504}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4501, file: !143, line: 96, baseType: !195, size: 8)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4501, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4498, file: !143, line: 100, baseType: !199, size: 16)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4462, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4462, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4462, file: !143, line: 131, baseType: !4509, size: 192, offset: 192)
!4509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !4510)
!4510 = !{!4511, !4512, !4518}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4509, file: !179, line: 245, baseType: !4468, size: 64)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4509, file: !179, line: 246, baseType: !4513, size: 32, offset: 64)
!4513 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !4514)
!4514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4515, size: 32)
!4515 = !DISubroutineType(types: !4516)
!4516 = !{null, !4517}
!4517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4509, size: 32)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4509, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4459, file: !143, line: 250, baseType: !4520, size: 288, offset: 384)
!4520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !4521)
!4521 = !{!4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530}
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4520, file: !216, line: 26, baseType: !118, size: 32)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4520, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4520, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4520, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4520, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4520, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4520, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4520, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4520, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4459, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4459, file: !143, line: 256, baseType: !4490, size: 64, offset: 704)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4459, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4459, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4459, file: !143, line: 300, baseType: !4536, size: 96, offset: 1056)
!4536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !4537)
!4537 = !{!4538, !4539, !4540}
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4536, file: !143, line: 153, baseType: !22, size: 32)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4536, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4536, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4459, file: !143, line: 325, baseType: !4542, size: 32, offset: 1152)
!4542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4543, size: 32)
!4543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !4544)
!4544 = !{!4545, !4551, !4552}
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4543, file: !245, line: 5074, baseType: !4546, size: 96)
!4546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !4547)
!4547 = !{!4548, !4549, !4550}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4546, file: !249, line: 57, baseType: !252, size: 32)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4546, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4546, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4543, file: !245, line: 5075, baseType: !4490, size: 64, offset: 96)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4543, file: !245, line: 5076, baseType: !4553, size: 32, offset: 160)
!4553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !4554)
!4554 = !{!4555}
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4553, file: !259, line: 52, baseType: !22, size: 32)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4459, file: !143, line: 343, baseType: !4557, size: 64, offset: 1184)
!4557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !4558)
!4558 = !{!4559, !4560}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4557, file: !216, line: 63, baseType: !118, size: 32)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4557, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!4561 = !DILocation(line: 535, column: 9, scope: !4454)
!4562 = !DILocation(line: 535, column: 2, scope: !4454)
!4563 = distinct !DISubprogram(name: "k_thread_abort", scope: !3270, file: !3270, line: 188, type: !4564, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2452, retainedNodes: !4566)
!4564 = !DISubroutineType(types: !4565)
!4565 = !{null, !4457}
!4566 = !{!4567}
!4567 = !DILocalVariable(name: "thread", arg: 1, scope: !4563, file: !3270, line: 188, type: !4457)
!4568 = !DILocation(line: 0, scope: !4563)
!4569 = !DILocation(line: 197, column: 2, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4563, file: !3270, line: 197, column: 2)
!4571 = !{i64 2155066230}
!4572 = !DILocation(line: 198, column: 2, scope: !4563)
!4573 = !DILocation(line: 199, column: 1, scope: !4563)
!4574 = distinct !DISubprogram(name: "z_current_get", scope: !3270, file: !3270, line: 173, type: !4455, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2452, retainedNodes: !2102)
!4575 = !DILocation(line: 180, column: 2, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4574, file: !3270, line: 180, column: 2)
!4577 = !{i64 2155066162}
!4578 = !DILocation(line: 181, column: 9, scope: !4574)
!4579 = !DILocation(line: 181, column: 2, scope: !4574)
!4580 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2458, file: !2458, line: 1338, type: !4581, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !4589)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{!119, !3734, !113, !278, !4583, !118}
!4583 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3352, line: 99, baseType: !4584)
!4584 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3352, line: 40, baseType: !4585)
!4585 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2458, baseType: !4586)
!4586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4587)
!4587 = !{!4588}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4586, file: !2458, baseType: !113, size: 32)
!4589 = !{!4590, !4591, !4592, !4593, !4594, !4595, !4599, !4600, !4601, !4603, !4608, !4651, !4654, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4666, !4667, !4668, !4672, !4675, !4677, !4680, !4681, !4682, !4687, !4693, !4696, !4700, !4706, !4710, !4713, !4715, !4718}
!4590 = !DILocalVariable(name: "out", arg: 1, scope: !4580, file: !2458, line: 1338, type: !3734)
!4591 = !DILocalVariable(name: "ctx", arg: 2, scope: !4580, file: !2458, line: 1338, type: !113)
!4592 = !DILocalVariable(name: "fp", arg: 3, scope: !4580, file: !2458, line: 1338, type: !278)
!4593 = !DILocalVariable(name: "ap", arg: 4, scope: !4580, file: !2458, line: 1339, type: !4583)
!4594 = !DILocalVariable(name: "flags", arg: 5, scope: !4580, file: !2458, line: 1339, type: !118)
!4595 = !DILocalVariable(name: "buf", scope: !4580, file: !2458, line: 1341, type: !4596)
!4596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 176, elements: !4597)
!4597 = !{!4598}
!4598 = !DISubrange(count: 22)
!4599 = !DILocalVariable(name: "count", scope: !4580, file: !2458, line: 1342, type: !239)
!4600 = !DILocalVariable(name: "sint", scope: !4580, file: !2458, line: 1343, type: !2477)
!4601 = !DILocalVariable(name: "tagged_ap", scope: !4580, file: !2458, line: 1345, type: !4602)
!4602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !345)
!4603 = !DILocalVariable(name: "rc", scope: !4604, file: !2458, line: 1377, type: !119)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !2458, line: 1377, column: 4)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !2458, line: 1376, column: 19)
!4606 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1376, column: 7)
!4607 = distinct !DILexicalBlock(scope: !4580, file: !2458, line: 1375, column: 19)
!4608 = !DILocalVariable(name: "state", scope: !4607, file: !2458, line: 1395, type: !4609)
!4609 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4580, file: !2458, line: 1392, size: 192, elements: !4610)
!4610 = !{!4611, !4619}
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4609, file: !2458, line: 1393, baseType: !4612, size: 64)
!4612 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2458, line: 166, size: 64, elements: !4613)
!4613 = !{!4614, !4615, !4616, !4617, !4618}
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4612, file: !2458, line: 168, baseType: !2477, size: 64)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4612, file: !2458, line: 171, baseType: !2480, size: 64)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4612, file: !2458, line: 174, baseType: !276, size: 64)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4612, file: !2458, line: 177, baseType: !274, size: 64)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4612, file: !2458, line: 180, baseType: !113, size: 32)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4609, file: !2458, line: 1394, baseType: !4620, size: 96, offset: 64)
!4620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2458, line: 189, size: 96, elements: !4621)
!4621 = !{!4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4646}
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4620, file: !2458, line: 191, baseType: !345, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4620, file: !2458, line: 194, baseType: !345, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4620, file: !2458, line: 197, baseType: !345, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4620, file: !2458, line: 200, baseType: !345, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4620, file: !2458, line: 203, baseType: !345, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4620, file: !2458, line: 206, baseType: !345, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4620, file: !2458, line: 209, baseType: !345, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4620, file: !2458, line: 212, baseType: !345, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4620, file: !2458, line: 219, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4620, file: !2458, line: 222, baseType: !345, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4620, file: !2458, line: 229, baseType: !345, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4620, file: !2458, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4620, file: !2458, line: 238, baseType: !345, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4620, file: !2458, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4620, file: !2458, line: 244, baseType: !345, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4620, file: !2458, line: 247, baseType: !345, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4620, file: !2458, line: 252, baseType: !345, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4620, file: !2458, line: 257, baseType: !345, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4620, file: !2458, line: 260, baseType: !186, size: 8, offset: 24)
!4641 = !DIDerivedType(tag: DW_TAG_member, scope: !4620, file: !2458, line: 262, baseType: !4642, size: 32, offset: 32)
!4642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4620, file: !2458, line: 262, size: 32, elements: !4643)
!4643 = !{!4644, !4645}
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4642, file: !2458, line: 267, baseType: !119, size: 32)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4642, file: !2458, line: 289, baseType: !119, size: 32)
!4646 = !DIDerivedType(tag: DW_TAG_member, scope: !4620, file: !2458, line: 292, baseType: !4647, size: 32, offset: 64)
!4647 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4620, file: !2458, line: 292, size: 32, elements: !4648)
!4648 = !{!4649, !4650}
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4647, file: !2458, line: 297, baseType: !119, size: 32)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4647, file: !2458, line: 306, baseType: !119, size: 32)
!4651 = !DILocalVariable(name: "conv", scope: !4607, file: !2458, line: 1400, type: !4652)
!4652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4653)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4620, size: 32)
!4654 = !DILocalVariable(name: "value", scope: !4607, file: !2458, line: 1401, type: !4655)
!4655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4656)
!4656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4612, size: 32)
!4657 = !DILocalVariable(name: "sp", scope: !4607, file: !2458, line: 1402, type: !278)
!4658 = !DILocalVariable(name: "width", scope: !4607, file: !2458, line: 1403, type: !119)
!4659 = !DILocalVariable(name: "precision", scope: !4607, file: !2458, line: 1404, type: !119)
!4660 = !DILocalVariable(name: "bps", scope: !4607, file: !2458, line: 1405, type: !278)
!4661 = !DILocalVariable(name: "bpe", scope: !4607, file: !2458, line: 1406, type: !278)
!4662 = !DILocalVariable(name: "sign", scope: !4607, file: !2458, line: 1407, type: !107)
!4663 = !DILocalVariable(name: "arg", scope: !4664, file: !2458, line: 1432, type: !119)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !2458, line: 1431, column: 24)
!4665 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1431, column: 7)
!4666 = !DILocalVariable(name: "specifier_cat", scope: !4607, file: !2458, line: 1468, type: !2457)
!4667 = !DILocalVariable(name: "length_mod", scope: !4607, file: !2458, line: 1470, type: !2465)
!4668 = !DILocalVariable(name: "rc", scope: !4669, file: !2458, line: 1575, type: !119)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !2458, line: 1575, column: 4)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !2458, line: 1574, column: 43)
!4671 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1574, column: 7)
!4672 = !DILocalVariable(name: "rc", scope: !4673, file: !2458, line: 1584, type: !119)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !2458, line: 1584, column: 4)
!4674 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1582, column: 28)
!4675 = !DILocalVariable(name: "len", scope: !4676, file: !2458, line: 1589, type: !239)
!4676 = distinct !DILexicalBlock(scope: !4674, file: !2458, line: 1586, column: 13)
!4677 = !DILocalVariable(name: "len", scope: !4678, file: !2458, line: 1641, type: !239)
!4678 = distinct !DILexicalBlock(scope: !4679, file: !2458, line: 1640, column: 24)
!4679 = distinct !DILexicalBlock(scope: !4674, file: !2458, line: 1640, column: 8)
!4680 = !DILocalVariable(name: "nj_len", scope: !4607, file: !2458, line: 1722, type: !239)
!4681 = !DILocalVariable(name: "pad_len", scope: !4607, file: !2458, line: 1723, type: !119)
!4682 = !DILocalVariable(name: "pad", scope: !4683, file: !2458, line: 1751, type: !107)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !2458, line: 1750, column: 26)
!4684 = distinct !DILexicalBlock(scope: !4685, file: !2458, line: 1750, column: 8)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !2458, line: 1747, column: 18)
!4686 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1747, column: 7)
!4687 = !DILocalVariable(name: "rc", scope: !4688, file: !2458, line: 1758, type: !119)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !2458, line: 1758, column: 7)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !2458, line: 1757, column: 21)
!4690 = distinct !DILexicalBlock(scope: !4691, file: !2458, line: 1757, column: 10)
!4691 = distinct !DILexicalBlock(scope: !4692, file: !2458, line: 1756, column: 26)
!4692 = distinct !DILexicalBlock(scope: !4683, file: !2458, line: 1756, column: 9)
!4693 = !DILocalVariable(name: "rc", scope: !4694, file: !2458, line: 1765, type: !119)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !2458, line: 1765, column: 6)
!4695 = distinct !DILexicalBlock(scope: !4683, file: !2458, line: 1764, column: 25)
!4696 = !DILocalVariable(name: "rc", scope: !4697, file: !2458, line: 1774, type: !119)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !2458, line: 1774, column: 4)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !2458, line: 1773, column: 18)
!4699 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1773, column: 7)
!4700 = !DILocalVariable(name: "rc", scope: !4701, file: !2458, line: 1819, type: !119)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !2458, line: 1819, column: 5)
!4702 = distinct !DILexicalBlock(scope: !4703, file: !2458, line: 1818, column: 44)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !2458, line: 1818, column: 8)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !2458, line: 1817, column: 10)
!4705 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1777, column: 7)
!4706 = !DILocalVariable(name: "rc", scope: !4707, file: !2458, line: 1823, type: !119)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !2458, line: 1823, column: 5)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2458, line: 1822, column: 26)
!4709 = distinct !DILexicalBlock(scope: !4704, file: !2458, line: 1822, column: 8)
!4710 = !DILocalVariable(name: "rc", scope: !4711, file: !2458, line: 1828, type: !119)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !2458, line: 1828, column: 5)
!4712 = distinct !DILexicalBlock(scope: !4704, file: !2458, line: 1827, column: 26)
!4713 = !DILocalVariable(name: "rc", scope: !4714, file: !2458, line: 1831, type: !119)
!4714 = distinct !DILexicalBlock(scope: !4704, file: !2458, line: 1831, column: 4)
!4715 = !DILocalVariable(name: "rc", scope: !4716, file: !2458, line: 1836, type: !119)
!4716 = distinct !DILexicalBlock(scope: !4717, file: !2458, line: 1836, column: 4)
!4717 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1835, column: 21)
!4718 = !DILabel(scope: !4674, name: "prec_int_pad0", file: !2458, line: 1634)
!4719 = !DILocation(line: 0, scope: !4580)
!4720 = !DILocation(line: 1341, column: 2, scope: !4580)
!4721 = !DILocation(line: 1341, column: 7, scope: !4580)
!4722 = !DILocation(line: 1375, column: 2, scope: !4580)
!4723 = !DILocation(line: 1342, column: 9, scope: !4580)
!4724 = !DILocation(line: 1375, column: 9, scope: !4580)
!4725 = !DILocation(line: 1377, column: 4, scope: !4604)
!4726 = !DILocation(line: 0, scope: !4604)
!4727 = !DILocation(line: 1377, column: 4, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4604, file: !2458, line: 1377, column: 4)
!4729 = distinct !{!4729, !4722, !4730}
!4730 = !DILocation(line: 1839, column: 2, scope: !4580)
!4731 = !DILocation(line: 1392, column: 3, scope: !4607)
!4732 = !DILocation(line: 1395, column: 5, scope: !4607)
!4733 = !DILocation(line: 0, scope: !4607)
!4734 = !DILocation(line: 1409, column: 8, scope: !4607)
!4735 = !DILocation(line: 1414, column: 13, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1414, column: 7)
!4737 = !DILocation(line: 1414, column: 7, scope: !4607)
!4738 = !DILocation(line: 1415, column: 12, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4736, file: !2458, line: 1414, column: 25)
!4740 = !DILocation(line: 1417, column: 14, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4739, file: !2458, line: 1417, column: 8)
!4742 = !DILocation(line: 1417, column: 8, scope: !4739)
!4743 = !DILocation(line: 1418, column: 21, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4741, file: !2458, line: 1417, column: 19)
!4745 = !DILocation(line: 1419, column: 13, scope: !4744)
!4746 = !DILocation(line: 1420, column: 4, scope: !4744)
!4747 = !DILocation(line: 1421, column: 20, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4736, file: !2458, line: 1421, column: 14)
!4749 = !DILocation(line: 1421, column: 14, scope: !4736)
!4750 = !DILocation(line: 1431, column: 13, scope: !4665)
!4751 = !DILocation(line: 1431, column: 7, scope: !4607)
!4752 = !DILocation(line: 1432, column: 14, scope: !4664)
!4753 = !DILocation(line: 0, scope: !4664)
!4754 = !DILocation(line: 1434, column: 12, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4664, file: !2458, line: 1434, column: 8)
!4756 = !DILocation(line: 1434, column: 8, scope: !4664)
!4757 = !DILocation(line: 1435, column: 24, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4755, file: !2458, line: 1434, column: 17)
!4759 = !DILocation(line: 1436, column: 4, scope: !4758)
!4760 = !DILocation(line: 1439, column: 20, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4665, file: !2458, line: 1439, column: 14)
!4762 = !DILocation(line: 1439, column: 14, scope: !4665)
!4763 = !DILocation(line: 1469, column: 37, scope: !4607)
!4764 = !DILocation(line: 1448, column: 20, scope: !4607)
!4765 = !DILocation(line: 1449, column: 22, scope: !4607)
!4766 = !DILocation(line: 1471, column: 34, scope: !4607)
!4767 = !DILocation(line: 1478, column: 7, scope: !4607)
!4768 = !DILocation(line: 1479, column: 4, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4770, file: !2458, line: 1478, column: 40)
!4770 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1478, column: 7)
!4771 = !DILocation(line: 1484, column: 19, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4769, file: !2458, line: 1479, column: 24)
!4773 = !DILocation(line: 1484, column: 17, scope: !4772)
!4774 = !DILocation(line: 1485, column: 5, scope: !4772)
!4775 = !DILocation(line: 1492, column: 20, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !2458, line: 1491, column: 12)
!4777 = distinct !DILexicalBlock(scope: !4772, file: !2458, line: 1487, column: 9)
!4778 = !DILocation(line: 1492, column: 18, scope: !4776)
!4779 = !DILocation(line: 1494, column: 5, scope: !4772)
!4780 = !DILocation(line: 1497, column: 23, scope: !4772)
!4781 = !DILocation(line: 1496, column: 17, scope: !4772)
!4782 = !DILocation(line: 1498, column: 5, scope: !4772)
!4783 = !DILocation(line: 1501, column: 23, scope: !4772)
!4784 = !DILocation(line: 1500, column: 17, scope: !4772)
!4785 = !DILocation(line: 1502, column: 5, scope: !4772)
!4786 = !DILocation(line: 1513, column: 23, scope: !4772)
!4787 = !DILocation(line: 1513, column: 6, scope: !4772)
!4788 = !DILocation(line: 1512, column: 17, scope: !4772)
!4789 = !DILocation(line: 1514, column: 5, scope: !4772)
!4790 = !DILocation(line: 0, scope: !4772)
!4791 = !DILocation(line: 1516, column: 8, scope: !4769)
!4792 = !DILocation(line: 1517, column: 19, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4794, file: !2458, line: 1516, column: 33)
!4794 = distinct !DILexicalBlock(scope: !4769, file: !2458, line: 1516, column: 8)
!4795 = !DILocation(line: 1517, column: 17, scope: !4793)
!4796 = !DILocation(line: 1518, column: 4, scope: !4793)
!4797 = !DILocation(line: 1519, column: 19, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !2458, line: 1518, column: 39)
!4799 = distinct !DILexicalBlock(scope: !4794, file: !2458, line: 1518, column: 15)
!4800 = !DILocation(line: 1519, column: 17, scope: !4798)
!4801 = !DILocation(line: 1520, column: 4, scope: !4798)
!4802 = !DILocation(line: 1522, column: 4, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4804, file: !2458, line: 1521, column: 47)
!4804 = distinct !DILexicalBlock(scope: !4770, file: !2458, line: 1521, column: 14)
!4805 = !DILocation(line: 1527, column: 19, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4803, file: !2458, line: 1522, column: 24)
!4807 = !DILocation(line: 1527, column: 17, scope: !4806)
!4808 = !DILocation(line: 1528, column: 5, scope: !4806)
!4809 = !DILocation(line: 0, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4806, file: !2458, line: 1530, column: 9)
!4811 = !DILocation(line: 1540, column: 23, scope: !4806)
!4812 = !DILocation(line: 1539, column: 17, scope: !4806)
!4813 = !DILocation(line: 1542, column: 5, scope: !4806)
!4814 = !DILocation(line: 1545, column: 23, scope: !4806)
!4815 = !DILocation(line: 1544, column: 17, scope: !4806)
!4816 = !DILocation(line: 1547, column: 5, scope: !4806)
!4817 = !DILocation(line: 1551, column: 23, scope: !4806)
!4818 = !DILocation(line: 1551, column: 6, scope: !4806)
!4819 = !DILocation(line: 1550, column: 17, scope: !4806)
!4820 = !DILocation(line: 1552, column: 5, scope: !4806)
!4821 = !DILocation(line: 0, scope: !4806)
!4822 = !DILocation(line: 1554, column: 8, scope: !4803)
!4823 = !DILocation(line: 1555, column: 19, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4825, file: !2458, line: 1554, column: 33)
!4825 = distinct !DILexicalBlock(scope: !4803, file: !2458, line: 1554, column: 8)
!4826 = !DILocation(line: 1555, column: 17, scope: !4824)
!4827 = !DILocation(line: 1556, column: 4, scope: !4824)
!4828 = !DILocation(line: 1557, column: 19, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4830, file: !2458, line: 1556, column: 39)
!4830 = distinct !DILexicalBlock(scope: !4825, file: !2458, line: 1556, column: 15)
!4831 = !DILocation(line: 1557, column: 17, scope: !4829)
!4832 = !DILocation(line: 1558, column: 4, scope: !4829)
!4833 = !DILocation(line: 0, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4835, file: !2458, line: 1560, column: 8)
!4835 = distinct !DILexicalBlock(scope: !4836, file: !2458, line: 1559, column: 45)
!4836 = distinct !DILexicalBlock(scope: !4804, file: !2458, line: 1559, column: 14)
!4837 = !DILocation(line: 1566, column: 17, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4839, file: !2458, line: 1565, column: 46)
!4839 = distinct !DILexicalBlock(scope: !4836, file: !2458, line: 1565, column: 14)
!4840 = !DILocation(line: 1566, column: 15, scope: !4838)
!4841 = !DILocation(line: 1567, column: 3, scope: !4838)
!4842 = !DILocation(line: 1574, column: 21, scope: !4671)
!4843 = !DILocation(line: 1575, column: 4, scope: !4669)
!4844 = !DILocation(line: 0, scope: !4669)
!4845 = !DILocation(line: 1575, column: 4, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4669, file: !2458, line: 1575, column: 4)
!4847 = !DILocation(line: 1582, column: 17, scope: !4607)
!4848 = !DILocation(line: 1582, column: 3, scope: !4607)
!4849 = !DILocation(line: 1584, column: 4, scope: !4673)
!4850 = !DILocation(line: 0, scope: !4673)
!4851 = !DILocation(line: 1584, column: 4, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4673, file: !2458, line: 1584, column: 4)
!4853 = !DILocation(line: 1587, column: 31, scope: !4676)
!4854 = !DILocation(line: 1591, column: 18, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4676, file: !2458, line: 1591, column: 8)
!4856 = !DILocation(line: 1591, column: 8, scope: !4676)
!4857 = !DILocation(line: 1592, column: 11, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4855, file: !2458, line: 1591, column: 24)
!4859 = !DILocation(line: 0, scope: !4676)
!4860 = !DILocation(line: 1593, column: 4, scope: !4858)
!4861 = !DILocation(line: 1594, column: 11, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4855, file: !2458, line: 1593, column: 11)
!4863 = !DILocation(line: 1604, column: 51, scope: !4674)
!4864 = !DILocation(line: 1604, column: 13, scope: !4674)
!4865 = !DILocation(line: 1604, column: 11, scope: !4674)
!4866 = !DILocation(line: 1606, column: 4, scope: !4674)
!4867 = !DILocation(line: 1609, column: 14, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4674, file: !2458, line: 1609, column: 8)
!4869 = !DILocation(line: 1609, column: 8, scope: !4674)
!4870 = !DILocation(line: 1619, column: 18, scope: !4674)
!4871 = !DILocation(line: 1620, column: 13, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4674, file: !2458, line: 1620, column: 8)
!4873 = !DILocation(line: 1620, column: 8, scope: !4674)
!4874 = !DILocation(line: 1622, column: 36, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4872, file: !2458, line: 1620, column: 18)
!4876 = !DILocation(line: 1622, column: 17, scope: !4875)
!4877 = !DILocation(line: 1623, column: 4, scope: !4875)
!4878 = !DILocation(line: 1632, column: 29, scope: !4674)
!4879 = !DILocation(line: 1632, column: 10, scope: !4674)
!4880 = !DILocation(line: 1632, column: 4, scope: !4674)
!4881 = !DILocation(line: 1407, column: 8, scope: !4607)
!4882 = !DILocation(line: 0, scope: !4674)
!4883 = !DILocation(line: 1634, column: 3, scope: !4674)
!4884 = !DILocation(line: 1640, column: 18, scope: !4679)
!4885 = !DILocation(line: 1640, column: 8, scope: !4674)
!4886 = !DILocation(line: 1729, column: 13, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1729, column: 7)
!4888 = !DILocation(line: 1641, column: 22, scope: !4678)
!4889 = !DILocation(line: 0, scope: !4678)
!4890 = !DILocation(line: 1646, column: 21, scope: !4678)
!4891 = !DILocation(line: 1649, column: 13, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4678, file: !2458, line: 1649, column: 9)
!4893 = !DILocation(line: 1649, column: 9, scope: !4678)
!4894 = !DILocation(line: 1650, column: 35, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4892, file: !2458, line: 1649, column: 34)
!4896 = !DILocation(line: 1650, column: 23, scope: !4895)
!4897 = !DILocation(line: 1651, column: 5, scope: !4895)
!4898 = !DILocation(line: 1660, column: 15, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4674, file: !2458, line: 1660, column: 8)
!4900 = !DILocation(line: 1660, column: 19, scope: !4899)
!4901 = !DILocation(line: 1660, column: 8, scope: !4674)
!4902 = !DILocation(line: 1661, column: 23, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4899, file: !2458, line: 1660, column: 28)
!4904 = !DILocation(line: 1661, column: 11, scope: !4903)
!4905 = !DILocation(line: 1665, column: 22, scope: !4903)
!4906 = !DILocation(line: 1666, column: 21, scope: !4903)
!4907 = !DILocation(line: 1668, column: 5, scope: !4903)
!4908 = !DILocation(line: 1677, column: 30, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4910, file: !2458, line: 1676, column: 49)
!4910 = distinct !DILexicalBlock(scope: !4674, file: !2458, line: 1676, column: 8)
!4911 = !DILocation(line: 1677, column: 5, scope: !4909)
!4912 = !DILocation(line: 1680, column: 4, scope: !4674)
!4913 = !DILocation(line: 0, scope: !4855)
!4914 = !DILocation(line: 1597, column: 14, scope: !4676)
!4915 = !DILocation(line: 1699, column: 11, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1699, column: 7)
!4917 = !DILocation(line: 1699, column: 7, scope: !4607)
!4918 = !DILocation(line: 1725, column: 7, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1725, column: 7)
!4920 = !DILocation(line: 1725, column: 12, scope: !4919)
!4921 = !DILocation(line: 1747, column: 13, scope: !4686)
!4922 = !DILocation(line: 1747, column: 7, scope: !4607)
!4923 = !DILocation(line: 1722, column: 24, scope: !4607)
!4924 = !DILocation(line: 1725, column: 7, scope: !4607)
!4925 = !DILocation(line: 1729, column: 7, scope: !4607)
!4926 = !DILocation(line: 1736, column: 13, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4607, file: !2458, line: 1736, column: 7)
!4928 = !DILocation(line: 1735, column: 19, scope: !4607)
!4929 = !DILocation(line: 1736, column: 7, scope: !4607)
!4930 = !DILocation(line: 1748, column: 10, scope: !4685)
!4931 = !DILocation(line: 1750, column: 15, scope: !4684)
!4932 = !DILocation(line: 1750, column: 8, scope: !4685)
!4933 = !DILocation(line: 0, scope: !4683)
!4934 = !DILocation(line: 1756, column: 15, scope: !4692)
!4935 = !DILocation(line: 1756, column: 9, scope: !4683)
!4936 = !DILocation(line: 1758, column: 7, scope: !4688)
!4937 = !DILocation(line: 0, scope: !4688)
!4938 = !DILocation(line: 1758, column: 7, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4688, file: !2458, line: 1758, column: 7)
!4940 = !DILocation(line: 1764, column: 5, scope: !4683)
!4941 = !DILocation(line: 0, scope: !4685)
!4942 = !DILocation(line: 1764, column: 20, scope: !4683)
!4943 = !DILocation(line: 1764, column: 17, scope: !4683)
!4944 = !DILocation(line: 1765, column: 6, scope: !4694)
!4945 = !DILocation(line: 0, scope: !4694)
!4946 = !DILocation(line: 1765, column: 6, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4694, file: !2458, line: 1765, column: 6)
!4948 = distinct !{!4948, !4940, !4949}
!4949 = !DILocation(line: 1766, column: 5, scope: !4683)
!4950 = !DILocation(line: 1773, column: 12, scope: !4699)
!4951 = !DILocation(line: 1773, column: 7, scope: !4607)
!4952 = !DILocation(line: 1773, column: 7, scope: !4699)
!4953 = !DILocation(line: 1774, column: 4, scope: !4697)
!4954 = !DILocation(line: 0, scope: !4697)
!4955 = !DILocation(line: 1774, column: 4, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4697, file: !2458, line: 1774, column: 4)
!4957 = !DILocation(line: 1818, column: 8, scope: !4703)
!4958 = !DILocation(line: 1818, column: 27, scope: !4703)
!4959 = !DILocation(line: 1818, column: 25, scope: !4703)
!4960 = !DILocation(line: 1818, column: 8, scope: !4704)
!4961 = !DILocation(line: 1819, column: 5, scope: !4701)
!4962 = !DILocation(line: 0, scope: !4701)
!4963 = !DILocation(line: 1819, column: 5, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4701, file: !2458, line: 1819, column: 5)
!4965 = !DILocation(line: 1822, column: 14, scope: !4709)
!4966 = !DILocation(line: 1822, column: 8, scope: !4704)
!4967 = !DILocation(line: 1823, column: 5, scope: !4707)
!4968 = !DILocation(line: 0, scope: !4707)
!4969 = !DILocation(line: 1823, column: 5, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4707, file: !2458, line: 1823, column: 5)
!4971 = !DILocation(line: 1826, column: 20, scope: !4704)
!4972 = !DILocation(line: 1827, column: 4, scope: !4704)
!4973 = !DILocation(line: 0, scope: !4704)
!4974 = !DILocation(line: 1827, column: 21, scope: !4704)
!4975 = !DILocation(line: 1827, column: 18, scope: !4704)
!4976 = !DILocation(line: 1828, column: 5, scope: !4711)
!4977 = !DILocation(line: 0, scope: !4711)
!4978 = !DILocation(line: 1828, column: 5, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4711, file: !2458, line: 1828, column: 5)
!4980 = distinct !{!4980, !4972, !4981}
!4981 = !DILocation(line: 1829, column: 4, scope: !4704)
!4982 = !DILocation(line: 1831, column: 4, scope: !4714)
!4983 = !DILocation(line: 0, scope: !4714)
!4984 = !DILocation(line: 1831, column: 4, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4714, file: !2458, line: 1831, column: 4)
!4986 = !DILocation(line: 1835, column: 16, scope: !4607)
!4987 = !DILocation(line: 1835, column: 3, scope: !4607)
!4988 = !DILocation(line: 1836, column: 4, scope: !4716)
!4989 = !DILocation(line: 0, scope: !4716)
!4990 = !DILocation(line: 1836, column: 4, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4716, file: !2458, line: 1836, column: 4)
!4992 = !DILocation(line: 1837, column: 4, scope: !4717)
!4993 = distinct !{!4993, !4987, !4994}
!4994 = !DILocation(line: 1838, column: 3, scope: !4607)
!4995 = !DILocation(line: 1844, column: 1, scope: !4580)
!4996 = distinct !DISubprogram(name: "extract_conversion", scope: !2458, file: !2458, line: 642, type: !4997, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !4999)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{!278, !4653, !278}
!4999 = !{!5000, !5001}
!5000 = !DILocalVariable(name: "conv", arg: 1, scope: !4996, file: !2458, line: 642, type: !4653)
!5001 = !DILocalVariable(name: "sp", arg: 2, scope: !4996, file: !2458, line: 643, type: !278)
!5002 = !DILocation(line: 0, scope: !4996)
!5003 = !DILocation(line: 645, column: 10, scope: !4996)
!5004 = !DILocation(line: 653, column: 2, scope: !4996)
!5005 = !DILocation(line: 654, column: 6, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4996, file: !2458, line: 654, column: 6)
!5007 = !DILocation(line: 654, column: 10, scope: !5006)
!5008 = !DILocation(line: 654, column: 6, scope: !4996)
!5009 = !DILocation(line: 655, column: 24, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5006, file: !2458, line: 654, column: 18)
!5011 = !DILocation(line: 655, column: 19, scope: !5010)
!5012 = !DILocation(line: 656, column: 3, scope: !5010)
!5013 = !DILocation(line: 659, column: 7, scope: !4996)
!5014 = !DILocation(line: 660, column: 7, scope: !4996)
!5015 = !DILocation(line: 661, column: 7, scope: !4996)
!5016 = !DILocation(line: 662, column: 7, scope: !4996)
!5017 = !DILocation(line: 663, column: 7, scope: !4996)
!5018 = !DILocation(line: 665, column: 2, scope: !4996)
!5019 = !DILocation(line: 666, column: 1, scope: !4996)
!5020 = distinct !DISubprogram(name: "outs", scope: !2458, file: !2458, line: 1319, type: !5021, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5023)
!5021 = !DISubroutineType(types: !5022)
!5022 = !{!119, !3734, !113, !278, !278}
!5023 = !{!5024, !5025, !5026, !5027, !5028, !5029}
!5024 = !DILocalVariable(name: "out", arg: 1, scope: !5020, file: !2458, line: 1319, type: !3734)
!5025 = !DILocalVariable(name: "ctx", arg: 2, scope: !5020, file: !2458, line: 1320, type: !113)
!5026 = !DILocalVariable(name: "sp", arg: 3, scope: !5020, file: !2458, line: 1321, type: !278)
!5027 = !DILocalVariable(name: "ep", arg: 4, scope: !5020, file: !2458, line: 1322, type: !278)
!5028 = !DILocalVariable(name: "count", scope: !5020, file: !2458, line: 1324, type: !239)
!5029 = !DILocalVariable(name: "rc", scope: !5030, file: !2458, line: 1327, type: !119)
!5030 = distinct !DILexicalBlock(scope: !5020, file: !2458, line: 1326, column: 45)
!5031 = !DILocation(line: 0, scope: !5020)
!5032 = !DILocation(line: 1326, column: 2, scope: !5020)
!5033 = !DILocation(line: 1324, column: 9, scope: !5020)
!5034 = !DILocation(line: 1326, column: 13, scope: !5020)
!5035 = !DILocation(line: 1326, column: 19, scope: !5020)
!5036 = !DILocation(line: 1327, column: 21, scope: !5030)
!5037 = !DILocation(line: 1326, column: 36, scope: !5020)
!5038 = !DILocation(line: 1326, column: 39, scope: !5020)
!5039 = !DILocation(line: 1327, column: 24, scope: !5030)
!5040 = !DILocation(line: 1327, column: 16, scope: !5030)
!5041 = !DILocation(line: 1327, column: 12, scope: !5030)
!5042 = !DILocation(line: 0, scope: !5030)
!5043 = !DILocation(line: 1329, column: 10, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5030, file: !2458, line: 1329, column: 7)
!5045 = !DILocation(line: 1329, column: 7, scope: !5030)
!5046 = distinct !{!5046, !5032, !5047}
!5047 = !DILocation(line: 1333, column: 2, scope: !5020)
!5048 = !DILocation(line: 1336, column: 1, scope: !5020)
!5049 = distinct !DISubprogram(name: "encode_uint", scope: !2458, file: !2458, line: 788, type: !5050, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5052)
!5050 = !DISubroutineType(types: !5051)
!5051 = !{!106, !2480, !4653, !106, !278}
!5052 = !{!5053, !5054, !5055, !5056, !5057, !5058, !5060, !5061}
!5053 = !DILocalVariable(name: "value", arg: 1, scope: !5049, file: !2458, line: 788, type: !2480)
!5054 = !DILocalVariable(name: "conv", arg: 2, scope: !5049, file: !2458, line: 789, type: !4653)
!5055 = !DILocalVariable(name: "bps", arg: 3, scope: !5049, file: !2458, line: 790, type: !106)
!5056 = !DILocalVariable(name: "bpe", arg: 4, scope: !5049, file: !2458, line: 791, type: !278)
!5057 = !DILocalVariable(name: "upcase", scope: !5049, file: !2458, line: 793, type: !345)
!5058 = !DILocalVariable(name: "radix", scope: !5049, file: !2458, line: 794, type: !5059)
!5059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5060 = !DILocalVariable(name: "bp", scope: !5049, file: !2458, line: 795, type: !106)
!5061 = !DILocalVariable(name: "lsv", scope: !5062, file: !2458, line: 798, type: !32)
!5062 = distinct !DILexicalBlock(scope: !5049, file: !2458, line: 797, column: 5)
!5063 = !DILocation(line: 0, scope: !5049)
!5064 = !DILocation(line: 793, column: 35, scope: !5049)
!5065 = !DILocation(line: 793, column: 24, scope: !5049)
!5066 = !DILocation(line: 793, column: 16, scope: !5049)
!5067 = !DILocation(line: 794, column: 29, scope: !5049)
!5068 = !DILocation(line: 795, column: 24, scope: !5049)
!5069 = !DILocation(line: 795, column: 17, scope: !5049)
!5070 = !DILocation(line: 797, column: 2, scope: !5049)
!5071 = !DILocation(line: 802, column: 9, scope: !5062)
!5072 = !DILocation(line: 798, column: 22, scope: !5062)
!5073 = !DILocation(line: 0, scope: !5062)
!5074 = !DILocation(line: 800, column: 16, scope: !5062)
!5075 = !DILocation(line: 800, column: 11, scope: !5062)
!5076 = !DILocation(line: 800, column: 4, scope: !5062)
!5077 = !DILocation(line: 800, column: 9, scope: !5062)
!5078 = !DILocation(line: 803, column: 18, scope: !5049)
!5079 = !DILocation(line: 803, column: 24, scope: !5049)
!5080 = !DILocation(line: 803, column: 2, scope: !5062)
!5081 = distinct !{!5081, !5070, !5082}
!5082 = !DILocation(line: 803, column: 37, scope: !5049)
!5083 = !DILocation(line: 808, column: 12, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5049, file: !2458, line: 808, column: 6)
!5085 = !DILocation(line: 808, column: 6, scope: !5049)
!5086 = !DILocation(line: 809, column: 7, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5084, file: !2458, line: 808, column: 23)
!5088 = !DILocation(line: 813, column: 3, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5090, file: !2458, line: 811, column: 27)
!5090 = distinct !DILexicalBlock(scope: !5091, file: !2458, line: 811, column: 14)
!5091 = distinct !DILexicalBlock(scope: !5087, file: !2458, line: 809, column: 7)
!5092 = !DILocation(line: 0, scope: !5091)
!5093 = !DILocation(line: 818, column: 2, scope: !5049)
!5094 = distinct !DISubprogram(name: "store_count", scope: !2458, file: !2458, line: 1280, type: !5095, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5099)
!5095 = !DISubroutineType(types: !5096)
!5096 = !{null, !5097, !113, !119}
!5097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5098, size: 32)
!5098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4620)
!5099 = !{!5100, !5101, !5102}
!5100 = !DILocalVariable(name: "conv", arg: 1, scope: !5094, file: !2458, line: 1280, type: !5097)
!5101 = !DILocalVariable(name: "dp", arg: 2, scope: !5094, file: !2458, line: 1281, type: !113)
!5102 = !DILocalVariable(name: "count", arg: 3, scope: !5094, file: !2458, line: 1282, type: !119)
!5103 = !DILocation(line: 0, scope: !5094)
!5104 = !DILocation(line: 1284, column: 38, scope: !5094)
!5105 = !DILocation(line: 1284, column: 2, scope: !5094)
!5106 = !DILocation(line: 1286, column: 4, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5094, file: !2458, line: 1284, column: 50)
!5108 = !DILocation(line: 1286, column: 14, scope: !5107)
!5109 = !DILocation(line: 1287, column: 3, scope: !5107)
!5110 = !DILocation(line: 1289, column: 24, scope: !5107)
!5111 = !DILocation(line: 1289, column: 22, scope: !5107)
!5112 = !DILocation(line: 1290, column: 3, scope: !5107)
!5113 = !DILocation(line: 1292, column: 18, scope: !5107)
!5114 = !DILocation(line: 1292, column: 4, scope: !5107)
!5115 = !DILocation(line: 1292, column: 16, scope: !5107)
!5116 = !DILocation(line: 1293, column: 3, scope: !5107)
!5117 = !DILocation(line: 1295, column: 4, scope: !5107)
!5118 = !DILocation(line: 1295, column: 15, scope: !5107)
!5119 = !DILocation(line: 1296, column: 3, scope: !5107)
!5120 = !DILocation(line: 1298, column: 22, scope: !5107)
!5121 = !DILocation(line: 1298, column: 4, scope: !5107)
!5122 = !DILocation(line: 1298, column: 20, scope: !5107)
!5123 = !DILocation(line: 1299, column: 3, scope: !5107)
!5124 = !DILocation(line: 1301, column: 21, scope: !5107)
!5125 = !DILocation(line: 1301, column: 4, scope: !5107)
!5126 = !DILocation(line: 1301, column: 19, scope: !5107)
!5127 = !DILocation(line: 1302, column: 3, scope: !5107)
!5128 = !DILocation(line: 1304, column: 4, scope: !5107)
!5129 = !DILocation(line: 1304, column: 17, scope: !5107)
!5130 = !DILocation(line: 1305, column: 3, scope: !5107)
!5131 = !DILocation(line: 1307, column: 4, scope: !5107)
!5132 = !DILocation(line: 1307, column: 20, scope: !5107)
!5133 = !DILocation(line: 1308, column: 3, scope: !5107)
!5134 = !DILocation(line: 1316, column: 1, scope: !5094)
!5135 = distinct !DISubprogram(name: "isupper", scope: !5136, file: !5136, line: 16, type: !301, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5137)
!5136 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5137 = !{!5138}
!5138 = !DILocalVariable(name: "a", arg: 1, scope: !5135, file: !5136, line: 16, type: !119)
!5139 = !DILocation(line: 0, scope: !5135)
!5140 = !DILocation(line: 18, column: 29, scope: !5135)
!5141 = !DILocation(line: 18, column: 45, scope: !5135)
!5142 = !DILocation(line: 18, column: 2, scope: !5135)
!5143 = distinct !DISubprogram(name: "conversion_radix", scope: !2458, file: !2458, line: 761, type: !5144, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5146)
!5144 = !DISubroutineType(types: !5145)
!5145 = !{!239, !107}
!5146 = !{!5147}
!5147 = !DILocalVariable(name: "specifier", arg: 1, scope: !5143, file: !2458, line: 761, type: !107)
!5148 = !DILocation(line: 0, scope: !5143)
!5149 = !DILocation(line: 763, column: 2, scope: !5143)
!5150 = !DILocation(line: 770, column: 3, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5143, file: !2458, line: 763, column: 21)
!5152 = !DILocation(line: 774, column: 3, scope: !5151)
!5153 = !DILocation(line: 0, scope: !5151)
!5154 = !DILocation(line: 776, column: 1, scope: !5143)
!5155 = distinct !DISubprogram(name: "extract_flags", scope: !2458, file: !2458, line: 339, type: !4997, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5156)
!5156 = !{!5157, !5158, !5159}
!5157 = !DILocalVariable(name: "conv", arg: 1, scope: !5155, file: !2458, line: 339, type: !4653)
!5158 = !DILocalVariable(name: "sp", arg: 2, scope: !5155, file: !2458, line: 340, type: !278)
!5159 = !DILocalVariable(name: "loop", scope: !5155, file: !2458, line: 342, type: !345)
!5160 = !DILocation(line: 0, scope: !5155)
!5161 = !DILocation(line: 344, column: 2, scope: !5155)
!5162 = !DILocation(line: 345, column: 11, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5155, file: !2458, line: 344, column: 5)
!5164 = !DILocation(line: 345, column: 3, scope: !5163)
!5165 = !DILocation(line: 351, column: 4, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5163, file: !2458, line: 345, column: 16)
!5167 = !DILocation(line: 354, column: 4, scope: !5166)
!5168 = !DILocation(line: 357, column: 4, scope: !5166)
!5169 = !DILocation(line: 360, column: 4, scope: !5166)
!5170 = !DILocation(line: 0, scope: !5166)
!5171 = !DILocation(line: 370, column: 12, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5155, file: !2458, line: 370, column: 6)
!5173 = !DILocation(line: 370, column: 22, scope: !5172)
!5174 = !DILocation(line: 371, column: 19, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5172, file: !2458, line: 370, column: 42)
!5176 = !DILocation(line: 372, column: 2, scope: !5175)
!5177 = !DILocation(line: 376, column: 2, scope: !5155)
!5178 = distinct !DISubprogram(name: "extract_width", scope: !2458, file: !2458, line: 388, type: !4997, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5179)
!5179 = !{!5180, !5181, !5182, !5183}
!5180 = !DILocalVariable(name: "conv", arg: 1, scope: !5178, file: !2458, line: 388, type: !4653)
!5181 = !DILocalVariable(name: "sp", arg: 2, scope: !5178, file: !2458, line: 389, type: !278)
!5182 = !DILocalVariable(name: "wp", scope: !5178, file: !2458, line: 398, type: !278)
!5183 = !DILocalVariable(name: "width", scope: !5178, file: !2458, line: 399, type: !239)
!5184 = !DILocation(line: 0, scope: !5178)
!5185 = !DILocation(line: 391, column: 8, scope: !5178)
!5186 = !DILocation(line: 391, column: 22, scope: !5178)
!5187 = !DILocation(line: 393, column: 6, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5178, file: !2458, line: 393, column: 6)
!5189 = !DILocation(line: 393, column: 10, scope: !5188)
!5190 = !DILocation(line: 393, column: 6, scope: !5178)
!5191 = !DILocation(line: 394, column: 20, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5188, file: !2458, line: 393, column: 18)
!5193 = !DILocation(line: 395, column: 10, scope: !5192)
!5194 = !DILocation(line: 395, column: 3, scope: !5192)
!5195 = !DILocation(line: 399, column: 17, scope: !5178)
!5196 = !DILocation(line: 401, column: 6, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5178, file: !2458, line: 401, column: 6)
!5198 = !DILocation(line: 401, column: 9, scope: !5197)
!5199 = !DILocation(line: 401, column: 6, scope: !5178)
!5200 = !DILocation(line: 402, column: 23, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5197, file: !2458, line: 401, column: 16)
!5202 = !DILocation(line: 403, column: 9, scope: !5201)
!5203 = !DILocation(line: 403, column: 21, scope: !5201)
!5204 = !DILocation(line: 405, column: 11, scope: !5201)
!5205 = !DILocation(line: 404, column: 21, scope: !5201)
!5206 = !DILocation(line: 406, column: 2, scope: !5201)
!5207 = !DILocation(line: 409, column: 1, scope: !5178)
!5208 = distinct !DISubprogram(name: "extract_prec", scope: !2458, file: !2458, line: 420, type: !4997, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5209)
!5209 = !{!5210, !5211, !5212}
!5210 = !DILocalVariable(name: "conv", arg: 1, scope: !5208, file: !2458, line: 420, type: !4653)
!5211 = !DILocalVariable(name: "sp", arg: 2, scope: !5208, file: !2458, line: 421, type: !278)
!5212 = !DILocalVariable(name: "prec", scope: !5208, file: !2458, line: 435, type: !239)
!5213 = !DILocation(line: 0, scope: !5208)
!5214 = !DILocation(line: 423, column: 24, scope: !5208)
!5215 = !DILocation(line: 423, column: 28, scope: !5208)
!5216 = !DILocation(line: 423, column: 8, scope: !5208)
!5217 = !DILocation(line: 423, column: 21, scope: !5208)
!5218 = !DILocation(line: 425, column: 6, scope: !5208)
!5219 = !DILocation(line: 428, column: 2, scope: !5208)
!5220 = !DILocation(line: 430, column: 6, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5208, file: !2458, line: 430, column: 6)
!5222 = !DILocation(line: 430, column: 10, scope: !5221)
!5223 = !DILocation(line: 430, column: 6, scope: !5208)
!5224 = !DILocation(line: 431, column: 19, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5221, file: !2458, line: 430, column: 18)
!5226 = !DILocation(line: 432, column: 10, scope: !5225)
!5227 = !DILocation(line: 432, column: 3, scope: !5225)
!5228 = !DILocation(line: 435, column: 16, scope: !5208)
!5229 = !DILocation(line: 437, column: 8, scope: !5208)
!5230 = !DILocation(line: 437, column: 19, scope: !5208)
!5231 = !DILocation(line: 439, column: 10, scope: !5208)
!5232 = !DILocation(line: 438, column: 20, scope: !5208)
!5233 = !DILocation(line: 441, column: 9, scope: !5208)
!5234 = !DILocation(line: 442, column: 1, scope: !5208)
!5235 = distinct !DISubprogram(name: "extract_length", scope: !2458, file: !2458, line: 453, type: !4997, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5236)
!5236 = !{!5237, !5238}
!5237 = !DILocalVariable(name: "conv", arg: 1, scope: !5235, file: !2458, line: 453, type: !4653)
!5238 = !DILocalVariable(name: "sp", arg: 2, scope: !5235, file: !2458, line: 454, type: !278)
!5239 = !DILocation(line: 0, scope: !5235)
!5240 = !DILocation(line: 456, column: 10, scope: !5235)
!5241 = !DILocation(line: 456, column: 2, scope: !5235)
!5242 = !DILocation(line: 458, column: 8, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5244, file: !2458, line: 458, column: 7)
!5244 = distinct !DILexicalBlock(scope: !5235, file: !2458, line: 456, column: 15)
!5245 = !DILocation(line: 458, column: 7, scope: !5243)
!5246 = !DILocation(line: 458, column: 13, scope: !5243)
!5247 = !DILocation(line: 0, scope: !5243)
!5248 = !DILocation(line: 458, column: 7, scope: !5244)
!5249 = !DILocation(line: 459, column: 21, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5243, file: !2458, line: 458, column: 21)
!5251 = !DILocation(line: 460, column: 4, scope: !5250)
!5252 = !DILocation(line: 461, column: 3, scope: !5250)
!5253 = !DILocation(line: 462, column: 21, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5243, file: !2458, line: 461, column: 10)
!5255 = !DILocation(line: 466, column: 8, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5244, file: !2458, line: 466, column: 7)
!5257 = !DILocation(line: 466, column: 7, scope: !5256)
!5258 = !DILocation(line: 466, column: 13, scope: !5256)
!5259 = !DILocation(line: 0, scope: !5256)
!5260 = !DILocation(line: 466, column: 7, scope: !5244)
!5261 = !DILocation(line: 467, column: 21, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5256, file: !2458, line: 466, column: 21)
!5263 = !DILocation(line: 468, column: 4, scope: !5262)
!5264 = !DILocation(line: 469, column: 3, scope: !5262)
!5265 = !DILocation(line: 470, column: 21, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5256, file: !2458, line: 469, column: 10)
!5267 = !DILocation(line: 474, column: 9, scope: !5244)
!5268 = !DILocation(line: 474, column: 20, scope: !5244)
!5269 = !DILocation(line: 475, column: 3, scope: !5244)
!5270 = !DILocation(line: 476, column: 3, scope: !5244)
!5271 = !DILocation(line: 478, column: 9, scope: !5244)
!5272 = !DILocation(line: 478, column: 20, scope: !5244)
!5273 = !DILocation(line: 479, column: 3, scope: !5244)
!5274 = !DILocation(line: 480, column: 3, scope: !5244)
!5275 = !DILocation(line: 482, column: 9, scope: !5244)
!5276 = !DILocation(line: 482, column: 20, scope: !5244)
!5277 = !DILocation(line: 483, column: 3, scope: !5244)
!5278 = !DILocation(line: 484, column: 3, scope: !5244)
!5279 = !DILocation(line: 486, column: 9, scope: !5244)
!5280 = !DILocation(line: 486, column: 20, scope: !5244)
!5281 = !DILocation(line: 487, column: 3, scope: !5244)
!5282 = !DILocation(line: 492, column: 21, scope: !5244)
!5283 = !DILocation(line: 493, column: 3, scope: !5244)
!5284 = !DILocation(line: 495, column: 9, scope: !5244)
!5285 = !DILocation(line: 495, column: 20, scope: !5244)
!5286 = !DILocation(line: 496, column: 3, scope: !5244)
!5287 = !DILocation(line: 498, column: 2, scope: !5235)
!5288 = distinct !DISubprogram(name: "extract_specifier", scope: !2458, file: !2458, line: 513, type: !4997, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5289)
!5289 = !{!5290, !5291, !5292, !5293}
!5290 = !DILocalVariable(name: "conv", arg: 1, scope: !5288, file: !2458, line: 513, type: !4653)
!5291 = !DILocalVariable(name: "sp", arg: 2, scope: !5288, file: !2458, line: 514, type: !278)
!5292 = !DILocalVariable(name: "unsupported", scope: !5288, file: !2458, line: 516, type: !345)
!5293 = !DILabel(scope: !5294, name: "int_conv", file: !2458, line: 526)
!5294 = distinct !DILexicalBlock(scope: !5288, file: !2458, line: 520, column: 27)
!5295 = !DILocation(line: 0, scope: !5288)
!5296 = !DILocation(line: 518, column: 20, scope: !5288)
!5297 = !DILocation(line: 518, column: 8, scope: !5288)
!5298 = !DILocation(line: 518, column: 18, scope: !5288)
!5299 = !DILocation(line: 520, column: 2, scope: !5288)
!5300 = !DILocation(line: 525, column: 3, scope: !5294)
!5301 = !DILocation(line: 0, scope: !5294)
!5302 = !DILocation(line: 526, column: 1, scope: !5294)
!5303 = !DILocation(line: 528, column: 24, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5294, file: !2458, line: 528, column: 7)
!5305 = !DILocation(line: 528, column: 7, scope: !5294)
!5306 = !DILocation(line: 535, column: 23, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5294, file: !2458, line: 535, column: 7)
!5308 = !DILocation(line: 535, column: 7, scope: !5294)
!5309 = !DILocation(line: 536, column: 36, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5307, file: !2458, line: 535, column: 31)
!5311 = !DILocation(line: 537, column: 3, scope: !5310)
!5312 = !DILocation(line: 570, column: 9, scope: !5294)
!5313 = !DILocation(line: 570, column: 23, scope: !5294)
!5314 = !DILocation(line: 575, column: 4, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5316, file: !2458, line: 573, column: 48)
!5316 = distinct !DILexicalBlock(scope: !5294, file: !2458, line: 573, column: 7)
!5317 = !DILocation(line: 603, column: 9, scope: !5294)
!5318 = !DILocation(line: 603, column: 23, scope: !5294)
!5319 = !DILocation(line: 605, column: 24, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5294, file: !2458, line: 605, column: 7)
!5321 = !DILocation(line: 605, column: 7, scope: !5294)
!5322 = !DILocation(line: 612, column: 9, scope: !5294)
!5323 = !DILocation(line: 612, column: 23, scope: !5294)
!5324 = !DILocation(line: 619, column: 24, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5294, file: !2458, line: 619, column: 7)
!5326 = !DILocation(line: 619, column: 7, scope: !5294)
!5327 = !DILocation(line: 625, column: 9, scope: !5294)
!5328 = !DILocation(line: 625, column: 17, scope: !5294)
!5329 = !DILocation(line: 626, column: 3, scope: !5294)
!5330 = !DILocation(line: 629, column: 20, scope: !5288)
!5331 = !DILocation(line: 629, column: 8, scope: !5288)
!5332 = !DILocation(line: 518, column: 23, scope: !5288)
!5333 = !DILocation(line: 631, column: 2, scope: !5288)
!5334 = distinct !DISubprogram(name: "extract_decimal", scope: !2458, file: !2458, line: 318, type: !5335, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5337)
!5335 = !DISubroutineType(types: !5336)
!5336 = !{!239, !277}
!5337 = !{!5338, !5339, !5340}
!5338 = !DILocalVariable(name: "str", arg: 1, scope: !5334, file: !2458, line: 318, type: !277)
!5339 = !DILocalVariable(name: "sp", scope: !5334, file: !2458, line: 320, type: !278)
!5340 = !DILocalVariable(name: "val", scope: !5334, file: !2458, line: 321, type: !239)
!5341 = !DILocation(line: 0, scope: !5334)
!5342 = !DILocation(line: 320, column: 19, scope: !5334)
!5343 = !DILocation(line: 323, column: 37, scope: !5334)
!5344 = !DILocation(line: 323, column: 17, scope: !5334)
!5345 = !DILocation(line: 323, column: 9, scope: !5334)
!5346 = !DILocation(line: 323, column: 2, scope: !5334)
!5347 = !DILocation(line: 324, column: 13, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5334, file: !2458, line: 323, column: 43)
!5349 = !DILocation(line: 324, column: 24, scope: !5348)
!5350 = !DILocation(line: 324, column: 19, scope: !5348)
!5351 = !DILocation(line: 324, column: 27, scope: !5348)
!5352 = distinct !{!5352, !5346, !5353}
!5353 = !DILocation(line: 325, column: 2, scope: !5334)
!5354 = !DILocation(line: 326, column: 7, scope: !5334)
!5355 = !DILocation(line: 327, column: 2, scope: !5334)
!5356 = distinct !DISubprogram(name: "isdigit", scope: !5136, file: !5136, line: 43, type: !301, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2454, retainedNodes: !5357)
!5357 = !{!5358}
!5358 = !DILocalVariable(name: "a", arg: 1, scope: !5356, file: !5136, line: 43, type: !119)
!5359 = !DILocation(line: 0, scope: !5356)
!5360 = !DILocation(line: 45, column: 29, scope: !5356)
!5361 = !DILocation(line: 45, column: 45, scope: !5356)
!5362 = !DILocation(line: 45, column: 2, scope: !5356)
!5363 = distinct !DISubprogram(name: "assert_post_action", scope: !5364, file: !5364, line: 26, type: !5365, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2488, retainedNodes: !5367)
!5364 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5365 = !DISubroutineType(types: !5366)
!5366 = !{null, !278, !32}
!5367 = !{!5368, !5369}
!5368 = !DILocalVariable(name: "file", arg: 1, scope: !5363, file: !5364, line: 26, type: !278)
!5369 = !DILocalVariable(name: "line", arg: 2, scope: !5363, file: !5364, line: 26, type: !32)
!5370 = !DILocation(line: 0, scope: !5363)
!5371 = !DILocation(line: 43, column: 2, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5363, file: !5364, line: 43, column: 2)
!5373 = !{i64 2155071574, i64 2155071590, i64 2155071616, i64 2155071644, i64 2155071664}
!5374 = !DILocation(line: 44, column: 1, scope: !5363)
!5375 = distinct !DISubprogram(name: "assert_print", scope: !5364, file: !5364, line: 46, type: !4346, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2488, retainedNodes: !5376)
!5376 = !{!5377, !5378}
!5377 = !DILocalVariable(name: "fmt", arg: 1, scope: !5375, file: !5364, line: 46, type: !278)
!5378 = !DILocalVariable(name: "ap", scope: !5375, file: !5364, line: 48, type: !5379)
!5379 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3352, line: 99, baseType: !5380)
!5380 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3352, line: 40, baseType: !5381)
!5381 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5364, baseType: !5382)
!5382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5383)
!5383 = !{!5384}
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5382, file: !5364, line: 48, baseType: !113, size: 32)
!5385 = !DILocation(line: 0, scope: !5375)
!5386 = !DILocation(line: 48, column: 2, scope: !5375)
!5387 = !DILocation(line: 48, column: 10, scope: !5375)
!5388 = !DILocation(line: 50, column: 2, scope: !5375)
!5389 = !DILocation(line: 52, column: 2, scope: !5375)
!5390 = !DILocation(line: 54, column: 2, scope: !5375)
!5391 = !DILocation(line: 55, column: 1, scope: !5375)
!5392 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5393, file: !5393, line: 9, type: !3019, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !2102)
!5393 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!5394 = !DILocation(line: 11, column: 1, scope: !5392)
!5395 = !{i64 2147565730, i64 2147565773, i64 2147565813}
!5396 = !DILocation(line: 12, column: 1, scope: !5392)
!5397 = !{i64 2147569957, i64 2147570000, i64 2147570040}
!5398 = !DILocation(line: 13, column: 1, scope: !5392)
!5399 = !{i64 2147570166, i64 2147570209, i64 2147570249}
!5400 = !DILocation(line: 14, column: 1, scope: !5392)
!5401 = !{i64 2147570335, i64 2147570378, i64 2147570418}
!5402 = !DILocation(line: 15, column: 1, scope: !5392)
!5403 = !{i64 2147570498, i64 2147570541, i64 2147570581}
!5404 = !DILocation(line: 16, column: 1, scope: !5392)
!5405 = !{i64 2147570682, i64 2147570725, i64 2147570765}
!5406 = !DILocation(line: 17, column: 1, scope: !5392)
!5407 = !{i64 2147570861, i64 2147570904, i64 2147570944}
!5408 = !DILocation(line: 18, column: 1, scope: !5392)
!5409 = !{i64 2147571103, i64 2147571146, i64 2147571186}
!5410 = !DILocation(line: 19, column: 1, scope: !5392)
!5411 = !{i64 2147571338, i64 2147571381, i64 2147571421}
!5412 = !DILocation(line: 20, column: 1, scope: !5392)
!5413 = !{i64 2147571524, i64 2147571567, i64 2147571607}
!5414 = !DILocation(line: 21, column: 1, scope: !5392)
!5415 = !{i64 2147571740, i64 2147571783, i64 2147571823}
!5416 = !DILocation(line: 22, column: 1, scope: !5392)
!5417 = !{i64 2147571943, i64 2147571986, i64 2147572026}
!5418 = !DILocation(line: 23, column: 1, scope: !5392)
!5419 = !{i64 2147572146, i64 2147572189, i64 2147572229}
!5420 = !DILocation(line: 24, column: 1, scope: !5392)
!5421 = !{i64 2147572321, i64 2147572364, i64 2147572404}
!5422 = !DILocation(line: 25, column: 1, scope: !5392)
!5423 = !{i64 2147572529, i64 2147572572, i64 2147572612}
!5424 = !DILocation(line: 26, column: 1, scope: !5392)
!5425 = !{i64 2147572733, i64 2147572776, i64 2147572816}
!5426 = !DILocation(line: 27, column: 1, scope: !5392)
!5427 = !{i64 2147572926, i64 2147572969, i64 2147573009}
!5428 = !DILocation(line: 28, column: 1, scope: !5392)
!5429 = !{i64 2147573128, i64 2147573171, i64 2147573211}
!5430 = !DILocation(line: 29, column: 1, scope: !5392)
!5431 = !{i64 2147573327, i64 2147573370, i64 2147573410}
!5432 = !DILocation(line: 30, column: 1, scope: !5392)
!5433 = !{i64 2147573554, i64 2147573597, i64 2147573637}
!5434 = !DILocation(line: 31, column: 1, scope: !5392)
!5435 = !{i64 2147573756, i64 2147573799, i64 2147573839}
!5436 = !DILocation(line: 32, column: 1, scope: !5392)
!5437 = !{i64 2147573971, i64 2147574014, i64 2147574054}
!5438 = !DILocation(line: 33, column: 1, scope: !5392)
!5439 = !{i64 2147574188, i64 2147574231, i64 2147574271}
!5440 = !DILocation(line: 34, column: 1, scope: !5392)
!5441 = !{i64 2147574360, i64 2147574403, i64 2147574443}
!5442 = !DILocation(line: 35, column: 1, scope: !5392)
!5443 = !{i64 2147574562, i64 2147574605, i64 2147574645}
!5444 = !DILocation(line: 36, column: 1, scope: !5392)
!5445 = !{i64 2147574788, i64 2147574831, i64 2147574871}
!5446 = !DILocation(line: 37, column: 1, scope: !5392)
!5447 = !{i64 2147574987, i64 2147575030, i64 2147575070}
!5448 = !DILocation(line: 38, column: 1, scope: !5392)
!5449 = !{i64 2147575162, i64 2147575205, i64 2147575245}
!5450 = !DILocation(line: 39, column: 1, scope: !5392)
!5451 = !{i64 2147575415, i64 2147575458, i64 2147575498}
!5452 = !DILocation(line: 40, column: 1, scope: !5392)
!5453 = !{i64 2147575656, i64 2147575699, i64 2147575739}
!5454 = !DILocation(line: 41, column: 1, scope: !5392)
!5455 = !{i64 2147575891, i64 2147575934, i64 2147575974}
!5456 = !DILocation(line: 42, column: 1, scope: !5392)
!5457 = !{i64 2147576123, i64 2147576166, i64 2147576206}
!5458 = !DILocation(line: 43, column: 1, scope: !5392)
!5459 = !{i64 2147576349, i64 2147576392, i64 2147576432}
!5460 = !DILocation(line: 44, column: 1, scope: !5392)
!5461 = !{i64 2147576575, i64 2147576618, i64 2147576658}
!5462 = !DILocation(line: 45, column: 1, scope: !5392)
!5463 = !{i64 2147576801, i64 2147576844, i64 2147576884}
!5464 = !DILocation(line: 46, column: 1, scope: !5392)
!5465 = !{i64 2147577036, i64 2147577079, i64 2147577119}
!5466 = !DILocation(line: 47, column: 1, scope: !5392)
!5467 = !{i64 2147577280, i64 2147577323, i64 2147577363}
!5468 = !DILocation(line: 48, column: 1, scope: !5392)
!5469 = !{i64 2147577527, i64 2147577570, i64 2147577610}
!5470 = !DILocation(line: 49, column: 1, scope: !5392)
!5471 = !{i64 2147577759, i64 2147577802, i64 2147577842}
!5472 = !DILocation(line: 50, column: 1, scope: !5392)
!5473 = !{i64 2147578003, i64 2147578046, i64 2147578086}
!5474 = !DILocation(line: 51, column: 1, scope: !5392)
!5475 = !{i64 2147578241, i64 2147578284, i64 2147578324}
!5476 = !DILocation(line: 52, column: 1, scope: !5392)
!5477 = !{i64 2147578515, i64 2147578558, i64 2147578598}
!5478 = !DILocation(line: 53, column: 1, scope: !5392)
!5479 = !{i64 2147582814, i64 2147582857, i64 2147582897}
!5480 = !DILocation(line: 54, column: 1, scope: !5392)
!5481 = !{i64 2147583067, i64 2147583110, i64 2147583150}
!5482 = !DILocation(line: 55, column: 1, scope: !5392)
!5483 = !{i64 2147583311, i64 2147583354, i64 2147583394}
!5484 = !DILocation(line: 56, column: 1, scope: !5392)
!5485 = !{i64 2147583546, i64 2147583589, i64 2147583629}
!5486 = !DILocation(line: 57, column: 1, scope: !5392)
!5487 = !{i64 2147583796, i64 2147583839, i64 2147583879}
!5488 = !DILocation(line: 58, column: 1, scope: !5392)
!5489 = !{i64 2147584043, i64 2147584086, i64 2147584126}
!5490 = !DILocation(line: 59, column: 1, scope: !5392)
!5491 = !{i64 2147584278, i64 2147584321, i64 2147584361}
!5492 = !DILocation(line: 60, column: 1, scope: !5392)
!5493 = !{i64 2147584513, i64 2147584556, i64 2147584596}
!5494 = !DILocation(line: 61, column: 1, scope: !5392)
!5495 = !{i64 2147584748, i64 2147584791, i64 2147584831}
!5496 = !DILocation(line: 62, column: 1, scope: !5392)
!5497 = !{i64 2147584983, i64 2147585026, i64 2147585066}
!5498 = !DILocation(line: 63, column: 1, scope: !5392)
!5499 = !{i64 2147585227, i64 2147585270, i64 2147585310}
!5500 = !DILocation(line: 64, column: 1, scope: !5392)
!5501 = !{i64 2147585465, i64 2147585508, i64 2147585548}
!5502 = !DILocation(line: 65, column: 1, scope: !5392)
!5503 = !{i64 2147585706, i64 2147585749, i64 2147585789}
!5504 = !DILocation(line: 66, column: 1, scope: !5392)
!5505 = !{i64 2147585986, i64 2147586029, i64 2147586069}
!5506 = !DILocation(line: 67, column: 1, scope: !5392)
!5507 = !{i64 2147586245, i64 2147586288, i64 2147586328}
!5508 = !DILocation(line: 68, column: 1, scope: !5392)
!5509 = !{i64 2147586483, i64 2147586526, i64 2147586566}
!5510 = !DILocation(line: 69, column: 1, scope: !5392)
!5511 = !{i64 2147586712, i64 2147586755, i64 2147586795}
!5512 = !DILocation(line: 70, column: 1, scope: !5392)
!5513 = !{i64 2147586920, i64 2147586963, i64 2147587003}
!5514 = !DILocation(line: 71, column: 1, scope: !5392)
!5515 = !{i64 2147587131, i64 2147587174, i64 2147587214}
!5516 = !DILocation(line: 72, column: 1, scope: !5392)
!5517 = !{i64 2147587366, i64 2147587409, i64 2147587449}
!5518 = !DILocation(line: 73, column: 1, scope: !5392)
!5519 = !{i64 2147587595, i64 2147587638, i64 2147587678}
!5520 = !DILocation(line: 74, column: 1, scope: !5392)
!5521 = !{i64 2147587812, i64 2147587855, i64 2147587895}
!5522 = !DILocation(line: 75, column: 1, scope: !5392)
!5523 = !{i64 2147588041, i64 2147588084, i64 2147588124}
!5524 = !DILocation(line: 76, column: 1, scope: !5392)
!5525 = !{i64 2147588279, i64 2147588322, i64 2147588362}
!5526 = !DILocation(line: 77, column: 1, scope: !5392)
!5527 = !{i64 2147588511, i64 2147588554, i64 2147588594}
!5528 = !DILocation(line: 78, column: 1, scope: !5392)
!5529 = !{i64 2147588737, i64 2147588780, i64 2147588820}
!5530 = !DILocation(line: 79, column: 1, scope: !5392)
!5531 = !{i64 2147588954, i64 2147588997, i64 2147589037}
!5532 = !DILocation(line: 80, column: 1, scope: !5392)
!5533 = !{i64 2147589186, i64 2147589229, i64 2147589269}
!5534 = !DILocation(line: 81, column: 1, scope: !5392)
!5535 = !{i64 2147589412, i64 2147589455, i64 2147589495}
!5536 = !DILocation(line: 82, column: 1, scope: !5392)
!5537 = !{i64 2147589626, i64 2147589669, i64 2147589709}
!5538 = !DILocation(line: 83, column: 1, scope: !5392)
!5539 = !{i64 2147589846, i64 2147589889, i64 2147589929}
!5540 = !DILocation(line: 84, column: 1, scope: !5392)
!5541 = !{i64 2147590078, i64 2147590121, i64 2147590161}
!5542 = !DILocation(line: 85, column: 1, scope: !5392)
!5543 = !{i64 2147590286, i64 2147590329, i64 2147590369}
!5544 = !DILocation(line: 86, column: 1, scope: !5392)
!5545 = !{i64 2147590491, i64 2147590534, i64 2147590574}
!5546 = !DILocation(line: 87, column: 1, scope: !5392)
!5547 = !{i64 2147590708, i64 2147590751, i64 2147590791}
!5548 = !DILocation(line: 88, column: 1, scope: !5392)
!5549 = !{i64 2147594983, i64 2147595026, i64 2147595066}
!5550 = !DILocation(line: 89, column: 1, scope: !5392)
!5551 = !{i64 2147595209, i64 2147595252, i64 2147595292}
!5552 = !DILocation(line: 90, column: 1, scope: !5392)
!5553 = !{i64 2147595429, i64 2147595472, i64 2147595512}
!5554 = !DILocation(line: 91, column: 1, scope: !5392)
!5555 = !{i64 2147595634, i64 2147595677, i64 2147595717}
!5556 = !DILocation(line: 92, column: 1, scope: !5392)
!5557 = !{i64 2147595866, i64 2147595909, i64 2147595949}
!5558 = !DILocation(line: 93, column: 1, scope: !5392)
!5559 = !{i64 2147596101, i64 2147596144, i64 2147596184}
!5560 = !DILocation(line: 94, column: 1, scope: !5392)
!5561 = !{i64 2147596351, i64 2147596394, i64 2147596434}
!5562 = !DILocation(line: 95, column: 1, scope: !5392)
!5563 = !{i64 2147596601, i64 2147596644, i64 2147596684}
!5564 = !DILocation(line: 96, column: 1, scope: !5392)
!5565 = !{i64 2147596839, i64 2147596882, i64 2147596922}
!5566 = !DILocation(line: 97, column: 1, scope: !5392)
!5567 = !{i64 2147597050, i64 2147597093, i64 2147597133}
!5568 = !DILocation(line: 98, column: 1, scope: !5392)
!5569 = !{i64 2147597267, i64 2147597310, i64 2147597350}
!5570 = !DILocation(line: 99, column: 1, scope: !5392)
!5571 = !{i64 2147597463, i64 2147597506, i64 2147597546}
!5572 = !DILocation(line: 100, column: 1, scope: !5392)
!5573 = !{i64 2147597665, i64 2147597708, i64 2147597748}
!5574 = !DILocation(line: 101, column: 1, scope: !5392)
!5575 = !{i64 2147597858, i64 2147597901, i64 2147597941}
!5576 = !DILocation(line: 102, column: 1, scope: !5392)
!5577 = !{i64 2147598066, i64 2147598109, i64 2147598149}
!5578 = !DILocation(line: 103, column: 1, scope: !5392)
!5579 = !{i64 2147598262, i64 2147598305, i64 2147598345}
!5580 = !DILocation(line: 104, column: 1, scope: !5392)
!5581 = !{i64 2147598494, i64 2147598537, i64 2147598577}
!5582 = !DILocation(line: 105, column: 1, scope: !5392)
!5583 = !{i64 2147598705, i64 2147598748, i64 2147598788}
!5584 = !DILocation(line: 106, column: 1, scope: !5392)
!5585 = !{i64 2147598904, i64 2147598947, i64 2147598987}
!5586 = !DILocation(line: 107, column: 1, scope: !5392)
!5587 = !{i64 2147599079, i64 2147599122, i64 2147599162}
!5588 = !DILocation(line: 108, column: 1, scope: !5392)
!5589 = !{i64 2147599263, i64 2147599306, i64 2147599346}
!5590 = !DILocation(line: 109, column: 1, scope: !5392)
!5591 = !{i64 2147599465, i64 2147599508, i64 2147599548}
!5592 = !DILocation(line: 110, column: 1, scope: !5392)
!5593 = !{i64 2147599664, i64 2147599707, i64 2147599747}
!5594 = !DILocation(line: 111, column: 1, scope: !5392)
!5595 = !{i64 2147599869, i64 2147599912, i64 2147599952}
!5596 = !DILocation(line: 112, column: 1, scope: !5392)
!5597 = !{i64 2147600062, i64 2147600105, i64 2147600145}
!5598 = !DILocation(line: 113, column: 1, scope: !5392)
!5599 = !{i64 2147600228, i64 2147600271, i64 2147600311}
!5600 = !DILocation(line: 114, column: 1, scope: !5392)
!5601 = !{i64 2147600412, i64 2147600455, i64 2147600495}
!5602 = !DILocation(line: 115, column: 1, scope: !5392)
!5603 = !{i64 2147600602, i64 2147600645, i64 2147600685}
!5604 = !DILocation(line: 116, column: 1, scope: !5392)
!5605 = !{i64 2147600786, i64 2147600829, i64 2147600869}
!5606 = !DILocation(line: 117, column: 1, scope: !5392)
!5607 = !{i64 2147601000, i64 2147601043, i64 2147601083}
!5608 = !DILocation(line: 118, column: 1, scope: !5392)
!5609 = !{i64 2147601211, i64 2147601254, i64 2147601294}
!5610 = !DILocation(line: 119, column: 1, scope: !5392)
!5611 = !{i64 2147601434, i64 2147601477, i64 2147601517}
!5612 = !DILocation(line: 120, column: 1, scope: !5392)
!5613 = !{i64 2147601618, i64 2147601661, i64 2147601701}
!5614 = !DILocation(line: 121, column: 1, scope: !5392)
!5615 = !{i64 2147601832, i64 2147601875, i64 2147601915}
!5616 = !DILocation(line: 122, column: 1, scope: !5392)
!5617 = !{i64 2147601998, i64 2147602041, i64 2147602081}
!5618 = !DILocation(line: 123, column: 1, scope: !5392)
!5619 = !{i64 2147602179, i64 2147602222, i64 2147602262}
!5620 = !DILocation(line: 124, column: 1, scope: !5392)
!5621 = !{i64 2147602372, i64 2147602415, i64 2147602455}
!5622 = !DILocation(line: 125, column: 1, scope: !5392)
!5623 = !{i64 2147602598, i64 2147602641, i64 2147602681}
!5624 = !DILocation(line: 126, column: 1, scope: !5392)
!5625 = !{i64 2147602812, i64 2147602855, i64 2147602895}
!5626 = !DILocation(line: 127, column: 1, scope: !5392)
!5627 = !{i64 2147603038, i64 2147603081, i64 2147603121}
!5628 = !DILocation(line: 128, column: 1, scope: !5392)
!5629 = !{i64 2147603255, i64 2147603298, i64 2147603338}
!5630 = !DILocation(line: 129, column: 1, scope: !5392)
!5631 = !{i64 2147603532, i64 2147603575, i64 2147603615}
!5632 = !DILocation(line: 130, column: 1, scope: !5392)
!5633 = !{i64 2147603758, i64 2147603801, i64 2147603841}
!5634 = !DILocation(line: 131, column: 1, scope: !5392)
!5635 = !{i64 2147603966, i64 2147604009, i64 2147604049}
!5636 = !DILocation(line: 132, column: 1, scope: !5392)
!5637 = !{i64 2147608223, i64 2147608266, i64 2147608306}
!5638 = !DILocation(line: 133, column: 1, scope: !5392)
!5639 = !{i64 2147608488, i64 2147608531, i64 2147608571}
!5640 = !DILocation(line: 134, column: 1, scope: !5392)
!5641 = !{i64 2147608702, i64 2147608745, i64 2147608785}
!5642 = !DILocation(line: 135, column: 1, scope: !5392)
!5643 = !{i64 2147608877, i64 2147608920, i64 2147608960}
!5644 = !DILocation(line: 136, column: 1, scope: !5392)
!5645 = !{i64 2147609131, i64 2147609174, i64 2147609214}
!5646 = !DILocation(line: 137, column: 1, scope: !5392)
!5647 = !{i64 2147609330, i64 2147609373, i64 2147609413}
!5648 = !DILocation(line: 138, column: 1, scope: !5392)
!5649 = !{i64 2147609572, i64 2147609615, i64 2147609655}
!5650 = !DILocation(line: 139, column: 1, scope: !5392)
!5651 = !{i64 2147609735, i64 2147609778, i64 2147609818}
!5652 = !DILocation(line: 140, column: 1, scope: !5392)
!5653 = !{i64 2147609922, i64 2147609965, i64 2147610005}
!5654 = !DILocation(line: 141, column: 1, scope: !5392)
!5655 = !{i64 2147610130, i64 2147610173, i64 2147610213}
!5656 = !DILocation(line: 142, column: 1, scope: !5392)
!5657 = !{i64 2147610326, i64 2147610369, i64 2147610409}
!5658 = !DILocation(line: 143, column: 1, scope: !5392)
!5659 = !{i64 2147610519, i64 2147610562, i64 2147610602}
!5660 = !DILocation(line: 144, column: 1, scope: !5392)
!5661 = !{i64 2147610702, i64 2147610745, i64 2147610785}
!5662 = !DILocation(line: 145, column: 1, scope: !5392)
!5663 = !{i64 2147610916, i64 2147610959, i64 2147610999}
!5664 = !DILocation(line: 146, column: 1, scope: !5392)
!5665 = !{i64 2147611127, i64 2147611170, i64 2147611210}
!5666 = !DILocation(line: 147, column: 1, scope: !5392)
!5667 = !{i64 2147611347, i64 2147611390, i64 2147611430}
!5668 = !DILocation(line: 148, column: 1, scope: !5392)
!5669 = !{i64 2147611554, i64 2147611597, i64 2147611637}
!5670 = !DILocation(line: 149, column: 1, scope: !5392)
!5671 = !{i64 2147611827, i64 2147611870, i64 2147611910}
!5672 = !DILocation(line: 150, column: 1, scope: !5392)
!5673 = !{i64 2147612075, i64 2147612118, i64 2147612158}
!5674 = !DILocation(line: 151, column: 1, scope: !5392)
!5675 = !{i64 2147612274, i64 2147612317, i64 2147612357}
!5676 = !DILocation(line: 152, column: 1, scope: !5392)
!5677 = !{i64 2147612509, i64 2147612552, i64 2147612592}
!5678 = !DILocation(line: 153, column: 1, scope: !5392)
!5679 = !{i64 2147612759, i64 2147612802, i64 2147612842}
!5680 = !DILocation(line: 154, column: 1, scope: !5392)
!5681 = !{i64 2147612961, i64 2147613004, i64 2147613044}
!5682 = !DILocation(line: 155, column: 1, scope: !5392)
!5683 = !{i64 2147613184, i64 2147613227, i64 2147613267}
!5684 = !DILocation(line: 156, column: 1, scope: !5392)
!5685 = !{i64 2147613398, i64 2147613441, i64 2147613481}
!5686 = !DILocation(line: 157, column: 1, scope: !5392)
!5687 = !{i64 2147613642, i64 2147613685, i64 2147613725}
!5688 = !DILocation(line: 158, column: 1, scope: !5392)
!5689 = !{i64 2147613871, i64 2147613914, i64 2147613954}
!5690 = !DILocation(line: 159, column: 1, scope: !5392)
!5691 = !{i64 2147614100, i64 2147614143, i64 2147614183}
!5692 = !DILocation(line: 160, column: 1, scope: !5392)
!5693 = !{i64 2147614308, i64 2147614351, i64 2147614391}
!5694 = !DILocation(line: 161, column: 1, scope: !5392)
!5695 = !{i64 2147614546, i64 2147614589, i64 2147614629}
!5696 = !DILocation(line: 162, column: 1, scope: !5392)
!5697 = !{i64 2147614772, i64 2147614815, i64 2147614855}
!5698 = !DILocation(line: 163, column: 1, scope: !5392)
!5699 = !{i64 2147615031, i64 2147615074, i64 2147615114}
!5700 = !DILocation(line: 164, column: 1, scope: !5392)
!5701 = !{i64 2147615251, i64 2147615294, i64 2147615334}
!5702 = !DILocation(line: 165, column: 1, scope: !5392)
!5703 = !{i64 2147615483, i64 2147615526, i64 2147615566}
!5704 = !DILocation(line: 166, column: 1, scope: !5392)
!5705 = !{i64 2147615724, i64 2147615767, i64 2147615807}
!5706 = !DILocation(line: 167, column: 1, scope: !5392)
!5707 = !{i64 2147615965, i64 2147616008, i64 2147616048}
!5708 = !DILocation(line: 168, column: 1, scope: !5392)
!5709 = !{i64 2147616188, i64 2147616231, i64 2147616271}
!5710 = !DILocation(line: 169, column: 1, scope: !5392)
!5711 = !{i64 2147616405, i64 2147616448, i64 2147616488}
!5712 = !DILocation(line: 170, column: 1, scope: !5392)
!5713 = !{i64 2147620707, i64 2147620750, i64 2147620790}
!5714 = !DILocation(line: 171, column: 1, scope: !5392)
!5715 = !{i64 2147620894, i64 2147620937, i64 2147620977}
!5716 = !DILocation(line: 172, column: 1, scope: !5392)
!5717 = !{i64 2147621081, i64 2147621124, i64 2147621164}
!5718 = !DILocation(line: 173, column: 1, scope: !5392)
!5719 = !{i64 2147621244, i64 2147621287, i64 2147621327}
!5720 = !DILocation(line: 174, column: 1, scope: !5392)
!5721 = !{i64 2147621449, i64 2147621492, i64 2147621532}
!5722 = !DILocation(line: 175, column: 1, scope: !5392)
!5723 = !{i64 2147621642, i64 2147621685, i64 2147621725}
!5724 = !DILocation(line: 176, column: 1, scope: !5392)
!5725 = !{i64 2147621901, i64 2147621944, i64 2147621984}
!5726 = !DILocation(line: 177, column: 1, scope: !5392)
!5727 = !{i64 2147622124, i64 2147622167, i64 2147622207}
!5728 = !DILocation(line: 178, column: 1, scope: !5392)
!5729 = !{i64 2147622353, i64 2147622396, i64 2147622436}
!5730 = !DILocation(line: 179, column: 1, scope: !5392)
!5731 = !{i64 2147622567, i64 2147622610, i64 2147622650}
!5732 = !DILocation(line: 180, column: 1, scope: !5392)
!5733 = !{i64 2147622769, i64 2147622812, i64 2147622852}
!5734 = !DILocation(line: 181, column: 1, scope: !5392)
!5735 = !{i64 2147622965, i64 2147623008, i64 2147623048}
!5736 = !DILocation(line: 182, column: 1, scope: !5392)
!5737 = !{i64 2147623177, i64 2147623220, i64 2147623260}
!5738 = !DILocation(line: 183, column: 1, scope: !5392)
!5739 = !{i64 2147623398, i64 2147623441, i64 2147623481}
!5740 = !DILocation(line: 184, column: 1, scope: !5392)
!5741 = !{i64 2147623613, i64 2147623656, i64 2147623696}
!5742 = !DILocation(line: 185, column: 1, scope: !5392)
!5743 = !{i64 2147623803, i64 2147623846, i64 2147623886}
!5744 = !DILocation(line: 186, column: 1, scope: !5392)
!5745 = !{i64 2147624002, i64 2147624045, i64 2147624085}
!5746 = !DILocation(line: 187, column: 1, scope: !5392)
!5747 = !{i64 2147624207, i64 2147624250, i64 2147624290}
!5748 = !DILocation(line: 188, column: 1, scope: !5392)
!5749 = !{i64 2147624427, i64 2147624470, i64 2147624510}
!5750 = !DILocation(line: 189, column: 1, scope: !5392)
!5751 = !{i64 2147624628, i64 2147624671, i64 2147624711}
!5752 = !DILocation(line: 190, column: 1, scope: !5392)
!5753 = !{i64 2147624827, i64 2147624870, i64 2147624910}
!5754 = !DILocation(line: 191, column: 1, scope: !5392)
!5755 = !{i64 2147625032, i64 2147625075, i64 2147625115}
!5756 = !DILocation(line: 192, column: 1, scope: !5392)
!5757 = !{i64 2147625201, i64 2147625244, i64 2147625284}
!5758 = !DILocation(line: 193, column: 1, scope: !5392)
!5759 = !{i64 2147625385, i64 2147625428, i64 2147625468}
!5760 = !DILocation(line: 194, column: 1, scope: !5392)
!5761 = !{i64 2147625569, i64 2147625612, i64 2147625652}
!5762 = !DILocation(line: 195, column: 1, scope: !5392)
!5763 = !{i64 2147625756, i64 2147625799, i64 2147625839}
!5764 = !DILocation(line: 196, column: 1, scope: !5392)
!5765 = !{i64 2147625940, i64 2147625983, i64 2147626023}
!5766 = !DILocation(line: 197, column: 1, scope: !5392)
!5767 = !{i64 2147626127, i64 2147626170, i64 2147626210}
!5768 = !DILocation(line: 198, column: 1, scope: !5392)
!5769 = !{i64 2147626339, i64 2147626382, i64 2147626422}
!5770 = !DILocation(line: 199, column: 1, scope: !5392)
!5771 = !{i64 2147626577, i64 2147626620, i64 2147626660}
!5772 = !DILocation(line: 200, column: 1, scope: !5392)
!5773 = !{i64 2147626807, i64 2147626850, i64 2147626890}
!5774 = !DILocation(line: 201, column: 1, scope: !5392)
!5775 = !{i64 2147627036, i64 2147627079, i64 2147627119}
!5776 = !DILocation(line: 202, column: 1, scope: !5392)
!5777 = !{i64 2147627223, i64 2147627266, i64 2147627306}
!5778 = !DILocation(line: 203, column: 1, scope: !5392)
!5779 = !{i64 2147627419, i64 2147627462, i64 2147627502}
!5780 = !DILocation(line: 204, column: 1, scope: !5392)
!5781 = !{i64 2147627627, i64 2147627670, i64 2147627710}
!5782 = !DILocation(line: 205, column: 1, scope: !5392)
!5783 = !{i64 2147627839, i64 2147627882, i64 2147627922}
!5784 = !DILocation(line: 206, column: 1, scope: !5392)
!5785 = !{i64 2147628038, i64 2147628081, i64 2147628121}
!5786 = !DILocation(line: 207, column: 1, scope: !5392)
!5787 = !{i64 2147628276, i64 2147628319, i64 2147628359}
!5788 = !DILocation(line: 208, column: 1, scope: !5392)
!5789 = !{i64 2147628472, i64 2147628515, i64 2147628555}
!5790 = !DILocation(line: 209, column: 1, scope: !5392)
!5791 = !{i64 2147628674, i64 2147628717, i64 2147628757}
!5792 = !DILocation(line: 210, column: 1, scope: !5392)
!5793 = !{i64 2147628867, i64 2147628910, i64 2147628950}
!5794 = !DILocation(line: 211, column: 1, scope: !5392)
!5795 = !{i64 2147629101, i64 2147629144, i64 2147629184}
!5796 = !DILocation(line: 212, column: 1, scope: !5392)
!5797 = !{i64 2147629264, i64 2147629307, i64 2147629347}
!5798 = !DILocation(line: 213, column: 1, scope: !5392)
!5799 = !{i64 2147629503, i64 2147629546, i64 2147629586}
!5800 = !DILocation(line: 214, column: 1, scope: !5392)
!5801 = !{i64 2147629742, i64 2147629785, i64 2147629825}
!5802 = !DILocation(line: 215, column: 1, scope: !5392)
!5803 = !{i64 2147634039, i64 2147634082, i64 2147634122}
!5804 = !DILocation(line: 216, column: 1, scope: !5392)
!5805 = !{i64 2147634269, i64 2147634312, i64 2147634352}
!5806 = !DILocation(line: 217, column: 1, scope: !5392)
!5807 = !{i64 2147634456, i64 2147634499, i64 2147634539}
!5808 = !DILocation(line: 218, column: 1, scope: !5392)
!5809 = !{i64 2147634655, i64 2147634698, i64 2147634738}
!5810 = !DILocation(line: 219, column: 1, scope: !5392)
!5811 = !{i64 2147634926, i64 2147634969, i64 2147635009}
!5812 = !DILocation(line: 220, column: 1, scope: !5392)
!5813 = !{i64 2147635101, i64 2147635144, i64 2147635184}
!5814 = !DILocation(line: 221, column: 1, scope: !5392)
!5815 = !{i64 2147635335, i64 2147635378, i64 2147635418}
!5816 = !DILocation(line: 222, column: 1, scope: !5392)
!5817 = !{i64 2147635543, i64 2147635586, i64 2147635626}
!5818 = !DILocation(line: 223, column: 1, scope: !5392)
!5819 = !{i64 2147635761, i64 2147635804, i64 2147635844}
!5820 = !DILocation(line: 224, column: 1, scope: !5392)
!5821 = !{i64 2147635951, i64 2147635994, i64 2147636034}
!5822 = !DILocation(line: 225, column: 1, scope: !5392)
!5823 = !{i64 2147636183, i64 2147636226, i64 2147636266}
!5824 = !DILocation(line: 226, column: 1, scope: !5392)
!5825 = !{i64 2147636403, i64 2147636446, i64 2147636486}
!5826 = !DILocation(line: 227, column: 1, scope: !5392)
!5827 = !{i64 2147636599, i64 2147636642, i64 2147636682}
!5828 = !DILocation(line: 228, column: 1, scope: !5392)
!5829 = !{i64 2147636805, i64 2147636848, i64 2147636888}
!5830 = !DILocation(line: 229, column: 1, scope: !5392)
!5831 = !{i64 2147637010, i64 2147637053, i64 2147637093}
!5832 = !DILocation(line: 230, column: 1, scope: !5392)
!5833 = !{i64 2147637224, i64 2147637267, i64 2147637307}
!5834 = !DILocation(line: 231, column: 1, scope: !5392)
!5835 = !{i64 2147637450, i64 2147637493, i64 2147637533}
!5836 = !DILocation(line: 232, column: 1, scope: !5392)
!5837 = !{i64 2147637658, i64 2147637701, i64 2147637741}
!5838 = !DILocation(line: 233, column: 1, scope: !5392)
!5839 = !{i64 2147637854, i64 2147637897, i64 2147637937}
!5840 = !DILocation(line: 234, column: 1, scope: !5392)
!5841 = !{i64 2147638086, i64 2147638129, i64 2147638169}
!5842 = !DILocation(line: 235, column: 1, scope: !5392)
!5843 = !{i64 2147638270, i64 2147638313, i64 2147638353}
!5844 = !DILocation(line: 236, column: 1, scope: !5392)
!5845 = !{i64 2147638479, i64 2147638522, i64 2147638562}
!5846 = !DILocation(line: 237, column: 1, scope: !5392)
!5847 = !{i64 2147638687, i64 2147638730, i64 2147638770}
!5848 = !DILocation(line: 238, column: 1, scope: !5392)
!5849 = !{i64 2147638883, i64 2147638926, i64 2147638966}
!5850 = !DILocation(line: 239, column: 1, scope: !5392)
!5851 = !{i64 2147639067, i64 2147639110, i64 2147639150}
!5852 = !DILocation(line: 240, column: 1, scope: !5392)
!5853 = !{i64 2147639293, i64 2147639336, i64 2147639376}
!5854 = !DILocation(line: 241, column: 1, scope: !5392)
!5855 = !{i64 2147639519, i64 2147639562, i64 2147639602}
!5856 = !DILocation(line: 242, column: 1, scope: !5392)
!5857 = !{i64 2147639745, i64 2147639788, i64 2147639828}
!5858 = !DILocation(line: 243, column: 1, scope: !5392)
!5859 = !{i64 2147639971, i64 2147640014, i64 2147640054}
!5860 = !DILocation(line: 244, column: 1, scope: !5392)
!5861 = !{i64 2147640197, i64 2147640240, i64 2147640280}
!5862 = !DILocation(line: 245, column: 1, scope: !5392)
!5863 = !{i64 2147640429, i64 2147640472, i64 2147640512}
!5864 = !DILocation(line: 246, column: 1, scope: !5392)
!5865 = !{i64 2147640667, i64 2147640710, i64 2147640750}
!5866 = !DILocation(line: 247, column: 1, scope: !5392)
!5867 = !{i64 2147640887, i64 2147640930, i64 2147640970}
!5868 = !DILocation(line: 248, column: 1, scope: !5392)
!5869 = !{i64 2147641131, i64 2147641174, i64 2147641214}
!5870 = !DILocation(line: 249, column: 1, scope: !5392)
!5871 = !{i64 2147641372, i64 2147641415, i64 2147641455}
!5872 = !DILocation(line: 250, column: 1, scope: !5392)
!5873 = !{i64 2147641607, i64 2147641650, i64 2147641690}
!5874 = !DILocation(line: 251, column: 1, scope: !5392)
!5875 = !{i64 2147641839, i64 2147641882, i64 2147641922}
!5876 = !DILocation(line: 252, column: 1, scope: !5392)
!5877 = !{i64 2147642041, i64 2147642084, i64 2147642124}
!5878 = !DILocation(line: 253, column: 1, scope: !5392)
!5879 = !{i64 2147642291, i64 2147642334, i64 2147642374}
!5880 = !DILocation(line: 254, column: 1, scope: !5392)
!5881 = !{i64 2147642529, i64 2147642572, i64 2147642612}
!5882 = !DILocation(line: 255, column: 1, scope: !5392)
!5883 = !{i64 2147646798, i64 2147646841, i64 2147646881}
!5884 = !DILocation(line: 256, column: 1, scope: !5392)
!5885 = !{i64 2147646994, i64 2147647037, i64 2147647077}
!5886 = !DILocation(line: 257, column: 1, scope: !5392)
!5887 = !{i64 2147647178, i64 2147647221, i64 2147647261}
!5888 = !DILocation(line: 258, column: 1, scope: !5392)
!5889 = !{i64 2147647395, i64 2147647438, i64 2147647478}
!5890 = !DILocation(line: 259, column: 1, scope: !5392)
!5891 = !{i64 2147647600, i64 2147647643, i64 2147647683}
!5892 = !DILocation(line: 260, column: 1, scope: !5392)
!5893 = !{i64 2147647835, i64 2147647878, i64 2147647918}
!5894 = !DILocation(line: 261, column: 1, scope: !5392)
!5895 = !{i64 2147648058, i64 2147648101, i64 2147648141}
!5896 = !DILocation(line: 262, column: 1, scope: !5392)
!5897 = !{i64 2147648282, i64 2147648325, i64 2147648365}
!5898 = !DILocation(line: 263, column: 1, scope: !5392)
!5899 = !{i64 2147648520, i64 2147648563, i64 2147648603}
!5900 = !DILocation(line: 264, column: 1, scope: !5392)
!5901 = !{i64 2147648758, i64 2147648801, i64 2147648841}
!5902 = !DILocation(line: 265, column: 1, scope: !5392)
!5903 = !{i64 2147648975, i64 2147649018, i64 2147649058}
!5904 = !DILocation(line: 266, column: 1, scope: !5392)
!5905 = !{i64 2147649180, i64 2147649223, i64 2147649263}
!5906 = !DILocation(line: 267, column: 1, scope: !5392)
!5907 = !{i64 2147649373, i64 2147649416, i64 2147649456}
!5908 = !DILocation(line: 268, column: 1, scope: !5392)
!5909 = !{i64 2147649626, i64 2147649669, i64 2147649709}
!5910 = !DILocation(line: 269, column: 1, scope: !5392)
!5911 = !{i64 2147649834, i64 2147649877, i64 2147649917}
!5912 = !DILocation(line: 270, column: 1, scope: !5392)
!5913 = !{i64 2147650030, i64 2147650073, i64 2147650113}
!5914 = !DILocation(line: 271, column: 1, scope: !5392)
!5915 = !{i64 2147650244, i64 2147650287, i64 2147650327}
!5916 = !DILocation(line: 272, column: 1, scope: !5392)
!5917 = !{i64 2147650452, i64 2147650495, i64 2147650535}
!5918 = !DILocation(line: 273, column: 1, scope: !5392)
!5919 = !{i64 2147650642, i64 2147650685, i64 2147650725}
!5920 = !DILocation(line: 274, column: 1, scope: !5392)
!5921 = !{i64 2147650856, i64 2147650899, i64 2147650939}
!5922 = !DILocation(line: 275, column: 1, scope: !5392)
!5923 = !{i64 2147651118, i64 2147651161, i64 2147651201}
!5924 = !DILocation(line: 276, column: 1, scope: !5392)
!5925 = !{i64 2147651329, i64 2147651372, i64 2147651412}
!5926 = !DILocation(line: 277, column: 1, scope: !5392)
!5927 = !{i64 2147651573, i64 2147651616, i64 2147651656}
!5928 = !DILocation(line: 278, column: 1, scope: !5392)
!5929 = !{i64 2147651784, i64 2147651827, i64 2147651867}
!5930 = !DILocation(line: 279, column: 1, scope: !5392)
!5931 = !{i64 2147652013, i64 2147652056, i64 2147652096}
!5932 = !DILocation(line: 280, column: 1, scope: !5392)
!5933 = !{i64 2147652278, i64 2147652321, i64 2147652361}
!5934 = !DILocation(line: 281, column: 1, scope: !5392)
!5935 = !{i64 2147652483, i64 2147652526, i64 2147652566}
!5936 = !DILocation(line: 282, column: 1, scope: !5392)
!5937 = !{i64 2147652679, i64 2147652722, i64 2147652762}
!5938 = !DILocation(line: 283, column: 1, scope: !5392)
!5939 = !{i64 2147652902, i64 2147652945, i64 2147652985}
!5940 = !DILocation(line: 284, column: 1, scope: !5392)
!5941 = !{i64 2147653065, i64 2147653108, i64 2147653148}
!5942 = !DILocation(line: 285, column: 1, scope: !5392)
!5943 = !{i64 2147653270, i64 2147653313, i64 2147653353}
!5944 = !DILocation(line: 286, column: 1, scope: !5392)
!5945 = !{i64 2147653490, i64 2147653533, i64 2147653573}
!5946 = !DILocation(line: 287, column: 1, scope: !5392)
!5947 = !{i64 2147653704, i64 2147653747, i64 2147653787}
!5948 = !DILocation(line: 288, column: 1, scope: !5392)
!5949 = !{i64 2147653948, i64 2147653991, i64 2147654031}
!5950 = !DILocation(line: 289, column: 1, scope: !5392)
!5951 = !{i64 2147654180, i64 2147654223, i64 2147654263}
!5952 = !DILocation(line: 290, column: 1, scope: !5392)
!5953 = !{i64 2147654394, i64 2147654437, i64 2147654477}
!5954 = !DILocation(line: 291, column: 1, scope: !5392)
!5955 = !{i64 2147654605, i64 2147654648, i64 2147654688}
!5956 = !DILocation(line: 292, column: 1, scope: !5392)
!5957 = !{i64 2147654798, i64 2147654841, i64 2147654881}
!5958 = !DILocation(line: 293, column: 1, scope: !5392)
!5959 = !{i64 2147654997, i64 2147655040, i64 2147655080}
!5960 = !DILocation(line: 294, column: 1, scope: !5392)
!5961 = !{i64 2147655169, i64 2147655212, i64 2147655252}
!5962 = !DILocation(line: 295, column: 1, scope: !5392)
!5963 = !{i64 2147655362, i64 2147655405, i64 2147655445}
!5964 = !DILocation(line: 296, column: 1, scope: !5392)
!5965 = !{i64 2147655534, i64 2147655577, i64 2147655617}
!5966 = !DILocation(line: 297, column: 1, scope: !5392)
!5967 = !{i64 2147659785, i64 2147659828, i64 2147659868}
!5968 = !DILocation(line: 298, column: 1, scope: !5392)
!5969 = !{i64 2147659978, i64 2147660021, i64 2147660061}
!5970 = !DILocation(line: 299, column: 1, scope: !5392)
!5971 = !{i64 2147660174, i64 2147660217, i64 2147660257}
!5972 = !DILocation(line: 300, column: 1, scope: !5392)
!5973 = !{i64 2147660337, i64 2147660380, i64 2147660420}
!5974 = !DILocation(line: 301, column: 1, scope: !5392)
!5975 = !{i64 2147660539, i64 2147660582, i64 2147660622}
!5976 = !DILocation(line: 302, column: 1, scope: !5392)
!5977 = !{i64 2147660750, i64 2147660793, i64 2147660833}
!5978 = !DILocation(line: 303, column: 1, scope: !5392)
!5979 = !{i64 2147660955, i64 2147660998, i64 2147661038}
!5980 = !DILocation(line: 304, column: 1, scope: !5392)
!5981 = !{i64 2147661163, i64 2147661206, i64 2147661246}
!5982 = !DILocation(line: 305, column: 1, scope: !5392)
!5983 = !{i64 2147661356, i64 2147661399, i64 2147661439}
!5984 = !DILocation(line: 306, column: 1, scope: !5392)
!5985 = !{i64 2147661543, i64 2147661586, i64 2147661626}
!5986 = !DILocation(line: 307, column: 1, scope: !5392)
!5987 = !{i64 2147661709, i64 2147661752, i64 2147661792}
!5988 = !DILocation(line: 308, column: 1, scope: !5392)
!5989 = !{i64 2147661936, i64 2147661979, i64 2147662019}
!5990 = !DILocation(line: 309, column: 1, scope: !5392)
!5991 = !{i64 2147662153, i64 2147662196, i64 2147662236}
!5992 = !DILocation(line: 310, column: 1, scope: !5392)
!5993 = !{i64 2147662379, i64 2147662422, i64 2147662462}
!5994 = !DILocation(line: 311, column: 1, scope: !5392)
!5995 = !{i64 2147662584, i64 2147662627, i64 2147662667}
!5996 = !DILocation(line: 312, column: 1, scope: !5392)
!5997 = !{i64 2147662801, i64 2147662844, i64 2147662884}
!5998 = !DILocation(line: 313, column: 1, scope: !5392)
!5999 = !{i64 2147663093, i64 2147663136, i64 2147663176}
!6000 = !DILocation(line: 314, column: 1, scope: !5392)
!6001 = !{i64 2147663325, i64 2147663368, i64 2147663408}
!6002 = !DILocation(line: 315, column: 1, scope: !5392)
!6003 = !{i64 2147663542, i64 2147663585, i64 2147663625}
!6004 = !DILocation(line: 316, column: 1, scope: !5392)
!6005 = !{i64 2147663749, i64 2147663792, i64 2147663832}
!6006 = !DILocation(line: 317, column: 1, scope: !5392)
!6007 = !{i64 2147663950, i64 2147663993, i64 2147664033}
!6008 = !DILocation(line: 318, column: 1, scope: !5392)
!6009 = !{i64 2147664182, i64 2147664225, i64 2147664265}
!6010 = !DILocation(line: 319, column: 1, scope: !5392)
!6011 = !{i64 2147664390, i64 2147664433, i64 2147664473}
!6012 = !DILocation(line: 320, column: 1, scope: !5392)
!6013 = !{i64 2147664580, i64 2147664623, i64 2147664663}
!6014 = !DILocation(line: 321, column: 1, scope: !5392)
!6015 = !{i64 2147664806, i64 2147664849, i64 2147664889}
!6016 = !DILocation(line: 322, column: 1, scope: !5392)
!6017 = !{i64 2147664995, i64 2147665038, i64 2147665078}
!6018 = !DILocation(line: 323, column: 1, scope: !5392)
!6019 = !{i64 2147665266, i64 2147665309, i64 2147665349}
!6020 = !DILocation(line: 324, column: 1, scope: !5392)
!6021 = !{i64 2147665486, i64 2147665529, i64 2147665569}
!6022 = !DILocation(line: 325, column: 1, scope: !5392)
!6023 = !{i64 2147665739, i64 2147665782, i64 2147665822}
!6024 = !DILocation(line: 326, column: 1, scope: !5392)
!6025 = !{i64 2147665947, i64 2147665990, i64 2147666030}
!6026 = !DILocation(line: 327, column: 1, scope: !5392)
!6027 = !{i64 2147666179, i64 2147666222, i64 2147666262}
!6028 = !DILocation(line: 328, column: 1, scope: !5392)
!6029 = !{i64 2147666390, i64 2147666433, i64 2147666473}
!6030 = !DILocation(line: 329, column: 1, scope: !5392)
!6031 = !{i64 2147666580, i64 2147666623, i64 2147666663}
!6032 = !DILocation(line: 330, column: 1, scope: !5392)
!6033 = !{i64 2147666794, i64 2147666837, i64 2147666877}
!6034 = !DILocation(line: 331, column: 1, scope: !5392)
!6035 = !{i64 2147666993, i64 2147667036, i64 2147667076}
!6036 = !DILocation(line: 332, column: 1, scope: !5392)
!6037 = !{i64 2147667180, i64 2147667223, i64 2147667263}
!6038 = !DILocation(line: 333, column: 1, scope: !5392)
!6039 = !{i64 2147667388, i64 2147667431, i64 2147667471}
!6040 = !DILocation(line: 334, column: 1, scope: !5392)
!6041 = !{i64 2147667617, i64 2147667660, i64 2147667700}
!6042 = !DILocation(line: 335, column: 1, scope: !5392)
!6043 = !{i64 2147667819, i64 2147667862, i64 2147667902}
!6044 = !DILocation(line: 336, column: 1, scope: !5392)
!6045 = !{i64 2147668018, i64 2147668061, i64 2147668101}
!6046 = !DILocation(line: 337, column: 1, scope: !5392)
!6047 = !{i64 2147668235, i64 2147668278, i64 2147668318}
!6048 = !DILocation(line: 339, column: 1, scope: !5392)
!6049 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !322, file: !322, line: 30, type: !329, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !6050)
!6050 = !{!6051, !6052}
!6051 = !DILocalVariable(name: "arg", arg: 1, scope: !6049, file: !322, line: 30, type: !331)
!6052 = !DILocalVariable(name: "key", scope: !6049, file: !322, line: 32, type: !118)
!6053 = !DILocation(line: 0, scope: !6049)
!6054 = !DILocation(line: 37, column: 2, scope: !6049)
!6055 = !DILocation(line: 38, column: 2, scope: !6049)
!6056 = !DILocation(line: 55, column: 2, scope: !6057, inlinedAt: !6064)
!6057 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6058, file: !6058, line: 42, type: !6059, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !6061)
!6058 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6059 = !DISubroutineType(types: !6060)
!6060 = !{!32}
!6061 = !{!6062, !6063}
!6062 = !DILocalVariable(name: "key", scope: !6057, file: !6058, line: 44, type: !32)
!6063 = !DILocalVariable(name: "tmp", scope: !6057, file: !6058, line: 53, type: !32)
!6064 = distinct !DILocation(line: 40, column: 8, scope: !6049)
!6065 = !{i64 2189279}
!6066 = !DILocation(line: 0, scope: !6057, inlinedAt: !6064)
!6067 = !DILocalVariable(name: "key", arg: 1, scope: !6068, file: !6058, line: 84, type: !32)
!6068 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6058, file: !6058, line: 84, type: !6069, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !6071)
!6069 = !DISubroutineType(types: !6070)
!6070 = !{null, !32}
!6071 = !{!6067}
!6072 = !DILocation(line: 0, scope: !6068, inlinedAt: !6073)
!6073 = distinct !DILocation(line: 47, column: 2, scope: !6049)
!6074 = !DILocation(line: 95, column: 2, scope: !6068, inlinedAt: !6073)
!6075 = !{i64 2190096}
!6076 = !DILocation(line: 51, column: 18, scope: !6049)
!6077 = !DILocation(line: 53, column: 2, scope: !6049)
!6078 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6079, file: !6079, line: 1609, type: !3019, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !2102)
!6079 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6080 = !DILocation(line: 1611, column: 3, scope: !6078)
!6081 = !DILocation(line: 1612, column: 1, scope: !6078)
!6082 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6079, file: !6079, line: 1629, type: !3019, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !2102)
!6083 = !DILocation(line: 1631, column: 3, scope: !6082)
!6084 = !DILocation(line: 1632, column: 1, scope: !6082)
!6085 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !359, file: !359, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !6086)
!6086 = !{!6087}
!6087 = !DILocalVariable(name: "dev", arg: 1, scope: !6085, file: !359, line: 26, type: !367)
!6088 = !DILocation(line: 0, scope: !6085)
!6089 = !DILocation(line: 68, column: 2, scope: !6085)
!6090 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6091, file: !6091, line: 14, type: !4346, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !6092)
!6091 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6092 = !{!6093, !6094}
!6093 = !DILocalVariable(name: "fmt", arg: 1, scope: !6090, file: !6091, line: 14, type: !278)
!6094 = !DILocalVariable(name: "ap", scope: !6090, file: !6091, line: 16, type: !6095)
!6095 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3352, line: 99, baseType: !6096)
!6096 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3352, line: 40, baseType: !6097)
!6097 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6091, baseType: !6098)
!6098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6099)
!6099 = !{!6100}
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6098, file: !6091, line: 16, baseType: !113, size: 32)
!6101 = !DILocation(line: 0, scope: !6090)
!6102 = !DILocation(line: 16, column: 2, scope: !6090)
!6103 = !DILocation(line: 16, column: 10, scope: !6090)
!6104 = !DILocation(line: 18, column: 2, scope: !6090)
!6105 = !DILocation(line: 19, column: 2, scope: !6090)
!6106 = !DILocation(line: 20, column: 2, scope: !6090)
!6107 = !DILocation(line: 21, column: 1, scope: !6090)
!6108 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6091, file: !6091, line: 23, type: !6109, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !6111)
!6109 = !DISubroutineType(types: !6110)
!6110 = !{null, !278, !6095}
!6111 = !{!6112, !6113}
!6112 = !DILocalVariable(name: "fmt", arg: 1, scope: !6108, file: !6091, line: 23, type: !278)
!6113 = !DILocalVariable(name: "ap", arg: 2, scope: !6108, file: !6091, line: 23, type: !6095)
!6114 = !DILocation(line: 0, scope: !6108)
!6115 = !DILocation(line: 25, column: 2, scope: !6108)
!6116 = !DILocation(line: 26, column: 1, scope: !6108)
!6117 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6091, file: !6091, line: 52, type: !6118, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !6120)
!6118 = !DISubroutineType(types: !6119)
!6119 = !{null, !119, !13, !239}
!6120 = !{!6121, !6122, !6123, !6124}
!6121 = !DILocalVariable(name: "level", arg: 1, scope: !6117, file: !6091, line: 52, type: !119)
!6122 = !DILocalVariable(name: "data", arg: 2, scope: !6117, file: !6091, line: 52, type: !13)
!6123 = !DILocalVariable(name: "size", arg: 3, scope: !6117, file: !6091, line: 52, type: !239)
!6124 = !DILocalVariable(name: "data_buffer", scope: !6117, file: !6091, line: 54, type: !278)
!6125 = !DILocation(line: 0, scope: !6117)
!6126 = !DILocation(line: 55, column: 14, scope: !6117)
!6127 = !DILocation(line: 55, column: 2, scope: !6117)
!6128 = !DILocation(line: 56, column: 3, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6117, file: !6091, line: 55, column: 20)
!6130 = !DILocation(line: 57, column: 3, scope: !6129)
!6131 = !DILocation(line: 59, column: 7, scope: !6129)
!6132 = distinct !{!6132, !6127, !6133}
!6133 = !DILocation(line: 65, column: 2, scope: !6117)
!6134 = !DILocation(line: 66, column: 1, scope: !6117)
!6135 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6136, file: !6136, line: 175, type: !6137, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !6139)
!6136 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6137 = !DISubroutineType(types: !6138)
!6138 = !{!107, !119}
!6139 = !{!6140}
!6140 = !DILocalVariable(name: "level", arg: 1, scope: !6135, file: !6136, line: 175, type: !119)
!6141 = !DILocation(line: 0, scope: !6135)
!6142 = !DILocation(line: 177, column: 2, scope: !6135)
!6143 = !DILocation(line: 189, column: 1, scope: !6135)
!6144 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6091, file: !6091, line: 28, type: !6145, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !6147)
!6145 = !DISubroutineType(types: !6146)
!6146 = !{null, !278, !239}
!6147 = !{!6148, !6149, !6150, !6152, !6154}
!6148 = !DILocalVariable(name: "data", arg: 1, scope: !6144, file: !6091, line: 28, type: !278)
!6149 = !DILocalVariable(name: "length", arg: 2, scope: !6144, file: !6091, line: 28, type: !239)
!6150 = !DILocalVariable(name: "i", scope: !6151, file: !6091, line: 30, type: !239)
!6151 = distinct !DILexicalBlock(scope: !6144, file: !6091, line: 30, column: 2)
!6152 = !DILocalVariable(name: "i", scope: !6153, file: !6091, line: 40, type: !239)
!6153 = distinct !DILexicalBlock(scope: !6144, file: !6091, line: 40, column: 2)
!6154 = !DILocalVariable(name: "c", scope: !6155, file: !6091, line: 42, type: !186)
!6155 = distinct !DILexicalBlock(scope: !6156, file: !6091, line: 41, column: 19)
!6156 = distinct !DILexicalBlock(scope: !6157, file: !6091, line: 41, column: 7)
!6157 = distinct !DILexicalBlock(scope: !6158, file: !6091, line: 40, column: 54)
!6158 = distinct !DILexicalBlock(scope: !6153, file: !6091, line: 40, column: 2)
!6159 = !DILocation(line: 0, scope: !6144)
!6160 = !DILocation(line: 0, scope: !6151)
!6161 = !DILocation(line: 30, column: 2, scope: !6151)
!6162 = !DILocation(line: 38, column: 2, scope: !6144)
!6163 = !DILocation(line: 0, scope: !6153)
!6164 = !DILocation(line: 40, column: 2, scope: !6153)
!6165 = !DILocation(line: 31, column: 9, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !6091, line: 31, column: 7)
!6167 = distinct !DILexicalBlock(scope: !6168, file: !6091, line: 30, column: 54)
!6168 = distinct !DILexicalBlock(scope: !6151, file: !6091, line: 30, column: 2)
!6169 = !DILocation(line: 31, column: 7, scope: !6167)
!6170 = !DILocation(line: 32, column: 35, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6166, file: !6091, line: 31, column: 19)
!6172 = !DILocation(line: 32, column: 20, scope: !6171)
!6173 = !DILocation(line: 32, column: 4, scope: !6171)
!6174 = !DILocation(line: 33, column: 3, scope: !6171)
!6175 = !DILocation(line: 34, column: 4, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6166, file: !6091, line: 33, column: 10)
!6177 = !DILocation(line: 30, column: 50, scope: !6168)
!6178 = !DILocation(line: 30, column: 24, scope: !6168)
!6179 = distinct !{!6179, !6161, !6180}
!6180 = !DILocation(line: 36, column: 2, scope: !6151)
!6181 = !DILocation(line: 49, column: 2, scope: !6144)
!6182 = !DILocation(line: 50, column: 1, scope: !6144)
!6183 = !DILocation(line: 41, column: 9, scope: !6156)
!6184 = !DILocation(line: 41, column: 7, scope: !6157)
!6185 = !DILocation(line: 42, column: 22, scope: !6155)
!6186 = !DILocation(line: 0, scope: !6155)
!6187 = !DILocation(line: 44, column: 25, scope: !6155)
!6188 = !DILocation(line: 44, column: 17, scope: !6155)
!6189 = !DILocation(line: 44, column: 33, scope: !6155)
!6190 = !DILocation(line: 44, column: 4, scope: !6155)
!6191 = !DILocation(line: 45, column: 3, scope: !6155)
!6192 = !DILocation(line: 46, column: 4, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6156, file: !6091, line: 45, column: 10)
!6194 = !DILocation(line: 40, column: 50, scope: !6158)
!6195 = !DILocation(line: 40, column: 24, scope: !6158)
!6196 = distinct !{!6196, !6164, !6197}
!6197 = !DILocation(line: 48, column: 2, scope: !6153)
!6198 = distinct !DISubprogram(name: "isprint", scope: !5136, file: !5136, line: 37, type: !301, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2492, retainedNodes: !6199)
!6199 = !{!6200}
!6200 = !DILocalVariable(name: "c", arg: 1, scope: !6198, file: !5136, line: 37, type: !119)
!6201 = !DILocation(line: 0, scope: !6198)
!6202 = !DILocation(line: 39, column: 38, scope: !6198)
!6203 = !DILocation(line: 39, column: 2, scope: !6198)
!6204 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6205, file: !6205, line: 57, type: !6206, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !6252)
!6205 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6206 = !DISubroutineType(types: !6207)
!6207 = !{null, !32, !6208}
!6208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6209, size: 32)
!6209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6210)
!6210 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2615, line: 141, baseType: !6211)
!6211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2615, line: 97, size: 256, elements: !6212)
!6212 = !{!6213}
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6211, file: !2615, line: 107, baseType: !6214, size: 256)
!6214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2615, line: 98, size: 256, elements: !6215)
!6215 = !{!6216, !6221, !6226, !6231, !6236, !6241, !6246, !6251}
!6216 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2615, line: 99, baseType: !6217, size: 32)
!6217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2615, line: 99, size: 32, elements: !6218)
!6218 = !{!6219, !6220}
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6217, file: !2615, line: 99, baseType: !118, size: 32)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6217, file: !2615, line: 99, baseType: !118, size: 32)
!6221 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2615, line: 100, baseType: !6222, size: 32, offset: 32)
!6222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2615, line: 100, size: 32, elements: !6223)
!6223 = !{!6224, !6225}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6222, file: !2615, line: 100, baseType: !118, size: 32)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6222, file: !2615, line: 100, baseType: !118, size: 32)
!6226 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2615, line: 101, baseType: !6227, size: 32, offset: 64)
!6227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2615, line: 101, size: 32, elements: !6228)
!6228 = !{!6229, !6230}
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6227, file: !2615, line: 101, baseType: !118, size: 32)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6227, file: !2615, line: 101, baseType: !118, size: 32)
!6231 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2615, line: 102, baseType: !6232, size: 32, offset: 96)
!6232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2615, line: 102, size: 32, elements: !6233)
!6233 = !{!6234, !6235}
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6232, file: !2615, line: 102, baseType: !118, size: 32)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6232, file: !2615, line: 102, baseType: !118, size: 32)
!6236 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2615, line: 103, baseType: !6237, size: 32, offset: 128)
!6237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2615, line: 103, size: 32, elements: !6238)
!6238 = !{!6239, !6240}
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6237, file: !2615, line: 103, baseType: !118, size: 32)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6237, file: !2615, line: 103, baseType: !118, size: 32)
!6241 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2615, line: 104, baseType: !6242, size: 32, offset: 160)
!6242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2615, line: 104, size: 32, elements: !6243)
!6243 = !{!6244, !6245}
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6242, file: !2615, line: 104, baseType: !118, size: 32)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6242, file: !2615, line: 104, baseType: !118, size: 32)
!6246 = !DIDerivedType(tag: DW_TAG_member, scope: !6214, file: !2615, line: 105, baseType: !6247, size: 32, offset: 192)
!6247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6214, file: !2615, line: 105, size: 32, elements: !6248)
!6248 = !{!6249, !6250}
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6247, file: !2615, line: 105, baseType: !118, size: 32)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6247, file: !2615, line: 105, baseType: !118, size: 32)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6214, file: !2615, line: 106, baseType: !118, size: 32, offset: 224)
!6252 = !{!6253, !6254}
!6253 = !DILocalVariable(name: "reason", arg: 1, scope: !6204, file: !6205, line: 57, type: !32)
!6254 = !DILocalVariable(name: "esf", arg: 2, scope: !6204, file: !6205, line: 57, type: !6208)
!6255 = !DILocation(line: 0, scope: !6204)
!6256 = !DILocation(line: 60, column: 10, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6204, file: !6205, line: 60, column: 6)
!6258 = !DILocation(line: 60, column: 6, scope: !6204)
!6259 = !DILocation(line: 61, column: 3, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6257, file: !6205, line: 60, column: 19)
!6261 = !DILocation(line: 62, column: 2, scope: !6260)
!6262 = !DILocation(line: 63, column: 2, scope: !6204)
!6263 = !DILocation(line: 64, column: 1, scope: !6204)
!6264 = distinct !DISubprogram(name: "esf_dump", scope: !6205, file: !6205, line: 20, type: !6265, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !6267)
!6265 = !DISubroutineType(types: !6266)
!6266 = !{null, !6208}
!6267 = !{!6268}
!6268 = !DILocalVariable(name: "esf", arg: 1, scope: !6264, file: !6205, line: 20, type: !6208)
!6269 = !DILocation(line: 0, scope: !6264)
!6270 = !DILocation(line: 22, column: 2, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6272, file: !6205, line: 22, column: 2)
!6272 = distinct !DILexicalBlock(scope: !6273, file: !6205, line: 22, column: 2)
!6273 = distinct !DILexicalBlock(scope: !6274, file: !6205, line: 22, column: 2)
!6274 = distinct !DILexicalBlock(scope: !6264, file: !6205, line: 22, column: 2)
!6275 = !DILocation(line: 24, column: 2, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6277, file: !6205, line: 24, column: 2)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !6205, line: 24, column: 2)
!6278 = distinct !DILexicalBlock(scope: !6279, file: !6205, line: 24, column: 2)
!6279 = distinct !DILexicalBlock(scope: !6264, file: !6205, line: 24, column: 2)
!6280 = !DILocation(line: 26, column: 2, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !6205, line: 26, column: 2)
!6282 = distinct !DILexicalBlock(scope: !6283, file: !6205, line: 26, column: 2)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !6205, line: 26, column: 2)
!6284 = distinct !DILexicalBlock(scope: !6264, file: !6205, line: 26, column: 2)
!6285 = !DILocation(line: 53, column: 2, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !6205, line: 53, column: 2)
!6287 = distinct !DILexicalBlock(scope: !6288, file: !6205, line: 53, column: 2)
!6288 = distinct !DILexicalBlock(scope: !6289, file: !6205, line: 53, column: 2)
!6289 = distinct !DILexicalBlock(scope: !6264, file: !6205, line: 53, column: 2)
!6290 = !DILocation(line: 55, column: 1, scope: !6264)
!6291 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6205, file: !6205, line: 82, type: !6292, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !6307)
!6292 = !DISubroutineType(types: !6293)
!6293 = !{null, !6208, !6294}
!6294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6295, size: 32)
!6295 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !216, line: 37, baseType: !6296)
!6296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6297)
!6297 = !{!6298, !6299, !6300, !6301, !6302, !6303, !6304, !6305, !6306}
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6296, file: !216, line: 26, baseType: !118, size: 32)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6296, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6296, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6296, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6296, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6296, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6296, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6296, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6296, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6307 = !{!6308, !6309, !6310}
!6308 = !DILocalVariable(name: "esf", arg: 1, scope: !6291, file: !6205, line: 82, type: !6208)
!6309 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6291, file: !6205, line: 82, type: !6294)
!6310 = !DILocalVariable(name: "reason", scope: !6291, file: !6205, line: 88, type: !32)
!6311 = !DILocation(line: 0, scope: !6291)
!6312 = !DILocation(line: 88, column: 35, scope: !6291)
!6313 = !DILocation(line: 108, column: 2, scope: !6291)
!6314 = !DILocation(line: 131, column: 1, scope: !6291)
!6315 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6205, file: !6205, line: 133, type: !6316, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2495, retainedNodes: !6318)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{null, !113}
!6318 = !{!6319, !6320, !6321}
!6319 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6315, file: !6205, line: 133, type: !113)
!6320 = !DILocalVariable(name: "ssf_contents", scope: !6315, file: !6205, line: 135, type: !900)
!6321 = !DILocalVariable(name: "oops_esf", scope: !6315, file: !6205, line: 136, type: !6210)
!6322 = !DILocation(line: 0, scope: !6315)
!6323 = !DILocation(line: 136, column: 2, scope: !6315)
!6324 = !DILocation(line: 136, column: 15, scope: !6315)
!6325 = !DILocation(line: 139, column: 22, scope: !6315)
!6326 = !DILocation(line: 139, column: 17, scope: !6315)
!6327 = !DILocation(line: 139, column: 20, scope: !6315)
!6328 = !DILocation(line: 141, column: 2, scope: !6315)
!6329 = !DILocation(line: 142, column: 2, scope: !6315)
!6330 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6331, file: !6331, line: 40, type: !6069, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !6332)
!6331 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6332 = !{!6333}
!6333 = !DILocalVariable(name: "irq", arg: 1, scope: !6330, file: !6331, line: 40, type: !32)
!6334 = !DILocation(line: 0, scope: !6330)
!6335 = !DILocation(line: 42, column: 2, scope: !6330)
!6336 = !DILocation(line: 43, column: 1, scope: !6330)
!6337 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !533, file: !533, line: 1684, type: !6338, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !6340)
!6338 = !DISubroutineType(types: !6339)
!6339 = !{null, !798}
!6340 = !{!6341}
!6341 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6337, file: !533, line: 1684, type: !798)
!6342 = !DILocation(line: 0, scope: !6337)
!6343 = !DILocation(line: 1686, column: 23, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6337, file: !533, line: 1686, column: 7)
!6345 = !DILocation(line: 1686, column: 7, scope: !6337)
!6346 = !DILocation(line: 1688, column: 5, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6344, file: !533, line: 1687, column: 3)
!6348 = !{i64 2151258055}
!6349 = !DILocation(line: 1689, column: 81, scope: !6347)
!6350 = !DILocation(line: 1689, column: 60, scope: !6347)
!6351 = !DILocation(line: 1689, column: 34, scope: !6347)
!6352 = !DILocation(line: 1689, column: 5, scope: !6347)
!6353 = !DILocation(line: 1689, column: 43, scope: !6347)
!6354 = !DILocation(line: 1690, column: 5, scope: !6347)
!6355 = !{i64 2151258169}
!6356 = !DILocation(line: 1691, column: 3, scope: !6347)
!6357 = !DILocation(line: 1692, column: 1, scope: !6337)
!6358 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6331, file: !6331, line: 45, type: !6069, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !6359)
!6359 = !{!6360}
!6360 = !DILocalVariable(name: "irq", arg: 1, scope: !6358, file: !6331, line: 45, type: !32)
!6361 = !DILocation(line: 0, scope: !6358)
!6362 = !DILocation(line: 47, column: 2, scope: !6358)
!6363 = !DILocation(line: 48, column: 1, scope: !6358)
!6364 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !533, file: !533, line: 1722, type: !6338, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !6365)
!6365 = !{!6366}
!6366 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6364, file: !533, line: 1722, type: !798)
!6367 = !DILocation(line: 0, scope: !6364)
!6368 = !DILocation(line: 1724, column: 23, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6364, file: !533, line: 1724, column: 7)
!6370 = !DILocation(line: 1724, column: 7, scope: !6364)
!6371 = !DILocation(line: 1726, column: 81, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6369, file: !533, line: 1725, column: 3)
!6373 = !DILocation(line: 1726, column: 60, scope: !6372)
!6374 = !DILocation(line: 1726, column: 34, scope: !6372)
!6375 = !DILocation(line: 1726, column: 5, scope: !6372)
!6376 = !DILocation(line: 1726, column: 43, scope: !6372)
!6377 = !DILocation(line: 271, column: 3, scope: !6378, inlinedAt: !6380)
!6378 = distinct !DISubprogram(name: "__DSB", scope: !6379, file: !6379, line: 269, type: !3019, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !2102)
!6379 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6380 = distinct !DILocation(line: 1727, column: 5, scope: !6372)
!6381 = !{i64 3712438}
!6382 = !DILocation(line: 260, column: 3, scope: !6383, inlinedAt: !6384)
!6383 = distinct !DISubprogram(name: "__ISB", scope: !6379, file: !6379, line: 258, type: !3019, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !2102)
!6384 = distinct !DILocation(line: 1728, column: 5, scope: !6372)
!6385 = !{i64 3712155}
!6386 = !DILocation(line: 1729, column: 3, scope: !6372)
!6387 = !DILocation(line: 1730, column: 1, scope: !6364)
!6388 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6331, file: !6331, line: 50, type: !6389, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !6391)
!6389 = !DISubroutineType(types: !6390)
!6390 = !{!119, !32}
!6391 = !{!6392}
!6392 = !DILocalVariable(name: "irq", arg: 1, scope: !6388, file: !6331, line: 50, type: !32)
!6393 = !DILocation(line: 0, scope: !6388)
!6394 = !DILocation(line: 52, column: 20, scope: !6388)
!6395 = !DILocation(line: 52, column: 9, scope: !6388)
!6396 = !DILocation(line: 52, column: 41, scope: !6388)
!6397 = !DILocation(line: 52, column: 39, scope: !6388)
!6398 = !DILocation(line: 52, column: 2, scope: !6388)
!6399 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6331, file: !6331, line: 64, type: !6400, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !6402)
!6400 = !DISubroutineType(types: !6401)
!6401 = !{null, !32, !32, !118}
!6402 = !{!6403, !6404, !6405}
!6403 = !DILocalVariable(name: "irq", arg: 1, scope: !6399, file: !6331, line: 64, type: !32)
!6404 = !DILocalVariable(name: "prio", arg: 2, scope: !6399, file: !6331, line: 64, type: !32)
!6405 = !DILocalVariable(name: "flags", arg: 3, scope: !6399, file: !6331, line: 64, type: !118)
!6406 = !DILocation(line: 0, scope: !6399)
!6407 = !DILocation(line: 83, column: 8, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6409, file: !6331, line: 82, column: 9)
!6409 = distinct !DILexicalBlock(scope: !6399, file: !6331, line: 76, column: 6)
!6410 = !DILocation(line: 91, column: 2, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6412, file: !6331, line: 91, column: 2)
!6412 = distinct !DILexicalBlock(scope: !6399, file: !6331, line: 91, column: 2)
!6413 = !DILocation(line: 91, column: 2, scope: !6412)
!6414 = !DILocation(line: 91, column: 2, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6411, file: !6331, line: 91, column: 2)
!6416 = !DILocation(line: 95, column: 2, scope: !6399)
!6417 = !DILocation(line: 96, column: 1, scope: !6399)
!6418 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6419, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !6421)
!6419 = !DISubroutineType(types: !6420)
!6420 = !{null, !798, !118}
!6421 = !{!6422, !6423}
!6422 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6418, file: !533, line: 1814, type: !798)
!6423 = !DILocalVariable(name: "priority", arg: 2, scope: !6418, file: !533, line: 1814, type: !118)
!6424 = !DILocation(line: 0, scope: !6418)
!6425 = !DILocation(line: 0, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6418, file: !533, line: 1816, column: 7)
!6427 = !DILocation(line: 1816, column: 7, scope: !6418)
!6428 = !DILocation(line: 1824, column: 1, scope: !6418)
!6429 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6331, file: !6331, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2506, retainedNodes: !6430)
!6430 = !{!6431}
!6431 = !DILocalVariable(name: "unused", arg: 1, scope: !6429, file: !6331, line: 155, type: !13)
!6432 = !DILocation(line: 0, scope: !6429)
!6433 = !DILocation(line: 159, column: 2, scope: !6429)
!6434 = !DILocation(line: 160, column: 1, scope: !6429)
!6435 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6436, file: !6436, line: 87, type: !3019, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !2102)
!6436 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6437 = !DILocation(line: 89, column: 2, scope: !6435)
!6438 = !DILocation(line: 90, column: 2, scope: !6435)
!6439 = !DILocation(line: 91, column: 1, scope: !6435)
!6440 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6436, file: !6436, line: 23, type: !3019, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2102)
!6441 = !DISubprogram(name: "z_arm_int_exit", scope: !6442, file: !6442, line: 153, type: !3019, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2102)
!6442 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6443 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6444, file: !6444, line: 256, type: !3019, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !2102)
!6444 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6445 = !DILocation(line: 258, column: 2, scope: !6443)
!6446 = !DILocation(line: 260, column: 2, scope: !6443)
!6447 = !DILocation(line: 262, column: 2, scope: !6443)
!6448 = !DILocation(line: 263, column: 2, scope: !6443)
!6449 = !DILocation(line: 267, column: 2, scope: !6443)
!6450 = !DILocation(line: 268, column: 2, scope: !6443)
!6451 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6444, file: !6444, line: 53, type: !3019, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !2102)
!6452 = !DILocation(line: 55, column: 12, scope: !6451)
!6453 = !DILocation(line: 271, column: 3, scope: !6454, inlinedAt: !6455)
!6454 = distinct !DISubprogram(name: "__DSB", scope: !6379, file: !6379, line: 269, type: !3019, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !2102)
!6455 = distinct !DILocation(line: 56, column: 2, scope: !6451)
!6456 = !{i64 3711109}
!6457 = !DILocation(line: 260, column: 3, scope: !6458, inlinedAt: !6459)
!6458 = distinct !DISubprogram(name: "__ISB", scope: !6379, file: !6379, line: 258, type: !3019, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !2102)
!6459 = distinct !DILocation(line: 57, column: 2, scope: !6451)
!6460 = !{i64 3710826}
!6461 = !DILocation(line: 58, column: 1, scope: !6451)
!6462 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6444, file: !6444, line: 96, type: !3019, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !2102)
!6463 = !DILocation(line: 103, column: 13, scope: !6462)
!6464 = !DILocation(line: 975, column: 3, scope: !6465, inlinedAt: !6468)
!6465 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6379, file: !6379, line: 971, type: !3257, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6466)
!6466 = !{!6467}
!6467 = !DILocalVariable(name: "result", scope: !6465, file: !6379, line: 973, type: !118)
!6468 = distinct !DILocation(line: 189, column: 16, scope: !6462)
!6469 = !{i64 3731939}
!6470 = !DILocation(line: 0, scope: !6465, inlinedAt: !6468)
!6471 = !DILocation(line: 189, column: 32, scope: !6462)
!6472 = !DILocalVariable(name: "control", arg: 1, scope: !6473, file: !6379, line: 1001, type: !118)
!6473 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6379, file: !6379, line: 1001, type: !6474, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6476)
!6474 = !DISubroutineType(types: !6475)
!6475 = !{null, !118}
!6476 = !{!6472}
!6477 = !DILocation(line: 0, scope: !6473, inlinedAt: !6478)
!6478 = distinct !DILocation(line: 189, column: 2, scope: !6462)
!6479 = !DILocation(line: 1003, column: 3, scope: !6473, inlinedAt: !6478)
!6480 = !{i64 3732659}
!6481 = !DILocation(line: 260, column: 3, scope: !6458, inlinedAt: !6482)
!6482 = distinct !DILocation(line: 1004, column: 3, scope: !6473, inlinedAt: !6478)
!6483 = !DILocation(line: 191, column: 1, scope: !6462)
!6484 = distinct !DISubprogram(name: "arch_swap", scope: !6485, file: !6485, line: 33, type: !6389, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6486)
!6485 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6486 = !{!6487}
!6487 = !DILocalVariable(name: "key", arg: 1, scope: !6484, file: !6485, line: 33, type: !32)
!6488 = !DILocation(line: 0, scope: !6484)
!6489 = !DILocation(line: 36, column: 2, scope: !6484)
!6490 = !DILocation(line: 36, column: 17, scope: !6484)
!6491 = !DILocation(line: 36, column: 25, scope: !6484)
!6492 = !DILocation(line: 37, column: 37, scope: !6484)
!6493 = !DILocation(line: 37, column: 17, scope: !6484)
!6494 = !DILocation(line: 37, column: 35, scope: !6484)
!6495 = !DILocation(line: 41, column: 12, scope: !6484)
!6496 = !DILocalVariable(name: "key", arg: 1, scope: !6497, file: !6058, line: 84, type: !32)
!6497 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6058, file: !6058, line: 84, type: !6069, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6498)
!6498 = !{!6496}
!6499 = !DILocation(line: 0, scope: !6497, inlinedAt: !6500)
!6500 = distinct !DILocation(line: 44, column: 2, scope: !6484)
!6501 = !DILocation(line: 95, column: 2, scope: !6497, inlinedAt: !6500)
!6502 = !{i64 2281610}
!6503 = !DILocation(line: 53, column: 9, scope: !6484)
!6504 = !DILocation(line: 53, column: 24, scope: !6484)
!6505 = !DILocation(line: 53, column: 2, scope: !6484)
!6506 = distinct !DISubprogram(name: "arch_new_thread", scope: !6507, file: !6507, line: 56, type: !6508, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2610, retainedNodes: !6618)
!6507 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6508 = !DISubroutineType(types: !6509)
!6509 = !{null, !6510, !6613, !106, !108, !113, !113, !113}
!6510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6511, size: 32)
!6511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !6512)
!6512 = !{!6513, !6571, !6583, !6584, !6585, !6586, !6587, !6593, !6608}
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6511, file: !143, line: 247, baseType: !6514, size: 384)
!6514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !6515)
!6515 = !{!6516, !6540, !6547, !6548, !6549, !6558, !6559, !6560}
!6516 = !DIDerivedType(tag: DW_TAG_member, scope: !6514, file: !143, line: 60, baseType: !6517, size: 64)
!6517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6514, file: !143, line: 60, size: 64, elements: !6518)
!6518 = !{!6519, !6534}
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6517, file: !143, line: 61, baseType: !6520, size: 64)
!6520 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !6521)
!6521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !6522)
!6522 = !{!6523, !6529}
!6523 = !DIDerivedType(tag: DW_TAG_member, scope: !6521, file: !153, line: 38, baseType: !6524, size: 32)
!6524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6521, file: !153, line: 38, size: 32, elements: !6525)
!6525 = !{!6526, !6528}
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6524, file: !153, line: 39, baseType: !6527, size: 32)
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6521, size: 32)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6524, file: !153, line: 40, baseType: !6527, size: 32)
!6529 = !DIDerivedType(tag: DW_TAG_member, scope: !6521, file: !153, line: 42, baseType: !6530, size: 32, offset: 32)
!6530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6521, file: !153, line: 42, size: 32, elements: !6531)
!6531 = !{!6532, !6533}
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6530, file: !153, line: 43, baseType: !6527, size: 32)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6530, file: !153, line: 44, baseType: !6527, size: 32)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6517, file: !143, line: 62, baseType: !6535, size: 64)
!6535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !6536)
!6536 = !{!6537}
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6535, file: !169, line: 50, baseType: !6538, size: 64)
!6538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6539, size: 64, elements: !174)
!6539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6535, size: 32)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6514, file: !143, line: 68, baseType: !6541, size: 32, offset: 64)
!6541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6542, size: 32)
!6542 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !6543)
!6543 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !6544)
!6544 = !{!6545}
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6543, file: !179, line: 232, baseType: !6546, size: 64)
!6546 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !6521)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6514, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6514, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!6549 = !DIDerivedType(tag: DW_TAG_member, scope: !6514, file: !143, line: 90, baseType: !6550, size: 16, offset: 112)
!6550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6514, file: !143, line: 90, size: 16, elements: !6551)
!6551 = !{!6552, !6557}
!6552 = !DIDerivedType(tag: DW_TAG_member, scope: !6550, file: !143, line: 91, baseType: !6553, size: 16)
!6553 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6550, file: !143, line: 91, size: 16, elements: !6554)
!6554 = !{!6555, !6556}
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6553, file: !143, line: 96, baseType: !195, size: 8)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6553, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6550, file: !143, line: 100, baseType: !199, size: 16)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6514, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6514, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6514, file: !143, line: 131, baseType: !6561, size: 192, offset: 192)
!6561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !6562)
!6562 = !{!6563, !6564, !6570}
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6561, file: !179, line: 245, baseType: !6520, size: 64)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6561, file: !179, line: 246, baseType: !6565, size: 32, offset: 64)
!6565 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !6566)
!6566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6567, size: 32)
!6567 = !DISubroutineType(types: !6568)
!6568 = !{null, !6569}
!6569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6561, size: 32)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6561, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6511, file: !143, line: 250, baseType: !6572, size: 288, offset: 384)
!6572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6573)
!6573 = !{!6574, !6575, !6576, !6577, !6578, !6579, !6580, !6581, !6582}
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6572, file: !216, line: 26, baseType: !118, size: 32)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6572, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6572, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6572, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6572, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6572, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6572, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6572, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6572, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6511, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6511, file: !143, line: 256, baseType: !6542, size: 64, offset: 704)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6511, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6511, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6511, file: !143, line: 300, baseType: !6588, size: 96, offset: 1056)
!6588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !6589)
!6589 = !{!6590, !6591, !6592}
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6588, file: !143, line: 153, baseType: !22, size: 32)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6588, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6588, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6511, file: !143, line: 325, baseType: !6594, size: 32, offset: 1152)
!6594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6595, size: 32)
!6595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !6596)
!6596 = !{!6597, !6603, !6604}
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6595, file: !245, line: 5074, baseType: !6598, size: 96)
!6598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !6599)
!6599 = !{!6600, !6601, !6602}
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6598, file: !249, line: 57, baseType: !252, size: 32)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6598, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6598, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6595, file: !245, line: 5075, baseType: !6542, size: 64, offset: 96)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6595, file: !245, line: 5076, baseType: !6605, size: 32, offset: 160)
!6605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !6606)
!6606 = !{!6607}
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6605, file: !259, line: 52, baseType: !22, size: 32)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6511, file: !143, line: 343, baseType: !6609, size: 64, offset: 1184)
!6609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !6610)
!6610 = !{!6611, !6612}
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6609, file: !216, line: 63, baseType: !118, size: 32)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6609, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!6613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6614, size: 32)
!6614 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !6615)
!6615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !6616)
!6616 = !{!6617}
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6615, file: !128, line: 48, baseType: !107, size: 8)
!6618 = !{!6619, !6620, !6621, !6622, !6623, !6624, !6625, !6626}
!6619 = !DILocalVariable(name: "thread", arg: 1, scope: !6506, file: !6507, line: 56, type: !6510)
!6620 = !DILocalVariable(name: "stack", arg: 2, scope: !6506, file: !6507, line: 56, type: !6613)
!6621 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6506, file: !6507, line: 57, type: !106)
!6622 = !DILocalVariable(name: "entry", arg: 4, scope: !6506, file: !6507, line: 57, type: !108)
!6623 = !DILocalVariable(name: "p1", arg: 5, scope: !6506, file: !6507, line: 58, type: !113)
!6624 = !DILocalVariable(name: "p2", arg: 6, scope: !6506, file: !6507, line: 58, type: !113)
!6625 = !DILocalVariable(name: "p3", arg: 7, scope: !6506, file: !6507, line: 58, type: !113)
!6626 = !DILocalVariable(name: "iframe", scope: !6506, file: !6507, line: 60, type: !2613)
!6627 = !DILocation(line: 0, scope: !6506)
!6628 = !DILocation(line: 85, column: 11, scope: !6506)
!6629 = !DILocation(line: 93, column: 10, scope: !6506)
!6630 = !DILocation(line: 98, column: 13, scope: !6506)
!6631 = !DILocation(line: 100, column: 15, scope: !6506)
!6632 = !DILocation(line: 100, column: 10, scope: !6506)
!6633 = !DILocation(line: 100, column: 13, scope: !6506)
!6634 = !DILocation(line: 101, column: 15, scope: !6506)
!6635 = !DILocation(line: 101, column: 10, scope: !6506)
!6636 = !DILocation(line: 101, column: 13, scope: !6506)
!6637 = !DILocation(line: 102, column: 15, scope: !6506)
!6638 = !DILocation(line: 102, column: 10, scope: !6506)
!6639 = !DILocation(line: 102, column: 13, scope: !6506)
!6640 = !DILocation(line: 103, column: 15, scope: !6506)
!6641 = !DILocation(line: 103, column: 10, scope: !6506)
!6642 = !DILocation(line: 103, column: 13, scope: !6506)
!6643 = !DILocation(line: 106, column: 10, scope: !6506)
!6644 = !DILocation(line: 106, column: 15, scope: !6506)
!6645 = !DILocation(line: 122, column: 29, scope: !6506)
!6646 = !DILocation(line: 122, column: 23, scope: !6506)
!6647 = !DILocation(line: 122, column: 27, scope: !6506)
!6648 = !DILocation(line: 123, column: 15, scope: !6506)
!6649 = !DILocation(line: 123, column: 23, scope: !6506)
!6650 = !DILocation(line: 143, column: 1, scope: !6506)
!6651 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6507, file: !6507, line: 385, type: !6652, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2610, retainedNodes: !6655)
!6652 = !DISubroutineType(types: !6653)
!6653 = !{!118, !6654, !6654}
!6654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!6655 = !{!6656, !6657, !6658, !6661}
!6656 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6651, file: !6507, line: 385, type: !6654)
!6657 = !DILocalVariable(name: "psp", arg: 2, scope: !6651, file: !6507, line: 385, type: !6654)
!6658 = !DILocalVariable(name: "thread", scope: !6651, file: !6507, line: 388, type: !6659)
!6659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6660, size: 32)
!6660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6511)
!6661 = !DILocalVariable(name: "guard_len", scope: !6651, file: !6507, line: 405, type: !118)
!6662 = !DILocation(line: 0, scope: !6651)
!6663 = !DILocation(line: 388, column: 34, scope: !6651)
!6664 = !DILocation(line: 390, column: 13, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6651, file: !6507, line: 390, column: 6)
!6666 = !DILocation(line: 390, column: 6, scope: !6651)
!6667 = !DILocation(line: 438, column: 6, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6651, file: !6507, line: 438, column: 6)
!6669 = !DILocation(line: 438, column: 6, scope: !6651)
!6670 = !DILocation(line: 442, column: 3, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6668, file: !6507, line: 440, column: 22)
!6672 = !DILocation(line: 455, column: 1, scope: !6651)
!6673 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6507, file: !6507, line: 530, type: !6674, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2610, retainedNodes: !6676)
!6674 = !DISubroutineType(types: !6675)
!6675 = !{null, !6510, !106, !108}
!6676 = !{!6677, !6678, !6679}
!6677 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6673, file: !6507, line: 530, type: !6510)
!6678 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6673, file: !6507, line: 530, type: !106)
!6679 = !DILocalVariable(name: "_main", arg: 3, scope: !6673, file: !6507, line: 531, type: !108)
!6680 = !DILocation(line: 0, scope: !6673)
!6681 = !DILocation(line: 535, column: 11, scope: !6673)
!6682 = !DILocation(line: 560, column: 2, scope: !6673)
!6683 = !DILocation(line: 576, column: 2, scope: !6673)
!6684 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6685 = !DILocation(line: 603, column: 2, scope: !6673)
!6686 = distinct !DISubprogram(name: "z_arm_fault", scope: !6687, file: !6687, line: 1036, type: !6688, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !6703)
!6687 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6688 = !DISubroutineType(types: !6689)
!6689 = !{null, !118, !118, !118, !6690}
!6690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6691, size: 32)
!6691 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !216, line: 37, baseType: !6692)
!6692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6693)
!6693 = !{!6694, !6695, !6696, !6697, !6698, !6699, !6700, !6701, !6702}
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6692, file: !216, line: 26, baseType: !118, size: 32)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6692, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6692, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6692, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6692, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6692, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6692, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6692, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6692, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6703 = !{!6704, !6705, !6706, !6707, !6708, !6709, !6710, !6711, !6712, !6713}
!6704 = !DILocalVariable(name: "msp", arg: 1, scope: !6686, file: !6687, line: 1036, type: !118)
!6705 = !DILocalVariable(name: "psp", arg: 2, scope: !6686, file: !6687, line: 1036, type: !118)
!6706 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6686, file: !6687, line: 1036, type: !118)
!6707 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6686, file: !6687, line: 1037, type: !6690)
!6708 = !DILocalVariable(name: "reason", scope: !6686, file: !6687, line: 1039, type: !118)
!6709 = !DILocalVariable(name: "fault", scope: !6686, file: !6687, line: 1040, type: !119)
!6710 = !DILocalVariable(name: "recoverable", scope: !6686, file: !6687, line: 1041, type: !345)
!6711 = !DILocalVariable(name: "nested_exc", scope: !6686, file: !6687, line: 1041, type: !345)
!6712 = !DILocalVariable(name: "esf", scope: !6686, file: !6687, line: 1042, type: !2681)
!6713 = !DILocalVariable(name: "esf_copy", scope: !6686, file: !6687, line: 1047, type: !2682)
!6714 = !DILocation(line: 0, scope: !6686)
!6715 = !DILocation(line: 1040, column: 19, scope: !6686)
!6716 = !DILocation(line: 1041, column: 2, scope: !6686)
!6717 = !DILocation(line: 1047, column: 2, scope: !6686)
!6718 = !DILocation(line: 1047, column: 15, scope: !6686)
!6719 = !DILocalVariable(name: "key", arg: 1, scope: !6720, file: !6058, line: 84, type: !32)
!6720 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6058, file: !6058, line: 84, type: !6069, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !6721)
!6721 = !{!6719}
!6722 = !DILocation(line: 0, scope: !6720, inlinedAt: !6723)
!6723 = distinct !DILocation(line: 1050, column: 2, scope: !6686)
!6724 = !DILocation(line: 95, column: 2, scope: !6720, inlinedAt: !6723)
!6725 = !{i64 2314854}
!6726 = !DILocation(line: 1055, column: 9, scope: !6686)
!6727 = !DILocation(line: 1056, column: 2, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6729, file: !6687, line: 1056, column: 2)
!6729 = distinct !DILexicalBlock(scope: !6686, file: !6687, line: 1056, column: 2)
!6730 = !DILocation(line: 1056, column: 2, scope: !6729)
!6731 = !DILocation(line: 1056, column: 2, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6728, file: !6687, line: 1056, column: 2)
!6733 = !DILocation(line: 1040, column: 24, scope: !6686)
!6734 = !DILocation(line: 1063, column: 11, scope: !6686)
!6735 = !DILocation(line: 1064, column: 6, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6686, file: !6687, line: 1064, column: 6)
!6737 = !{i8 0, i8 2}
!6738 = !DILocation(line: 1064, column: 6, scope: !6686)
!6739 = !DILocation(line: 1070, column: 20, scope: !6686)
!6740 = !DILocation(line: 1070, column: 2, scope: !6686)
!6741 = !DILocation(line: 1089, column: 6, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6686, file: !6687, line: 1089, column: 6)
!6743 = !DILocation(line: 0, scope: !6742)
!6744 = !DILocation(line: 1089, column: 6, scope: !6686)
!6745 = !DILocation(line: 1090, column: 28, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !6687, line: 1090, column: 7)
!6747 = distinct !DILexicalBlock(scope: !6742, file: !6687, line: 1089, column: 18)
!6748 = !DILocation(line: 1090, column: 44, scope: !6746)
!6749 = !DILocation(line: 1090, column: 7, scope: !6747)
!6750 = !DILocation(line: 1091, column: 24, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6746, file: !6687, line: 1090, column: 50)
!6752 = !DILocation(line: 1092, column: 3, scope: !6751)
!6753 = !DILocation(line: 1094, column: 23, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6742, file: !6687, line: 1093, column: 9)
!6755 = !DILocation(line: 1097, column: 2, scope: !6686)
!6756 = !DILocation(line: 1098, column: 1, scope: !6686)
!6757 = distinct !DISubprogram(name: "get_esf", scope: !6687, file: !6687, line: 894, type: !6758, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !6761)
!6758 = !DISubroutineType(types: !6759)
!6759 = !{!2681, !118, !118, !118, !6760}
!6760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 32)
!6761 = !{!6762, !6763, !6764, !6765, !6766, !6767}
!6762 = !DILocalVariable(name: "msp", arg: 1, scope: !6757, file: !6687, line: 894, type: !118)
!6763 = !DILocalVariable(name: "psp", arg: 2, scope: !6757, file: !6687, line: 894, type: !118)
!6764 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6757, file: !6687, line: 894, type: !118)
!6765 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6757, file: !6687, line: 895, type: !6760)
!6766 = !DILocalVariable(name: "alternative_state_exc", scope: !6757, file: !6687, line: 897, type: !345)
!6767 = !DILocalVariable(name: "ptr_esf", scope: !6757, file: !6687, line: 898, type: !2681)
!6768 = !DILocation(line: 0, scope: !6757)
!6769 = !DILocation(line: 900, column: 14, scope: !6757)
!6770 = !DILocation(line: 902, column: 49, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6757, file: !6687, line: 902, column: 6)
!6772 = !DILocation(line: 902, column: 6, scope: !6757)
!6773 = !DILocation(line: 983, column: 44, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6757, file: !6687, line: 983, column: 6)
!6775 = !DILocation(line: 985, column: 3, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6777, file: !6687, line: 985, column: 3)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !6687, line: 985, column: 3)
!6778 = distinct !DILexicalBlock(scope: !6779, file: !6687, line: 985, column: 3)
!6779 = distinct !DILexicalBlock(scope: !6780, file: !6687, line: 985, column: 3)
!6780 = distinct !DILexicalBlock(scope: !6774, file: !6687, line: 984, column: 47)
!6781 = !DILocation(line: 986, column: 3, scope: !6780)
!6782 = !DILocation(line: 983, column: 18, scope: !6774)
!6783 = !DILocation(line: 991, column: 7, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !6687, line: 990, column: 30)
!6785 = distinct !DILexicalBlock(scope: !6757, file: !6687, line: 990, column: 6)
!6786 = !DILocation(line: 998, column: 16, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6788, file: !6687, line: 995, column: 10)
!6788 = distinct !DILexicalBlock(scope: !6784, file: !6687, line: 991, column: 7)
!6789 = !DILocation(line: 1002, column: 2, scope: !6757)
!6790 = !DILocation(line: 1003, column: 1, scope: !6757)
!6791 = distinct !DISubprogram(name: "fault_handle", scope: !6687, file: !6687, line: 786, type: !6792, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !6794)
!6792 = !DISubroutineType(types: !6793)
!6793 = !{!118, !2681, !119, !6760}
!6794 = !{!6795, !6796, !6797, !6798}
!6795 = !DILocalVariable(name: "esf", arg: 1, scope: !6791, file: !6687, line: 786, type: !2681)
!6796 = !DILocalVariable(name: "fault", arg: 2, scope: !6791, file: !6687, line: 786, type: !119)
!6797 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6791, file: !6687, line: 786, type: !6760)
!6798 = !DILocalVariable(name: "reason", scope: !6791, file: !6687, line: 788, type: !118)
!6799 = !DILocation(line: 0, scope: !6791)
!6800 = !DILocation(line: 790, column: 15, scope: !6791)
!6801 = !DILocation(line: 792, column: 2, scope: !6791)
!6802 = !DILocation(line: 794, column: 12, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6791, file: !6687, line: 792, column: 17)
!6804 = !DILocation(line: 795, column: 3, scope: !6803)
!6805 = !DILocation(line: 800, column: 12, scope: !6803)
!6806 = !DILocation(line: 801, column: 3, scope: !6803)
!6807 = !DILocation(line: 803, column: 12, scope: !6803)
!6808 = !DILocation(line: 804, column: 3, scope: !6803)
!6809 = !DILocation(line: 806, column: 12, scope: !6803)
!6810 = !DILocation(line: 807, column: 3, scope: !6803)
!6811 = !DILocation(line: 814, column: 3, scope: !6803)
!6812 = !DILocation(line: 815, column: 3, scope: !6803)
!6813 = !DILocation(line: 820, column: 3, scope: !6803)
!6814 = !DILocation(line: 821, column: 3, scope: !6803)
!6815 = !DILocation(line: 829, column: 2, scope: !6791)
!6816 = distinct !DISubprogram(name: "hard_fault", scope: !6687, file: !6687, line: 709, type: !6817, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !6819)
!6817 = !DISubroutineType(types: !6818)
!6818 = !{!118, !2681, !6760}
!6819 = !{!6820, !6821, !6822}
!6820 = !DILocalVariable(name: "esf", arg: 1, scope: !6816, file: !6687, line: 709, type: !2681)
!6821 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6816, file: !6687, line: 709, type: !6760)
!6822 = !DILocalVariable(name: "reason", scope: !6816, file: !6687, line: 711, type: !118)
!6823 = !DILocation(line: 0, scope: !6816)
!6824 = !DILocation(line: 713, column: 2, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !6687, line: 713, column: 2)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !6687, line: 713, column: 2)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !6687, line: 713, column: 2)
!6828 = distinct !DILexicalBlock(scope: !6816, file: !6687, line: 713, column: 2)
!6829 = !DILocation(line: 732, column: 15, scope: !6816)
!6830 = !DILocation(line: 734, column: 12, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6816, file: !6687, line: 734, column: 6)
!6832 = !DILocation(line: 734, column: 17, scope: !6831)
!6833 = !DILocation(line: 734, column: 41, scope: !6831)
!6834 = !DILocation(line: 734, column: 6, scope: !6816)
!6835 = !DILocation(line: 735, column: 3, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !6687, line: 735, column: 3)
!6837 = distinct !DILexicalBlock(scope: !6838, file: !6687, line: 735, column: 3)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !6687, line: 735, column: 3)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !6687, line: 735, column: 3)
!6840 = distinct !DILexicalBlock(scope: !6831, file: !6687, line: 734, column: 47)
!6841 = !DILocation(line: 736, column: 2, scope: !6840)
!6842 = !DILocation(line: 736, column: 19, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6831, file: !6687, line: 736, column: 13)
!6844 = !DILocation(line: 736, column: 49, scope: !6843)
!6845 = !DILocation(line: 736, column: 13, scope: !6831)
!6846 = !DILocation(line: 737, column: 3, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !6687, line: 737, column: 3)
!6848 = distinct !DILexicalBlock(scope: !6849, file: !6687, line: 737, column: 3)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !6687, line: 737, column: 3)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !6687, line: 737, column: 3)
!6851 = distinct !DILexicalBlock(scope: !6843, file: !6687, line: 736, column: 55)
!6852 = !DILocation(line: 738, column: 2, scope: !6851)
!6853 = !DILocation(line: 738, column: 19, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6843, file: !6687, line: 738, column: 13)
!6855 = !DILocation(line: 738, column: 24, scope: !6854)
!6856 = !DILocation(line: 738, column: 47, scope: !6854)
!6857 = !DILocation(line: 738, column: 13, scope: !6843)
!6858 = !DILocation(line: 739, column: 3, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6860, file: !6687, line: 739, column: 3)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !6687, line: 739, column: 3)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !6687, line: 739, column: 3)
!6862 = distinct !DILexicalBlock(scope: !6863, file: !6687, line: 739, column: 3)
!6863 = distinct !DILexicalBlock(scope: !6854, file: !6687, line: 738, column: 53)
!6864 = !DILocation(line: 740, column: 7, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6863, file: !6687, line: 740, column: 7)
!6866 = !DILocation(line: 740, column: 7, scope: !6863)
!6867 = !DILocation(line: 741, column: 4, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6869, file: !6687, line: 741, column: 4)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !6687, line: 741, column: 4)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !6687, line: 741, column: 4)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !6687, line: 741, column: 4)
!6872 = distinct !DILexicalBlock(scope: !6865, file: !6687, line: 740, column: 38)
!6873 = !DILocation(line: 742, column: 24, scope: !6872)
!6874 = !DILocation(line: 743, column: 3, scope: !6872)
!6875 = !DILocation(line: 743, column: 20, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6865, file: !6687, line: 743, column: 14)
!6877 = !DILocation(line: 743, column: 25, scope: !6876)
!6878 = !DILocation(line: 743, column: 52, scope: !6876)
!6879 = !DILocation(line: 743, column: 14, scope: !6865)
!6880 = !DILocation(line: 744, column: 13, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6876, file: !6687, line: 743, column: 58)
!6882 = !DILocation(line: 745, column: 3, scope: !6881)
!6883 = !DILocation(line: 745, column: 20, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6876, file: !6687, line: 745, column: 14)
!6885 = !DILocation(line: 745, column: 25, scope: !6884)
!6886 = !DILocation(line: 745, column: 52, scope: !6884)
!6887 = !DILocation(line: 745, column: 14, scope: !6876)
!6888 = !DILocation(line: 746, column: 13, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6884, file: !6687, line: 745, column: 58)
!6890 = !DILocation(line: 747, column: 3, scope: !6889)
!6891 = !DILocation(line: 747, column: 20, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6884, file: !6687, line: 747, column: 14)
!6893 = !DILocation(line: 747, column: 52, scope: !6892)
!6894 = !DILocation(line: 747, column: 14, scope: !6884)
!6895 = !DILocation(line: 748, column: 13, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6892, file: !6687, line: 747, column: 58)
!6897 = !DILocation(line: 754, column: 4, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6899, file: !6687, line: 754, column: 4)
!6899 = distinct !DILexicalBlock(scope: !6900, file: !6687, line: 754, column: 4)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !6687, line: 754, column: 4)
!6901 = distinct !DILexicalBlock(scope: !6892, file: !6687, line: 753, column: 10)
!6902 = !DILocation(line: 758, column: 3, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !6687, line: 758, column: 3)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !6687, line: 758, column: 3)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !6687, line: 758, column: 3)
!6906 = distinct !DILexicalBlock(scope: !6854, file: !6687, line: 757, column: 9)
!6907 = !DILocation(line: 766, column: 2, scope: !6816)
!6908 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6687, file: !6687, line: 229, type: !6792, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !6909)
!6909 = !{!6910, !6911, !6912, !6913, !6914, !6915, !6918}
!6910 = !DILocalVariable(name: "esf", arg: 1, scope: !6908, file: !6687, line: 229, type: !2681)
!6911 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6908, file: !6687, line: 229, type: !119)
!6912 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6908, file: !6687, line: 230, type: !6760)
!6913 = !DILocalVariable(name: "reason", scope: !6908, file: !6687, line: 232, type: !118)
!6914 = !DILocalVariable(name: "mmfar", scope: !6908, file: !6687, line: 233, type: !118)
!6915 = !DILocalVariable(name: "temp", scope: !6916, file: !6687, line: 254, type: !118)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !6687, line: 244, column: 48)
!6917 = distinct !DILexicalBlock(scope: !6908, file: !6687, line: 244, column: 6)
!6918 = !DILocalVariable(name: "min_stack_ptr", scope: !6919, file: !6687, line: 309, type: !118)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !6687, line: 308, column: 43)
!6920 = distinct !DILexicalBlock(scope: !6921, file: !6687, line: 308, column: 7)
!6921 = distinct !DILexicalBlock(scope: !6922, file: !6687, line: 289, column: 40)
!6922 = distinct !DILexicalBlock(scope: !6908, file: !6687, line: 288, column: 6)
!6923 = !DILocation(line: 0, scope: !6908)
!6924 = !DILocation(line: 235, column: 2, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !6687, line: 235, column: 2)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !6687, line: 235, column: 2)
!6927 = distinct !DILexicalBlock(scope: !6928, file: !6687, line: 235, column: 2)
!6928 = distinct !DILexicalBlock(scope: !6908, file: !6687, line: 235, column: 2)
!6929 = !DILocation(line: 237, column: 12, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6908, file: !6687, line: 237, column: 6)
!6931 = !DILocation(line: 237, column: 17, scope: !6930)
!6932 = !DILocation(line: 237, column: 41, scope: !6930)
!6933 = !DILocation(line: 237, column: 6, scope: !6908)
!6934 = !DILocation(line: 238, column: 3, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !6687, line: 238, column: 3)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !6687, line: 238, column: 3)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !6687, line: 238, column: 3)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !6687, line: 238, column: 3)
!6939 = distinct !DILexicalBlock(scope: !6930, file: !6687, line: 237, column: 47)
!6940 = !DILocation(line: 240, column: 2, scope: !6939)
!6941 = !DILocation(line: 241, column: 12, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6908, file: !6687, line: 241, column: 6)
!6943 = !DILocation(line: 241, column: 17, scope: !6942)
!6944 = !DILocation(line: 241, column: 43, scope: !6942)
!6945 = !DILocation(line: 241, column: 6, scope: !6908)
!6946 = !DILocation(line: 242, column: 3, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !6687, line: 242, column: 3)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !6687, line: 242, column: 3)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !6687, line: 242, column: 3)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !6687, line: 242, column: 3)
!6951 = distinct !DILexicalBlock(scope: !6942, file: !6687, line: 241, column: 49)
!6952 = !DILocation(line: 243, column: 2, scope: !6951)
!6953 = !DILocation(line: 244, column: 12, scope: !6917)
!6954 = !DILocation(line: 244, column: 17, scope: !6917)
!6955 = !DILocation(line: 244, column: 42, scope: !6917)
!6956 = !DILocation(line: 244, column: 6, scope: !6908)
!6957 = !DILocation(line: 245, column: 3, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !6687, line: 245, column: 3)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !6687, line: 245, column: 3)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6687, line: 245, column: 3)
!6961 = distinct !DILexicalBlock(scope: !6916, file: !6687, line: 245, column: 3)
!6962 = !DILocation(line: 254, column: 24, scope: !6916)
!6963 = !DILocation(line: 0, scope: !6916)
!6964 = !DILocation(line: 256, column: 13, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6916, file: !6687, line: 256, column: 7)
!6966 = !DILocation(line: 256, column: 18, scope: !6965)
!6967 = !DILocation(line: 256, column: 44, scope: !6965)
!6968 = !DILocation(line: 256, column: 7, scope: !6916)
!6969 = !DILocation(line: 258, column: 4, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !6687, line: 258, column: 4)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6687, line: 258, column: 4)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !6687, line: 258, column: 4)
!6973 = distinct !DILexicalBlock(scope: !6974, file: !6687, line: 258, column: 4)
!6974 = distinct !DILexicalBlock(scope: !6965, file: !6687, line: 256, column: 50)
!6975 = !DILocation(line: 259, column: 24, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6974, file: !6687, line: 259, column: 8)
!6977 = !DILocation(line: 259, column: 8, scope: !6974)
!6978 = !DILocation(line: 261, column: 15, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6976, file: !6687, line: 259, column: 30)
!6980 = !DILocation(line: 262, column: 4, scope: !6979)
!6981 = !DILocation(line: 265, column: 12, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6908, file: !6687, line: 265, column: 6)
!6983 = !DILocation(line: 265, column: 17, scope: !6982)
!6984 = !DILocation(line: 265, column: 42, scope: !6982)
!6985 = !DILocation(line: 265, column: 6, scope: !6908)
!6986 = !DILocation(line: 266, column: 3, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !6687, line: 266, column: 3)
!6988 = distinct !DILexicalBlock(scope: !6989, file: !6687, line: 266, column: 3)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !6687, line: 266, column: 3)
!6990 = distinct !DILexicalBlock(scope: !6991, file: !6687, line: 266, column: 3)
!6991 = distinct !DILexicalBlock(scope: !6982, file: !6687, line: 265, column: 48)
!6992 = !DILocation(line: 267, column: 2, scope: !6991)
!6993 = !DILocation(line: 269, column: 12, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6908, file: !6687, line: 269, column: 6)
!6995 = !DILocation(line: 269, column: 17, scope: !6994)
!6996 = !DILocation(line: 269, column: 41, scope: !6994)
!6997 = !DILocation(line: 269, column: 6, scope: !6908)
!6998 = !DILocation(line: 270, column: 3, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !6687, line: 270, column: 3)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !6687, line: 270, column: 3)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !6687, line: 270, column: 3)
!7002 = distinct !DILexicalBlock(scope: !7003, file: !6687, line: 270, column: 3)
!7003 = distinct !DILexicalBlock(scope: !6994, file: !6687, line: 269, column: 47)
!7004 = !DILocation(line: 272, column: 2, scope: !7003)
!7005 = !DILocation(line: 288, column: 12, scope: !6922)
!7006 = !DILocation(line: 288, column: 17, scope: !6922)
!7007 = !DILocation(line: 288, column: 41, scope: !6922)
!7008 = !DILocation(line: 289, column: 9, scope: !6922)
!7009 = !DILocation(line: 289, column: 14, scope: !6922)
!7010 = !DILocation(line: 288, column: 6, scope: !6908)
!7011 = !DILocation(line: 308, column: 12, scope: !6920)
!7012 = !DILocation(line: 308, column: 17, scope: !6920)
!7013 = !DILocation(line: 308, column: 7, scope: !6921)
!7014 = !DILocation(line: 310, column: 6, scope: !6919)
!7015 = !DILocation(line: 309, column: 29, scope: !6919)
!7016 = !DILocation(line: 0, scope: !6919)
!7017 = !DILocation(line: 312, column: 8, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !6919, file: !6687, line: 312, column: 8)
!7019 = !DILocation(line: 312, column: 8, scope: !6919)
!7020 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7021, file: !6379, line: 1099, type: !118)
!7021 = distinct !DISubprogram(name: "__set_PSP", scope: !6379, file: !6379, line: 1099, type: !6474, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !7022)
!7022 = !{!7020}
!7023 = !DILocation(line: 0, scope: !7021, inlinedAt: !7024)
!7024 = distinct !DILocation(line: 338, column: 5, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7018, file: !6687, line: 312, column: 23)
!7026 = !DILocation(line: 1101, column: 3, scope: !7021, inlinedAt: !7024)
!7027 = !{i64 3762078}
!7028 = !DILocation(line: 341, column: 4, scope: !7025)
!7029 = !DILocation(line: 342, column: 5, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7031, file: !6687, line: 342, column: 5)
!7031 = distinct !DILexicalBlock(scope: !7032, file: !6687, line: 342, column: 5)
!7032 = distinct !DILexicalBlock(scope: !7018, file: !6687, line: 341, column: 11)
!7033 = !DILocation(line: 342, column: 5, scope: !7031)
!7034 = !DILocation(line: 342, column: 5, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7030, file: !6687, line: 342, column: 5)
!7036 = !DILocation(line: 360, column: 12, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !6908, file: !6687, line: 360, column: 6)
!7038 = !DILocation(line: 360, column: 17, scope: !7037)
!7039 = !DILocation(line: 360, column: 41, scope: !7037)
!7040 = !DILocation(line: 360, column: 6, scope: !6908)
!7041 = !DILocation(line: 361, column: 14, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7037, file: !6687, line: 360, column: 47)
!7043 = !DILocation(line: 362, column: 2, scope: !7042)
!7044 = !DILocation(line: 366, column: 12, scope: !6908)
!7045 = !DILocation(line: 369, column: 15, scope: !6908)
!7046 = !DILocation(line: 371, column: 2, scope: !6908)
!7047 = distinct !DISubprogram(name: "bus_fault", scope: !6687, file: !6687, line: 383, type: !7048, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !7050)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{!119, !2681, !119, !6760}
!7050 = !{!7051, !7052, !7053, !7054, !7055}
!7051 = !DILocalVariable(name: "esf", arg: 1, scope: !7047, file: !6687, line: 383, type: !2681)
!7052 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7047, file: !6687, line: 383, type: !119)
!7053 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7047, file: !6687, line: 383, type: !6760)
!7054 = !DILocalVariable(name: "reason", scope: !7047, file: !6687, line: 385, type: !118)
!7055 = !DILocalVariable(name: "bfar", scope: !7056, file: !6687, line: 405, type: !118)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !6687, line: 395, column: 42)
!7057 = distinct !DILexicalBlock(scope: !7047, file: !6687, line: 395, column: 6)
!7058 = !DILocation(line: 0, scope: !7047)
!7059 = !DILocation(line: 387, column: 2, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !6687, line: 387, column: 2)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !6687, line: 387, column: 2)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !6687, line: 387, column: 2)
!7063 = distinct !DILexicalBlock(scope: !7047, file: !6687, line: 387, column: 2)
!7064 = !DILocation(line: 389, column: 11, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7047, file: !6687, line: 389, column: 6)
!7066 = !DILocation(line: 389, column: 16, scope: !7065)
!7067 = !DILocation(line: 389, column: 6, scope: !7047)
!7068 = !DILocation(line: 390, column: 3, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7070, file: !6687, line: 390, column: 3)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !6687, line: 390, column: 3)
!7071 = distinct !DILexicalBlock(scope: !7072, file: !6687, line: 390, column: 3)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !6687, line: 390, column: 3)
!7073 = distinct !DILexicalBlock(scope: !7065, file: !6687, line: 389, column: 39)
!7074 = !DILocation(line: 391, column: 2, scope: !7073)
!7075 = !DILocation(line: 392, column: 11, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7047, file: !6687, line: 392, column: 6)
!7077 = !DILocation(line: 392, column: 16, scope: !7076)
!7078 = !DILocation(line: 392, column: 6, scope: !7047)
!7079 = !DILocation(line: 393, column: 3, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !6687, line: 393, column: 3)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !6687, line: 393, column: 3)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !6687, line: 393, column: 3)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !6687, line: 393, column: 3)
!7084 = distinct !DILexicalBlock(scope: !7076, file: !6687, line: 392, column: 41)
!7085 = !DILocation(line: 394, column: 2, scope: !7084)
!7086 = !DILocation(line: 395, column: 11, scope: !7057)
!7087 = !DILocation(line: 395, column: 16, scope: !7057)
!7088 = !DILocation(line: 395, column: 6, scope: !7047)
!7089 = !DILocation(line: 396, column: 3, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7091, file: !6687, line: 396, column: 3)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !6687, line: 396, column: 3)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !6687, line: 396, column: 3)
!7093 = distinct !DILexicalBlock(scope: !7056, file: !6687, line: 396, column: 3)
!7094 = !DILocation(line: 405, column: 3, scope: !7056)
!7095 = !DILocation(line: 0, scope: !7056)
!7096 = !DILocation(line: 407, column: 13, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7056, file: !6687, line: 407, column: 7)
!7098 = !DILocation(line: 407, column: 18, scope: !7097)
!7099 = !DILocation(line: 407, column: 44, scope: !7097)
!7100 = !DILocation(line: 407, column: 7, scope: !7056)
!7101 = !DILocation(line: 408, column: 4, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !6687, line: 408, column: 4)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !6687, line: 408, column: 4)
!7104 = distinct !DILexicalBlock(scope: !7105, file: !6687, line: 408, column: 4)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !6687, line: 408, column: 4)
!7106 = distinct !DILexicalBlock(scope: !7097, file: !6687, line: 407, column: 50)
!7107 = !DILocation(line: 409, column: 24, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7106, file: !6687, line: 409, column: 8)
!7109 = !DILocation(line: 409, column: 8, scope: !7106)
!7110 = !DILocation(line: 411, column: 15, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7108, file: !6687, line: 409, column: 30)
!7112 = !DILocation(line: 412, column: 4, scope: !7111)
!7113 = !DILocation(line: 415, column: 11, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7047, file: !6687, line: 415, column: 6)
!7115 = !DILocation(line: 415, column: 16, scope: !7114)
!7116 = !DILocation(line: 415, column: 6, scope: !7047)
!7117 = !DILocation(line: 416, column: 3, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !6687, line: 416, column: 3)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !6687, line: 416, column: 3)
!7120 = distinct !DILexicalBlock(scope: !7121, file: !6687, line: 416, column: 3)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !6687, line: 416, column: 3)
!7122 = distinct !DILexicalBlock(scope: !7114, file: !6687, line: 415, column: 44)
!7123 = !DILocation(line: 417, column: 2, scope: !7122)
!7124 = !DILocation(line: 418, column: 12, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7047, file: !6687, line: 418, column: 6)
!7126 = !DILocation(line: 418, column: 17, scope: !7125)
!7127 = !DILocation(line: 418, column: 41, scope: !7125)
!7128 = !DILocation(line: 418, column: 6, scope: !7047)
!7129 = !DILocation(line: 423, column: 18, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7125, file: !6687, line: 423, column: 13)
!7131 = !DILocation(line: 423, column: 23, scope: !7130)
!7132 = !DILocation(line: 423, column: 13, scope: !7125)
!7133 = !DILocation(line: 0, scope: !7125)
!7134 = !DILocation(line: 524, column: 12, scope: !7047)
!7135 = !DILocation(line: 526, column: 15, scope: !7047)
!7136 = !DILocation(line: 528, column: 2, scope: !7047)
!7137 = distinct !DISubprogram(name: "usage_fault", scope: !6687, file: !6687, line: 539, type: !7138, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !7142)
!7138 = !DISubroutineType(types: !7139)
!7139 = !{!118, !7140}
!7140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7141, size: 32)
!7141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2682)
!7142 = !{!7143, !7144}
!7143 = !DILocalVariable(name: "esf", arg: 1, scope: !7137, file: !6687, line: 539, type: !7140)
!7144 = !DILocalVariable(name: "reason", scope: !7137, file: !6687, line: 541, type: !118)
!7145 = !DILocation(line: 0, scope: !7137)
!7146 = !DILocation(line: 543, column: 2, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !6687, line: 543, column: 2)
!7148 = distinct !DILexicalBlock(scope: !7149, file: !6687, line: 543, column: 2)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !6687, line: 543, column: 2)
!7150 = distinct !DILexicalBlock(scope: !7137, file: !6687, line: 543, column: 2)
!7151 = !DILocation(line: 546, column: 12, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7137, file: !6687, line: 546, column: 6)
!7153 = !DILocation(line: 546, column: 17, scope: !7152)
!7154 = !DILocation(line: 546, column: 43, scope: !7152)
!7155 = !DILocation(line: 546, column: 6, scope: !7137)
!7156 = !DILocation(line: 547, column: 3, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7158, file: !6687, line: 547, column: 3)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !6687, line: 547, column: 3)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !6687, line: 547, column: 3)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !6687, line: 547, column: 3)
!7161 = distinct !DILexicalBlock(scope: !7152, file: !6687, line: 546, column: 49)
!7162 = !DILocation(line: 548, column: 2, scope: !7161)
!7163 = !DILocation(line: 549, column: 12, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7137, file: !6687, line: 549, column: 6)
!7165 = !DILocation(line: 549, column: 17, scope: !7164)
!7166 = !DILocation(line: 549, column: 43, scope: !7164)
!7167 = !DILocation(line: 549, column: 6, scope: !7137)
!7168 = !DILocation(line: 550, column: 3, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !6687, line: 550, column: 3)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !6687, line: 550, column: 3)
!7171 = distinct !DILexicalBlock(scope: !7172, file: !6687, line: 550, column: 3)
!7172 = distinct !DILexicalBlock(scope: !7173, file: !6687, line: 550, column: 3)
!7173 = distinct !DILexicalBlock(scope: !7164, file: !6687, line: 549, column: 49)
!7174 = !DILocation(line: 551, column: 2, scope: !7173)
!7175 = !DILocation(line: 567, column: 12, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7137, file: !6687, line: 567, column: 6)
!7177 = !DILocation(line: 567, column: 17, scope: !7176)
!7178 = !DILocation(line: 567, column: 38, scope: !7176)
!7179 = !DILocation(line: 567, column: 6, scope: !7137)
!7180 = !DILocation(line: 568, column: 3, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7182, file: !6687, line: 568, column: 3)
!7182 = distinct !DILexicalBlock(scope: !7183, file: !6687, line: 568, column: 3)
!7183 = distinct !DILexicalBlock(scope: !7184, file: !6687, line: 568, column: 3)
!7184 = distinct !DILexicalBlock(scope: !7185, file: !6687, line: 568, column: 3)
!7185 = distinct !DILexicalBlock(scope: !7176, file: !6687, line: 567, column: 44)
!7186 = !DILocation(line: 569, column: 2, scope: !7185)
!7187 = !DILocation(line: 570, column: 12, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7137, file: !6687, line: 570, column: 6)
!7189 = !DILocation(line: 570, column: 17, scope: !7188)
!7190 = !DILocation(line: 570, column: 39, scope: !7188)
!7191 = !DILocation(line: 570, column: 6, scope: !7137)
!7192 = !DILocation(line: 571, column: 3, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !6687, line: 571, column: 3)
!7194 = distinct !DILexicalBlock(scope: !7195, file: !6687, line: 571, column: 3)
!7195 = distinct !DILexicalBlock(scope: !7196, file: !6687, line: 571, column: 3)
!7196 = distinct !DILexicalBlock(scope: !7197, file: !6687, line: 571, column: 3)
!7197 = distinct !DILexicalBlock(scope: !7188, file: !6687, line: 570, column: 45)
!7198 = !DILocation(line: 572, column: 2, scope: !7197)
!7199 = !DILocation(line: 573, column: 12, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7137, file: !6687, line: 573, column: 6)
!7201 = !DILocation(line: 573, column: 17, scope: !7200)
!7202 = !DILocation(line: 573, column: 42, scope: !7200)
!7203 = !DILocation(line: 573, column: 6, scope: !7137)
!7204 = !DILocation(line: 574, column: 3, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7206, file: !6687, line: 574, column: 3)
!7206 = distinct !DILexicalBlock(scope: !7207, file: !6687, line: 574, column: 3)
!7207 = distinct !DILexicalBlock(scope: !7208, file: !6687, line: 574, column: 3)
!7208 = distinct !DILexicalBlock(scope: !7209, file: !6687, line: 574, column: 3)
!7209 = distinct !DILexicalBlock(scope: !7200, file: !6687, line: 573, column: 48)
!7210 = !DILocation(line: 575, column: 2, scope: !7209)
!7211 = !DILocation(line: 576, column: 12, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7137, file: !6687, line: 576, column: 6)
!7213 = !DILocation(line: 576, column: 17, scope: !7212)
!7214 = !DILocation(line: 576, column: 44, scope: !7212)
!7215 = !DILocation(line: 576, column: 6, scope: !7137)
!7216 = !DILocation(line: 577, column: 3, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !6687, line: 577, column: 3)
!7218 = distinct !DILexicalBlock(scope: !7219, file: !6687, line: 577, column: 3)
!7219 = distinct !DILexicalBlock(scope: !7220, file: !6687, line: 577, column: 3)
!7220 = distinct !DILexicalBlock(scope: !7221, file: !6687, line: 577, column: 3)
!7221 = distinct !DILexicalBlock(scope: !7212, file: !6687, line: 576, column: 50)
!7222 = !DILocation(line: 578, column: 2, scope: !7221)
!7223 = !DILocation(line: 581, column: 12, scope: !7137)
!7224 = !DILocation(line: 583, column: 2, scope: !7137)
!7225 = distinct !DISubprogram(name: "debug_monitor", scope: !6687, file: !6687, line: 632, type: !7226, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !7228)
!7226 = !DISubroutineType(types: !7227)
!7227 = !{null, !2681, !6760}
!7228 = !{!7229, !7230}
!7229 = !DILocalVariable(name: "esf", arg: 1, scope: !7225, file: !6687, line: 632, type: !2681)
!7230 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7225, file: !6687, line: 632, type: !6760)
!7231 = !DILocation(line: 0, scope: !7225)
!7232 = !DILocation(line: 634, column: 15, scope: !7225)
!7233 = !DILocation(line: 636, column: 2, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7235, file: !6687, line: 636, column: 2)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !6687, line: 636, column: 2)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !6687, line: 636, column: 2)
!7237 = distinct !DILexicalBlock(scope: !7225, file: !6687, line: 636, column: 2)
!7238 = !DILocation(line: 652, column: 1, scope: !7225)
!7239 = distinct !DISubprogram(name: "reserved_exception", scope: !6687, file: !6687, line: 776, type: !7240, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !7242)
!7240 = !DISubroutineType(types: !7241)
!7241 = !{null, !7140, !119}
!7242 = !{!7243, !7244}
!7243 = !DILocalVariable(name: "esf", arg: 1, scope: !7239, file: !6687, line: 776, type: !7140)
!7244 = !DILocalVariable(name: "fault", arg: 2, scope: !7239, file: !6687, line: 776, type: !119)
!7245 = !DILocation(line: 0, scope: !7239)
!7246 = !DILocation(line: 780, column: 2, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7248, file: !6687, line: 780, column: 2)
!7248 = distinct !DILexicalBlock(scope: !7249, file: !6687, line: 780, column: 2)
!7249 = distinct !DILexicalBlock(scope: !7250, file: !6687, line: 780, column: 2)
!7250 = distinct !DILexicalBlock(scope: !7239, file: !6687, line: 780, column: 2)
!7251 = !DILocation(line: 783, column: 1, scope: !7239)
!7252 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6687, file: !6687, line: 658, type: !7253, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !7255)
!7253 = !DISubroutineType(types: !7254)
!7254 = !{!345, !2681}
!7255 = !{!7256, !7257, !7258}
!7256 = !DILocalVariable(name: "esf", arg: 1, scope: !7252, file: !6687, line: 658, type: !2681)
!7257 = !DILocalVariable(name: "ret_addr", scope: !7252, file: !6687, line: 660, type: !2724)
!7258 = !DILocalVariable(name: "fault_insn", scope: !7252, file: !6687, line: 686, type: !199)
!7259 = !DILocation(line: 0, scope: !7252)
!7260 = !DILocation(line: 660, column: 46, scope: !7252)
!7261 = !DILocation(line: 660, column: 23, scope: !7252)
!7262 = !DILocation(line: 682, column: 11, scope: !7252)
!7263 = !DILocation(line: 271, column: 3, scope: !7264, inlinedAt: !7265)
!7264 = distinct !DISubprogram(name: "__DSB", scope: !6379, file: !6379, line: 269, type: !3019, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !2102)
!7265 = distinct !DILocation(line: 683, column: 2, scope: !7252)
!7266 = !{i64 3738213}
!7267 = !DILocation(line: 260, column: 3, scope: !7268, inlinedAt: !7269)
!7268 = distinct !DISubprogram(name: "__ISB", scope: !6379, file: !6379, line: 258, type: !3019, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !2102)
!7269 = distinct !DILocation(line: 684, column: 2, scope: !7252)
!7270 = !{i64 3737930}
!7271 = !DILocation(line: 686, column: 35, scope: !7252)
!7272 = !DILocation(line: 686, column: 24, scope: !7252)
!7273 = !DILocation(line: 688, column: 11, scope: !7252)
!7274 = !DILocation(line: 271, column: 3, scope: !7264, inlinedAt: !7275)
!7275 = distinct !DILocation(line: 689, column: 2, scope: !7252)
!7276 = !DILocation(line: 260, column: 3, scope: !7268, inlinedAt: !7277)
!7277 = distinct !DILocation(line: 690, column: 2, scope: !7252)
!7278 = !DILocation(line: 693, column: 45, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7252, file: !6687, line: 693, column: 6)
!7280 = !DILocation(line: 699, column: 1, scope: !7252)
!7281 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6687, file: !6687, line: 1107, type: !3019, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2653, retainedNodes: !2102)
!7282 = !DILocation(line: 1111, column: 11, scope: !7281)
!7283 = !DILocation(line: 1136, column: 1, scope: !7281)
!7284 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7285, file: !7285, line: 26, type: !3019, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !7286)
!7285 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7286 = !{!7287}
!7287 = !DILocalVariable(name: "irq", scope: !7284, file: !7285, line: 28, type: !119)
!7288 = !DILocation(line: 0, scope: !7284)
!7289 = !DILocation(line: 30, column: 2, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7284, file: !7285, line: 30, column: 2)
!7291 = !DILocation(line: 31, column: 3, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !7285, line: 30, column: 39)
!7293 = distinct !DILexicalBlock(scope: !7290, file: !7285, line: 30, column: 2)
!7294 = !DILocation(line: 30, column: 35, scope: !7293)
!7295 = !DILocation(line: 30, column: 13, scope: !7293)
!7296 = distinct !{!7296, !7289, !7297}
!7297 = !DILocation(line: 32, column: 2, scope: !7290)
!7298 = !DILocation(line: 33, column: 1, scope: !7284)
!7299 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6419, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !7300)
!7300 = !{!7301, !7302}
!7301 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7299, file: !533, line: 1814, type: !798)
!7302 = !DILocalVariable(name: "priority", arg: 2, scope: !7299, file: !533, line: 1814, type: !118)
!7303 = !DILocation(line: 0, scope: !7299)
!7304 = !DILocation(line: 1816, column: 7, scope: !7299)
!7305 = !DILocation(line: 0, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7299, file: !533, line: 1816, column: 7)
!7307 = !DILocation(line: 1824, column: 1, scope: !7299)
!7308 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7309, file: !7309, line: 27, type: !7310, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !7416)
!7309 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7310 = !DISubroutineType(types: !7311)
!7311 = !{null, !7312}
!7312 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !7313)
!7313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7314, size: 32)
!7314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !7315)
!7315 = !{!7316, !7374, !7386, !7387, !7388, !7389, !7390, !7396, !7411}
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7314, file: !143, line: 247, baseType: !7317, size: 384)
!7317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !7318)
!7318 = !{!7319, !7343, !7350, !7351, !7352, !7361, !7362, !7363}
!7319 = !DIDerivedType(tag: DW_TAG_member, scope: !7317, file: !143, line: 60, baseType: !7320, size: 64)
!7320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7317, file: !143, line: 60, size: 64, elements: !7321)
!7321 = !{!7322, !7337}
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7320, file: !143, line: 61, baseType: !7323, size: 64)
!7323 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !7324)
!7324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !7325)
!7325 = !{!7326, !7332}
!7326 = !DIDerivedType(tag: DW_TAG_member, scope: !7324, file: !153, line: 38, baseType: !7327, size: 32)
!7327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7324, file: !153, line: 38, size: 32, elements: !7328)
!7328 = !{!7329, !7331}
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7327, file: !153, line: 39, baseType: !7330, size: 32)
!7330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7324, size: 32)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7327, file: !153, line: 40, baseType: !7330, size: 32)
!7332 = !DIDerivedType(tag: DW_TAG_member, scope: !7324, file: !153, line: 42, baseType: !7333, size: 32, offset: 32)
!7333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7324, file: !153, line: 42, size: 32, elements: !7334)
!7334 = !{!7335, !7336}
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7333, file: !153, line: 43, baseType: !7330, size: 32)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7333, file: !153, line: 44, baseType: !7330, size: 32)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7320, file: !143, line: 62, baseType: !7338, size: 64)
!7338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !7339)
!7339 = !{!7340}
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7338, file: !169, line: 50, baseType: !7341, size: 64)
!7341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7342, size: 64, elements: !174)
!7342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7338, size: 32)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7317, file: !143, line: 68, baseType: !7344, size: 32, offset: 64)
!7344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7345, size: 32)
!7345 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !7346)
!7346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !7347)
!7347 = !{!7348}
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7346, file: !179, line: 232, baseType: !7349, size: 64)
!7349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !7324)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7317, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7317, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!7352 = !DIDerivedType(tag: DW_TAG_member, scope: !7317, file: !143, line: 90, baseType: !7353, size: 16, offset: 112)
!7353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7317, file: !143, line: 90, size: 16, elements: !7354)
!7354 = !{!7355, !7360}
!7355 = !DIDerivedType(tag: DW_TAG_member, scope: !7353, file: !143, line: 91, baseType: !7356, size: 16)
!7356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7353, file: !143, line: 91, size: 16, elements: !7357)
!7357 = !{!7358, !7359}
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7356, file: !143, line: 96, baseType: !195, size: 8)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7356, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7353, file: !143, line: 100, baseType: !199, size: 16)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7317, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7317, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7317, file: !143, line: 131, baseType: !7364, size: 192, offset: 192)
!7364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !7365)
!7365 = !{!7366, !7367, !7373}
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7364, file: !179, line: 245, baseType: !7323, size: 64)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7364, file: !179, line: 246, baseType: !7368, size: 32, offset: 64)
!7368 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !7369)
!7369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7370, size: 32)
!7370 = !DISubroutineType(types: !7371)
!7371 = !{null, !7372}
!7372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7364, size: 32)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7364, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7314, file: !143, line: 250, baseType: !7375, size: 288, offset: 384)
!7375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !7376)
!7376 = !{!7377, !7378, !7379, !7380, !7381, !7382, !7383, !7384, !7385}
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7375, file: !216, line: 26, baseType: !118, size: 32)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7375, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7375, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7375, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7375, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7375, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7375, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7375, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7375, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7314, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7314, file: !143, line: 256, baseType: !7345, size: 64, offset: 704)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7314, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7314, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7314, file: !143, line: 300, baseType: !7391, size: 96, offset: 1056)
!7391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !7392)
!7392 = !{!7393, !7394, !7395}
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7391, file: !143, line: 153, baseType: !22, size: 32)
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7391, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7391, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7314, file: !143, line: 325, baseType: !7397, size: 32, offset: 1152)
!7397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7398, size: 32)
!7398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !7399)
!7399 = !{!7400, !7406, !7407}
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7398, file: !245, line: 5074, baseType: !7401, size: 96)
!7401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !7402)
!7402 = !{!7403, !7404, !7405}
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7401, file: !249, line: 57, baseType: !252, size: 32)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7401, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7401, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7398, file: !245, line: 5075, baseType: !7345, size: 64, offset: 96)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7398, file: !245, line: 5076, baseType: !7408, size: 32, offset: 160)
!7408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !7409)
!7409 = !{!7410}
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7408, file: !259, line: 52, baseType: !22, size: 32)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7314, file: !143, line: 343, baseType: !7412, size: 64, offset: 1184)
!7412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !7413)
!7413 = !{!7414, !7415}
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7412, file: !216, line: 63, baseType: !118, size: 32)
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7412, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!7416 = !{!7417}
!7417 = !DILocalVariable(name: "thread", arg: 1, scope: !7308, file: !7309, line: 27, type: !7312)
!7418 = !DILocation(line: 0, scope: !7308)
!7419 = !DILocation(line: 29, column: 6, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7308, file: !7309, line: 29, column: 6)
!7421 = !DILocation(line: 29, column: 15, scope: !7420)
!7422 = !DILocation(line: 29, column: 6, scope: !7308)
!7423 = !DILocation(line: 1031, column: 3, scope: !7424, inlinedAt: !7427)
!7424 = distinct !DISubprogram(name: "__get_IPSR", scope: !6379, file: !6379, line: 1027, type: !3257, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !7425)
!7425 = !{!7426}
!7426 = !DILocalVariable(name: "result", scope: !7424, file: !6379, line: 1029, type: !118)
!7427 = distinct !DILocation(line: 48, column: 10, scope: !7428, inlinedAt: !7432)
!7428 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7429, file: !7429, line: 46, type: !7430, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2770, retainedNodes: !2102)
!7429 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7430 = !DISubroutineType(types: !7431)
!7431 = !{!345}
!7432 = distinct !DILocation(line: 30, column: 7, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7434, file: !7309, line: 30, column: 7)
!7434 = distinct !DILexicalBlock(scope: !7420, file: !7309, line: 29, column: 26)
!7435 = !{i64 3727061}
!7436 = !DILocation(line: 0, scope: !7424, inlinedAt: !7427)
!7437 = !DILocation(line: 48, column: 9, scope: !7428, inlinedAt: !7432)
!7438 = !DILocation(line: 30, column: 7, scope: !7434)
!7439 = !DILocation(line: 42, column: 14, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7433, file: !7309, line: 30, column: 25)
!7441 = !DILocation(line: 48, column: 15, scope: !7440)
!7442 = !DILocation(line: 49, column: 3, scope: !7440)
!7443 = !DILocation(line: 52, column: 2, scope: !7308)
!7444 = !DILocation(line: 53, column: 1, scope: !7308)
!7445 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !392, file: !392, line: 127, type: !3019, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !2102)
!7446 = !DILocation(line: 134, column: 2, scope: !7445)
!7447 = !DILocation(line: 156, column: 1, scope: !7445)
!7448 = !DILocation(line: 0, scope: !391)
!7449 = !DILocation(line: 289, column: 36, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !391, file: !392, line: 285, column: 2)
!7451 = !DILocation(line: 289, column: 42, scope: !7450)
!7452 = !DILocation(line: 300, column: 36, scope: !391)
!7453 = !DILocation(line: 301, column: 35, scope: !391)
!7454 = !DILocation(line: 302, column: 37, scope: !391)
!7455 = !DILocation(line: 311, column: 2, scope: !391)
!7456 = !DILocation(line: 316, column: 1, scope: !391)
!7457 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !561, file: !561, line: 180, type: !3019, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2102)
!7458 = !DILocation(line: 188, column: 12, scope: !7457)
!7459 = !DILocation(line: 271, column: 3, scope: !7460, inlinedAt: !7461)
!7460 = distinct !DISubprogram(name: "__DSB", scope: !6379, file: !6379, line: 269, type: !3019, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2102)
!7461 = distinct !DILocation(line: 192, column: 2, scope: !7457)
!7462 = !{i64 3917951}
!7463 = !DILocation(line: 260, column: 3, scope: !7464, inlinedAt: !7465)
!7464 = distinct !DISubprogram(name: "__ISB", scope: !6379, file: !6379, line: 258, type: !3019, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2102)
!7465 = distinct !DILocation(line: 193, column: 2, scope: !7457)
!7466 = !{i64 3917668}
!7467 = !DILocation(line: 194, column: 1, scope: !7457)
!7468 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !561, file: !561, line: 199, type: !3019, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2102)
!7469 = !DILocation(line: 282, column: 3, scope: !7470, inlinedAt: !7471)
!7470 = distinct !DISubprogram(name: "__DMB", scope: !6379, file: !6379, line: 280, type: !3019, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2102)
!7471 = distinct !DILocation(line: 202, column: 2, scope: !7468)
!7472 = !{i64 3918227}
!7473 = !DILocation(line: 205, column: 12, scope: !7468)
!7474 = !DILocation(line: 206, column: 1, scope: !7468)
!7475 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !561, file: !561, line: 275, type: !7476, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7489)
!7476 = !DISubroutineType(types: !7477)
!7477 = !{null, !7478, !1886, !6654, !6654}
!7478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7479, size: 32)
!7479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7480)
!7480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !505, line: 52, size: 96, elements: !7481)
!7481 = !{!7482, !7483, !7484}
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7480, file: !505, line: 53, baseType: !22, size: 32)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7480, file: !505, line: 54, baseType: !239, size: 32, offset: 32)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7480, file: !505, line: 55, baseType: !7485, size: 32, offset: 64)
!7485 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !511, line: 151, baseType: !7486)
!7486 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !511, line: 149, size: 32, elements: !7487)
!7487 = !{!7488}
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7486, file: !511, line: 150, baseType: !118, size: 32)
!7489 = !{!7490, !7491, !7492, !7493}
!7490 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7475, file: !561, line: 276, type: !7478)
!7491 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7475, file: !561, line: 276, type: !1886)
!7492 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7475, file: !561, line: 277, type: !6654)
!7493 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7475, file: !561, line: 277, type: !6654)
!7494 = !DILocation(line: 0, scope: !7475)
!7495 = !DILocation(line: 279, column: 6, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7475, file: !561, line: 279, column: 6)
!7497 = !DILocation(line: 280, column: 57, scope: !7496)
!7498 = !DILocation(line: 279, column: 6, scope: !7475)
!7499 = !DILocation(line: 282, column: 3, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7501, file: !561, line: 282, column: 3)
!7501 = distinct !DILexicalBlock(scope: !7502, file: !561, line: 282, column: 3)
!7502 = distinct !DILexicalBlock(scope: !7503, file: !561, line: 282, column: 3)
!7503 = distinct !DILexicalBlock(scope: !7496, file: !561, line: 280, column: 69)
!7504 = !DILocation(line: 285, column: 1, scope: !7475)
!7505 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7506, file: !7506, line: 220, type: !7507, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7509)
!7506 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7507 = !DISubroutineType(types: !7508)
!7508 = !{!119, !7478, !1886, !6654, !6654}
!7509 = !{!7510, !7511, !7512, !7513, !7514}
!7510 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7505, file: !7506, line: 221, type: !7478)
!7511 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7505, file: !7506, line: 221, type: !1886)
!7512 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7505, file: !7506, line: 222, type: !6654)
!7513 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7505, file: !7506, line: 223, type: !6654)
!7514 = !DILocalVariable(name: "mpu_reg_index", scope: !7505, file: !7506, line: 225, type: !119)
!7515 = !DILocation(line: 0, scope: !7505)
!7516 = !DILocation(line: 225, column: 22, scope: !7505)
!7517 = !DILocation(line: 233, column: 18, scope: !7505)
!7518 = !DILocation(line: 236, column: 23, scope: !7505)
!7519 = !DILocation(line: 236, column: 21, scope: !7505)
!7520 = !DILocation(line: 238, column: 2, scope: !7505)
!7521 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !561, file: !561, line: 105, type: !7522, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7524)
!7522 = !DISubroutineType(types: !7523)
!7523 = !{!119, !7478, !185, !185, !345}
!7524 = !{!7525, !7526, !7527, !7528, !7529, !7530}
!7525 = !DILocalVariable(name: "regions", arg: 1, scope: !7521, file: !561, line: 106, type: !7478)
!7526 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7521, file: !561, line: 106, type: !185)
!7527 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7521, file: !561, line: 106, type: !185)
!7528 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7521, file: !561, line: 107, type: !345)
!7529 = !DILocalVariable(name: "i", scope: !7521, file: !561, line: 109, type: !119)
!7530 = !DILocalVariable(name: "reg_index", scope: !7521, file: !561, line: 110, type: !119)
!7531 = !DILocation(line: 0, scope: !7521)
!7532 = !DILocation(line: 110, column: 18, scope: !7521)
!7533 = !DILocation(line: 112, column: 16, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !561, line: 112, column: 2)
!7535 = distinct !DILexicalBlock(scope: !7521, file: !561, line: 112, column: 2)
!7536 = !DILocation(line: 112, column: 2, scope: !7535)
!7537 = !DILocation(line: 113, column: 7, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7539, file: !561, line: 113, column: 7)
!7539 = distinct !DILexicalBlock(scope: !7534, file: !561, line: 112, column: 36)
!7540 = !DILocation(line: 113, column: 18, scope: !7538)
!7541 = !DILocation(line: 113, column: 23, scope: !7538)
!7542 = !DILocation(line: 113, column: 7, scope: !7539)
!7543 = !DILocation(line: 118, column: 23, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7539, file: !561, line: 118, column: 7)
!7545 = !DILocation(line: 119, column: 7, scope: !7544)
!7546 = !DILocation(line: 118, column: 7, scope: !7539)
!7547 = !DILocation(line: 120, column: 4, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7549, file: !561, line: 120, column: 4)
!7549 = distinct !DILexicalBlock(scope: !7550, file: !561, line: 120, column: 4)
!7550 = distinct !DILexicalBlock(scope: !7551, file: !561, line: 120, column: 4)
!7551 = distinct !DILexicalBlock(scope: !7552, file: !561, line: 120, column: 4)
!7552 = distinct !DILexicalBlock(scope: !7544, file: !561, line: 119, column: 45)
!7553 = !DILocation(line: 121, column: 4, scope: !7552)
!7554 = !DILocation(line: 124, column: 36, scope: !7539)
!7555 = !DILocation(line: 124, column: 15, scope: !7539)
!7556 = !DILocation(line: 126, column: 17, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7539, file: !561, line: 126, column: 7)
!7558 = !DILocation(line: 126, column: 7, scope: !7539)
!7559 = !DILocation(line: 131, column: 12, scope: !7539)
!7560 = !DILocation(line: 132, column: 2, scope: !7539)
!7561 = !DILocation(line: 112, column: 32, scope: !7534)
!7562 = distinct !{!7562, !7536, !7563}
!7563 = !DILocation(line: 132, column: 2, scope: !7535)
!7564 = !DILocation(line: 135, column: 1, scope: !7521)
!7565 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7506, file: !7506, line: 63, type: !7566, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7568)
!7566 = !DISubroutineType(types: !7567)
!7567 = !{!119, !7478}
!7568 = !{!7569, !7570}
!7569 = !DILocalVariable(name: "part", arg: 1, scope: !7565, file: !7506, line: 63, type: !7478)
!7570 = !DILocalVariable(name: "partition_is_valid", scope: !7565, file: !7506, line: 70, type: !119)
!7571 = !DILocation(line: 0, scope: !7565)
!7572 = !DILocation(line: 71, column: 11, scope: !7565)
!7573 = !DILocation(line: 71, column: 37, scope: !7565)
!7574 = !{i32 0, i32 33}
!7575 = !DILocation(line: 72, column: 3, scope: !7565)
!7576 = !DILocation(line: 71, column: 30, scope: !7565)
!7577 = !DILocation(line: 75, column: 11, scope: !7565)
!7578 = !DILocation(line: 75, column: 17, scope: !7565)
!7579 = !DILocation(line: 75, column: 38, scope: !7565)
!7580 = !DILocation(line: 77, column: 2, scope: !7565)
!7581 = distinct !DISubprogram(name: "mpu_configure_region", scope: !561, file: !561, line: 79, type: !7582, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7584)
!7582 = !DISubroutineType(types: !7583)
!7583 = !{!119, !1886, !7478}
!7584 = !{!7585, !7586, !7587}
!7585 = !DILocalVariable(name: "index", arg: 1, scope: !7581, file: !561, line: 79, type: !1886)
!7586 = !DILocalVariable(name: "new_region", arg: 2, scope: !7581, file: !561, line: 80, type: !7478)
!7587 = !DILocalVariable(name: "region_conf", scope: !7581, file: !561, line: 82, type: !550)
!7588 = !DILocation(line: 0, scope: !7581)
!7589 = !DILocation(line: 82, column: 2, scope: !7581)
!7590 = !DILocation(line: 82, column: 24, scope: !7581)
!7591 = !DILocation(line: 87, column: 33, scope: !7581)
!7592 = !DILocation(line: 87, column: 14, scope: !7581)
!7593 = !DILocation(line: 87, column: 19, scope: !7581)
!7594 = !DILocation(line: 91, column: 55, scope: !7581)
!7595 = !DILocation(line: 92, column: 16, scope: !7581)
!7596 = !DILocation(line: 92, column: 53, scope: !7581)
!7597 = !DILocation(line: 91, column: 2, scope: !7581)
!7598 = !DILocation(line: 95, column: 9, scope: !7581)
!7599 = !DILocation(line: 97, column: 1, scope: !7581)
!7600 = !DILocation(line: 95, column: 2, scope: !7581)
!7601 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7506, file: !7506, line: 113, type: !7602, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7607)
!7602 = !DISubroutineType(types: !7603)
!7603 = !{null, !7604, !7605, !118, !118}
!7604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!7605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7606, size: 32)
!7606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7485)
!7607 = !{!7608, !7609, !7610, !7611}
!7608 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7601, file: !7506, line: 114, type: !7604)
!7609 = !DILocalVariable(name: "attr", arg: 2, scope: !7601, file: !7506, line: 115, type: !7605)
!7610 = !DILocalVariable(name: "base", arg: 3, scope: !7601, file: !7506, line: 115, type: !118)
!7611 = !DILocalVariable(name: "size", arg: 4, scope: !7601, file: !7506, line: 115, type: !118)
!7612 = !DILocation(line: 0, scope: !7601)
!7613 = !DILocation(line: 127, column: 23, scope: !7601)
!7614 = !DILocation(line: 127, column: 35, scope: !7601)
!7615 = !DILocation(line: 127, column: 33, scope: !7601)
!7616 = !DILocation(line: 127, column: 10, scope: !7601)
!7617 = !DILocation(line: 127, column: 15, scope: !7601)
!7618 = !DILocation(line: 129, column: 1, scope: !7601)
!7619 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !561, file: !561, line: 57, type: !7620, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7622)
!7620 = !DISubroutineType(types: !7621)
!7621 = !{!119, !1886, !548}
!7622 = !{!7623, !7624}
!7623 = !DILocalVariable(name: "index", arg: 1, scope: !7619, file: !561, line: 57, type: !1886)
!7624 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7619, file: !561, line: 58, type: !548)
!7625 = !DILocation(line: 0, scope: !7619)
!7626 = !DILocation(line: 61, column: 6, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7619, file: !561, line: 61, column: 6)
!7628 = !DILocation(line: 61, column: 12, scope: !7627)
!7629 = !DILocation(line: 61, column: 6, scope: !7619)
!7630 = !DILocation(line: 64, column: 3, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7632, file: !561, line: 64, column: 3)
!7632 = distinct !DILexicalBlock(scope: !7633, file: !561, line: 64, column: 3)
!7633 = distinct !DILexicalBlock(scope: !7634, file: !561, line: 64, column: 3)
!7634 = distinct !DILexicalBlock(scope: !7635, file: !561, line: 64, column: 3)
!7635 = distinct !DILexicalBlock(scope: !7627, file: !561, line: 61, column: 40)
!7636 = !DILocation(line: 65, column: 3, scope: !7635)
!7637 = !DILocation(line: 71, column: 2, scope: !7619)
!7638 = !DILocation(line: 73, column: 2, scope: !7619)
!7639 = !DILocation(line: 74, column: 1, scope: !7619)
!7640 = distinct !DISubprogram(name: "region_init", scope: !7506, file: !7506, line: 29, type: !7641, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7643)
!7641 = !DISubroutineType(types: !7642)
!7642 = !{null, !6654, !548}
!7643 = !{!7644, !7645}
!7644 = !DILocalVariable(name: "index", arg: 1, scope: !7640, file: !7506, line: 29, type: !6654)
!7645 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7640, file: !7506, line: 30, type: !548)
!7646 = !DILocation(line: 0, scope: !7640)
!7647 = !DILocation(line: 33, column: 2, scope: !7640)
!7648 = !DILocation(line: 47, column: 28, scope: !7640)
!7649 = !DILocation(line: 47, column: 33, scope: !7640)
!7650 = !DILocation(line: 48, column: 26, scope: !7640)
!7651 = !DILocation(line: 47, column: 12, scope: !7640)
!7652 = !DILocation(line: 49, column: 32, scope: !7640)
!7653 = !DILocation(line: 49, column: 37, scope: !7640)
!7654 = !DILocation(line: 49, column: 12, scope: !7640)
!7655 = !DILocation(line: 53, column: 1, scope: !7640)
!7656 = distinct !DISubprogram(name: "set_region_number", scope: !7657, file: !7657, line: 32, type: !6474, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7658)
!7657 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7658 = !{!7659}
!7659 = !DILocalVariable(name: "index", arg: 1, scope: !7656, file: !7657, line: 32, type: !118)
!7660 = !DILocation(line: 0, scope: !7656)
!7661 = !DILocation(line: 34, column: 11, scope: !7656)
!7662 = !DILocation(line: 35, column: 1, scope: !7656)
!7663 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7506, file: !7506, line: 88, type: !7664, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7666)
!7664 = !DISubroutineType(types: !7665)
!7665 = !{!118, !118}
!7666 = !{!7667}
!7667 = !DILocalVariable(name: "size", arg: 1, scope: !7663, file: !7506, line: 88, type: !118)
!7668 = !DILocation(line: 0, scope: !7663)
!7669 = !DILocation(line: 91, column: 11, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7663, file: !7506, line: 91, column: 6)
!7671 = !DILocation(line: 91, column: 6, scope: !7663)
!7672 = !DILocation(line: 100, column: 11, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7663, file: !7506, line: 100, column: 6)
!7674 = !DILocation(line: 100, column: 6, scope: !7663)
!7675 = !DILocation(line: 104, column: 35, scope: !7663)
!7676 = !DILocation(line: 104, column: 16, scope: !7663)
!7677 = !DILocation(line: 104, column: 50, scope: !7663)
!7678 = !DILocation(line: 104, column: 72, scope: !7663)
!7679 = !DILocation(line: 104, column: 2, scope: !7663)
!7680 = !DILocation(line: 106, column: 1, scope: !7663)
!7681 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !561, file: !561, line: 307, type: !7682, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7684)
!7682 = !DISubroutineType(types: !7683)
!7683 = !{null, !7478, !185}
!7684 = !{!7685, !7686}
!7685 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7681, file: !561, line: 308, type: !7478)
!7686 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7681, file: !561, line: 308, type: !185)
!7687 = !DILocation(line: 0, scope: !7681)
!7688 = !DILocation(line: 310, column: 6, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7681, file: !561, line: 310, column: 6)
!7690 = !DILocation(line: 311, column: 3, scope: !7689)
!7691 = !DILocation(line: 310, column: 6, scope: !7681)
!7692 = !DILocation(line: 313, column: 3, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !561, line: 313, column: 3)
!7694 = distinct !DILexicalBlock(scope: !7695, file: !561, line: 313, column: 3)
!7695 = distinct !DILexicalBlock(scope: !7696, file: !561, line: 313, column: 3)
!7696 = distinct !DILexicalBlock(scope: !7689, file: !561, line: 311, column: 15)
!7697 = !DILocation(line: 316, column: 1, scope: !7681)
!7698 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7506, file: !7506, line: 249, type: !7699, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7701)
!7699 = !DISubroutineType(types: !7700)
!7700 = !{!119, !7478, !185}
!7701 = !{!7702, !7703, !7704, !7705}
!7702 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7698, file: !7506, line: 250, type: !7478)
!7703 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7698, file: !7506, line: 250, type: !185)
!7704 = !DILocalVariable(name: "mpu_reg_index", scope: !7698, file: !7506, line: 252, type: !119)
!7705 = !DILocalVariable(name: "i", scope: !7706, file: !7506, line: 264, type: !119)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !7506, line: 264, column: 3)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !7506, line: 261, column: 32)
!7708 = distinct !DILexicalBlock(scope: !7698, file: !7506, line: 261, column: 6)
!7709 = !DILocation(line: 0, scope: !7698)
!7710 = !DILocation(line: 252, column: 22, scope: !7698)
!7711 = !DILocation(line: 258, column: 18, scope: !7698)
!7712 = !DILocation(line: 261, column: 20, scope: !7708)
!7713 = !DILocation(line: 261, column: 6, scope: !7698)
!7714 = !DILocation(line: 0, scope: !7706)
!7715 = !DILocation(line: 265, column: 4, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7717, file: !7506, line: 264, column: 59)
!7717 = distinct !DILexicalBlock(scope: !7706, file: !7506, line: 264, column: 3)
!7718 = !DILocation(line: 264, column: 55, scope: !7717)
!7719 = !DILocation(line: 264, column: 33, scope: !7717)
!7720 = !DILocation(line: 264, column: 3, scope: !7706)
!7721 = distinct !{!7721, !7720, !7722}
!7722 = !DILocation(line: 266, column: 3, scope: !7706)
!7723 = !DILocation(line: 269, column: 2, scope: !7698)
!7724 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7725, file: !7725, line: 218, type: !6474, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7726)
!7725 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7726 = !{!7727}
!7727 = !DILocalVariable(name: "rnr", arg: 1, scope: !7724, file: !7725, line: 218, type: !118)
!7728 = !DILocation(line: 0, scope: !7724)
!7729 = !DILocation(line: 220, column: 12, scope: !7724)
!7730 = !DILocation(line: 221, column: 13, scope: !7724)
!7731 = !DILocation(line: 222, column: 1, scope: !7724)
!7732 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !561, file: !561, line: 326, type: !7733, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7735)
!7733 = !DISubroutineType(types: !7734)
!7734 = !{!119}
!7735 = !{!7736}
!7736 = !DILocalVariable(name: "r_index", scope: !7732, file: !561, line: 328, type: !118)
!7737 = !DILocation(line: 330, column: 17, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7732, file: !561, line: 330, column: 6)
!7739 = !DILocation(line: 330, column: 29, scope: !7738)
!7740 = !DILocation(line: 330, column: 6, scope: !7732)
!7741 = !DILocation(line: 337, column: 3, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7743, file: !561, line: 337, column: 3)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !561, line: 337, column: 3)
!7744 = distinct !DILexicalBlock(scope: !7745, file: !561, line: 337, column: 3)
!7745 = distinct !DILexicalBlock(scope: !7738, file: !561, line: 330, column: 50)
!7746 = !DILocation(line: 347, column: 2, scope: !7732)
!7747 = !DILocation(line: 0, scope: !7732)
!7748 = !DILocation(line: 364, column: 29, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7750, file: !561, line: 364, column: 2)
!7750 = distinct !DILexicalBlock(scope: !7732, file: !561, line: 364, column: 2)
!7751 = !DILocation(line: 364, column: 2, scope: !7750)
!7752 = !DILocation(line: 365, column: 25, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7749, file: !561, line: 364, column: 66)
!7754 = !DILocation(line: 365, column: 3, scope: !7753)
!7755 = !DILocation(line: 364, column: 62, scope: !7749)
!7756 = distinct !{!7756, !7751, !7757}
!7757 = !DILocation(line: 366, column: 2, scope: !7750)
!7758 = !DILocation(line: 369, column: 23, scope: !7732)
!7759 = !DILocation(line: 369, column: 21, scope: !7732)
!7760 = !DILocation(line: 372, column: 2, scope: !7732)
!7761 = !DILocation(line: 433, column: 2, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7763, file: !561, line: 433, column: 2)
!7763 = distinct !DILexicalBlock(scope: !7732, file: !561, line: 433, column: 2)
!7764 = !DILocation(line: 433, column: 2, scope: !7763)
!7765 = !DILocation(line: 433, column: 2, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7762, file: !561, line: 433, column: 2)
!7767 = !DILocation(line: 444, column: 1, scope: !7732)
!7768 = distinct !DISubprogram(name: "strcpy", scope: !7769, file: !7769, line: 20, type: !7770, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !7774)
!7769 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7770 = !DISubroutineType(types: !7771)
!7771 = !{!106, !7772, !7773}
!7772 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7773 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !278)
!7774 = !{!7775, !7776, !7777}
!7775 = !DILocalVariable(name: "d", arg: 1, scope: !7768, file: !7769, line: 20, type: !7772)
!7776 = !DILocalVariable(name: "s", arg: 2, scope: !7768, file: !7769, line: 20, type: !7773)
!7777 = !DILocalVariable(name: "dest", scope: !7768, file: !7769, line: 22, type: !106)
!7778 = !DILocation(line: 0, scope: !7768)
!7779 = !DILocation(line: 24, column: 9, scope: !7768)
!7780 = !DILocation(line: 24, column: 12, scope: !7768)
!7781 = !DILocation(line: 24, column: 2, scope: !7768)
!7782 = !DILocation(line: 25, column: 6, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7768, file: !7769, line: 24, column: 21)
!7784 = !DILocation(line: 26, column: 4, scope: !7783)
!7785 = !DILocation(line: 27, column: 4, scope: !7783)
!7786 = distinct !{!7786, !7781, !7787}
!7787 = !DILocation(line: 28, column: 2, scope: !7768)
!7788 = !DILocation(line: 30, column: 5, scope: !7768)
!7789 = !DILocation(line: 32, column: 2, scope: !7768)
!7790 = distinct !DISubprogram(name: "strncpy", scope: !7769, file: !7769, line: 42, type: !7791, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !7793)
!7791 = !DISubroutineType(types: !7792)
!7792 = !{!106, !7772, !7773, !239}
!7793 = !{!7794, !7795, !7796, !7797}
!7794 = !DILocalVariable(name: "d", arg: 1, scope: !7790, file: !7769, line: 42, type: !7772)
!7795 = !DILocalVariable(name: "s", arg: 2, scope: !7790, file: !7769, line: 42, type: !7773)
!7796 = !DILocalVariable(name: "n", arg: 3, scope: !7790, file: !7769, line: 42, type: !239)
!7797 = !DILocalVariable(name: "dest", scope: !7790, file: !7769, line: 44, type: !106)
!7798 = !DILocation(line: 0, scope: !7790)
!7799 = !DILocation(line: 46, column: 12, scope: !7790)
!7800 = !DILocation(line: 46, column: 17, scope: !7790)
!7801 = !DILocation(line: 46, column: 20, scope: !7790)
!7802 = !DILocation(line: 46, column: 23, scope: !7790)
!7803 = !DILocation(line: 46, column: 2, scope: !7790)
!7804 = !DILocation(line: 47, column: 6, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7790, file: !7769, line: 46, column: 32)
!7806 = !DILocation(line: 48, column: 4, scope: !7805)
!7807 = !DILocation(line: 49, column: 4, scope: !7805)
!7808 = !DILocation(line: 50, column: 4, scope: !7805)
!7809 = distinct !{!7809, !7803, !7810}
!7810 = !DILocation(line: 51, column: 2, scope: !7790)
!7811 = !DILocation(line: 54, column: 6, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7790, file: !7769, line: 53, column: 16)
!7813 = !DILocation(line: 55, column: 4, scope: !7812)
!7814 = !DILocation(line: 56, column: 4, scope: !7812)
!7815 = !DILocation(line: 53, column: 11, scope: !7790)
!7816 = !DILocation(line: 53, column: 2, scope: !7790)
!7817 = distinct !{!7817, !7816, !7818}
!7818 = !DILocation(line: 57, column: 2, scope: !7790)
!7819 = !DILocation(line: 59, column: 2, scope: !7790)
!7820 = distinct !DISubprogram(name: "strchr", scope: !7769, file: !7769, line: 69, type: !7821, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !7823)
!7821 = !DISubroutineType(types: !7822)
!7822 = !{!106, !278, !119}
!7823 = !{!7824, !7825, !7826}
!7824 = !DILocalVariable(name: "s", arg: 1, scope: !7820, file: !7769, line: 69, type: !278)
!7825 = !DILocalVariable(name: "c", arg: 2, scope: !7820, file: !7769, line: 69, type: !119)
!7826 = !DILocalVariable(name: "tmp", scope: !7820, file: !7769, line: 71, type: !107)
!7827 = !DILocation(line: 0, scope: !7820)
!7828 = !DILocation(line: 73, column: 2, scope: !7820)
!7829 = !DILocation(line: 73, column: 10, scope: !7820)
!7830 = !DILocation(line: 73, column: 13, scope: !7820)
!7831 = !DILocation(line: 73, column: 21, scope: !7820)
!7832 = !DILocation(line: 74, column: 4, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7820, file: !7769, line: 73, column: 38)
!7834 = distinct !{!7834, !7828, !7835}
!7835 = !DILocation(line: 75, column: 2, scope: !7820)
!7836 = !DILocation(line: 77, column: 9, scope: !7820)
!7837 = !DILocation(line: 77, column: 2, scope: !7820)
!7838 = distinct !DISubprogram(name: "strrchr", scope: !7769, file: !7769, line: 87, type: !7821, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !7839)
!7839 = !{!7840, !7841, !7842}
!7840 = !DILocalVariable(name: "s", arg: 1, scope: !7838, file: !7769, line: 87, type: !278)
!7841 = !DILocalVariable(name: "c", arg: 2, scope: !7838, file: !7769, line: 87, type: !119)
!7842 = !DILocalVariable(name: "match", scope: !7838, file: !7769, line: 89, type: !106)
!7843 = !DILocation(line: 0, scope: !7838)
!7844 = !DILocation(line: 91, column: 2, scope: !7838)
!7845 = !DILocation(line: 92, column: 7, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !7769, line: 92, column: 7)
!7847 = distinct !DILexicalBlock(scope: !7838, file: !7769, line: 91, column: 5)
!7848 = !DILocation(line: 92, column: 10, scope: !7846)
!7849 = !DILocation(line: 92, column: 7, scope: !7847)
!7850 = !DILocation(line: 95, column: 13, scope: !7838)
!7851 = !DILocation(line: 95, column: 2, scope: !7847)
!7852 = distinct !{!7852, !7844, !7853}
!7853 = !DILocation(line: 95, column: 15, scope: !7838)
!7854 = !DILocation(line: 97, column: 2, scope: !7838)
!7855 = distinct !DISubprogram(name: "strlen", scope: !7769, file: !7769, line: 107, type: !7856, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !7858)
!7856 = !DISubroutineType(types: !7857)
!7857 = !{!239, !278}
!7858 = !{!7859, !7860}
!7859 = !DILocalVariable(name: "s", arg: 1, scope: !7855, file: !7769, line: 107, type: !278)
!7860 = !DILocalVariable(name: "n", scope: !7855, file: !7769, line: 109, type: !239)
!7861 = !DILocation(line: 0, scope: !7855)
!7862 = !DILocation(line: 111, column: 9, scope: !7855)
!7863 = !DILocation(line: 111, column: 12, scope: !7855)
!7864 = !DILocation(line: 111, column: 2, scope: !7855)
!7865 = !DILocation(line: 112, column: 4, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7855, file: !7769, line: 111, column: 21)
!7867 = !DILocation(line: 113, column: 4, scope: !7866)
!7868 = distinct !{!7868, !7864, !7869}
!7869 = !DILocation(line: 114, column: 2, scope: !7855)
!7870 = !DILocation(line: 116, column: 2, scope: !7855)
!7871 = distinct !DISubprogram(name: "strnlen", scope: !7769, file: !7769, line: 126, type: !7872, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !7874)
!7872 = !DISubroutineType(types: !7873)
!7873 = !{!239, !278, !239}
!7874 = !{!7875, !7876, !7877}
!7875 = !DILocalVariable(name: "s", arg: 1, scope: !7871, file: !7769, line: 126, type: !278)
!7876 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7871, file: !7769, line: 126, type: !239)
!7877 = !DILocalVariable(name: "n", scope: !7871, file: !7769, line: 128, type: !239)
!7878 = !DILocation(line: 0, scope: !7871)
!7879 = !DILocation(line: 130, column: 9, scope: !7871)
!7880 = !DILocation(line: 130, column: 12, scope: !7871)
!7881 = !DILocation(line: 130, column: 20, scope: !7871)
!7882 = !DILocation(line: 130, column: 2, scope: !7871)
!7883 = !DILocation(line: 131, column: 4, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7871, file: !7769, line: 130, column: 35)
!7885 = !DILocation(line: 132, column: 4, scope: !7884)
!7886 = distinct !{!7886, !7882, !7887}
!7887 = !DILocation(line: 133, column: 2, scope: !7871)
!7888 = !DILocation(line: 135, column: 2, scope: !7871)
!7889 = distinct !DISubprogram(name: "strcmp", scope: !7769, file: !7769, line: 145, type: !7890, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !7892)
!7890 = !DISubroutineType(types: !7891)
!7891 = !{!119, !278, !278}
!7892 = !{!7893, !7894}
!7893 = !DILocalVariable(name: "s1", arg: 1, scope: !7889, file: !7769, line: 145, type: !278)
!7894 = !DILocalVariable(name: "s2", arg: 2, scope: !7889, file: !7769, line: 145, type: !278)
!7895 = !DILocation(line: 0, scope: !7889)
!7896 = !DILocation(line: 147, column: 10, scope: !7889)
!7897 = !DILocation(line: 147, column: 17, scope: !7889)
!7898 = !DILocation(line: 147, column: 14, scope: !7889)
!7899 = !DILocation(line: 147, column: 22, scope: !7889)
!7900 = !DILocation(line: 148, column: 5, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7889, file: !7769, line: 147, column: 40)
!7902 = !DILocation(line: 149, column: 5, scope: !7901)
!7903 = distinct !{!7903, !7904, !7905}
!7904 = !DILocation(line: 147, column: 2, scope: !7889)
!7905 = !DILocation(line: 150, column: 2, scope: !7889)
!7906 = !DILocation(line: 152, column: 9, scope: !7889)
!7907 = !DILocation(line: 152, column: 15, scope: !7889)
!7908 = !DILocation(line: 152, column: 13, scope: !7889)
!7909 = !DILocation(line: 152, column: 2, scope: !7889)
!7910 = distinct !DISubprogram(name: "strncmp", scope: !7769, file: !7769, line: 162, type: !7911, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !7913)
!7911 = !DISubroutineType(types: !7912)
!7912 = !{!119, !278, !278, !239}
!7913 = !{!7914, !7915, !7916}
!7914 = !DILocalVariable(name: "s1", arg: 1, scope: !7910, file: !7769, line: 162, type: !278)
!7915 = !DILocalVariable(name: "s2", arg: 2, scope: !7910, file: !7769, line: 162, type: !278)
!7916 = !DILocalVariable(name: "n", arg: 3, scope: !7910, file: !7769, line: 162, type: !239)
!7917 = !DILocation(line: 0, scope: !7910)
!7918 = !DILocation(line: 164, column: 17, scope: !7910)
!7919 = !DILocation(line: 164, column: 21, scope: !7910)
!7920 = !DILocation(line: 164, column: 28, scope: !7910)
!7921 = !DILocation(line: 164, column: 25, scope: !7910)
!7922 = !DILocation(line: 164, column: 33, scope: !7910)
!7923 = !DILocation(line: 165, column: 5, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7910, file: !7769, line: 164, column: 51)
!7925 = !DILocation(line: 166, column: 5, scope: !7924)
!7926 = !DILocation(line: 167, column: 4, scope: !7924)
!7927 = distinct !{!7927, !7928, !7929}
!7928 = !DILocation(line: 164, column: 2, scope: !7910)
!7929 = !DILocation(line: 168, column: 2, scope: !7910)
!7930 = !DILocation(line: 170, column: 25, scope: !7910)
!7931 = !DILocation(line: 170, column: 31, scope: !7910)
!7932 = !DILocation(line: 170, column: 29, scope: !7910)
!7933 = !DILocation(line: 170, column: 9, scope: !7910)
!7934 = !DILocation(line: 170, column: 2, scope: !7910)
!7935 = distinct !DISubprogram(name: "strtok_r", scope: !7769, file: !7769, line: 180, type: !7936, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !7938)
!7936 = !DISubroutineType(types: !7937)
!7937 = !{!106, !106, !278, !283}
!7938 = !{!7939, !7940, !7941, !7942, !7943}
!7939 = !DILocalVariable(name: "str", arg: 1, scope: !7935, file: !7769, line: 180, type: !106)
!7940 = !DILocalVariable(name: "sep", arg: 2, scope: !7935, file: !7769, line: 180, type: !278)
!7941 = !DILocalVariable(name: "state", arg: 3, scope: !7935, file: !7769, line: 180, type: !283)
!7942 = !DILocalVariable(name: "start", scope: !7935, file: !7769, line: 182, type: !106)
!7943 = !DILocalVariable(name: "end", scope: !7935, file: !7769, line: 182, type: !106)
!7944 = !DILocation(line: 0, scope: !7935)
!7945 = !DILocation(line: 184, column: 10, scope: !7935)
!7946 = !DILocation(line: 184, column: 22, scope: !7935)
!7947 = !DILocation(line: 187, column: 9, scope: !7935)
!7948 = !DILocation(line: 187, column: 16, scope: !7935)
!7949 = !DILocation(line: 187, column: 19, scope: !7935)
!7950 = !DILocation(line: 187, column: 2, scope: !7935)
!7951 = !DILocation(line: 188, column: 8, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7935, file: !7769, line: 187, column: 40)
!7953 = distinct !{!7953, !7950, !7954}
!7954 = !DILocation(line: 189, column: 2, scope: !7935)
!7955 = !DILocation(line: 198, column: 9, scope: !7935)
!7956 = !DILocation(line: 198, column: 18, scope: !7935)
!7957 = !DILocation(line: 198, column: 17, scope: !7935)
!7958 = !DILocation(line: 198, column: 2, scope: !7935)
!7959 = !DILocation(line: 199, column: 6, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7935, file: !7769, line: 198, column: 37)
!7961 = !DILocation(line: 198, column: 14, scope: !7935)
!7962 = distinct !{!7962, !7958, !7963}
!7963 = !DILocation(line: 200, column: 2, scope: !7935)
!7964 = !DILocation(line: 203, column: 8, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7966, file: !7769, line: 202, column: 20)
!7966 = distinct !DILexicalBlock(scope: !7935, file: !7769, line: 202, column: 6)
!7967 = !DILocation(line: 204, column: 16, scope: !7965)
!7968 = !DILocation(line: 205, column: 2, scope: !7965)
!7969 = !DILocation(line: 210, column: 1, scope: !7935)
!7970 = distinct !DISubprogram(name: "strcat", scope: !7769, file: !7769, line: 212, type: !7770, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !7971)
!7971 = !{!7972, !7973}
!7972 = !DILocalVariable(name: "dest", arg: 1, scope: !7970, file: !7769, line: 212, type: !7772)
!7973 = !DILocalVariable(name: "src", arg: 2, scope: !7970, file: !7769, line: 212, type: !7773)
!7974 = !DILocation(line: 0, scope: !7970)
!7975 = !DILocation(line: 214, column: 16, scope: !7970)
!7976 = !DILocation(line: 214, column: 14, scope: !7970)
!7977 = !DILocation(line: 214, column: 2, scope: !7970)
!7978 = !DILocation(line: 215, column: 2, scope: !7970)
!7979 = distinct !DISubprogram(name: "strncat", scope: !7769, file: !7769, line: 218, type: !7791, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !7980)
!7980 = !{!7981, !7982, !7983, !7984, !7985}
!7981 = !DILocalVariable(name: "dest", arg: 1, scope: !7979, file: !7769, line: 218, type: !7772)
!7982 = !DILocalVariable(name: "src", arg: 2, scope: !7979, file: !7769, line: 218, type: !7773)
!7983 = !DILocalVariable(name: "n", arg: 3, scope: !7979, file: !7769, line: 219, type: !239)
!7984 = !DILocalVariable(name: "orig_dest", scope: !7979, file: !7769, line: 221, type: !106)
!7985 = !DILocalVariable(name: "len", scope: !7979, file: !7769, line: 222, type: !239)
!7986 = !DILocation(line: 0, scope: !7979)
!7987 = !DILocation(line: 222, column: 15, scope: !7979)
!7988 = !DILocation(line: 224, column: 7, scope: !7979)
!7989 = !DILocation(line: 225, column: 14, scope: !7979)
!7990 = !DILocation(line: 225, column: 19, scope: !7979)
!7991 = !DILocation(line: 225, column: 11, scope: !7979)
!7992 = !DILocation(line: 225, column: 23, scope: !7979)
!7993 = !DILocation(line: 225, column: 28, scope: !7979)
!7994 = !DILocation(line: 225, column: 2, scope: !7979)
!7995 = !DILocation(line: 226, column: 17, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7979, file: !7769, line: 225, column: 38)
!7997 = !DILocation(line: 226, column: 8, scope: !7996)
!7998 = !DILocation(line: 226, column: 11, scope: !7996)
!7999 = distinct !{!7999, !7994, !8000}
!8000 = !DILocation(line: 227, column: 2, scope: !7979)
!8001 = !DILocation(line: 228, column: 8, scope: !7979)
!8002 = !DILocation(line: 230, column: 2, scope: !7979)
!8003 = distinct !DISubprogram(name: "memcmp", scope: !7769, file: !7769, line: 239, type: !8004, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !8006)
!8004 = !DISubroutineType(types: !8005)
!8005 = !{!119, !13, !13, !239}
!8006 = !{!8007, !8008, !8009, !8010, !8011}
!8007 = !DILocalVariable(name: "m1", arg: 1, scope: !8003, file: !7769, line: 239, type: !13)
!8008 = !DILocalVariable(name: "m2", arg: 2, scope: !8003, file: !7769, line: 239, type: !13)
!8009 = !DILocalVariable(name: "n", arg: 3, scope: !8003, file: !7769, line: 239, type: !239)
!8010 = !DILocalVariable(name: "c1", scope: !8003, file: !7769, line: 241, type: !278)
!8011 = !DILocalVariable(name: "c2", scope: !8003, file: !7769, line: 242, type: !278)
!8012 = !DILocation(line: 0, scope: !8003)
!8013 = !DILocation(line: 244, column: 7, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8003, file: !7769, line: 244, column: 6)
!8015 = !DILocation(line: 244, column: 6, scope: !8003)
!8016 = !DILocation(line: 248, column: 10, scope: !8003)
!8017 = !DILocation(line: 248, column: 14, scope: !8003)
!8018 = !DILocation(line: 248, column: 19, scope: !8003)
!8019 = !DILocation(line: 248, column: 2, scope: !8003)
!8020 = !DILocation(line: 248, column: 23, scope: !8003)
!8021 = !DILocation(line: 248, column: 30, scope: !8003)
!8022 = !DILocation(line: 248, column: 27, scope: !8003)
!8023 = !DILocation(line: 249, column: 5, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8003, file: !7769, line: 248, column: 36)
!8025 = !DILocation(line: 250, column: 5, scope: !8024)
!8026 = distinct !{!8026, !8019, !8027}
!8027 = !DILocation(line: 251, column: 2, scope: !8003)
!8028 = !DILocation(line: 253, column: 9, scope: !8003)
!8029 = !DILocation(line: 253, column: 15, scope: !8003)
!8030 = !DILocation(line: 253, column: 13, scope: !8003)
!8031 = !DILocation(line: 253, column: 2, scope: !8003)
!8032 = !DILocation(line: 254, column: 1, scope: !8003)
!8033 = distinct !DISubprogram(name: "memmove", scope: !7769, file: !7769, line: 263, type: !8034, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !8036)
!8034 = !DISubroutineType(types: !8035)
!8035 = !{!113, !113, !13, !239}
!8036 = !{!8037, !8038, !8039, !8040, !8041}
!8037 = !DILocalVariable(name: "d", arg: 1, scope: !8033, file: !7769, line: 263, type: !113)
!8038 = !DILocalVariable(name: "s", arg: 2, scope: !8033, file: !7769, line: 263, type: !13)
!8039 = !DILocalVariable(name: "n", arg: 3, scope: !8033, file: !7769, line: 263, type: !239)
!8040 = !DILocalVariable(name: "dest", scope: !8033, file: !7769, line: 265, type: !106)
!8041 = !DILocalVariable(name: "src", scope: !8033, file: !7769, line: 266, type: !278)
!8042 = !DILocation(line: 0, scope: !8033)
!8043 = !DILocation(line: 268, column: 21, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8033, file: !7769, line: 268, column: 6)
!8045 = !DILocation(line: 268, column: 28, scope: !8044)
!8046 = !DILocation(line: 268, column: 6, scope: !8033)
!8047 = !DILocation(line: 280, column: 12, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8044, file: !7769, line: 278, column: 9)
!8049 = !DILocation(line: 280, column: 3, scope: !8048)
!8050 = !DILocation(line: 275, column: 5, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !7769, line: 274, column: 17)
!8052 = distinct !DILexicalBlock(scope: !8044, file: !7769, line: 268, column: 33)
!8053 = !DILocation(line: 276, column: 14, scope: !8051)
!8054 = !DILocation(line: 276, column: 4, scope: !8051)
!8055 = !DILocation(line: 276, column: 12, scope: !8051)
!8056 = !DILocation(line: 274, column: 12, scope: !8052)
!8057 = !DILocation(line: 274, column: 3, scope: !8052)
!8058 = distinct !{!8058, !8057, !8059}
!8059 = !DILocation(line: 277, column: 3, scope: !8052)
!8060 = !DILocation(line: 281, column: 12, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8048, file: !7769, line: 280, column: 17)
!8062 = !DILocation(line: 281, column: 10, scope: !8061)
!8063 = !DILocation(line: 282, column: 8, scope: !8061)
!8064 = !DILocation(line: 283, column: 7, scope: !8061)
!8065 = !DILocation(line: 284, column: 5, scope: !8061)
!8066 = distinct !{!8066, !8049, !8067}
!8067 = !DILocation(line: 285, column: 3, scope: !8048)
!8068 = !DILocation(line: 288, column: 2, scope: !8033)
!8069 = distinct !DISubprogram(name: "memcpy", scope: !7769, file: !7769, line: 298, type: !8070, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !8074)
!8070 = !DISubroutineType(types: !8071)
!8071 = !{!113, !8072, !8073, !239}
!8072 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !113)
!8073 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8074 = !{!8075, !8076, !8077, !8078, !8079}
!8075 = !DILocalVariable(name: "d", arg: 1, scope: !8069, file: !7769, line: 298, type: !8072)
!8076 = !DILocalVariable(name: "s", arg: 2, scope: !8069, file: !7769, line: 298, type: !8073)
!8077 = !DILocalVariable(name: "n", arg: 3, scope: !8069, file: !7769, line: 298, type: !239)
!8078 = !DILocalVariable(name: "d_byte", scope: !8069, file: !7769, line: 302, type: !1005)
!8079 = !DILocalVariable(name: "s_byte", scope: !8069, file: !7769, line: 303, type: !2801)
!8080 = !DILocation(line: 0, scope: !8069)
!8081 = !DILocation(line: 337, column: 11, scope: !8069)
!8082 = !DILocation(line: 337, column: 2, scope: !8069)
!8083 = !DILocation(line: 338, column: 25, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8069, file: !7769, line: 337, column: 16)
!8085 = !DILocation(line: 338, column: 17, scope: !8084)
!8086 = !DILocation(line: 338, column: 11, scope: !8084)
!8087 = !DILocation(line: 338, column: 15, scope: !8084)
!8088 = !DILocation(line: 339, column: 4, scope: !8084)
!8089 = distinct !{!8089, !8082, !8090}
!8090 = !DILocation(line: 340, column: 2, scope: !8069)
!8091 = !DILocation(line: 342, column: 2, scope: !8069)
!8092 = distinct !DISubprogram(name: "memset", scope: !7769, file: !7769, line: 352, type: !8093, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !8095)
!8093 = !DISubroutineType(types: !8094)
!8094 = !{!113, !113, !119, !239}
!8095 = !{!8096, !8097, !8098, !8099, !8100}
!8096 = !DILocalVariable(name: "buf", arg: 1, scope: !8092, file: !7769, line: 352, type: !113)
!8097 = !DILocalVariable(name: "c", arg: 2, scope: !8092, file: !7769, line: 352, type: !119)
!8098 = !DILocalVariable(name: "n", arg: 3, scope: !8092, file: !7769, line: 352, type: !239)
!8099 = !DILocalVariable(name: "d_byte", scope: !8092, file: !7769, line: 356, type: !1005)
!8100 = !DILocalVariable(name: "c_byte", scope: !8092, file: !7769, line: 357, type: !186)
!8101 = !DILocation(line: 0, scope: !8092)
!8102 = !DILocation(line: 357, column: 25, scope: !8092)
!8103 = !DILocation(line: 389, column: 11, scope: !8092)
!8104 = !DILocation(line: 389, column: 2, scope: !8092)
!8105 = !DILocation(line: 390, column: 11, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8092, file: !7769, line: 389, column: 16)
!8107 = !DILocation(line: 390, column: 15, scope: !8106)
!8108 = !DILocation(line: 391, column: 4, scope: !8106)
!8109 = distinct !{!8109, !8104, !8110}
!8110 = !DILocation(line: 392, column: 2, scope: !8092)
!8111 = !DILocation(line: 394, column: 2, scope: !8092)
!8112 = distinct !DISubprogram(name: "memchr", scope: !7769, file: !7769, line: 404, type: !8113, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2798, retainedNodes: !8115)
!8113 = !DISubroutineType(types: !8114)
!8114 = !{!113, !13, !119, !239}
!8115 = !{!8116, !8117, !8118, !8119}
!8116 = !DILocalVariable(name: "s", arg: 1, scope: !8112, file: !7769, line: 404, type: !13)
!8117 = !DILocalVariable(name: "c", arg: 2, scope: !8112, file: !7769, line: 404, type: !119)
!8118 = !DILocalVariable(name: "n", arg: 3, scope: !8112, file: !7769, line: 404, type: !239)
!8119 = !DILocalVariable(name: "p", scope: !8120, file: !7769, line: 407, type: !2801)
!8120 = distinct !DILexicalBlock(scope: !8121, file: !7769, line: 406, column: 14)
!8121 = distinct !DILexicalBlock(scope: !8112, file: !7769, line: 406, column: 6)
!8122 = !DILocation(line: 0, scope: !8112)
!8123 = !DILocation(line: 406, column: 8, scope: !8121)
!8124 = !DILocation(line: 406, column: 6, scope: !8112)
!8125 = !DILocation(line: 409, column: 3, scope: !8120)
!8126 = !DILocation(line: 0, scope: !8120)
!8127 = !DILocation(line: 410, column: 8, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !7769, line: 410, column: 8)
!8129 = distinct !DILexicalBlock(scope: !8120, file: !7769, line: 409, column: 6)
!8130 = !DILocation(line: 410, column: 13, scope: !8128)
!8131 = !DILocation(line: 410, column: 8, scope: !8129)
!8132 = distinct !{!8132, !8125, !8133}
!8133 = !DILocation(line: 414, column: 20, scope: !8120)
!8134 = !DILocation(line: 417, column: 2, scope: !8112)
!8135 = !DILocation(line: 418, column: 1, scope: !8112)
!8136 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !571, file: !571, line: 23, type: !4268, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8137)
!8137 = !{!8138}
!8138 = !DILocalVariable(name: "hook", arg: 1, scope: !8136, file: !571, line: 23, type: !300)
!8139 = !DILocation(line: 0, scope: !8136)
!8140 = !DILocation(line: 25, column: 15, scope: !8136)
!8141 = !DILocation(line: 26, column: 1, scope: !8136)
!8142 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !571, file: !571, line: 14, type: !301, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8143)
!8143 = !{!8144}
!8144 = !DILocalVariable(name: "c", arg: 1, scope: !8142, file: !571, line: 14, type: !119)
!8145 = !DILocation(line: 0, scope: !8142)
!8146 = !DILocation(line: 18, column: 2, scope: !8142)
!8147 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !571, file: !571, line: 28, type: !8148, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8150)
!8148 = !DISubroutineType(types: !8149)
!8149 = !{!119, !119, !567}
!8150 = !{!8151, !8152}
!8151 = !DILocalVariable(name: "c", arg: 1, scope: !8147, file: !571, line: 28, type: !119)
!8152 = !DILocalVariable(name: "stream", arg: 2, scope: !8147, file: !571, line: 28, type: !567)
!8153 = !DILocation(line: 0, scope: !8147)
!8154 = !DILocation(line: 30, column: 27, scope: !8147)
!8155 = !DILocation(line: 30, column: 50, scope: !8147)
!8156 = !DILocation(line: 30, column: 9, scope: !8147)
!8157 = !DILocation(line: 30, column: 2, scope: !8147)
!8158 = distinct !DISubprogram(name: "fputc", scope: !571, file: !571, line: 41, type: !8148, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8159)
!8159 = !{!8160, !8161}
!8160 = !DILocalVariable(name: "c", arg: 1, scope: !8158, file: !571, line: 41, type: !119)
!8161 = !DILocalVariable(name: "stream", arg: 2, scope: !8158, file: !571, line: 41, type: !567)
!8162 = !DILocation(line: 0, scope: !8158)
!8163 = !DILocation(line: 43, column: 9, scope: !8158)
!8164 = !DILocation(line: 43, column: 2, scope: !8158)
!8165 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8166, file: !8166, line: 72, type: !8148, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8167)
!8166 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!8167 = !{!8168, !8169}
!8168 = !DILocalVariable(name: "c", arg: 1, scope: !8165, file: !8166, line: 72, type: !119)
!8169 = !DILocalVariable(name: "stream", arg: 2, scope: !8165, file: !8166, line: 72, type: !567)
!8170 = !DILocation(line: 0, scope: !8165)
!8171 = !DILocation(line: 81, column: 2, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8165, file: !8166, line: 81, column: 2)
!8173 = !{i64 2155131779}
!8174 = !DILocation(line: 82, column: 9, scope: !8165)
!8175 = !DILocation(line: 82, column: 2, scope: !8165)
!8176 = distinct !DISubprogram(name: "fputs", scope: !571, file: !571, line: 46, type: !8177, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8180)
!8177 = !DISubroutineType(types: !8178)
!8178 = !{!119, !7773, !8179}
!8179 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !567)
!8180 = !{!8181, !8182, !8183, !8184}
!8181 = !DILocalVariable(name: "s", arg: 1, scope: !8176, file: !571, line: 46, type: !7773)
!8182 = !DILocalVariable(name: "stream", arg: 2, scope: !8176, file: !571, line: 46, type: !8179)
!8183 = !DILocalVariable(name: "len", scope: !8176, file: !571, line: 48, type: !119)
!8184 = !DILocalVariable(name: "ret", scope: !8176, file: !571, line: 49, type: !119)
!8185 = !DILocation(line: 0, scope: !8176)
!8186 = !DILocation(line: 48, column: 12, scope: !8176)
!8187 = !DILocation(line: 51, column: 8, scope: !8176)
!8188 = !DILocation(line: 53, column: 13, scope: !8176)
!8189 = !DILocation(line: 53, column: 9, scope: !8176)
!8190 = !DILocation(line: 53, column: 2, scope: !8176)
!8191 = distinct !DISubprogram(name: "fwrite", scope: !571, file: !571, line: 99, type: !8192, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8194)
!8192 = !DISubroutineType(types: !8193)
!8193 = !{!239, !8073, !239, !239, !8179}
!8194 = !{!8195, !8196, !8197, !8198}
!8195 = !DILocalVariable(name: "ptr", arg: 1, scope: !8191, file: !571, line: 99, type: !8073)
!8196 = !DILocalVariable(name: "size", arg: 2, scope: !8191, file: !571, line: 99, type: !239)
!8197 = !DILocalVariable(name: "nitems", arg: 3, scope: !8191, file: !571, line: 99, type: !239)
!8198 = !DILocalVariable(name: "stream", arg: 4, scope: !8191, file: !571, line: 100, type: !8179)
!8199 = !DILocation(line: 0, scope: !8191)
!8200 = !DILocation(line: 102, column: 9, scope: !8191)
!8201 = !DILocation(line: 102, column: 2, scope: !8191)
!8202 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8166, file: !8166, line: 96, type: !8192, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8203)
!8203 = !{!8204, !8205, !8206, !8207}
!8204 = !DILocalVariable(name: "ptr", arg: 1, scope: !8202, file: !8166, line: 96, type: !8073)
!8205 = !DILocalVariable(name: "size", arg: 2, scope: !8202, file: !8166, line: 96, type: !239)
!8206 = !DILocalVariable(name: "nitems", arg: 3, scope: !8202, file: !8166, line: 96, type: !239)
!8207 = !DILocalVariable(name: "stream", arg: 4, scope: !8202, file: !8166, line: 96, type: !8179)
!8208 = !DILocation(line: 0, scope: !8202)
!8209 = !DILocation(line: 107, column: 2, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8202, file: !8166, line: 107, column: 2)
!8211 = !{i64 2155131883}
!8212 = !DILocation(line: 108, column: 9, scope: !8202)
!8213 = !DILocation(line: 108, column: 2, scope: !8202)
!8214 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !571, file: !571, line: 56, type: !8192, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8215)
!8215 = !{!8216, !8217, !8218, !8219, !8220, !8221, !8222, !8223}
!8216 = !DILocalVariable(name: "ptr", arg: 1, scope: !8214, file: !571, line: 56, type: !8073)
!8217 = !DILocalVariable(name: "size", arg: 2, scope: !8214, file: !571, line: 56, type: !239)
!8218 = !DILocalVariable(name: "nitems", arg: 3, scope: !8214, file: !571, line: 57, type: !239)
!8219 = !DILocalVariable(name: "stream", arg: 4, scope: !8214, file: !571, line: 57, type: !8179)
!8220 = !DILocalVariable(name: "i", scope: !8214, file: !571, line: 59, type: !239)
!8221 = !DILocalVariable(name: "j", scope: !8214, file: !571, line: 60, type: !239)
!8222 = !DILocalVariable(name: "p", scope: !8214, file: !571, line: 61, type: !2801)
!8223 = !DILabel(scope: !8214, name: "done", file: !571, line: 82)
!8224 = !DILocation(line: 0, scope: !8214)
!8225 = !DILocation(line: 63, column: 14, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8214, file: !571, line: 63, column: 6)
!8227 = !DILocation(line: 63, column: 24, scope: !8226)
!8228 = !DILocation(line: 72, column: 3, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8214, file: !571, line: 70, column: 5)
!8230 = !DILocation(line: 0, scope: !8229)
!8231 = !DILocation(line: 73, column: 8, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8233, file: !571, line: 73, column: 8)
!8233 = distinct !DILexicalBlock(scope: !8229, file: !571, line: 72, column: 6)
!8234 = !DILocation(line: 73, column: 29, scope: !8232)
!8235 = !DILocation(line: 73, column: 27, scope: !8232)
!8236 = !DILocation(line: 73, column: 21, scope: !8232)
!8237 = !DILocation(line: 73, column: 33, scope: !8232)
!8238 = !DILocation(line: 73, column: 8, scope: !8233)
!8239 = !DILocation(line: 76, column: 5, scope: !8233)
!8240 = !DILocation(line: 77, column: 14, scope: !8229)
!8241 = !DILocation(line: 77, column: 3, scope: !8233)
!8242 = distinct !{!8242, !8228, !8243}
!8243 = !DILocation(line: 77, column: 17, scope: !8229)
!8244 = !DILocation(line: 79, column: 4, scope: !8229)
!8245 = !DILocation(line: 80, column: 13, scope: !8214)
!8246 = !DILocation(line: 80, column: 2, scope: !8229)
!8247 = distinct !{!8247, !8248, !8249}
!8248 = !DILocation(line: 70, column: 2, scope: !8214)
!8249 = !DILocation(line: 80, column: 16, scope: !8214)
!8250 = !DILocation(line: 82, column: 1, scope: !8214)
!8251 = !DILocation(line: 83, column: 17, scope: !8214)
!8252 = !DILocation(line: 83, column: 2, scope: !8214)
!8253 = !DILocation(line: 84, column: 1, scope: !8214)
!8254 = distinct !DISubprogram(name: "puts", scope: !571, file: !571, line: 106, type: !8255, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8257)
!8255 = !DISubroutineType(types: !8256)
!8256 = !{!119, !278}
!8257 = !{!8258}
!8258 = !DILocalVariable(name: "s", arg: 1, scope: !8254, file: !571, line: 106, type: !278)
!8259 = !DILocation(line: 0, scope: !8254)
!8260 = !DILocation(line: 108, column: 6, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8254, file: !571, line: 108, column: 6)
!8262 = !DILocation(line: 108, column: 23, scope: !8261)
!8263 = !DILocation(line: 108, column: 6, scope: !8254)
!8264 = !DILocation(line: 112, column: 9, scope: !8254)
!8265 = !DILocation(line: 112, column: 29, scope: !8254)
!8266 = !DILocation(line: 112, column: 2, scope: !8254)
!8267 = !DILocation(line: 113, column: 1, scope: !8254)
!8268 = distinct !DISubprogram(name: "snprintf", scope: !8269, file: !8269, line: 28, type: !8270, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !8272)
!8269 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/sprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8270 = !DISubroutineType(types: !8271)
!8271 = !{!119, !7772, !239, !7773, null}
!8272 = !{!8273, !8274, !8275, !8276, !8283, !8288, !8289}
!8273 = !DILocalVariable(name: "str", arg: 1, scope: !8268, file: !8269, line: 28, type: !7772)
!8274 = !DILocalVariable(name: "len", arg: 2, scope: !8268, file: !8269, line: 28, type: !239)
!8275 = !DILocalVariable(name: "format", arg: 3, scope: !8268, file: !8269, line: 29, type: !7773)
!8276 = !DILocalVariable(name: "vargs", scope: !8268, file: !8269, line: 31, type: !8277)
!8277 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3352, line: 99, baseType: !8278)
!8278 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3352, line: 40, baseType: !8279)
!8279 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !8269, baseType: !8280)
!8280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !8281)
!8281 = !{!8282}
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !8280, file: !8269, line: 31, baseType: !113, size: 32)
!8283 = !DILocalVariable(name: "p", scope: !8268, file: !8269, line: 33, type: !8284)
!8284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "emitter", file: !8269, line: 13, size: 64, elements: !8285)
!8285 = !{!8286, !8287}
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !8284, file: !8269, line: 14, baseType: !106, size: 32)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8284, file: !8269, line: 15, baseType: !119, size: 32, offset: 32)
!8288 = !DILocalVariable(name: "r", scope: !8268, file: !8269, line: 34, type: !119)
!8289 = !DILocalVariable(name: "dummy", scope: !8268, file: !8269, line: 35, type: !107)
!8290 = !DILocation(line: 0, scope: !8268)
!8291 = !DILocation(line: 31, column: 2, scope: !8268)
!8292 = !DILocation(line: 31, column: 10, scope: !8268)
!8293 = !DILocation(line: 33, column: 2, scope: !8268)
!8294 = !DILocation(line: 33, column: 17, scope: !8268)
!8295 = !DILocation(line: 35, column: 2, scope: !8268)
!8296 = !DILocation(line: 37, column: 10, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8268, file: !8269, line: 37, column: 6)
!8298 = !DILocation(line: 37, column: 6, scope: !8268)
!8299 = !DILocation(line: 41, column: 4, scope: !8268)
!8300 = !DILocation(line: 41, column: 8, scope: !8268)
!8301 = !DILocation(line: 42, column: 4, scope: !8268)
!8302 = !DILocation(line: 42, column: 8, scope: !8268)
!8303 = !DILocation(line: 44, column: 2, scope: !8268)
!8304 = !DILocation(line: 45, column: 6, scope: !8268)
!8305 = !DILocation(line: 46, column: 2, scope: !8268)
!8306 = !DILocation(line: 48, column: 6, scope: !8268)
!8307 = !DILocation(line: 48, column: 11, scope: !8268)
!8308 = !DILocation(line: 50, column: 1, scope: !8268)
!8309 = !DILocation(line: 49, column: 2, scope: !8268)
!8310 = distinct !DISubprogram(name: "cbvprintf", scope: !3384, file: !3384, line: 739, type: !8311, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !8313)
!8311 = !DISubroutineType(types: !8312)
!8312 = !{!119, !3734, !113, !278, !8277}
!8313 = !{!8314, !8315, !8316, !8317}
!8314 = !DILocalVariable(name: "out", arg: 1, scope: !8310, file: !3384, line: 739, type: !3734)
!8315 = !DILocalVariable(name: "ctx", arg: 2, scope: !8310, file: !3384, line: 739, type: !113)
!8316 = !DILocalVariable(name: "format", arg: 3, scope: !8310, file: !3384, line: 739, type: !278)
!8317 = !DILocalVariable(name: "ap", arg: 4, scope: !8310, file: !3384, line: 739, type: !8277)
!8318 = !DILocation(line: 0, scope: !8310)
!8319 = !DILocation(line: 741, column: 9, scope: !8310)
!8320 = !DILocation(line: 741, column: 2, scope: !8310)
!8321 = distinct !DISubprogram(name: "sprintf_out", scope: !8269, file: !8269, line: 18, type: !8322, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !8325)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{!119, !119, !8324}
!8324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8284, size: 32)
!8325 = !{!8326, !8327}
!8326 = !DILocalVariable(name: "c", arg: 1, scope: !8321, file: !8269, line: 18, type: !119)
!8327 = !DILocalVariable(name: "p", arg: 2, scope: !8321, file: !8269, line: 18, type: !8324)
!8328 = !DILocation(line: 0, scope: !8321)
!8329 = !DILocation(line: 20, column: 9, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8321, file: !8269, line: 20, column: 6)
!8331 = !DILocation(line: 20, column: 13, scope: !8330)
!8332 = !DILocation(line: 20, column: 6, scope: !8321)
!8333 = !DILocation(line: 21, column: 15, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8330, file: !8269, line: 20, column: 18)
!8335 = !DILocation(line: 21, column: 8, scope: !8334)
!8336 = !DILocation(line: 21, column: 13, scope: !8334)
!8337 = !DILocation(line: 22, column: 10, scope: !8334)
!8338 = !DILocation(line: 23, column: 10, scope: !8334)
!8339 = !DILocation(line: 24, column: 2, scope: !8334)
!8340 = !DILocation(line: 25, column: 2, scope: !8321)
!8341 = distinct !DISubprogram(name: "sprintf", scope: !8269, file: !8269, line: 52, type: !8342, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !8344)
!8342 = !DISubroutineType(types: !8343)
!8343 = !{!119, !7772, !7773, null}
!8344 = !{!8345, !8346, !8347, !8348, !8349}
!8345 = !DILocalVariable(name: "str", arg: 1, scope: !8341, file: !8269, line: 52, type: !7772)
!8346 = !DILocalVariable(name: "format", arg: 2, scope: !8341, file: !8269, line: 52, type: !7773)
!8347 = !DILocalVariable(name: "vargs", scope: !8341, file: !8269, line: 54, type: !8277)
!8348 = !DILocalVariable(name: "p", scope: !8341, file: !8269, line: 56, type: !8284)
!8349 = !DILocalVariable(name: "r", scope: !8341, file: !8269, line: 57, type: !119)
!8350 = !DILocation(line: 0, scope: !8341)
!8351 = !DILocation(line: 54, column: 2, scope: !8341)
!8352 = !DILocation(line: 54, column: 10, scope: !8341)
!8353 = !DILocation(line: 56, column: 2, scope: !8341)
!8354 = !DILocation(line: 56, column: 17, scope: !8341)
!8355 = !DILocation(line: 59, column: 4, scope: !8341)
!8356 = !DILocation(line: 59, column: 8, scope: !8341)
!8357 = !DILocation(line: 60, column: 4, scope: !8341)
!8358 = !DILocation(line: 60, column: 8, scope: !8341)
!8359 = !DILocation(line: 62, column: 2, scope: !8341)
!8360 = !DILocation(line: 63, column: 6, scope: !8341)
!8361 = !DILocation(line: 64, column: 2, scope: !8341)
!8362 = !DILocation(line: 66, column: 6, scope: !8341)
!8363 = !DILocation(line: 66, column: 11, scope: !8341)
!8364 = !DILocation(line: 68, column: 1, scope: !8341)
!8365 = !DILocation(line: 67, column: 2, scope: !8341)
!8366 = distinct !DISubprogram(name: "vsnprintf", scope: !8269, file: !8269, line: 70, type: !8367, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !8369)
!8367 = !DISubroutineType(types: !8368)
!8368 = !{!119, !7772, !239, !7773, !8277}
!8369 = !{!8370, !8371, !8372, !8373, !8374, !8375, !8376}
!8370 = !DILocalVariable(name: "str", arg: 1, scope: !8366, file: !8269, line: 70, type: !7772)
!8371 = !DILocalVariable(name: "len", arg: 2, scope: !8366, file: !8269, line: 70, type: !239)
!8372 = !DILocalVariable(name: "format", arg: 3, scope: !8366, file: !8269, line: 71, type: !7773)
!8373 = !DILocalVariable(name: "vargs", arg: 4, scope: !8366, file: !8269, line: 71, type: !8277)
!8374 = !DILocalVariable(name: "p", scope: !8366, file: !8269, line: 73, type: !8284)
!8375 = !DILocalVariable(name: "r", scope: !8366, file: !8269, line: 74, type: !119)
!8376 = !DILocalVariable(name: "dummy", scope: !8366, file: !8269, line: 75, type: !107)
!8377 = !DILocation(line: 0, scope: !8366)
!8378 = !DILocation(line: 73, column: 2, scope: !8366)
!8379 = !DILocation(line: 73, column: 17, scope: !8366)
!8380 = !DILocation(line: 75, column: 2, scope: !8366)
!8381 = !DILocation(line: 77, column: 10, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8366, file: !8269, line: 77, column: 6)
!8383 = !DILocation(line: 77, column: 6, scope: !8366)
!8384 = !DILocation(line: 81, column: 4, scope: !8366)
!8385 = !DILocation(line: 81, column: 8, scope: !8366)
!8386 = !DILocation(line: 82, column: 4, scope: !8366)
!8387 = !DILocation(line: 82, column: 8, scope: !8366)
!8388 = !DILocation(line: 84, column: 6, scope: !8366)
!8389 = !DILocation(line: 86, column: 6, scope: !8366)
!8390 = !DILocation(line: 86, column: 11, scope: !8366)
!8391 = !DILocation(line: 88, column: 1, scope: !8366)
!8392 = !DILocation(line: 87, column: 2, scope: !8366)
!8393 = distinct !DISubprogram(name: "vsprintf", scope: !8269, file: !8269, line: 90, type: !8394, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2803, retainedNodes: !8396)
!8394 = !DISubroutineType(types: !8395)
!8395 = !{!119, !7772, !7773, !8277}
!8396 = !{!8397, !8398, !8399, !8400, !8401}
!8397 = !DILocalVariable(name: "str", arg: 1, scope: !8393, file: !8269, line: 90, type: !7772)
!8398 = !DILocalVariable(name: "format", arg: 2, scope: !8393, file: !8269, line: 90, type: !7773)
!8399 = !DILocalVariable(name: "vargs", arg: 3, scope: !8393, file: !8269, line: 91, type: !8277)
!8400 = !DILocalVariable(name: "p", scope: !8393, file: !8269, line: 93, type: !8284)
!8401 = !DILocalVariable(name: "r", scope: !8393, file: !8269, line: 94, type: !119)
!8402 = !DILocation(line: 0, scope: !8393)
!8403 = !DILocation(line: 93, column: 2, scope: !8393)
!8404 = !DILocation(line: 93, column: 17, scope: !8393)
!8405 = !DILocation(line: 96, column: 4, scope: !8393)
!8406 = !DILocation(line: 96, column: 8, scope: !8393)
!8407 = !DILocation(line: 97, column: 4, scope: !8393)
!8408 = !DILocation(line: 97, column: 8, scope: !8393)
!8409 = !DILocation(line: 99, column: 6, scope: !8393)
!8410 = !DILocation(line: 101, column: 6, scope: !8393)
!8411 = !DILocation(line: 101, column: 11, scope: !8393)
!8412 = !DILocation(line: 103, column: 1, scope: !8393)
!8413 = !DILocation(line: 102, column: 2, scope: !8393)
!8414 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !712, file: !712, line: 368, type: !765, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8415)
!8415 = !{!8416}
!8416 = !DILocalVariable(name: "dev", arg: 1, scope: !8414, file: !712, line: 368, type: !741)
!8417 = !DILocation(line: 0, scope: !8414)
!8418 = !DILocation(line: 370, column: 2, scope: !8414)
!8419 = !DILocation(line: 371, column: 1, scope: !8414)
!8420 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !712, file: !712, line: 243, type: !8421, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8423)
!8421 = !DISubroutineType(types: !8422)
!8422 = !{null, !119, !119, !741}
!8423 = !{!8424, !8425, !8426, !8427, !8429}
!8424 = !DILocalVariable(name: "min", arg: 1, scope: !8420, file: !712, line: 243, type: !119)
!8425 = !DILocalVariable(name: "max", arg: 2, scope: !8420, file: !712, line: 243, type: !119)
!8426 = !DILocalVariable(name: "dev", arg: 3, scope: !8420, file: !712, line: 243, type: !741)
!8427 = !DILocalVariable(name: "data", scope: !8420, file: !712, line: 245, type: !8428)
!8428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 32)
!8429 = !DILocalVariable(name: "line", scope: !8420, file: !712, line: 246, type: !119)
!8430 = !DILocation(line: 0, scope: !8420)
!8431 = !DILocation(line: 245, column: 38, scope: !8420)
!8432 = !DILocation(line: 249, column: 24, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !712, line: 249, column: 2)
!8434 = distinct !DILexicalBlock(scope: !8420, file: !712, line: 249, column: 2)
!8435 = !DILocation(line: 249, column: 2, scope: !8434)
!8436 = !DILocation(line: 251, column: 7, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8438, file: !712, line: 251, column: 7)
!8438 = distinct !DILexicalBlock(scope: !8433, file: !712, line: 249, column: 39)
!8439 = !DILocation(line: 251, column: 7, scope: !8438)
!8440 = !DILocation(line: 253, column: 4, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8437, file: !712, line: 251, column: 36)
!8442 = !DILocation(line: 256, column: 24, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8441, file: !712, line: 256, column: 8)
!8444 = !DILocation(line: 256, column: 9, scope: !8443)
!8445 = !DILocation(line: 256, column: 8, scope: !8441)
!8446 = !DILocation(line: 260, column: 43, scope: !8441)
!8447 = !DILocation(line: 260, column: 4, scope: !8441)
!8448 = !DILocation(line: 261, column: 3, scope: !8441)
!8449 = !DILocation(line: 249, column: 35, scope: !8433)
!8450 = distinct !{!8450, !8435, !8451}
!8451 = !DILocation(line: 262, column: 2, scope: !8434)
!8452 = !DILocation(line: 263, column: 1, scope: !8420)
!8453 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !712, file: !712, line: 158, type: !301, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8454)
!8454 = !{!8455}
!8455 = !DILocalVariable(name: "line", arg: 1, scope: !8453, file: !712, line: 158, type: !119)
!8456 = !DILocation(line: 0, scope: !8453)
!8457 = !DILocation(line: 170, column: 38, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8459, file: !712, line: 160, column: 17)
!8459 = distinct !DILexicalBlock(scope: !8453, file: !712, line: 160, column: 6)
!8460 = !DILocation(line: 170, column: 10, scope: !8458)
!8461 = !DILocation(line: 176, column: 1, scope: !8453)
!8462 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !712, file: !712, line: 183, type: !8463, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8465)
!8463 = !DISubroutineType(types: !8464)
!8464 = !{null, !119}
!8465 = !{!8466}
!8466 = !DILocalVariable(name: "line", arg: 1, scope: !8462, file: !712, line: 183, type: !119)
!8467 = !DILocation(line: 0, scope: !8462)
!8468 = !DILocation(line: 195, column: 28, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8470, file: !712, line: 185, column: 17)
!8470 = distinct !DILexicalBlock(scope: !8462, file: !712, line: 185, column: 6)
!8471 = !DILocation(line: 195, column: 3, scope: !8469)
!8472 = !DILocation(line: 200, column: 1, scope: !8462)
!8473 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8474, file: !8474, line: 910, type: !6474, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8475)
!8474 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8475 = !{!8476}
!8476 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8473, file: !8474, line: 910, type: !118)
!8477 = !DILocation(line: 0, scope: !8473)
!8478 = !DILocation(line: 912, column: 3, scope: !8473)
!8479 = !DILocation(line: 913, column: 1, scope: !8473)
!8480 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8474, file: !8474, line: 834, type: !7664, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8481)
!8481 = !{!8482}
!8482 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8480, file: !8474, line: 834, type: !118)
!8483 = !DILocation(line: 0, scope: !8480)
!8484 = !DILocation(line: 836, column: 11, scope: !8480)
!8485 = !DILocation(line: 836, column: 40, scope: !8480)
!8486 = !DILocation(line: 836, column: 3, scope: !8480)
!8487 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !712, file: !712, line: 304, type: !765, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8488)
!8488 = !{!8489}
!8489 = !DILocalVariable(name: "dev", arg: 1, scope: !8487, file: !712, line: 304, type: !741)
!8490 = !DILocation(line: 0, scope: !8487)
!8491 = !DILocation(line: 306, column: 2, scope: !8487)
!8492 = !DILocation(line: 307, column: 1, scope: !8487)
!8493 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !712, file: !712, line: 299, type: !765, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8494)
!8494 = !{!8495}
!8495 = !DILocalVariable(name: "dev", arg: 1, scope: !8493, file: !712, line: 299, type: !741)
!8496 = !DILocation(line: 0, scope: !8493)
!8497 = !DILocation(line: 301, column: 2, scope: !8493)
!8498 = !DILocation(line: 302, column: 1, scope: !8493)
!8499 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !712, file: !712, line: 294, type: !765, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8500)
!8500 = !{!8501}
!8501 = !DILocalVariable(name: "dev", arg: 1, scope: !8499, file: !712, line: 294, type: !741)
!8502 = !DILocation(line: 0, scope: !8499)
!8503 = !DILocation(line: 296, column: 2, scope: !8499)
!8504 = !DILocation(line: 297, column: 1, scope: !8499)
!8505 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !712, file: !712, line: 397, type: !765, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8506)
!8506 = !{!8507}
!8507 = !DILocalVariable(name: "dev", arg: 1, scope: !8505, file: !712, line: 397, type: !741)
!8508 = !DILocation(line: 0, scope: !8505)
!8509 = !DILocation(line: 399, column: 2, scope: !8505)
!8510 = !DILocation(line: 400, column: 1, scope: !8505)
!8511 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !712, file: !712, line: 392, type: !765, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8512)
!8512 = !{!8513}
!8513 = !DILocalVariable(name: "dev", arg: 1, scope: !8511, file: !712, line: 392, type: !741)
!8514 = !DILocation(line: 0, scope: !8511)
!8515 = !DILocation(line: 394, column: 2, scope: !8511)
!8516 = !DILocation(line: 395, column: 1, scope: !8511)
!8517 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !712, file: !712, line: 289, type: !765, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8518)
!8518 = !{!8519}
!8519 = !DILocalVariable(name: "dev", arg: 1, scope: !8517, file: !712, line: 289, type: !741)
!8520 = !DILocation(line: 0, scope: !8517)
!8521 = !DILocation(line: 291, column: 2, scope: !8517)
!8522 = !DILocation(line: 292, column: 1, scope: !8517)
!8523 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !712, file: !712, line: 387, type: !765, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8524)
!8524 = !{!8525}
!8525 = !DILocalVariable(name: "dev", arg: 1, scope: !8523, file: !712, line: 387, type: !741)
!8526 = !DILocation(line: 0, scope: !8523)
!8527 = !DILocation(line: 389, column: 2, scope: !8523)
!8528 = !DILocation(line: 390, column: 1, scope: !8523)
!8529 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !712, file: !712, line: 382, type: !765, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8530)
!8530 = !{!8531}
!8531 = !DILocalVariable(name: "dev", arg: 1, scope: !8529, file: !712, line: 382, type: !741)
!8532 = !DILocation(line: 0, scope: !8529)
!8533 = !DILocation(line: 384, column: 2, scope: !8529)
!8534 = !DILocation(line: 385, column: 1, scope: !8529)
!8535 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !712, file: !712, line: 373, type: !765, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8536)
!8536 = !{!8537}
!8537 = !DILocalVariable(name: "dev", arg: 1, scope: !8535, file: !712, line: 373, type: !741)
!8538 = !DILocation(line: 0, scope: !8535)
!8539 = !DILocation(line: 375, column: 2, scope: !8535)
!8540 = !DILocation(line: 376, column: 1, scope: !8535)
!8541 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !712, file: !712, line: 284, type: !765, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8542)
!8542 = !{!8543}
!8543 = !DILocalVariable(name: "dev", arg: 1, scope: !8541, file: !712, line: 284, type: !741)
!8544 = !DILocation(line: 0, scope: !8541)
!8545 = !DILocation(line: 286, column: 2, scope: !8541)
!8546 = !DILocation(line: 287, column: 1, scope: !8541)
!8547 = distinct !DISubprogram(name: "stm32_exti_init", scope: !712, file: !712, line: 416, type: !739, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8548)
!8548 = !{!8549}
!8549 = !DILocalVariable(name: "dev", arg: 1, scope: !8547, file: !712, line: 416, type: !741)
!8550 = !DILocation(line: 0, scope: !8547)
!8551 = !DILocation(line: 418, column: 2, scope: !8547)
!8552 = !DILocation(line: 420, column: 2, scope: !8547)
!8553 = !DILocation(line: 0, scope: !764)
!8554 = !DILocation(line: 493, column: 2, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !764, file: !712, line: 493, column: 2)
!8556 = !DILocation(line: 497, column: 2, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !764, file: !712, line: 497, column: 2)
!8558 = !DILocation(line: 507, column: 2, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !764, file: !712, line: 507, column: 2)
!8560 = !DILocation(line: 512, column: 2, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !764, file: !712, line: 512, column: 2)
!8562 = !DILocation(line: 516, column: 2, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !764, file: !712, line: 516, column: 2)
!8564 = !DILocation(line: 523, column: 2, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !764, file: !712, line: 523, column: 2)
!8566 = !DILocation(line: 527, column: 2, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !764, file: !712, line: 527, column: 2)
!8568 = !DILocation(line: 581, column: 2, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !764, file: !712, line: 581, column: 2)
!8570 = !DILocation(line: 586, column: 2, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !764, file: !712, line: 586, column: 2)
!8572 = !DILocation(line: 591, column: 2, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !764, file: !712, line: 591, column: 2)
!8574 = !DILocation(line: 595, column: 2, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !764, file: !712, line: 595, column: 2)
!8576 = !DILocation(line: 607, column: 1, scope: !764)
!8577 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !712, file: !712, line: 112, type: !8463, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8578)
!8578 = !{!8579, !8580}
!8579 = !DILocalVariable(name: "line", arg: 1, scope: !8577, file: !712, line: 112, type: !119)
!8580 = !DILocalVariable(name: "irqnum", scope: !8577, file: !712, line: 114, type: !119)
!8581 = !DILocation(line: 0, scope: !8577)
!8582 = !DILocation(line: 122, column: 13, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8577, file: !712, line: 122, column: 6)
!8584 = !DILocation(line: 122, column: 6, scope: !8577)
!8585 = !DILocation(line: 123, column: 3, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8587, file: !712, line: 123, column: 3)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !712, line: 123, column: 3)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !712, line: 123, column: 3)
!8589 = distinct !DILexicalBlock(scope: !8583, file: !712, line: 122, column: 22)
!8590 = !DILocation(line: 121, column: 11, scope: !8577)
!8591 = !DILocation(line: 130, column: 26, scope: !8577)
!8592 = !DILocation(line: 130, column: 2, scope: !8577)
!8593 = !DILocation(line: 134, column: 2, scope: !8577)
!8594 = !DILocation(line: 135, column: 1, scope: !8577)
!8595 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8474, file: !8474, line: 268, type: !6474, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8596)
!8596 = !{!8597}
!8597 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8595, file: !8474, line: 268, type: !118)
!8598 = !DILocation(line: 0, scope: !8595)
!8599 = !DILocation(line: 270, column: 3, scope: !8595)
!8600 = !DILocation(line: 271, column: 1, scope: !8595)
!8601 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !712, file: !712, line: 137, type: !8463, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8602)
!8602 = !{!8603}
!8603 = !DILocalVariable(name: "line", arg: 1, scope: !8601, file: !712, line: 137, type: !119)
!8604 = !DILocation(line: 0, scope: !8601)
!8605 = !DILocation(line: 141, column: 11, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8601, file: !712, line: 141, column: 6)
!8607 = !DILocation(line: 141, column: 6, scope: !8601)
!8608 = !DILocation(line: 145, column: 28, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8606, file: !712, line: 141, column: 17)
!8610 = !DILocation(line: 145, column: 3, scope: !8609)
!8611 = !DILocation(line: 147, column: 2, scope: !8609)
!8612 = !DILocation(line: 151, column: 1, scope: !8601)
!8613 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8474, file: !8474, line: 309, type: !6474, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8614)
!8614 = !{!8615}
!8615 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8613, file: !8474, line: 309, type: !118)
!8616 = !DILocation(line: 0, scope: !8613)
!8617 = !DILocation(line: 311, column: 3, scope: !8613)
!8618 = !DILocation(line: 312, column: 1, scope: !8613)
!8619 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !712, file: !712, line: 202, type: !8620, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8622)
!8620 = !DISubroutineType(types: !8621)
!8621 = !{null, !119, !119}
!8622 = !{!8623, !8624}
!8623 = !DILocalVariable(name: "line", arg: 1, scope: !8619, file: !712, line: 202, type: !119)
!8624 = !DILocalVariable(name: "trigger", arg: 2, scope: !8619, file: !712, line: 202, type: !119)
!8625 = !DILocation(line: 0, scope: !8619)
!8626 = !DILocation(line: 211, column: 2, scope: !8619)
!8627 = !DILocation(line: 213, column: 36, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8619, file: !712, line: 211, column: 19)
!8629 = !DILocation(line: 213, column: 3, scope: !8628)
!8630 = !DILocation(line: 214, column: 3, scope: !8628)
!8631 = !DILocation(line: 215, column: 3, scope: !8628)
!8632 = !DILocation(line: 217, column: 35, scope: !8628)
!8633 = !DILocation(line: 217, column: 3, scope: !8628)
!8634 = !DILocation(line: 218, column: 3, scope: !8628)
!8635 = !DILocation(line: 219, column: 3, scope: !8628)
!8636 = !DILocation(line: 221, column: 36, scope: !8628)
!8637 = !DILocation(line: 221, column: 3, scope: !8628)
!8638 = !DILocation(line: 222, column: 3, scope: !8628)
!8639 = !DILocation(line: 223, column: 3, scope: !8628)
!8640 = !DILocation(line: 225, column: 35, scope: !8628)
!8641 = !DILocation(line: 225, column: 3, scope: !8628)
!8642 = !DILocation(line: 226, column: 3, scope: !8628)
!8643 = !DILocation(line: 227, column: 3, scope: !8628)
!8644 = !DILocation(line: 232, column: 1, scope: !8619)
!8645 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8474, file: !8474, line: 573, type: !6474, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8646)
!8646 = !{!8647}
!8647 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8645, file: !8474, line: 573, type: !118)
!8648 = !DILocation(line: 0, scope: !8645)
!8649 = !DILocation(line: 575, column: 3, scope: !8645)
!8650 = !DILocation(line: 577, column: 1, scope: !8645)
!8651 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8474, file: !8474, line: 703, type: !6474, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8652)
!8652 = !{!8653}
!8653 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8651, file: !8474, line: 703, type: !118)
!8654 = !DILocation(line: 0, scope: !8651)
!8655 = !DILocation(line: 705, column: 3, scope: !8651)
!8656 = !DILocation(line: 706, column: 1, scope: !8651)
!8657 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8474, file: !8474, line: 529, type: !6474, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8658)
!8658 = !{!8659}
!8659 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8657, file: !8474, line: 529, type: !118)
!8660 = !DILocation(line: 0, scope: !8657)
!8661 = !DILocation(line: 531, column: 3, scope: !8657)
!8662 = !DILocation(line: 533, column: 1, scope: !8657)
!8663 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8474, file: !8474, line: 661, type: !6474, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8664)
!8664 = !{!8665}
!8665 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8663, file: !8474, line: 661, type: !118)
!8666 = !DILocation(line: 0, scope: !8663)
!8667 = !DILocation(line: 663, column: 3, scope: !8663)
!8668 = !DILocation(line: 664, column: 1, scope: !8663)
!8669 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !712, file: !712, line: 433, type: !8670, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8672)
!8670 = !DISubroutineType(types: !8671)
!8671 = !{!119, !119, !752, !113}
!8672 = !{!8673, !8674, !8675, !8676, !8678}
!8673 = !DILocalVariable(name: "line", arg: 1, scope: !8669, file: !712, line: 433, type: !119)
!8674 = !DILocalVariable(name: "cb", arg: 2, scope: !8669, file: !712, line: 433, type: !752)
!8675 = !DILocalVariable(name: "arg", arg: 3, scope: !8669, file: !712, line: 433, type: !113)
!8676 = !DILocalVariable(name: "dev", scope: !8669, file: !712, line: 435, type: !8677)
!8677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !741)
!8678 = !DILocalVariable(name: "data", scope: !8669, file: !712, line: 436, type: !8428)
!8679 = !DILocation(line: 0, scope: !8669)
!8680 = !DILocation(line: 438, column: 21, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8669, file: !712, line: 438, column: 6)
!8682 = !DILocation(line: 438, column: 6, scope: !8681)
!8683 = !DILocation(line: 438, column: 6, scope: !8669)
!8684 = !DILocation(line: 442, column: 20, scope: !8669)
!8685 = !DILocation(line: 443, column: 17, scope: !8669)
!8686 = !DILocation(line: 443, column: 22, scope: !8669)
!8687 = !DILocation(line: 445, column: 2, scope: !8669)
!8688 = !DILocation(line: 446, column: 1, scope: !8669)
!8689 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !712, file: !712, line: 448, type: !8463, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8690)
!8690 = !{!8691, !8692, !8693}
!8691 = !DILocalVariable(name: "line", arg: 1, scope: !8689, file: !712, line: 448, type: !119)
!8692 = !DILocalVariable(name: "dev", scope: !8689, file: !712, line: 450, type: !8677)
!8693 = !DILocalVariable(name: "data", scope: !8689, file: !712, line: 451, type: !8428)
!8694 = !DILocation(line: 0, scope: !8689)
!8695 = !DILocation(line: 453, column: 17, scope: !8689)
!8696 = !DILocation(line: 453, column: 20, scope: !8689)
!8697 = !DILocation(line: 454, column: 17, scope: !8689)
!8698 = !DILocation(line: 454, column: 22, scope: !8689)
!8699 = !DILocation(line: 455, column: 1, scope: !8689)
!8700 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !904, file: !904, line: 183, type: !942, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8701)
!8701 = !{!8702, !8703, !8704, !8705, !8706}
!8702 = !DILocalVariable(name: "dev", arg: 1, scope: !8700, file: !904, line: 183, type: !933)
!8703 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8700, file: !904, line: 184, type: !944)
!8704 = !DILocalVariable(name: "pclken", scope: !8700, file: !904, line: 186, type: !894)
!8705 = !DILocalVariable(name: "reg", scope: !8700, file: !904, line: 187, type: !1484)
!8706 = !DILocalVariable(name: "reg_val", scope: !8700, file: !904, line: 188, type: !118)
!8707 = !DILocation(line: 0, scope: !8700)
!8708 = !DILocation(line: 192, column: 6, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8700, file: !904, line: 192, column: 6)
!8710 = !DILocation(line: 192, column: 6, scope: !8700)
!8711 = !DILocation(line: 197, column: 52, scope: !8700)
!8712 = !DILocation(line: 197, column: 8, scope: !8700)
!8713 = !DILocation(line: 198, column: 12, scope: !8700)
!8714 = !DILocation(line: 199, column: 21, scope: !8700)
!8715 = !DILocation(line: 199, column: 10, scope: !8700)
!8716 = !DILocation(line: 200, column: 7, scope: !8700)
!8717 = !DILocation(line: 202, column: 2, scope: !8700)
!8718 = !DILocation(line: 203, column: 1, scope: !8700)
!8719 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !904, file: !904, line: 205, type: !942, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8720)
!8720 = !{!8721, !8722, !8723, !8724, !8725}
!8721 = !DILocalVariable(name: "dev", arg: 1, scope: !8719, file: !904, line: 205, type: !933)
!8722 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8719, file: !904, line: 206, type: !944)
!8723 = !DILocalVariable(name: "pclken", scope: !8719, file: !904, line: 208, type: !894)
!8724 = !DILocalVariable(name: "reg", scope: !8719, file: !904, line: 209, type: !1484)
!8725 = !DILocalVariable(name: "reg_val", scope: !8719, file: !904, line: 210, type: !118)
!8726 = !DILocation(line: 0, scope: !8719)
!8727 = !DILocation(line: 214, column: 6, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8719, file: !904, line: 214, column: 6)
!8729 = !DILocation(line: 214, column: 6, scope: !8719)
!8730 = !DILocation(line: 219, column: 52, scope: !8719)
!8731 = !DILocation(line: 219, column: 8, scope: !8719)
!8732 = !DILocation(line: 220, column: 12, scope: !8719)
!8733 = !DILocation(line: 221, column: 22, scope: !8719)
!8734 = !DILocation(line: 221, column: 13, scope: !8719)
!8735 = !DILocation(line: 221, column: 10, scope: !8719)
!8736 = !DILocation(line: 222, column: 7, scope: !8719)
!8737 = !DILocation(line: 224, column: 2, scope: !8719)
!8738 = !DILocation(line: 225, column: 1, scope: !8719)
!8739 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !904, file: !904, line: 262, type: !958, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8740)
!8740 = !{!8741, !8742, !8743, !8744, !8745, !8746, !8747, !8748}
!8741 = !DILocalVariable(name: "clock", arg: 1, scope: !8739, file: !904, line: 262, type: !933)
!8742 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8739, file: !904, line: 263, type: !944)
!8743 = !DILocalVariable(name: "rate", arg: 3, scope: !8739, file: !904, line: 264, type: !900)
!8744 = !DILocalVariable(name: "pclken", scope: !8739, file: !904, line: 266, type: !894)
!8745 = !DILocalVariable(name: "ahb_clock", scope: !8739, file: !904, line: 273, type: !118)
!8746 = !DILocalVariable(name: "apb1_clock", scope: !8739, file: !904, line: 274, type: !118)
!8747 = !DILocalVariable(name: "apb2_clock", scope: !8739, file: !904, line: 276, type: !118)
!8748 = !DILocalVariable(name: "ahb3_clock", scope: !8739, file: !904, line: 286, type: !118)
!8749 = !DILocation(line: 0, scope: !8739)
!8750 = !DILocation(line: 273, column: 23, scope: !8739)
!8751 = !DILocation(line: 299, column: 18, scope: !8739)
!8752 = !DILocation(line: 299, column: 2, scope: !8739)
!8753 = !DILocation(line: 274, column: 24, scope: !8739)
!8754 = !DILocation(line: 319, column: 3, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8739, file: !904, line: 299, column: 23)
!8756 = !DILocation(line: 276, column: 24, scope: !8739)
!8757 = !DILocation(line: 323, column: 3, scope: !8755)
!8758 = !DILocation(line: 346, column: 33, scope: !8755)
!8759 = !DILocation(line: 346, column: 11, scope: !8755)
!8760 = !DILocation(line: 350, column: 3, scope: !8755)
!8761 = !DILocation(line: 354, column: 33, scope: !8755)
!8762 = !DILocation(line: 354, column: 11, scope: !8755)
!8763 = !DILocation(line: 358, column: 3, scope: !8755)
!8764 = !DILocation(line: 374, column: 3, scope: !8755)
!8765 = !DILocation(line: 379, column: 3, scope: !8755)
!8766 = !DILocation(line: 0, scope: !8755)
!8767 = !DILocation(line: 396, column: 1, scope: !8739)
!8768 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !904, file: !904, line: 227, type: !974, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8769)
!8769 = !{!8770, !8771, !8772, !8773, !8774, !8775, !8776, !8777}
!8770 = !DILocalVariable(name: "dev", arg: 1, scope: !8768, file: !904, line: 227, type: !933)
!8771 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8768, file: !904, line: 228, type: !944)
!8772 = !DILocalVariable(name: "data", arg: 3, scope: !8768, file: !904, line: 229, type: !113)
!8773 = !DILocalVariable(name: "pclken", scope: !8768, file: !904, line: 233, type: !894)
!8774 = !DILocalVariable(name: "reg", scope: !8768, file: !904, line: 234, type: !1484)
!8775 = !DILocalVariable(name: "reg_val", scope: !8768, file: !904, line: 235, type: !118)
!8776 = !DILocalVariable(name: "dt_val", scope: !8768, file: !904, line: 235, type: !118)
!8777 = !DILocalVariable(name: "err", scope: !8768, file: !904, line: 236, type: !119)
!8778 = !DILocation(line: 0, scope: !8768)
!8779 = !DILocation(line: 241, column: 30, scope: !8768)
!8780 = !DILocation(line: 241, column: 8, scope: !8768)
!8781 = !DILocation(line: 242, column: 10, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8768, file: !904, line: 242, column: 6)
!8783 = !DILocation(line: 242, column: 6, scope: !8768)
!8784 = !DILocation(line: 247, column: 11, scope: !8768)
!8785 = !DILocation(line: 248, column: 6, scope: !8768)
!8786 = !DILocation(line: 247, column: 44, scope: !8768)
!8787 = !DILocation(line: 250, column: 6, scope: !8768)
!8788 = !DILocation(line: 249, column: 52, scope: !8768)
!8789 = !DILocation(line: 249, column: 8, scope: !8768)
!8790 = !DILocation(line: 251, column: 12, scope: !8768)
!8791 = !DILocation(line: 252, column: 10, scope: !8768)
!8792 = !DILocation(line: 253, column: 7, scope: !8768)
!8793 = !DILocation(line: 255, column: 2, scope: !8768)
!8794 = !DILocation(line: 260, column: 1, scope: !8768)
!8795 = distinct !DISubprogram(name: "enabled_clock", scope: !904, file: !904, line: 100, type: !8796, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8798)
!8796 = !DISubroutineType(types: !8797)
!8797 = !{!119, !118}
!8798 = !{!8799, !8800}
!8799 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8795, file: !904, line: 100, type: !118)
!8800 = !DILocalVariable(name: "r", scope: !8795, file: !904, line: 102, type: !119)
!8801 = !DILocation(line: 0, scope: !8795)
!8802 = !DILocation(line: 104, column: 2, scope: !8795)
!8803 = !DILocation(line: 180, column: 2, scope: !8795)
!8804 = !DILocation(line: 181, column: 1, scope: !8795)
!8805 = distinct !DISubprogram(name: "get_bus_clock", scope: !904, file: !904, line: 79, type: !8806, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8808)
!8806 = !DISubroutineType(types: !8807)
!8807 = !{!118, !118, !118}
!8808 = !{!8809, !8810}
!8809 = !DILocalVariable(name: "clock", arg: 1, scope: !8805, file: !904, line: 79, type: !118)
!8810 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8805, file: !904, line: 79, type: !118)
!8811 = !DILocation(line: 0, scope: !8805)
!8812 = !DILocation(line: 81, column: 15, scope: !8805)
!8813 = !DILocation(line: 81, column: 2, scope: !8805)
!8814 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !904, file: !904, line: 68, type: !8815, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8817)
!8815 = !DISubroutineType(types: !8816)
!8816 = !{!118, !118, !119, !119, !119}
!8817 = !{!8818, !8819, !8820, !8821}
!8818 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8814, file: !904, line: 68, type: !118)
!8819 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8814, file: !904, line: 69, type: !119)
!8820 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8814, file: !904, line: 70, type: !119)
!8821 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8814, file: !904, line: 71, type: !119)
!8822 = !DILocation(line: 0, scope: !8814)
!8823 = !DILocation(line: 75, column: 22, scope: !8814)
!8824 = !DILocation(line: 76, column: 13, scope: !8814)
!8825 = !DILocation(line: 75, column: 34, scope: !8814)
!8826 = !DILocation(line: 75, column: 2, scope: !8814)
!8827 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !904, file: !904, line: 641, type: !931, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8828)
!8828 = !{!8829, !8830, !8831}
!8829 = !DILocalVariable(name: "dev", arg: 1, scope: !8827, file: !904, line: 641, type: !933)
!8830 = !DILocalVariable(name: "old_flash_freq", scope: !8827, file: !904, line: 664, type: !118)
!8831 = !DILocalVariable(name: "new_flash_freq", scope: !8827, file: !904, line: 665, type: !118)
!8832 = !DILocation(line: 0, scope: !8827)
!8833 = !DILocation(line: 646, column: 2, scope: !8827)
!8834 = !DILocation(line: 667, column: 19, scope: !8827)
!8835 = !DILocation(line: 674, column: 21, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8827, file: !904, line: 674, column: 6)
!8837 = !DILocation(line: 674, column: 6, scope: !8827)
!8838 = !DILocation(line: 675, column: 3, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8836, file: !904, line: 674, column: 59)
!8840 = !DILocation(line: 676, column: 2, scope: !8839)
!8841 = !DILocation(line: 680, column: 2, scope: !8827)
!8842 = !DILocation(line: 683, column: 2, scope: !8827)
!8843 = !DILocation(line: 690, column: 3, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !904, line: 689, column: 9)
!8845 = distinct !DILexicalBlock(scope: !8827, file: !904, line: 685, column: 6)
!8846 = !DILocation(line: 695, column: 2, scope: !8827)
!8847 = !DILocation(line: 696, column: 2, scope: !8827)
!8848 = !DILocation(line: 696, column: 9, scope: !8827)
!8849 = !DILocation(line: 696, column: 34, scope: !8827)
!8850 = distinct !{!8850, !8847, !8851}
!8851 = !DILocation(line: 697, column: 2, scope: !8827)
!8852 = !DILocation(line: 720, column: 21, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8827, file: !904, line: 720, column: 6)
!8854 = !DILocation(line: 720, column: 6, scope: !8827)
!8855 = !DILocation(line: 721, column: 3, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8853, file: !904, line: 720, column: 60)
!8857 = !DILocation(line: 722, column: 2, scope: !8856)
!8858 = !DILocation(line: 725, column: 18, scope: !8827)
!8859 = !DILocation(line: 728, column: 2, scope: !8827)
!8860 = !DILocation(line: 730, column: 2, scope: !8827)
!8861 = !DILocation(line: 745, column: 2, scope: !8827)
!8862 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8863, file: !8863, line: 3275, type: !3257, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8863 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8864 = !DILocation(line: 3277, column: 21, scope: !8862)
!8865 = !DILocation(line: 3277, column: 3, scope: !8862)
!8866 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !904, file: !904, line: 507, type: !3019, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8867 = !DILocation(line: 516, column: 4, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8869, file: !904, line: 515, column: 10)
!8869 = distinct !DILexicalBlock(scope: !8870, file: !904, line: 513, column: 7)
!8870 = distinct !DILexicalBlock(scope: !8871, file: !904, line: 510, column: 37)
!8871 = distinct !DILexicalBlock(scope: !8866, file: !904, line: 510, column: 6)
!8872 = !DILocation(line: 526, column: 3, scope: !8870)
!8873 = !DILocation(line: 527, column: 3, scope: !8870)
!8874 = !DILocation(line: 527, column: 10, scope: !8870)
!8875 = !DILocation(line: 527, column: 31, scope: !8870)
!8876 = distinct !{!8876, !8873, !8877}
!8877 = !DILocation(line: 529, column: 3, scope: !8870)
!8878 = !DILocation(line: 583, column: 3, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8880, file: !904, line: 577, column: 37)
!8880 = distinct !DILexicalBlock(scope: !8866, file: !904, line: 577, column: 6)
!8881 = !DILocation(line: 584, column: 3, scope: !8879)
!8882 = !DILocation(line: 584, column: 10, scope: !8879)
!8883 = !DILocation(line: 584, column: 31, scope: !8879)
!8884 = distinct !{!8884, !8881, !8885}
!8885 = !DILocation(line: 585, column: 3, scope: !8879)
!8886 = !DILocation(line: 627, column: 1, scope: !8866)
!8887 = distinct !DISubprogram(name: "set_up_plls", scope: !904, file: !904, line: 448, type: !3019, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8888 = !DILocation(line: 460, column: 6, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8887, file: !904, line: 460, column: 6)
!8890 = !DILocation(line: 460, column: 31, scope: !8889)
!8891 = !DILocation(line: 460, column: 6, scope: !8887)
!8892 = !DILocation(line: 461, column: 3, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8889, file: !904, line: 460, column: 67)
!8894 = !DILocation(line: 462, column: 3, scope: !8893)
!8895 = !DILocation(line: 463, column: 2, scope: !8893)
!8896 = !DILocation(line: 464, column: 2, scope: !8887)
!8897 = !DILocation(line: 488, column: 2, scope: !8887)
!8898 = !DILocation(line: 492, column: 2, scope: !8887)
!8899 = !DILocation(line: 496, column: 2, scope: !8887)
!8900 = !DILocation(line: 499, column: 2, scope: !8887)
!8901 = !DILocation(line: 500, column: 2, scope: !8887)
!8902 = !DILocation(line: 500, column: 9, scope: !8887)
!8903 = !DILocation(line: 500, column: 30, scope: !8887)
!8904 = distinct !{!8904, !8901, !8905}
!8905 = !DILocation(line: 502, column: 2, scope: !8887)
!8906 = !DILocation(line: 505, column: 1, scope: !8887)
!8907 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8863, file: !8863, line: 3224, type: !6474, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8908)
!8908 = !{!8909}
!8909 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8907, file: !8863, line: 3224, type: !118)
!8910 = !DILocation(line: 0, scope: !8907)
!8911 = !DILocation(line: 3226, column: 3, scope: !8907)
!8912 = !DILocation(line: 3227, column: 1, scope: !8907)
!8913 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8863, file: !8863, line: 3188, type: !6474, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8914)
!8914 = !{!8915}
!8915 = !DILocalVariable(name: "Source", arg: 1, scope: !8913, file: !8863, line: 3188, type: !118)
!8916 = !DILocation(line: 0, scope: !8913)
!8917 = !DILocation(line: 3190, column: 3, scope: !8913)
!8918 = !DILocation(line: 3191, column: 1, scope: !8913)
!8919 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8863, file: !8863, line: 3204, type: !3257, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8920 = !DILocation(line: 3206, column: 21, scope: !8919)
!8921 = !DILocation(line: 3206, column: 3, scope: !8919)
!8922 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8863, file: !8863, line: 3240, type: !6474, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8923)
!8923 = !{!8924}
!8924 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8922, file: !8863, line: 3240, type: !118)
!8925 = !DILocation(line: 0, scope: !8922)
!8926 = !DILocation(line: 3242, column: 3, scope: !8922)
!8927 = !DILocation(line: 3243, column: 1, scope: !8922)
!8928 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8863, file: !8863, line: 3256, type: !6474, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !8929)
!8929 = !{!8930}
!8930 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8928, file: !8863, line: 3256, type: !118)
!8931 = !DILocation(line: 0, scope: !8928)
!8932 = !DILocation(line: 3258, column: 3, scope: !8928)
!8933 = !DILocation(line: 3259, column: 1, scope: !8928)
!8934 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !904, file: !904, line: 409, type: !3019, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8935 = !DILocation(line: 412, column: 6, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8934, file: !904, line: 412, column: 6)
!8937 = !DILocation(line: 412, column: 27, scope: !8936)
!8938 = !DILocation(line: 412, column: 6, scope: !8934)
!8939 = !DILocation(line: 414, column: 3, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8936, file: !904, line: 412, column: 33)
!8941 = !DILocation(line: 415, column: 3, scope: !8940)
!8942 = !DILocation(line: 415, column: 10, scope: !8940)
!8943 = !DILocation(line: 415, column: 31, scope: !8940)
!8944 = distinct !{!8944, !8941, !8945}
!8945 = !DILocation(line: 417, column: 3, scope: !8940)
!8946 = !DILocation(line: 421, column: 2, scope: !8934)
!8947 = !DILocation(line: 422, column: 2, scope: !8934)
!8948 = !DILocation(line: 422, column: 9, scope: !8934)
!8949 = !DILocation(line: 422, column: 34, scope: !8934)
!8950 = distinct !{!8950, !8947, !8951}
!8951 = !DILocation(line: 423, column: 2, scope: !8934)
!8952 = !DILocation(line: 424, column: 1, scope: !8934)
!8953 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8863, file: !8863, line: 4195, type: !3019, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8954 = !DILocation(line: 4197, column: 3, scope: !8953)
!8955 = !DILocation(line: 4198, column: 1, scope: !8953)
!8956 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8863, file: !8863, line: 4184, type: !3019, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8957 = !DILocation(line: 4186, column: 3, scope: !8956)
!8958 = !DILocation(line: 4187, column: 1, scope: !8956)
!8959 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8863, file: !8863, line: 4205, type: !3257, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8960 = !DILocation(line: 4207, column: 11, scope: !8959)
!8961 = !DILocation(line: 4207, column: 44, scope: !8959)
!8962 = !DILocation(line: 4207, column: 3, scope: !8959)
!8963 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8863, file: !8863, line: 3007, type: !3257, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8964 = !DILocation(line: 3009, column: 11, scope: !8963)
!8965 = !DILocation(line: 3009, column: 44, scope: !8963)
!8966 = !DILocation(line: 3009, column: 3, scope: !8963)
!8967 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8863, file: !8863, line: 2987, type: !3019, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8968 = !DILocation(line: 2989, column: 3, scope: !8967)
!8969 = !DILocation(line: 2990, column: 1, scope: !8967)
!8970 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8863, file: !8863, line: 2939, type: !3019, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8971 = !DILocation(line: 2941, column: 3, scope: !8970)
!8972 = !DILocation(line: 2942, column: 1, scope: !8970)
!8973 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8863, file: !8863, line: 2949, type: !3019, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8974 = !DILocation(line: 2951, column: 3, scope: !8973)
!8975 = !DILocation(line: 2952, column: 1, scope: !8973)
!8976 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8863, file: !8863, line: 2969, type: !3257, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8977 = !DILocation(line: 2971, column: 11, scope: !8976)
!8978 = !DILocation(line: 2971, column: 44, scope: !8976)
!8979 = !DILocation(line: 2971, column: 3, scope: !8976)
!8980 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8863, file: !8863, line: 3143, type: !3019, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8981 = !DILocation(line: 3145, column: 3, scope: !8980)
!8982 = !DILocation(line: 3146, column: 1, scope: !8980)
!8983 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8863, file: !8863, line: 3163, type: !3257, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !2102)
!8984 = !DILocation(line: 3165, column: 11, scope: !8983)
!8985 = !DILocation(line: 3165, column: 46, scope: !8983)
!8986 = !DILocation(line: 3165, column: 3, scope: !8983)
!8987 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8988, file: !8988, line: 40, type: !3257, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !2102)
!8988 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8989 = !DILocation(line: 45, column: 3, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8991, file: !8988, line: 44, column: 44)
!8991 = distinct !DILexicalBlock(scope: !8992, file: !8988, line: 44, column: 13)
!8992 = distinct !DILexicalBlock(scope: !8987, file: !8988, line: 42, column: 6)
!8993 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8988, file: !8988, line: 56, type: !3019, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !2102)
!8994 = !DILocation(line: 58, column: 2, scope: !8993)
!8995 = !DILocation(line: 62, column: 1, scope: !8993)
!8996 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8863, file: !8863, line: 4304, type: !8997, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !8999)
!8997 = !DISubroutineType(types: !8998)
!8998 = !{null, !118, !118, !118, !118}
!8999 = !{!9000, !9001, !9002, !9003}
!9000 = !DILocalVariable(name: "Source", arg: 1, scope: !8996, file: !8863, line: 4304, type: !118)
!9001 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8996, file: !8863, line: 4304, type: !118)
!9002 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8996, file: !8863, line: 4304, type: !118)
!9003 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8996, file: !8863, line: 4304, type: !118)
!9004 = !DILocation(line: 0, scope: !8996)
!9005 = !DILocation(line: 4306, column: 3, scope: !8996)
!9006 = !DILocation(line: 4308, column: 3, scope: !8996)
!9007 = !DILocation(line: 4310, column: 3, scope: !8996)
!9008 = !DILocation(line: 4312, column: 1, scope: !8996)
!9009 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8988, file: !8988, line: 69, type: !3019, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !2102)
!9010 = !DILocation(line: 72, column: 2, scope: !9009)
!9011 = !DILocation(line: 73, column: 1, scope: !9009)
!9012 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9013, file: !9013, line: 1185, type: !6474, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !9014)
!9013 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9014 = !{!9015, !9016}
!9015 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9012, file: !9013, line: 1185, type: !118)
!9016 = !DILocalVariable(name: "tmpreg", scope: !9012, file: !9013, line: 1187, type: !314)
!9017 = !DILocation(line: 0, scope: !9012)
!9018 = !DILocation(line: 1187, column: 3, scope: !9012)
!9019 = !DILocation(line: 1187, column: 17, scope: !9012)
!9020 = !DILocation(line: 1188, column: 3, scope: !9012)
!9021 = !DILocation(line: 1190, column: 12, scope: !9012)
!9022 = !DILocation(line: 1190, column: 10, scope: !9012)
!9023 = !DILocation(line: 1191, column: 9, scope: !9012)
!9024 = !DILocation(line: 1192, column: 1, scope: !9012)
!9025 = distinct !DISubprogram(name: "uart_console_init", scope: !1035, file: !1035, line: 588, type: !1012, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !9026)
!9026 = !{!9027}
!9027 = !DILocalVariable(name: "arg", arg: 1, scope: !9025, file: !1035, line: 588, type: !990)
!9028 = !DILocation(line: 0, scope: !9025)
!9029 = !DILocation(line: 593, column: 7, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9025, file: !1035, line: 593, column: 6)
!9031 = !DILocation(line: 593, column: 6, scope: !9025)
!9032 = !DILocation(line: 597, column: 2, scope: !9025)
!9033 = !DILocation(line: 599, column: 2, scope: !9025)
!9034 = !DILocation(line: 600, column: 1, scope: !9025)
!9035 = distinct !DISubprogram(name: "device_is_ready", scope: !9036, file: !9036, line: 47, type: !9037, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !9039)
!9036 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!9037 = !DISubroutineType(types: !9038)
!9038 = !{!345, !990}
!9039 = !{!9040}
!9040 = !DILocalVariable(name: "dev", arg: 1, scope: !9035, file: !9036, line: 47, type: !990)
!9041 = !DILocation(line: 0, scope: !9035)
!9042 = !DILocation(line: 55, column: 2, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9035, file: !9036, line: 55, column: 2)
!9044 = !{i64 2155297860}
!9045 = !DILocation(line: 56, column: 9, scope: !9035)
!9046 = !DILocation(line: 56, column: 2, scope: !9035)
!9047 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1035, file: !1035, line: 573, type: !3019, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !2102)
!9048 = !DILocation(line: 576, column: 2, scope: !9047)
!9049 = !DILocation(line: 579, column: 2, scope: !9047)
!9050 = !DILocation(line: 581, column: 1, scope: !9047)
!9051 = distinct !DISubprogram(name: "console_out", scope: !1035, file: !1035, line: 77, type: !301, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !9052)
!9052 = !{!9053}
!9053 = !DILocalVariable(name: "c", arg: 1, scope: !9051, file: !1035, line: 77, type: !119)
!9054 = !DILocation(line: 0, scope: !9051)
!9055 = !DILocation(line: 89, column: 11, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9051, file: !1035, line: 89, column: 6)
!9057 = !DILocation(line: 89, column: 6, scope: !9051)
!9058 = !DILocation(line: 90, column: 3, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9056, file: !1035, line: 89, column: 17)
!9060 = !DILocation(line: 91, column: 2, scope: !9059)
!9061 = !DILocation(line: 92, column: 34, scope: !9051)
!9062 = !DILocation(line: 92, column: 2, scope: !9051)
!9063 = !DILocation(line: 94, column: 2, scope: !9051)
!9064 = distinct !DISubprogram(name: "uart_poll_out", scope: !9065, file: !9065, line: 95, type: !1008, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !9066)
!9065 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/pi")
!9066 = !{!9067, !9068}
!9067 = !DILocalVariable(name: "dev", arg: 1, scope: !9064, file: !9065, line: 95, type: !990)
!9068 = !DILocalVariable(name: "out_char", arg: 2, scope: !9064, file: !9065, line: 95, type: !186)
!9069 = !DILocation(line: 0, scope: !9064)
!9070 = !DILocation(line: 105, column: 2, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9064, file: !9065, line: 105, column: 2)
!9072 = !{i64 2155381251}
!9073 = !DILocation(line: 106, column: 2, scope: !9064)
!9074 = !DILocation(line: 107, column: 1, scope: !9064)
!9075 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !984, file: !984, line: 574, type: !1008, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !9076)
!9076 = !{!9077, !9078, !9079}
!9077 = !DILocalVariable(name: "dev", arg: 1, scope: !9075, file: !984, line: 574, type: !990)
!9078 = !DILocalVariable(name: "out_char", arg: 2, scope: !9075, file: !984, line: 575, type: !186)
!9079 = !DILocalVariable(name: "api", scope: !9075, file: !984, line: 577, type: !981)
!9080 = !DILocation(line: 0, scope: !9075)
!9081 = !DILocation(line: 578, column: 40, scope: !9075)
!9082 = !DILocation(line: 580, column: 7, scope: !9075)
!9083 = !DILocation(line: 580, column: 2, scope: !9075)
!9084 = !DILocation(line: 581, column: 1, scope: !9075)
!9085 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !9037, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !9086)
!9086 = !{!9087}
!9087 = !DILocalVariable(name: "dev", arg: 1, scope: !9085, file: !334, line: 730, type: !990)
!9088 = !DILocation(line: 0, scope: !9085)
!9089 = !DILocation(line: 732, column: 9, scope: !9085)
!9090 = !DILocation(line: 732, column: 2, scope: !9085)
!9091 = distinct !DISubprogram(name: "uart_register_input", scope: !1035, file: !1035, line: 560, type: !9092, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !978, retainedNodes: !9139)
!9092 = !DISubroutineType(types: !9093)
!9093 = !{null, !9094, !9094, !9136}
!9094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9095, size: 32)
!9095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !245, line: 2208, size: 160, elements: !9096)
!9096 = !{!9097}
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9095, file: !245, line: 2209, baseType: !9098, size: 160)
!9098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !245, line: 1709, size: 160, elements: !9099)
!9099 = !{!9100, !9113, !9117}
!9100 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9098, file: !245, line: 1710, baseType: !9101, size: 64)
!9101 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9102, line: 46, baseType: !9103)
!9102 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9102, line: 41, size: 64, elements: !9104)
!9104 = !{!9105, !9112}
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9103, file: !9102, line: 42, baseType: !9106, size: 32)
!9106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9107, size: 32)
!9107 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9102, line: 39, baseType: !9108)
!9108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9102, line: 35, size: 32, elements: !9109)
!9109 = !{!9110}
!9110 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9108, file: !9102, line: 36, baseType: !9111, size: 32)
!9111 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9102, line: 32, baseType: !118)
!9112 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9103, file: !9102, line: 43, baseType: !9106, size: 32, offset: 32)
!9113 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9098, file: !245, line: 1711, baseType: !9114, size: 32, offset: 64)
!9114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !9115)
!9115 = !{!9116}
!9116 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9114, file: !259, line: 52, baseType: !22, size: 32)
!9117 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9098, file: !245, line: 1712, baseType: !9118, size: 64, offset: 96)
!9118 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !9119)
!9119 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !9120)
!9120 = !{!9121}
!9121 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9119, file: !179, line: 232, baseType: !9122, size: 64)
!9122 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !9123)
!9123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !9124)
!9124 = !{!9125, !9131}
!9125 = !DIDerivedType(tag: DW_TAG_member, scope: !9123, file: !153, line: 38, baseType: !9126, size: 32)
!9126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9123, file: !153, line: 38, size: 32, elements: !9127)
!9127 = !{!9128, !9130}
!9128 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9126, file: !153, line: 39, baseType: !9129, size: 32)
!9129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9123, size: 32)
!9130 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9126, file: !153, line: 40, baseType: !9129, size: 32)
!9131 = !DIDerivedType(tag: DW_TAG_member, scope: !9123, file: !153, line: 42, baseType: !9132, size: 32, offset: 32)
!9132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9123, file: !153, line: 42, size: 32, elements: !9133)
!9133 = !{!9134, !9135}
!9134 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9132, file: !153, line: 43, baseType: !9129, size: 32)
!9135 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9132, file: !153, line: 44, baseType: !9129, size: 32)
!9136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9137, size: 32)
!9137 = !DISubroutineType(types: !9138)
!9138 = !{!185, !106, !185}
!9139 = !{!9140, !9141, !9142}
!9140 = !DILocalVariable(name: "avail", arg: 1, scope: !9091, file: !1035, line: 560, type: !9094)
!9141 = !DILocalVariable(name: "lines", arg: 2, scope: !9091, file: !1035, line: 560, type: !9094)
!9142 = !DILocalVariable(name: "completion", arg: 3, scope: !9091, file: !1035, line: 561, type: !9136)
!9143 = !DILocation(line: 0, scope: !9091)
!9144 = !DILocation(line: 566, column: 1, scope: !9091)
!9145 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1215, file: !1215, line: 523, type: !1071, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9146)
!9146 = !{!9147, !9148, !9149, !9150, !9151}
!9147 = !DILocalVariable(name: "dev", arg: 1, scope: !9145, file: !1215, line: 523, type: !1073)
!9148 = !DILocalVariable(name: "pin", arg: 2, scope: !9145, file: !1215, line: 524, type: !1088)
!9149 = !DILocalVariable(name: "flags", arg: 3, scope: !9145, file: !1215, line: 524, type: !1089)
!9150 = !DILocalVariable(name: "err", scope: !9145, file: !1215, line: 526, type: !119)
!9151 = !DILocalVariable(name: "pincfg", scope: !9145, file: !1215, line: 527, type: !119)
!9152 = !DILocation(line: 0, scope: !9145)
!9153 = !DILocation(line: 527, column: 2, scope: !9145)
!9154 = !DILocation(line: 532, column: 8, scope: !9145)
!9155 = !DILocation(line: 533, column: 10, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9145, file: !1215, line: 533, column: 6)
!9157 = !DILocation(line: 533, column: 6, scope: !9145)
!9158 = !DILocation(line: 543, column: 13, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9145, file: !1215, line: 543, column: 6)
!9160 = !DILocation(line: 543, column: 28, scope: !9159)
!9161 = !DILocation(line: 543, column: 6, scope: !9145)
!9162 = !DILocation(line: 544, column: 14, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9164, file: !1215, line: 544, column: 7)
!9164 = distinct !DILexicalBlock(scope: !9159, file: !1215, line: 543, column: 34)
!9165 = !DILocation(line: 544, column: 39, scope: !9163)
!9166 = !DILocation(line: 544, column: 7, scope: !9164)
!9167 = !DILocation(line: 545, column: 38, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9163, file: !1215, line: 544, column: 45)
!9169 = !DILocation(line: 545, column: 4, scope: !9168)
!9170 = !DILocation(line: 546, column: 3, scope: !9168)
!9171 = !DILocation(line: 546, column: 21, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9163, file: !1215, line: 546, column: 14)
!9173 = !DILocation(line: 546, column: 45, scope: !9172)
!9174 = !DILocation(line: 546, column: 14, scope: !9163)
!9175 = !DILocation(line: 547, column: 40, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9172, file: !1215, line: 546, column: 51)
!9177 = !DILocation(line: 547, column: 4, scope: !9176)
!9178 = !DILocation(line: 548, column: 3, scope: !9176)
!9179 = !DILocation(line: 551, column: 32, scope: !9145)
!9180 = !DILocation(line: 551, column: 37, scope: !9145)
!9181 = !DILocation(line: 551, column: 2, scope: !9145)
!9182 = !DILocation(line: 554, column: 6, scope: !9145)
!9183 = !DILocation(line: 562, column: 1, scope: !9145)
!9184 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1215, file: !1215, line: 410, type: !9185, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9187)
!9185 = !DISubroutineType(types: !9186)
!9186 = !{!119, !1073, !900}
!9187 = !{!9188, !9189, !9190, !9192}
!9188 = !DILocalVariable(name: "dev", arg: 1, scope: !9184, file: !1215, line: 410, type: !1073)
!9189 = !DILocalVariable(name: "value", arg: 2, scope: !9184, file: !1215, line: 410, type: !900)
!9190 = !DILocalVariable(name: "cfg", scope: !9184, file: !1215, line: 412, type: !9191)
!9191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 32)
!9192 = !DILocalVariable(name: "gpio", scope: !9184, file: !1215, line: 413, type: !1146)
!9193 = !DILocation(line: 0, scope: !9184)
!9194 = !DILocation(line: 412, column: 45, scope: !9184)
!9195 = !DILocation(line: 413, column: 44, scope: !9184)
!9196 = !DILocation(line: 415, column: 11, scope: !9184)
!9197 = !DILocation(line: 415, column: 9, scope: !9184)
!9198 = !DILocation(line: 417, column: 2, scope: !9184)
!9199 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1215, file: !1215, line: 420, type: !1098, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9200)
!9200 = !{!9201, !9202, !9203, !9204, !9205, !9206}
!9201 = !DILocalVariable(name: "dev", arg: 1, scope: !9199, file: !1215, line: 420, type: !1073)
!9202 = !DILocalVariable(name: "mask", arg: 2, scope: !9199, file: !1215, line: 421, type: !1100)
!9203 = !DILocalVariable(name: "value", arg: 3, scope: !9199, file: !1215, line: 422, type: !1095)
!9204 = !DILocalVariable(name: "cfg", scope: !9199, file: !1215, line: 424, type: !9191)
!9205 = !DILocalVariable(name: "gpio", scope: !9199, file: !1215, line: 425, type: !1146)
!9206 = !DILocalVariable(name: "port_value", scope: !9199, file: !1215, line: 426, type: !118)
!9207 = !DILocation(line: 0, scope: !9199)
!9208 = !DILocation(line: 424, column: 45, scope: !9199)
!9209 = !DILocation(line: 425, column: 44, scope: !9199)
!9210 = !DILocation(line: 430, column: 15, scope: !9199)
!9211 = !DILocation(line: 431, column: 46, scope: !9199)
!9212 = !DILocation(line: 431, column: 44, scope: !9199)
!9213 = !DILocation(line: 431, column: 61, scope: !9199)
!9214 = !DILocation(line: 431, column: 53, scope: !9199)
!9215 = !DILocation(line: 431, column: 2, scope: !9199)
!9216 = !DILocation(line: 435, column: 2, scope: !9199)
!9217 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1215, file: !1215, line: 438, type: !1103, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9218)
!9218 = !{!9219, !9220, !9221, !9222}
!9219 = !DILocalVariable(name: "dev", arg: 1, scope: !9217, file: !1215, line: 438, type: !1073)
!9220 = !DILocalVariable(name: "pins", arg: 2, scope: !9217, file: !1215, line: 439, type: !1100)
!9221 = !DILocalVariable(name: "cfg", scope: !9217, file: !1215, line: 441, type: !9191)
!9222 = !DILocalVariable(name: "gpio", scope: !9217, file: !1215, line: 442, type: !1146)
!9223 = !DILocation(line: 0, scope: !9217)
!9224 = !DILocation(line: 441, column: 45, scope: !9217)
!9225 = !DILocation(line: 442, column: 44, scope: !9217)
!9226 = !DILocation(line: 448, column: 2, scope: !9217)
!9227 = !DILocation(line: 450, column: 2, scope: !9217)
!9228 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1215, file: !1215, line: 453, type: !1103, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9229)
!9229 = !{!9230, !9231, !9232, !9233}
!9230 = !DILocalVariable(name: "dev", arg: 1, scope: !9228, file: !1215, line: 453, type: !1073)
!9231 = !DILocalVariable(name: "pins", arg: 2, scope: !9228, file: !1215, line: 454, type: !1100)
!9232 = !DILocalVariable(name: "cfg", scope: !9228, file: !1215, line: 456, type: !9191)
!9233 = !DILocalVariable(name: "gpio", scope: !9228, file: !1215, line: 457, type: !1146)
!9234 = !DILocation(line: 0, scope: !9228)
!9235 = !DILocation(line: 456, column: 45, scope: !9228)
!9236 = !DILocation(line: 457, column: 44, scope: !9228)
!9237 = !DILocation(line: 467, column: 2, scope: !9228)
!9238 = !DILocation(line: 470, column: 2, scope: !9228)
!9239 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1215, file: !1215, line: 473, type: !1103, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9240)
!9240 = !{!9241, !9242, !9243, !9244}
!9241 = !DILocalVariable(name: "dev", arg: 1, scope: !9239, file: !1215, line: 473, type: !1073)
!9242 = !DILocalVariable(name: "pins", arg: 2, scope: !9239, file: !1215, line: 474, type: !1100)
!9243 = !DILocalVariable(name: "cfg", scope: !9239, file: !1215, line: 476, type: !9191)
!9244 = !DILocalVariable(name: "gpio", scope: !9239, file: !1215, line: 477, type: !1146)
!9245 = !DILocation(line: 0, scope: !9239)
!9246 = !DILocation(line: 476, column: 45, scope: !9239)
!9247 = !DILocation(line: 477, column: 44, scope: !9239)
!9248 = !DILocation(line: 484, column: 2, scope: !9239)
!9249 = !DILocation(line: 487, column: 2, scope: !9239)
!9250 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1215, file: !1215, line: 594, type: !1109, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9251)
!9251 = !{!9252, !9253, !9254, !9255, !9256, !9257, !9259, !9260, !9261}
!9252 = !DILocalVariable(name: "dev", arg: 1, scope: !9250, file: !1215, line: 594, type: !1073)
!9253 = !DILocalVariable(name: "pin", arg: 2, scope: !9250, file: !1215, line: 595, type: !1088)
!9254 = !DILocalVariable(name: "mode", arg: 3, scope: !9250, file: !1215, line: 596, type: !1047)
!9255 = !DILocalVariable(name: "trig", arg: 4, scope: !9250, file: !1215, line: 597, type: !1053)
!9256 = !DILocalVariable(name: "cfg", scope: !9250, file: !1215, line: 599, type: !9191)
!9257 = !DILocalVariable(name: "data", scope: !9250, file: !1215, line: 600, type: !9258)
!9258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!9259 = !DILocalVariable(name: "edge", scope: !9250, file: !1215, line: 601, type: !119)
!9260 = !DILocalVariable(name: "err", scope: !9250, file: !1215, line: 602, type: !119)
!9261 = !DILabel(scope: !9250, name: "exit", file: !1215, line: 643)
!9262 = !DILocation(line: 0, scope: !9250)
!9263 = !DILocation(line: 599, column: 45, scope: !9250)
!9264 = !DILocation(line: 604, column: 6, scope: !9250)
!9265 = !DILocation(line: 605, column: 34, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9267, file: !1215, line: 605, column: 7)
!9267 = distinct !DILexicalBlock(scope: !9268, file: !1215, line: 604, column: 38)
!9268 = distinct !DILexicalBlock(scope: !9250, file: !1215, line: 604, column: 6)
!9269 = !DILocation(line: 605, column: 7, scope: !9266)
!9270 = !DILocation(line: 605, column: 47, scope: !9266)
!9271 = !DILocation(line: 605, column: 39, scope: !9266)
!9272 = !DILocation(line: 605, column: 7, scope: !9267)
!9273 = !DILocation(line: 606, column: 4, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9266, file: !1215, line: 605, column: 53)
!9275 = !DILocation(line: 607, column: 4, scope: !9274)
!9276 = !DILocation(line: 608, column: 4, scope: !9274)
!9277 = !DILocation(line: 609, column: 3, scope: !9274)
!9278 = !DILocation(line: 600, column: 38, scope: !9250)
!9279 = !DILocation(line: 620, column: 30, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9250, file: !1215, line: 620, column: 6)
!9281 = !DILocation(line: 620, column: 6, scope: !9280)
!9282 = !DILocation(line: 620, column: 57, scope: !9280)
!9283 = !DILocation(line: 620, column: 6, scope: !9250)
!9284 = !DILocation(line: 625, column: 29, scope: !9250)
!9285 = !DILocation(line: 625, column: 2, scope: !9250)
!9286 = !DILocation(line: 627, column: 2, scope: !9250)
!9287 = !DILocation(line: 630, column: 3, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9250, file: !1215, line: 627, column: 16)
!9289 = !DILocation(line: 633, column: 3, scope: !9288)
!9290 = !DILocation(line: 636, column: 3, scope: !9288)
!9291 = !DILocation(line: 639, column: 2, scope: !9250)
!9292 = !DILocation(line: 641, column: 2, scope: !9250)
!9293 = !DILocation(line: 643, column: 1, scope: !9250)
!9294 = !DILocation(line: 644, column: 2, scope: !9250)
!9295 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1215, file: !1215, line: 647, type: !1113, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9296)
!9296 = !{!9297, !9298, !9299, !9300}
!9297 = !DILocalVariable(name: "dev", arg: 1, scope: !9295, file: !1215, line: 647, type: !1073)
!9298 = !DILocalVariable(name: "callback", arg: 2, scope: !9295, file: !1215, line: 648, type: !1115)
!9299 = !DILocalVariable(name: "set", arg: 3, scope: !9295, file: !1215, line: 649, type: !345)
!9300 = !DILocalVariable(name: "data", scope: !9295, file: !1215, line: 651, type: !9258)
!9301 = !DILocation(line: 0, scope: !9295)
!9302 = !DILocation(line: 651, column: 38, scope: !9295)
!9303 = !DILocation(line: 653, column: 37, scope: !9295)
!9304 = !DILocation(line: 653, column: 9, scope: !9295)
!9305 = !DILocation(line: 653, column: 2, scope: !9295)
!9306 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9307, file: !9307, line: 38, type: !9308, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9311)
!9307 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9308 = !DISubroutineType(types: !9309)
!9309 = !{!119, !9310, !1115, !345}
!9310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!9311 = !{!9312, !9313, !9314}
!9312 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9306, file: !9307, line: 38, type: !9310)
!9313 = !DILocalVariable(name: "callback", arg: 2, scope: !9306, file: !9307, line: 39, type: !1115)
!9314 = !DILocalVariable(name: "set", arg: 3, scope: !9306, file: !9307, line: 40, type: !345)
!9315 = !DILocation(line: 0, scope: !9306)
!9316 = !DILocation(line: 42, column: 2, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9318, file: !9307, line: 42, column: 2)
!9318 = distinct !DILexicalBlock(scope: !9306, file: !9307, line: 42, column: 2)
!9319 = !DILocation(line: 42, column: 2, scope: !9318)
!9320 = !DILocation(line: 42, column: 2, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9317, file: !9307, line: 42, column: 2)
!9322 = !DILocation(line: 43, column: 2, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9324, file: !9307, line: 43, column: 2)
!9324 = distinct !DILexicalBlock(scope: !9306, file: !9307, line: 43, column: 2)
!9325 = !DILocation(line: 43, column: 2, scope: !9324)
!9326 = !DILocation(line: 43, column: 2, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9323, file: !9307, line: 43, column: 2)
!9328 = !DILocation(line: 45, column: 7, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9306, file: !9307, line: 45, column: 6)
!9330 = !DILocation(line: 45, column: 6, scope: !9306)
!9331 = !DILocation(line: 46, column: 56, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9333, file: !9307, line: 46, column: 7)
!9333 = distinct !DILexicalBlock(scope: !9329, file: !9307, line: 45, column: 38)
!9334 = !DILocation(line: 46, column: 8, scope: !9332)
!9335 = !DILocation(line: 46, column: 7, scope: !9333)
!9336 = !DILocation(line: 51, column: 13, scope: !9329)
!9337 = !DILocation(line: 56, column: 43, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9339, file: !9307, line: 55, column: 11)
!9339 = distinct !DILexicalBlock(scope: !9306, file: !9307, line: 55, column: 6)
!9340 = !DILocation(line: 56, column: 3, scope: !9338)
!9341 = !DILocation(line: 57, column: 2, scope: !9338)
!9342 = !DILocation(line: 60, column: 1, scope: !9306)
!9343 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1120, file: !1120, line: 261, type: !9344, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9346)
!9344 = !DISubroutineType(types: !9345)
!9345 = !{!345, !9310}
!9346 = !{!9347}
!9347 = !DILocalVariable(name: "list", arg: 1, scope: !9343, file: !1120, line: 261, type: !9310)
!9348 = !DILocation(line: 0, scope: !9343)
!9349 = !DILocation(line: 261, column: 1, scope: !9343)
!9350 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1120, file: !1120, line: 417, type: !9351, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9353)
!9351 = !DISubroutineType(types: !9352)
!9352 = !{!345, !9310, !1288}
!9353 = !{!9354, !9355, !9356, !9357}
!9354 = !DILocalVariable(name: "list", arg: 1, scope: !9350, file: !1120, line: 417, type: !9310)
!9355 = !DILocalVariable(name: "node", arg: 2, scope: !9350, file: !1120, line: 417, type: !1288)
!9356 = !DILocalVariable(name: "prev", scope: !9350, file: !1120, line: 417, type: !1288)
!9357 = !DILocalVariable(name: "test", scope: !9350, file: !1120, line: 417, type: !1288)
!9358 = !DILocation(line: 0, scope: !9350)
!9359 = !DILocation(line: 417, column: 1, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9350, file: !1120, line: 417, column: 1)
!9361 = !DILocation(line: 417, column: 1, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9360, file: !1120, line: 417, column: 1)
!9363 = !DILocation(line: 417, column: 1, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9365, file: !1120, line: 417, column: 1)
!9365 = distinct !DILexicalBlock(scope: !9362, file: !1120, line: 417, column: 1)
!9366 = !DILocation(line: 417, column: 1, scope: !9365)
!9367 = distinct !{!9367, !9359, !9359}
!9368 = !DILocation(line: 417, column: 1, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9364, file: !1120, line: 417, column: 1)
!9370 = !DILocation(line: 417, column: 1, scope: !9350)
!9371 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1120, file: !1120, line: 298, type: !9372, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9374)
!9372 = !DISubroutineType(types: !9373)
!9373 = !{null, !9310, !1288}
!9374 = !{!9375, !9376}
!9375 = !DILocalVariable(name: "list", arg: 1, scope: !9371, file: !1120, line: 298, type: !9310)
!9376 = !DILocalVariable(name: "node", arg: 2, scope: !9371, file: !1120, line: 298, type: !1288)
!9377 = !DILocation(line: 0, scope: !9371)
!9378 = !DILocation(line: 298, column: 1, scope: !9371)
!9379 = !DILocation(line: 298, column: 1, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9371, file: !1120, line: 298, column: 1)
!9381 = !DILocation(line: 298, column: 1, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9380, file: !1120, line: 298, column: 1)
!9383 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1120, file: !1120, line: 231, type: !9384, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9386)
!9384 = !DISubroutineType(types: !9385)
!9385 = !{!1288, !9310}
!9386 = !{!9387}
!9387 = !DILocalVariable(name: "list", arg: 1, scope: !9383, file: !1120, line: 231, type: !9310)
!9388 = !DILocation(line: 0, scope: !9383)
!9389 = !DILocation(line: 233, column: 15, scope: !9383)
!9390 = !DILocation(line: 233, column: 2, scope: !9383)
!9391 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1120, file: !1120, line: 209, type: !9392, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9394)
!9392 = !DISubroutineType(types: !9393)
!9393 = !{null, !1288, !1288}
!9394 = !{!9395, !9396}
!9395 = !DILocalVariable(name: "parent", arg: 1, scope: !9391, file: !1120, line: 209, type: !1288)
!9396 = !DILocalVariable(name: "child", arg: 2, scope: !9391, file: !1120, line: 209, type: !1288)
!9397 = !DILocation(line: 0, scope: !9391)
!9398 = !DILocation(line: 211, column: 10, scope: !9391)
!9399 = !DILocation(line: 211, column: 15, scope: !9391)
!9400 = !DILocation(line: 212, column: 1, scope: !9391)
!9401 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1120, file: !1120, line: 214, type: !9372, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9402)
!9402 = !{!9403, !9404}
!9403 = !DILocalVariable(name: "list", arg: 1, scope: !9401, file: !1120, line: 214, type: !9310)
!9404 = !DILocalVariable(name: "node", arg: 2, scope: !9401, file: !1120, line: 214, type: !1288)
!9405 = !DILocation(line: 0, scope: !9401)
!9406 = !DILocation(line: 216, column: 8, scope: !9401)
!9407 = !DILocation(line: 216, column: 13, scope: !9401)
!9408 = !DILocation(line: 217, column: 1, scope: !9401)
!9409 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1120, file: !1120, line: 243, type: !9384, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9410)
!9410 = !{!9411}
!9411 = !DILocalVariable(name: "list", arg: 1, scope: !9409, file: !1120, line: 243, type: !9310)
!9412 = !DILocation(line: 0, scope: !9409)
!9413 = !DILocation(line: 245, column: 15, scope: !9409)
!9414 = !DILocation(line: 245, column: 2, scope: !9409)
!9415 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1120, file: !1120, line: 219, type: !9372, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9416)
!9416 = !{!9417, !9418}
!9417 = !DILocalVariable(name: "list", arg: 1, scope: !9415, file: !1120, line: 219, type: !9310)
!9418 = !DILocalVariable(name: "node", arg: 2, scope: !9415, file: !1120, line: 219, type: !1288)
!9419 = !DILocation(line: 0, scope: !9415)
!9420 = !DILocation(line: 221, column: 8, scope: !9415)
!9421 = !DILocation(line: 221, column: 13, scope: !9415)
!9422 = !DILocation(line: 222, column: 1, scope: !9415)
!9423 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1120, file: !1120, line: 401, type: !9424, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9426)
!9424 = !DISubroutineType(types: !9425)
!9425 = !{null, !9310, !1288, !1288}
!9426 = !{!9427, !9428, !9429}
!9427 = !DILocalVariable(name: "list", arg: 1, scope: !9423, file: !1120, line: 401, type: !9310)
!9428 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9423, file: !1120, line: 401, type: !1288)
!9429 = !DILocalVariable(name: "node", arg: 3, scope: !9423, file: !1120, line: 401, type: !1288)
!9430 = !DILocation(line: 0, scope: !9423)
!9431 = !DILocation(line: 401, column: 1, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9423, file: !1120, line: 401, column: 1)
!9433 = !DILocation(line: 0, scope: !9432)
!9434 = !DILocation(line: 401, column: 1, scope: !9423)
!9435 = !DILocation(line: 401, column: 1, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9432, file: !1120, line: 401, column: 1)
!9437 = !DILocation(line: 401, column: 1, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9436, file: !1120, line: 401, column: 1)
!9439 = !DILocation(line: 401, column: 1, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9438, file: !1120, line: 401, column: 1)
!9441 = !DILocation(line: 401, column: 1, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9432, file: !1120, line: 401, column: 1)
!9443 = !DILocation(line: 401, column: 1, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9442, file: !1120, line: 401, column: 1)
!9445 = !DILocation(line: 401, column: 1, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9444, file: !1120, line: 401, column: 1)
!9447 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1120, file: !1120, line: 285, type: !9448, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9450)
!9448 = !DISubroutineType(types: !9449)
!9449 = !{!1288, !1288}
!9450 = !{!9451}
!9451 = !DILocalVariable(name: "node", arg: 1, scope: !9447, file: !1120, line: 285, type: !1288)
!9452 = !DILocation(line: 0, scope: !9447)
!9453 = !DILocation(line: 285, column: 1, scope: !9447)
!9454 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1120, file: !1120, line: 274, type: !9448, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9455)
!9455 = !{!9456}
!9456 = !DILocalVariable(name: "node", arg: 1, scope: !9454, file: !1120, line: 274, type: !1288)
!9457 = !DILocation(line: 0, scope: !9454)
!9458 = !DILocation(line: 274, column: 1, scope: !9454)
!9459 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1120, file: !1120, line: 204, type: !9448, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9460)
!9460 = !{!9461}
!9461 = !DILocalVariable(name: "node", arg: 1, scope: !9459, file: !1120, line: 204, type: !1288)
!9462 = !DILocation(line: 0, scope: !9459)
!9463 = !DILocation(line: 206, column: 15, scope: !9459)
!9464 = !DILocation(line: 206, column: 2, scope: !9459)
!9465 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1215, file: !1215, line: 342, type: !301, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9466)
!9466 = !{!9467, !9468, !9469}
!9467 = !DILocalVariable(name: "pin", arg: 1, scope: !9465, file: !1215, line: 342, type: !119)
!9468 = !DILocalVariable(name: "line", scope: !9465, file: !1215, line: 344, type: !118)
!9469 = !DILocalVariable(name: "port", scope: !9465, file: !1215, line: 345, type: !119)
!9470 = !DILocation(line: 0, scope: !9465)
!9471 = !DILocation(line: 344, column: 18, scope: !9465)
!9472 = !{i32 983040, i32 0}
!9473 = !DILocation(line: 356, column: 9, scope: !9465)
!9474 = !DILocation(line: 370, column: 2, scope: !9465)
!9475 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1215, file: !1215, line: 37, type: !755, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9476)
!9476 = !{!9477, !9478, !9479}
!9477 = !DILocalVariable(name: "line", arg: 1, scope: !9475, file: !1215, line: 37, type: !119)
!9478 = !DILocalVariable(name: "arg", arg: 2, scope: !9475, file: !1215, line: 37, type: !113)
!9479 = !DILocalVariable(name: "data", scope: !9475, file: !1215, line: 39, type: !9258)
!9480 = !DILocation(line: 0, scope: !9475)
!9481 = !DILocation(line: 41, column: 29, scope: !9475)
!9482 = !DILocation(line: 41, column: 39, scope: !9475)
!9483 = !DILocation(line: 41, column: 44, scope: !9475)
!9484 = !DILocation(line: 41, column: 2, scope: !9475)
!9485 = !DILocation(line: 42, column: 1, scope: !9475)
!9486 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1215, file: !1215, line: 376, type: !9487, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9489)
!9487 = !DISubroutineType(types: !9488)
!9488 = !{!119, !119, !119}
!9489 = !{!9490, !9491, !9492, !9494, !9495}
!9490 = !DILocalVariable(name: "port", arg: 1, scope: !9486, file: !1215, line: 376, type: !119)
!9491 = !DILocalVariable(name: "pin", arg: 2, scope: !9486, file: !1215, line: 376, type: !119)
!9492 = !DILocalVariable(name: "clk", scope: !9486, file: !1215, line: 386, type: !9493)
!9493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1073)
!9494 = !DILocalVariable(name: "pclken", scope: !9486, file: !1215, line: 387, type: !1331)
!9495 = !DILocalVariable(name: "ret", scope: !9486, file: !1215, line: 396, type: !119)
!9496 = !DILocation(line: 0, scope: !9486)
!9497 = !DILocation(line: 387, column: 2, scope: !9486)
!9498 = !DILocation(line: 387, column: 22, scope: !9486)
!9499 = !DILocation(line: 399, column: 8, scope: !9486)
!9500 = !DILocation(line: 400, column: 10, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9486, file: !1215, line: 400, column: 6)
!9502 = !DILocation(line: 400, column: 6, scope: !9486)
!9503 = !DILocation(line: 405, column: 2, scope: !9486)
!9504 = !DILocation(line: 407, column: 2, scope: !9486)
!9505 = !DILocation(line: 408, column: 1, scope: !9486)
!9506 = distinct !DISubprogram(name: "clock_control_on", scope: !848, file: !848, line: 123, type: !1180, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9507)
!9507 = !{!9508, !9509, !9510}
!9508 = !DILocalVariable(name: "dev", arg: 1, scope: !9506, file: !848, line: 123, type: !1073)
!9509 = !DILocalVariable(name: "sys", arg: 2, scope: !9506, file: !848, line: 124, type: !944)
!9510 = !DILocalVariable(name: "api", scope: !9506, file: !848, line: 126, type: !1173)
!9511 = !DILocation(line: 0, scope: !9506)
!9512 = !DILocation(line: 127, column: 49, scope: !9506)
!9513 = !DILocation(line: 129, column: 14, scope: !9506)
!9514 = !DILocation(line: 129, column: 9, scope: !9506)
!9515 = !DILocation(line: 129, column: 2, scope: !9506)
!9516 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1215, file: !1215, line: 311, type: !8620, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9517)
!9517 = !{!9518, !9519, !9520}
!9518 = !DILocalVariable(name: "port", arg: 1, scope: !9516, file: !1215, line: 311, type: !119)
!9519 = !DILocalVariable(name: "pin", arg: 2, scope: !9516, file: !1215, line: 311, type: !119)
!9520 = !DILocalVariable(name: "line", scope: !9516, file: !1215, line: 313, type: !118)
!9521 = !DILocation(line: 0, scope: !9516)
!9522 = !DILocation(line: 313, column: 18, scope: !9516)
!9523 = !DILocation(line: 337, column: 2, scope: !9516)
!9524 = !DILocation(line: 340, column: 1, scope: !9516)
!9525 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1215, file: !1215, line: 295, type: !9526, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9528)
!9526 = !DISubroutineType(types: !9527)
!9527 = !{!118, !119}
!9528 = !{!9529}
!9529 = !DILocalVariable(name: "pin", arg: 1, scope: !9525, file: !1215, line: 295, type: !119)
!9530 = !DILocation(line: 0, scope: !9525)
!9531 = !DILocation(line: 307, column: 46, scope: !9525)
!9532 = !DILocation(line: 307, column: 27, scope: !9525)
!9533 = !DILocation(line: 307, column: 32, scope: !9525)
!9534 = !DILocation(line: 307, column: 14, scope: !9525)
!9535 = !DILocation(line: 307, column: 39, scope: !9525)
!9536 = !DILocation(line: 307, column: 2, scope: !9525)
!9537 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6079, file: !6079, line: 671, type: !9538, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9540)
!9538 = !DISubroutineType(types: !9539)
!9539 = !{null, !118, !118}
!9540 = !{!9541, !9542}
!9541 = !DILocalVariable(name: "Port", arg: 1, scope: !9537, file: !6079, line: 671, type: !118)
!9542 = !DILocalVariable(name: "Line", arg: 2, scope: !9537, file: !6079, line: 671, type: !118)
!9543 = !DILocation(line: 0, scope: !9537)
!9544 = !DILocation(line: 673, column: 3, scope: !9537)
!9545 = !DILocalVariable(name: "value", arg: 1, scope: !9546, file: !6379, line: 373, type: !118)
!9546 = distinct !DISubprogram(name: "__RBIT", scope: !6379, file: !6379, line: 373, type: !7664, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9547)
!9547 = !{!9545, !9548}
!9548 = !DILocalVariable(name: "result", scope: !9546, file: !6379, line: 375, type: !118)
!9549 = !DILocation(line: 0, scope: !9546, inlinedAt: !9550)
!9550 = distinct !DILocation(line: 673, column: 3, scope: !9537)
!9551 = !DILocation(line: 380, column: 4, scope: !9546, inlinedAt: !9550)
!9552 = !{i64 3734361}
!9553 = !DILocalVariable(name: "value", arg: 1, scope: !9554, file: !6379, line: 403, type: !118)
!9554 = distinct !DISubprogram(name: "__CLZ", scope: !6379, file: !6379, line: 403, type: !9555, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9557)
!9555 = !DISubroutineType(types: !9556)
!9556 = !{!185, !118}
!9557 = !{!9553}
!9558 = !DILocation(line: 0, scope: !9554, inlinedAt: !9559)
!9559 = distinct !DILocation(line: 673, column: 3, scope: !9537)
!9560 = !DILocation(line: 414, column: 7, scope: !9554, inlinedAt: !9559)
!9561 = !DILocation(line: 674, column: 1, scope: !9537)
!9562 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9307, file: !9307, line: 69, type: !9563, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9565)
!9563 = !DISubroutineType(types: !9564)
!9564 = !{null, !9310, !1073, !118}
!9565 = !{!9566, !9567, !9568, !9569, !9570}
!9566 = !DILocalVariable(name: "list", arg: 1, scope: !9562, file: !9307, line: 69, type: !9310)
!9567 = !DILocalVariable(name: "port", arg: 2, scope: !9562, file: !9307, line: 70, type: !1073)
!9568 = !DILocalVariable(name: "pins", arg: 3, scope: !9562, file: !9307, line: 71, type: !118)
!9569 = !DILocalVariable(name: "cb", scope: !9562, file: !9307, line: 73, type: !1115)
!9570 = !DILocalVariable(name: "tmp", scope: !9562, file: !9307, line: 73, type: !1115)
!9571 = !DILocation(line: 0, scope: !9562)
!9572 = !DILocation(line: 75, column: 2, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9562, file: !9307, line: 75, column: 2)
!9574 = !DILocation(line: 0, scope: !9573)
!9575 = !DILocation(line: 76, column: 11, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9577, file: !9307, line: 76, column: 7)
!9577 = distinct !DILexicalBlock(scope: !9578, file: !9307, line: 75, column: 57)
!9578 = distinct !DILexicalBlock(scope: !9573, file: !9307, line: 75, column: 2)
!9579 = !DILocation(line: 76, column: 20, scope: !9576)
!9580 = !DILocation(line: 76, column: 7, scope: !9577)
!9581 = !DILocation(line: 77, column: 4, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9583, file: !9307, line: 77, column: 4)
!9583 = distinct !DILexicalBlock(scope: !9584, file: !9307, line: 77, column: 4)
!9584 = distinct !DILexicalBlock(scope: !9576, file: !9307, line: 76, column: 28)
!9585 = !DILocation(line: 77, column: 4, scope: !9583)
!9586 = !DILocation(line: 77, column: 4, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9582, file: !9307, line: 77, column: 4)
!9588 = !DILocation(line: 78, column: 4, scope: !9584)
!9589 = !DILocation(line: 79, column: 3, scope: !9584)
!9590 = !DILocation(line: 75, column: 2, scope: !9578)
!9591 = !DILocation(line: 81, column: 1, scope: !9562)
!9592 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6079, file: !6079, line: 710, type: !7664, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9593)
!9593 = !{!9594}
!9594 = !DILocalVariable(name: "Line", arg: 1, scope: !9592, file: !6079, line: 710, type: !118)
!9595 = !DILocation(line: 0, scope: !9592)
!9596 = !DILocation(line: 712, column: 21, scope: !9592)
!9597 = !DILocation(line: 0, scope: !9546, inlinedAt: !9598)
!9598 = distinct !DILocation(line: 712, column: 76, scope: !9592)
!9599 = !DILocation(line: 380, column: 4, scope: !9546, inlinedAt: !9598)
!9600 = !DILocation(line: 0, scope: !9554, inlinedAt: !9601)
!9601 = distinct !DILocation(line: 712, column: 76, scope: !9592)
!9602 = !DILocation(line: 414, column: 7, scope: !9554, inlinedAt: !9601)
!9603 = !DILocation(line: 712, column: 73, scope: !9592)
!9604 = !DILocation(line: 712, column: 3, scope: !9592)
!9605 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9606, file: !9606, line: 910, type: !9607, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9609)
!9606 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9607 = !DISubroutineType(types: !9608)
!9608 = !{null, !1146, !118}
!9609 = !{!9610, !9611}
!9610 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9605, file: !9606, line: 910, type: !1146)
!9611 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9605, file: !9606, line: 910, type: !118)
!9612 = !DILocation(line: 0, scope: !9605)
!9613 = !DILocation(line: 912, column: 3, scope: !9605)
!9614 = !DILocation(line: 913, column: 1, scope: !9605)
!9615 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9606, file: !9606, line: 823, type: !9616, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9618)
!9616 = !DISubroutineType(types: !9617)
!9617 = !{!118, !1146}
!9618 = !{!9619}
!9619 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9615, file: !9606, line: 823, type: !1146)
!9620 = !DILocation(line: 0, scope: !9615)
!9621 = !DILocation(line: 825, column: 21, scope: !9615)
!9622 = !DILocation(line: 825, column: 3, scope: !9615)
!9623 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9606, file: !9606, line: 812, type: !9607, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9624)
!9624 = !{!9625, !9626}
!9625 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9623, file: !9606, line: 812, type: !1146)
!9626 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9623, file: !9606, line: 812, type: !118)
!9627 = !DILocation(line: 0, scope: !9623)
!9628 = !DILocation(line: 814, column: 3, scope: !9623)
!9629 = !DILocation(line: 815, column: 1, scope: !9623)
!9630 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9606, file: !9606, line: 771, type: !9616, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9631)
!9631 = !{!9632}
!9632 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9630, file: !9606, line: 771, type: !1146)
!9633 = !DILocation(line: 0, scope: !9630)
!9634 = !DILocation(line: 773, column: 21, scope: !9630)
!9635 = !DILocation(line: 773, column: 3, scope: !9630)
!9636 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1215, file: !1215, line: 47, type: !9637, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9639)
!9637 = !DISubroutineType(types: !9638)
!9638 = !{!119, !1089, !280}
!9639 = !{!9640, !9641}
!9640 = !DILocalVariable(name: "flags", arg: 1, scope: !9636, file: !1215, line: 47, type: !1089)
!9641 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9636, file: !1215, line: 47, type: !280)
!9642 = !DILocation(line: 0, scope: !9636)
!9643 = !DILocation(line: 50, column: 13, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9636, file: !1215, line: 50, column: 6)
!9645 = !DILocation(line: 50, column: 28, scope: !9644)
!9646 = !DILocation(line: 50, column: 6, scope: !9636)
!9647 = !DILocation(line: 53, column: 11, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9644, file: !1215, line: 50, column: 34)
!9649 = !DILocation(line: 55, column: 14, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9648, file: !1215, line: 55, column: 7)
!9651 = !DILocation(line: 55, column: 35, scope: !9650)
!9652 = !DILocation(line: 55, column: 7, scope: !9648)
!9653 = !DILocation(line: 56, column: 14, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9655, file: !1215, line: 56, column: 8)
!9655 = distinct !DILexicalBlock(scope: !9650, file: !1215, line: 55, column: 41)
!9656 = !DILocation(line: 56, column: 8, scope: !9655)
!9657 = !DILocation(line: 0, scope: !9650)
!9658 = !DILocation(line: 66, column: 14, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9648, file: !1215, line: 66, column: 7)
!9660 = !DILocation(line: 66, column: 30, scope: !9659)
!9661 = !DILocation(line: 66, column: 7, scope: !9648)
!9662 = !DILocation(line: 67, column: 12, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9659, file: !1215, line: 66, column: 36)
!9664 = !DILocation(line: 68, column: 3, scope: !9663)
!9665 = !DILocation(line: 68, column: 21, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9659, file: !1215, line: 68, column: 14)
!9667 = !DILocation(line: 68, column: 39, scope: !9666)
!9668 = !DILocation(line: 68, column: 14, scope: !9659)
!9669 = !DILocation(line: 69, column: 12, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9666, file: !1215, line: 68, column: 45)
!9671 = !DILocation(line: 70, column: 3, scope: !9670)
!9672 = !DILocation(line: 72, column: 21, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9644, file: !1215, line: 72, column: 14)
!9674 = !DILocation(line: 72, column: 35, scope: !9673)
!9675 = !DILocation(line: 72, column: 14, scope: !9644)
!9676 = !DILocation(line: 77, column: 14, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9678, file: !1215, line: 77, column: 7)
!9678 = distinct !DILexicalBlock(scope: !9673, file: !1215, line: 72, column: 41)
!9679 = !DILocation(line: 77, column: 30, scope: !9677)
!9680 = !DILocation(line: 77, column: 7, scope: !9678)
!9681 = !DILocation(line: 0, scope: !9644)
!9682 = !DILocation(line: 90, column: 1, scope: !9636)
!9683 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1215, file: !1215, line: 157, type: !9684, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9686)
!9684 = !DISubroutineType(types: !9685)
!9685 = !{null, !1073, !119, !119, !119}
!9686 = !{!9687, !9688, !9689, !9690, !9691, !9692, !9693, !9694, !9695, !9696, !9697}
!9687 = !DILocalVariable(name: "dev", arg: 1, scope: !9683, file: !1215, line: 157, type: !1073)
!9688 = !DILocalVariable(name: "pin", arg: 2, scope: !9683, file: !1215, line: 157, type: !119)
!9689 = !DILocalVariable(name: "conf", arg: 3, scope: !9683, file: !1215, line: 158, type: !119)
!9690 = !DILocalVariable(name: "func", arg: 4, scope: !9683, file: !1215, line: 158, type: !119)
!9691 = !DILocalVariable(name: "cfg", scope: !9683, file: !1215, line: 160, type: !9191)
!9692 = !DILocalVariable(name: "gpio", scope: !9683, file: !1215, line: 161, type: !1146)
!9693 = !DILocalVariable(name: "pin_ll", scope: !9683, file: !1215, line: 163, type: !119)
!9694 = !DILocalVariable(name: "mode", scope: !9683, file: !1215, line: 227, type: !32)
!9695 = !DILocalVariable(name: "otype", scope: !9683, file: !1215, line: 227, type: !32)
!9696 = !DILocalVariable(name: "ospeed", scope: !9683, file: !1215, line: 227, type: !32)
!9697 = !DILocalVariable(name: "pupd", scope: !9683, file: !1215, line: 227, type: !32)
!9698 = !DILocation(line: 0, scope: !9683)
!9699 = !DILocation(line: 160, column: 45, scope: !9683)
!9700 = !DILocation(line: 161, column: 44, scope: !9683)
!9701 = !DILocation(line: 163, column: 15, scope: !9683)
!9702 = !DILocation(line: 229, column: 14, scope: !9683)
!9703 = !DILocation(line: 246, column: 47, scope: !9683)
!9704 = !DILocation(line: 246, column: 2, scope: !9683)
!9705 = !DILocation(line: 248, column: 43, scope: !9683)
!9706 = !DILocation(line: 248, column: 2, scope: !9683)
!9707 = !DILocation(line: 250, column: 40, scope: !9683)
!9708 = !DILocation(line: 250, column: 2, scope: !9683)
!9709 = !DILocation(line: 252, column: 11, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9683, file: !1215, line: 252, column: 6)
!9711 = !DILocation(line: 252, column: 6, scope: !9683)
!9712 = !DILocation(line: 253, column: 11, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9714, file: !1215, line: 253, column: 7)
!9714 = distinct !DILexicalBlock(scope: !9710, file: !1215, line: 252, column: 36)
!9715 = !DILocation(line: 253, column: 7, scope: !9714)
!9716 = !DILocation(line: 254, column: 4, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9713, file: !1215, line: 253, column: 16)
!9718 = !DILocation(line: 255, column: 3, scope: !9717)
!9719 = !DILocation(line: 256, column: 4, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9713, file: !1215, line: 255, column: 10)
!9721 = !DILocation(line: 260, column: 40, scope: !9683)
!9722 = !DILocation(line: 260, column: 2, scope: !9683)
!9723 = !DILocation(line: 265, column: 1, scope: !9683)
!9724 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1215, file: !1215, line: 137, type: !9526, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9725)
!9725 = !{!9726, !9727}
!9726 = !DILocalVariable(name: "pin", arg: 1, scope: !9724, file: !1215, line: 137, type: !119)
!9727 = !DILocalVariable(name: "pinval", scope: !9724, file: !1215, line: 139, type: !118)
!9728 = !DILocation(line: 0, scope: !9724)
!9729 = !DILocation(line: 149, column: 13, scope: !9724)
!9730 = !DILocation(line: 151, column: 2, scope: !9724)
!9731 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9606, file: !9606, line: 342, type: !9732, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9734)
!9732 = !DISubroutineType(types: !9733)
!9733 = !{null, !1146, !118, !118}
!9734 = !{!9735, !9736, !9737}
!9735 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9731, file: !9606, line: 342, type: !1146)
!9736 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9731, file: !9606, line: 342, type: !118)
!9737 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9731, file: !9606, line: 342, type: !118)
!9738 = !DILocation(line: 0, scope: !9731)
!9739 = !DILocation(line: 344, column: 3, scope: !9731)
!9740 = !DILocation(line: 345, column: 1, scope: !9731)
!9741 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9606, file: !9606, line: 413, type: !9732, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9742)
!9742 = !{!9743, !9744, !9745}
!9743 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9741, file: !9606, line: 413, type: !1146)
!9744 = !DILocalVariable(name: "Pin", arg: 2, scope: !9741, file: !9606, line: 413, type: !118)
!9745 = !DILocalVariable(name: "Speed", arg: 3, scope: !9741, file: !9606, line: 413, type: !118)
!9746 = !DILocation(line: 0, scope: !9741)
!9747 = !DILocation(line: 415, column: 3, scope: !9741)
!9748 = !DILocation(line: 0, scope: !9546, inlinedAt: !9749)
!9749 = distinct !DILocation(line: 415, column: 3, scope: !9741)
!9750 = !DILocation(line: 380, column: 4, scope: !9546, inlinedAt: !9749)
!9751 = !DILocation(line: 0, scope: !9554, inlinedAt: !9752)
!9752 = distinct !DILocation(line: 415, column: 3, scope: !9741)
!9753 = !DILocation(line: 414, column: 7, scope: !9554, inlinedAt: !9752)
!9754 = !DILocation(line: 0, scope: !9546, inlinedAt: !9755)
!9755 = distinct !DILocation(line: 415, column: 3, scope: !9741)
!9756 = !DILocation(line: 0, scope: !9554, inlinedAt: !9757)
!9757 = distinct !DILocation(line: 415, column: 3, scope: !9741)
!9758 = !DILocation(line: 417, column: 1, scope: !9741)
!9759 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9606, file: !9606, line: 484, type: !9732, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9760)
!9760 = !{!9761, !9762, !9763}
!9761 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9759, file: !9606, line: 484, type: !1146)
!9762 = !DILocalVariable(name: "Pin", arg: 2, scope: !9759, file: !9606, line: 484, type: !118)
!9763 = !DILocalVariable(name: "Pull", arg: 3, scope: !9759, file: !9606, line: 484, type: !118)
!9764 = !DILocation(line: 0, scope: !9759)
!9765 = !DILocation(line: 486, column: 3, scope: !9759)
!9766 = !DILocation(line: 0, scope: !9546, inlinedAt: !9767)
!9767 = distinct !DILocation(line: 486, column: 3, scope: !9759)
!9768 = !DILocation(line: 380, column: 4, scope: !9546, inlinedAt: !9767)
!9769 = !DILocation(line: 0, scope: !9554, inlinedAt: !9770)
!9770 = distinct !DILocation(line: 486, column: 3, scope: !9759)
!9771 = !DILocation(line: 414, column: 7, scope: !9554, inlinedAt: !9770)
!9772 = !DILocation(line: 0, scope: !9546, inlinedAt: !9773)
!9773 = distinct !DILocation(line: 486, column: 3, scope: !9759)
!9774 = !DILocation(line: 0, scope: !9554, inlinedAt: !9775)
!9775 = distinct !DILocation(line: 486, column: 3, scope: !9759)
!9776 = !DILocation(line: 487, column: 1, scope: !9759)
!9777 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9606, file: !9606, line: 556, type: !9732, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9778)
!9778 = !{!9779, !9780, !9781}
!9779 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9777, file: !9606, line: 556, type: !1146)
!9780 = !DILocalVariable(name: "Pin", arg: 2, scope: !9777, file: !9606, line: 556, type: !118)
!9781 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9777, file: !9606, line: 556, type: !118)
!9782 = !DILocation(line: 0, scope: !9777)
!9783 = !DILocation(line: 558, column: 3, scope: !9777)
!9784 = !DILocation(line: 0, scope: !9546, inlinedAt: !9785)
!9785 = distinct !DILocation(line: 558, column: 3, scope: !9777)
!9786 = !DILocation(line: 380, column: 4, scope: !9546, inlinedAt: !9785)
!9787 = !DILocation(line: 0, scope: !9554, inlinedAt: !9788)
!9788 = distinct !DILocation(line: 558, column: 3, scope: !9777)
!9789 = !DILocation(line: 414, column: 7, scope: !9554, inlinedAt: !9788)
!9790 = !DILocation(line: 0, scope: !9546, inlinedAt: !9791)
!9791 = distinct !DILocation(line: 558, column: 3, scope: !9777)
!9792 = !DILocation(line: 0, scope: !9554, inlinedAt: !9793)
!9793 = distinct !DILocation(line: 558, column: 3, scope: !9777)
!9794 = !DILocation(line: 560, column: 1, scope: !9777)
!9795 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9606, file: !9606, line: 633, type: !9732, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9796)
!9796 = !{!9797, !9798, !9799}
!9797 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9795, file: !9606, line: 633, type: !1146)
!9798 = !DILocalVariable(name: "Pin", arg: 2, scope: !9795, file: !9606, line: 633, type: !118)
!9799 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9795, file: !9606, line: 633, type: !118)
!9800 = !DILocation(line: 0, scope: !9795)
!9801 = !DILocation(line: 635, column: 3, scope: !9795)
!9802 = !DILocation(line: 0, scope: !9546, inlinedAt: !9803)
!9803 = distinct !DILocation(line: 635, column: 3, scope: !9795)
!9804 = !DILocation(line: 380, column: 4, scope: !9546, inlinedAt: !9803)
!9805 = !DILocation(line: 0, scope: !9554, inlinedAt: !9806)
!9806 = distinct !DILocation(line: 635, column: 3, scope: !9795)
!9807 = !DILocation(line: 414, column: 7, scope: !9554, inlinedAt: !9806)
!9808 = !DILocation(line: 0, scope: !9546, inlinedAt: !9809)
!9809 = distinct !DILocation(line: 635, column: 3, scope: !9795)
!9810 = !DILocation(line: 0, scope: !9554, inlinedAt: !9811)
!9811 = distinct !DILocation(line: 635, column: 3, scope: !9795)
!9812 = !DILocation(line: 637, column: 1, scope: !9795)
!9813 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9606, file: !9606, line: 273, type: !9732, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9814)
!9814 = !{!9815, !9816, !9817}
!9815 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9813, file: !9606, line: 273, type: !1146)
!9816 = !DILocalVariable(name: "Pin", arg: 2, scope: !9813, file: !9606, line: 273, type: !118)
!9817 = !DILocalVariable(name: "Mode", arg: 3, scope: !9813, file: !9606, line: 273, type: !118)
!9818 = !DILocation(line: 0, scope: !9813)
!9819 = !DILocation(line: 275, column: 3, scope: !9813)
!9820 = !DILocation(line: 0, scope: !9546, inlinedAt: !9821)
!9821 = distinct !DILocation(line: 275, column: 3, scope: !9813)
!9822 = !DILocation(line: 380, column: 4, scope: !9546, inlinedAt: !9821)
!9823 = !DILocation(line: 0, scope: !9554, inlinedAt: !9824)
!9824 = distinct !DILocation(line: 275, column: 3, scope: !9813)
!9825 = !DILocation(line: 414, column: 7, scope: !9554, inlinedAt: !9824)
!9826 = !DILocation(line: 0, scope: !9546, inlinedAt: !9827)
!9827 = distinct !DILocation(line: 275, column: 3, scope: !9813)
!9828 = !DILocation(line: 0, scope: !9554, inlinedAt: !9829)
!9829 = distinct !DILocation(line: 275, column: 3, scope: !9813)
!9830 = !DILocation(line: 276, column: 1, scope: !9813)
!9831 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1215, file: !1215, line: 698, type: !1228, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9832)
!9832 = !{!9833, !9834, !9835}
!9833 = !DILocalVariable(name: "dev", arg: 1, scope: !9831, file: !1215, line: 698, type: !1073)
!9834 = !DILocalVariable(name: "data", scope: !9831, file: !1215, line: 700, type: !9258)
!9835 = !DILocalVariable(name: "ret", scope: !9831, file: !1215, line: 701, type: !119)
!9836 = !DILocation(line: 0, scope: !9831)
!9837 = !DILocation(line: 700, column: 38, scope: !9831)
!9838 = !DILocation(line: 703, column: 8, scope: !9831)
!9839 = !DILocation(line: 703, column: 12, scope: !9831)
!9840 = !DILocation(line: 705, column: 7, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9831, file: !1215, line: 705, column: 6)
!9842 = !DILocation(line: 705, column: 6, scope: !9831)
!9843 = !DILocation(line: 722, column: 8, scope: !9831)
!9844 = !DILocation(line: 723, column: 10, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9831, file: !1215, line: 723, column: 6)
!9846 = !DILocation(line: 723, column: 6, scope: !9831)
!9847 = !DILocation(line: 731, column: 1, scope: !9831)
!9848 = distinct !DISubprogram(name: "device_is_ready", scope: !9036, file: !9036, line: 47, type: !9849, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9851)
!9849 = !DISubroutineType(types: !9850)
!9850 = !{!345, !1073}
!9851 = !{!9852}
!9852 = !DILocalVariable(name: "dev", arg: 1, scope: !9848, file: !9036, line: 47, type: !1073)
!9853 = !DILocation(line: 0, scope: !9848)
!9854 = !DILocation(line: 55, column: 2, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9848, file: !9036, line: 55, column: 2)
!9856 = !{i64 2155289067}
!9857 = !DILocation(line: 56, column: 9, scope: !9848)
!9858 = !DILocation(line: 56, column: 2, scope: !9848)
!9859 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1215, file: !1215, line: 270, type: !9860, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9862)
!9860 = !DISubroutineType(types: !9861)
!9861 = !{!119, !1073, !345}
!9862 = !{!9863, !9864, !9865, !9866, !9867}
!9863 = !DILocalVariable(name: "dev", arg: 1, scope: !9859, file: !1215, line: 270, type: !1073)
!9864 = !DILocalVariable(name: "on", arg: 2, scope: !9859, file: !1215, line: 270, type: !345)
!9865 = !DILocalVariable(name: "cfg", scope: !9859, file: !1215, line: 272, type: !9191)
!9866 = !DILocalVariable(name: "ret", scope: !9859, file: !1215, line: 273, type: !119)
!9867 = !DILocalVariable(name: "clk", scope: !9859, file: !1215, line: 278, type: !9493)
!9868 = !DILocation(line: 0, scope: !9859)
!9869 = !DILocation(line: 272, column: 45, scope: !9859)
!9870 = !DILocation(line: 282, column: 38, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9872, file: !1215, line: 280, column: 10)
!9872 = distinct !DILexicalBlock(scope: !9859, file: !1215, line: 280, column: 6)
!9873 = !DILocation(line: 282, column: 6, scope: !9871)
!9874 = !DILocation(line: 281, column: 9, scope: !9871)
!9875 = !DILocation(line: 293, column: 1, scope: !9859)
!9876 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !9849, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9877)
!9877 = !{!9878}
!9878 = !DILocalVariable(name: "dev", arg: 1, scope: !9876, file: !334, line: 730, type: !1073)
!9879 = !DILocation(line: 0, scope: !9876)
!9880 = !DILocation(line: 732, column: 9, scope: !9876)
!9881 = !DILocation(line: 732, column: 2, scope: !9876)
!9882 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1215, file: !1215, line: 496, type: !9883, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1044, retainedNodes: !9885)
!9883 = !DISubroutineType(types: !9884)
!9884 = !{!119, !1073, !119, !119, !119}
!9885 = !{!9886, !9887, !9888, !9889, !9890, !9891}
!9886 = !DILocalVariable(name: "dev", arg: 1, scope: !9882, file: !1215, line: 496, type: !1073)
!9887 = !DILocalVariable(name: "pin", arg: 2, scope: !9882, file: !1215, line: 496, type: !119)
!9888 = !DILocalVariable(name: "conf", arg: 3, scope: !9882, file: !1215, line: 496, type: !119)
!9889 = !DILocalVariable(name: "func", arg: 4, scope: !9882, file: !1215, line: 496, type: !119)
!9890 = !DILocalVariable(name: "ret", scope: !9882, file: !1215, line: 498, type: !119)
!9891 = !DILocalVariable(name: "gpio_out", scope: !9892, file: !1215, line: 508, type: !118)
!9892 = distinct !DILexicalBlock(scope: !9893, file: !1215, line: 507, column: 27)
!9893 = distinct !DILexicalBlock(scope: !9882, file: !1215, line: 507, column: 6)
!9894 = !DILocation(line: 0, scope: !9882)
!9895 = !DILocation(line: 505, column: 2, scope: !9882)
!9896 = !DILocation(line: 507, column: 11, scope: !9893)
!9897 = !DILocation(line: 507, column: 6, scope: !9882)
!9898 = !DILocation(line: 508, column: 28, scope: !9892)
!9899 = !DILocation(line: 0, scope: !9892)
!9900 = !DILocation(line: 510, column: 16, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9892, file: !1215, line: 510, column: 7)
!9902 = !DILocation(line: 0, scope: !9901)
!9903 = !DILocation(line: 510, column: 7, scope: !9892)
!9904 = !DILocation(line: 511, column: 4, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9901, file: !1215, line: 510, column: 32)
!9906 = !DILocation(line: 512, column: 3, scope: !9905)
!9907 = !DILocation(line: 513, column: 4, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9909, file: !1215, line: 512, column: 39)
!9909 = distinct !DILexicalBlock(scope: !9901, file: !1215, line: 512, column: 14)
!9910 = !DILocation(line: 514, column: 3, scope: !9908)
!9911 = !DILocation(line: 518, column: 1, scope: !9882)
!9912 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1488, file: !1488, line: 526, type: !1391, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !9913)
!9913 = !{!9914, !9915, !9916}
!9914 = !DILocalVariable(name: "dev", arg: 1, scope: !9912, file: !1488, line: 526, type: !1393)
!9915 = !DILocalVariable(name: "c", arg: 2, scope: !9912, file: !1488, line: 526, type: !1005)
!9916 = !DILocalVariable(name: "config", scope: !9912, file: !1488, line: 528, type: !9917)
!9917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 32)
!9918 = !DILocation(line: 0, scope: !9912)
!9919 = !DILocation(line: 528, column: 48, scope: !9912)
!9920 = !DILocation(line: 531, column: 40, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9912, file: !1488, line: 531, column: 6)
!9922 = !DILocation(line: 531, column: 6, scope: !9921)
!9923 = !DILocation(line: 531, column: 6, scope: !9912)
!9924 = !DILocation(line: 532, column: 34, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9921, file: !1488, line: 531, column: 48)
!9926 = !DILocation(line: 532, column: 3, scope: !9925)
!9927 = !DILocation(line: 533, column: 2, scope: !9925)
!9928 = !DILocation(line: 539, column: 42, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9912, file: !1488, line: 539, column: 6)
!9930 = !DILocation(line: 539, column: 7, scope: !9929)
!9931 = !DILocation(line: 539, column: 6, scope: !9912)
!9932 = !DILocation(line: 543, column: 52, scope: !9912)
!9933 = !DILocation(line: 543, column: 22, scope: !9912)
!9934 = !DILocation(line: 543, column: 5, scope: !9912)
!9935 = !DILocation(line: 545, column: 2, scope: !9912)
!9936 = !DILocation(line: 546, column: 1, scope: !9912)
!9937 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1488, file: !1488, line: 548, type: !1410, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !9938)
!9938 = !{!9939, !9940, !9941, !9942}
!9939 = !DILocalVariable(name: "dev", arg: 1, scope: !9937, file: !1488, line: 548, type: !1393)
!9940 = !DILocalVariable(name: "c", arg: 2, scope: !9937, file: !1488, line: 549, type: !186)
!9941 = !DILocalVariable(name: "config", scope: !9937, file: !1488, line: 551, type: !9917)
!9942 = !DILocalVariable(name: "key", scope: !9937, file: !1488, line: 555, type: !32)
!9943 = !DILocation(line: 0, scope: !9937)
!9944 = !DILocation(line: 551, column: 48, scope: !9937)
!9945 = !DILocation(line: 562, column: 2, scope: !9937)
!9946 = !DILocation(line: 563, column: 41, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9948, file: !1488, line: 563, column: 7)
!9948 = distinct !DILexicalBlock(scope: !9937, file: !1488, line: 562, column: 12)
!9949 = !DILocation(line: 563, column: 7, scope: !9947)
!9950 = !DILocation(line: 563, column: 7, scope: !9948)
!9951 = !DILocation(line: 55, column: 2, scope: !9952, inlinedAt: !9956)
!9952 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6058, file: !6058, line: 42, type: !6059, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !9953)
!9953 = !{!9954, !9955}
!9954 = !DILocalVariable(name: "key", scope: !9952, file: !6058, line: 44, type: !32)
!9955 = !DILocalVariable(name: "tmp", scope: !9952, file: !6058, line: 53, type: !32)
!9956 = distinct !DILocation(line: 564, column: 10, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9947, file: !1488, line: 563, column: 49)
!9958 = !{i64 2331211}
!9959 = !DILocation(line: 0, scope: !9952, inlinedAt: !9956)
!9960 = !DILocation(line: 565, column: 42, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9957, file: !1488, line: 565, column: 8)
!9962 = !DILocation(line: 565, column: 8, scope: !9961)
!9963 = !DILocation(line: 565, column: 8, scope: !9957)
!9964 = !DILocalVariable(name: "key", arg: 1, scope: !9965, file: !6058, line: 84, type: !32)
!9965 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6058, file: !6058, line: 84, type: !6069, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !9966)
!9966 = !{!9964}
!9967 = !DILocation(line: 0, scope: !9965, inlinedAt: !9968)
!9968 = distinct !DILocation(line: 568, column: 4, scope: !9957)
!9969 = !DILocation(line: 95, column: 2, scope: !9965, inlinedAt: !9968)
!9970 = !{i64 2332028}
!9971 = !DILocation(line: 569, column: 3, scope: !9957)
!9972 = distinct !{!9972, !9945, !9973}
!9973 = !DILocation(line: 570, column: 2, scope: !9937)
!9974 = !DILocation(line: 592, column: 33, scope: !9937)
!9975 = !DILocation(line: 592, column: 2, scope: !9937)
!9976 = !DILocation(line: 0, scope: !9965, inlinedAt: !9977)
!9977 = distinct !DILocation(line: 593, column: 2, scope: !9937)
!9978 = !DILocation(line: 95, column: 2, scope: !9965, inlinedAt: !9977)
!9979 = !DILocation(line: 594, column: 1, scope: !9937)
!9980 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1488, file: !1488, line: 596, type: !1414, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !9981)
!9981 = !{!9982, !9983, !9984}
!9982 = !DILocalVariable(name: "dev", arg: 1, scope: !9980, file: !1488, line: 596, type: !1393)
!9983 = !DILocalVariable(name: "config", scope: !9980, file: !1488, line: 598, type: !9917)
!9984 = !DILocalVariable(name: "err", scope: !9980, file: !1488, line: 599, type: !118)
!9985 = !DILocation(line: 0, scope: !9980)
!9986 = !DILocation(line: 598, column: 48, scope: !9980)
!9987 = !DILocation(line: 606, column: 40, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9980, file: !1488, line: 606, column: 6)
!9989 = !DILocation(line: 606, column: 6, scope: !9988)
!9990 = !DILocation(line: 606, column: 6, scope: !9980)
!9991 = !DILocation(line: 610, column: 39, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9980, file: !1488, line: 610, column: 6)
!9993 = !DILocation(line: 610, column: 6, scope: !9992)
!9994 = !DILocation(line: 610, column: 6, scope: !9980)
!9995 = !DILocation(line: 614, column: 39, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9980, file: !1488, line: 614, column: 6)
!9997 = !DILocation(line: 614, column: 6, scope: !9996)
!9998 = !DILocation(line: 614, column: 6, scope: !9980)
!9999 = !DILocation(line: 619, column: 40, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9980, file: !1488, line: 619, column: 6)
!10001 = !DILocation(line: 619, column: 6, scope: !10000)
!10002 = !DILocation(line: 619, column: 6, scope: !9980)
!10003 = !DILocation(line: 623, column: 10, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9980, file: !1488, line: 623, column: 6)
!10005 = !DILocation(line: 623, column: 6, scope: !9980)
!10006 = !DILocation(line: 624, column: 34, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !10004, file: !1488, line: 623, column: 24)
!10008 = !DILocation(line: 624, column: 3, scope: !10007)
!10009 = !DILocation(line: 625, column: 2, scope: !10007)
!10010 = !DILocation(line: 632, column: 10, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !9980, file: !1488, line: 632, column: 6)
!10012 = !DILocation(line: 632, column: 6, scope: !9980)
!10013 = !DILocation(line: 633, column: 34, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10011, file: !1488, line: 632, column: 32)
!10015 = !DILocation(line: 633, column: 3, scope: !10014)
!10016 = !DILocation(line: 634, column: 2, scope: !10014)
!10017 = !DILocation(line: 636, column: 10, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !9980, file: !1488, line: 636, column: 6)
!10019 = !DILocation(line: 636, column: 6, scope: !9980)
!10020 = !DILocation(line: 637, column: 33, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10018, file: !1488, line: 636, column: 31)
!10022 = !DILocation(line: 637, column: 3, scope: !10021)
!10023 = !DILocation(line: 638, column: 2, scope: !10021)
!10024 = !DILocation(line: 640, column: 10, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !9980, file: !1488, line: 640, column: 6)
!10026 = !DILocation(line: 640, column: 6, scope: !9980)
!10027 = !DILocation(line: 641, column: 33, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10025, file: !1488, line: 640, column: 32)
!10029 = !DILocation(line: 641, column: 3, scope: !10028)
!10030 = !DILocation(line: 642, column: 2, scope: !10028)
!10031 = !DILocation(line: 646, column: 32, scope: !9980)
!10032 = !DILocation(line: 646, column: 2, scope: !9980)
!10033 = !DILocation(line: 648, column: 2, scope: !9980)
!10034 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1488, file: !1488, line: 419, type: !1418, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10035)
!10035 = !{!10036, !10037, !10038, !10039, !10041, !10042, !10043, !10044}
!10036 = !DILocalVariable(name: "dev", arg: 1, scope: !10034, file: !1488, line: 419, type: !1393)
!10037 = !DILocalVariable(name: "cfg", arg: 2, scope: !10034, file: !1488, line: 420, type: !1420)
!10038 = !DILocalVariable(name: "config", scope: !10034, file: !1488, line: 422, type: !9917)
!10039 = !DILocalVariable(name: "data", scope: !10034, file: !1488, line: 423, type: !10040)
!10040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 32)
!10041 = !DILocalVariable(name: "parity", scope: !10034, file: !1488, line: 424, type: !6654)
!10042 = !DILocalVariable(name: "stopbits", scope: !10034, file: !1488, line: 425, type: !6654)
!10043 = !DILocalVariable(name: "databits", scope: !10034, file: !1488, line: 426, type: !6654)
!10044 = !DILocalVariable(name: "flowctrl", scope: !10034, file: !1488, line: 428, type: !6654)
!10045 = !DILocation(line: 0, scope: !10034)
!10046 = !DILocation(line: 422, column: 48, scope: !10034)
!10047 = !DILocation(line: 423, column: 38, scope: !10034)
!10048 = !DILocation(line: 424, column: 56, scope: !10034)
!10049 = !DILocation(line: 424, column: 51, scope: !10034)
!10050 = !DILocation(line: 424, column: 26, scope: !10034)
!10051 = !DILocation(line: 425, column: 60, scope: !10034)
!10052 = !DILocation(line: 425, column: 55, scope: !10034)
!10053 = !DILocation(line: 425, column: 28, scope: !10034)
!10054 = !DILocation(line: 426, column: 60, scope: !10034)
!10055 = !DILocation(line: 426, column: 55, scope: !10034)
!10056 = !DILocation(line: 426, column: 28, scope: !10034)
!10057 = !DILocation(line: 428, column: 58, scope: !10034)
!10058 = !DILocation(line: 428, column: 53, scope: !10034)
!10059 = !DILocation(line: 428, column: 28, scope: !10034)
!10060 = !DILocation(line: 431, column: 44, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10034, file: !1488, line: 431, column: 6)
!10062 = !DILocation(line: 438, column: 22, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10034, file: !1488, line: 437, column: 6)
!10064 = !DILocation(line: 437, column: 6, scope: !10034)
!10065 = !DILocation(line: 448, column: 6, scope: !10034)
!10066 = !DILocation(line: 465, column: 47, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10034, file: !1488, line: 465, column: 6)
!10068 = !DILocation(line: 475, column: 21, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10034, file: !1488, line: 475, column: 6)
!10070 = !DILocation(line: 475, column: 6, scope: !10034)
!10071 = !DILocation(line: 476, column: 8, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10073, file: !1488, line: 476, column: 7)
!10073 = distinct !DILexicalBlock(scope: !10069, file: !1488, line: 475, column: 49)
!10074 = !DILocation(line: 477, column: 34, scope: !10072)
!10075 = !DILocation(line: 476, column: 7, scope: !10073)
!10076 = !DILocation(line: 482, column: 27, scope: !10034)
!10077 = !DILocation(line: 482, column: 2, scope: !10034)
!10078 = !DILocation(line: 484, column: 16, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10034, file: !1488, line: 484, column: 6)
!10080 = !DILocation(line: 484, column: 13, scope: !10079)
!10081 = !DILocation(line: 484, column: 6, scope: !10034)
!10082 = !DILocation(line: 485, column: 3, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10079, file: !1488, line: 484, column: 44)
!10084 = !DILocation(line: 486, column: 2, scope: !10083)
!10085 = !DILocation(line: 488, column: 18, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10034, file: !1488, line: 488, column: 6)
!10087 = !DILocation(line: 488, column: 15, scope: !10086)
!10088 = !DILocation(line: 488, column: 6, scope: !10034)
!10089 = !DILocation(line: 489, column: 3, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10086, file: !1488, line: 488, column: 48)
!10091 = !DILocation(line: 490, column: 2, scope: !10090)
!10092 = !DILocation(line: 492, column: 18, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10034, file: !1488, line: 492, column: 6)
!10094 = !DILocation(line: 492, column: 15, scope: !10093)
!10095 = !DILocation(line: 492, column: 6, scope: !10034)
!10096 = !DILocation(line: 493, column: 3, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10093, file: !1488, line: 492, column: 48)
!10098 = !DILocation(line: 494, column: 2, scope: !10097)
!10099 = !DILocation(line: 496, column: 18, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10034, file: !1488, line: 496, column: 6)
!10101 = !DILocation(line: 496, column: 15, scope: !10100)
!10102 = !DILocation(line: 496, column: 6, scope: !10034)
!10103 = !DILocation(line: 497, column: 3, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10100, file: !1488, line: 496, column: 46)
!10105 = !DILocation(line: 498, column: 2, scope: !10104)
!10106 = !DILocation(line: 500, column: 11, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10034, file: !1488, line: 500, column: 6)
!10108 = !DILocation(line: 500, column: 29, scope: !10107)
!10109 = !DILocation(line: 500, column: 20, scope: !10107)
!10110 = !DILocation(line: 500, column: 6, scope: !10034)
!10111 = !DILocation(line: 501, column: 3, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10107, file: !1488, line: 500, column: 40)
!10113 = !DILocation(line: 502, column: 26, scope: !10112)
!10114 = !DILocation(line: 502, column: 19, scope: !10112)
!10115 = !DILocation(line: 503, column: 2, scope: !10112)
!10116 = !DILocation(line: 505, column: 26, scope: !10034)
!10117 = !DILocation(line: 505, column: 2, scope: !10034)
!10118 = !DILocation(line: 506, column: 2, scope: !10034)
!10119 = !DILocation(line: 507, column: 1, scope: !10034)
!10120 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1488, file: !1488, line: 509, type: !1431, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10121)
!10121 = !{!10122, !10123, !10124}
!10122 = !DILocalVariable(name: "dev", arg: 1, scope: !10120, file: !1488, line: 509, type: !1393)
!10123 = !DILocalVariable(name: "cfg", arg: 2, scope: !10120, file: !1488, line: 510, type: !1433)
!10124 = !DILocalVariable(name: "data", scope: !10120, file: !1488, line: 512, type: !10040)
!10125 = !DILocation(line: 0, scope: !10120)
!10126 = !DILocation(line: 512, column: 38, scope: !10120)
!10127 = !DILocation(line: 514, column: 24, scope: !10120)
!10128 = !DILocation(line: 514, column: 7, scope: !10120)
!10129 = !DILocation(line: 514, column: 16, scope: !10120)
!10130 = !DILocation(line: 515, column: 41, scope: !10120)
!10131 = !{i32 0, i32 1537}
!10132 = !DILocation(line: 515, column: 16, scope: !10120)
!10133 = !DILocation(line: 515, column: 7, scope: !10120)
!10134 = !DILocation(line: 515, column: 14, scope: !10120)
!10135 = !DILocation(line: 517, column: 3, scope: !10120)
!10136 = !{i32 0, i32 12289}
!10137 = !DILocation(line: 516, column: 19, scope: !10120)
!10138 = !DILocation(line: 516, column: 7, scope: !10120)
!10139 = !DILocation(line: 516, column: 17, scope: !10120)
!10140 = !DILocation(line: 519, column: 3, scope: !10120)
!10141 = !DILocation(line: 519, column: 33, scope: !10120)
!10142 = !DILocation(line: 518, column: 19, scope: !10120)
!10143 = !DILocation(line: 518, column: 7, scope: !10120)
!10144 = !DILocation(line: 518, column: 17, scope: !10120)
!10145 = !DILocation(line: 521, column: 3, scope: !10120)
!10146 = !{i32 0, i32 769}
!10147 = !DILocation(line: 520, column: 19, scope: !10120)
!10148 = !DILocation(line: 520, column: 7, scope: !10120)
!10149 = !DILocation(line: 520, column: 17, scope: !10120)
!10150 = !DILocation(line: 522, column: 2, scope: !10120)
!10151 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1488, file: !1488, line: 205, type: !10152, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10154)
!10152 = !DISubroutineType(types: !10153)
!10153 = !{!118, !1393}
!10154 = !{!10155, !10156}
!10155 = !DILocalVariable(name: "dev", arg: 1, scope: !10151, file: !1488, line: 205, type: !1393)
!10156 = !DILocalVariable(name: "config", scope: !10151, file: !1488, line: 207, type: !9917)
!10157 = !DILocation(line: 0, scope: !10151)
!10158 = !DILocation(line: 207, column: 48, scope: !10151)
!10159 = !DILocation(line: 209, column: 36, scope: !10151)
!10160 = !DILocation(line: 209, column: 9, scope: !10151)
!10161 = !DILocation(line: 209, column: 2, scope: !10151)
!10162 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1488, file: !1488, line: 270, type: !10163, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10165)
!10163 = !DISubroutineType(types: !10164)
!10164 = !{!1359, !118}
!10165 = !{!10166}
!10166 = !DILocalVariable(name: "parity", arg: 1, scope: !10162, file: !1488, line: 270, type: !118)
!10167 = !DILocation(line: 0, scope: !10162)
!10168 = !DILocation(line: 272, column: 2, scope: !10162)
!10169 = !DILocation(line: 281, column: 1, scope: !10162)
!10170 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1488, file: !1488, line: 220, type: !10152, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10171)
!10171 = !{!10172, !10173}
!10172 = !DILocalVariable(name: "dev", arg: 1, scope: !10170, file: !1488, line: 220, type: !1393)
!10173 = !DILocalVariable(name: "config", scope: !10170, file: !1488, line: 222, type: !9917)
!10174 = !DILocation(line: 0, scope: !10170)
!10175 = !DILocation(line: 222, column: 48, scope: !10170)
!10176 = !DILocation(line: 224, column: 44, scope: !10170)
!10177 = !DILocation(line: 224, column: 9, scope: !10170)
!10178 = !DILocation(line: 224, column: 2, scope: !10170)
!10179 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1488, file: !1488, line: 304, type: !10180, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10182)
!10180 = !DISubroutineType(types: !10181)
!10181 = !{!1373, !118}
!10182 = !{!10183}
!10183 = !DILocalVariable(name: "sb", arg: 1, scope: !10179, file: !1488, line: 304, type: !118)
!10184 = !DILocation(line: 0, scope: !10179)
!10185 = !DILocation(line: 306, column: 2, scope: !10179)
!10186 = !DILocation(line: 0, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10179, file: !1488, line: 306, column: 14)
!10188 = !DILocation(line: 323, column: 1, scope: !10179)
!10189 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1488, file: !1488, line: 235, type: !10152, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10190)
!10190 = !{!10191, !10192}
!10191 = !DILocalVariable(name: "dev", arg: 1, scope: !10189, file: !1488, line: 235, type: !1393)
!10192 = !DILocalVariable(name: "config", scope: !10189, file: !1488, line: 237, type: !9917)
!10193 = !DILocation(line: 0, scope: !10189)
!10194 = !DILocation(line: 237, column: 48, scope: !10189)
!10195 = !DILocation(line: 239, column: 39, scope: !10189)
!10196 = !DILocation(line: 239, column: 9, scope: !10189)
!10197 = !DILocation(line: 239, column: 2, scope: !10189)
!10198 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1488, file: !1488, line: 355, type: !10199, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10201)
!10199 = !DISubroutineType(types: !10200)
!10200 = !{!1366, !118, !118}
!10201 = !{!10202, !10203}
!10202 = !DILocalVariable(name: "db", arg: 1, scope: !10198, file: !1488, line: 355, type: !118)
!10203 = !DILocalVariable(name: "p", arg: 2, scope: !10198, file: !1488, line: 356, type: !118)
!10204 = !DILocation(line: 0, scope: !10198)
!10205 = !DILocation(line: 358, column: 2, scope: !10198)
!10206 = !DILocation(line: 384, column: 1, scope: !10198)
!10207 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1488, file: !1488, line: 250, type: !10152, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10208)
!10208 = !{!10209, !10210}
!10209 = !DILocalVariable(name: "dev", arg: 1, scope: !10207, file: !1488, line: 250, type: !1393)
!10210 = !DILocalVariable(name: "config", scope: !10207, file: !1488, line: 252, type: !9917)
!10211 = !DILocation(line: 0, scope: !10207)
!10212 = !DILocation(line: 252, column: 48, scope: !10207)
!10213 = !DILocation(line: 254, column: 40, scope: !10207)
!10214 = !DILocation(line: 254, column: 9, scope: !10207)
!10215 = !DILocation(line: 254, column: 2, scope: !10207)
!10216 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1488, file: !1488, line: 409, type: !10217, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10219)
!10217 = !DISubroutineType(types: !10218)
!10218 = !{!1379, !118}
!10219 = !{!10220}
!10220 = !DILocalVariable(name: "fc", arg: 1, scope: !10216, file: !1488, line: 409, type: !118)
!10221 = !DILocation(line: 0, scope: !10216)
!10222 = !DILocation(line: 411, column: 9, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10216, file: !1488, line: 411, column: 6)
!10224 = !DILocation(line: 416, column: 1, scope: !10216)
!10225 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10226, file: !10226, line: 967, type: !10227, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10229)
!10226 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10227 = !DISubroutineType(types: !10228)
!10228 = !{!118, !1434}
!10229 = !{!10230}
!10230 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10225, file: !10226, line: 967, type: !1434)
!10231 = !DILocation(line: 0, scope: !10225)
!10232 = !DILocation(line: 969, column: 21, scope: !10225)
!10233 = !DILocation(line: 969, column: 3, scope: !10225)
!10234 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10226, file: !10226, line: 601, type: !10227, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10235)
!10235 = !{!10236}
!10236 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10234, file: !10226, line: 601, type: !1434)
!10237 = !DILocation(line: 0, scope: !10234)
!10238 = !DILocation(line: 603, column: 21, scope: !10234)
!10239 = !DILocation(line: 603, column: 3, scope: !10234)
!10240 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10226, file: !10226, line: 820, type: !10227, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10241)
!10241 = !{!10242}
!10242 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10240, file: !10226, line: 820, type: !1434)
!10243 = !DILocation(line: 0, scope: !10240)
!10244 = !DILocation(line: 822, column: 21, scope: !10240)
!10245 = !DILocation(line: 822, column: 3, scope: !10240)
!10246 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10226, file: !10226, line: 547, type: !10227, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10247)
!10247 = !{!10248}
!10248 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10246, file: !10226, line: 547, type: !1434)
!10249 = !DILocation(line: 0, scope: !10246)
!10250 = !DILocation(line: 549, column: 21, scope: !10246)
!10251 = !DILocation(line: 549, column: 3, scope: !10246)
!10252 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1488, file: !1488, line: 257, type: !10253, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10255)
!10253 = !DISubroutineType(types: !10254)
!10254 = !{!118, !1359}
!10255 = !{!10256}
!10256 = !DILocalVariable(name: "parity", arg: 1, scope: !10252, file: !1488, line: 257, type: !1359)
!10257 = !DILocation(line: 0, scope: !10252)
!10258 = !DILocation(line: 259, column: 2, scope: !10252)
!10259 = !DILocation(line: 268, column: 1, scope: !10252)
!10260 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1488, file: !1488, line: 283, type: !10261, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10263)
!10261 = !DISubroutineType(types: !10262)
!10262 = !{!118, !1373}
!10263 = !{!10264}
!10264 = !DILocalVariable(name: "sb", arg: 1, scope: !10260, file: !1488, line: 283, type: !1373)
!10265 = !DILocation(line: 0, scope: !10260)
!10266 = !DILocation(line: 285, column: 2, scope: !10260)
!10267 = !DILocation(line: 0, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10260, file: !1488, line: 285, column: 14)
!10269 = !DILocation(line: 302, column: 1, scope: !10260)
!10270 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1488, file: !1488, line: 325, type: !10271, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10273)
!10271 = !DISubroutineType(types: !10272)
!10272 = !{!118, !1366, !1359}
!10273 = !{!10274, !10275}
!10274 = !DILocalVariable(name: "db", arg: 1, scope: !10270, file: !1488, line: 325, type: !1366)
!10275 = !DILocalVariable(name: "p", arg: 2, scope: !10270, file: !1488, line: 326, type: !1359)
!10276 = !DILocation(line: 0, scope: !10270)
!10277 = !DILocation(line: 328, column: 2, scope: !10270)
!10278 = !DILocation(line: 353, column: 1, scope: !10270)
!10279 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1488, file: !1488, line: 393, type: !10280, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10282)
!10280 = !DISubroutineType(types: !10281)
!10281 = !{!118, !1379}
!10282 = !{!10283}
!10283 = !DILocalVariable(name: "fc", arg: 1, scope: !10279, file: !1488, line: 393, type: !1379)
!10284 = !DILocation(line: 0, scope: !10279)
!10285 = !DILocation(line: 395, column: 9, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10279, file: !1488, line: 395, column: 6)
!10287 = !DILocation(line: 400, column: 1, scope: !10279)
!10288 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10226, file: !10226, line: 424, type: !10289, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10291)
!10289 = !DISubroutineType(types: !10290)
!10290 = !{null, !1434}
!10291 = !{!10292}
!10292 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10288, file: !10226, line: 424, type: !1434)
!10293 = !DILocation(line: 0, scope: !10288)
!10294 = !DILocation(line: 426, column: 3, scope: !10288)
!10295 = !DILocation(line: 427, column: 1, scope: !10288)
!10296 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1488, file: !1488, line: 197, type: !10297, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10299)
!10297 = !DISubroutineType(types: !10298)
!10298 = !{null, !1393, !118}
!10299 = !{!10300, !10301, !10302}
!10300 = !DILocalVariable(name: "dev", arg: 1, scope: !10296, file: !1488, line: 197, type: !1393)
!10301 = !DILocalVariable(name: "parity", arg: 2, scope: !10296, file: !1488, line: 198, type: !118)
!10302 = !DILocalVariable(name: "config", scope: !10296, file: !1488, line: 200, type: !9917)
!10303 = !DILocation(line: 0, scope: !10296)
!10304 = !DILocation(line: 200, column: 48, scope: !10296)
!10305 = !DILocation(line: 202, column: 29, scope: !10296)
!10306 = !DILocation(line: 202, column: 2, scope: !10296)
!10307 = !DILocation(line: 203, column: 1, scope: !10296)
!10308 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1488, file: !1488, line: 212, type: !10297, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10309)
!10309 = !{!10310, !10311, !10312}
!10310 = !DILocalVariable(name: "dev", arg: 1, scope: !10308, file: !1488, line: 212, type: !1393)
!10311 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10308, file: !1488, line: 213, type: !118)
!10312 = !DILocalVariable(name: "config", scope: !10308, file: !1488, line: 215, type: !9917)
!10313 = !DILocation(line: 0, scope: !10308)
!10314 = !DILocation(line: 215, column: 48, scope: !10308)
!10315 = !DILocation(line: 217, column: 37, scope: !10308)
!10316 = !DILocation(line: 217, column: 2, scope: !10308)
!10317 = !DILocation(line: 218, column: 1, scope: !10308)
!10318 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1488, file: !1488, line: 227, type: !10297, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10319)
!10319 = !{!10320, !10321, !10322}
!10320 = !DILocalVariable(name: "dev", arg: 1, scope: !10318, file: !1488, line: 227, type: !1393)
!10321 = !DILocalVariable(name: "databits", arg: 2, scope: !10318, file: !1488, line: 228, type: !118)
!10322 = !DILocalVariable(name: "config", scope: !10318, file: !1488, line: 230, type: !9917)
!10323 = !DILocation(line: 0, scope: !10318)
!10324 = !DILocation(line: 230, column: 48, scope: !10318)
!10325 = !DILocation(line: 232, column: 32, scope: !10318)
!10326 = !DILocation(line: 232, column: 2, scope: !10318)
!10327 = !DILocation(line: 233, column: 1, scope: !10318)
!10328 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1488, file: !1488, line: 242, type: !10297, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10329)
!10329 = !{!10330, !10331, !10332}
!10330 = !DILocalVariable(name: "dev", arg: 1, scope: !10328, file: !1488, line: 242, type: !1393)
!10331 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10328, file: !1488, line: 243, type: !118)
!10332 = !DILocalVariable(name: "config", scope: !10328, file: !1488, line: 245, type: !9917)
!10333 = !DILocation(line: 0, scope: !10328)
!10334 = !DILocation(line: 245, column: 48, scope: !10328)
!10335 = !DILocation(line: 247, column: 33, scope: !10328)
!10336 = !DILocation(line: 247, column: 2, scope: !10328)
!10337 = !DILocation(line: 248, column: 1, scope: !10328)
!10338 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1488, file: !1488, line: 107, type: !10297, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10339)
!10339 = !{!10340, !10341, !10342, !10343, !10344}
!10340 = !DILocalVariable(name: "dev", arg: 1, scope: !10338, file: !1488, line: 107, type: !1393)
!10341 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10338, file: !1488, line: 107, type: !118)
!10342 = !DILocalVariable(name: "config", scope: !10338, file: !1488, line: 109, type: !9917)
!10343 = !DILocalVariable(name: "data", scope: !10338, file: !1488, line: 110, type: !10040)
!10344 = !DILocalVariable(name: "clock_rate", scope: !10338, file: !1488, line: 112, type: !118)
!10345 = !DILocation(line: 0, scope: !10338)
!10346 = !DILocation(line: 109, column: 48, scope: !10338)
!10347 = !DILocation(line: 110, column: 38, scope: !10338)
!10348 = !DILocation(line: 112, column: 2, scope: !10338)
!10349 = !DILocation(line: 123, column: 36, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10351, file: !1488, line: 123, column: 7)
!10351 = distinct !DILexicalBlock(scope: !10352, file: !1488, line: 122, column: 9)
!10352 = distinct !DILexicalBlock(scope: !10338, file: !1488, line: 115, column: 6)
!10353 = !DILocation(line: 124, column: 42, scope: !10350)
!10354 = !DILocation(line: 123, column: 7, scope: !10350)
!10355 = !DILocation(line: 125, column: 22, scope: !10350)
!10356 = !DILocation(line: 123, column: 7, scope: !10351)
!10357 = !DILocation(line: 126, column: 4, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10359, file: !1488, line: 126, column: 4)
!10359 = distinct !DILexicalBlock(scope: !10360, file: !1488, line: 126, column: 4)
!10360 = distinct !DILexicalBlock(scope: !10361, file: !1488, line: 126, column: 4)
!10361 = distinct !DILexicalBlock(scope: !10362, file: !1488, line: 126, column: 4)
!10362 = distinct !DILexicalBlock(scope: !10350, file: !1488, line: 125, column: 27)
!10363 = !DILocation(line: 127, column: 4, scope: !10362)
!10364 = !DILocation(line: 176, column: 36, scope: !10338)
!10365 = !DILocation(line: 176, column: 3, scope: !10338)
!10366 = !DILocation(line: 179, column: 32, scope: !10338)
!10367 = !DILocation(line: 180, column: 10, scope: !10338)
!10368 = !DILocation(line: 179, column: 3, scope: !10338)
!10369 = !DILocation(line: 189, column: 3, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10371, file: !1488, line: 189, column: 3)
!10371 = distinct !DILexicalBlock(scope: !10338, file: !1488, line: 189, column: 3)
!10372 = !DILocation(line: 189, column: 3, scope: !10371)
!10373 = !DILocation(line: 189, column: 3, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10370, file: !1488, line: 189, column: 3)
!10375 = !DILocation(line: 195, column: 1, scope: !10338)
!10376 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10226, file: !10226, line: 410, type: !10289, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10377)
!10377 = !{!10378}
!10378 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10376, file: !10226, line: 410, type: !1434)
!10379 = !DILocation(line: 0, scope: !10376)
!10380 = !DILocation(line: 412, column: 3, scope: !10376)
!10381 = !DILocation(line: 413, column: 1, scope: !10376)
!10382 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !848, file: !848, line: 216, type: !1467, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10383)
!10383 = !{!10384, !10385, !10386, !10387}
!10384 = !DILocalVariable(name: "dev", arg: 1, scope: !10382, file: !848, line: 216, type: !1393)
!10385 = !DILocalVariable(name: "sys", arg: 2, scope: !10382, file: !848, line: 217, type: !944)
!10386 = !DILocalVariable(name: "rate", arg: 3, scope: !10382, file: !848, line: 218, type: !900)
!10387 = !DILocalVariable(name: "api", scope: !10382, file: !848, line: 220, type: !1445)
!10388 = !DILocation(line: 0, scope: !10382)
!10389 = !DILocation(line: 221, column: 49, scope: !10382)
!10390 = !DILocation(line: 223, column: 11, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10382, file: !848, line: 223, column: 6)
!10392 = !DILocation(line: 223, column: 20, scope: !10391)
!10393 = !DILocation(line: 223, column: 6, scope: !10382)
!10394 = !DILocation(line: 227, column: 9, scope: !10382)
!10395 = !DILocation(line: 227, column: 2, scope: !10382)
!10396 = !DILocation(line: 228, column: 1, scope: !10382)
!10397 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6136, file: !6136, line: 175, type: !6137, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10398)
!10398 = !{!10399}
!10399 = !DILocalVariable(name: "level", arg: 1, scope: !10397, file: !6136, line: 175, type: !119)
!10400 = !DILocation(line: 0, scope: !10397)
!10401 = !DILocation(line: 177, column: 2, scope: !10397)
!10402 = !DILocation(line: 189, column: 1, scope: !10397)
!10403 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10226, file: !10226, line: 615, type: !10404, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10406)
!10404 = !DISubroutineType(types: !10405)
!10405 = !{null, !1434, !118}
!10406 = !{!10407, !10408}
!10407 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10403, file: !10226, line: 615, type: !1434)
!10408 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10403, file: !10226, line: 615, type: !118)
!10409 = !DILocation(line: 0, scope: !10403)
!10410 = !DILocation(line: 617, column: 3, scope: !10403)
!10411 = !DILocation(line: 618, column: 1, scope: !10403)
!10412 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10226, file: !10226, line: 1020, type: !10413, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10415)
!10413 = !DISubroutineType(types: !10414)
!10414 = !{null, !1434, !118, !118, !118}
!10415 = !{!10416, !10417, !10418, !10419}
!10416 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10412, file: !10226, line: 1020, type: !1434)
!10417 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10412, file: !10226, line: 1020, type: !118)
!10418 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10412, file: !10226, line: 1020, type: !118)
!10419 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10412, file: !10226, line: 1021, type: !118)
!10420 = !DILocation(line: 0, scope: !10412)
!10421 = !DILocation(line: 1029, column: 30, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10423, file: !10226, line: 1028, column: 3)
!10423 = distinct !DILexicalBlock(scope: !10412, file: !10226, line: 1023, column: 7)
!10424 = !DILocation(line: 1029, column: 19, scope: !10422)
!10425 = !DILocation(line: 1029, column: 13, scope: !10422)
!10426 = !DILocation(line: 1029, column: 17, scope: !10422)
!10427 = !DILocation(line: 1031, column: 1, scope: !10412)
!10428 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10226, file: !10226, line: 949, type: !10404, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10429)
!10429 = !{!10430, !10431}
!10430 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10428, file: !10226, line: 949, type: !1434)
!10431 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10428, file: !10226, line: 949, type: !118)
!10432 = !DILocation(line: 0, scope: !10428)
!10433 = !DILocation(line: 951, column: 3, scope: !10428)
!10434 = !DILocation(line: 952, column: 1, scope: !10428)
!10435 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10226, file: !10226, line: 588, type: !10404, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10436)
!10436 = !{!10437, !10438}
!10437 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10435, file: !10226, line: 588, type: !1434)
!10438 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10435, file: !10226, line: 588, type: !118)
!10439 = !DILocation(line: 0, scope: !10435)
!10440 = !DILocation(line: 590, column: 3, scope: !10435)
!10441 = !DILocation(line: 591, column: 1, scope: !10435)
!10442 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10226, file: !10226, line: 805, type: !10404, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10443)
!10443 = !{!10444, !10445}
!10444 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10442, file: !10226, line: 805, type: !1434)
!10445 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10442, file: !10226, line: 805, type: !118)
!10446 = !DILocation(line: 0, scope: !10442)
!10447 = !DILocation(line: 807, column: 3, scope: !10442)
!10448 = !DILocation(line: 808, column: 1, scope: !10442)
!10449 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10226, file: !10226, line: 532, type: !10404, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10450)
!10450 = !{!10451, !10452}
!10451 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10449, file: !10226, line: 532, type: !1434)
!10452 = !DILocalVariable(name: "Parity", arg: 2, scope: !10449, file: !10226, line: 532, type: !118)
!10453 = !DILocation(line: 0, scope: !10449)
!10454 = !DILocation(line: 534, column: 3, scope: !10449)
!10455 = !DILocation(line: 535, column: 1, scope: !10449)
!10456 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10226, file: !10226, line: 1770, type: !10227, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10457)
!10457 = !{!10458}
!10458 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10456, file: !10226, line: 1770, type: !1434)
!10459 = !DILocation(line: 0, scope: !10456)
!10460 = !DILocation(line: 1772, column: 11, scope: !10456)
!10461 = !DILocation(line: 1772, column: 46, scope: !10456)
!10462 = !DILocation(line: 1772, column: 3, scope: !10456)
!10463 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10226, file: !10226, line: 1737, type: !10227, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10464)
!10464 = !{!10465}
!10465 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10463, file: !10226, line: 1737, type: !1434)
!10466 = !DILocation(line: 0, scope: !10463)
!10467 = !DILocation(line: 1739, column: 11, scope: !10463)
!10468 = !DILocation(line: 1739, column: 3, scope: !10463)
!10469 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10226, file: !10226, line: 1748, type: !10227, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10470)
!10470 = !{!10471}
!10471 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10469, file: !10226, line: 1748, type: !1434)
!10472 = !DILocation(line: 0, scope: !10469)
!10473 = !DILocation(line: 1750, column: 11, scope: !10469)
!10474 = !DILocation(line: 1750, column: 45, scope: !10469)
!10475 = !DILocation(line: 1750, column: 3, scope: !10469)
!10476 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10226, file: !10226, line: 1827, type: !10227, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10477)
!10477 = !{!10478}
!10478 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10476, file: !10226, line: 1827, type: !1434)
!10479 = !DILocation(line: 0, scope: !10476)
!10480 = !DILocation(line: 1829, column: 11, scope: !10476)
!10481 = !DILocation(line: 1829, column: 46, scope: !10476)
!10482 = !DILocation(line: 1829, column: 3, scope: !10476)
!10483 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10226, file: !10226, line: 1992, type: !10289, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10484)
!10484 = !{!10485}
!10485 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10483, file: !10226, line: 1992, type: !1434)
!10486 = !DILocation(line: 0, scope: !10483)
!10487 = !DILocation(line: 1994, column: 3, scope: !10483)
!10488 = !DILocation(line: 1995, column: 1, scope: !10483)
!10489 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10226, file: !10226, line: 1934, type: !10289, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10490)
!10490 = !{!10491, !10492}
!10491 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10489, file: !10226, line: 1934, type: !1434)
!10492 = !DILocalVariable(name: "tmpreg", scope: !10489, file: !10226, line: 1936, type: !314)
!10493 = !DILocation(line: 0, scope: !10489)
!10494 = !DILocation(line: 1936, column: 3, scope: !10489)
!10495 = !DILocation(line: 1936, column: 17, scope: !10489)
!10496 = !DILocation(line: 1937, column: 20, scope: !10489)
!10497 = !DILocation(line: 1937, column: 10, scope: !10489)
!10498 = !DILocation(line: 1938, column: 10, scope: !10489)
!10499 = !DILocation(line: 1939, column: 20, scope: !10489)
!10500 = !DILocation(line: 1939, column: 10, scope: !10489)
!10501 = !DILocation(line: 1940, column: 10, scope: !10489)
!10502 = !DILocation(line: 1941, column: 1, scope: !10489)
!10503 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10226, file: !10226, line: 1877, type: !10289, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10504)
!10504 = !{!10505, !10506}
!10505 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10503, file: !10226, line: 1877, type: !1434)
!10506 = !DILocalVariable(name: "tmpreg", scope: !10503, file: !10226, line: 1879, type: !314)
!10507 = !DILocation(line: 0, scope: !10503)
!10508 = !DILocation(line: 1879, column: 3, scope: !10503)
!10509 = !DILocation(line: 1879, column: 17, scope: !10503)
!10510 = !DILocation(line: 1880, column: 20, scope: !10503)
!10511 = !DILocation(line: 1880, column: 10, scope: !10503)
!10512 = !DILocation(line: 1881, column: 10, scope: !10503)
!10513 = !DILocation(line: 1882, column: 20, scope: !10503)
!10514 = !DILocation(line: 1882, column: 10, scope: !10503)
!10515 = !DILocation(line: 1883, column: 10, scope: !10503)
!10516 = !DILocation(line: 1884, column: 1, scope: !10503)
!10517 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10226, file: !10226, line: 1896, type: !10289, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10518)
!10518 = !{!10519, !10520}
!10519 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10517, file: !10226, line: 1896, type: !1434)
!10520 = !DILocalVariable(name: "tmpreg", scope: !10517, file: !10226, line: 1898, type: !314)
!10521 = !DILocation(line: 0, scope: !10517)
!10522 = !DILocation(line: 1898, column: 3, scope: !10517)
!10523 = !DILocation(line: 1898, column: 17, scope: !10517)
!10524 = !DILocation(line: 1899, column: 20, scope: !10517)
!10525 = !DILocation(line: 1899, column: 10, scope: !10517)
!10526 = !DILocation(line: 1900, column: 10, scope: !10517)
!10527 = !DILocation(line: 1901, column: 20, scope: !10517)
!10528 = !DILocation(line: 1901, column: 10, scope: !10517)
!10529 = !DILocation(line: 1902, column: 10, scope: !10517)
!10530 = !DILocation(line: 1903, column: 1, scope: !10517)
!10531 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10226, file: !10226, line: 1915, type: !10289, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10532)
!10532 = !{!10533, !10534}
!10533 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10531, file: !10226, line: 1915, type: !1434)
!10534 = !DILocalVariable(name: "tmpreg", scope: !10531, file: !10226, line: 1917, type: !314)
!10535 = !DILocation(line: 0, scope: !10531)
!10536 = !DILocation(line: 1917, column: 3, scope: !10531)
!10537 = !DILocation(line: 1917, column: 17, scope: !10531)
!10538 = !DILocation(line: 1918, column: 20, scope: !10531)
!10539 = !DILocation(line: 1918, column: 10, scope: !10531)
!10540 = !DILocation(line: 1919, column: 10, scope: !10531)
!10541 = !DILocation(line: 1920, column: 20, scope: !10531)
!10542 = !DILocation(line: 1920, column: 10, scope: !10531)
!10543 = !DILocation(line: 1921, column: 10, scope: !10531)
!10544 = !DILocation(line: 1922, column: 1, scope: !10531)
!10545 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10226, file: !10226, line: 1814, type: !10227, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10546)
!10546 = !{!10547}
!10547 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10545, file: !10226, line: 1814, type: !1434)
!10548 = !DILocation(line: 0, scope: !10545)
!10549 = !DILocation(line: 1816, column: 11, scope: !10545)
!10550 = !DILocation(line: 1816, column: 46, scope: !10545)
!10551 = !DILocation(line: 1816, column: 3, scope: !10545)
!10552 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10226, file: !10226, line: 2426, type: !10553, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10555)
!10553 = !DISubroutineType(types: !10554)
!10554 = !{null, !1434, !185}
!10555 = !{!10556, !10557}
!10556 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10552, file: !10226, line: 2426, type: !1434)
!10557 = !DILocalVariable(name: "Value", arg: 2, scope: !10552, file: !10226, line: 2426, type: !185)
!10558 = !DILocation(line: 0, scope: !10552)
!10559 = !DILocation(line: 2428, column: 16, scope: !10552)
!10560 = !DILocation(line: 2428, column: 11, scope: !10552)
!10561 = !DILocation(line: 2428, column: 14, scope: !10552)
!10562 = !DILocation(line: 2429, column: 1, scope: !10552)
!10563 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10226, file: !10226, line: 1792, type: !10227, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10564)
!10564 = !{!10565}
!10565 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10563, file: !10226, line: 1792, type: !1434)
!10566 = !DILocation(line: 0, scope: !10563)
!10567 = !DILocation(line: 1794, column: 11, scope: !10563)
!10568 = !DILocation(line: 1794, column: 47, scope: !10563)
!10569 = !DILocation(line: 1794, column: 3, scope: !10563)
!10570 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10226, file: !10226, line: 2403, type: !10571, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10573)
!10571 = !DISubroutineType(types: !10572)
!10572 = !{!185, !1434}
!10573 = !{!10574}
!10574 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10570, file: !10226, line: 2403, type: !1434)
!10575 = !DILocation(line: 0, scope: !10570)
!10576 = !DILocation(line: 2405, column: 20, scope: !10570)
!10577 = !DILocation(line: 2405, column: 10, scope: !10570)
!10578 = !DILocation(line: 2405, column: 3, scope: !10570)
!10579 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1488, file: !1488, line: 1583, type: !1414, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10580)
!10580 = !{!10581, !10582, !10583, !10584, !10585, !10586}
!10581 = !DILocalVariable(name: "dev", arg: 1, scope: !10579, file: !1488, line: 1583, type: !1393)
!10582 = !DILocalVariable(name: "config", scope: !10579, file: !1488, line: 1585, type: !9917)
!10583 = !DILocalVariable(name: "data", scope: !10579, file: !1488, line: 1586, type: !10040)
!10584 = !DILocalVariable(name: "ll_parity", scope: !10579, file: !1488, line: 1587, type: !118)
!10585 = !DILocalVariable(name: "ll_datawidth", scope: !10579, file: !1488, line: 1588, type: !118)
!10586 = !DILocalVariable(name: "err", scope: !10579, file: !1488, line: 1589, type: !119)
!10587 = !DILocation(line: 0, scope: !10579)
!10588 = !DILocation(line: 1585, column: 48, scope: !10579)
!10589 = !DILocation(line: 1586, column: 38, scope: !10579)
!10590 = !DILocation(line: 1591, column: 2, scope: !10579)
!10591 = !DILocation(line: 1593, column: 29, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10579, file: !1488, line: 1593, column: 6)
!10593 = !DILocation(line: 1593, column: 7, scope: !10592)
!10594 = !DILocation(line: 1593, column: 6, scope: !10579)
!10595 = !DILocation(line: 1594, column: 3, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10597, file: !1488, line: 1594, column: 3)
!10597 = distinct !DILexicalBlock(scope: !10598, file: !1488, line: 1594, column: 3)
!10598 = distinct !DILexicalBlock(scope: !10599, file: !1488, line: 1594, column: 3)
!10599 = distinct !DILexicalBlock(scope: !10600, file: !1488, line: 1594, column: 3)
!10600 = distinct !DILexicalBlock(scope: !10592, file: !1488, line: 1593, column: 37)
!10601 = !DILocation(line: 1595, column: 3, scope: !10600)
!10602 = !DILocation(line: 1599, column: 31, scope: !10579)
!10603 = !DILocation(line: 1599, column: 71, scope: !10579)
!10604 = !DILocation(line: 1599, column: 8, scope: !10579)
!10605 = !DILocation(line: 1600, column: 10, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10579, file: !1488, line: 1600, column: 6)
!10607 = !DILocation(line: 1600, column: 6, scope: !10579)
!10608 = !DILocation(line: 1601, column: 3, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10610, file: !1488, line: 1601, column: 3)
!10610 = distinct !DILexicalBlock(scope: !10611, file: !1488, line: 1601, column: 3)
!10611 = distinct !DILexicalBlock(scope: !10612, file: !1488, line: 1601, column: 3)
!10612 = distinct !DILexicalBlock(scope: !10613, file: !1488, line: 1601, column: 3)
!10613 = distinct !DILexicalBlock(scope: !10606, file: !1488, line: 1600, column: 16)
!10614 = !DILocation(line: 1602, column: 3, scope: !10613)
!10615 = !DILocation(line: 1616, column: 36, scope: !10579)
!10616 = !DILocation(line: 1616, column: 8, scope: !10579)
!10617 = !DILocation(line: 1617, column: 10, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10579, file: !1488, line: 1617, column: 6)
!10619 = !DILocation(line: 1617, column: 6, scope: !10579)
!10620 = !DILocation(line: 1621, column: 27, scope: !10579)
!10621 = !DILocation(line: 1621, column: 2, scope: !10579)
!10622 = !DILocation(line: 1624, column: 40, scope: !10579)
!10623 = !DILocation(line: 1624, column: 2, scope: !10579)
!10624 = !DILocation(line: 1630, column: 14, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10579, file: !1488, line: 1630, column: 6)
!10626 = !DILocation(line: 1630, column: 6, scope: !10579)
!10627 = !DILocation(line: 1640, column: 4, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10629, file: !1488, line: 1640, column: 4)
!10629 = distinct !DILexicalBlock(scope: !10630, file: !1488, line: 1640, column: 4)
!10630 = distinct !DILexicalBlock(scope: !10631, file: !1488, line: 1640, column: 4)
!10631 = distinct !DILexicalBlock(scope: !10632, file: !1488, line: 1640, column: 4)
!10632 = distinct !DILexicalBlock(scope: !10633, file: !1488, line: 1639, column: 28)
!10633 = distinct !DILexicalBlock(scope: !10634, file: !1488, line: 1639, column: 7)
!10634 = distinct !DILexicalBlock(scope: !10635, file: !1488, line: 1638, column: 9)
!10635 = distinct !DILexicalBlock(scope: !10625, file: !1488, line: 1634, column: 13)
!10636 = !DILocation(line: 0, scope: !10625)
!10637 = !DILocation(line: 1649, column: 35, scope: !10579)
!10638 = !DILocation(line: 1649, column: 2, scope: !10579)
!10639 = !DILocation(line: 1654, column: 14, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10579, file: !1488, line: 1654, column: 6)
!10641 = !DILocation(line: 1654, column: 6, scope: !10579)
!10642 = !DILocation(line: 1655, column: 3, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10640, file: !1488, line: 1654, column: 31)
!10644 = !DILocation(line: 1656, column: 2, scope: !10643)
!10645 = !DILocation(line: 1659, column: 37, scope: !10579)
!10646 = !DILocation(line: 1659, column: 2, scope: !10579)
!10647 = !DILocation(line: 1662, column: 14, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10579, file: !1488, line: 1662, column: 6)
!10649 = !DILocation(line: 1662, column: 6, scope: !10579)
!10650 = !DILocation(line: 1663, column: 37, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10648, file: !1488, line: 1662, column: 27)
!10652 = !DILocation(line: 1663, column: 3, scope: !10651)
!10653 = !DILocation(line: 1664, column: 2, scope: !10651)
!10654 = !DILocation(line: 1684, column: 26, scope: !10579)
!10655 = !DILocation(line: 1684, column: 2, scope: !10579)
!10656 = !DILocation(line: 1722, column: 2, scope: !10579)
!10657 = !DILocation(line: 1724, column: 1, scope: !10579)
!10658 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1488, file: !1488, line: 651, type: !10659, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10661)
!10659 = !DISubroutineType(types: !10660)
!10660 = !{null, !1393}
!10661 = !{!10662, !10663, !10664}
!10662 = !DILocalVariable(name: "dev", arg: 1, scope: !10658, file: !1488, line: 651, type: !1393)
!10663 = !DILocalVariable(name: "data", scope: !10658, file: !1488, line: 653, type: !10040)
!10664 = !DILocalVariable(name: "clk", scope: !10658, file: !1488, line: 654, type: !10665)
!10665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1393)
!10666 = !DILocation(line: 0, scope: !10658)
!10667 = !DILocation(line: 653, column: 38, scope: !10658)
!10668 = !DILocation(line: 656, column: 8, scope: !10658)
!10669 = !DILocation(line: 656, column: 14, scope: !10658)
!10670 = !DILocation(line: 657, column: 1, scope: !10658)
!10671 = distinct !DISubprogram(name: "device_is_ready", scope: !9036, file: !9036, line: 47, type: !10672, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10674)
!10672 = !DISubroutineType(types: !10673)
!10673 = !{!345, !1393}
!10674 = !{!10675}
!10675 = !DILocalVariable(name: "dev", arg: 1, scope: !10671, file: !9036, line: 47, type: !1393)
!10676 = !DILocation(line: 0, scope: !10671)
!10677 = !DILocation(line: 55, column: 2, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10671, file: !9036, line: 55, column: 2)
!10679 = !{i64 2155380230}
!10680 = !DILocation(line: 56, column: 9, scope: !10671)
!10681 = !DILocation(line: 56, column: 2, scope: !10671)
!10682 = distinct !DISubprogram(name: "clock_control_on", scope: !848, file: !848, line: 123, type: !1452, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10683)
!10683 = !{!10684, !10685, !10686}
!10684 = !DILocalVariable(name: "dev", arg: 1, scope: !10682, file: !848, line: 123, type: !1393)
!10685 = !DILocalVariable(name: "sys", arg: 2, scope: !10682, file: !848, line: 124, type: !944)
!10686 = !DILocalVariable(name: "api", scope: !10682, file: !848, line: 126, type: !1445)
!10687 = !DILocation(line: 0, scope: !10682)
!10688 = !DILocation(line: 127, column: 49, scope: !10682)
!10689 = !DILocation(line: 129, column: 14, scope: !10682)
!10690 = !DILocation(line: 129, column: 9, scope: !10682)
!10691 = !DILocation(line: 129, column: 2, scope: !10682)
!10692 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1552, file: !1552, line: 342, type: !10693, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10695)
!10693 = !DISubroutineType(types: !10694)
!10694 = !{!119, !1549, !185}
!10695 = !{!10696, !10697, !10698, !10699}
!10696 = !DILocalVariable(name: "config", arg: 1, scope: !10692, file: !1552, line: 342, type: !1549)
!10697 = !DILocalVariable(name: "id", arg: 2, scope: !10692, file: !1552, line: 343, type: !185)
!10698 = !DILocalVariable(name: "ret", scope: !10692, file: !1552, line: 345, type: !119)
!10699 = !DILocalVariable(name: "state", scope: !10692, file: !1552, line: 346, type: !1555)
!10700 = !DILocation(line: 0, scope: !10692)
!10701 = !DILocation(line: 346, column: 2, scope: !10692)
!10702 = !DILocation(line: 348, column: 8, scope: !10692)
!10703 = !DILocation(line: 349, column: 10, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10692, file: !1552, line: 349, column: 6)
!10705 = !DILocation(line: 349, column: 6, scope: !10692)
!10706 = !DILocation(line: 353, column: 44, scope: !10692)
!10707 = !DILocation(line: 353, column: 9, scope: !10692)
!10708 = !DILocation(line: 353, column: 2, scope: !10692)
!10709 = !DILocation(line: 354, column: 1, scope: !10692)
!10710 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10226, file: !10226, line: 497, type: !10404, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10711)
!10711 = !{!10712, !10713, !10714}
!10712 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10710, file: !10226, line: 497, type: !1434)
!10713 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10710, file: !10226, line: 497, type: !118)
!10714 = !DILocalVariable(name: "val", scope: !10715, file: !10226, line: 499, type: !118)
!10715 = distinct !DILexicalBlock(scope: !10710, file: !10226, line: 499, column: 3)
!10716 = !DILocation(line: 0, scope: !10710)
!10717 = !DILocation(line: 499, column: 3, scope: !10715)
!10718 = !DILocalVariable(name: "addr", arg: 1, scope: !10719, file: !6379, line: 476, type: !1484)
!10719 = distinct !DISubprogram(name: "__LDREXW", scope: !6379, file: !6379, line: 476, type: !10720, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10722)
!10720 = !DISubroutineType(types: !10721)
!10721 = !{!118, !1484}
!10722 = !{!10718, !10723}
!10723 = !DILocalVariable(name: "result", scope: !10719, file: !6379, line: 478, type: !118)
!10724 = !DILocation(line: 0, scope: !10719, inlinedAt: !10725)
!10725 = distinct !DILocation(line: 499, column: 3, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10715, file: !10226, line: 499, column: 3)
!10727 = !DILocation(line: 480, column: 4, scope: !10719, inlinedAt: !10725)
!10728 = !{i64 3761968}
!10729 = !DILocation(line: 499, column: 3, scope: !10726)
!10730 = !DILocation(line: 0, scope: !10715)
!10731 = !DILocalVariable(name: "value", arg: 1, scope: !10732, file: !6379, line: 527, type: !118)
!10732 = distinct !DISubprogram(name: "__STREXW", scope: !6379, file: !6379, line: 527, type: !10733, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10735)
!10733 = !DISubroutineType(types: !10734)
!10734 = !{!118, !118, !1484}
!10735 = !{!10731, !10736, !10737}
!10736 = !DILocalVariable(name: "addr", arg: 2, scope: !10732, file: !6379, line: 527, type: !1484)
!10737 = !DILocalVariable(name: "result", scope: !10732, file: !6379, line: 529, type: !118)
!10738 = !DILocation(line: 0, scope: !10732, inlinedAt: !10739)
!10739 = distinct !DILocation(line: 499, column: 3, scope: !10715)
!10740 = !DILocation(line: 531, column: 4, scope: !10732, inlinedAt: !10739)
!10741 = !{i64 3763404}
!10742 = distinct !{!10742, !10717, !10717}
!10743 = !DILocation(line: 500, column: 1, scope: !10710)
!10744 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10226, file: !10226, line: 850, type: !10413, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10745)
!10745 = !{!10746, !10747, !10748, !10749}
!10746 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10744, file: !10226, line: 850, type: !1434)
!10747 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10744, file: !10226, line: 850, type: !118)
!10748 = !DILocalVariable(name: "Parity", arg: 3, scope: !10744, file: !10226, line: 850, type: !118)
!10749 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10744, file: !10226, line: 851, type: !118)
!10750 = !DILocation(line: 0, scope: !10744)
!10751 = !DILocation(line: 853, column: 3, scope: !10744)
!10752 = !DILocation(line: 854, column: 3, scope: !10744)
!10753 = !DILocation(line: 855, column: 1, scope: !10744)
!10754 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10226, file: !10226, line: 1337, type: !10289, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10755)
!10755 = !{!10756}
!10756 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10754, file: !10226, line: 1337, type: !1434)
!10757 = !DILocation(line: 0, scope: !10754)
!10758 = !DILocation(line: 1339, column: 3, scope: !10754)
!10759 = !DILocation(line: 1340, column: 1, scope: !10754)
!10760 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1552, file: !1552, line: 316, type: !10761, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10763)
!10761 = !DISubroutineType(types: !10762)
!10762 = !{!119, !1549, !1555}
!10763 = !{!10764, !10765, !10766}
!10764 = !DILocalVariable(name: "config", arg: 1, scope: !10760, file: !1552, line: 317, type: !1549)
!10765 = !DILocalVariable(name: "state", arg: 2, scope: !10760, file: !1552, line: 318, type: !1555)
!10766 = !DILocalVariable(name: "reg", scope: !10760, file: !1552, line: 320, type: !22)
!10767 = !DILocation(line: 0, scope: !10760)
!10768 = !DILocation(line: 329, column: 39, scope: !10760)
!10769 = !DILocation(line: 329, column: 52, scope: !10760)
!10770 = !DILocation(line: 329, column: 9, scope: !10760)
!10771 = !DILocation(line: 329, column: 2, scope: !10760)
!10772 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !10672, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1349, retainedNodes: !10773)
!10773 = !{!10774}
!10774 = !DILocalVariable(name: "dev", arg: 1, scope: !10772, file: !334, line: 730, type: !1393)
!10775 = !DILocation(line: 0, scope: !10772)
!10776 = !DILocation(line: 732, column: 9, scope: !10772)
!10777 = !DILocation(line: 732, column: 2, scope: !10772)
!10778 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1711, file: !1711, line: 270, type: !1717, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10779)
!10779 = !{!10780}
!10780 = !DILocalVariable(name: "dev", arg: 1, scope: !10778, file: !1711, line: 270, type: !1719)
!10781 = !DILocation(line: 0, scope: !10778)
!10782 = !DILocation(line: 274, column: 2, scope: !10778)
!10783 = !DILocation(line: 275, column: 12, scope: !10778)
!10784 = !DILocation(line: 276, column: 15, scope: !10778)
!10785 = !DILocation(line: 277, column: 16, scope: !10778)
!10786 = !DILocation(line: 278, column: 15, scope: !10778)
!10787 = !DILocation(line: 279, column: 16, scope: !10778)
!10788 = !DILocation(line: 282, column: 2, scope: !10778)
!10789 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6419, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10790)
!10790 = !{!10791, !10792}
!10791 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10789, file: !533, line: 1814, type: !798)
!10792 = !DILocalVariable(name: "priority", arg: 2, scope: !10789, file: !533, line: 1814, type: !118)
!10793 = !DILocation(line: 0, scope: !10789)
!10794 = !DILocation(line: 1822, column: 46, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10796, file: !533, line: 1821, column: 3)
!10796 = distinct !DILexicalBlock(scope: !10789, file: !533, line: 1816, column: 7)
!10797 = !DILocation(line: 1824, column: 1, scope: !10789)
!10798 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1711, file: !1711, line: 118, type: !6316, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10799)
!10799 = !{!10800, !10801}
!10800 = !DILocalVariable(name: "arg", arg: 1, scope: !10798, file: !1711, line: 118, type: !113)
!10801 = !DILocalVariable(name: "dticks", scope: !10798, file: !1711, line: 121, type: !118)
!10802 = !DILocation(line: 0, scope: !10798)
!10803 = !DILocation(line: 124, column: 2, scope: !10798)
!10804 = !DILocation(line: 129, column: 17, scope: !10798)
!10805 = !DILocation(line: 129, column: 14, scope: !10798)
!10806 = !DILocation(line: 130, column: 15, scope: !10798)
!10807 = !DILocation(line: 145, column: 27, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10809, file: !1711, line: 132, column: 16)
!10809 = distinct !DILexicalBlock(scope: !10798, file: !1711, line: 132, column: 6)
!10810 = !DILocation(line: 145, column: 25, scope: !10808)
!10811 = !DILocation(line: 145, column: 45, scope: !10808)
!10812 = !DILocation(line: 146, column: 30, scope: !10808)
!10813 = !DILocation(line: 146, column: 20, scope: !10808)
!10814 = !DILocation(line: 147, column: 3, scope: !10808)
!10815 = !DILocation(line: 151, column: 2, scope: !10798)
!10816 = !DILocation(line: 152, column: 1, scope: !10798)
!10817 = distinct !DISubprogram(name: "elapsed", scope: !1711, file: !1711, line: 85, type: !3257, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10818)
!10818 = !{!10819, !10820, !10821}
!10819 = !DILocalVariable(name: "val1", scope: !10817, file: !1711, line: 87, type: !118)
!10820 = !DILocalVariable(name: "ctrl", scope: !10817, file: !1711, line: 88, type: !118)
!10821 = !DILocalVariable(name: "val2", scope: !10817, file: !1711, line: 89, type: !118)
!10822 = !DILocation(line: 87, column: 27, scope: !10817)
!10823 = !DILocation(line: 0, scope: !10817)
!10824 = !DILocation(line: 88, column: 27, scope: !10817)
!10825 = !DILocation(line: 89, column: 27, scope: !10817)
!10826 = !DILocation(line: 105, column: 12, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10817, file: !1711, line: 105, column: 6)
!10828 = !DILocation(line: 106, column: 6, scope: !10827)
!10829 = !DILocation(line: 107, column: 16, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10827, file: !1711, line: 106, column: 24)
!10831 = !DILocation(line: 111, column: 18, scope: !10830)
!10832 = !DILocation(line: 112, column: 2, scope: !10830)
!10833 = !DILocation(line: 114, column: 20, scope: !10817)
!10834 = !DILocation(line: 114, column: 30, scope: !10817)
!10835 = !DILocation(line: 114, column: 28, scope: !10817)
!10836 = !DILocation(line: 114, column: 2, scope: !10817)
!10837 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1711, file: !1711, line: 154, type: !10838, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10840)
!10838 = !DISubroutineType(types: !10839)
!10839 = !{null, !772, !345}
!10840 = !{!10841, !10842, !10843, !10844, !10845, !10846, !10847, !10852, !10853}
!10841 = !DILocalVariable(name: "ticks", arg: 1, scope: !10837, file: !1711, line: 154, type: !772)
!10842 = !DILocalVariable(name: "idle", arg: 2, scope: !10837, file: !1711, line: 154, type: !345)
!10843 = !DILocalVariable(name: "delay", scope: !10837, file: !1711, line: 169, type: !118)
!10844 = !DILocalVariable(name: "val1", scope: !10837, file: !1711, line: 170, type: !118)
!10845 = !DILocalVariable(name: "val2", scope: !10837, file: !1711, line: 170, type: !118)
!10846 = !DILocalVariable(name: "last_load_", scope: !10837, file: !1711, line: 171, type: !118)
!10847 = !DILocalVariable(name: "key", scope: !10837, file: !1711, line: 176, type: !10848)
!10848 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !10849)
!10849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !10850)
!10850 = !{!10851}
!10851 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10849, file: !259, line: 33, baseType: !119, size: 32)
!10852 = !DILocalVariable(name: "pending", scope: !10837, file: !1711, line: 178, type: !118)
!10853 = !DILocalVariable(name: "unannounced", scope: !10837, file: !1711, line: 185, type: !118)
!10854 = !DILocation(line: 0, scope: !10837)
!10855 = !DILocation(line: 162, column: 49, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10837, file: !1711, line: 162, column: 6)
!10857 = !DILocation(line: 163, column: 17, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10856, file: !1711, line: 162, column: 78)
!10859 = !DILocation(line: 164, column: 13, scope: !10858)
!10860 = !DILocation(line: 165, column: 3, scope: !10858)
!10861 = !DILocation(line: 171, column: 24, scope: !10837)
!10862 = !DILocation(line: 173, column: 10, scope: !10837)
!10863 = !DILocation(line: 174, column: 10, scope: !10837)
!10864 = !DILocalVariable(name: "l", arg: 1, scope: !10865, file: !259, line: 136, type: !10868)
!10865 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !10866, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10869)
!10866 = !DISubroutineType(types: !10867)
!10867 = !{!10848, !10868}
!10868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 32)
!10869 = !{!10864, !10870}
!10870 = !DILocalVariable(name: "k", scope: !10865, file: !259, line: 139, type: !10848)
!10871 = !DILocation(line: 0, scope: !10865, inlinedAt: !10872)
!10872 = distinct !DILocation(line: 176, column: 25, scope: !10837)
!10873 = !DILocation(line: 55, column: 2, scope: !10874, inlinedAt: !10878)
!10874 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6058, file: !6058, line: 42, type: !6059, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10875)
!10875 = !{!10876, !10877}
!10876 = !DILocalVariable(name: "key", scope: !10874, file: !6058, line: 44, type: !32)
!10877 = !DILocalVariable(name: "tmp", scope: !10874, file: !6058, line: 53, type: !32)
!10878 = distinct !DILocation(line: 145, column: 10, scope: !10865, inlinedAt: !10872)
!10879 = !{i64 2283566}
!10880 = !DILocation(line: 0, scope: !10874, inlinedAt: !10878)
!10881 = !DILocation(line: 148, column: 2, scope: !10882, inlinedAt: !10872)
!10882 = distinct !DILexicalBlock(scope: !10883, file: !259, line: 148, column: 2)
!10883 = distinct !DILexicalBlock(scope: !10865, file: !259, line: 148, column: 2)
!10884 = !DILocation(line: 148, column: 2, scope: !10883, inlinedAt: !10872)
!10885 = !DILocation(line: 148, column: 2, scope: !10886, inlinedAt: !10872)
!10886 = distinct !DILexicalBlock(scope: !10882, file: !259, line: 148, column: 2)
!10887 = !DILocation(line: 160, column: 2, scope: !10865, inlinedAt: !10872)
!10888 = !DILocation(line: 178, column: 21, scope: !10837)
!10889 = !DILocation(line: 180, column: 18, scope: !10837)
!10890 = !DILocation(line: 182, column: 14, scope: !10837)
!10891 = !DILocation(line: 183, column: 15, scope: !10837)
!10892 = !DILocation(line: 185, column: 39, scope: !10837)
!10893 = !DILocation(line: 185, column: 37, scope: !10837)
!10894 = !DILocation(line: 187, column: 27, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10837, file: !1711, line: 187, column: 6)
!10896 = !DILocation(line: 187, column: 6, scope: !10837)
!10897 = !DILocation(line: 202, column: 27, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10895, file: !1711, line: 195, column: 9)
!10899 = !DILocation(line: 202, column: 48, scope: !10898)
!10900 = !DILocation(line: 203, column: 9, scope: !10898)
!10901 = !DILocation(line: 204, column: 11, scope: !10898)
!10902 = !DILocation(line: 205, column: 13, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10898, file: !1711, line: 205, column: 7)
!10904 = !DILocation(line: 205, column: 7, scope: !10898)
!10905 = !DILocation(line: 0, scope: !10895)
!10906 = !DILocation(line: 212, column: 18, scope: !10837)
!10907 = !DILocation(line: 214, column: 28, scope: !10837)
!10908 = !DILocation(line: 214, column: 16, scope: !10837)
!10909 = !DILocation(line: 215, column: 15, scope: !10837)
!10910 = !DILocation(line: 227, column: 11, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10837, file: !1711, line: 227, column: 6)
!10912 = !DILocation(line: 227, column: 6, scope: !10837)
!10913 = !DILocation(line: 228, column: 15, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10911, file: !1711, line: 227, column: 19)
!10915 = !DILocation(line: 228, column: 38, scope: !10914)
!10916 = !DILocation(line: 228, column: 24, scope: !10914)
!10917 = !DILocation(line: 229, column: 2, scope: !10914)
!10918 = !DILocation(line: 230, column: 24, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10911, file: !1711, line: 229, column: 9)
!10920 = !DILocation(line: 230, column: 15, scope: !10919)
!10921 = !DILocation(line: 0, scope: !10911)
!10922 = !DILocalVariable(name: "key", arg: 2, scope: !10923, file: !259, line: 190, type: !10848)
!10923 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !10924, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10926)
!10924 = !DISubroutineType(types: !10925)
!10925 = !{null, !10868, !10848}
!10926 = !{!10927, !10922}
!10927 = !DILocalVariable(name: "l", arg: 1, scope: !10923, file: !259, line: 189, type: !10868)
!10928 = !DILocation(line: 0, scope: !10923, inlinedAt: !10929)
!10929 = distinct !DILocation(line: 232, column: 2, scope: !10837)
!10930 = !DILocation(line: 194, column: 2, scope: !10931, inlinedAt: !10929)
!10931 = distinct !DILexicalBlock(scope: !10932, file: !259, line: 194, column: 2)
!10932 = distinct !DILexicalBlock(scope: !10923, file: !259, line: 194, column: 2)
!10933 = !DILocation(line: 194, column: 2, scope: !10932, inlinedAt: !10929)
!10934 = !DILocation(line: 194, column: 2, scope: !10935, inlinedAt: !10929)
!10935 = distinct !DILexicalBlock(scope: !10931, file: !259, line: 194, column: 2)
!10936 = !DILocalVariable(name: "key", arg: 1, scope: !10937, file: !6058, line: 84, type: !32)
!10937 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6058, file: !6058, line: 84, type: !6069, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10938)
!10938 = !{!10936}
!10939 = !DILocation(line: 0, scope: !10937, inlinedAt: !10940)
!10940 = distinct !DILocation(line: 215, column: 2, scope: !10923, inlinedAt: !10929)
!10941 = !DILocation(line: 95, column: 2, scope: !10937, inlinedAt: !10940)
!10942 = !{i64 2284383}
!10943 = !DILocation(line: 234, column: 1, scope: !10837)
!10944 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1711, file: !1711, line: 236, type: !3257, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10945)
!10945 = !{!10946, !10947}
!10946 = !DILocalVariable(name: "key", scope: !10944, file: !1711, line: 242, type: !10848)
!10947 = !DILocalVariable(name: "cyc", scope: !10944, file: !1711, line: 243, type: !118)
!10948 = !DILocation(line: 0, scope: !10865, inlinedAt: !10949)
!10949 = distinct !DILocation(line: 242, column: 25, scope: !10944)
!10950 = !DILocation(line: 55, column: 2, scope: !10874, inlinedAt: !10951)
!10951 = distinct !DILocation(line: 145, column: 10, scope: !10865, inlinedAt: !10949)
!10952 = !DILocation(line: 0, scope: !10874, inlinedAt: !10951)
!10953 = !DILocation(line: 148, column: 2, scope: !10882, inlinedAt: !10949)
!10954 = !DILocation(line: 148, column: 2, scope: !10883, inlinedAt: !10949)
!10955 = !DILocation(line: 148, column: 2, scope: !10886, inlinedAt: !10949)
!10956 = !DILocation(line: 160, column: 2, scope: !10865, inlinedAt: !10949)
!10957 = !DILocation(line: 0, scope: !10944)
!10958 = !DILocation(line: 243, column: 17, scope: !10944)
!10959 = !DILocation(line: 243, column: 29, scope: !10944)
!10960 = !DILocation(line: 243, column: 43, scope: !10944)
!10961 = !DILocation(line: 0, scope: !10923, inlinedAt: !10962)
!10962 = distinct !DILocation(line: 245, column: 2, scope: !10944)
!10963 = !DILocation(line: 194, column: 2, scope: !10931, inlinedAt: !10962)
!10964 = !DILocation(line: 194, column: 2, scope: !10932, inlinedAt: !10962)
!10965 = !DILocation(line: 194, column: 2, scope: !10935, inlinedAt: !10962)
!10966 = !DILocation(line: 243, column: 27, scope: !10944)
!10967 = !DILocation(line: 243, column: 41, scope: !10944)
!10968 = !DILocation(line: 0, scope: !10937, inlinedAt: !10969)
!10969 = distinct !DILocation(line: 215, column: 2, scope: !10923, inlinedAt: !10962)
!10970 = !DILocation(line: 95, column: 2, scope: !10937, inlinedAt: !10969)
!10971 = !DILocation(line: 246, column: 13, scope: !10944)
!10972 = !DILocation(line: 246, column: 2, scope: !10944)
!10973 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1711, file: !1711, line: 249, type: !3257, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10974)
!10974 = !{!10975, !10976}
!10975 = !DILocalVariable(name: "key", scope: !10973, file: !1711, line: 251, type: !10848)
!10976 = !DILocalVariable(name: "ret", scope: !10973, file: !1711, line: 252, type: !118)
!10977 = !DILocation(line: 0, scope: !10865, inlinedAt: !10978)
!10978 = distinct !DILocation(line: 251, column: 25, scope: !10973)
!10979 = !DILocation(line: 55, column: 2, scope: !10874, inlinedAt: !10980)
!10980 = distinct !DILocation(line: 145, column: 10, scope: !10865, inlinedAt: !10978)
!10981 = !DILocation(line: 0, scope: !10874, inlinedAt: !10980)
!10982 = !DILocation(line: 148, column: 2, scope: !10882, inlinedAt: !10978)
!10983 = !DILocation(line: 148, column: 2, scope: !10883, inlinedAt: !10978)
!10984 = !DILocation(line: 148, column: 2, scope: !10886, inlinedAt: !10978)
!10985 = !DILocation(line: 160, column: 2, scope: !10865, inlinedAt: !10978)
!10986 = !DILocation(line: 0, scope: !10973)
!10987 = !DILocation(line: 252, column: 17, scope: !10973)
!10988 = !DILocation(line: 252, column: 29, scope: !10973)
!10989 = !DILocation(line: 0, scope: !10923, inlinedAt: !10990)
!10990 = distinct !DILocation(line: 254, column: 2, scope: !10973)
!10991 = !DILocation(line: 194, column: 2, scope: !10931, inlinedAt: !10990)
!10992 = !DILocation(line: 194, column: 2, scope: !10932, inlinedAt: !10990)
!10993 = !DILocation(line: 194, column: 2, scope: !10935, inlinedAt: !10990)
!10994 = !DILocation(line: 252, column: 27, scope: !10973)
!10995 = !DILocation(line: 0, scope: !10937, inlinedAt: !10996)
!10996 = distinct !DILocation(line: 215, column: 2, scope: !10923, inlinedAt: !10990)
!10997 = !DILocation(line: 95, column: 2, scope: !10937, inlinedAt: !10996)
!10998 = !DILocation(line: 255, column: 2, scope: !10973)
!10999 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1711, file: !1711, line: 258, type: !3019, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !2102)
!11000 = !DILocation(line: 260, column: 6, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10999, file: !1711, line: 260, column: 6)
!11002 = !DILocation(line: 260, column: 16, scope: !11001)
!11003 = !DILocation(line: 260, column: 6, scope: !10999)
!11004 = !DILocation(line: 261, column: 17, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11001, file: !1711, line: 260, column: 34)
!11006 = !DILocation(line: 262, column: 2, scope: !11005)
!11007 = !DILocation(line: 263, column: 1, scope: !10999)
!11008 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1711, file: !1711, line: 265, type: !3019, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !2102)
!11009 = !DILocation(line: 267, column: 16, scope: !11008)
!11010 = !DILocation(line: 268, column: 1, scope: !11008)
!11011 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11012, file: !11012, line: 9, type: !11013, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !11036)
!11012 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11013 = !DISubroutineType(types: !11014)
!11014 = !{!119, !11015, !185, !11035}
!11015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11016, size: 32)
!11016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11017)
!11017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1552, line: 60, size: 64, elements: !11018)
!11018 = !{!11019, !11034}
!11019 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11017, file: !1552, line: 69, baseType: !11020, size: 32)
!11020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11021, size: 32)
!11021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11022)
!11022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1552, line: 50, size: 64, elements: !11023)
!11023 = !{!11024, !11032, !11033}
!11024 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11022, file: !1552, line: 52, baseType: !11025, size: 32)
!11025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11026, size: 32)
!11026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11027)
!11027 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1563, line: 37, baseType: !11028)
!11028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1563, line: 32, size: 64, elements: !11029)
!11029 = !{!11030, !11031}
!11030 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11028, file: !1563, line: 34, baseType: !118, size: 32)
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11028, file: !1563, line: 36, baseType: !118, size: 32, offset: 32)
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11022, file: !1552, line: 54, baseType: !185, size: 8, offset: 32)
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11022, file: !1552, line: 56, baseType: !185, size: 8, offset: 40)
!11034 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11017, file: !1552, line: 71, baseType: !185, size: 8, offset: 32)
!11035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11020, size: 32)
!11036 = !{!11037, !11038, !11039}
!11037 = !DILocalVariable(name: "config", arg: 1, scope: !11011, file: !11012, line: 9, type: !11015)
!11038 = !DILocalVariable(name: "id", arg: 2, scope: !11011, file: !11012, line: 9, type: !185)
!11039 = !DILocalVariable(name: "state", arg: 3, scope: !11011, file: !11012, line: 10, type: !11035)
!11040 = !DILocation(line: 0, scope: !11011)
!11041 = !DILocation(line: 12, column: 20, scope: !11011)
!11042 = !DILocation(line: 13, column: 27, scope: !11011)
!11043 = !DILocation(line: 13, column: 42, scope: !11011)
!11044 = !DILocation(line: 13, column: 19, scope: !11011)
!11045 = !DILocation(line: 13, column: 16, scope: !11011)
!11046 = !DILocation(line: 13, column: 2, scope: !11011)
!11047 = distinct !{!11047, !11046, !11048}
!11048 = !DILocation(line: 19, column: 2, scope: !11011)
!11049 = !DILocation(line: 14, column: 23, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11051, file: !11012, line: 14, column: 7)
!11051 = distinct !DILexicalBlock(scope: !11011, file: !11012, line: 13, column: 54)
!11052 = !DILocation(line: 14, column: 10, scope: !11050)
!11053 = !DILocation(line: 18, column: 11, scope: !11051)
!11054 = !DILocation(line: 14, column: 7, scope: !11051)
!11055 = !DILocation(line: 22, column: 1, scope: !11011)
!11056 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1830, file: !1830, line: 193, type: !11057, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11066)
!11057 = !DISubroutineType(types: !11058)
!11058 = !{!119, !11059, !185, !22}
!11059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11060, size: 32)
!11060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11061)
!11061 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1563, line: 37, baseType: !11062)
!11062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1563, line: 32, size: 64, elements: !11063)
!11063 = !{!11064, !11065}
!11064 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11062, file: !1563, line: 34, baseType: !118, size: 32)
!11065 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11062, file: !1563, line: 36, baseType: !118, size: 32, offset: 32)
!11066 = !{!11067, !11068, !11069, !11070, !11071, !11072, !11073, !11074, !11076}
!11067 = !DILocalVariable(name: "pins", arg: 1, scope: !11056, file: !1830, line: 193, type: !11059)
!11068 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11056, file: !1830, line: 193, type: !185)
!11069 = !DILocalVariable(name: "reg", arg: 3, scope: !11056, file: !1830, line: 194, type: !22)
!11070 = !DILocalVariable(name: "pin", scope: !11056, file: !1830, line: 196, type: !118)
!11071 = !DILocalVariable(name: "mux", scope: !11056, file: !1830, line: 196, type: !118)
!11072 = !DILocalVariable(name: "pin_cgf", scope: !11056, file: !1830, line: 197, type: !118)
!11073 = !DILocalVariable(name: "ret", scope: !11056, file: !1830, line: 198, type: !119)
!11074 = !DILocalVariable(name: "i", scope: !11075, file: !1830, line: 209, type: !185)
!11075 = distinct !DILexicalBlock(scope: !11056, file: !1830, line: 209, column: 2)
!11076 = !DILocalVariable(name: "gpio_out", scope: !11077, file: !1830, line: 239, type: !118)
!11077 = distinct !DILexicalBlock(scope: !11078, file: !1830, line: 238, column: 55)
!11078 = distinct !DILexicalBlock(scope: !11079, file: !1830, line: 238, column: 14)
!11079 = distinct !DILexicalBlock(scope: !11080, file: !1830, line: 236, column: 14)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !1830, line: 234, column: 7)
!11081 = distinct !DILexicalBlock(scope: !11082, file: !1830, line: 209, column: 41)
!11082 = distinct !DILexicalBlock(scope: !11075, file: !1830, line: 209, column: 2)
!11083 = !DILocation(line: 0, scope: !11056)
!11084 = !DILocation(line: 0, scope: !11075)
!11085 = !DILocation(line: 209, column: 25, scope: !11082)
!11086 = !DILocation(line: 209, column: 2, scope: !11075)
!11087 = distinct !{!11087, !11086, !11088}
!11088 = !DILocation(line: 259, column: 2, scope: !11075)
!11089 = !DILocation(line: 210, column: 17, scope: !11081)
!11090 = !DILocation(line: 234, column: 7, scope: !11080)
!11091 = !DILocation(line: 234, column: 33, scope: !11080)
!11092 = !DILocation(line: 234, column: 7, scope: !11081)
!11093 = !DILocation(line: 235, column: 22, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11080, file: !1830, line: 234, column: 49)
!11095 = !DILocation(line: 235, column: 29, scope: !11094)
!11096 = !DILocation(line: 236, column: 3, scope: !11094)
!11097 = !DILocation(line: 236, column: 14, scope: !11080)
!11098 = !DILocation(line: 239, column: 32, scope: !11077)
!11099 = !DILocation(line: 0, scope: !11077)
!11100 = !DILocation(line: 241, column: 8, scope: !11077)
!11101 = !DILocation(line: 246, column: 3, scope: !11077)
!11102 = !DILocation(line: 252, column: 9, scope: !11081)
!11103 = !DILocation(line: 255, column: 9, scope: !11081)
!11104 = !DILocation(line: 256, column: 11, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11081, file: !1830, line: 256, column: 7)
!11106 = !DILocation(line: 209, column: 37, scope: !11082)
!11107 = !DILocation(line: 256, column: 7, scope: !11081)
!11108 = !DILocation(line: 262, column: 1, scope: !11056)
!11109 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1830, file: !1830, line: 176, type: !11110, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11112)
!11110 = !DISubroutineType(types: !11111)
!11111 = !{!119, !118, !118, !118}
!11112 = !{!11113, !11114, !11115, !11116}
!11113 = !DILocalVariable(name: "pin", arg: 1, scope: !11109, file: !1830, line: 176, type: !118)
!11114 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11109, file: !1830, line: 176, type: !118)
!11115 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11109, file: !1830, line: 176, type: !118)
!11116 = !DILocalVariable(name: "port_device", scope: !11109, file: !1830, line: 178, type: !1760)
!11117 = !DILocation(line: 0, scope: !11109)
!11118 = !DILocation(line: 180, column: 22, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11109, file: !1830, line: 180, column: 6)
!11120 = !DILocation(line: 180, column: 6, scope: !11109)
!11121 = !DILocation(line: 180, column: 6, scope: !11119)
!11122 = !DILocation(line: 184, column: 16, scope: !11109)
!11123 = !DILocation(line: 186, column: 19, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11109, file: !1830, line: 186, column: 6)
!11125 = !DILocation(line: 186, column: 28, scope: !11124)
!11126 = !DILocation(line: 186, column: 33, scope: !11124)
!11127 = !DILocation(line: 186, column: 6, scope: !11109)
!11128 = !DILocation(line: 190, column: 43, scope: !11109)
!11129 = !DILocation(line: 190, column: 9, scope: !11109)
!11130 = !DILocation(line: 190, column: 2, scope: !11109)
!11131 = !DILocation(line: 191, column: 1, scope: !11109)
!11132 = distinct !DISubprogram(name: "device_is_ready", scope: !9036, file: !9036, line: 47, type: !11133, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11135)
!11133 = !DISubroutineType(types: !11134)
!11134 = !{!345, !1760}
!11135 = !{!11136}
!11136 = !DILocalVariable(name: "dev", arg: 1, scope: !11132, file: !9036, line: 47, type: !1760)
!11137 = !DILocation(line: 0, scope: !11132)
!11138 = !DILocation(line: 55, column: 2, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11132, file: !9036, line: 55, column: 2)
!11140 = !{i64 2149517575}
!11141 = !DILocation(line: 56, column: 9, scope: !11132)
!11142 = !DILocation(line: 56, column: 2, scope: !11132)
!11143 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !11133, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1748, retainedNodes: !11144)
!11144 = !{!11145}
!11145 = !DILocalVariable(name: "dev", arg: 1, scope: !11143, file: !334, line: 730, type: !1760)
!11146 = !DILocation(line: 0, scope: !11143)
!11147 = !DILocation(line: 732, column: 9, scope: !11143)
!11148 = !DILocation(line: 732, column: 2, scope: !11143)
!11149 = distinct !DISubprogram(name: "SystemInit", scope: !1882, file: !1882, line: 167, type: !3019, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !2102)
!11150 = !DILocation(line: 182, column: 1, scope: !11149)
!11151 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1882, file: !1882, line: 220, type: !3019, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !11152)
!11152 = !{!11153, !11154, !11155, !11156, !11157}
!11153 = !DILocalVariable(name: "tmp", scope: !11151, file: !1882, line: 222, type: !118)
!11154 = !DILocalVariable(name: "pllvco", scope: !11151, file: !1882, line: 222, type: !118)
!11155 = !DILocalVariable(name: "pllp", scope: !11151, file: !1882, line: 222, type: !118)
!11156 = !DILocalVariable(name: "pllsource", scope: !11151, file: !1882, line: 222, type: !118)
!11157 = !DILocalVariable(name: "pllm", scope: !11151, file: !1882, line: 222, type: !118)
!11158 = !DILocation(line: 0, scope: !11151)
!11159 = !DILocation(line: 225, column: 14, scope: !11151)
!11160 = !DILocation(line: 225, column: 19, scope: !11151)
!11161 = !DILocation(line: 227, column: 3, scope: !11151)
!11162 = !DILocation(line: 240, column: 25, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11151, file: !1882, line: 228, column: 3)
!11164 = !DILocation(line: 241, column: 19, scope: !11163)
!11165 = !DILocation(line: 241, column: 27, scope: !11163)
!11166 = !DILocation(line: 0, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11163, file: !1882, line: 243, column: 11)
!11168 = !DILocation(line: 254, column: 22, scope: !11163)
!11169 = !DILocation(line: 254, column: 62, scope: !11163)
!11170 = !DILocation(line: 255, column: 31, scope: !11163)
!11171 = !DILocation(line: 256, column: 7, scope: !11163)
!11172 = !DILocation(line: 0, scope: !11163)
!11173 = !DILocation(line: 263, column: 30, scope: !11151)
!11174 = !DILocation(line: 263, column: 52, scope: !11151)
!11175 = !DILocation(line: 263, column: 9, scope: !11151)
!11176 = !DILocation(line: 265, column: 19, scope: !11151)
!11177 = !DILocation(line: 266, column: 1, scope: !11151)
!11178 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !11179, file: !11179, line: 87, type: !11180, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11219)
!11179 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11180 = !DISubroutineType(types: !11181)
!11181 = !{!11182, !11183}
!11182 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2853, line: 44, baseType: !2852)
!11183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11184, size: 32)
!11184 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !11185, line: 172, baseType: !11186)
!11185 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11186 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11185, line: 121, size: 736, elements: !11187)
!11187 = !{!11188, !11189, !11198, !11206, !11207, !11208, !11209, !11210, !11211, !11212, !11213, !11214, !11215, !11216, !11217, !11218}
!11188 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !11186, file: !11185, line: 123, baseType: !118, size: 32)
!11189 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !11186, file: !11185, line: 126, baseType: !11190, size: 160, offset: 32)
!11190 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !11185, line: 97, baseType: !11191)
!11191 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11185, line: 79, size: 160, elements: !11192)
!11192 = !{!11193, !11194, !11195, !11196, !11197}
!11193 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !11191, file: !11185, line: 81, baseType: !118, size: 32)
!11194 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !11191, file: !11185, line: 84, baseType: !118, size: 32, offset: 32)
!11195 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !11191, file: !11185, line: 87, baseType: !118, size: 32, offset: 64)
!11196 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !11191, file: !11185, line: 90, baseType: !118, size: 32, offset: 96)
!11197 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !11191, file: !11185, line: 94, baseType: !118, size: 32, offset: 128)
!11198 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !11186, file: !11185, line: 129, baseType: !11199, size: 128, offset: 192)
!11199 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !11185, line: 116, baseType: !11200)
!11200 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11185, line: 102, size: 128, elements: !11201)
!11201 = !{!11202, !11203, !11204, !11205}
!11202 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !11200, file: !11185, line: 104, baseType: !118, size: 32)
!11203 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !11200, file: !11185, line: 107, baseType: !118, size: 32, offset: 32)
!11204 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !11200, file: !11185, line: 110, baseType: !118, size: 32, offset: 64)
!11205 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !11200, file: !11185, line: 113, baseType: !118, size: 32, offset: 96)
!11206 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !11186, file: !11185, line: 132, baseType: !118, size: 32, offset: 320)
!11207 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !11186, file: !11185, line: 136, baseType: !118, size: 32, offset: 352)
!11208 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !11186, file: !11185, line: 140, baseType: !118, size: 32, offset: 384)
!11209 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !11186, file: !11185, line: 143, baseType: !118, size: 32, offset: 416)
!11210 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !11186, file: !11185, line: 146, baseType: !118, size: 32, offset: 448)
!11211 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !11186, file: !11185, line: 149, baseType: !118, size: 32, offset: 480)
!11212 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !11186, file: !11185, line: 152, baseType: !118, size: 32, offset: 512)
!11213 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !11186, file: !11185, line: 155, baseType: !118, size: 32, offset: 544)
!11214 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !11186, file: !11185, line: 158, baseType: !118, size: 32, offset: 576)
!11215 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !11186, file: !11185, line: 161, baseType: !118, size: 32, offset: 608)
!11216 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !11186, file: !11185, line: 164, baseType: !118, size: 32, offset: 640)
!11217 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !11186, file: !11185, line: 167, baseType: !118, size: 32, offset: 672)
!11218 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !11186, file: !11185, line: 170, baseType: !185, size: 8, offset: 704)
!11219 = !{!11220, !11221, !11222, !11223, !11224, !11225, !11226, !11227, !11228, !11229, !11230}
!11220 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11178, file: !11179, line: 87, type: !11183)
!11221 = !DILocalVariable(name: "tickstart", scope: !11178, file: !11179, line: 89, type: !118)
!11222 = !DILocalVariable(name: "tmpreg1", scope: !11178, file: !11179, line: 90, type: !118)
!11223 = !DILocalVariable(name: "plli2sp", scope: !11178, file: !11179, line: 91, type: !118)
!11224 = !DILocalVariable(name: "plli2sq", scope: !11178, file: !11179, line: 92, type: !118)
!11225 = !DILocalVariable(name: "plli2sr", scope: !11178, file: !11179, line: 93, type: !118)
!11226 = !DILocalVariable(name: "pllsaip", scope: !11178, file: !11179, line: 94, type: !118)
!11227 = !DILocalVariable(name: "pllsaiq", scope: !11178, file: !11179, line: 95, type: !118)
!11228 = !DILocalVariable(name: "plli2sused", scope: !11178, file: !11179, line: 96, type: !118)
!11229 = !DILocalVariable(name: "pllsaiused", scope: !11178, file: !11179, line: 97, type: !118)
!11230 = !DILocalVariable(name: "tmpreg", scope: !11231, file: !11179, line: 184, type: !314)
!11231 = distinct !DILexicalBlock(scope: !11232, file: !11179, line: 184, column: 5)
!11232 = distinct !DILexicalBlock(scope: !11233, file: !11179, line: 179, column: 3)
!11233 = distinct !DILexicalBlock(scope: !11178, file: !11179, line: 178, column: 6)
!11234 = !DILocation(line: 0, scope: !11178)
!11235 = !DILocation(line: 103, column: 23, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11178, file: !11179, line: 103, column: 6)
!11237 = !DILocation(line: 103, column: 45, scope: !11236)
!11238 = !DILocation(line: 103, column: 71, scope: !11236)
!11239 = !DILocation(line: 103, column: 6, scope: !11178)
!11240 = !DILocation(line: 109, column: 5, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11236, file: !11179, line: 104, column: 3)
!11242 = !DILocation(line: 111, column: 23, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11241, file: !11179, line: 111, column: 8)
!11244 = !DILocation(line: 111, column: 45, scope: !11243)
!11245 = !DILocation(line: 111, column: 8, scope: !11241)
!11246 = !DILocation(line: 119, column: 23, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11178, file: !11179, line: 119, column: 6)
!11248 = !DILocation(line: 119, column: 45, scope: !11247)
!11249 = !DILocation(line: 119, column: 71, scope: !11247)
!11250 = !DILocation(line: 119, column: 6, scope: !11178)
!11251 = !DILocation(line: 125, column: 5, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11247, file: !11179, line: 120, column: 3)
!11253 = !DILocation(line: 127, column: 23, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11252, file: !11179, line: 127, column: 8)
!11255 = !DILocation(line: 127, column: 45, scope: !11254)
!11256 = !DILocation(line: 127, column: 8, scope: !11252)
!11257 = !DILocation(line: 135, column: 23, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11178, file: !11179, line: 135, column: 6)
!11259 = !DILocation(line: 135, column: 45, scope: !11258)
!11260 = !DILocation(line: 135, column: 67, scope: !11258)
!11261 = !DILocation(line: 135, column: 6, scope: !11178)
!11262 = !DILocation(line: 141, column: 5, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11258, file: !11179, line: 136, column: 3)
!11264 = !DILocation(line: 143, column: 23, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11263, file: !11179, line: 143, column: 8)
!11266 = !DILocation(line: 143, column: 42, scope: !11265)
!11267 = !DILocation(line: 143, column: 8, scope: !11263)
!11268 = !DILocation(line: 148, column: 42, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11263, file: !11179, line: 148, column: 8)
!11270 = !DILocation(line: 148, column: 8, scope: !11263)
!11271 = !DILocation(line: 156, column: 23, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11178, file: !11179, line: 156, column: 6)
!11273 = !DILocation(line: 156, column: 45, scope: !11272)
!11274 = !DILocation(line: 156, column: 67, scope: !11272)
!11275 = !DILocation(line: 156, column: 6, scope: !11178)
!11276 = !DILocation(line: 162, column: 5, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11272, file: !11179, line: 157, column: 3)
!11278 = !DILocation(line: 165, column: 23, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11277, file: !11179, line: 165, column: 8)
!11280 = !DILocation(line: 165, column: 42, scope: !11279)
!11281 = !DILocation(line: 165, column: 8, scope: !11277)
!11282 = !DILocation(line: 170, column: 42, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11277, file: !11179, line: 170, column: 8)
!11284 = !DILocation(line: 170, column: 8, scope: !11277)
!11285 = !DILocation(line: 178, column: 23, scope: !11233)
!11286 = !DILocation(line: 178, column: 45, scope: !11233)
!11287 = !DILocation(line: 178, column: 66, scope: !11233)
!11288 = !DILocation(line: 178, column: 6, scope: !11178)
!11289 = !DILocation(line: 184, column: 5, scope: !11231)
!11290 = !DILocation(line: 184, column: 5, scope: !11232)
!11291 = !DILocation(line: 187, column: 13, scope: !11232)
!11292 = !DILocation(line: 190, column: 17, scope: !11232)
!11293 = !DILocation(line: 192, column: 5, scope: !11232)
!11294 = !DILocation(line: 192, column: 17, scope: !11232)
!11295 = !DILocation(line: 192, column: 20, scope: !11232)
!11296 = !DILocation(line: 192, column: 34, scope: !11232)
!11297 = !DILocation(line: 194, column: 11, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11299, file: !11179, line: 194, column: 10)
!11299 = distinct !DILexicalBlock(scope: !11232, file: !11179, line: 193, column: 5)
!11300 = !DILocation(line: 194, column: 25, scope: !11298)
!11301 = !DILocation(line: 194, column: 39, scope: !11298)
!11302 = !DILocation(line: 194, column: 10, scope: !11299)
!11303 = distinct !{!11303, !11293, !11304}
!11304 = !DILocation(line: 198, column: 5, scope: !11232)
!11305 = !DILocation(line: 200, column: 21, scope: !11232)
!11306 = !DILocation(line: 200, column: 26, scope: !11232)
!11307 = !DILocation(line: 201, column: 17, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11232, file: !11179, line: 201, column: 8)
!11309 = !DILocation(line: 201, column: 33, scope: !11308)
!11310 = !DILocation(line: 201, column: 66, scope: !11308)
!11311 = !DILocation(line: 201, column: 84, scope: !11308)
!11312 = !DILocation(line: 201, column: 47, scope: !11308)
!11313 = !DILocation(line: 201, column: 8, scope: !11232)
!11314 = !DILocation(line: 204, column: 23, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11308, file: !11179, line: 202, column: 5)
!11316 = !DILocation(line: 204, column: 28, scope: !11315)
!11317 = !DILocation(line: 206, column: 7, scope: !11315)
!11318 = !DILocation(line: 207, column: 7, scope: !11315)
!11319 = !DILocation(line: 209, column: 17, scope: !11315)
!11320 = !DILocation(line: 212, column: 10, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11315, file: !11179, line: 212, column: 10)
!11322 = !DILocation(line: 212, column: 10, scope: !11315)
!11323 = !DILocation(line: 215, column: 21, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11321, file: !11179, line: 213, column: 7)
!11325 = !DILocation(line: 218, column: 9, scope: !11324)
!11326 = !DILocation(line: 218, column: 15, scope: !11324)
!11327 = !DILocation(line: 218, column: 51, scope: !11324)
!11328 = !DILocation(line: 220, column: 15, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11330, file: !11179, line: 220, column: 14)
!11330 = distinct !DILexicalBlock(scope: !11324, file: !11179, line: 219, column: 9)
!11331 = !DILocation(line: 220, column: 29, scope: !11329)
!11332 = !DILocation(line: 220, column: 43, scope: !11329)
!11333 = !DILocation(line: 220, column: 14, scope: !11330)
!11334 = distinct !{!11334, !11325, !11335}
!11335 = !DILocation(line: 224, column: 9, scope: !11324)
!11336 = !DILocation(line: 227, column: 5, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11232, file: !11179, line: 227, column: 5)
!11338 = !DILocation(line: 232, column: 23, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11178, file: !11179, line: 232, column: 6)
!11340 = !DILocation(line: 228, column: 3, scope: !11232)
!11341 = !DILocation(line: 232, column: 45, scope: !11339)
!11342 = !DILocation(line: 232, column: 66, scope: !11339)
!11343 = !DILocation(line: 232, column: 6, scope: !11178)
!11344 = !DILocation(line: 235, column: 5, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11339, file: !11179, line: 233, column: 3)
!11346 = !DILocation(line: 240, column: 23, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11178, file: !11179, line: 240, column: 6)
!11348 = !DILocation(line: 236, column: 3, scope: !11345)
!11349 = !DILocation(line: 240, column: 45, scope: !11347)
!11350 = !DILocation(line: 240, column: 70, scope: !11347)
!11351 = !DILocation(line: 240, column: 6, scope: !11178)
!11352 = !DILocation(line: 246, column: 5, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11347, file: !11179, line: 241, column: 3)
!11354 = !DILocation(line: 251, column: 23, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11178, file: !11179, line: 251, column: 6)
!11356 = !DILocation(line: 247, column: 3, scope: !11353)
!11357 = !DILocation(line: 251, column: 45, scope: !11355)
!11358 = !DILocation(line: 251, column: 66, scope: !11355)
!11359 = !DILocation(line: 251, column: 6, scope: !11178)
!11360 = !DILocation(line: 257, column: 5, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11355, file: !11179, line: 252, column: 3)
!11362 = !DILocation(line: 262, column: 23, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11178, file: !11179, line: 262, column: 6)
!11364 = !DILocation(line: 258, column: 3, scope: !11361)
!11365 = !DILocation(line: 262, column: 45, scope: !11363)
!11366 = !DILocation(line: 262, column: 68, scope: !11363)
!11367 = !DILocation(line: 262, column: 6, scope: !11178)
!11368 = !DILocation(line: 268, column: 5, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11363, file: !11179, line: 263, column: 3)
!11370 = !DILocation(line: 271, column: 23, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11369, file: !11179, line: 271, column: 8)
!11372 = !DILocation(line: 271, column: 43, scope: !11371)
!11373 = !DILocation(line: 271, column: 8, scope: !11369)
!11374 = !DILocation(line: 279, column: 23, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11178, file: !11179, line: 279, column: 6)
!11376 = !DILocation(line: 279, column: 45, scope: !11375)
!11377 = !DILocation(line: 279, column: 67, scope: !11375)
!11378 = !DILocation(line: 279, column: 6, scope: !11178)
!11379 = !DILocation(line: 285, column: 5, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11375, file: !11179, line: 280, column: 3)
!11381 = !DILocation(line: 290, column: 23, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11178, file: !11179, line: 290, column: 6)
!11383 = !DILocation(line: 286, column: 3, scope: !11380)
!11384 = !DILocation(line: 290, column: 45, scope: !11382)
!11385 = !DILocation(line: 290, column: 70, scope: !11382)
!11386 = !DILocation(line: 290, column: 6, scope: !11178)
!11387 = !DILocation(line: 296, column: 5, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11382, file: !11179, line: 291, column: 3)
!11389 = !DILocation(line: 298, column: 23, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11388, file: !11179, line: 298, column: 8)
!11391 = !DILocation(line: 298, column: 43, scope: !11390)
!11392 = !DILocation(line: 298, column: 8, scope: !11388)
!11393 = !DILocation(line: 308, column: 44, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11178, file: !11179, line: 308, column: 6)
!11395 = !DILocation(line: 308, column: 18, scope: !11394)
!11396 = !DILocation(line: 308, column: 25, scope: !11394)
!11397 = !DILocation(line: 308, column: 65, scope: !11394)
!11398 = !DILocation(line: 308, column: 6, scope: !11178)
!11399 = !DILocation(line: 311, column: 5, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11394, file: !11179, line: 309, column: 3)
!11401 = !DILocation(line: 313, column: 17, scope: !11400)
!11402 = !DILocation(line: 315, column: 5, scope: !11400)
!11403 = !DILocation(line: 315, column: 11, scope: !11400)
!11404 = !DILocation(line: 317, column: 11, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11406, file: !11179, line: 317, column: 10)
!11406 = distinct !DILexicalBlock(scope: !11400, file: !11179, line: 316, column: 5)
!11407 = !DILocation(line: 317, column: 25, scope: !11405)
!11408 = !DILocation(line: 317, column: 39, scope: !11405)
!11409 = !DILocation(line: 317, column: 10, scope: !11406)
!11410 = distinct !{!11410, !11402, !11411}
!11411 = !DILocation(line: 322, column: 5, scope: !11400)
!11412 = !DILocation(line: 329, column: 27, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11400, file: !11179, line: 329, column: 8)
!11414 = !DILocation(line: 329, column: 49, scope: !11413)
!11415 = !DILocation(line: 329, column: 75, scope: !11413)
!11416 = !DILocation(line: 329, column: 102, scope: !11413)
!11417 = !DILocation(line: 329, column: 121, scope: !11413)
!11418 = !DILocation(line: 329, column: 143, scope: !11413)
!11419 = !DILocation(line: 329, column: 176, scope: !11413)
!11420 = !DILocation(line: 330, column: 49, scope: !11413)
!11421 = !DILocation(line: 330, column: 75, scope: !11413)
!11422 = !DILocation(line: 330, column: 102, scope: !11413)
!11423 = !DILocation(line: 330, column: 121, scope: !11413)
!11424 = !DILocation(line: 330, column: 143, scope: !11413)
!11425 = !DILocation(line: 329, column: 8, scope: !11400)
!11426 = !DILocation(line: 336, column: 26, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11413, file: !11179, line: 331, column: 5)
!11428 = !DILocation(line: 336, column: 100, scope: !11427)
!11429 = !DILocation(line: 337, column: 24, scope: !11427)
!11430 = !DILocation(line: 337, column: 61, scope: !11427)
!11431 = !DILocation(line: 341, column: 7, scope: !11427)
!11432 = !DILocation(line: 345, column: 27, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11400, file: !11179, line: 345, column: 8)
!11434 = !DILocation(line: 342, column: 5, scope: !11427)
!11435 = !DILocation(line: 345, column: 49, scope: !11433)
!11436 = !DILocation(line: 345, column: 71, scope: !11433)
!11437 = !DILocation(line: 345, column: 94, scope: !11433)
!11438 = !DILocation(line: 345, column: 113, scope: !11433)
!11439 = !DILocation(line: 345, column: 132, scope: !11433)
!11440 = !DILocation(line: 345, column: 162, scope: !11433)
!11441 = !DILocation(line: 346, column: 49, scope: !11433)
!11442 = !DILocation(line: 346, column: 71, scope: !11433)
!11443 = !DILocation(line: 346, column: 94, scope: !11433)
!11444 = !DILocation(line: 346, column: 113, scope: !11433)
!11445 = !DILocation(line: 346, column: 132, scope: !11433)
!11446 = !DILocation(line: 345, column: 8, scope: !11400)
!11447 = !DILocation(line: 354, column: 26, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11433, file: !11179, line: 347, column: 5)
!11449 = !DILocation(line: 354, column: 100, scope: !11448)
!11450 = !DILocation(line: 355, column: 24, scope: !11448)
!11451 = !DILocation(line: 355, column: 61, scope: !11448)
!11452 = !DILocation(line: 360, column: 7, scope: !11448)
!11453 = !DILocation(line: 363, column: 7, scope: !11448)
!11454 = !DILocation(line: 367, column: 26, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11400, file: !11179, line: 367, column: 8)
!11456 = !DILocation(line: 364, column: 5, scope: !11448)
!11457 = !DILocation(line: 367, column: 48, scope: !11455)
!11458 = !DILocation(line: 367, column: 73, scope: !11455)
!11459 = !DILocation(line: 367, column: 99, scope: !11455)
!11460 = !DILocation(line: 367, column: 118, scope: !11455)
!11461 = !DILocation(line: 367, column: 138, scope: !11455)
!11462 = !DILocation(line: 367, column: 8, scope: !11400)
!11463 = !DILocation(line: 372, column: 26, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11455, file: !11179, line: 368, column: 5)
!11465 = !DILocation(line: 373, column: 24, scope: !11464)
!11466 = !DILocation(line: 373, column: 61, scope: !11464)
!11467 = !DILocation(line: 377, column: 7, scope: !11464)
!11468 = !DILocation(line: 381, column: 24, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11400, file: !11179, line: 381, column: 8)
!11470 = !DILocation(line: 378, column: 5, scope: !11464)
!11471 = !DILocation(line: 381, column: 45, scope: !11469)
!11472 = !DILocation(line: 381, column: 69, scope: !11469)
!11473 = !DILocation(line: 381, column: 8, scope: !11400)
!11474 = !DILocation(line: 390, column: 7, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11469, file: !11179, line: 382, column: 5)
!11476 = !DILocation(line: 391, column: 5, scope: !11475)
!11477 = !DILocation(line: 394, column: 5, scope: !11400)
!11478 = !DILocation(line: 396, column: 17, scope: !11400)
!11479 = !DILocation(line: 398, column: 5, scope: !11400)
!11480 = !DILocation(line: 398, column: 11, scope: !11400)
!11481 = !DILocation(line: 398, column: 51, scope: !11400)
!11482 = !DILocation(line: 400, column: 11, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11484, file: !11179, line: 400, column: 10)
!11484 = distinct !DILexicalBlock(scope: !11400, file: !11179, line: 399, column: 5)
!11485 = !DILocation(line: 400, column: 25, scope: !11483)
!11486 = !DILocation(line: 400, column: 39, scope: !11483)
!11487 = !DILocation(line: 400, column: 10, scope: !11484)
!11488 = distinct !{!11488, !11479, !11489}
!11489 = !DILocation(line: 405, column: 5, scope: !11400)
!11490 = !DILocation(line: 411, column: 17, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11178, file: !11179, line: 411, column: 6)
!11492 = !DILocation(line: 411, column: 6, scope: !11178)
!11493 = !DILocation(line: 414, column: 5, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11491, file: !11179, line: 412, column: 3)
!11495 = !DILocation(line: 416, column: 17, scope: !11494)
!11496 = !DILocation(line: 418, column: 5, scope: !11494)
!11497 = !DILocation(line: 418, column: 11, scope: !11494)
!11498 = !DILocation(line: 420, column: 11, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11500, file: !11179, line: 420, column: 10)
!11500 = distinct !DILexicalBlock(scope: !11494, file: !11179, line: 419, column: 5)
!11501 = !DILocation(line: 420, column: 25, scope: !11499)
!11502 = !DILocation(line: 420, column: 39, scope: !11499)
!11503 = !DILocation(line: 420, column: 10, scope: !11500)
!11504 = distinct !{!11504, !11496, !11505}
!11505 = !DILocation(line: 425, column: 5, scope: !11494)
!11506 = !DILocation(line: 432, column: 27, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11494, file: !11179, line: 432, column: 8)
!11508 = !DILocation(line: 432, column: 49, scope: !11507)
!11509 = !DILocation(line: 432, column: 71, scope: !11507)
!11510 = !DILocation(line: 432, column: 94, scope: !11507)
!11511 = !DILocation(line: 432, column: 113, scope: !11507)
!11512 = !DILocation(line: 432, column: 132, scope: !11507)
!11513 = !DILocation(line: 432, column: 162, scope: !11507)
!11514 = !DILocation(line: 433, column: 49, scope: !11507)
!11515 = !DILocation(line: 433, column: 71, scope: !11507)
!11516 = !DILocation(line: 433, column: 94, scope: !11507)
!11517 = !DILocation(line: 433, column: 113, scope: !11507)
!11518 = !DILocation(line: 433, column: 132, scope: !11507)
!11519 = !DILocation(line: 432, column: 8, scope: !11494)
!11520 = !DILocation(line: 441, column: 26, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11507, file: !11179, line: 434, column: 5)
!11522 = !DILocation(line: 441, column: 100, scope: !11521)
!11523 = !DILocation(line: 445, column: 7, scope: !11521)
!11524 = !DILocation(line: 448, column: 7, scope: !11521)
!11525 = !DILocation(line: 453, column: 26, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11494, file: !11179, line: 453, column: 8)
!11527 = !DILocation(line: 449, column: 5, scope: !11521)
!11528 = !DILocation(line: 453, column: 48, scope: !11526)
!11529 = !DILocation(line: 453, column: 71, scope: !11526)
!11530 = !DILocation(line: 453, column: 95, scope: !11526)
!11531 = !DILocation(line: 453, column: 114, scope: !11526)
!11532 = !DILocation(line: 453, column: 134, scope: !11526)
!11533 = !DILocation(line: 453, column: 8, scope: !11494)
!11534 = !DILocation(line: 458, column: 24, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11526, file: !11179, line: 454, column: 5)
!11536 = !DILocation(line: 458, column: 61, scope: !11535)
!11537 = !DILocation(line: 462, column: 7, scope: !11535)
!11538 = !DILocation(line: 463, column: 5, scope: !11535)
!11539 = !DILocation(line: 466, column: 5, scope: !11494)
!11540 = !DILocation(line: 468, column: 17, scope: !11494)
!11541 = !DILocation(line: 470, column: 5, scope: !11494)
!11542 = !DILocation(line: 470, column: 11, scope: !11494)
!11543 = !DILocation(line: 470, column: 39, scope: !11494)
!11544 = !DILocation(line: 472, column: 11, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11546, file: !11179, line: 472, column: 10)
!11546 = distinct !DILexicalBlock(scope: !11494, file: !11179, line: 471, column: 5)
!11547 = !DILocation(line: 472, column: 25, scope: !11545)
!11548 = !DILocation(line: 472, column: 39, scope: !11545)
!11549 = !DILocation(line: 472, column: 10, scope: !11546)
!11550 = distinct !{!11550, !11541, !11551}
!11551 = !DILocation(line: 477, column: 5, scope: !11494)
!11552 = !DILocation(line: 480, column: 1, scope: !11178)
!11553 = !DISubprogram(name: "HAL_GetTick", scope: !11554, file: !11554, line: 234, type: !3257, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2102)
!11554 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11555 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !11179, file: !11179, line: 489, type: !11556, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11558)
!11556 = !DISubroutineType(types: !11557)
!11557 = !{null, !11183}
!11558 = !{!11559, !11560}
!11559 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11555, file: !11179, line: 489, type: !11183)
!11560 = !DILocalVariable(name: "tempreg", scope: !11555, file: !11179, line: 491, type: !118)
!11561 = !DILocation(line: 0, scope: !11555)
!11562 = !DILocation(line: 494, column: 18, scope: !11555)
!11563 = !DILocation(line: 494, column: 39, scope: !11555)
!11564 = !DILocation(line: 502, column: 52, scope: !11555)
!11565 = !DILocation(line: 502, column: 63, scope: !11555)
!11566 = !DILocation(line: 502, column: 25, scope: !11555)
!11567 = !DILocation(line: 502, column: 33, scope: !11555)
!11568 = !DILocation(line: 503, column: 52, scope: !11555)
!11569 = !DILocation(line: 503, column: 89, scope: !11555)
!11570 = !DILocation(line: 503, column: 25, scope: !11555)
!11571 = !DILocation(line: 503, column: 33, scope: !11555)
!11572 = !DILocation(line: 504, column: 54, scope: !11555)
!11573 = !DILocation(line: 504, column: 128, scope: !11555)
!11574 = !DILocation(line: 504, column: 25, scope: !11555)
!11575 = !DILocation(line: 504, column: 33, scope: !11555)
!11576 = !DILocation(line: 505, column: 52, scope: !11555)
!11577 = !DILocation(line: 505, column: 89, scope: !11555)
!11578 = !DILocation(line: 505, column: 25, scope: !11555)
!11579 = !DILocation(line: 505, column: 33, scope: !11555)
!11580 = !DILocation(line: 506, column: 52, scope: !11555)
!11581 = !DILocation(line: 506, column: 89, scope: !11555)
!11582 = !DILocation(line: 506, column: 25, scope: !11555)
!11583 = !DILocation(line: 506, column: 33, scope: !11555)
!11584 = !DILocation(line: 508, column: 52, scope: !11555)
!11585 = !DILocation(line: 508, column: 63, scope: !11555)
!11586 = !DILocation(line: 508, column: 25, scope: !11555)
!11587 = !DILocation(line: 508, column: 33, scope: !11555)
!11588 = !DILocation(line: 509, column: 52, scope: !11555)
!11589 = !DILocation(line: 509, column: 89, scope: !11555)
!11590 = !DILocation(line: 509, column: 25, scope: !11555)
!11591 = !DILocation(line: 509, column: 33, scope: !11555)
!11592 = !DILocation(line: 510, column: 54, scope: !11555)
!11593 = !DILocation(line: 510, column: 128, scope: !11555)
!11594 = !DILocation(line: 510, column: 25, scope: !11555)
!11595 = !DILocation(line: 510, column: 33, scope: !11555)
!11596 = !DILocation(line: 511, column: 52, scope: !11555)
!11597 = !DILocation(line: 511, column: 89, scope: !11555)
!11598 = !DILocation(line: 511, column: 25, scope: !11555)
!11599 = !DILocation(line: 511, column: 33, scope: !11555)
!11600 = !DILocation(line: 513, column: 48, scope: !11555)
!11601 = !DILocation(line: 513, column: 56, scope: !11555)
!11602 = !DILocation(line: 513, column: 18, scope: !11555)
!11603 = !DILocation(line: 513, column: 29, scope: !11555)
!11604 = !DILocation(line: 514, column: 48, scope: !11555)
!11605 = !DILocation(line: 514, column: 82, scope: !11555)
!11606 = !DILocation(line: 514, column: 18, scope: !11555)
!11607 = !DILocation(line: 514, column: 29, scope: !11555)
!11608 = !DILocation(line: 517, column: 39, scope: !11555)
!11609 = !DILocation(line: 517, column: 18, scope: !11555)
!11610 = !DILocation(line: 517, column: 37, scope: !11555)
!11611 = !DILocation(line: 520, column: 39, scope: !11555)
!11612 = !DILocation(line: 520, column: 18, scope: !11555)
!11613 = !DILocation(line: 520, column: 37, scope: !11555)
!11614 = !DILocation(line: 523, column: 42, scope: !11555)
!11615 = !DILocation(line: 523, column: 18, scope: !11555)
!11616 = !DILocation(line: 523, column: 40, scope: !11555)
!11617 = !DILocation(line: 526, column: 42, scope: !11555)
!11618 = !DILocation(line: 526, column: 18, scope: !11555)
!11619 = !DILocation(line: 526, column: 40, scope: !11555)
!11620 = !DILocation(line: 529, column: 19, scope: !11555)
!11621 = !DILocation(line: 529, column: 24, scope: !11555)
!11622 = !DILocation(line: 530, column: 67, scope: !11555)
!11623 = !DILocation(line: 530, column: 72, scope: !11555)
!11624 = !DILocation(line: 530, column: 59, scope: !11555)
!11625 = !DILocation(line: 530, column: 18, scope: !11555)
!11626 = !DILocation(line: 530, column: 36, scope: !11555)
!11627 = !DILocation(line: 533, column: 38, scope: !11555)
!11628 = !DILocation(line: 533, column: 18, scope: !11555)
!11629 = !DILocation(line: 533, column: 36, scope: !11555)
!11630 = !DILocation(line: 536, column: 42, scope: !11555)
!11631 = !DILocation(line: 536, column: 18, scope: !11555)
!11632 = !DILocation(line: 536, column: 40, scope: !11555)
!11633 = !DILocation(line: 539, column: 40, scope: !11555)
!11634 = !DILocation(line: 539, column: 18, scope: !11555)
!11635 = !DILocation(line: 539, column: 38, scope: !11555)
!11636 = !DILocation(line: 542, column: 39, scope: !11555)
!11637 = !DILocation(line: 542, column: 18, scope: !11555)
!11638 = !DILocation(line: 542, column: 37, scope: !11555)
!11639 = !DILocation(line: 545, column: 40, scope: !11555)
!11640 = !DILocation(line: 545, column: 18, scope: !11555)
!11641 = !DILocation(line: 545, column: 38, scope: !11555)
!11642 = !DILocation(line: 548, column: 13, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11555, file: !11179, line: 548, column: 7)
!11644 = !DILocation(line: 548, column: 7, scope: !11555)
!11645 = !DILocation(line: 550, column: 20, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11643, file: !11179, line: 549, column: 3)
!11647 = !DILocation(line: 550, column: 37, scope: !11646)
!11648 = !DILocation(line: 556, column: 1, scope: !11555)
!11649 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !11179, file: !11179, line: 569, type: !7664, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11650)
!11650 = !{!11651, !11652, !11653, !11654, !11655, !11656, !11657}
!11651 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !11649, file: !11179, line: 569, type: !118)
!11652 = !DILocalVariable(name: "tmpreg1", scope: !11649, file: !11179, line: 571, type: !118)
!11653 = !DILocalVariable(name: "frequency", scope: !11649, file: !11179, line: 573, type: !118)
!11654 = !DILocalVariable(name: "vcoinput", scope: !11649, file: !11179, line: 575, type: !118)
!11655 = !DILocalVariable(name: "saiclocksource", scope: !11649, file: !11179, line: 577, type: !118)
!11656 = !DILocalVariable(name: "srcclk", scope: !11649, file: !11179, line: 578, type: !118)
!11657 = !DILocalVariable(name: "vcooutput", scope: !11649, file: !11179, line: 580, type: !118)
!11658 = !DILocation(line: 0, scope: !11649)
!11659 = !DILocation(line: 581, column: 3, scope: !11649)
!11660 = !DILocation(line: 586, column: 29, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11662, file: !11179, line: 585, column: 5)
!11662 = distinct !DILexicalBlock(scope: !11649, file: !11179, line: 582, column: 3)
!11663 = !DILocation(line: 588, column: 7, scope: !11661)
!11664 = !DILocation(line: 594, column: 20, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11666, file: !11179, line: 594, column: 14)
!11666 = distinct !DILexicalBlock(scope: !11667, file: !11179, line: 591, column: 9)
!11667 = distinct !DILexicalBlock(scope: !11661, file: !11179, line: 589, column: 7)
!11668 = !DILocation(line: 0, scope: !11665)
!11669 = !DILocation(line: 606, column: 27, scope: !11666)
!11670 = !DILocation(line: 606, column: 64, scope: !11666)
!11671 = !DILocation(line: 607, column: 42, scope: !11666)
!11672 = !DILocation(line: 607, column: 79, scope: !11666)
!11673 = !DILocation(line: 607, column: 33, scope: !11666)
!11674 = !DILocation(line: 607, column: 86, scope: !11666)
!11675 = !DILocation(line: 610, column: 29, scope: !11666)
!11676 = !DILocation(line: 610, column: 63, scope: !11666)
!11677 = !DILocation(line: 610, column: 70, scope: !11666)
!11678 = !DILocation(line: 611, column: 32, scope: !11666)
!11679 = !DILocation(line: 612, column: 11, scope: !11666)
!11680 = !DILocation(line: 619, column: 20, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11682, file: !11179, line: 619, column: 14)
!11682 = distinct !DILexicalBlock(scope: !11667, file: !11179, line: 616, column: 9)
!11683 = !DILocation(line: 0, scope: !11681)
!11684 = !DILocation(line: 632, column: 27, scope: !11682)
!11685 = !DILocation(line: 632, column: 64, scope: !11682)
!11686 = !DILocation(line: 633, column: 42, scope: !11682)
!11687 = !DILocation(line: 633, column: 79, scope: !11682)
!11688 = !DILocation(line: 633, column: 33, scope: !11682)
!11689 = !DILocation(line: 633, column: 86, scope: !11682)
!11690 = !DILocation(line: 636, column: 28, scope: !11682)
!11691 = !DILocation(line: 636, column: 36, scope: !11682)
!11692 = !DILocation(line: 636, column: 62, scope: !11682)
!11693 = !DILocation(line: 637, column: 32, scope: !11682)
!11694 = !DILocation(line: 638, column: 11, scope: !11682)
!11695 = !DILocation(line: 645, column: 20, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !11179, line: 645, column: 14)
!11697 = distinct !DILexicalBlock(scope: !11667, file: !11179, line: 642, column: 9)
!11698 = !DILocation(line: 0, scope: !11696)
!11699 = !DILocation(line: 658, column: 27, scope: !11697)
!11700 = !DILocation(line: 658, column: 55, scope: !11697)
!11701 = !DILocation(line: 659, column: 42, scope: !11697)
!11702 = !DILocation(line: 659, column: 70, scope: !11697)
!11703 = !DILocation(line: 659, column: 33, scope: !11697)
!11704 = !DILocation(line: 659, column: 77, scope: !11697)
!11705 = !DILocation(line: 660, column: 11, scope: !11697)
!11706 = !DILocation(line: 665, column: 11, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11667, file: !11179, line: 663, column: 9)
!11708 = !DILocation(line: 669, column: 20, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !11710, file: !11179, line: 669, column: 14)
!11710 = distinct !DILexicalBlock(scope: !11667, file: !11179, line: 668, column: 9)
!11711 = !DILocation(line: 691, column: 16, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11662, file: !11179, line: 689, column: 5)
!11713 = !DILocation(line: 692, column: 7, scope: !11712)
!11714 = !DILocation(line: 706, column: 20, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11716, file: !11179, line: 706, column: 14)
!11716 = distinct !DILexicalBlock(scope: !11717, file: !11179, line: 703, column: 9)
!11717 = distinct !DILexicalBlock(scope: !11712, file: !11179, line: 693, column: 7)
!11718 = !DILocation(line: 0, scope: !11715)
!11719 = !DILocation(line: 718, column: 53, scope: !11716)
!11720 = !DILocation(line: 718, column: 90, scope: !11716)
!11721 = !DILocation(line: 718, column: 43, scope: !11716)
!11722 = !DILocation(line: 720, column: 53, scope: !11716)
!11723 = !DILocation(line: 720, column: 90, scope: !11716)
!11724 = !DILocation(line: 720, column: 44, scope: !11716)
!11725 = !DILocation(line: 721, column: 11, scope: !11716)
!11726 = !DILocation(line: 728, column: 20, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11728, file: !11179, line: 728, column: 14)
!11728 = distinct !DILexicalBlock(scope: !11717, file: !11179, line: 725, column: 9)
!11729 = !DILocation(line: 0, scope: !11727)
!11730 = !DILocation(line: 740, column: 53, scope: !11728)
!11731 = !DILocation(line: 740, column: 81, scope: !11728)
!11732 = !DILocation(line: 740, column: 43, scope: !11728)
!11733 = !DILocation(line: 742, column: 53, scope: !11728)
!11734 = !DILocation(line: 742, column: 81, scope: !11728)
!11735 = !DILocation(line: 742, column: 44, scope: !11728)
!11736 = !DILocation(line: 743, column: 11, scope: !11728)
!11737 = !DILocation(line: 748, column: 20, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11739, file: !11179, line: 748, column: 14)
!11739 = distinct !DILexicalBlock(scope: !11717, file: !11179, line: 747, column: 9)
!11740 = !DILocation(line: 770, column: 16, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11662, file: !11179, line: 768, column: 5)
!11742 = !DILocation(line: 771, column: 7, scope: !11741)
!11743 = !DILocation(line: 785, column: 20, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11745, file: !11179, line: 785, column: 14)
!11745 = distinct !DILexicalBlock(scope: !11746, file: !11179, line: 782, column: 9)
!11746 = distinct !DILexicalBlock(scope: !11741, file: !11179, line: 772, column: 7)
!11747 = !DILocation(line: 0, scope: !11744)
!11748 = !DILocation(line: 797, column: 53, scope: !11745)
!11749 = !DILocation(line: 797, column: 90, scope: !11745)
!11750 = !DILocation(line: 797, column: 43, scope: !11745)
!11751 = !DILocation(line: 799, column: 53, scope: !11745)
!11752 = !DILocation(line: 799, column: 90, scope: !11745)
!11753 = !DILocation(line: 799, column: 44, scope: !11745)
!11754 = !DILocation(line: 800, column: 11, scope: !11745)
!11755 = !DILocation(line: 807, column: 20, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11757, file: !11179, line: 807, column: 14)
!11757 = distinct !DILexicalBlock(scope: !11746, file: !11179, line: 804, column: 9)
!11758 = !DILocation(line: 0, scope: !11756)
!11759 = !DILocation(line: 819, column: 53, scope: !11757)
!11760 = !DILocation(line: 819, column: 81, scope: !11757)
!11761 = !DILocation(line: 819, column: 43, scope: !11757)
!11762 = !DILocation(line: 821, column: 53, scope: !11757)
!11763 = !DILocation(line: 821, column: 81, scope: !11757)
!11764 = !DILocation(line: 821, column: 44, scope: !11757)
!11765 = !DILocation(line: 822, column: 11, scope: !11757)
!11766 = !DILocation(line: 827, column: 20, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11768, file: !11179, line: 827, column: 14)
!11768 = distinct !DILexicalBlock(scope: !11746, file: !11179, line: 826, column: 9)
!11769 = !DILocation(line: 847, column: 3, scope: !11649)
!11770 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !11179, file: !11179, line: 2766, type: !11771, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11773)
!11771 = !DISubroutineType(types: !11772)
!11772 = !{null, !185}
!11773 = !{!11774}
!11774 = !DILocalVariable(name: "Mode", arg: 1, scope: !11770, file: !11179, line: 2766, type: !185)
!11775 = !DILocation(line: 0, scope: !11770)
!11776 = !DILocation(line: 2770, column: 11, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11770, file: !11179, line: 2770, column: 6)
!11778 = !DILocation(line: 0, scope: !11777)
!11779 = !DILocation(line: 2770, column: 6, scope: !11770)
!11780 = !DILocation(line: 2778, column: 1, scope: !11770)
!11781 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !11179, file: !11179, line: 2803, type: !11782, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11785)
!11782 = !DISubroutineType(types: !11783)
!11783 = !{!11182, !11784}
!11784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11190, size: 32)
!11785 = !{!11786, !11787}
!11786 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !11781, file: !11179, line: 2803, type: !11784)
!11787 = !DILocalVariable(name: "tickstart", scope: !11781, file: !11179, line: 2805, type: !118)
!11788 = !DILocation(line: 0, scope: !11781)
!11789 = !DILocation(line: 2821, column: 3, scope: !11781)
!11790 = !DILocation(line: 2824, column: 15, scope: !11781)
!11791 = !DILocation(line: 2825, column: 3, scope: !11781)
!11792 = !DILocation(line: 2825, column: 9, scope: !11781)
!11793 = !DILocation(line: 2827, column: 9, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11795, file: !11179, line: 2827, column: 8)
!11795 = distinct !DILexicalBlock(scope: !11781, file: !11179, line: 2826, column: 3)
!11796 = !DILocation(line: 2827, column: 23, scope: !11794)
!11797 = !DILocation(line: 2827, column: 37, scope: !11794)
!11798 = !DILocation(line: 2827, column: 8, scope: !11795)
!11799 = distinct !{!11799, !11791, !11800}
!11800 = !DILocation(line: 2832, column: 3, scope: !11781)
!11801 = !DILocation(line: 2840, column: 3, scope: !11781)
!11802 = !DILocation(line: 2866, column: 3, scope: !11781)
!11803 = !DILocation(line: 2869, column: 15, scope: !11781)
!11804 = !DILocation(line: 2870, column: 3, scope: !11781)
!11805 = !DILocation(line: 2870, column: 9, scope: !11781)
!11806 = !DILocation(line: 2870, column: 48, scope: !11781)
!11807 = !DILocation(line: 2872, column: 9, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11809, file: !11179, line: 2872, column: 8)
!11809 = distinct !DILexicalBlock(scope: !11781, file: !11179, line: 2871, column: 3)
!11810 = !DILocation(line: 2872, column: 23, scope: !11808)
!11811 = !DILocation(line: 2872, column: 37, scope: !11808)
!11812 = !DILocation(line: 2872, column: 8, scope: !11809)
!11813 = distinct !{!11813, !11804, !11814}
!11814 = !DILocation(line: 2877, column: 3, scope: !11781)
!11815 = !DILocation(line: 2880, column: 1, scope: !11781)
!11816 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !11179, file: !11179, line: 2886, type: !11817, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11819)
!11817 = !DISubroutineType(types: !11818)
!11818 = !{!11182}
!11819 = !{!11820}
!11820 = !DILocalVariable(name: "tickstart", scope: !11816, file: !11179, line: 2888, type: !118)
!11821 = !DILocation(line: 2891, column: 3, scope: !11816)
!11822 = !DILocation(line: 2894, column: 15, scope: !11816)
!11823 = !DILocation(line: 0, scope: !11816)
!11824 = !DILocation(line: 2895, column: 3, scope: !11816)
!11825 = !DILocation(line: 2895, column: 9, scope: !11816)
!11826 = !DILocation(line: 2895, column: 45, scope: !11816)
!11827 = !DILocation(line: 2897, column: 9, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11829, file: !11179, line: 2897, column: 8)
!11829 = distinct !DILexicalBlock(scope: !11816, file: !11179, line: 2896, column: 3)
!11830 = !DILocation(line: 2897, column: 23, scope: !11828)
!11831 = !DILocation(line: 2897, column: 36, scope: !11828)
!11832 = !DILocation(line: 2897, column: 8, scope: !11829)
!11833 = distinct !{!11833, !11824, !11834}
!11834 = !DILocation(line: 2902, column: 3, scope: !11816)
!11835 = !DILocation(line: 2905, column: 1, scope: !11816)
!11836 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !11179, file: !11179, line: 2916, type: !11837, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11840)
!11837 = !DISubroutineType(types: !11838)
!11838 = !{!11182, !11839}
!11839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11199, size: 32)
!11840 = !{!11841, !11842}
!11841 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !11836, file: !11179, line: 2916, type: !11839)
!11842 = !DILocalVariable(name: "tickstart", scope: !11836, file: !11179, line: 2918, type: !118)
!11843 = !DILocation(line: 0, scope: !11836)
!11844 = !DILocation(line: 2934, column: 3, scope: !11836)
!11845 = !DILocation(line: 2937, column: 15, scope: !11836)
!11846 = !DILocation(line: 2938, column: 3, scope: !11836)
!11847 = !DILocation(line: 2938, column: 9, scope: !11836)
!11848 = !DILocation(line: 2940, column: 9, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !11179, line: 2940, column: 8)
!11850 = distinct !DILexicalBlock(scope: !11836, file: !11179, line: 2939, column: 3)
!11851 = !DILocation(line: 2940, column: 23, scope: !11849)
!11852 = !DILocation(line: 2940, column: 37, scope: !11849)
!11853 = !DILocation(line: 2940, column: 8, scope: !11850)
!11854 = distinct !{!11854, !11846, !11855}
!11855 = !DILocation(line: 2945, column: 3, scope: !11836)
!11856 = !DILocation(line: 2953, column: 3, scope: !11836)
!11857 = !DILocation(line: 2970, column: 3, scope: !11836)
!11858 = !DILocation(line: 2973, column: 15, scope: !11836)
!11859 = !DILocation(line: 2974, column: 3, scope: !11836)
!11860 = !DILocation(line: 2974, column: 9, scope: !11836)
!11861 = !DILocation(line: 2974, column: 37, scope: !11836)
!11862 = !DILocation(line: 2976, column: 9, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11864, file: !11179, line: 2976, column: 8)
!11864 = distinct !DILexicalBlock(scope: !11836, file: !11179, line: 2975, column: 3)
!11865 = !DILocation(line: 2976, column: 23, scope: !11863)
!11866 = !DILocation(line: 2976, column: 37, scope: !11863)
!11867 = !DILocation(line: 2976, column: 8, scope: !11864)
!11868 = distinct !{!11868, !11859, !11869}
!11869 = !DILocation(line: 2981, column: 3, scope: !11836)
!11870 = !DILocation(line: 2984, column: 1, scope: !11836)
!11871 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !11179, file: !11179, line: 2990, type: !11817, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11872)
!11872 = !{!11873}
!11873 = !DILocalVariable(name: "tickstart", scope: !11871, file: !11179, line: 2992, type: !118)
!11874 = !DILocation(line: 2995, column: 3, scope: !11871)
!11875 = !DILocation(line: 2998, column: 15, scope: !11871)
!11876 = !DILocation(line: 0, scope: !11871)
!11877 = !DILocation(line: 2999, column: 3, scope: !11871)
!11878 = !DILocation(line: 2999, column: 9, scope: !11871)
!11879 = !DILocation(line: 3001, column: 9, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11881, file: !11179, line: 3001, column: 8)
!11881 = distinct !DILexicalBlock(scope: !11871, file: !11179, line: 3000, column: 3)
!11882 = !DILocation(line: 3001, column: 23, scope: !11880)
!11883 = !DILocation(line: 3001, column: 36, scope: !11880)
!11884 = !DILocation(line: 3001, column: 8, scope: !11881)
!11885 = distinct !{!11885, !11877, !11886}
!11886 = !DILocation(line: 3006, column: 3, scope: !11871)
!11887 = !DILocation(line: 3009, column: 1, scope: !11871)
!11888 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11179, file: !11179, line: 3051, type: !3257, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11889)
!11889 = !{!11890, !11891, !11892, !11893, !11894}
!11890 = !DILocalVariable(name: "pllm", scope: !11888, file: !11179, line: 3053, type: !118)
!11891 = !DILocalVariable(name: "pllvco", scope: !11888, file: !11179, line: 3054, type: !118)
!11892 = !DILocalVariable(name: "pllp", scope: !11888, file: !11179, line: 3055, type: !118)
!11893 = !DILocalVariable(name: "pllr", scope: !11888, file: !11179, line: 3056, type: !118)
!11894 = !DILocalVariable(name: "sysclockfreq", scope: !11888, file: !11179, line: 3057, type: !118)
!11895 = !DILocation(line: 0, scope: !11888)
!11896 = !DILocation(line: 3060, column: 16, scope: !11888)
!11897 = !DILocation(line: 3060, column: 3, scope: !11888)
!11898 = !DILocation(line: 3076, column: 19, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11900, file: !11179, line: 3073, column: 5)
!11900 = distinct !DILexicalBlock(scope: !11888, file: !11179, line: 3061, column: 3)
!11901 = !DILocation(line: 3076, column: 27, scope: !11899)
!11902 = !DILocation(line: 3077, column: 10, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11899, file: !11179, line: 3077, column: 10)
!11904 = !DILocation(line: 0, scope: !11903)
!11905 = !DILocation(line: 3087, column: 23, scope: !11899)
!11906 = !DILocation(line: 3087, column: 82, scope: !11899)
!11907 = !DILocation(line: 3089, column: 28, scope: !11899)
!11908 = !DILocation(line: 3090, column: 7, scope: !11899)
!11909 = !DILocation(line: 3096, column: 19, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11900, file: !11179, line: 3093, column: 5)
!11911 = !DILocation(line: 3096, column: 27, scope: !11910)
!11912 = !DILocation(line: 3097, column: 10, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11910, file: !11179, line: 3097, column: 10)
!11914 = !DILocation(line: 0, scope: !11913)
!11915 = !DILocation(line: 3107, column: 21, scope: !11910)
!11916 = !DILocation(line: 3107, column: 49, scope: !11910)
!11917 = !DILocation(line: 3109, column: 28, scope: !11910)
!11918 = !DILocation(line: 3110, column: 7, scope: !11910)
!11919 = !DILocation(line: 0, scope: !11900)
!11920 = !DILocation(line: 3118, column: 3, scope: !11888)
!11921 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11179, file: !11179, line: 3143, type: !11817, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !11922)
!11922 = !{!11923}
!11923 = !DILocalVariable(name: "tickstart", scope: !11921, file: !11179, line: 3145, type: !118)
!11924 = !DILocation(line: 3148, column: 15, scope: !11921)
!11925 = !DILocation(line: 0, scope: !11921)
!11926 = !DILocation(line: 3151, column: 3, scope: !11921)
!11927 = !DILocation(line: 3154, column: 3, scope: !11921)
!11928 = !DILocation(line: 3154, column: 10, scope: !11921)
!11929 = !DILocation(line: 3154, column: 43, scope: !11921)
!11930 = !DILocation(line: 3156, column: 10, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11932, file: !11179, line: 3156, column: 9)
!11932 = distinct !DILexicalBlock(scope: !11921, file: !11179, line: 3155, column: 3)
!11933 = !DILocation(line: 3156, column: 24, scope: !11931)
!11934 = !DILocation(line: 3156, column: 37, scope: !11931)
!11935 = !DILocation(line: 3156, column: 9, scope: !11932)
!11936 = distinct !{!11936, !11927, !11937}
!11937 = !DILocation(line: 3160, column: 3, scope: !11921)
!11938 = !DILocation(line: 3163, column: 3, scope: !11921)
!11939 = !DILocation(line: 3166, column: 15, scope: !11921)
!11940 = !DILocation(line: 3169, column: 3, scope: !11921)
!11941 = !DILocation(line: 3172, column: 3, scope: !11921)
!11942 = !DILocation(line: 3172, column: 10, scope: !11921)
!11943 = !DILocation(line: 3172, column: 44, scope: !11921)
!11944 = !DILocation(line: 3174, column: 24, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11946, file: !11179, line: 3174, column: 9)
!11946 = distinct !DILexicalBlock(scope: !11921, file: !11179, line: 3173, column: 3)
!11947 = !DILocation(line: 3174, column: 37, scope: !11945)
!11948 = !DILocation(line: 3174, column: 9, scope: !11946)
!11949 = distinct !{!11949, !11941, !11950}
!11950 = !DILocation(line: 3178, column: 3, scope: !11921)
!11951 = !DILocation(line: 3184, column: 3, scope: !11921)
!11952 = !DILocation(line: 3187, column: 3, scope: !11921)
!11953 = !DILocation(line: 3187, column: 10, scope: !11921)
!11954 = !DILocation(line: 3187, column: 43, scope: !11921)
!11955 = !DILocation(line: 3189, column: 24, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11957, file: !11179, line: 3189, column: 9)
!11957 = distinct !DILexicalBlock(scope: !11921, file: !11179, line: 3188, column: 3)
!11958 = !DILocation(line: 3189, column: 37, scope: !11956)
!11959 = !DILocation(line: 3189, column: 9, scope: !11957)
!11960 = distinct !{!11960, !11952, !11961}
!11961 = !DILocation(line: 3193, column: 3, scope: !11921)
!11962 = !DILocation(line: 3199, column: 3, scope: !11921)
!11963 = !DILocation(line: 3202, column: 3, scope: !11921)
!11964 = !DILocation(line: 3202, column: 10, scope: !11921)
!11965 = !DILocation(line: 3202, column: 43, scope: !11921)
!11966 = !DILocation(line: 3204, column: 24, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11968, file: !11179, line: 3204, column: 9)
!11968 = distinct !DILexicalBlock(scope: !11921, file: !11179, line: 3203, column: 3)
!11969 = !DILocation(line: 3204, column: 37, scope: !11967)
!11970 = !DILocation(line: 3204, column: 9, scope: !11968)
!11971 = distinct !{!11971, !11963, !11972}
!11972 = !DILocation(line: 3208, column: 3, scope: !11921)
!11973 = !DILocation(line: 3215, column: 3, scope: !11921)
!11974 = !DILocation(line: 3218, column: 3, scope: !11921)
!11975 = !DILocation(line: 3218, column: 10, scope: !11921)
!11976 = !DILocation(line: 3218, column: 46, scope: !11921)
!11977 = !DILocation(line: 3220, column: 24, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11979, file: !11179, line: 3220, column: 9)
!11979 = distinct !DILexicalBlock(scope: !11921, file: !11179, line: 3219, column: 3)
!11980 = !DILocation(line: 3220, column: 37, scope: !11978)
!11981 = !DILocation(line: 3220, column: 9, scope: !11979)
!11982 = distinct !{!11982, !11974, !11983}
!11983 = !DILocation(line: 3224, column: 3, scope: !11921)
!11984 = !DILocation(line: 3232, column: 3, scope: !11921)
!11985 = !DILocation(line: 3235, column: 3, scope: !11921)
!11986 = !DILocation(line: 3235, column: 10, scope: !11921)
!11987 = !DILocation(line: 3235, column: 46, scope: !11921)
!11988 = !DILocation(line: 3237, column: 10, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11990, file: !11179, line: 3237, column: 9)
!11990 = distinct !DILexicalBlock(scope: !11921, file: !11179, line: 3236, column: 3)
!11991 = !DILocation(line: 3237, column: 24, scope: !11989)
!11992 = !DILocation(line: 3237, column: 37, scope: !11989)
!11993 = !DILocation(line: 3237, column: 9, scope: !11990)
!11994 = distinct !{!11994, !11985, !11995}
!11995 = !DILocation(line: 3241, column: 3, scope: !11921)
!11996 = !DILocation(line: 3247, column: 16, scope: !11921)
!11997 = !DILocation(line: 3257, column: 19, scope: !11921)
!11998 = !DILocation(line: 3270, column: 19, scope: !11921)
!11999 = !DILocation(line: 3274, column: 3, scope: !11921)
!12000 = !DILocation(line: 3277, column: 3, scope: !11921)
!12001 = !DILocation(line: 3281, column: 3, scope: !11921)
!12002 = !DILocation(line: 3285, column: 3, scope: !11921)
!12003 = !DILocation(line: 3288, column: 3, scope: !11921)
!12004 = !DILocation(line: 3292, column: 3, scope: !11921)
!12005 = !DILocation(line: 3296, column: 3, scope: !11921)
!12006 = !DILocation(line: 3299, column: 3, scope: !11921)
!12007 = !DILocation(line: 3302, column: 19, scope: !11921)
!12008 = !DILocation(line: 3305, column: 19, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !11921, file: !11179, line: 3305, column: 6)
!12010 = !DILocation(line: 3305, column: 6, scope: !12009)
!12011 = !DILocation(line: 3305, column: 31, scope: !12009)
!12012 = !DILocation(line: 0, scope: !12009)
!12013 = !DILocation(line: 3313, column: 1, scope: !11921)
!12014 = !DISubprogram(name: "HAL_InitTick", scope: !11554, file: !11554, line: 223, type: !12015, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2102)
!12015 = !DISubroutineType(types: !12016)
!12016 = !{!11182, !118}
!12017 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11179, file: !11179, line: 3333, type: !12018, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !12042)
!12018 = !DISubroutineType(types: !12019)
!12019 = !{!11182, !12020}
!12020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12021, size: 32)
!12021 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12022, line: 70, baseType: !12023)
!12022 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12022, line: 49, size: 416, elements: !12024)
!12024 = !{!12025, !12026, !12027, !12028, !12029, !12030, !12031}
!12025 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12023, file: !12022, line: 51, baseType: !118, size: 32)
!12026 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12023, file: !12022, line: 54, baseType: !118, size: 32, offset: 32)
!12027 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12023, file: !12022, line: 57, baseType: !118, size: 32, offset: 64)
!12028 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12023, file: !12022, line: 60, baseType: !118, size: 32, offset: 96)
!12029 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12023, file: !12022, line: 63, baseType: !118, size: 32, offset: 128)
!12030 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12023, file: !12022, line: 66, baseType: !118, size: 32, offset: 160)
!12031 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12023, file: !12022, line: 69, baseType: !12032, size: 224, offset: 192)
!12032 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11185, line: 73, baseType: !12033)
!12033 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11185, line: 45, size: 224, elements: !12034)
!12034 = !{!12035, !12036, !12037, !12038, !12039, !12040, !12041}
!12035 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12033, file: !11185, line: 47, baseType: !118, size: 32)
!12036 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12033, file: !11185, line: 50, baseType: !118, size: 32, offset: 32)
!12037 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12033, file: !11185, line: 53, baseType: !118, size: 32, offset: 64)
!12038 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12033, file: !11185, line: 56, baseType: !118, size: 32, offset: 96)
!12039 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12033, file: !11185, line: 60, baseType: !118, size: 32, offset: 128)
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12033, file: !11185, line: 63, baseType: !118, size: 32, offset: 160)
!12041 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !12033, file: !11185, line: 68, baseType: !118, size: 32, offset: 192)
!12042 = !{!12043, !12044, !12045, !12046, !12050}
!12043 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12017, file: !11179, line: 3333, type: !12020)
!12044 = !DILocalVariable(name: "tickstart", scope: !12017, file: !11179, line: 3335, type: !118)
!12045 = !DILocalVariable(name: "pll_config", scope: !12017, file: !11179, line: 3335, type: !118)
!12046 = !DILocalVariable(name: "pwrclkchanged", scope: !12047, file: !11179, line: 3517, type: !12049)
!12047 = distinct !DILexicalBlock(scope: !12048, file: !11179, line: 3516, column: 3)
!12048 = distinct !DILexicalBlock(scope: !12017, file: !11179, line: 3515, column: 6)
!12049 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !843, line: 188, baseType: !2859)
!12050 = !DILocalVariable(name: "tmpreg", scope: !12051, file: !11179, line: 3526, type: !314)
!12051 = distinct !DILexicalBlock(scope: !12052, file: !11179, line: 3526, column: 7)
!12052 = distinct !DILexicalBlock(scope: !12053, file: !11179, line: 3525, column: 5)
!12053 = distinct !DILexicalBlock(scope: !12047, file: !11179, line: 3524, column: 8)
!12054 = !DILocation(line: 0, scope: !12017)
!12055 = !DILocation(line: 3338, column: 24, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12017, file: !11179, line: 3338, column: 6)
!12057 = !DILocation(line: 3338, column: 6, scope: !12017)
!12058 = !DILocation(line: 3346, column: 27, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12017, file: !11179, line: 3346, column: 6)
!12060 = !DILocation(line: 3346, column: 43, scope: !12059)
!12061 = !DILocation(line: 3346, column: 69, scope: !12059)
!12062 = !DILocation(line: 3346, column: 6, scope: !12017)
!12063 = !DILocation(line: 3352, column: 9, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12065, file: !11179, line: 3352, column: 8)
!12065 = distinct !DILexicalBlock(scope: !12059, file: !11179, line: 3347, column: 3)
!12066 = !DILocation(line: 3352, column: 39, scope: !12064)
!12067 = !DILocation(line: 3352, column: 128, scope: !12064)
!12068 = !DILocation(line: 3353, column: 9, scope: !12064)
!12069 = !DILocation(line: 3353, column: 39, scope: !12064)
!12070 = !DILocation(line: 3353, column: 60, scope: !12064)
!12071 = !DILocation(line: 3353, column: 70, scope: !12064)
!12072 = !DILocation(line: 3353, column: 78, scope: !12064)
!12073 = !DILocation(line: 3353, column: 100, scope: !12064)
!12074 = !DILocation(line: 3353, column: 128, scope: !12064)
!12075 = !DILocation(line: 3354, column: 9, scope: !12064)
!12076 = !DILocation(line: 3354, column: 39, scope: !12064)
!12077 = !DILocation(line: 3354, column: 61, scope: !12064)
!12078 = !DILocation(line: 3354, column: 71, scope: !12064)
!12079 = !DILocation(line: 3354, column: 79, scope: !12064)
!12080 = !DILocation(line: 3354, column: 101, scope: !12064)
!12081 = !DILocation(line: 3352, column: 8, scope: !12065)
!12082 = !DILocation(line: 3360, column: 11, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12084, file: !11179, line: 3360, column: 10)
!12084 = distinct !DILexicalBlock(scope: !12064, file: !11179, line: 3359, column: 5)
!12085 = !DILocation(line: 3360, column: 57, scope: !12083)
!12086 = !DILocation(line: 3360, column: 80, scope: !12083)
!12087 = !DILocation(line: 3360, column: 89, scope: !12083)
!12088 = !DILocation(line: 3360, column: 10, scope: !12084)
!12089 = !DILocation(line: 3368, column: 7, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12091, file: !11179, line: 3368, column: 7)
!12091 = distinct !DILexicalBlock(scope: !12092, file: !11179, line: 3368, column: 7)
!12092 = distinct !DILexicalBlock(scope: !12064, file: !11179, line: 3366, column: 5)
!12093 = !DILocation(line: 3368, column: 7, scope: !12091)
!12094 = !DILocation(line: 3368, column: 7, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12090, file: !11179, line: 3368, column: 7)
!12096 = !DILocation(line: 3368, column: 7, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12098, file: !11179, line: 3368, column: 7)
!12098 = distinct !DILexicalBlock(scope: !12090, file: !11179, line: 3368, column: 7)
!12099 = !DILocation(line: 3368, column: 7, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12098, file: !11179, line: 3368, column: 7)
!12101 = !DILocation(line: 0, scope: !12090)
!12102 = !DILocation(line: 3371, column: 30, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12092, file: !11179, line: 3371, column: 10)
!12104 = !DILocation(line: 3371, column: 40, scope: !12103)
!12105 = !DILocation(line: 0, scope: !12103)
!12106 = !DILocation(line: 3371, column: 10, scope: !12092)
!12107 = !DILocation(line: 3377, column: 15, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12103, file: !11179, line: 3372, column: 7)
!12109 = !DILocation(line: 3377, column: 51, scope: !12108)
!12110 = !DILocation(line: 3377, column: 9, scope: !12108)
!12111 = !DILocation(line: 3379, column: 15, scope: !12112)
!12112 = distinct !DILexicalBlock(scope: !12113, file: !11179, line: 3379, column: 14)
!12113 = distinct !DILexicalBlock(scope: !12108, file: !11179, line: 3378, column: 9)
!12114 = !DILocation(line: 3379, column: 29, scope: !12112)
!12115 = !DILocation(line: 3379, column: 43, scope: !12112)
!12116 = !DILocation(line: 3379, column: 14, scope: !12113)
!12117 = distinct !{!12117, !12110, !12118}
!12118 = !DILocation(line: 3383, column: 9, scope: !12108)
!12119 = !DILocation(line: 3391, column: 15, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12103, file: !11179, line: 3386, column: 7)
!12121 = !DILocation(line: 3391, column: 9, scope: !12120)
!12122 = !DILocation(line: 3393, column: 15, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12124, file: !11179, line: 3393, column: 14)
!12124 = distinct !DILexicalBlock(scope: !12120, file: !11179, line: 3392, column: 9)
!12125 = !DILocation(line: 3393, column: 29, scope: !12123)
!12126 = !DILocation(line: 3393, column: 43, scope: !12123)
!12127 = !DILocation(line: 3393, column: 14, scope: !12124)
!12128 = distinct !{!12128, !12121, !12129}
!12129 = !DILocation(line: 3397, column: 9, scope: !12120)
!12130 = !DILocation(line: 3402, column: 27, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12017, file: !11179, line: 3402, column: 6)
!12132 = !DILocation(line: 3402, column: 43, scope: !12131)
!12133 = !DILocation(line: 3402, column: 69, scope: !12131)
!12134 = !DILocation(line: 3402, column: 6, scope: !12017)
!12135 = !DILocation(line: 3410, column: 9, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12137, file: !11179, line: 3410, column: 8)
!12137 = distinct !DILexicalBlock(scope: !12131, file: !11179, line: 3403, column: 3)
!12138 = !DILocation(line: 3410, column: 39, scope: !12136)
!12139 = !DILocation(line: 3410, column: 128, scope: !12136)
!12140 = !DILocation(line: 3411, column: 9, scope: !12136)
!12141 = !DILocation(line: 3411, column: 39, scope: !12136)
!12142 = !DILocation(line: 3411, column: 60, scope: !12136)
!12143 = !DILocation(line: 3411, column: 70, scope: !12136)
!12144 = !DILocation(line: 3411, column: 78, scope: !12136)
!12145 = !DILocation(line: 3411, column: 100, scope: !12136)
!12146 = !DILocation(line: 3411, column: 128, scope: !12136)
!12147 = !DILocation(line: 3412, column: 9, scope: !12136)
!12148 = !DILocation(line: 3412, column: 39, scope: !12136)
!12149 = !DILocation(line: 3412, column: 61, scope: !12136)
!12150 = !DILocation(line: 3412, column: 71, scope: !12136)
!12151 = !DILocation(line: 3412, column: 79, scope: !12136)
!12152 = !DILocation(line: 3412, column: 101, scope: !12136)
!12153 = !DILocation(line: 3410, column: 8, scope: !12137)
!12154 = !DILocation(line: 3419, column: 11, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12156, file: !11179, line: 3419, column: 10)
!12156 = distinct !DILexicalBlock(scope: !12136, file: !11179, line: 3417, column: 5)
!12157 = !DILocation(line: 3419, column: 57, scope: !12155)
!12158 = !DILocation(line: 3419, column: 80, scope: !12155)
!12159 = !DILocation(line: 3419, column: 89, scope: !12155)
!12160 = !DILocation(line: 3419, column: 10, scope: !12156)
!12161 = !DILocation(line: 3433, column: 30, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12163, file: !11179, line: 3433, column: 10)
!12163 = distinct !DILexicalBlock(scope: !12136, file: !11179, line: 3431, column: 5)
!12164 = !DILocation(line: 3433, column: 39, scope: !12162)
!12165 = !DILocation(line: 3433, column: 10, scope: !12163)
!12166 = !DILocation(line: 3436, column: 9, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12162, file: !11179, line: 3434, column: 7)
!12168 = !DILocation(line: 3439, column: 21, scope: !12167)
!12169 = !DILocation(line: 3442, column: 9, scope: !12167)
!12170 = !DILocation(line: 3442, column: 15, scope: !12167)
!12171 = !DILocation(line: 3442, column: 51, scope: !12167)
!12172 = !DILocation(line: 3444, column: 15, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12174, file: !11179, line: 3444, column: 14)
!12174 = distinct !DILexicalBlock(scope: !12167, file: !11179, line: 3443, column: 9)
!12175 = !DILocation(line: 3444, column: 29, scope: !12173)
!12176 = !DILocation(line: 3444, column: 43, scope: !12173)
!12177 = !DILocation(line: 3444, column: 14, scope: !12174)
!12178 = distinct !{!12178, !12169, !12179}
!12179 = !DILocation(line: 3448, column: 9, scope: !12167)
!12180 = !DILocation(line: 3456, column: 9, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12162, file: !11179, line: 3454, column: 7)
!12182 = !DILocation(line: 3459, column: 21, scope: !12181)
!12183 = !DILocation(line: 3462, column: 9, scope: !12181)
!12184 = !DILocation(line: 3462, column: 15, scope: !12181)
!12185 = !DILocation(line: 3464, column: 15, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12187, file: !11179, line: 3464, column: 14)
!12187 = distinct !DILexicalBlock(scope: !12181, file: !11179, line: 3463, column: 9)
!12188 = !DILocation(line: 3464, column: 29, scope: !12186)
!12189 = !DILocation(line: 3464, column: 43, scope: !12186)
!12190 = !DILocation(line: 3464, column: 14, scope: !12187)
!12191 = distinct !{!12191, !12183, !12192}
!12192 = !DILocation(line: 3468, column: 9, scope: !12181)
!12193 = !DILocation(line: 0, scope: !12136)
!12194 = !DILocation(line: 3473, column: 27, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12017, file: !11179, line: 3473, column: 6)
!12196 = !DILocation(line: 3473, column: 43, scope: !12195)
!12197 = !DILocation(line: 3473, column: 69, scope: !12195)
!12198 = !DILocation(line: 3473, column: 6, scope: !12017)
!12199 = !DILocation(line: 3479, column: 28, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12201, file: !11179, line: 3479, column: 8)
!12201 = distinct !DILexicalBlock(scope: !12195, file: !11179, line: 3474, column: 3)
!12202 = !DILocation(line: 3479, column: 37, scope: !12200)
!12203 = !DILocation(line: 3479, column: 8, scope: !12201)
!12204 = !DILocation(line: 3482, column: 7, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12200, file: !11179, line: 3480, column: 5)
!12206 = !DILocation(line: 3485, column: 19, scope: !12205)
!12207 = !DILocation(line: 3488, column: 7, scope: !12205)
!12208 = !DILocation(line: 3488, column: 13, scope: !12205)
!12209 = !DILocation(line: 3488, column: 49, scope: !12205)
!12210 = !DILocation(line: 3490, column: 13, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12212, file: !11179, line: 3490, column: 12)
!12212 = distinct !DILexicalBlock(scope: !12205, file: !11179, line: 3489, column: 7)
!12213 = !DILocation(line: 3490, column: 27, scope: !12211)
!12214 = !DILocation(line: 3490, column: 41, scope: !12211)
!12215 = !DILocation(line: 3490, column: 12, scope: !12212)
!12216 = distinct !{!12216, !12207, !12217}
!12217 = !DILocation(line: 3494, column: 7, scope: !12205)
!12218 = !DILocation(line: 3499, column: 7, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12200, file: !11179, line: 3497, column: 5)
!12220 = !DILocation(line: 3502, column: 19, scope: !12219)
!12221 = !DILocation(line: 3505, column: 7, scope: !12219)
!12222 = !DILocation(line: 3505, column: 13, scope: !12219)
!12223 = !DILocation(line: 3507, column: 13, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12225, file: !11179, line: 3507, column: 12)
!12225 = distinct !DILexicalBlock(scope: !12219, file: !11179, line: 3506, column: 7)
!12226 = !DILocation(line: 3507, column: 27, scope: !12224)
!12227 = !DILocation(line: 3507, column: 41, scope: !12224)
!12228 = !DILocation(line: 3507, column: 12, scope: !12225)
!12229 = distinct !{!12229, !12221, !12230}
!12230 = !DILocation(line: 3511, column: 7, scope: !12219)
!12231 = !DILocation(line: 3515, column: 27, scope: !12048)
!12232 = !DILocation(line: 3515, column: 43, scope: !12048)
!12233 = !DILocation(line: 3515, column: 69, scope: !12048)
!12234 = !DILocation(line: 3515, column: 6, scope: !12017)
!12235 = !DILocation(line: 0, scope: !12047)
!12236 = !DILocation(line: 3524, column: 8, scope: !12053)
!12237 = !DILocation(line: 3524, column: 8, scope: !12047)
!12238 = !DILocation(line: 3526, column: 7, scope: !12051)
!12239 = !DILocation(line: 3526, column: 7, scope: !12052)
!12240 = !DILocation(line: 3528, column: 5, scope: !12052)
!12241 = !DILocation(line: 3530, column: 8, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12047, file: !11179, line: 3530, column: 8)
!12243 = !DILocation(line: 3530, column: 8, scope: !12047)
!12244 = !DILocation(line: 3533, column: 7, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12242, file: !11179, line: 3531, column: 5)
!12246 = !DILocation(line: 3536, column: 19, scope: !12245)
!12247 = !DILocation(line: 3538, column: 7, scope: !12245)
!12248 = !DILocation(line: 3538, column: 13, scope: !12245)
!12249 = !DILocation(line: 3540, column: 13, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12251, file: !11179, line: 3540, column: 12)
!12251 = distinct !DILexicalBlock(scope: !12245, file: !11179, line: 3539, column: 7)
!12252 = !DILocation(line: 3540, column: 27, scope: !12250)
!12253 = !DILocation(line: 3540, column: 40, scope: !12250)
!12254 = !DILocation(line: 3540, column: 12, scope: !12251)
!12255 = distinct !{!12255, !12247, !12256}
!12256 = !DILocation(line: 3544, column: 7, scope: !12245)
!12257 = !DILocation(line: 3548, column: 5, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12259, file: !11179, line: 3548, column: 5)
!12259 = distinct !DILexicalBlock(scope: !12047, file: !11179, line: 3548, column: 5)
!12260 = !DILocation(line: 3548, column: 5, scope: !12259)
!12261 = !DILocation(line: 3548, column: 5, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12258, file: !11179, line: 3548, column: 5)
!12263 = !DILocation(line: 3548, column: 5, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12265, file: !11179, line: 3548, column: 5)
!12265 = distinct !DILexicalBlock(scope: !12258, file: !11179, line: 3548, column: 5)
!12266 = !DILocation(line: 3548, column: 5, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12265, file: !11179, line: 3548, column: 5)
!12268 = !DILocation(line: 0, scope: !12258)
!12269 = !DILocation(line: 3550, column: 28, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12047, file: !11179, line: 3550, column: 8)
!12271 = !DILocation(line: 3550, column: 38, scope: !12270)
!12272 = !DILocation(line: 0, scope: !12270)
!12273 = !DILocation(line: 3550, column: 8, scope: !12047)
!12274 = !DILocation(line: 3556, column: 13, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12270, file: !11179, line: 3551, column: 5)
!12276 = !DILocation(line: 3556, column: 49, scope: !12275)
!12277 = !DILocation(line: 3556, column: 7, scope: !12275)
!12278 = !DILocation(line: 3558, column: 13, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12280, file: !11179, line: 3558, column: 12)
!12280 = distinct !DILexicalBlock(scope: !12275, file: !11179, line: 3557, column: 7)
!12281 = !DILocation(line: 3558, column: 27, scope: !12279)
!12282 = !DILocation(line: 3558, column: 41, scope: !12279)
!12283 = !DILocation(line: 3558, column: 12, scope: !12280)
!12284 = distinct !{!12284, !12277, !12285}
!12285 = !DILocation(line: 3562, column: 7, scope: !12275)
!12286 = !DILocation(line: 3570, column: 13, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12270, file: !11179, line: 3565, column: 5)
!12288 = !DILocation(line: 3570, column: 7, scope: !12287)
!12289 = !DILocation(line: 3572, column: 13, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12291, file: !11179, line: 3572, column: 12)
!12291 = distinct !DILexicalBlock(scope: !12287, file: !11179, line: 3571, column: 7)
!12292 = !DILocation(line: 3572, column: 27, scope: !12290)
!12293 = !DILocation(line: 3572, column: 41, scope: !12290)
!12294 = !DILocation(line: 3572, column: 12, scope: !12291)
!12295 = distinct !{!12295, !12288, !12296}
!12296 = !DILocation(line: 3576, column: 7, scope: !12287)
!12297 = !DILocation(line: 3580, column: 8, scope: !12047)
!12298 = !DILocation(line: 3582, column: 7, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12300, file: !11179, line: 3581, column: 5)
!12300 = distinct !DILexicalBlock(scope: !12047, file: !11179, line: 3580, column: 8)
!12301 = !DILocation(line: 3583, column: 5, scope: !12299)
!12302 = !DILocation(line: 3588, column: 31, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12017, file: !11179, line: 3588, column: 7)
!12304 = !DILocation(line: 3588, column: 41, scope: !12303)
!12305 = !DILocation(line: 3588, column: 7, scope: !12017)
!12306 = !DILocation(line: 3591, column: 8, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12308, file: !11179, line: 3591, column: 8)
!12308 = distinct !DILexicalBlock(scope: !12303, file: !11179, line: 3589, column: 3)
!12309 = !DILocation(line: 3591, column: 38, scope: !12307)
!12310 = !DILocation(line: 3591, column: 8, scope: !12308)
!12311 = !DILocation(line: 3593, column: 44, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12313, file: !11179, line: 3593, column: 10)
!12313 = distinct !DILexicalBlock(scope: !12307, file: !11179, line: 3592, column: 5)
!12314 = !DILocation(line: 0, scope: !12312)
!12315 = !DILocation(line: 3593, column: 10, scope: !12313)
!12316 = !DILocation(line: 3610, column: 15, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12312, file: !11179, line: 3594, column: 7)
!12318 = !DILocation(line: 3610, column: 9, scope: !12317)
!12319 = !DILocation(line: 3612, column: 15, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12321, file: !11179, line: 3612, column: 14)
!12321 = distinct !DILexicalBlock(scope: !12317, file: !11179, line: 3611, column: 9)
!12322 = !DILocation(line: 3612, column: 29, scope: !12320)
!12323 = !DILocation(line: 3612, column: 43, scope: !12320)
!12324 = !DILocation(line: 3612, column: 14, scope: !12321)
!12325 = distinct !{!12325, !12318, !12326}
!12326 = !DILocation(line: 3616, column: 9, scope: !12317)
!12327 = !DILocation(line: 3619, column: 9, scope: !12317)
!12328 = !DILocation(line: 3626, column: 9, scope: !12317)
!12329 = !DILocation(line: 3629, column: 21, scope: !12317)
!12330 = !DILocation(line: 3632, column: 9, scope: !12317)
!12331 = !DILocation(line: 3632, column: 15, scope: !12317)
!12332 = !DILocation(line: 3632, column: 51, scope: !12317)
!12333 = !DILocation(line: 3634, column: 15, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !11179, line: 3634, column: 14)
!12335 = distinct !DILexicalBlock(scope: !12317, file: !11179, line: 3633, column: 9)
!12336 = !DILocation(line: 3634, column: 29, scope: !12334)
!12337 = !DILocation(line: 3634, column: 43, scope: !12334)
!12338 = !DILocation(line: 3634, column: 14, scope: !12335)
!12339 = distinct !{!12339, !12330, !12340}
!12340 = !DILocation(line: 3638, column: 9, scope: !12317)
!12341 = !DILocation(line: 3649, column: 15, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12312, file: !11179, line: 3641, column: 7)
!12343 = !DILocation(line: 3649, column: 9, scope: !12342)
!12344 = !DILocation(line: 3651, column: 15, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12346, file: !11179, line: 3651, column: 14)
!12346 = distinct !DILexicalBlock(scope: !12342, file: !11179, line: 3650, column: 9)
!12347 = !DILocation(line: 3651, column: 29, scope: !12345)
!12348 = !DILocation(line: 3651, column: 43, scope: !12345)
!12349 = !DILocation(line: 3651, column: 14, scope: !12346)
!12350 = distinct !{!12350, !12343, !12351}
!12351 = !DILocation(line: 3655, column: 9, scope: !12342)
!12352 = !DILocation(line: 3661, column: 44, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12354, file: !11179, line: 3661, column: 10)
!12354 = distinct !DILexicalBlock(scope: !12307, file: !11179, line: 3659, column: 5)
!12355 = !DILocation(line: 3661, column: 10, scope: !12354)
!12356 = !DILocation(line: 3668, column: 27, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12353, file: !11179, line: 3666, column: 7)
!12358 = !DILocation(line: 3671, column: 14, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12357, file: !11179, line: 3670, column: 13)
!12360 = !DILocation(line: 3671, column: 81, scope: !12359)
!12361 = !DILocation(line: 3671, column: 55, scope: !12359)
!12362 = !DILocation(line: 3671, column: 92, scope: !12359)
!12363 = !DILocation(line: 3672, column: 14, scope: !12359)
!12364 = !DILocation(line: 3672, column: 80, scope: !12359)
!12365 = !DILocation(line: 3672, column: 53, scope: !12359)
!12366 = !DILocation(line: 3672, column: 111, scope: !12359)
!12367 = !DILocation(line: 3673, column: 14, scope: !12359)
!12368 = !DILocation(line: 3673, column: 80, scope: !12359)
!12369 = !DILocation(line: 3673, column: 86, scope: !12359)
!12370 = !DILocation(line: 3673, column: 53, scope: !12359)
!12371 = !DILocation(line: 3673, column: 111, scope: !12359)
!12372 = !DILocation(line: 3674, column: 14, scope: !12359)
!12373 = !DILocation(line: 3674, column: 82, scope: !12359)
!12374 = !DILocation(line: 3674, column: 101, scope: !12359)
!12375 = !DILocation(line: 3674, column: 53, scope: !12359)
!12376 = !DILocation(line: 3674, column: 126, scope: !12359)
!12377 = !DILocation(line: 3675, column: 14, scope: !12359)
!12378 = !DILocation(line: 3675, column: 80, scope: !12359)
!12379 = !DILocation(line: 3675, column: 85, scope: !12359)
!12380 = !DILocation(line: 3675, column: 53, scope: !12359)
!12381 = !DILocation(line: 3675, column: 111, scope: !12359)
!12382 = !DILocation(line: 3676, column: 14, scope: !12359)
!12383 = !DILocation(line: 3676, column: 80, scope: !12359)
!12384 = !DILocation(line: 3676, column: 85, scope: !12359)
!12385 = !DILocation(line: 3676, column: 53, scope: !12359)
!12386 = !DILocation(line: 3670, column: 13, scope: !12357)
!12387 = !DILocation(line: 3691, column: 3, scope: !12017)
!12388 = !DILocation(line: 3692, column: 1, scope: !12017)
!12389 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11179, file: !11179, line: 3703, type: !12390, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2849, retainedNodes: !12392)
!12390 = !DISubroutineType(types: !12391)
!12391 = !{null, !12020}
!12392 = !{!12393}
!12393 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12389, file: !11179, line: 3703, type: !12020)
!12394 = !DILocation(line: 0, scope: !12389)
!12395 = !DILocation(line: 3706, column: 22, scope: !12389)
!12396 = !DILocation(line: 3706, column: 37, scope: !12389)
!12397 = !DILocation(line: 3709, column: 12, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12389, file: !11179, line: 3709, column: 6)
!12399 = !DILocation(line: 3709, column: 15, scope: !12398)
!12400 = !DILocation(line: 3709, column: 31, scope: !12398)
!12401 = !DILocation(line: 3709, column: 6, scope: !12389)
!12402 = !DILocation(line: 3711, column: 24, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12398, file: !11179, line: 3710, column: 3)
!12404 = !DILocation(line: 3711, column: 33, scope: !12403)
!12405 = !DILocation(line: 3712, column: 3, scope: !12403)
!12406 = !DILocation(line: 3713, column: 17, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12398, file: !11179, line: 3713, column: 11)
!12408 = !DILocation(line: 3713, column: 20, scope: !12407)
!12409 = !DILocation(line: 3713, column: 35, scope: !12407)
!12410 = !DILocation(line: 0, scope: !12407)
!12411 = !DILocation(line: 3713, column: 11, scope: !12398)
!12412 = !DILocation(line: 3715, column: 33, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12407, file: !11179, line: 3714, column: 3)
!12414 = !DILocation(line: 3716, column: 3, scope: !12413)
!12415 = !DILocation(line: 3719, column: 33, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12407, file: !11179, line: 3718, column: 3)
!12417 = !DILocation(line: 3723, column: 12, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12389, file: !11179, line: 3723, column: 6)
!12419 = !DILocation(line: 3723, column: 15, scope: !12418)
!12420 = !DILocation(line: 3729, column: 24, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12418, file: !11179, line: 3728, column: 3)
!12422 = !DILocation(line: 3729, column: 33, scope: !12421)
!12423 = !DILocation(line: 3732, column: 61, scope: !12389)
!12424 = !DILocation(line: 3732, column: 81, scope: !12389)
!12425 = !DILocation(line: 3732, column: 22, scope: !12389)
!12426 = !DILocation(line: 3732, column: 42, scope: !12389)
!12427 = !DILocation(line: 3735, column: 12, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12389, file: !11179, line: 3735, column: 6)
!12429 = !DILocation(line: 3735, column: 17, scope: !12428)
!12430 = !DILocation(line: 3735, column: 35, scope: !12428)
!12431 = !DILocation(line: 3735, column: 6, scope: !12389)
!12432 = !DILocation(line: 3737, column: 24, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12428, file: !11179, line: 3736, column: 3)
!12434 = !DILocation(line: 3737, column: 33, scope: !12433)
!12435 = !DILocation(line: 3738, column: 3, scope: !12433)
!12436 = !DILocation(line: 3739, column: 17, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12428, file: !11179, line: 3739, column: 11)
!12438 = !DILocation(line: 3739, column: 22, scope: !12437)
!12439 = !DILocation(line: 3739, column: 39, scope: !12437)
!12440 = !DILocation(line: 0, scope: !12437)
!12441 = !DILocation(line: 3739, column: 11, scope: !12428)
!12442 = !DILocation(line: 3741, column: 33, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12437, file: !11179, line: 3740, column: 3)
!12444 = !DILocation(line: 3742, column: 3, scope: !12443)
!12445 = !DILocation(line: 3745, column: 33, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12437, file: !11179, line: 3744, column: 3)
!12447 = !DILocation(line: 3749, column: 12, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12389, file: !11179, line: 3749, column: 6)
!12449 = !DILocation(line: 3749, column: 16, scope: !12448)
!12450 = !DILocation(line: 3755, column: 24, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12448, file: !11179, line: 3754, column: 3)
!12452 = !DILocation(line: 3755, column: 33, scope: !12451)
!12453 = !DILocation(line: 3759, column: 12, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12389, file: !11179, line: 3759, column: 6)
!12455 = !DILocation(line: 3759, column: 15, scope: !12454)
!12456 = !DILocation(line: 3759, column: 30, scope: !12454)
!12457 = !DILocation(line: 3759, column: 6, scope: !12389)
!12458 = !DILocation(line: 3765, column: 28, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12454, file: !11179, line: 3764, column: 3)
!12460 = !DILocation(line: 3765, column: 37, scope: !12459)
!12461 = !DILocation(line: 3767, column: 54, scope: !12389)
!12462 = !DILocation(line: 3767, column: 62, scope: !12389)
!12463 = !DILocation(line: 3767, column: 26, scope: !12389)
!12464 = !DILocation(line: 3767, column: 36, scope: !12389)
!12465 = !DILocation(line: 3768, column: 49, scope: !12389)
!12466 = !DILocation(line: 3768, column: 57, scope: !12389)
!12467 = !DILocation(line: 3768, column: 26, scope: !12389)
!12468 = !DILocation(line: 3768, column: 31, scope: !12389)
!12469 = !DILocation(line: 3769, column: 50, scope: !12389)
!12470 = !DILocation(line: 3769, column: 78, scope: !12389)
!12471 = !DILocation(line: 3769, column: 26, scope: !12389)
!12472 = !DILocation(line: 3769, column: 31, scope: !12389)
!12473 = !DILocation(line: 3770, column: 52, scope: !12389)
!12474 = !DILocation(line: 3770, column: 102, scope: !12389)
!12475 = !DILocation(line: 3770, column: 109, scope: !12389)
!12476 = !DILocation(line: 3770, column: 26, scope: !12389)
!12477 = !DILocation(line: 3770, column: 31, scope: !12389)
!12478 = !DILocation(line: 3771, column: 50, scope: !12389)
!12479 = !DILocation(line: 3771, column: 78, scope: !12389)
!12480 = !DILocation(line: 3771, column: 26, scope: !12389)
!12481 = !DILocation(line: 3771, column: 31, scope: !12389)
!12482 = !DILocation(line: 3772, column: 50, scope: !12389)
!12483 = !DILocation(line: 3772, column: 78, scope: !12389)
!12484 = !DILocation(line: 3772, column: 26, scope: !12389)
!12485 = !DILocation(line: 3772, column: 31, scope: !12389)
!12486 = !DILocation(line: 3773, column: 1, scope: !12389)
!12487 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12488, file: !12488, line: 257, type: !6474, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12489)
!12488 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12489 = !{!12490}
!12490 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12487, file: !12488, line: 257, type: !118)
!12491 = !DILocation(line: 0, scope: !12487)
!12492 = !DILocation(line: 260, column: 3, scope: !12487)
!12493 = !DILocation(line: 261, column: 1, scope: !12487)
!12494 = distinct !DISubprogram(name: "LL_InitTick", scope: !12495, file: !12495, line: 260, type: !9538, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12496)
!12495 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12496 = !{!12497, !12498}
!12497 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12494, file: !12495, line: 260, type: !118)
!12498 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12494, file: !12495, line: 260, type: !118)
!12499 = !DILocation(line: 0, scope: !12494)
!12500 = !DILocation(line: 263, column: 46, scope: !12494)
!12501 = !DILocation(line: 263, column: 55, scope: !12494)
!12502 = !DILocation(line: 263, column: 18, scope: !12494)
!12503 = !DILocation(line: 264, column: 18, scope: !12494)
!12504 = !DILocation(line: 265, column: 18, scope: !12494)
!12505 = !DILocation(line: 267, column: 1, scope: !12494)
!12506 = distinct !DISubprogram(name: "LL_mDelay", scope: !12488, file: !12488, line: 273, type: !6474, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12507)
!12507 = !{!12508, !12509}
!12508 = !DILocalVariable(name: "Delay", arg: 1, scope: !12506, file: !12488, line: 273, type: !118)
!12509 = !DILocalVariable(name: "tmp", scope: !12506, file: !12488, line: 275, type: !314)
!12510 = !DILocation(line: 0, scope: !12506)
!12511 = !DILocation(line: 275, column: 3, scope: !12506)
!12512 = !DILocation(line: 275, column: 18, scope: !12506)
!12513 = !DILocation(line: 275, column: 33, scope: !12506)
!12514 = !DILocation(line: 277, column: 10, scope: !12506)
!12515 = !DILocation(line: 280, column: 12, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12506, file: !12488, line: 280, column: 6)
!12517 = !DILocation(line: 285, column: 3, scope: !12506)
!12518 = !DILocation(line: 287, column: 18, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12520, file: !12488, line: 287, column: 8)
!12520 = distinct !DILexicalBlock(scope: !12506, file: !12488, line: 286, column: 3)
!12521 = !DILocation(line: 292, column: 1, scope: !12506)
!12522 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12488, file: !12488, line: 323, type: !6474, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12523)
!12523 = !{!12524}
!12524 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12522, file: !12488, line: 323, type: !118)
!12525 = !DILocation(line: 0, scope: !12522)
!12526 = !DILocation(line: 326, column: 19, scope: !12522)
!12527 = !DILocation(line: 327, column: 1, scope: !12522)
!12528 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12488, file: !12488, line: 338, type: !12529, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12532)
!12529 = !DISubroutineType(types: !12530)
!12530 = !{!12531, !118}
!12531 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !843, line: 201, baseType: !842)
!12532 = !{!12533, !12534, !12535, !12536, !12537}
!12533 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12528, file: !12488, line: 338, type: !118)
!12534 = !DILocalVariable(name: "timeout", scope: !12528, file: !12488, line: 340, type: !118)
!12535 = !DILocalVariable(name: "getlatency", scope: !12528, file: !12488, line: 341, type: !118)
!12536 = !DILocalVariable(name: "latency", scope: !12528, file: !12488, line: 342, type: !118)
!12537 = !DILocalVariable(name: "status", scope: !12528, file: !12488, line: 343, type: !12531)
!12538 = !DILocation(line: 0, scope: !12528)
!12539 = !DILocation(line: 347, column: 21, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12528, file: !12488, line: 347, column: 6)
!12541 = !DILocation(line: 347, column: 6, scope: !12528)
!12542 = !DILocation(line: 353, column: 8, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12544, file: !12488, line: 353, column: 8)
!12544 = distinct !DILexicalBlock(scope: !12540, file: !12488, line: 352, column: 3)
!12545 = !DILocation(line: 353, column: 40, scope: !12543)
!12546 = !DILocation(line: 353, column: 8, scope: !12544)
!12547 = !DILocation(line: 356, column: 26, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12549, file: !12488, line: 356, column: 10)
!12549 = distinct !DILexicalBlock(scope: !12543, file: !12488, line: 354, column: 5)
!12550 = !DILocation(line: 356, column: 55, scope: !12548)
!12551 = !DILocation(line: 362, column: 55, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12549, file: !12488, line: 362, column: 10)
!12553 = !DILocation(line: 368, column: 55, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12549, file: !12488, line: 368, column: 10)
!12555 = !DILocation(line: 374, column: 26, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12549, file: !12488, line: 374, column: 10)
!12557 = !DILocation(line: 374, column: 55, scope: !12556)
!12558 = !DILocation(line: 380, column: 28, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12560, file: !12488, line: 380, column: 12)
!12560 = distinct !DILexicalBlock(scope: !12556, file: !12488, line: 379, column: 7)
!12561 = !DILocation(line: 380, column: 57, scope: !12559)
!12562 = !DILocation(line: 387, column: 8, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12544, file: !12488, line: 387, column: 8)
!12564 = !DILocation(line: 387, column: 40, scope: !12563)
!12565 = !DILocation(line: 387, column: 8, scope: !12544)
!12566 = !DILocation(line: 390, column: 26, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12568, file: !12488, line: 390, column: 10)
!12568 = distinct !DILexicalBlock(scope: !12563, file: !12488, line: 388, column: 5)
!12569 = !DILocation(line: 390, column: 55, scope: !12567)
!12570 = !DILocation(line: 396, column: 26, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12568, file: !12488, line: 396, column: 10)
!12572 = !DILocation(line: 396, column: 55, scope: !12571)
!12573 = !DILocation(line: 402, column: 26, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12568, file: !12488, line: 402, column: 10)
!12575 = !DILocation(line: 402, column: 55, scope: !12574)
!12576 = !DILocation(line: 407, column: 26, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12568, file: !12488, line: 407, column: 10)
!12578 = !DILocation(line: 407, column: 55, scope: !12577)
!12579 = !DILocation(line: 413, column: 28, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12581, file: !12488, line: 413, column: 12)
!12581 = distinct !DILexicalBlock(scope: !12577, file: !12488, line: 412, column: 7)
!12582 = !DILocation(line: 413, column: 57, scope: !12580)
!12583 = !DILocation(line: 0, scope: !12544)
!12584 = !DILocation(line: 420, column: 8, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12544, file: !12488, line: 420, column: 8)
!12586 = !DILocation(line: 420, column: 40, scope: !12585)
!12587 = !DILocation(line: 420, column: 8, scope: !12544)
!12588 = !DILocation(line: 423, column: 26, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12590, file: !12488, line: 423, column: 10)
!12590 = distinct !DILexicalBlock(scope: !12585, file: !12488, line: 421, column: 5)
!12591 = !DILocation(line: 423, column: 55, scope: !12589)
!12592 = !DILocation(line: 429, column: 26, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !12590, file: !12488, line: 429, column: 10)
!12594 = !DILocation(line: 429, column: 55, scope: !12593)
!12595 = !DILocation(line: 435, column: 28, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12597, file: !12488, line: 435, column: 12)
!12597 = distinct !DILexicalBlock(scope: !12593, file: !12488, line: 434, column: 7)
!12598 = !DILocation(line: 435, column: 57, scope: !12596)
!12599 = !DILocation(line: 444, column: 5, scope: !12544)
!12600 = !DILocation(line: 448, column: 5, scope: !12544)
!12601 = !DILocation(line: 451, column: 18, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12544, file: !12488, line: 449, column: 5)
!12603 = !DILocation(line: 452, column: 12, scope: !12602)
!12604 = !DILocation(line: 453, column: 26, scope: !12544)
!12605 = !DILocation(line: 453, column: 38, scope: !12544)
!12606 = !DILocation(line: 453, column: 5, scope: !12602)
!12607 = distinct !{!12607, !12600, !12608}
!12608 = !DILocation(line: 453, column: 54, scope: !12544)
!12609 = !DILocation(line: 0, scope: !12540)
!12610 = !DILocation(line: 464, column: 3, scope: !12528)
!12611 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12612, file: !12612, line: 519, type: !3257, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !2102)
!12612 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12613 = !DILocation(line: 521, column: 21, scope: !12611)
!12614 = !DILocation(line: 521, column: 3, scope: !12611)
!12615 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6079, file: !6079, line: 1543, type: !6474, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12616)
!12616 = !{!12617}
!12617 = !DILocalVariable(name: "Latency", arg: 1, scope: !12615, file: !6079, line: 1543, type: !118)
!12618 = !DILocation(line: 0, scope: !12615)
!12619 = !DILocation(line: 1545, column: 3, scope: !12615)
!12620 = !DILocation(line: 1546, column: 1, scope: !12615)
!12621 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6079, file: !6079, line: 1569, type: !3257, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !2102)
!12622 = !DILocation(line: 1571, column: 21, scope: !12621)
!12623 = !DILocation(line: 1571, column: 3, scope: !12621)
!12624 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12488, file: !12488, line: 483, type: !12625, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12641)
!12625 = !DISubroutineType(types: !12626)
!12626 = !{!12531, !12627, !12634}
!12627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12628, size: 32)
!12628 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12495, line: 114, baseType: !12629)
!12629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12495, line: 94, size: 96, elements: !12630)
!12630 = !{!12631, !12632, !12633}
!12631 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12629, file: !12495, line: 96, baseType: !118, size: 32)
!12632 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12629, file: !12495, line: 102, baseType: !118, size: 32, offset: 32)
!12633 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12629, file: !12495, line: 109, baseType: !118, size: 32, offset: 64)
!12634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12635, size: 32)
!12635 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12495, line: 139, baseType: !12636)
!12636 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12495, line: 119, size: 96, elements: !12637)
!12637 = !{!12638, !12639, !12640}
!12638 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12636, file: !12495, line: 121, baseType: !118, size: 32)
!12639 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12636, file: !12495, line: 127, baseType: !118, size: 32, offset: 32)
!12640 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12636, file: !12495, line: 133, baseType: !118, size: 32, offset: 64)
!12641 = !{!12642, !12643, !12644, !12645}
!12642 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12624, file: !12488, line: 483, type: !12627)
!12643 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12624, file: !12488, line: 484, type: !12634)
!12644 = !DILocalVariable(name: "status", scope: !12624, file: !12488, line: 486, type: !12531)
!12645 = !DILocalVariable(name: "pllfreq", scope: !12624, file: !12488, line: 487, type: !118)
!12646 = !DILocation(line: 0, scope: !12624)
!12647 = !DILocation(line: 490, column: 6, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12624, file: !12488, line: 490, column: 6)
!12649 = !DILocation(line: 490, column: 25, scope: !12648)
!12650 = !DILocation(line: 490, column: 6, scope: !12624)
!12651 = !DILocation(line: 493, column: 15, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12648, file: !12488, line: 491, column: 3)
!12653 = !DILocation(line: 496, column: 8, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12652, file: !12488, line: 496, column: 8)
!12655 = !DILocation(line: 496, column: 29, scope: !12654)
!12656 = !DILocation(line: 496, column: 8, scope: !12652)
!12657 = !DILocation(line: 498, column: 7, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12654, file: !12488, line: 497, column: 5)
!12659 = !DILocation(line: 499, column: 7, scope: !12658)
!12660 = !DILocation(line: 499, column: 14, scope: !12658)
!12661 = !DILocation(line: 499, column: 35, scope: !12658)
!12662 = distinct !{!12662, !12659, !12663}
!12663 = !DILocation(line: 502, column: 7, scope: !12658)
!12664 = !DILocation(line: 506, column: 76, scope: !12652)
!12665 = !DILocation(line: 506, column: 103, scope: !12652)
!12666 = !DILocation(line: 507, column: 54, scope: !12652)
!12667 = !DILocation(line: 506, column: 5, scope: !12652)
!12668 = !DILocation(line: 510, column: 14, scope: !12652)
!12669 = !DILocation(line: 511, column: 3, scope: !12652)
!12670 = !DILocation(line: 0, scope: !12648)
!12671 = !DILocation(line: 518, column: 3, scope: !12624)
!12672 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12488, file: !12488, line: 642, type: !12673, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12675)
!12673 = !DISubroutineType(types: !12674)
!12674 = !{!12531}
!12675 = !{!12676}
!12676 = !DILocalVariable(name: "status", scope: !12672, file: !12488, line: 644, type: !12531)
!12677 = !DILocation(line: 0, scope: !12672)
!12678 = !DILocation(line: 647, column: 6, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12672, file: !12488, line: 647, column: 6)
!12680 = !DILocation(line: 647, column: 27, scope: !12679)
!12681 = !DILocation(line: 655, column: 6, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12672, file: !12488, line: 655, column: 6)
!12683 = !DILocation(line: 655, column: 30, scope: !12682)
!12684 = !DILocation(line: 663, column: 6, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12672, file: !12488, line: 663, column: 6)
!12686 = !DILocation(line: 663, column: 30, scope: !12685)
!12687 = !DILocation(line: 663, column: 6, scope: !12672)
!12688 = !DILocation(line: 669, column: 3, scope: !12672)
!12689 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12488, file: !12488, line: 611, type: !12690, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12692)
!12690 = !DISubroutineType(types: !12691)
!12691 = !{!118, !118, !12627}
!12692 = !{!12693, !12694, !12695}
!12693 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12689, file: !12488, line: 611, type: !118)
!12694 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12689, file: !12488, line: 611, type: !12627)
!12695 = !DILocalVariable(name: "pllfreq", scope: !12689, file: !12488, line: 613, type: !118)
!12696 = !DILocation(line: 0, scope: !12689)
!12697 = !DILocation(line: 622, column: 56, scope: !12689)
!12698 = !DILocation(line: 622, column: 61, scope: !12689)
!12699 = !DILocation(line: 622, column: 32, scope: !12689)
!12700 = !DILocation(line: 626, column: 45, scope: !12689)
!12701 = !DILocation(line: 626, column: 50, scope: !12689)
!12702 = !DILocation(line: 626, column: 21, scope: !12689)
!12703 = !DILocation(line: 630, column: 47, scope: !12689)
!12704 = !DILocation(line: 630, column: 82, scope: !12689)
!12705 = !DILocation(line: 630, column: 21, scope: !12689)
!12706 = !DILocation(line: 633, column: 3, scope: !12689)
!12707 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8863, file: !8863, line: 3007, type: !3257, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !2102)
!12708 = !DILocation(line: 3009, column: 11, scope: !12707)
!12709 = !DILocation(line: 3009, column: 44, scope: !12707)
!12710 = !DILocation(line: 3009, column: 3, scope: !12707)
!12711 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8863, file: !8863, line: 2987, type: !3019, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !2102)
!12712 = !DILocation(line: 2989, column: 3, scope: !12711)
!12713 = !DILocation(line: 2990, column: 1, scope: !12711)
!12714 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8863, file: !8863, line: 4304, type: !8997, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12715)
!12715 = !{!12716, !12717, !12718, !12719}
!12716 = !DILocalVariable(name: "Source", arg: 1, scope: !12714, file: !8863, line: 4304, type: !118)
!12717 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12714, file: !8863, line: 4304, type: !118)
!12718 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12714, file: !8863, line: 4304, type: !118)
!12719 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12714, file: !8863, line: 4304, type: !118)
!12720 = !DILocation(line: 0, scope: !12714)
!12721 = !DILocation(line: 4306, column: 3, scope: !12714)
!12722 = !DILocation(line: 4308, column: 3, scope: !12714)
!12723 = !DILocation(line: 4310, column: 3, scope: !12714)
!12724 = !DILocation(line: 4312, column: 1, scope: !12714)
!12725 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12488, file: !12488, line: 681, type: !12726, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12728)
!12726 = !DISubroutineType(types: !12727)
!12727 = !{!12531, !118, !12634}
!12728 = !{!12729, !12730, !12731, !12732}
!12729 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12725, file: !12488, line: 681, type: !118)
!12730 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12725, file: !12488, line: 681, type: !12634)
!12731 = !DILocalVariable(name: "status", scope: !12725, file: !12488, line: 683, type: !12531)
!12732 = !DILocalVariable(name: "hclk_frequency", scope: !12725, file: !12488, line: 684, type: !118)
!12733 = !DILocation(line: 0, scope: !12725)
!12734 = !DILocation(line: 691, column: 20, scope: !12725)
!12735 = !DILocation(line: 694, column: 6, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12725, file: !12488, line: 694, column: 6)
!12737 = !DILocation(line: 694, column: 22, scope: !12736)
!12738 = !DILocation(line: 694, column: 6, scope: !12725)
!12739 = !DILocation(line: 697, column: 14, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12736, file: !12488, line: 695, column: 3)
!12741 = !DILocation(line: 701, column: 13, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12725, file: !12488, line: 701, column: 6)
!12743 = !DILocation(line: 701, column: 6, scope: !12725)
!12744 = !DILocation(line: 704, column: 5, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12742, file: !12488, line: 702, column: 3)
!12746 = !DILocation(line: 705, column: 5, scope: !12745)
!12747 = !DILocation(line: 705, column: 12, scope: !12745)
!12748 = !DILocation(line: 705, column: 33, scope: !12745)
!12749 = distinct !{!12749, !12746, !12750}
!12750 = !DILocation(line: 708, column: 5, scope: !12745)
!12751 = !DILocation(line: 711, column: 49, scope: !12745)
!12752 = !DILocation(line: 711, column: 5, scope: !12745)
!12753 = !DILocation(line: 712, column: 5, scope: !12745)
!12754 = !DILocation(line: 713, column: 5, scope: !12745)
!12755 = !DILocation(line: 713, column: 12, scope: !12745)
!12756 = !DILocation(line: 713, column: 37, scope: !12745)
!12757 = distinct !{!12757, !12754, !12758}
!12758 = !DILocation(line: 716, column: 5, scope: !12745)
!12759 = !DILocation(line: 719, column: 50, scope: !12745)
!12760 = !DILocation(line: 719, column: 5, scope: !12745)
!12761 = !DILocation(line: 720, column: 50, scope: !12745)
!12762 = !DILocation(line: 720, column: 5, scope: !12745)
!12763 = !DILocation(line: 721, column: 3, scope: !12745)
!12764 = !DILocation(line: 724, column: 6, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12725, file: !12488, line: 724, column: 6)
!12766 = !DILocation(line: 724, column: 22, scope: !12765)
!12767 = !DILocation(line: 724, column: 6, scope: !12725)
!12768 = !DILocation(line: 727, column: 14, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12765, file: !12488, line: 725, column: 3)
!12770 = !DILocation(line: 728, column: 3, scope: !12769)
!12771 = !DILocation(line: 731, column: 13, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12725, file: !12488, line: 731, column: 6)
!12773 = !DILocation(line: 731, column: 6, scope: !12725)
!12774 = !DILocation(line: 733, column: 5, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12772, file: !12488, line: 732, column: 3)
!12776 = !DILocation(line: 734, column: 3, scope: !12775)
!12777 = !DILocation(line: 736, column: 3, scope: !12725)
!12778 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8863, file: !8863, line: 4184, type: !3019, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !2102)
!12779 = !DILocation(line: 4186, column: 3, scope: !12778)
!12780 = !DILocation(line: 4187, column: 1, scope: !12778)
!12781 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8863, file: !8863, line: 4205, type: !3257, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !2102)
!12782 = !DILocation(line: 4207, column: 11, scope: !12781)
!12783 = !DILocation(line: 4207, column: 44, scope: !12781)
!12784 = !DILocation(line: 4207, column: 3, scope: !12781)
!12785 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8863, file: !8863, line: 3224, type: !6474, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12786)
!12786 = !{!12787}
!12787 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12785, file: !8863, line: 3224, type: !118)
!12788 = !DILocation(line: 0, scope: !12785)
!12789 = !DILocation(line: 3226, column: 3, scope: !12785)
!12790 = !DILocation(line: 3227, column: 1, scope: !12785)
!12791 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8863, file: !8863, line: 3188, type: !6474, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12792)
!12792 = !{!12793}
!12793 = !DILocalVariable(name: "Source", arg: 1, scope: !12791, file: !8863, line: 3188, type: !118)
!12794 = !DILocation(line: 0, scope: !12791)
!12795 = !DILocation(line: 3190, column: 3, scope: !12791)
!12796 = !DILocation(line: 3191, column: 1, scope: !12791)
!12797 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8863, file: !8863, line: 3204, type: !3257, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !2102)
!12798 = !DILocation(line: 3206, column: 21, scope: !12797)
!12799 = !DILocation(line: 3206, column: 3, scope: !12797)
!12800 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8863, file: !8863, line: 3240, type: !6474, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12801)
!12801 = !{!12802}
!12802 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12800, file: !8863, line: 3240, type: !118)
!12803 = !DILocation(line: 0, scope: !12800)
!12804 = !DILocation(line: 3242, column: 3, scope: !12800)
!12805 = !DILocation(line: 3243, column: 1, scope: !12800)
!12806 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8863, file: !8863, line: 3256, type: !6474, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12807)
!12807 = !{!12808}
!12808 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12806, file: !8863, line: 3256, type: !118)
!12809 = !DILocation(line: 0, scope: !12806)
!12810 = !DILocation(line: 3258, column: 3, scope: !12806)
!12811 = !DILocation(line: 3259, column: 1, scope: !12806)
!12812 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8863, file: !8863, line: 5969, type: !3257, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !2102)
!12813 = !DILocation(line: 5971, column: 11, scope: !12812)
!12814 = !DILocation(line: 5971, column: 47, scope: !12812)
!12815 = !DILocation(line: 5971, column: 3, scope: !12812)
!12816 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8863, file: !8863, line: 5153, type: !3257, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !2102)
!12817 = !DILocation(line: 5155, column: 11, scope: !12816)
!12818 = !DILocation(line: 5155, column: 47, scope: !12816)
!12819 = !DILocation(line: 5155, column: 3, scope: !12816)
!12820 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12488, file: !12488, line: 540, type: !12821, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !12823)
!12821 = !DISubroutineType(types: !12822)
!12822 = !{!12531, !118, !118, !12627, !12634}
!12823 = !{!12824, !12825, !12826, !12827, !12828, !12829}
!12824 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12820, file: !12488, line: 540, type: !118)
!12825 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12820, file: !12488, line: 540, type: !118)
!12826 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12820, file: !12488, line: 541, type: !12627)
!12827 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12820, file: !12488, line: 541, type: !12634)
!12828 = !DILocalVariable(name: "status", scope: !12820, file: !12488, line: 543, type: !12531)
!12829 = !DILocalVariable(name: "pllfreq", scope: !12820, file: !12488, line: 544, type: !118)
!12830 = !DILocation(line: 0, scope: !12820)
!12831 = !DILocation(line: 551, column: 6, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12820, file: !12488, line: 551, column: 6)
!12833 = !DILocation(line: 551, column: 25, scope: !12832)
!12834 = !DILocation(line: 551, column: 6, scope: !12820)
!12835 = !DILocation(line: 554, column: 15, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12832, file: !12488, line: 552, column: 3)
!12837 = !DILocation(line: 557, column: 8, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12836, file: !12488, line: 557, column: 8)
!12839 = !DILocation(line: 557, column: 29, scope: !12838)
!12840 = !DILocation(line: 557, column: 8, scope: !12836)
!12841 = !DILocation(line: 560, column: 20, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12843, file: !12488, line: 560, column: 10)
!12843 = distinct !DILexicalBlock(scope: !12838, file: !12488, line: 558, column: 5)
!12844 = !DILocation(line: 560, column: 10, scope: !12843)
!12845 = !DILocation(line: 562, column: 9, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12842, file: !12488, line: 561, column: 7)
!12847 = !DILocation(line: 563, column: 7, scope: !12846)
!12848 = !DILocation(line: 566, column: 9, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12842, file: !12488, line: 565, column: 7)
!12850 = !DILocation(line: 570, column: 7, scope: !12843)
!12851 = !DILocation(line: 571, column: 7, scope: !12843)
!12852 = !DILocation(line: 571, column: 14, scope: !12843)
!12853 = !DILocation(line: 571, column: 35, scope: !12843)
!12854 = distinct !{!12854, !12851, !12855}
!12855 = !DILocation(line: 574, column: 7, scope: !12843)
!12856 = !DILocation(line: 578, column: 76, scope: !12836)
!12857 = !DILocation(line: 578, column: 103, scope: !12836)
!12858 = !DILocation(line: 579, column: 54, scope: !12836)
!12859 = !DILocation(line: 578, column: 5, scope: !12836)
!12860 = !DILocation(line: 582, column: 14, scope: !12836)
!12861 = !DILocation(line: 583, column: 3, scope: !12836)
!12862 = !DILocation(line: 0, scope: !12832)
!12863 = !DILocation(line: 590, column: 3, scope: !12820)
!12864 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8863, file: !8863, line: 2969, type: !3257, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !2102)
!12865 = !DILocation(line: 2971, column: 11, scope: !12864)
!12866 = !DILocation(line: 2971, column: 44, scope: !12864)
!12867 = !DILocation(line: 2971, column: 3, scope: !12864)
!12868 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8863, file: !8863, line: 2929, type: !3019, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !2102)
!12869 = !DILocation(line: 2931, column: 3, scope: !12868)
!12870 = !DILocation(line: 2932, column: 1, scope: !12868)
!12871 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8863, file: !8863, line: 2939, type: !3019, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !2102)
!12872 = !DILocation(line: 2941, column: 3, scope: !12871)
!12873 = !DILocation(line: 2942, column: 1, scope: !12871)
!12874 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8863, file: !8863, line: 2949, type: !3019, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2912, retainedNodes: !2102)
!12875 = !DILocation(line: 2951, column: 3, scope: !12874)
!12876 = !DILocation(line: 2952, column: 1, scope: !12874)
!12877 = distinct !DISubprogram(name: "z_device_state_init", scope: !12878, file: !12878, line: 23, type: !3019, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !12879)
!12878 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12879 = !{!12880}
!12880 = !DILocalVariable(name: "dev", scope: !12877, file: !12878, line: 25, type: !12881)
!12881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12882, size: 32)
!12882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12883)
!12883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !12884)
!12884 = !{!12885, !12886, !12887, !12888, !12894, !12895}
!12885 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12883, file: !334, line: 380, baseType: !278, size: 32)
!12886 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12883, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!12887 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12883, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!12888 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12883, file: !334, line: 386, baseType: !12889, size: 32, offset: 96)
!12889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12890, size: 32)
!12890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !12891)
!12891 = !{!12892, !12893}
!12892 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12890, file: !334, line: 359, baseType: !185, size: 8)
!12893 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12890, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12894 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12883, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!12895 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12883, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!12896 = !DILocation(line: 0, scope: !12877)
!12897 = !DILocation(line: 31, column: 1, scope: !12877)
!12898 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12878, file: !12878, line: 33, type: !12899, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !12901)
!12899 = !DISubroutineType(types: !12900)
!12900 = !{!12881, !278}
!12901 = !{!12902, !12903}
!12902 = !DILocalVariable(name: "name", arg: 1, scope: !12898, file: !12878, line: 33, type: !278)
!12903 = !DILocalVariable(name: "dev", scope: !12898, file: !12878, line: 35, type: !12881)
!12904 = !DILocation(line: 0, scope: !12898)
!12905 = !DILocation(line: 40, column: 12, scope: !12906)
!12906 = distinct !DILexicalBlock(scope: !12898, file: !12878, line: 40, column: 6)
!12907 = !DILocation(line: 40, column: 21, scope: !12906)
!12908 = !DILocation(line: 40, column: 25, scope: !12906)
!12909 = !DILocation(line: 40, column: 33, scope: !12906)
!12910 = !DILocation(line: 40, column: 6, scope: !12898)
!12911 = !DILocation(line: 55, column: 2, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12898, file: !12878, line: 55, column: 2)
!12913 = !DILocation(line: 50, column: 7, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12915, file: !12878, line: 50, column: 7)
!12915 = distinct !DILexicalBlock(scope: !12916, file: !12878, line: 49, column: 57)
!12916 = distinct !DILexicalBlock(scope: !12917, file: !12878, line: 49, column: 2)
!12917 = distinct !DILexicalBlock(scope: !12898, file: !12878, line: 49, column: 2)
!12918 = !DILocation(line: 50, column: 30, scope: !12914)
!12919 = !DILocation(line: 50, column: 39, scope: !12914)
!12920 = !DILocation(line: 50, column: 44, scope: !12914)
!12921 = !DILocation(line: 50, column: 7, scope: !12915)
!12922 = !DILocation(line: 49, column: 53, scope: !12916)
!12923 = !DILocation(line: 49, column: 33, scope: !12916)
!12924 = !DILocation(line: 49, column: 2, scope: !12917)
!12925 = distinct !{!12925, !12924, !12926}
!12926 = !DILocation(line: 53, column: 2, scope: !12917)
!12927 = !DILocation(line: 56, column: 7, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12929, file: !12878, line: 56, column: 7)
!12929 = distinct !DILexicalBlock(scope: !12930, file: !12878, line: 55, column: 57)
!12930 = distinct !DILexicalBlock(scope: !12912, file: !12878, line: 55, column: 2)
!12931 = !DILocation(line: 56, column: 30, scope: !12928)
!12932 = !DILocation(line: 56, column: 52, scope: !12928)
!12933 = !DILocation(line: 56, column: 34, scope: !12928)
!12934 = !DILocation(line: 56, column: 58, scope: !12928)
!12935 = !DILocation(line: 56, column: 7, scope: !12929)
!12936 = !DILocation(line: 55, column: 53, scope: !12930)
!12937 = !DILocation(line: 55, column: 33, scope: !12930)
!12938 = distinct !{!12938, !12911, !12939}
!12939 = !DILocation(line: 59, column: 2, scope: !12912)
!12940 = !DILocation(line: 62, column: 1, scope: !12898)
!12941 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12878, file: !12878, line: 93, type: !12942, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !12944)
!12942 = !DISubroutineType(types: !12943)
!12943 = !{!345, !12881}
!12944 = !{!12945}
!12945 = !DILocalVariable(name: "dev", arg: 1, scope: !12941, file: !12878, line: 93, type: !12881)
!12946 = !DILocation(line: 0, scope: !12941)
!12947 = !DILocation(line: 99, column: 10, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12941, file: !12878, line: 99, column: 6)
!12949 = !DILocation(line: 99, column: 6, scope: !12941)
!12950 = !DILocation(line: 103, column: 14, scope: !12941)
!12951 = !DILocation(line: 103, column: 21, scope: !12941)
!12952 = !DILocation(line: 103, column: 33, scope: !12941)
!12953 = !DILocation(line: 103, column: 49, scope: !12941)
!12954 = !DILocation(line: 103, column: 58, scope: !12941)
!12955 = !DILocation(line: 104, column: 1, scope: !12941)
!12956 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12878, file: !12878, line: 87, type: !12957, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !12960)
!12957 = !DISubroutineType(types: !12958)
!12958 = !{!239, !12959}
!12959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12881, size: 32)
!12960 = !{!12961}
!12961 = !DILocalVariable(name: "devices", arg: 1, scope: !12956, file: !12878, line: 87, type: !12959)
!12962 = !DILocation(line: 0, scope: !12956)
!12963 = !DILocation(line: 89, column: 11, scope: !12956)
!12964 = !DILocation(line: 90, column: 2, scope: !12956)
!12965 = distinct !DISubprogram(name: "device_required_foreach", scope: !12878, file: !12878, line: 125, type: !12966, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !12972)
!12966 = !DISubroutineType(types: !12967)
!12967 = !{!119, !12881, !12968, !113}
!12968 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !334, line: 471, baseType: !12969)
!12969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12970, size: 32)
!12970 = !DISubroutineType(types: !12971)
!12971 = !{!119, !12881, !113}
!12972 = !{!12973, !12974, !12975, !12976, !12977}
!12973 = !DILocalVariable(name: "dev", arg: 1, scope: !12965, file: !12878, line: 125, type: !12881)
!12974 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12965, file: !12878, line: 126, type: !12968)
!12975 = !DILocalVariable(name: "context", arg: 3, scope: !12965, file: !12878, line: 127, type: !113)
!12976 = !DILocalVariable(name: "handle_count", scope: !12965, file: !12878, line: 129, type: !239)
!12977 = !DILocalVariable(name: "handles", scope: !12965, file: !12878, line: 130, type: !348)
!12978 = !DILocation(line: 0, scope: !12965)
!12979 = !DILocation(line: 129, column: 2, scope: !12965)
!12980 = !DILocation(line: 129, column: 9, scope: !12965)
!12981 = !DILocation(line: 130, column: 35, scope: !12965)
!12982 = !DILocation(line: 132, column: 33, scope: !12965)
!12983 = !DILocation(line: 132, column: 9, scope: !12965)
!12984 = !DILocation(line: 133, column: 1, scope: !12965)
!12985 = !DILocation(line: 132, column: 2, scope: !12965)
!12986 = distinct !DISubprogram(name: "device_required_handles_get", scope: !334, file: !334, line: 493, type: !12987, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !12989)
!12987 = !DISubroutineType(types: !12988)
!12988 = !{!348, !12881, !2485}
!12989 = !{!12990, !12991, !12992, !12993}
!12990 = !DILocalVariable(name: "dev", arg: 1, scope: !12986, file: !334, line: 493, type: !12881)
!12991 = !DILocalVariable(name: "count", arg: 2, scope: !12986, file: !334, line: 493, type: !2485)
!12992 = !DILocalVariable(name: "rv", scope: !12986, file: !334, line: 495, type: !348)
!12993 = !DILocalVariable(name: "i", scope: !12994, file: !334, line: 498, type: !239)
!12994 = distinct !DILexicalBlock(scope: !12995, file: !334, line: 497, column: 18)
!12995 = distinct !DILexicalBlock(scope: !12986, file: !334, line: 497, column: 6)
!12996 = !DILocation(line: 0, scope: !12986)
!12997 = !DILocation(line: 495, column: 35, scope: !12986)
!12998 = !DILocation(line: 497, column: 9, scope: !12995)
!12999 = !DILocation(line: 497, column: 6, scope: !12986)
!13000 = !DILocation(line: 0, scope: !12994)
!13001 = !DILocation(line: 500, column: 11, scope: !12994)
!13002 = !DILocation(line: 500, column: 40, scope: !12994)
!13003 = !DILocation(line: 502, column: 4, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !12994, file: !334, line: 501, column: 40)
!13005 = distinct !{!13005, !13006, !13007}
!13006 = !DILocation(line: 500, column: 3, scope: !12994)
!13007 = !DILocation(line: 503, column: 3, scope: !12994)
!13008 = !DILocation(line: 504, column: 10, scope: !12994)
!13009 = !DILocation(line: 505, column: 2, scope: !12994)
!13010 = !DILocation(line: 507, column: 2, scope: !12986)
!13011 = distinct !DISubprogram(name: "device_visitor", scope: !12878, file: !12878, line: 106, type: !13012, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !13014)
!13012 = !DISubroutineType(types: !13013)
!13013 = !{!119, !348, !239, !12968, !113}
!13014 = !{!13015, !13016, !13017, !13018, !13019, !13021, !13024, !13025}
!13015 = !DILocalVariable(name: "handles", arg: 1, scope: !13011, file: !12878, line: 106, type: !348)
!13016 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13011, file: !12878, line: 107, type: !239)
!13017 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13011, file: !12878, line: 108, type: !12968)
!13018 = !DILocalVariable(name: "context", arg: 4, scope: !13011, file: !12878, line: 109, type: !113)
!13019 = !DILocalVariable(name: "i", scope: !13020, file: !12878, line: 112, type: !239)
!13020 = distinct !DILexicalBlock(scope: !13011, file: !12878, line: 112, column: 2)
!13021 = !DILocalVariable(name: "dh", scope: !13022, file: !12878, line: 113, type: !350)
!13022 = distinct !DILexicalBlock(scope: !13023, file: !12878, line: 112, column: 44)
!13023 = distinct !DILexicalBlock(scope: !13020, file: !12878, line: 112, column: 2)
!13024 = !DILocalVariable(name: "rdev", scope: !13022, file: !12878, line: 114, type: !12881)
!13025 = !DILocalVariable(name: "rc", scope: !13022, file: !12878, line: 115, type: !119)
!13026 = !DILocation(line: 0, scope: !13011)
!13027 = !DILocation(line: 0, scope: !13020)
!13028 = !DILocation(line: 112, column: 23, scope: !13023)
!13029 = !DILocation(line: 112, column: 2, scope: !13020)
!13030 = distinct !{!13030, !13029, !13031}
!13031 = !DILocation(line: 120, column: 2, scope: !13020)
!13032 = !DILocation(line: 113, column: 24, scope: !13022)
!13033 = !DILocation(line: 0, scope: !13022)
!13034 = !DILocation(line: 114, column: 31, scope: !13022)
!13035 = !DILocation(line: 115, column: 12, scope: !13022)
!13036 = !DILocation(line: 117, column: 10, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !13022, file: !12878, line: 117, column: 7)
!13038 = !DILocation(line: 112, column: 39, scope: !13023)
!13039 = !DILocation(line: 123, column: 1, scope: !13011)
!13040 = distinct !DISubprogram(name: "device_from_handle", scope: !334, file: !334, line: 439, type: !13041, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !13043)
!13041 = !DISubroutineType(types: !13042)
!13042 = !{!12881, !350}
!13043 = !{!13044, !13045, !13046}
!13044 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13040, file: !334, line: 439, type: !350)
!13045 = !DILocalVariable(name: "dev", scope: !13040, file: !334, line: 443, type: !12881)
!13046 = !DILocalVariable(name: "numdev", scope: !13040, file: !334, line: 444, type: !239)
!13047 = !DILocation(line: 0, scope: !13040)
!13048 = !DILocation(line: 446, column: 7, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !13040, file: !334, line: 446, column: 6)
!13050 = !DILocation(line: 446, column: 18, scope: !13049)
!13051 = !DILocation(line: 446, column: 23, scope: !13049)
!13052 = !DILocation(line: 450, column: 2, scope: !13040)
!13053 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12878, file: !12878, line: 135, type: !12966, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !13054)
!13054 = !{!13055, !13056, !13057, !13058, !13059}
!13055 = !DILocalVariable(name: "dev", arg: 1, scope: !13053, file: !12878, line: 135, type: !12881)
!13056 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13053, file: !12878, line: 136, type: !12968)
!13057 = !DILocalVariable(name: "context", arg: 3, scope: !13053, file: !12878, line: 137, type: !113)
!13058 = !DILocalVariable(name: "handle_count", scope: !13053, file: !12878, line: 139, type: !239)
!13059 = !DILocalVariable(name: "handles", scope: !13053, file: !12878, line: 140, type: !348)
!13060 = !DILocation(line: 0, scope: !13053)
!13061 = !DILocation(line: 139, column: 2, scope: !13053)
!13062 = !DILocation(line: 139, column: 9, scope: !13053)
!13063 = !DILocation(line: 140, column: 35, scope: !13053)
!13064 = !DILocation(line: 142, column: 33, scope: !13053)
!13065 = !DILocation(line: 142, column: 9, scope: !13053)
!13066 = !DILocation(line: 143, column: 1, scope: !13053)
!13067 = !DILocation(line: 142, column: 2, scope: !13053)
!13068 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !334, file: !334, line: 573, type: !12987, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2979, retainedNodes: !13069)
!13069 = !{!13070, !13071, !13072, !13073, !13074}
!13070 = !DILocalVariable(name: "dev", arg: 1, scope: !13068, file: !334, line: 573, type: !12881)
!13071 = !DILocalVariable(name: "count", arg: 2, scope: !13068, file: !334, line: 573, type: !2485)
!13072 = !DILocalVariable(name: "rv", scope: !13068, file: !334, line: 575, type: !348)
!13073 = !DILocalVariable(name: "region", scope: !13068, file: !334, line: 576, type: !239)
!13074 = !DILocalVariable(name: "i", scope: !13068, file: !334, line: 577, type: !239)
!13075 = !DILocation(line: 0, scope: !13068)
!13076 = !DILocation(line: 575, column: 35, scope: !13068)
!13077 = !DILocation(line: 579, column: 9, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13068, file: !334, line: 579, column: 6)
!13079 = !DILocation(line: 579, column: 6, scope: !13068)
!13080 = !DILocation(line: 582, column: 8, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13082, file: !334, line: 582, column: 8)
!13082 = distinct !DILexicalBlock(scope: !13083, file: !334, line: 581, column: 23)
!13083 = distinct !DILexicalBlock(scope: !13078, file: !334, line: 579, column: 18)
!13084 = !DILocation(line: 582, column: 12, scope: !13081)
!13085 = !DILocation(line: 585, column: 6, scope: !13082)
!13086 = !DILocation(line: 0, scope: !13083)
!13087 = !DILocation(line: 581, column: 17, scope: !13083)
!13088 = !DILocation(line: 581, column: 3, scope: !13083)
!13089 = !DILocation(line: 588, column: 10, scope: !13083)
!13090 = !DILocation(line: 588, column: 16, scope: !13083)
!13091 = !DILocation(line: 589, column: 4, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13083, file: !334, line: 588, column: 39)
!13093 = !DILocation(line: 588, column: 3, scope: !13083)
!13094 = distinct !{!13094, !13093, !13095}
!13095 = !DILocation(line: 590, column: 3, scope: !13083)
!13096 = !DILocation(line: 591, column: 10, scope: !13083)
!13097 = !DILocation(line: 592, column: 2, scope: !13083)
!13098 = !DILocation(line: 575, column: 25, scope: !13068)
!13099 = !DILocation(line: 594, column: 2, scope: !13068)
!13100 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1893, file: !1893, line: 49, type: !13101, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1890, retainedNodes: !2102)
!13101 = !DISubroutineType(types: !13102)
!13102 = !{!280}
!13103 = !DILocation(line: 51, column: 10, scope: !13100)
!13104 = !DILocation(line: 51, column: 20, scope: !13100)
!13105 = !DILocation(line: 51, column: 2, scope: !13100)
!13106 = distinct !DISubprogram(name: "coredump", scope: !2986, file: !2986, line: 209, type: !13107, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13256)
!13107 = !DISubroutineType(types: !13108)
!13108 = !{null, !32, !13109, !13153}
!13109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13110, size: 32)
!13110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13111)
!13111 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2615, line: 141, baseType: !13112)
!13112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2615, line: 97, size: 256, elements: !13113)
!13113 = !{!13114}
!13114 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13112, file: !2615, line: 107, baseType: !13115, size: 256)
!13115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2615, line: 98, size: 256, elements: !13116)
!13116 = !{!13117, !13122, !13127, !13132, !13137, !13142, !13147, !13152}
!13117 = !DIDerivedType(tag: DW_TAG_member, scope: !13115, file: !2615, line: 99, baseType: !13118, size: 32)
!13118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13115, file: !2615, line: 99, size: 32, elements: !13119)
!13119 = !{!13120, !13121}
!13120 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13118, file: !2615, line: 99, baseType: !118, size: 32)
!13121 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13118, file: !2615, line: 99, baseType: !118, size: 32)
!13122 = !DIDerivedType(tag: DW_TAG_member, scope: !13115, file: !2615, line: 100, baseType: !13123, size: 32, offset: 32)
!13123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13115, file: !2615, line: 100, size: 32, elements: !13124)
!13124 = !{!13125, !13126}
!13125 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13123, file: !2615, line: 100, baseType: !118, size: 32)
!13126 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13123, file: !2615, line: 100, baseType: !118, size: 32)
!13127 = !DIDerivedType(tag: DW_TAG_member, scope: !13115, file: !2615, line: 101, baseType: !13128, size: 32, offset: 64)
!13128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13115, file: !2615, line: 101, size: 32, elements: !13129)
!13129 = !{!13130, !13131}
!13130 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13128, file: !2615, line: 101, baseType: !118, size: 32)
!13131 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13128, file: !2615, line: 101, baseType: !118, size: 32)
!13132 = !DIDerivedType(tag: DW_TAG_member, scope: !13115, file: !2615, line: 102, baseType: !13133, size: 32, offset: 96)
!13133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13115, file: !2615, line: 102, size: 32, elements: !13134)
!13134 = !{!13135, !13136}
!13135 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13133, file: !2615, line: 102, baseType: !118, size: 32)
!13136 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13133, file: !2615, line: 102, baseType: !118, size: 32)
!13137 = !DIDerivedType(tag: DW_TAG_member, scope: !13115, file: !2615, line: 103, baseType: !13138, size: 32, offset: 128)
!13138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13115, file: !2615, line: 103, size: 32, elements: !13139)
!13139 = !{!13140, !13141}
!13140 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13138, file: !2615, line: 103, baseType: !118, size: 32)
!13141 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13138, file: !2615, line: 103, baseType: !118, size: 32)
!13142 = !DIDerivedType(tag: DW_TAG_member, scope: !13115, file: !2615, line: 104, baseType: !13143, size: 32, offset: 160)
!13143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13115, file: !2615, line: 104, size: 32, elements: !13144)
!13144 = !{!13145, !13146}
!13145 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13143, file: !2615, line: 104, baseType: !118, size: 32)
!13146 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13143, file: !2615, line: 104, baseType: !118, size: 32)
!13147 = !DIDerivedType(tag: DW_TAG_member, scope: !13115, file: !2615, line: 105, baseType: !13148, size: 32, offset: 192)
!13148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13115, file: !2615, line: 105, size: 32, elements: !13149)
!13149 = !{!13150, !13151}
!13150 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13148, file: !2615, line: 105, baseType: !118, size: 32)
!13151 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13148, file: !2615, line: 105, baseType: !118, size: 32)
!13152 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13115, file: !2615, line: 106, baseType: !118, size: 32, offset: 224)
!13153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13154, size: 32)
!13154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !13155)
!13155 = !{!13156, !13214, !13226, !13227, !13228, !13229, !13230, !13236, !13251}
!13156 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13154, file: !143, line: 247, baseType: !13157, size: 384)
!13157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !13158)
!13158 = !{!13159, !13183, !13190, !13191, !13192, !13201, !13202, !13203}
!13159 = !DIDerivedType(tag: DW_TAG_member, scope: !13157, file: !143, line: 60, baseType: !13160, size: 64)
!13160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13157, file: !143, line: 60, size: 64, elements: !13161)
!13161 = !{!13162, !13177}
!13162 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13160, file: !143, line: 61, baseType: !13163, size: 64)
!13163 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !13164)
!13164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !13165)
!13165 = !{!13166, !13172}
!13166 = !DIDerivedType(tag: DW_TAG_member, scope: !13164, file: !153, line: 38, baseType: !13167, size: 32)
!13167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13164, file: !153, line: 38, size: 32, elements: !13168)
!13168 = !{!13169, !13171}
!13169 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13167, file: !153, line: 39, baseType: !13170, size: 32)
!13170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13164, size: 32)
!13171 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13167, file: !153, line: 40, baseType: !13170, size: 32)
!13172 = !DIDerivedType(tag: DW_TAG_member, scope: !13164, file: !153, line: 42, baseType: !13173, size: 32, offset: 32)
!13173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13164, file: !153, line: 42, size: 32, elements: !13174)
!13174 = !{!13175, !13176}
!13175 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13173, file: !153, line: 43, baseType: !13170, size: 32)
!13176 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13173, file: !153, line: 44, baseType: !13170, size: 32)
!13177 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13160, file: !143, line: 62, baseType: !13178, size: 64)
!13178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !13179)
!13179 = !{!13180}
!13180 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13178, file: !169, line: 50, baseType: !13181, size: 64)
!13181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13182, size: 64, elements: !174)
!13182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13178, size: 32)
!13183 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13157, file: !143, line: 68, baseType: !13184, size: 32, offset: 64)
!13184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13185, size: 32)
!13185 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !13186)
!13186 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !13187)
!13187 = !{!13188}
!13188 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13186, file: !179, line: 232, baseType: !13189, size: 64)
!13189 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !13164)
!13190 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13157, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!13191 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13157, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!13192 = !DIDerivedType(tag: DW_TAG_member, scope: !13157, file: !143, line: 90, baseType: !13193, size: 16, offset: 112)
!13193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13157, file: !143, line: 90, size: 16, elements: !13194)
!13194 = !{!13195, !13200}
!13195 = !DIDerivedType(tag: DW_TAG_member, scope: !13193, file: !143, line: 91, baseType: !13196, size: 16)
!13196 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13193, file: !143, line: 91, size: 16, elements: !13197)
!13197 = !{!13198, !13199}
!13198 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13196, file: !143, line: 96, baseType: !195, size: 8)
!13199 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13196, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!13200 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13193, file: !143, line: 100, baseType: !199, size: 16)
!13201 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13157, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!13202 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13157, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!13203 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13157, file: !143, line: 131, baseType: !13204, size: 192, offset: 192)
!13204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !13205)
!13205 = !{!13206, !13207, !13213}
!13206 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13204, file: !179, line: 245, baseType: !13163, size: 64)
!13207 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13204, file: !179, line: 246, baseType: !13208, size: 32, offset: 64)
!13208 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !13209)
!13209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13210, size: 32)
!13210 = !DISubroutineType(types: !13211)
!13211 = !{null, !13212}
!13212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13204, size: 32)
!13213 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13204, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13154, file: !143, line: 250, baseType: !13215, size: 288, offset: 384)
!13215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !13216)
!13216 = !{!13217, !13218, !13219, !13220, !13221, !13222, !13223, !13224, !13225}
!13217 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13215, file: !216, line: 26, baseType: !118, size: 32)
!13218 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13215, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!13219 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13215, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!13220 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13215, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!13221 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13215, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!13222 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13215, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!13223 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13215, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!13224 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13215, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!13225 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13215, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!13226 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13154, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!13227 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13154, file: !143, line: 256, baseType: !13185, size: 64, offset: 704)
!13228 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13154, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!13229 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13154, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!13230 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13154, file: !143, line: 300, baseType: !13231, size: 96, offset: 1056)
!13231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !13232)
!13232 = !{!13233, !13234, !13235}
!13233 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13231, file: !143, line: 153, baseType: !22, size: 32)
!13234 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13231, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!13235 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13231, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!13236 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13154, file: !143, line: 325, baseType: !13237, size: 32, offset: 1152)
!13237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13238, size: 32)
!13238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !13239)
!13239 = !{!13240, !13246, !13247}
!13240 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13238, file: !245, line: 5074, baseType: !13241, size: 96)
!13241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !13242)
!13242 = !{!13243, !13244, !13245}
!13243 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13241, file: !249, line: 57, baseType: !252, size: 32)
!13244 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13241, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!13245 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13241, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!13246 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13238, file: !245, line: 5075, baseType: !13185, size: 64, offset: 96)
!13247 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13238, file: !245, line: 5076, baseType: !13248, size: 32, offset: 160)
!13248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !13249)
!13249 = !{!13250}
!13250 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13248, file: !259, line: 52, baseType: !22, size: 32)
!13251 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13154, file: !143, line: 343, baseType: !13252, size: 64, offset: 1184)
!13252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !13253)
!13253 = !{!13254, !13255}
!13254 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13252, file: !216, line: 63, baseType: !118, size: 32)
!13255 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13252, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!13256 = !{!13257, !13258, !13259}
!13257 = !DILocalVariable(name: "reason", arg: 1, scope: !13106, file: !2986, line: 209, type: !32)
!13258 = !DILocalVariable(name: "esf", arg: 2, scope: !13106, file: !2986, line: 209, type: !13109)
!13259 = !DILocalVariable(name: "thread", arg: 3, scope: !13106, file: !2986, line: 210, type: !13153)
!13260 = !DILocation(line: 0, scope: !13106)
!13261 = !DILocation(line: 212, column: 1, scope: !13106)
!13262 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2986, file: !2986, line: 214, type: !13263, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13265)
!13263 = !DISubroutineType(types: !13264)
!13264 = !{null, !22, !22}
!13265 = !{!13266, !13267}
!13266 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13262, file: !2986, line: 214, type: !22)
!13267 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13262, file: !2986, line: 214, type: !22)
!13268 = !DILocation(line: 0, scope: !13262)
!13269 = !DILocation(line: 216, column: 1, scope: !13262)
!13270 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2986, file: !2986, line: 218, type: !13271, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13273)
!13271 = !DISubroutineType(types: !13272)
!13272 = !{null, !284, !239}
!13273 = !{!13274, !13275}
!13274 = !DILocalVariable(name: "buf", arg: 1, scope: !13270, file: !2986, line: 218, type: !284)
!13275 = !DILocalVariable(name: "buflen", arg: 2, scope: !13270, file: !2986, line: 218, type: !239)
!13276 = !DILocation(line: 0, scope: !13270)
!13277 = !DILocation(line: 220, column: 1, scope: !13270)
!13278 = distinct !DISubprogram(name: "coredump_query", scope: !2986, file: !2986, line: 222, type: !13279, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13281)
!13279 = !DISubroutineType(types: !13280)
!13280 = !{!119, !2985, !113}
!13281 = !{!13282, !13283}
!13282 = !DILocalVariable(name: "query_id", arg: 1, scope: !13278, file: !2986, line: 222, type: !2985)
!13283 = !DILocalVariable(name: "arg", arg: 2, scope: !13278, file: !2986, line: 222, type: !113)
!13284 = !DILocation(line: 0, scope: !13278)
!13285 = !DILocation(line: 224, column: 2, scope: !13278)
!13286 = distinct !DISubprogram(name: "coredump_cmd", scope: !2986, file: !2986, line: 227, type: !13287, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13289)
!13287 = !DISubroutineType(types: !13288)
!13288 = !{!119, !2992, !113}
!13289 = !{!13290, !13291}
!13290 = !DILocalVariable(name: "query_id", arg: 1, scope: !13286, file: !2986, line: 227, type: !2992)
!13291 = !DILocalVariable(name: "arg", arg: 2, scope: !13286, file: !2986, line: 227, type: !113)
!13292 = !DILocation(line: 0, scope: !13286)
!13293 = !DILocation(line: 229, column: 2, scope: !13286)
!13294 = distinct !DISubprogram(name: "arch_system_halt", scope: !13295, file: !13295, line: 23, type: !6069, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13296)
!13295 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13296 = !{!13297}
!13297 = !DILocalVariable(name: "reason", arg: 1, scope: !13294, file: !13295, line: 23, type: !32)
!13298 = !DILocation(line: 0, scope: !13294)
!13299 = !DILocation(line: 55, column: 2, scope: !13300, inlinedAt: !13304)
!13300 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6058, file: !6058, line: 42, type: !6059, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13301)
!13301 = !{!13302, !13303}
!13302 = !DILocalVariable(name: "key", scope: !13300, file: !6058, line: 44, type: !32)
!13303 = !DILocalVariable(name: "tmp", scope: !13300, file: !6058, line: 53, type: !32)
!13304 = distinct !DILocation(line: 31, column: 8, scope: !13294)
!13305 = !{i64 2283771}
!13306 = !DILocation(line: 0, scope: !13300, inlinedAt: !13304)
!13307 = !DILocation(line: 32, column: 2, scope: !13294)
!13308 = !DILocation(line: 32, column: 2, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13310, file: !13295, line: 32, column: 2)
!13310 = distinct !DILexicalBlock(scope: !13294, file: !13295, line: 32, column: 2)
!13311 = distinct !{!13311, !13312, !13313}
!13312 = !DILocation(line: 32, column: 2, scope: !13310)
!13313 = !DILocation(line: 34, column: 2, scope: !13310)
!13314 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13295, file: !13295, line: 39, type: !13315, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13317)
!13315 = !DISubroutineType(types: !13316)
!13316 = !{null, !32, !13109}
!13317 = !{!13318, !13319}
!13318 = !DILocalVariable(name: "reason", arg: 1, scope: !13314, file: !13295, line: 39, type: !32)
!13319 = !DILocalVariable(name: "esf", arg: 2, scope: !13314, file: !13295, line: 40, type: !13109)
!13320 = !DILocation(line: 0, scope: !13314)
!13321 = !DILocation(line: 45, column: 2, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13323, file: !13295, line: 45, column: 2)
!13323 = distinct !DILexicalBlock(scope: !13324, file: !13295, line: 45, column: 2)
!13324 = distinct !DILexicalBlock(scope: !13325, file: !13295, line: 45, column: 2)
!13325 = distinct !DILexicalBlock(scope: !13314, file: !13295, line: 45, column: 2)
!13326 = !DILocation(line: 46, column: 2, scope: !13314)
!13327 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13295, file: !13295, line: 81, type: !6069, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13328)
!13328 = !{!13329}
!13329 = !DILocalVariable(name: "reason", arg: 1, scope: !13327, file: !13295, line: 81, type: !32)
!13330 = !DILocation(line: 0, scope: !13327)
!13331 = !DILocation(line: 83, column: 2, scope: !13327)
!13332 = distinct !DISubprogram(name: "z_fatal_error", scope: !13295, file: !13295, line: 96, type: !13315, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13333)
!13333 = !{!13334, !13335, !13336, !13337}
!13334 = !DILocalVariable(name: "reason", arg: 1, scope: !13332, file: !13295, line: 96, type: !32)
!13335 = !DILocalVariable(name: "esf", arg: 2, scope: !13332, file: !13295, line: 96, type: !13109)
!13336 = !DILocalVariable(name: "key", scope: !13332, file: !13295, line: 102, type: !32)
!13337 = !DILocalVariable(name: "thread", scope: !13332, file: !13295, line: 103, type: !13153)
!13338 = !DILocation(line: 0, scope: !13332)
!13339 = !DILocation(line: 55, column: 2, scope: !13300, inlinedAt: !13340)
!13340 = distinct !DILocation(line: 102, column: 21, scope: !13332)
!13341 = !DILocation(line: 0, scope: !13300, inlinedAt: !13340)
!13342 = !DILocation(line: 104, column: 4, scope: !13332)
!13343 = !DILocation(line: 109, column: 2, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13345, file: !13295, line: 109, column: 2)
!13345 = distinct !DILexicalBlock(scope: !13346, file: !13295, line: 109, column: 2)
!13346 = distinct !DILexicalBlock(scope: !13347, file: !13295, line: 109, column: 2)
!13347 = distinct !DILexicalBlock(scope: !13332, file: !13295, line: 109, column: 2)
!13348 = !DILocation(line: 119, column: 11, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13332, file: !13295, line: 119, column: 6)
!13350 = !DILocation(line: 119, column: 20, scope: !13349)
!13351 = !DILocalVariable(name: "esf", arg: 1, scope: !13352, file: !7429, line: 71, type: !13109)
!13352 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7429, file: !7429, line: 71, type: !13353, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13355)
!13353 = !DISubroutineType(types: !13354)
!13354 = !{!345, !13109}
!13355 = !{!13351}
!13356 = !DILocation(line: 0, scope: !13352, inlinedAt: !13357)
!13357 = distinct !DILocation(line: 119, column: 23, scope: !13349)
!13358 = !DILocation(line: 73, column: 21, scope: !13352, inlinedAt: !13357)
!13359 = !DILocation(line: 73, column: 26, scope: !13352, inlinedAt: !13357)
!13360 = !DILocation(line: 73, column: 9, scope: !13352, inlinedAt: !13357)
!13361 = !DILocation(line: 119, column: 6, scope: !13332)
!13362 = !DILocation(line: 120, column: 3, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13364, file: !13295, line: 120, column: 3)
!13364 = distinct !DILexicalBlock(scope: !13365, file: !13295, line: 120, column: 3)
!13365 = distinct !DILexicalBlock(scope: !13366, file: !13295, line: 120, column: 3)
!13366 = distinct !DILexicalBlock(scope: !13367, file: !13295, line: 120, column: 3)
!13367 = distinct !DILexicalBlock(scope: !13349, file: !13295, line: 119, column: 57)
!13368 = !DILocation(line: 121, column: 2, scope: !13367)
!13369 = !DILocation(line: 124, column: 2, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13371, file: !13295, line: 124, column: 2)
!13371 = distinct !DILexicalBlock(scope: !13372, file: !13295, line: 124, column: 2)
!13372 = distinct !DILexicalBlock(scope: !13373, file: !13295, line: 124, column: 2)
!13373 = distinct !DILexicalBlock(scope: !13332, file: !13295, line: 124, column: 2)
!13374 = !DILocation(line: 131, column: 2, scope: !13332)
!13375 = !DILocation(line: 0, scope: !13352, inlinedAt: !13376)
!13376 = distinct !DILocation(line: 163, column: 24, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13378, file: !13295, line: 163, column: 7)
!13378 = distinct !DILexicalBlock(scope: !13379, file: !13295, line: 160, column: 9)
!13379 = distinct !DILexicalBlock(scope: !13332, file: !13295, line: 146, column: 6)
!13380 = !DILocation(line: 73, column: 21, scope: !13352, inlinedAt: !13376)
!13381 = !DILocation(line: 73, column: 26, scope: !13352, inlinedAt: !13376)
!13382 = !DILocation(line: 73, column: 9, scope: !13352, inlinedAt: !13376)
!13383 = !DILocation(line: 163, column: 7, scope: !13378)
!13384 = !DILocalVariable(name: "key", arg: 1, scope: !13385, file: !6058, line: 84, type: !32)
!13385 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6058, file: !6058, line: 84, type: !6069, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13386)
!13386 = !{!13384}
!13387 = !DILocation(line: 0, scope: !13385, inlinedAt: !13388)
!13388 = distinct !DILocation(line: 171, column: 4, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13377, file: !13295, line: 163, column: 58)
!13390 = !DILocation(line: 95, column: 2, scope: !13385, inlinedAt: !13388)
!13391 = !{i64 2284588}
!13392 = !DILocation(line: 172, column: 4, scope: !13389)
!13393 = !DILocation(line: 163, column: 21, scope: !13377)
!13394 = !DILocation(line: 178, column: 15, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13396, file: !13295, line: 178, column: 8)
!13396 = distinct !DILexicalBlock(scope: !13377, file: !13295, line: 174, column: 10)
!13397 = !DILocation(line: 0, scope: !13385, inlinedAt: !13398)
!13398 = distinct !DILocation(line: 179, column: 5, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13395, file: !13295, line: 178, column: 38)
!13400 = !DILocation(line: 0, scope: !13385, inlinedAt: !13401)
!13401 = distinct !DILocation(line: 186, column: 2, scope: !13332)
!13402 = !DILocation(line: 178, column: 8, scope: !13396)
!13403 = !DILocation(line: 189, column: 3, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13405, file: !13295, line: 188, column: 41)
!13405 = distinct !DILexicalBlock(scope: !13332, file: !13295, line: 188, column: 6)
!13406 = !DILocation(line: 191, column: 1, scope: !13332)
!13407 = distinct !DISubprogram(name: "k_current_get", scope: !245, file: !245, line: 530, type: !13408, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !2102)
!13408 = !DISubroutineType(types: !13409)
!13409 = !{!13410}
!13410 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !13153)
!13411 = !DILocation(line: 535, column: 9, scope: !13407)
!13412 = !DILocation(line: 535, column: 2, scope: !13407)
!13413 = distinct !DISubprogram(name: "reason_to_str", scope: !13295, file: !13295, line: 62, type: !13414, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13416)
!13414 = !DISubroutineType(types: !13415)
!13415 = !{!278, !32}
!13416 = !{!13417}
!13417 = !DILocalVariable(name: "reason", arg: 1, scope: !13413, file: !13295, line: 62, type: !32)
!13418 = !DILocation(line: 0, scope: !13413)
!13419 = !DILocation(line: 64, column: 2, scope: !13413)
!13420 = !DILocation(line: 0, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13413, file: !13295, line: 64, column: 18)
!13422 = !DILocation(line: 78, column: 1, scope: !13413)
!13423 = distinct !DISubprogram(name: "thread_name_get", scope: !13295, file: !13295, line: 51, type: !13424, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13426)
!13424 = !DISubroutineType(types: !13425)
!13425 = !{!278, !13153}
!13426 = !{!13427, !13428}
!13427 = !DILocalVariable(name: "thread", arg: 1, scope: !13423, file: !13295, line: 51, type: !13153)
!13428 = !DILocalVariable(name: "thread_name", scope: !13423, file: !13295, line: 53, type: !278)
!13429 = !DILocation(line: 0, scope: !13423)
!13430 = !DILocation(line: 53, column: 36, scope: !13423)
!13431 = !DILocation(line: 53, column: 28, scope: !13423)
!13432 = !DILocation(line: 53, column: 47, scope: !13423)
!13433 = !DILocation(line: 55, column: 19, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13423, file: !13295, line: 55, column: 6)
!13435 = !DILocation(line: 55, column: 28, scope: !13434)
!13436 = !DILocation(line: 55, column: 32, scope: !13434)
!13437 = !DILocation(line: 55, column: 47, scope: !13434)
!13438 = !DILocation(line: 55, column: 6, scope: !13423)
!13439 = !DILocation(line: 57, column: 2, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13434, file: !13295, line: 55, column: 57)
!13441 = !DILocation(line: 59, column: 2, scope: !13423)
!13442 = distinct !DISubprogram(name: "k_thread_abort", scope: !3270, file: !3270, line: 188, type: !13443, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !13445)
!13443 = !DISubroutineType(types: !13444)
!13444 = !{null, !13410}
!13445 = !{!13446}
!13446 = !DILocalVariable(name: "thread", arg: 1, scope: !13442, file: !3270, line: 188, type: !13410)
!13447 = !DILocation(line: 0, scope: !13442)
!13448 = !DILocation(line: 197, column: 2, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13442, file: !3270, line: 197, column: 2)
!13450 = !{i64 2155069935}
!13451 = !DILocation(line: 198, column: 2, scope: !13442)
!13452 = !DILocation(line: 199, column: 1, scope: !13442)
!13453 = distinct !DISubprogram(name: "z_current_get", scope: !3270, file: !3270, line: 173, type: !13408, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2982, retainedNodes: !2102)
!13454 = !DILocation(line: 180, column: 2, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13453, file: !3270, line: 180, column: 2)
!13456 = !{i64 2155069867}
!13457 = !DILocation(line: 181, column: 9, scope: !13453)
!13458 = !DILocation(line: 181, column: 2, scope: !13453)
!13459 = distinct !DISubprogram(name: "z_early_memset", scope: !1901, file: !1901, line: 108, type: !13460, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13462)
!13460 = !DISubroutineType(types: !13461)
!13461 = !{null, !113, !119, !239}
!13462 = !{!13463, !13464, !13465}
!13463 = !DILocalVariable(name: "dst", arg: 1, scope: !13459, file: !1901, line: 108, type: !113)
!13464 = !DILocalVariable(name: "c", arg: 2, scope: !13459, file: !1901, line: 108, type: !119)
!13465 = !DILocalVariable(name: "n", arg: 3, scope: !13459, file: !1901, line: 108, type: !239)
!13466 = !DILocation(line: 0, scope: !13459)
!13467 = !DILocation(line: 110, column: 9, scope: !13459)
!13468 = !DILocation(line: 111, column: 1, scope: !13459)
!13469 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1901, file: !1901, line: 121, type: !13470, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13472)
!13470 = !DISubroutineType(types: !13471)
!13471 = !{null, !113, !13, !239}
!13472 = !{!13473, !13474, !13475}
!13473 = !DILocalVariable(name: "dst", arg: 1, scope: !13469, file: !1901, line: 121, type: !113)
!13474 = !DILocalVariable(name: "src", arg: 2, scope: !13469, file: !1901, line: 121, type: !13)
!13475 = !DILocalVariable(name: "n", arg: 3, scope: !13469, file: !1901, line: 121, type: !239)
!13476 = !DILocation(line: 0, scope: !13469)
!13477 = !DILocation(line: 123, column: 9, scope: !13469)
!13478 = !DILocation(line: 124, column: 1, scope: !13469)
!13479 = distinct !DISubprogram(name: "z_bss_zero", scope: !1901, file: !1901, line: 132, type: !3019, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !2102)
!13480 = !DILocation(line: 143, column: 2, scope: !13479)
!13481 = !DILocation(line: 168, column: 1, scope: !13479)
!13482 = distinct !DISubprogram(name: "z_init_cpu", scope: !1901, file: !1901, line: 372, type: !8463, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13483)
!13483 = !{!13484}
!13484 = !DILocalVariable(name: "id", arg: 1, scope: !13482, file: !1901, line: 372, type: !119)
!13485 = !DILocation(line: 0, scope: !13482)
!13486 = !DILocation(line: 374, column: 2, scope: !13482)
!13487 = !DILocation(line: 375, column: 34, scope: !13482)
!13488 = !DILocation(line: 375, column: 19, scope: !13482)
!13489 = !DILocation(line: 375, column: 31, scope: !13482)
!13490 = !DILocation(line: 376, column: 24, scope: !13482)
!13491 = !DILocation(line: 376, column: 19, scope: !13482)
!13492 = !DILocation(line: 376, column: 22, scope: !13482)
!13493 = !DILocation(line: 378, column: 26, scope: !13482)
!13494 = !DILocation(line: 378, column: 4, scope: !13482)
!13495 = !DILocation(line: 378, column: 50, scope: !13482)
!13496 = !DILocation(line: 377, column: 19, scope: !13482)
!13497 = !DILocation(line: 377, column: 29, scope: !13482)
!13498 = !DILocation(line: 384, column: 1, scope: !13482)
!13499 = distinct !DISubprogram(name: "init_idle_thread", scope: !1901, file: !1901, line: 343, type: !8463, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13500)
!13500 = !{!13501, !13502, !13503, !13506}
!13501 = !DILocalVariable(name: "i", arg: 1, scope: !13499, file: !1901, line: 343, type: !119)
!13502 = !DILocalVariable(name: "thread", scope: !13499, file: !1901, line: 345, type: !1993)
!13503 = !DILocalVariable(name: "stack", scope: !13499, file: !1901, line: 346, type: !13504)
!13504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13505, size: 32)
!13505 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !2111)
!13506 = !DILocalVariable(name: "tname", scope: !13499, file: !1901, line: 354, type: !106)
!13507 = !DILocation(line: 0, scope: !13499)
!13508 = !DILocation(line: 345, column: 29, scope: !13499)
!13509 = !DILocation(line: 346, column: 28, scope: !13499)
!13510 = !DILocation(line: 362, column: 37, scope: !13499)
!13511 = !DILocation(line: 362, column: 36, scope: !13499)
!13512 = !DILocation(line: 361, column: 2, scope: !13499)
!13513 = !DILocation(line: 365, column: 2, scope: !13499)
!13514 = !DILocation(line: 370, column: 1, scope: !13499)
!13515 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !128, file: !128, line: 331, type: !13516, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13518)
!13516 = !DISubroutineType(types: !13517)
!13517 = !{!106, !13504}
!13518 = !{!13519}
!13519 = !DILocalVariable(name: "sym", arg: 1, scope: !13515, file: !128, line: 331, type: !13504)
!13520 = !DILocation(line: 0, scope: !13515)
!13521 = !DILocation(line: 333, column: 21, scope: !13515)
!13522 = !DILocation(line: 333, column: 2, scope: !13515)
!13523 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13524, file: !13524, line: 155, type: !13525, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13527)
!13524 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13525 = !DISubroutineType(types: !13526)
!13526 = !{null, !1993}
!13527 = !{!13528}
!13528 = !DILocalVariable(name: "thread", arg: 1, scope: !13523, file: !13524, line: 155, type: !1993)
!13529 = !DILocation(line: 0, scope: !13523)
!13530 = !DILocation(line: 157, column: 15, scope: !13523)
!13531 = !DILocation(line: 157, column: 28, scope: !13523)
!13532 = !DILocation(line: 158, column: 1, scope: !13523)
!13533 = distinct !DISubprogram(name: "z_cstart", scope: !1901, file: !1901, line: 501, type: !3019, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13534)
!13534 = !{!13535}
!13535 = !DILocalVariable(name: "dummy_thread", scope: !13533, file: !1901, line: 518, type: !1994)
!13536 = !DILocation(line: 507, column: 2, scope: !13533)
!13537 = !DILocation(line: 43, column: 14, scope: !13538, inlinedAt: !13542)
!13538 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13539, file: !13539, line: 40, type: !3019, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13540)
!13539 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13540 = !{!13541}
!13541 = !DILocalVariable(name: "msp", scope: !13538, file: !13539, line: 42, type: !118)
!13542 = distinct !DILocation(line: 44, column: 2, scope: !13543, inlinedAt: !13545)
!13543 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13544, file: !13544, line: 42, type: !3019, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !2102)
!13544 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13545 = distinct !DILocation(line: 510, column: 2, scope: !13533)
!13546 = !DILocation(line: 43, column: 3, scope: !13538, inlinedAt: !13542)
!13547 = !DILocation(line: 43, column: 60, scope: !13538, inlinedAt: !13542)
!13548 = !DILocation(line: 0, scope: !13538, inlinedAt: !13542)
!13549 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13550, file: !6379, line: 1153, type: !118)
!13550 = distinct !DISubprogram(name: "__set_MSP", scope: !6379, file: !6379, line: 1153, type: !6474, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13551)
!13551 = !{!13549}
!13552 = !DILocation(line: 0, scope: !13550, inlinedAt: !13553)
!13553 = distinct !DILocation(line: 46, column: 2, scope: !13538, inlinedAt: !13542)
!13554 = !DILocation(line: 1155, column: 3, scope: !13550, inlinedAt: !13553)
!13555 = !{i64 3749710}
!13556 = !DILocation(line: 62, column: 11, scope: !13538, inlinedAt: !13542)
!13557 = !DILocation(line: 102, column: 2, scope: !13558, inlinedAt: !13559)
!13558 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7429, file: !7429, line: 97, type: !3019, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !2102)
!13559 = distinct !DILocation(line: 45, column: 2, scope: !13543, inlinedAt: !13545)
!13560 = !DILocation(line: 108, column: 2, scope: !13558, inlinedAt: !13559)
!13561 = !DILocation(line: 112, column: 2, scope: !13558, inlinedAt: !13559)
!13562 = !DILocation(line: 113, column: 2, scope: !13558, inlinedAt: !13559)
!13563 = !DILocation(line: 114, column: 2, scope: !13558, inlinedAt: !13559)
!13564 = !DILocation(line: 116, column: 2, scope: !13558, inlinedAt: !13559)
!13565 = !DILocation(line: 123, column: 13, scope: !13558, inlinedAt: !13559)
!13566 = !DILocation(line: 46, column: 2, scope: !13543, inlinedAt: !13545)
!13567 = !DILocation(line: 47, column: 2, scope: !13543, inlinedAt: !13545)
!13568 = !DILocation(line: 174, column: 12, scope: !13569, inlinedAt: !13570)
!13569 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7429, file: !7429, line: 169, type: !3019, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !2102)
!13570 = distinct !DILocation(line: 48, column: 2, scope: !13543, inlinedAt: !13545)
!13571 = !DILocation(line: 179, column: 12, scope: !13569, inlinedAt: !13570)
!13572 = !DILocation(line: 50, column: 2, scope: !13543, inlinedAt: !13545)
!13573 = !DILocation(line: 57, column: 2, scope: !13543, inlinedAt: !13545)
!13574 = !DILocation(line: 518, column: 2, scope: !13533)
!13575 = !DILocation(line: 518, column: 18, scope: !13533)
!13576 = !DILocation(line: 520, column: 2, scope: !13533)
!13577 = !DILocation(line: 523, column: 2, scope: !13533)
!13578 = !DILocation(line: 526, column: 2, scope: !13533)
!13579 = !DILocation(line: 527, column: 2, scope: !13533)
!13580 = !DILocation(line: 543, column: 24, scope: !13533)
!13581 = !DILocation(line: 543, column: 2, scope: !13533)
!13582 = !DILocation(line: 0, scope: !2135)
!13583 = !DILocation(line: 246, column: 15, scope: !2153)
!13584 = !DILocation(line: 246, column: 36, scope: !2152)
!13585 = !DILocation(line: 246, column: 2, scope: !2153)
!13586 = !DILocation(line: 247, column: 37, scope: !2151)
!13587 = !DILocation(line: 0, scope: !2151)
!13588 = !DILocation(line: 248, column: 19, scope: !2151)
!13589 = !DILocation(line: 248, column: 12, scope: !2151)
!13590 = !DILocation(line: 250, column: 11, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !2151, file: !1901, line: 250, column: 7)
!13592 = !DILocation(line: 250, column: 7, scope: !2151)
!13593 = !DILocation(line: 254, column: 11, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13595, file: !1901, line: 254, column: 8)
!13595 = distinct !DILexicalBlock(scope: !13591, file: !1901, line: 250, column: 20)
!13596 = !DILocation(line: 254, column: 8, scope: !13595)
!13597 = !DILocation(line: 255, column: 9, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13594, file: !1901, line: 254, column: 17)
!13599 = !DILocation(line: 258, column: 9, scope: !13598)
!13600 = !DILocation(line: 261, column: 28, scope: !13598)
!13601 = !DILocation(line: 261, column: 10, scope: !13598)
!13602 = !DILocation(line: 261, column: 17, scope: !13598)
!13603 = !DILocation(line: 261, column: 26, scope: !13598)
!13604 = !DILocation(line: 262, column: 4, scope: !13598)
!13605 = !DILocation(line: 263, column: 9, scope: !13595)
!13606 = !DILocation(line: 263, column: 16, scope: !13595)
!13607 = !DILocation(line: 263, column: 28, scope: !13595)
!13608 = !DILocation(line: 264, column: 3, scope: !13595)
!13609 = !DILocation(line: 246, column: 60, scope: !2152)
!13610 = distinct !{!13610, !13585, !13611}
!13611 = !DILocation(line: 265, column: 2, scope: !2153)
!13612 = !DILocation(line: 266, column: 1, scope: !2135)
!13613 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6419, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13614)
!13614 = !{!13615, !13616}
!13615 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13613, file: !533, line: 1814, type: !798)
!13616 = !DILocalVariable(name: "priority", arg: 2, scope: !13613, file: !533, line: 1814, type: !118)
!13617 = !DILocation(line: 0, scope: !13613)
!13618 = !DILocation(line: 1822, column: 48, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13620, file: !533, line: 1821, column: 3)
!13620 = distinct !DILexicalBlock(scope: !13613, file: !533, line: 1816, column: 7)
!13621 = !DILocation(line: 1822, column: 32, scope: !13619)
!13622 = !DILocation(line: 1822, column: 40, scope: !13619)
!13623 = !DILocation(line: 1822, column: 5, scope: !13619)
!13624 = !DILocation(line: 1822, column: 46, scope: !13619)
!13625 = !DILocation(line: 1824, column: 1, scope: !13613)
!13626 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13544, file: !13544, line: 32, type: !3019, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2102)
!13627 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13628, file: !13628, line: 215, type: !13525, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13629)
!13628 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13629 = !{!13630}
!13630 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13627, file: !13628, line: 215, type: !1993)
!13631 = !DILocation(line: 0, scope: !13627)
!13632 = !DILocation(line: 217, column: 21, scope: !13627)
!13633 = !DILocation(line: 217, column: 34, scope: !13627)
!13634 = !DILocation(line: 221, column: 21, scope: !13627)
!13635 = !DILocation(line: 221, column: 34, scope: !13627)
!13636 = !DILocation(line: 223, column: 27, scope: !13627)
!13637 = !DILocation(line: 223, column: 33, scope: !13627)
!13638 = !DILocation(line: 224, column: 27, scope: !13627)
!13639 = !DILocation(line: 224, column: 32, scope: !13627)
!13640 = !DILocation(line: 232, column: 16, scope: !13627)
!13641 = !DILocation(line: 232, column: 30, scope: !13627)
!13642 = !DILocation(line: 239, column: 24, scope: !13627)
!13643 = !DILocation(line: 240, column: 1, scope: !13627)
!13644 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1901, file: !1901, line: 399, type: !13645, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13647)
!13645 = !DISubroutineType(types: !13646)
!13646 = !{!106}
!13647 = !{!13648}
!13648 = !DILocalVariable(name: "stack_ptr", scope: !13644, file: !1901, line: 401, type: !106)
!13649 = !DILocation(line: 404, column: 2, scope: !13644)
!13650 = !DILocation(line: 416, column: 24, scope: !13644)
!13651 = !DILocation(line: 418, column: 14, scope: !13644)
!13652 = !DILocation(line: 0, scope: !13644)
!13653 = !DILocation(line: 423, column: 2, scope: !13644)
!13654 = !DILocation(line: 424, column: 2, scope: !13644)
!13655 = !DILocation(line: 426, column: 2, scope: !13644)
!13656 = !DILocation(line: 428, column: 2, scope: !13644)
!13657 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1901, file: !1901, line: 432, type: !13658, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13660)
!13658 = !DISubroutineType(types: !13659)
!13659 = !{null, !106}
!13660 = !{!13661}
!13661 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13657, file: !1901, line: 432, type: !106)
!13662 = !DILocation(line: 0, scope: !13657)
!13663 = !DILocation(line: 435, column: 2, scope: !13657)
!13664 = !DILocation(line: 445, column: 2, scope: !13657)
!13665 = distinct !DISubprogram(name: "bg_thread_main", scope: !1901, file: !1901, line: 277, type: !111, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13666)
!13666 = !{!13667, !13668, !13669}
!13667 = !DILocalVariable(name: "unused1", arg: 1, scope: !13665, file: !1901, line: 277, type: !113)
!13668 = !DILocalVariable(name: "unused2", arg: 2, scope: !13665, file: !1901, line: 277, type: !113)
!13669 = !DILocalVariable(name: "unused3", arg: 3, scope: !13665, file: !1901, line: 277, type: !113)
!13670 = !DILocation(line: 0, scope: !13665)
!13671 = !DILocation(line: 291, column: 20, scope: !13665)
!13672 = !DILocation(line: 293, column: 2, scope: !13665)
!13673 = !DILocation(line: 297, column: 2, scope: !13665)
!13674 = !DILocation(line: 305, column: 2, scope: !13665)
!13675 = !DILocation(line: 307, column: 2, scope: !13665)
!13676 = !DILocation(line: 330, column: 8, scope: !13665)
!13677 = !DILocation(line: 333, column: 34, scope: !13665)
!13678 = !DILocation(line: 339, column: 1, scope: !13665)
!13679 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2166, file: !2166, line: 45, type: !13680, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13688)
!13680 = !DISubroutineType(types: !13681)
!13681 = !{null, !13682, !113}
!13682 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !245, line: 103, baseType: !13683)
!13683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13684, size: 32)
!13684 = !DISubroutineType(types: !13685)
!13685 = !{null, !13686, !113}
!13686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13687, size: 32)
!13687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2171)
!13688 = !{!13689, !13690}
!13689 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13679, file: !2166, line: 45, type: !13682)
!13690 = !DILocalVariable(name: "user_data", arg: 2, scope: !13679, file: !2166, line: 45, type: !113)
!13691 = !DILocation(line: 0, scope: !13679)
!13692 = !DILocation(line: 71, column: 1, scope: !13679)
!13693 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2166, file: !2166, line: 73, type: !13680, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13694)
!13694 = !{!13695, !13696}
!13695 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13693, file: !2166, line: 73, type: !13682)
!13696 = !DILocalVariable(name: "user_data", arg: 2, scope: !13693, file: !2166, line: 73, type: !113)
!13697 = !DILocation(line: 0, scope: !13693)
!13698 = !DILocation(line: 95, column: 1, scope: !13693)
!13699 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2166, file: !2166, line: 97, type: !7430, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !2102)
!13700 = !DILocation(line: 1031, column: 3, scope: !13701, inlinedAt: !13704)
!13701 = distinct !DISubprogram(name: "__get_IPSR", scope: !6379, file: !6379, line: 1027, type: !3257, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13702)
!13702 = !{!13703}
!13703 = !DILocalVariable(name: "result", scope: !13701, file: !6379, line: 1029, type: !118)
!13704 = distinct !DILocation(line: 48, column: 10, scope: !13705, inlinedAt: !13706)
!13705 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7429, file: !7429, line: 46, type: !7430, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !2102)
!13706 = distinct !DILocation(line: 99, column: 9, scope: !13699)
!13707 = !{i64 3755361}
!13708 = !DILocation(line: 0, scope: !13701, inlinedAt: !13704)
!13709 = !DILocation(line: 48, column: 9, scope: !13705, inlinedAt: !13706)
!13710 = !DILocation(line: 99, column: 2, scope: !13699)
!13711 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2166, file: !2166, line: 106, type: !3019, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !2102)
!13712 = !DILocation(line: 108, column: 2, scope: !13711)
!13713 = !DILocation(line: 108, column: 17, scope: !13711)
!13714 = !DILocation(line: 108, column: 30, scope: !13711)
!13715 = !DILocation(line: 109, column: 1, scope: !13711)
!13716 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2166, file: !2166, line: 116, type: !3019, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !2102)
!13717 = !DILocation(line: 118, column: 2, scope: !13716)
!13718 = !DILocation(line: 118, column: 17, scope: !13716)
!13719 = !DILocation(line: 118, column: 30, scope: !13716)
!13720 = !DILocation(line: 119, column: 1, scope: !13716)
!13721 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2166, file: !2166, line: 126, type: !7430, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !2102)
!13722 = !DILocation(line: 128, column: 10, scope: !13721)
!13723 = !DILocation(line: 128, column: 25, scope: !13721)
!13724 = !DILocation(line: 128, column: 38, scope: !13721)
!13725 = !DILocation(line: 128, column: 53, scope: !13721)
!13726 = !DILocation(line: 128, column: 2, scope: !13721)
!13727 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2166, file: !2166, line: 187, type: !13728, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13730)
!13728 = !DISubroutineType(types: !13729)
!13729 = !{!119, !2170, !278}
!13730 = !{!13731, !13732}
!13731 = !DILocalVariable(name: "thread", arg: 1, scope: !13727, file: !2166, line: 187, type: !2170)
!13732 = !DILocalVariable(name: "value", arg: 2, scope: !13727, file: !2166, line: 187, type: !278)
!13733 = !DILocation(line: 0, scope: !13727)
!13734 = !DILocation(line: 190, column: 13, scope: !13735)
!13735 = distinct !DILexicalBlock(scope: !13727, file: !2166, line: 190, column: 6)
!13736 = !DILocation(line: 190, column: 6, scope: !13727)
!13737 = !DILocation(line: 194, column: 10, scope: !13727)
!13738 = !DILocation(line: 194, column: 2, scope: !13727)
!13739 = !DILocation(line: 195, column: 2, scope: !13727)
!13740 = !DILocation(line: 195, column: 47, scope: !13727)
!13741 = !DILocation(line: 199, column: 2, scope: !13727)
!13742 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2166, file: !2166, line: 238, type: !13743, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13745)
!13743 = !DISubroutineType(types: !13744)
!13744 = !{!278, !2170}
!13745 = !{!13746}
!13746 = !DILocalVariable(name: "thread", arg: 1, scope: !13742, file: !2166, line: 238, type: !2170)
!13747 = !DILocation(line: 0, scope: !13742)
!13748 = !DILocation(line: 241, column: 23, scope: !13742)
!13749 = !DILocation(line: 241, column: 2, scope: !13742)
!13750 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2166, file: !2166, line: 248, type: !13751, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13753)
!13751 = !DISubroutineType(types: !13752)
!13752 = !{!119, !2169, !106, !239}
!13753 = !{!13754, !13755, !13756}
!13754 = !DILocalVariable(name: "thread", arg: 1, scope: !13750, file: !2166, line: 248, type: !2169)
!13755 = !DILocalVariable(name: "buf", arg: 2, scope: !13750, file: !2166, line: 248, type: !106)
!13756 = !DILocalVariable(name: "size", arg: 3, scope: !13750, file: !2166, line: 248, type: !239)
!13757 = !DILocation(line: 0, scope: !13750)
!13758 = !DILocation(line: 251, column: 15, scope: !13750)
!13759 = !DILocation(line: 251, column: 2, scope: !13750)
!13760 = !DILocation(line: 252, column: 2, scope: !13750)
!13761 = !DILocation(line: 0, scope: !2165)
!13762 = !DILocation(line: 281, column: 11, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !2165, file: !2166, line: 281, column: 6)
!13764 = !DILocation(line: 281, column: 20, scope: !13763)
!13765 = !DILocation(line: 275, column: 45, scope: !2165)
!13766 = !DILocation(line: 285, column: 10, scope: !2165)
!13767 = !DILocation(line: 0, scope: !2289)
!13768 = !DILocation(line: 293, column: 39, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !2289, file: !2166, line: 293, column: 2)
!13770 = !DILocation(line: 293, column: 2, scope: !2289)
!13771 = !DILocation(line: 273, column: 14, scope: !2165)
!13772 = !DILocation(line: 309, column: 2, scope: !2165)
!13773 = !DILocation(line: 309, column: 11, scope: !2165)
!13774 = !DILocation(line: 311, column: 2, scope: !2165)
!13775 = !DILocation(line: 293, column: 26, scope: !13769)
!13776 = !DILocation(line: 294, column: 9, scope: !13777)
!13777 = distinct !DILexicalBlock(scope: !13769, file: !2166, line: 293, column: 54)
!13778 = !DILocation(line: 295, column: 21, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !13777, file: !2166, line: 295, column: 7)
!13780 = !DILocation(line: 295, column: 28, scope: !13779)
!13781 = !DILocation(line: 295, column: 7, scope: !13777)
!13782 = !DILocation(line: 299, column: 25, scope: !13777)
!13783 = !DILocation(line: 299, column: 41, scope: !13777)
!13784 = !DILocation(line: 300, column: 7, scope: !13777)
!13785 = !DILocation(line: 300, column: 26, scope: !13777)
!13786 = !DILocation(line: 299, column: 10, scope: !13777)
!13787 = !DILocation(line: 299, column: 7, scope: !13777)
!13788 = !DILocation(line: 302, column: 16, scope: !13777)
!13789 = !DILocation(line: 304, column: 20, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13777, file: !2166, line: 304, column: 7)
!13791 = !DILocation(line: 304, column: 7, scope: !13777)
!13792 = !DILocation(line: 305, column: 26, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13790, file: !2166, line: 304, column: 26)
!13794 = !DILocation(line: 305, column: 42, scope: !13793)
!13795 = !DILocation(line: 305, column: 11, scope: !13793)
!13796 = !DILocation(line: 305, column: 8, scope: !13793)
!13797 = !DILocation(line: 306, column: 3, scope: !13793)
!13798 = !DILocation(line: 293, column: 50, scope: !13769)
!13799 = !DILocation(line: 312, column: 1, scope: !2165)
!13800 = distinct !DISubprogram(name: "copy_bytes", scope: !2166, file: !2166, line: 261, type: !13801, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13803)
!13801 = !DISubroutineType(types: !13802)
!13802 = !{!239, !106, !239, !278, !239}
!13803 = !{!13804, !13805, !13806, !13807, !13808}
!13804 = !DILocalVariable(name: "dest", arg: 1, scope: !13800, file: !2166, line: 261, type: !106)
!13805 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13800, file: !2166, line: 261, type: !239)
!13806 = !DILocalVariable(name: "src", arg: 3, scope: !13800, file: !2166, line: 261, type: !278)
!13807 = !DILocalVariable(name: "src_size", arg: 4, scope: !13800, file: !2166, line: 261, type: !239)
!13808 = !DILocalVariable(name: "bytes_to_copy", scope: !13800, file: !2166, line: 263, type: !239)
!13809 = !DILocation(line: 0, scope: !13800)
!13810 = !DILocation(line: 265, column: 18, scope: !13800)
!13811 = !DILocation(line: 266, column: 2, scope: !13800)
!13812 = !DILocation(line: 268, column: 2, scope: !13800)
!13813 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2166, file: !2166, line: 383, type: !13814, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13816)
!13814 = !DISubroutineType(types: !13815)
!13815 = !{null, !2170}
!13816 = !{!13817}
!13817 = !DILocalVariable(name: "thread", arg: 1, scope: !13813, file: !2166, line: 383, type: !2170)
!13818 = !DILocation(line: 0, scope: !13813)
!13819 = !DILocation(line: 387, column: 2, scope: !13813)
!13820 = !DILocation(line: 388, column: 1, scope: !13813)
!13821 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2166, file: !2166, line: 528, type: !13822, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13829)
!13822 = !DISubroutineType(types: !13823)
!13823 = !{!106, !2170, !13824, !239, !108, !113, !113, !113, !119, !118, !278}
!13824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13825, size: 32)
!13825 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !13826)
!13826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !13827)
!13827 = !{!13828}
!13828 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13826, file: !128, line: 48, baseType: !107, size: 8)
!13829 = !{!13830, !13831, !13832, !13833, !13834, !13835, !13836, !13837, !13838, !13839, !13840}
!13830 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13821, file: !2166, line: 528, type: !2170)
!13831 = !DILocalVariable(name: "stack", arg: 2, scope: !13821, file: !2166, line: 529, type: !13824)
!13832 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13821, file: !2166, line: 529, type: !239)
!13833 = !DILocalVariable(name: "entry", arg: 4, scope: !13821, file: !2166, line: 530, type: !108)
!13834 = !DILocalVariable(name: "p1", arg: 5, scope: !13821, file: !2166, line: 531, type: !113)
!13835 = !DILocalVariable(name: "p2", arg: 6, scope: !13821, file: !2166, line: 531, type: !113)
!13836 = !DILocalVariable(name: "p3", arg: 7, scope: !13821, file: !2166, line: 531, type: !113)
!13837 = !DILocalVariable(name: "prio", arg: 8, scope: !13821, file: !2166, line: 532, type: !119)
!13838 = !DILocalVariable(name: "options", arg: 9, scope: !13821, file: !2166, line: 532, type: !118)
!13839 = !DILocalVariable(name: "name", arg: 10, scope: !13821, file: !2166, line: 532, type: !278)
!13840 = !DILocalVariable(name: "stack_ptr", scope: !13821, file: !2166, line: 534, type: !106)
!13841 = !DILocation(line: 0, scope: !13821)
!13842 = !DILocation(line: 536, column: 2, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13844, file: !2166, line: 536, column: 2)
!13844 = distinct !DILexicalBlock(scope: !13845, file: !2166, line: 536, column: 2)
!13845 = distinct !DILexicalBlock(scope: !13821, file: !2166, line: 536, column: 2)
!13846 = !DILocation(line: 536, column: 2, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13843, file: !2166, line: 536, column: 2)
!13848 = !DILocation(line: 550, column: 28, scope: !13821)
!13849 = !DILocation(line: 550, column: 2, scope: !13821)
!13850 = !DILocation(line: 553, column: 34, scope: !13821)
!13851 = !DILocation(line: 553, column: 2, scope: !13821)
!13852 = !DILocation(line: 554, column: 14, scope: !13821)
!13853 = !DILocation(line: 564, column: 2, scope: !13821)
!13854 = !DILocation(line: 567, column: 14, scope: !13821)
!13855 = !DILocation(line: 567, column: 24, scope: !13821)
!13856 = !DILocation(line: 594, column: 11, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13821, file: !2166, line: 594, column: 6)
!13858 = !DILocation(line: 0, scope: !13857)
!13859 = !DILocation(line: 594, column: 6, scope: !13821)
!13860 = !DILocation(line: 595, column: 3, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13857, file: !2166, line: 594, column: 20)
!13862 = !DILocation(line: 598, column: 3, scope: !13861)
!13863 = !DILocation(line: 598, column: 52, scope: !13861)
!13864 = !DILocation(line: 599, column: 2, scope: !13861)
!13865 = !DILocation(line: 600, column: 23, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13857, file: !2166, line: 599, column: 9)
!13867 = !DILocation(line: 612, column: 7, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13821, file: !2166, line: 612, column: 6)
!13869 = !DILocation(line: 612, column: 6, scope: !13821)
!13870 = !DILocation(line: 627, column: 40, scope: !13821)
!13871 = !DILocation(line: 637, column: 2, scope: !13821)
!13872 = !DILocation(line: 613, column: 15, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13868, file: !2166, line: 612, column: 17)
!13874 = !DILocation(line: 613, column: 29, scope: !13873)
!13875 = !DILocation(line: 638, column: 1, scope: !13821)
!13876 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13524, file: !13524, line: 78, type: !13877, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13879)
!13877 = !DISubroutineType(types: !13878)
!13878 = !{!345, !113}
!13879 = !{!13880}
!13880 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13876, file: !13524, line: 78, type: !113)
!13881 = !DILocation(line: 0, scope: !13876)
!13882 = !DILocation(line: 80, column: 21, scope: !13876)
!13883 = !DILocation(line: 80, column: 2, scope: !13876)
!13884 = distinct !DISubprogram(name: "z_waitq_init", scope: !13885, file: !13885, line: 47, type: !13886, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13888)
!13885 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13886 = !DISubroutineType(types: !13887)
!13887 = !{null, !2201}
!13888 = !{!13889}
!13889 = !DILocalVariable(name: "w", arg: 1, scope: !13884, file: !13885, line: 47, type: !2201)
!13890 = !DILocation(line: 0, scope: !13884)
!13891 = !DILocation(line: 49, column: 21, scope: !13884)
!13892 = !DILocation(line: 49, column: 2, scope: !13884)
!13893 = !DILocation(line: 50, column: 1, scope: !13884)
!13894 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2166, file: !2166, line: 791, type: !13895, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13898)
!13895 = !DISubroutineType(types: !13896)
!13896 = !{null, !13897, !119, !118, !32}
!13897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!13898 = !{!13899, !13900, !13901, !13902}
!13899 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13894, file: !2166, line: 791, type: !13897)
!13900 = !DILocalVariable(name: "priority", arg: 2, scope: !13894, file: !2166, line: 791, type: !119)
!13901 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13894, file: !2166, line: 792, type: !118)
!13902 = !DILocalVariable(name: "options", arg: 4, scope: !13894, file: !2166, line: 792, type: !32)
!13903 = !DILocation(line: 0, scope: !13894)
!13904 = !DILocation(line: 795, column: 15, scope: !13894)
!13905 = !DILocation(line: 795, column: 25, scope: !13894)
!13906 = !DILocation(line: 796, column: 30, scope: !13894)
!13907 = !DILocation(line: 796, column: 15, scope: !13894)
!13908 = !DILocation(line: 796, column: 28, scope: !13894)
!13909 = !DILocation(line: 797, column: 30, scope: !13894)
!13910 = !DILocation(line: 797, column: 15, scope: !13894)
!13911 = !DILocation(line: 797, column: 28, scope: !13894)
!13912 = !DILocation(line: 799, column: 22, scope: !13894)
!13913 = !DILocation(line: 799, column: 15, scope: !13894)
!13914 = !DILocation(line: 799, column: 20, scope: !13894)
!13915 = !DILocation(line: 801, column: 15, scope: !13894)
!13916 = !DILocation(line: 801, column: 28, scope: !13894)
!13917 = !DILocation(line: 814, column: 2, scope: !13894)
!13918 = !DILocation(line: 815, column: 1, scope: !13894)
!13919 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2166, file: !2166, line: 449, type: !13920, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13922)
!13920 = !DISubroutineType(types: !13921)
!13921 = !{!106, !2170, !13824, !239}
!13922 = !{!13923, !13924, !13925, !13926, !13927, !13928, !13929, !13930}
!13923 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13919, file: !2166, line: 449, type: !2170)
!13924 = !DILocalVariable(name: "stack", arg: 2, scope: !13919, file: !2166, line: 450, type: !13824)
!13925 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13919, file: !2166, line: 450, type: !239)
!13926 = !DILocalVariable(name: "stack_obj_size", scope: !13919, file: !2166, line: 452, type: !239)
!13927 = !DILocalVariable(name: "stack_buf_size", scope: !13919, file: !2166, line: 452, type: !239)
!13928 = !DILocalVariable(name: "stack_ptr", scope: !13919, file: !2166, line: 453, type: !106)
!13929 = !DILocalVariable(name: "stack_buf_start", scope: !13919, file: !2166, line: 453, type: !106)
!13930 = !DILocalVariable(name: "delta", scope: !13919, file: !2166, line: 454, type: !239)
!13931 = !DILocation(line: 0, scope: !13919)
!13932 = !DILocation(line: 465, column: 20, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13919, file: !2166, line: 463, column: 2)
!13934 = !DILocation(line: 466, column: 21, scope: !13933)
!13935 = !DILocation(line: 473, column: 28, scope: !13919)
!13936 = !DILocation(line: 514, column: 33, scope: !13919)
!13937 = !DILocation(line: 514, column: 25, scope: !13919)
!13938 = !DILocation(line: 514, column: 31, scope: !13919)
!13939 = !DILocation(line: 515, column: 25, scope: !13919)
!13940 = !DILocation(line: 515, column: 30, scope: !13919)
!13941 = !DILocation(line: 516, column: 25, scope: !13919)
!13942 = !DILocation(line: 516, column: 31, scope: !13919)
!13943 = !DILocation(line: 520, column: 2, scope: !13919)
!13944 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !128, file: !128, line: 331, type: !13945, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13947)
!13945 = !DISubroutineType(types: !13946)
!13946 = !{!106, !13824}
!13947 = !{!13948}
!13948 = !DILocalVariable(name: "sym", arg: 1, scope: !13944, file: !128, line: 331, type: !13824)
!13949 = !DILocation(line: 0, scope: !13944)
!13950 = !DILocation(line: 333, column: 21, scope: !13944)
!13951 = !DILocation(line: 333, column: 2, scope: !13944)
!13952 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13953, file: !13953, line: 40, type: !13954, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13956)
!13953 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13954 = !DISubroutineType(types: !13955)
!13955 = !{null, !13897}
!13956 = !{!13957}
!13957 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13952, file: !13953, line: 40, type: !13897)
!13958 = !DILocation(line: 0, scope: !13952)
!13959 = !DILocation(line: 42, column: 31, scope: !13952)
!13960 = !DILocation(line: 42, column: 2, scope: !13952)
!13961 = !DILocation(line: 43, column: 1, scope: !13952)
!13962 = distinct !DISubprogram(name: "z_init_timeout", scope: !13953, file: !13953, line: 25, type: !2227, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13963)
!13963 = !{!13964}
!13964 = !DILocalVariable(name: "to", arg: 1, scope: !13962, file: !13953, line: 25, type: !2229)
!13965 = !DILocation(line: 0, scope: !13962)
!13966 = !DILocation(line: 27, column: 22, scope: !13962)
!13967 = !DILocation(line: 27, column: 2, scope: !13962)
!13968 = !DILocation(line: 28, column: 1, scope: !13962)
!13969 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !13970, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13972)
!13970 = !DISubroutineType(types: !13971)
!13971 = !{null, !2276}
!13972 = !{!13973}
!13973 = !DILocalVariable(name: "node", arg: 1, scope: !13969, file: !153, line: 211, type: !2276)
!13974 = !DILocation(line: 0, scope: !13969)
!13975 = !DILocation(line: 213, column: 8, scope: !13969)
!13976 = !DILocation(line: 213, column: 13, scope: !13969)
!13977 = !DILocation(line: 214, column: 8, scope: !13969)
!13978 = !DILocation(line: 214, column: 13, scope: !13969)
!13979 = !DILocation(line: 215, column: 1, scope: !13969)
!13980 = distinct !DISubprogram(name: "sys_dlist_init", scope: !153, file: !153, line: 197, type: !13981, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13984)
!13981 = !DISubroutineType(types: !13982)
!13982 = !{null, !13983}
!13983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 32)
!13984 = !{!13985}
!13985 = !DILocalVariable(name: "list", arg: 1, scope: !13980, file: !153, line: 197, type: !13983)
!13986 = !DILocation(line: 0, scope: !13980)
!13987 = !DILocation(line: 199, column: 8, scope: !13980)
!13988 = !DILocation(line: 199, column: 13, scope: !13980)
!13989 = !DILocation(line: 200, column: 8, scope: !13980)
!13990 = !DILocation(line: 200, column: 13, scope: !13980)
!13991 = !DILocation(line: 201, column: 1, scope: !13980)
!13992 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2166, file: !2166, line: 641, type: !13993, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !13999)
!13993 = !DISubroutineType(types: !13994)
!13994 = !{!2169, !2170, !13824, !239, !108, !113, !113, !113, !119, !118, !13995}
!13995 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !13996)
!13996 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !13997)
!13997 = !{!13998}
!13998 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13996, file: !115, line: 66, baseType: !114, size: 64)
!13999 = !{!14000, !14001, !14002, !14003, !14004, !14005, !14006, !14007, !14008, !14009}
!14000 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13992, file: !2166, line: 641, type: !2170)
!14001 = !DILocalVariable(name: "stack", arg: 2, scope: !13992, file: !2166, line: 642, type: !13824)
!14002 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13992, file: !2166, line: 643, type: !239)
!14003 = !DILocalVariable(name: "entry", arg: 4, scope: !13992, file: !2166, line: 643, type: !108)
!14004 = !DILocalVariable(name: "p1", arg: 5, scope: !13992, file: !2166, line: 644, type: !113)
!14005 = !DILocalVariable(name: "p2", arg: 6, scope: !13992, file: !2166, line: 644, type: !113)
!14006 = !DILocalVariable(name: "p3", arg: 7, scope: !13992, file: !2166, line: 644, type: !113)
!14007 = !DILocalVariable(name: "prio", arg: 8, scope: !13992, file: !2166, line: 645, type: !119)
!14008 = !DILocalVariable(name: "options", arg: 9, scope: !13992, file: !2166, line: 645, type: !118)
!14009 = !DILocalVariable(name: "delay", arg: 10, scope: !13992, file: !2166, line: 645, type: !13995)
!14010 = !DILocation(line: 0, scope: !13992)
!14011 = !DILocation(line: 1031, column: 3, scope: !13701, inlinedAt: !14012)
!14012 = distinct !DILocation(line: 48, column: 10, scope: !13705, inlinedAt: !14013)
!14013 = distinct !DILocation(line: 647, column: 2, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !14015, file: !2166, line: 647, column: 2)
!14015 = distinct !DILexicalBlock(scope: !13992, file: !2166, line: 647, column: 2)
!14016 = !DILocation(line: 0, scope: !13701, inlinedAt: !14012)
!14017 = !DILocation(line: 48, column: 9, scope: !13705, inlinedAt: !14013)
!14018 = !DILocation(line: 647, column: 2, scope: !14015)
!14019 = !DILocation(line: 647, column: 2, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !14014, file: !2166, line: 647, column: 2)
!14021 = !DILocation(line: 649, column: 2, scope: !13992)
!14022 = !DILocation(line: 652, column: 7, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !13992, file: !2166, line: 652, column: 6)
!14024 = !DILocation(line: 652, column: 6, scope: !13992)
!14025 = !DILocation(line: 653, column: 3, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !14023, file: !2166, line: 652, column: 39)
!14027 = !DILocation(line: 654, column: 2, scope: !14026)
!14028 = !DILocation(line: 656, column: 2, scope: !13992)
!14029 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2166, file: !2166, line: 401, type: !14030, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14032)
!14030 = !DISubroutineType(types: !14031)
!14031 = !{null, !2170, !13995}
!14032 = !{!14033, !14034}
!14033 = !DILocalVariable(name: "thread", arg: 1, scope: !14029, file: !2166, line: 401, type: !2170)
!14034 = !DILocalVariable(name: "delay", arg: 2, scope: !14029, file: !2166, line: 401, type: !13995)
!14035 = !DILocation(line: 0, scope: !14029)
!14036 = !DILocation(line: 404, column: 6, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14029, file: !2166, line: 404, column: 6)
!14038 = !DILocation(line: 404, column: 6, scope: !14029)
!14039 = !DILocation(line: 405, column: 3, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14037, file: !2166, line: 404, column: 38)
!14041 = !DILocation(line: 406, column: 2, scope: !14040)
!14042 = !DILocation(line: 407, column: 3, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14037, file: !2166, line: 406, column: 9)
!14044 = !DILocation(line: 413, column: 1, scope: !14029)
!14045 = distinct !DISubprogram(name: "k_thread_start", scope: !3270, file: !3270, line: 205, type: !14046, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14048)
!14046 = !DISubroutineType(types: !14047)
!14047 = !{null, !2169}
!14048 = !{!14049}
!14049 = !DILocalVariable(name: "thread", arg: 1, scope: !14045, file: !3270, line: 205, type: !2169)
!14050 = !DILocation(line: 0, scope: !14045)
!14051 = !DILocation(line: 214, column: 2, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !14045, file: !3270, line: 214, column: 2)
!14053 = !{i64 2155095159}
!14054 = !DILocation(line: 215, column: 2, scope: !14045)
!14055 = !DILocation(line: 216, column: 1, scope: !14045)
!14056 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13953, file: !13953, line: 47, type: !14030, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14057)
!14057 = !{!14058, !14059}
!14058 = !DILocalVariable(name: "thread", arg: 1, scope: !14056, file: !13953, line: 47, type: !2170)
!14059 = !DILocalVariable(name: "ticks", arg: 2, scope: !14056, file: !13953, line: 47, type: !13995)
!14060 = !DILocation(line: 0, scope: !14056)
!14061 = !DILocation(line: 49, column: 30, scope: !14056)
!14062 = !DILocation(line: 49, column: 2, scope: !14056)
!14063 = !DILocation(line: 50, column: 1, scope: !14056)
!14064 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2166, file: !2166, line: 748, type: !3019, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14065)
!14065 = !{!14066, !14084}
!14066 = !DILocalVariable(name: "thread_data", scope: !14067, file: !2166, line: 750, type: !14068)
!14067 = distinct !DILexicalBlock(scope: !14064, file: !2166, line: 750, column: 2)
!14068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14069, size: 32)
!14069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !245, line: 620, size: 384, elements: !14070)
!14070 = !{!14071, !14072, !14073, !14074, !14075, !14076, !14077, !14078, !14079, !14080, !14081, !14083}
!14071 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14069, file: !245, line: 621, baseType: !2170, size: 32)
!14072 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14069, file: !245, line: 622, baseType: !13824, size: 32, offset: 32)
!14073 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14069, file: !245, line: 623, baseType: !32, size: 32, offset: 64)
!14074 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14069, file: !245, line: 624, baseType: !108, size: 32, offset: 96)
!14075 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14069, file: !245, line: 625, baseType: !113, size: 32, offset: 128)
!14076 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14069, file: !245, line: 626, baseType: !113, size: 32, offset: 160)
!14077 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14069, file: !245, line: 627, baseType: !113, size: 32, offset: 192)
!14078 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14069, file: !245, line: 628, baseType: !119, size: 32, offset: 224)
!14079 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14069, file: !245, line: 629, baseType: !118, size: 32, offset: 256)
!14080 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14069, file: !245, line: 630, baseType: !772, size: 32, offset: 288)
!14081 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14069, file: !245, line: 631, baseType: !14082, size: 32, offset: 320)
!14082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!14083 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14069, file: !245, line: 632, baseType: !278, size: 32, offset: 352)
!14084 = !DILocalVariable(name: "thread_data", scope: !14085, file: !2166, line: 781, type: !14068)
!14085 = distinct !DILexicalBlock(scope: !14064, file: !2166, line: 781, column: 2)
!14086 = !DILocation(line: 0, scope: !14067)
!14087 = !DILocation(line: 750, column: 2, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14089, file: !2166, line: 750, column: 2)
!14089 = distinct !DILexicalBlock(scope: !14090, file: !2166, line: 750, column: 2)
!14090 = distinct !DILexicalBlock(scope: !14067, file: !2166, line: 750, column: 2)
!14091 = !DILocation(line: 750, column: 2, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14093, file: !2166, line: 750, column: 2)
!14093 = distinct !DILexicalBlock(scope: !14088, file: !2166, line: 750, column: 2)
!14094 = !DILocation(line: 750, column: 2, scope: !14089)
!14095 = !DILocation(line: 750, column: 2, scope: !14067)
!14096 = !DILocation(line: 780, column: 2, scope: !14064)
!14097 = !DILocation(line: 0, scope: !14085)
!14098 = !DILocation(line: 781, column: 2, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14100, file: !2166, line: 781, column: 2)
!14100 = distinct !DILexicalBlock(scope: !14101, file: !2166, line: 781, column: 2)
!14101 = distinct !DILexicalBlock(scope: !14085, file: !2166, line: 781, column: 2)
!14102 = !DILocation(line: 752, column: 17, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14090, file: !2166, line: 750, column: 38)
!14104 = !DILocation(line: 753, column: 17, scope: !14103)
!14105 = !DILocation(line: 754, column: 17, scope: !14103)
!14106 = !DILocation(line: 755, column: 17, scope: !14103)
!14107 = !DILocation(line: 756, column: 17, scope: !14103)
!14108 = !DILocation(line: 757, column: 17, scope: !14103)
!14109 = !DILocation(line: 758, column: 17, scope: !14103)
!14110 = !DILocation(line: 759, column: 17, scope: !14103)
!14111 = !DILocation(line: 760, column: 17, scope: !14103)
!14112 = !DILocation(line: 761, column: 17, scope: !14103)
!14113 = !DILocation(line: 751, column: 3, scope: !14103)
!14114 = !DILocation(line: 763, column: 16, scope: !14103)
!14115 = !DILocation(line: 763, column: 29, scope: !14103)
!14116 = !DILocation(line: 763, column: 39, scope: !14103)
!14117 = !DILocation(line: 750, column: 2, scope: !14090)
!14118 = !DILocation(line: 750, column: 2, scope: !14093)
!14119 = distinct !{!14119, !14095, !14120}
!14120 = !DILocation(line: 764, column: 2, scope: !14067)
!14121 = !DILocation(line: 781, column: 2, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14123, file: !2166, line: 781, column: 2)
!14123 = distinct !DILexicalBlock(scope: !14099, file: !2166, line: 781, column: 2)
!14124 = !DILocation(line: 781, column: 2, scope: !14100)
!14125 = !DILocation(line: 781, column: 2, scope: !14085)
!14126 = !DILocation(line: 787, column: 2, scope: !14064)
!14127 = !DILocation(line: 788, column: 1, scope: !14064)
!14128 = !DILocation(line: 782, column: 20, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14130, file: !2166, line: 782, column: 7)
!14130 = distinct !DILexicalBlock(scope: !14101, file: !2166, line: 781, column: 38)
!14131 = !DILocation(line: 782, column: 31, scope: !14129)
!14132 = !DILocation(line: 782, column: 7, scope: !14130)
!14133 = !DILocation(line: 783, column: 37, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14129, file: !2166, line: 782, column: 51)
!14135 = !DILocation(line: 784, column: 10, scope: !14134)
!14136 = !DILocation(line: 783, column: 4, scope: !14134)
!14137 = !DILocation(line: 785, column: 3, scope: !14134)
!14138 = !DILocation(line: 781, column: 2, scope: !14101)
!14139 = !DILocation(line: 781, column: 2, scope: !14123)
!14140 = distinct !{!14140, !14125, !14141}
!14141 = !DILocation(line: 786, column: 2, scope: !14085)
!14142 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3262, file: !3262, line: 403, type: !3263, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14143)
!14143 = !{!14144}
!14144 = !DILocalVariable(name: "t", arg: 1, scope: !14142, file: !3262, line: 403, type: !120)
!14145 = !DILocation(line: 0, scope: !14142)
!14146 = !DILocalVariable(name: "t", arg: 1, scope: !14147, file: !3262, line: 102, type: !120)
!14147 = distinct !DISubprogram(name: "z_tmcvt", scope: !3262, file: !3262, line: 102, type: !3315, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14148)
!14148 = !{!14146, !14149, !14150, !14151, !14152, !14153, !14154, !14155, !14156, !14157, !14158}
!14149 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14147, file: !3262, line: 102, type: !118)
!14150 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14147, file: !3262, line: 103, type: !118)
!14151 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14147, file: !3262, line: 103, type: !345)
!14152 = !DILocalVariable(name: "result32", arg: 5, scope: !14147, file: !3262, line: 104, type: !345)
!14153 = !DILocalVariable(name: "round_up", arg: 6, scope: !14147, file: !3262, line: 104, type: !345)
!14154 = !DILocalVariable(name: "round_off", arg: 7, scope: !14147, file: !3262, line: 105, type: !345)
!14155 = !DILocalVariable(name: "mul_ratio", scope: !14147, file: !3262, line: 107, type: !345)
!14156 = !DILocalVariable(name: "div_ratio", scope: !14147, file: !3262, line: 109, type: !345)
!14157 = !DILocalVariable(name: "off", scope: !14147, file: !3262, line: 116, type: !120)
!14158 = !DILocalVariable(name: "rdivisor", scope: !14159, file: !3262, line: 119, type: !118)
!14159 = distinct !DILexicalBlock(scope: !14160, file: !3262, line: 118, column: 18)
!14160 = distinct !DILexicalBlock(scope: !14147, file: !3262, line: 118, column: 6)
!14161 = !DILocation(line: 0, scope: !14147, inlinedAt: !14162)
!14162 = distinct !DILocation(line: 406, column: 9, scope: !14142)
!14163 = !DILocation(line: 145, column: 13, scope: !14164, inlinedAt: !14162)
!14164 = distinct !DILexicalBlock(scope: !14165, file: !3262, line: 144, column: 10)
!14165 = distinct !DILexicalBlock(scope: !14166, file: !3262, line: 142, column: 7)
!14166 = distinct !DILexicalBlock(scope: !14167, file: !3262, line: 141, column: 24)
!14167 = distinct !DILexicalBlock(scope: !14168, file: !3262, line: 141, column: 13)
!14168 = distinct !DILexicalBlock(scope: !14147, file: !3262, line: 134, column: 6)
!14169 = !DILocation(line: 406, column: 2, scope: !14142)
!14170 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2166, file: !2166, line: 817, type: !4442, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14171)
!14171 = !{!14172, !14173, !14174, !14175}
!14172 = !DILocalVariable(name: "entry", arg: 1, scope: !14170, file: !2166, line: 817, type: !108)
!14173 = !DILocalVariable(name: "p1", arg: 2, scope: !14170, file: !2166, line: 818, type: !113)
!14174 = !DILocalVariable(name: "p2", arg: 3, scope: !14170, file: !2166, line: 818, type: !113)
!14175 = !DILocalVariable(name: "p3", arg: 4, scope: !14170, file: !2166, line: 818, type: !113)
!14176 = !DILocation(line: 0, scope: !14170)
!14177 = !DILocation(line: 822, column: 2, scope: !14170)
!14178 = !DILocation(line: 822, column: 17, scope: !14170)
!14179 = !DILocation(line: 822, column: 30, scope: !14170)
!14180 = !DILocation(line: 823, column: 2, scope: !14170)
!14181 = !DILocation(line: 845, column: 2, scope: !14170)
!14182 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2166, file: !2166, line: 853, type: !14183, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14186)
!14183 = !DISubroutineType(types: !14184)
!14184 = !{!345, !14185}
!14185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!14186 = !{!14187, !14188}
!14187 = !DILocalVariable(name: "l", arg: 1, scope: !14182, file: !2166, line: 853, type: !14185)
!14188 = !DILocalVariable(name: "thread_cpu", scope: !14182, file: !2166, line: 855, type: !22)
!14189 = !DILocation(line: 0, scope: !14182)
!14190 = !DILocation(line: 855, column: 28, scope: !14182)
!14191 = !DILocation(line: 857, column: 17, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !14182, file: !2166, line: 857, column: 6)
!14193 = !DILocation(line: 857, column: 6, scope: !14182)
!14194 = !DILocation(line: 858, column: 19, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !14196, file: !2166, line: 858, column: 7)
!14196 = distinct !DILexicalBlock(scope: !14192, file: !2166, line: 857, column: 24)
!14197 = !DILocation(line: 858, column: 42, scope: !14195)
!14198 = !DILocation(line: 858, column: 28, scope: !14195)
!14199 = !DILocation(line: 858, column: 25, scope: !14195)
!14200 = !DILocation(line: 858, column: 7, scope: !14196)
!14201 = !DILocation(line: 862, column: 2, scope: !14182)
!14202 = !DILocation(line: 863, column: 1, scope: !14182)
!14203 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2166, file: !2166, line: 865, type: !14183, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14204)
!14204 = !{!14205}
!14205 = !DILocalVariable(name: "l", arg: 1, scope: !14203, file: !2166, line: 865, type: !14185)
!14206 = !DILocation(line: 0, scope: !14203)
!14207 = !DILocation(line: 867, column: 9, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14203, file: !2166, line: 867, column: 6)
!14209 = !DILocation(line: 867, column: 38, scope: !14208)
!14210 = !DILocation(line: 867, column: 24, scope: !14208)
!14211 = !DILocation(line: 867, column: 54, scope: !14208)
!14212 = !DILocation(line: 867, column: 43, scope: !14208)
!14213 = !DILocation(line: 867, column: 41, scope: !14208)
!14214 = !DILocation(line: 867, column: 20, scope: !14208)
!14215 = !DILocation(line: 867, column: 6, scope: !14203)
!14216 = !DILocation(line: 870, column: 16, scope: !14203)
!14217 = !DILocation(line: 871, column: 2, scope: !14203)
!14218 = !DILocation(line: 872, column: 1, scope: !14203)
!14219 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2166, file: !2166, line: 874, type: !14220, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14222)
!14220 = !DISubroutineType(types: !14221)
!14221 = !{null, !14185}
!14222 = !{!14223}
!14223 = !DILocalVariable(name: "l", arg: 1, scope: !14219, file: !2166, line: 874, type: !14185)
!14224 = !DILocation(line: 0, scope: !14219)
!14225 = !DILocation(line: 876, column: 32, scope: !14219)
!14226 = !DILocation(line: 876, column: 18, scope: !14219)
!14227 = !DILocation(line: 876, column: 48, scope: !14219)
!14228 = !DILocation(line: 876, column: 37, scope: !14219)
!14229 = !DILocation(line: 876, column: 35, scope: !14219)
!14230 = !DILocation(line: 876, column: 5, scope: !14219)
!14231 = !DILocation(line: 876, column: 16, scope: !14219)
!14232 = !DILocation(line: 877, column: 1, scope: !14219)
!14233 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2166, file: !2166, line: 888, type: !14234, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14236)
!14234 = !DISubroutineType(types: !14235)
!14235 = !{!119, !2170}
!14236 = !{!14237}
!14237 = !DILocalVariable(name: "thread", arg: 1, scope: !14233, file: !2166, line: 888, type: !2170)
!14238 = !DILocation(line: 0, scope: !14233)
!14239 = !DILocation(line: 893, column: 2, scope: !14233)
!14240 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2166, file: !2166, line: 897, type: !14241, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14243)
!14241 = !DISubroutineType(types: !14242)
!14242 = !{!119, !2170, !32}
!14243 = !{!14244, !14245}
!14244 = !DILocalVariable(name: "thread", arg: 1, scope: !14240, file: !2166, line: 897, type: !2170)
!14245 = !DILocalVariable(name: "options", arg: 2, scope: !14240, file: !2166, line: 897, type: !32)
!14246 = !DILocation(line: 0, scope: !14240)
!14247 = !DILocation(line: 902, column: 2, scope: !14240)
!14248 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2166, file: !2166, line: 1072, type: !14249, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14254)
!14249 = !DISubroutineType(types: !14250)
!14250 = !{!119, !2169, !14251}
!14251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14252, size: 32)
!14252 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !143, line: 234, baseType: !14253)
!14253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !143, line: 192, elements: !2102)
!14254 = !{!14255, !14256}
!14255 = !DILocalVariable(name: "thread", arg: 1, scope: !14248, file: !2166, line: 1072, type: !2169)
!14256 = !DILocalVariable(name: "stats", arg: 2, scope: !14248, file: !2166, line: 1073, type: !14251)
!14257 = !DILocation(line: 0, scope: !14248)
!14258 = !DILocation(line: 1075, column: 14, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14248, file: !2166, line: 1075, column: 6)
!14260 = !DILocation(line: 1075, column: 23, scope: !14259)
!14261 = !DILocation(line: 1086, column: 1, scope: !14248)
!14262 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2166, file: !2166, line: 1088, type: !14263, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2273, retainedNodes: !14265)
!14263 = !DISubroutineType(types: !14264)
!14264 = !{!119, !14251}
!14265 = !{!14266}
!14266 = !DILocalVariable(name: "stats", arg: 1, scope: !14262, file: !2166, line: 1088, type: !14251)
!14267 = !DILocation(line: 0, scope: !14262)
!14268 = !DILocation(line: 1094, column: 12, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14262, file: !2166, line: 1094, column: 6)
!14270 = !DILocation(line: 1120, column: 1, scope: !14262)
!14271 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14272, file: !14272, line: 20, type: !3019, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !2102)
!14272 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14273 = !DILocation(line: 30, column: 2, scope: !14271)
!14274 = !DILocation(line: 31, column: 1, scope: !14271)
!14275 = distinct !DISubprogram(name: "idle", scope: !14272, file: !14272, line: 33, type: !111, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !14276)
!14276 = !{!14277, !14278, !14279}
!14277 = !DILocalVariable(name: "unused1", arg: 1, scope: !14275, file: !14272, line: 33, type: !113)
!14278 = !DILocalVariable(name: "unused2", arg: 2, scope: !14275, file: !14272, line: 33, type: !113)
!14279 = !DILocalVariable(name: "unused3", arg: 3, scope: !14275, file: !14272, line: 33, type: !113)
!14280 = !DILocation(line: 0, scope: !14275)
!14281 = !DILocation(line: 39, column: 2, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14283, file: !14272, line: 39, column: 2)
!14283 = distinct !DILexicalBlock(scope: !14275, file: !14272, line: 39, column: 2)
!14284 = !DILocation(line: 39, column: 2, scope: !14283)
!14285 = !DILocation(line: 39, column: 2, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14282, file: !14272, line: 39, column: 2)
!14287 = !DILocation(line: 55, column: 2, scope: !14288, inlinedAt: !14292)
!14288 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6058, file: !6058, line: 42, type: !6059, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !14289)
!14289 = !{!14290, !14291}
!14290 = !DILocalVariable(name: "key", scope: !14288, file: !6058, line: 44, type: !32)
!14291 = !DILocalVariable(name: "tmp", scope: !14288, file: !6058, line: 53, type: !32)
!14292 = distinct !DILocation(line: 62, column: 10, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14275, file: !14272, line: 41, column: 15)
!14294 = !{i64 2282113}
!14295 = !DILocation(line: 0, scope: !14288, inlinedAt: !14292)
!14296 = !DILocation(line: 86, column: 3, scope: !14293)
!14297 = !DILocation(line: 41, column: 2, scope: !14275)
!14298 = distinct !{!14298, !14297, !14299}
!14299 = !DILocation(line: 105, column: 2, scope: !14275)
!14300 = distinct !DISubprogram(name: "k_cpu_idle", scope: !245, file: !245, line: 5627, type: !3019, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !2102)
!14301 = !DILocation(line: 5629, column: 2, scope: !14300)
!14302 = !DILocation(line: 5630, column: 1, scope: !14300)
!14303 = !DISubprogram(name: "arch_cpu_idle", scope: !109, file: !109, line: 167, type: !3019, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2102)
!14304 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2404, file: !2404, line: 93, type: !14305, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14307)
!14305 = !DISubroutineType(types: !14306)
!14306 = !{!772, !2296, !2296}
!14307 = !{!14308, !14309, !14310, !14311}
!14308 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14304, file: !2404, line: 93, type: !2296)
!14309 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14304, file: !2404, line: 94, type: !2296)
!14310 = !DILocalVariable(name: "b1", scope: !14304, file: !2404, line: 97, type: !772)
!14311 = !DILocalVariable(name: "b2", scope: !14304, file: !2404, line: 98, type: !772)
!14312 = !DILocation(line: 0, scope: !14304)
!14313 = !DILocation(line: 97, column: 30, scope: !14304)
!14314 = !DILocation(line: 98, column: 30, scope: !14304)
!14315 = !DILocation(line: 100, column: 9, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14304, file: !2404, line: 100, column: 6)
!14317 = !DILocation(line: 100, column: 6, scope: !14304)
!14318 = !DILocation(line: 125, column: 1, scope: !14304)
!14319 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2404, file: !2404, line: 428, type: !14320, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14322)
!14320 = !DISubroutineType(types: !14321)
!14321 = !{null, !2296}
!14322 = !{!14323}
!14323 = !DILocalVariable(name: "curr", arg: 1, scope: !14319, file: !2404, line: 428, type: !2296)
!14324 = !DILocation(line: 0, scope: !14319)
!14325 = !DILocation(line: 434, column: 6, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14319, file: !2404, line: 434, column: 6)
!14327 = !DILocation(line: 434, column: 23, scope: !14326)
!14328 = !DILocation(line: 434, column: 6, scope: !14319)
!14329 = !DILocation(line: 435, column: 50, scope: !14330)
!14330 = distinct !DILexicalBlock(scope: !14326, file: !2404, line: 434, column: 29)
!14331 = !DILocation(line: 435, column: 48, scope: !14330)
!14332 = !DILocation(line: 435, column: 29, scope: !14330)
!14333 = !DILocation(line: 436, column: 24, scope: !14330)
!14334 = !DILocation(line: 436, column: 3, scope: !14330)
!14335 = !DILocation(line: 437, column: 2, scope: !14330)
!14336 = !DILocation(line: 438, column: 1, scope: !14319)
!14337 = distinct !DISubprogram(name: "slice_time", scope: !2404, file: !2404, line: 407, type: !14338, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14340)
!14338 = !DISubroutineType(types: !14339)
!14339 = !{!119, !2296}
!14340 = !{!14341, !14342}
!14341 = !DILocalVariable(name: "curr", arg: 1, scope: !14337, file: !2404, line: 407, type: !2296)
!14342 = !DILocalVariable(name: "ret", scope: !14337, file: !2404, line: 409, type: !119)
!14343 = !DILocation(line: 0, scope: !14337)
!14344 = !DILocation(line: 409, column: 12, scope: !14337)
!14345 = !DILocation(line: 416, column: 2, scope: !14337)
!14346 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2404, file: !2404, line: 440, type: !14347, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14349)
!14347 = !DISubroutineType(types: !14348)
!14348 = !{null, !772, !119}
!14349 = !{!14350, !14351, !14352, !14358}
!14350 = !DILocalVariable(name: "slice", arg: 1, scope: !14346, file: !2404, line: 440, type: !772)
!14351 = !DILocalVariable(name: "prio", arg: 2, scope: !14346, file: !2404, line: 440, type: !119)
!14352 = !DILocalVariable(name: "__i", scope: !14353, file: !2404, line: 442, type: !14354)
!14353 = distinct !DILexicalBlock(scope: !14346, file: !2404, line: 442, column: 2)
!14354 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !14355)
!14355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !14356)
!14356 = !{!14357}
!14357 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14355, file: !259, line: 33, baseType: !119, size: 32)
!14358 = !DILocalVariable(name: "__key", scope: !14353, file: !2404, line: 442, type: !14354)
!14359 = !DILocation(line: 0, scope: !14346)
!14360 = !DILocation(line: 0, scope: !14353)
!14361 = !DILocalVariable(name: "l", arg: 1, scope: !14362, file: !259, line: 136, type: !14365)
!14362 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !14363, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14366)
!14363 = !DISubroutineType(types: !14364)
!14364 = !{!14354, !14365}
!14365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!14366 = !{!14361, !14367}
!14367 = !DILocalVariable(name: "k", scope: !14362, file: !259, line: 139, type: !14354)
!14368 = !DILocation(line: 0, scope: !14362, inlinedAt: !14369)
!14369 = distinct !DILocation(line: 442, column: 2, scope: !14353)
!14370 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !14375)
!14371 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6058, file: !6058, line: 42, type: !6059, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14372)
!14372 = !{!14373, !14374}
!14373 = !DILocalVariable(name: "key", scope: !14371, file: !6058, line: 44, type: !32)
!14374 = !DILocalVariable(name: "tmp", scope: !14371, file: !6058, line: 53, type: !32)
!14375 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !14369)
!14376 = !{i64 2326084}
!14377 = !DILocation(line: 0, scope: !14371, inlinedAt: !14375)
!14378 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !14369)
!14379 = distinct !DILexicalBlock(scope: !14380, file: !259, line: 148, column: 2)
!14380 = distinct !DILexicalBlock(scope: !14362, file: !259, line: 148, column: 2)
!14381 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !14369)
!14382 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !14369)
!14383 = distinct !DILexicalBlock(scope: !14379, file: !259, line: 148, column: 2)
!14384 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !14369)
!14385 = !DILocation(line: 443, column: 29, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14387, file: !2404, line: 442, column: 26)
!14387 = distinct !DILexicalBlock(scope: !14353, file: !2404, line: 442, column: 2)
!14388 = !DILocation(line: 444, column: 17, scope: !14386)
!14389 = !DILocation(line: 445, column: 51, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14386, file: !2404, line: 445, column: 7)
!14391 = !DILocation(line: 445, column: 7, scope: !14386)
!14392 = !DILocation(line: 0, scope: !14386)
!14393 = !DILocation(line: 451, column: 18, scope: !14386)
!14394 = !DILocation(line: 452, column: 3, scope: !14386)
!14395 = !DILocalVariable(name: "key", arg: 2, scope: !14396, file: !259, line: 190, type: !14354)
!14396 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !14397, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14399)
!14397 = !DISubroutineType(types: !14398)
!14398 = !{null, !14365, !14354}
!14399 = !{!14400, !14395}
!14400 = !DILocalVariable(name: "l", arg: 1, scope: !14396, file: !259, line: 189, type: !14365)
!14401 = !DILocation(line: 0, scope: !14396, inlinedAt: !14402)
!14402 = distinct !DILocation(line: 442, column: 2, scope: !14387)
!14403 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !14402)
!14404 = distinct !DILexicalBlock(scope: !14405, file: !259, line: 194, column: 2)
!14405 = distinct !DILexicalBlock(scope: !14396, file: !259, line: 194, column: 2)
!14406 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !14402)
!14407 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !14402)
!14408 = distinct !DILexicalBlock(scope: !14404, file: !259, line: 194, column: 2)
!14409 = !DILocalVariable(name: "key", arg: 1, scope: !14410, file: !6058, line: 84, type: !32)
!14410 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6058, file: !6058, line: 84, type: !6069, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14411)
!14411 = !{!14409}
!14412 = !DILocation(line: 0, scope: !14410, inlinedAt: !14413)
!14413 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !14402)
!14414 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !14413)
!14415 = !{i64 2326901}
!14416 = !DILocation(line: 454, column: 1, scope: !14346)
!14417 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3262, file: !3262, line: 389, type: !7664, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14418)
!14418 = !{!14419}
!14419 = !DILocalVariable(name: "t", arg: 1, scope: !14417, file: !3262, line: 389, type: !118)
!14420 = !DILocation(line: 0, scope: !14417)
!14421 = !DILocalVariable(name: "t", arg: 1, scope: !14422, file: !3262, line: 102, type: !120)
!14422 = distinct !DISubprogram(name: "z_tmcvt", scope: !3262, file: !3262, line: 102, type: !3315, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14423)
!14423 = !{!14421, !14424, !14425, !14426, !14427, !14428, !14429, !14430, !14431, !14432, !14433}
!14424 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14422, file: !3262, line: 102, type: !118)
!14425 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14422, file: !3262, line: 103, type: !118)
!14426 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14422, file: !3262, line: 103, type: !345)
!14427 = !DILocalVariable(name: "result32", arg: 5, scope: !14422, file: !3262, line: 104, type: !345)
!14428 = !DILocalVariable(name: "round_up", arg: 6, scope: !14422, file: !3262, line: 104, type: !345)
!14429 = !DILocalVariable(name: "round_off", arg: 7, scope: !14422, file: !3262, line: 105, type: !345)
!14430 = !DILocalVariable(name: "mul_ratio", scope: !14422, file: !3262, line: 107, type: !345)
!14431 = !DILocalVariable(name: "div_ratio", scope: !14422, file: !3262, line: 109, type: !345)
!14432 = !DILocalVariable(name: "off", scope: !14422, file: !3262, line: 116, type: !120)
!14433 = !DILocalVariable(name: "rdivisor", scope: !14434, file: !3262, line: 119, type: !118)
!14434 = distinct !DILexicalBlock(scope: !14435, file: !3262, line: 118, column: 18)
!14435 = distinct !DILexicalBlock(scope: !14422, file: !3262, line: 118, column: 6)
!14436 = !DILocation(line: 0, scope: !14422, inlinedAt: !14437)
!14437 = distinct !DILocation(line: 392, column: 9, scope: !14417)
!14438 = !DILocation(line: 143, column: 25, scope: !14439, inlinedAt: !14437)
!14439 = distinct !DILexicalBlock(scope: !14440, file: !3262, line: 142, column: 17)
!14440 = distinct !DILexicalBlock(scope: !14441, file: !3262, line: 142, column: 7)
!14441 = distinct !DILexicalBlock(scope: !14442, file: !3262, line: 141, column: 24)
!14442 = distinct !DILexicalBlock(scope: !14443, file: !3262, line: 141, column: 13)
!14443 = distinct !DILexicalBlock(scope: !14422, file: !3262, line: 134, column: 6)
!14444 = !DILocation(line: 392, column: 2, scope: !14417)
!14445 = distinct !DISubprogram(name: "z_time_slice", scope: !2404, file: !2404, line: 502, type: !8463, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14446)
!14446 = !{!14447, !14448}
!14447 = !DILocalVariable(name: "ticks", arg: 1, scope: !14445, file: !2404, line: 502, type: !119)
!14448 = !DILocalVariable(name: "key", scope: !14445, file: !2404, line: 511, type: !14354)
!14449 = !DILocation(line: 0, scope: !14445)
!14450 = !DILocation(line: 0, scope: !14362, inlinedAt: !14451)
!14451 = distinct !DILocation(line: 511, column: 25, scope: !14445)
!14452 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !14453)
!14453 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !14451)
!14454 = !DILocation(line: 0, scope: !14371, inlinedAt: !14453)
!14455 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !14451)
!14456 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !14451)
!14457 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !14451)
!14458 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !14451)
!14459 = !DILocation(line: 514, column: 6, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14445, file: !2404, line: 514, column: 6)
!14461 = !DILocation(line: 514, column: 25, scope: !14460)
!14462 = !DILocation(line: 514, column: 22, scope: !14460)
!14463 = !DILocation(line: 514, column: 6, scope: !14445)
!14464 = !DILocation(line: 515, column: 3, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14460, file: !2404, line: 514, column: 35)
!14466 = !DILocation(line: 0, scope: !14396, inlinedAt: !14467)
!14467 = distinct !DILocation(line: 516, column: 3, scope: !14465)
!14468 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !14467)
!14469 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !14467)
!14470 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !14467)
!14471 = !DILocation(line: 0, scope: !14410, inlinedAt: !14472)
!14472 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !14467)
!14473 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !14472)
!14474 = !DILocation(line: 517, column: 3, scope: !14465)
!14475 = !DILocation(line: 519, column: 18, scope: !14445)
!14476 = !DILocation(line: 522, column: 6, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !14445, file: !2404, line: 522, column: 6)
!14478 = !DILocation(line: 522, column: 27, scope: !14477)
!14479 = !DILocation(line: 522, column: 30, scope: !14477)
!14480 = !DILocation(line: 522, column: 6, scope: !14445)
!14481 = !DILocation(line: 523, column: 30, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14483, file: !2404, line: 523, column: 7)
!14483 = distinct !DILexicalBlock(scope: !14477, file: !2404, line: 522, column: 51)
!14484 = !DILocation(line: 523, column: 13, scope: !14482)
!14485 = !DILocation(line: 523, column: 7, scope: !14483)
!14486 = !DILocation(line: 530, column: 10, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14482, file: !2404, line: 523, column: 43)
!14488 = !DILocation(line: 531, column: 3, scope: !14487)
!14489 = !DILocation(line: 532, column: 30, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14482, file: !2404, line: 531, column: 10)
!14491 = !DILocation(line: 535, column: 29, scope: !14492)
!14492 = distinct !DILexicalBlock(scope: !14477, file: !2404, line: 534, column: 9)
!14493 = !DILocation(line: 0, scope: !14396, inlinedAt: !14494)
!14494 = distinct !DILocation(line: 537, column: 2, scope: !14445)
!14495 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !14494)
!14496 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !14494)
!14497 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !14494)
!14498 = !DILocation(line: 0, scope: !14410, inlinedAt: !14499)
!14499 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !14494)
!14500 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !14499)
!14501 = !DILocation(line: 538, column: 1, scope: !14445)
!14502 = distinct !DISubprogram(name: "sliceable", scope: !2404, file: !2404, line: 468, type: !14503, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14505)
!14503 = !DISubroutineType(types: !14504)
!14504 = !{!345, !2296}
!14505 = !{!14506, !14507}
!14506 = !DILocalVariable(name: "thread", arg: 1, scope: !14502, file: !2404, line: 468, type: !2296)
!14507 = !DILocalVariable(name: "ret", scope: !14502, file: !2404, line: 470, type: !345)
!14508 = !DILocation(line: 0, scope: !14502)
!14509 = !DILocation(line: 470, column: 13, scope: !14502)
!14510 = !DILocation(line: 471, column: 3, scope: !14502)
!14511 = !DILocation(line: 471, column: 7, scope: !14502)
!14512 = !DILocation(line: 472, column: 3, scope: !14502)
!14513 = !DILocation(line: 472, column: 37, scope: !14502)
!14514 = !DILocation(line: 472, column: 24, scope: !14502)
!14515 = !DILocation(line: 472, column: 43, scope: !14502)
!14516 = !DILocation(line: 472, column: 7, scope: !14502)
!14517 = !DILocation(line: 473, column: 3, scope: !14502)
!14518 = !DILocation(line: 473, column: 7, scope: !14502)
!14519 = !DILocation(line: 473, column: 6, scope: !14502)
!14520 = !DILocation(line: 479, column: 2, scope: !14502)
!14521 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2404, file: !2404, line: 482, type: !14522, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14524)
!14522 = !DISubroutineType(types: !14523)
!14523 = !{!14354, !14354}
!14524 = !{!14525, !14526}
!14525 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14521, file: !2404, line: 482, type: !14354)
!14526 = !DILocalVariable(name: "curr", scope: !14521, file: !2404, line: 484, type: !2296)
!14527 = !DILocation(line: 0, scope: !14521)
!14528 = !DILocation(line: 484, column: 26, scope: !14521)
!14529 = !DILocation(line: 493, column: 7, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14521, file: !2404, line: 493, column: 6)
!14531 = !DILocation(line: 493, column: 6, scope: !14521)
!14532 = !DILocation(line: 494, column: 3, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14530, file: !2404, line: 493, column: 49)
!14534 = !DILocation(line: 495, column: 2, scope: !14533)
!14535 = !DILocation(line: 496, column: 2, scope: !14521)
!14536 = !DILocation(line: 499, column: 1, scope: !14521)
!14537 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13524, file: !13524, line: 106, type: !14503, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14538)
!14538 = !{!14539, !14540}
!14539 = !DILocalVariable(name: "thread", arg: 1, scope: !14537, file: !13524, line: 106, type: !2296)
!14540 = !DILocalVariable(name: "state", scope: !14537, file: !13524, line: 108, type: !185)
!14541 = !DILocation(line: 0, scope: !14537)
!14542 = !DILocation(line: 108, column: 31, scope: !14537)
!14543 = !DILocation(line: 110, column: 16, scope: !14537)
!14544 = !DILocation(line: 111, column: 41, scope: !14537)
!14545 = !DILocation(line: 110, column: 2, scope: !14537)
!14546 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2404, file: !2404, line: 393, type: !14320, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14547)
!14547 = !{!14548}
!14548 = !DILocalVariable(name: "thread", arg: 1, scope: !14546, file: !2404, line: 393, type: !2296)
!14549 = !DILocation(line: 0, scope: !14546)
!14550 = !DILocation(line: 395, column: 6, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14546, file: !2404, line: 395, column: 6)
!14552 = !DILocation(line: 395, column: 6, scope: !14546)
!14553 = !DILocalVariable(name: "thread", arg: 1, scope: !14554, file: !2404, line: 264, type: !2296)
!14554 = distinct !DISubprogram(name: "dequeue_thread", scope: !2404, file: !2404, line: 264, type: !14320, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14555)
!14555 = !{!14553}
!14556 = !DILocation(line: 0, scope: !14554, inlinedAt: !14557)
!14557 = distinct !DILocation(line: 396, column: 3, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14551, file: !2404, line: 395, column: 34)
!14559 = !DILocation(line: 266, column: 15, scope: !14554, inlinedAt: !14557)
!14560 = !DILocation(line: 266, column: 28, scope: !14554, inlinedAt: !14557)
!14561 = !DILocalVariable(name: "thread", arg: 1, scope: !14562, file: !2404, line: 232, type: !2296)
!14562 = distinct !DISubprogram(name: "runq_remove", scope: !2404, file: !2404, line: 232, type: !14320, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14563)
!14563 = !{!14561}
!14564 = !DILocation(line: 0, scope: !14562, inlinedAt: !14565)
!14565 = distinct !DILocation(line: 268, column: 3, scope: !14566, inlinedAt: !14557)
!14566 = distinct !DILexicalBlock(scope: !14567, file: !2404, line: 267, column: 35)
!14567 = distinct !DILexicalBlock(scope: !14554, file: !2404, line: 267, column: 6)
!14568 = !DILocation(line: 234, column: 2, scope: !14562, inlinedAt: !14565)
!14569 = !DILocation(line: 397, column: 2, scope: !14558)
!14570 = !DILocalVariable(name: "thread", arg: 1, scope: !14571, file: !2404, line: 250, type: !2296)
!14571 = distinct !DISubprogram(name: "queue_thread", scope: !2404, file: !2404, line: 250, type: !14320, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14572)
!14572 = !{!14570}
!14573 = !DILocation(line: 0, scope: !14571, inlinedAt: !14574)
!14574 = distinct !DILocation(line: 398, column: 2, scope: !14546)
!14575 = !DILocation(line: 252, column: 15, scope: !14571, inlinedAt: !14574)
!14576 = !DILocation(line: 252, column: 28, scope: !14571, inlinedAt: !14574)
!14577 = !DILocalVariable(name: "thread", arg: 1, scope: !14578, file: !2404, line: 227, type: !2296)
!14578 = distinct !DISubprogram(name: "runq_add", scope: !2404, file: !2404, line: 227, type: !14320, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14579)
!14579 = !{!14577}
!14580 = !DILocation(line: 0, scope: !14578, inlinedAt: !14581)
!14581 = distinct !DILocation(line: 254, column: 3, scope: !14582, inlinedAt: !14574)
!14582 = distinct !DILexicalBlock(scope: !14583, file: !2404, line: 253, column: 35)
!14583 = distinct !DILexicalBlock(scope: !14571, file: !2404, line: 253, column: 6)
!14584 = !DILocalVariable(name: "pq", arg: 1, scope: !14585, file: !2404, line: 181, type: !14588)
!14585 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2404, file: !2404, line: 181, type: !14586, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14589)
!14586 = !DISubroutineType(types: !14587)
!14587 = !{null, !14588, !2296}
!14588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 32)
!14589 = !{!14584, !14590, !14591}
!14590 = !DILocalVariable(name: "thread", arg: 2, scope: !14585, file: !2404, line: 182, type: !2296)
!14591 = !DILocalVariable(name: "t", scope: !14585, file: !2404, line: 184, type: !2296)
!14592 = !DILocation(line: 0, scope: !14585, inlinedAt: !14593)
!14593 = distinct !DILocation(line: 229, column: 2, scope: !14578, inlinedAt: !14581)
!14594 = !DILocation(line: 186, column: 2, scope: !14595, inlinedAt: !14593)
!14595 = distinct !DILexicalBlock(scope: !14596, file: !2404, line: 186, column: 2)
!14596 = distinct !DILexicalBlock(scope: !14585, file: !2404, line: 186, column: 2)
!14597 = !DILocation(line: 186, column: 2, scope: !14596, inlinedAt: !14593)
!14598 = !DILocation(line: 186, column: 2, scope: !14599, inlinedAt: !14593)
!14599 = distinct !DILexicalBlock(scope: !14595, file: !2404, line: 186, column: 2)
!14600 = !DILocation(line: 188, column: 2, scope: !14601, inlinedAt: !14593)
!14601 = distinct !DILexicalBlock(scope: !14585, file: !2404, line: 188, column: 2)
!14602 = !DILocation(line: 188, column: 2, scope: !14603, inlinedAt: !14593)
!14603 = distinct !DILexicalBlock(scope: !14601, file: !2404, line: 188, column: 2)
!14604 = !DILocation(line: 0, scope: !14601, inlinedAt: !14593)
!14605 = !DILocation(line: 189, column: 7, scope: !14606, inlinedAt: !14593)
!14606 = distinct !DILexicalBlock(scope: !14607, file: !2404, line: 189, column: 7)
!14607 = distinct !DILexicalBlock(scope: !14603, file: !2404, line: 188, column: 56)
!14608 = !DILocation(line: 189, column: 35, scope: !14606, inlinedAt: !14593)
!14609 = !DILocation(line: 189, column: 7, scope: !14607, inlinedAt: !14593)
!14610 = !DILocation(line: 191, column: 21, scope: !14611, inlinedAt: !14593)
!14611 = distinct !DILexicalBlock(scope: !14606, file: !2404, line: 189, column: 40)
!14612 = !DILocation(line: 190, column: 4, scope: !14611, inlinedAt: !14593)
!14613 = !DILocation(line: 192, column: 4, scope: !14611, inlinedAt: !14593)
!14614 = distinct !{!14614, !14600, !14615}
!14615 = !DILocation(line: 194, column: 2, scope: !14601, inlinedAt: !14593)
!14616 = !DILocation(line: 196, column: 37, scope: !14585, inlinedAt: !14593)
!14617 = !DILocation(line: 196, column: 2, scope: !14585, inlinedAt: !14593)
!14618 = !DILocation(line: 197, column: 1, scope: !14585, inlinedAt: !14593)
!14619 = !DILocation(line: 399, column: 25, scope: !14546)
!14620 = !DILocation(line: 399, column: 22, scope: !14546)
!14621 = !DILocation(line: 399, column: 2, scope: !14546)
!14622 = !DILocation(line: 400, column: 1, scope: !14546)
!14623 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13524, file: !13524, line: 136, type: !14503, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14624)
!14624 = !{!14625}
!14625 = !DILocalVariable(name: "thread", arg: 1, scope: !14623, file: !13524, line: 136, type: !2296)
!14626 = !DILocation(line: 0, scope: !14623)
!14627 = !DILocation(line: 138, column: 9, scope: !14623)
!14628 = !DILocation(line: 138, column: 2, scope: !14623)
!14629 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2404, file: !2404, line: 1137, type: !14586, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14630)
!14630 = !{!14631, !14632}
!14631 = !DILocalVariable(name: "pq", arg: 1, scope: !14629, file: !2404, line: 1137, type: !14588)
!14632 = !DILocalVariable(name: "thread", arg: 2, scope: !14629, file: !2404, line: 1137, type: !2296)
!14633 = !DILocation(line: 0, scope: !14629)
!14634 = !DILocation(line: 1139, column: 2, scope: !14635)
!14635 = distinct !DILexicalBlock(scope: !14636, file: !2404, line: 1139, column: 2)
!14636 = distinct !DILexicalBlock(scope: !14629, file: !2404, line: 1139, column: 2)
!14637 = !DILocation(line: 1139, column: 2, scope: !14636)
!14638 = !DILocation(line: 1139, column: 2, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14635, file: !2404, line: 1139, column: 2)
!14640 = !DILocation(line: 1141, column: 33, scope: !14629)
!14641 = !DILocation(line: 1141, column: 2, scope: !14629)
!14642 = !DILocation(line: 1142, column: 1, scope: !14629)
!14643 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13524, file: !13524, line: 83, type: !14503, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14644)
!14644 = !{!14645}
!14645 = !DILocalVariable(name: "thread", arg: 1, scope: !14643, file: !13524, line: 83, type: !2296)
!14646 = !DILocation(line: 0, scope: !14643)
!14647 = !DILocation(line: 89, column: 16, scope: !14643)
!14648 = !DILocation(line: 89, column: 2, scope: !14643)
!14649 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !153, file: !153, line: 294, type: !14650, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14652)
!14650 = !DISubroutineType(types: !14651)
!14651 = !{!2400, !14588}
!14652 = !{!14653}
!14653 = !DILocalVariable(name: "list", arg: 1, scope: !14649, file: !153, line: 294, type: !14588)
!14654 = !DILocation(line: 0, scope: !14649)
!14655 = !DILocation(line: 296, column: 9, scope: !14649)
!14656 = !DILocation(line: 296, column: 49, scope: !14649)
!14657 = !DILocation(line: 296, column: 2, scope: !14649)
!14658 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !153, file: !153, line: 443, type: !14659, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14661)
!14659 = !DISubroutineType(types: !14660)
!14660 = !{null, !2400, !2400}
!14661 = !{!14662, !14663, !14664}
!14662 = !DILocalVariable(name: "successor", arg: 1, scope: !14658, file: !153, line: 443, type: !2400)
!14663 = !DILocalVariable(name: "node", arg: 2, scope: !14658, file: !153, line: 443, type: !2400)
!14664 = !DILocalVariable(name: "prev", scope: !14658, file: !153, line: 445, type: !14665)
!14665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2400)
!14666 = !DILocation(line: 0, scope: !14658)
!14667 = !DILocation(line: 445, column: 39, scope: !14658)
!14668 = !DILocation(line: 447, column: 8, scope: !14658)
!14669 = !DILocation(line: 447, column: 13, scope: !14658)
!14670 = !DILocation(line: 448, column: 8, scope: !14658)
!14671 = !DILocation(line: 448, column: 13, scope: !14658)
!14672 = !DILocation(line: 449, column: 8, scope: !14658)
!14673 = !DILocation(line: 449, column: 13, scope: !14658)
!14674 = !DILocation(line: 450, column: 18, scope: !14658)
!14675 = !DILocation(line: 451, column: 1, scope: !14658)
!14676 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !153, file: !153, line: 341, type: !14677, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14679)
!14677 = !DISubroutineType(types: !14678)
!14678 = !{!2400, !14588, !2400}
!14679 = !{!14680, !14681}
!14680 = !DILocalVariable(name: "list", arg: 1, scope: !14676, file: !153, line: 341, type: !14588)
!14681 = !DILocalVariable(name: "node", arg: 2, scope: !14676, file: !153, line: 342, type: !2400)
!14682 = !DILocation(line: 0, scope: !14676)
!14683 = !DILocation(line: 344, column: 15, scope: !14676)
!14684 = !DILocation(line: 344, column: 9, scope: !14676)
!14685 = !DILocation(line: 344, column: 26, scope: !14676)
!14686 = !DILocation(line: 344, column: 2, scope: !14676)
!14687 = distinct !DISubprogram(name: "sys_dlist_append", scope: !153, file: !153, line: 404, type: !14688, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14690)
!14688 = !DISubroutineType(types: !14689)
!14689 = !{null, !14588, !2400}
!14690 = !{!14691, !14692, !14693}
!14691 = !DILocalVariable(name: "list", arg: 1, scope: !14687, file: !153, line: 404, type: !14588)
!14692 = !DILocalVariable(name: "node", arg: 2, scope: !14687, file: !153, line: 404, type: !2400)
!14693 = !DILocalVariable(name: "tail", scope: !14687, file: !153, line: 406, type: !14665)
!14694 = !DILocation(line: 0, scope: !14687)
!14695 = !DILocation(line: 406, column: 34, scope: !14687)
!14696 = !DILocation(line: 408, column: 8, scope: !14687)
!14697 = !DILocation(line: 408, column: 13, scope: !14687)
!14698 = !DILocation(line: 409, column: 8, scope: !14687)
!14699 = !DILocation(line: 409, column: 13, scope: !14687)
!14700 = !DILocation(line: 411, column: 8, scope: !14687)
!14701 = !DILocation(line: 411, column: 13, scope: !14687)
!14702 = !DILocation(line: 412, column: 13, scope: !14687)
!14703 = !DILocation(line: 413, column: 1, scope: !14687)
!14704 = distinct !DISubprogram(name: "update_cache", scope: !2404, file: !2404, line: 559, type: !8463, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14705)
!14705 = !{!14706, !14707}
!14706 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14704, file: !2404, line: 559, type: !119)
!14707 = !DILocalVariable(name: "thread", scope: !14704, file: !2404, line: 562, type: !2296)
!14708 = !DILocation(line: 0, scope: !14704)
!14709 = !DILocation(line: 239, column: 9, scope: !14710, inlinedAt: !14713)
!14710 = distinct !DISubprogram(name: "runq_best", scope: !2404, file: !2404, line: 237, type: !14711, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !2102)
!14711 = !DISubroutineType(types: !14712)
!14712 = !{!2296}
!14713 = distinct !DILocation(line: 314, column: 28, scope: !14714, inlinedAt: !14717)
!14714 = distinct !DISubprogram(name: "next_up", scope: !2404, file: !2404, line: 312, type: !14711, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14715)
!14715 = !{!14716}
!14716 = !DILocalVariable(name: "thread", scope: !14714, file: !2404, line: 314, type: !2296)
!14717 = distinct !DILocation(line: 562, column: 28, scope: !14704)
!14718 = !DILocation(line: 0, scope: !14714, inlinedAt: !14717)
!14719 = !DILocation(line: 340, column: 17, scope: !14714, inlinedAt: !14717)
!14720 = !DILocation(line: 340, column: 9, scope: !14714, inlinedAt: !14717)
!14721 = !DILocalVariable(name: "thread", arg: 1, scope: !14722, file: !2404, line: 127, type: !2296)
!14722 = distinct !DISubprogram(name: "should_preempt", scope: !2404, file: !2404, line: 127, type: !14723, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14725)
!14723 = !DISubroutineType(types: !14724)
!14724 = !{!345, !2296, !119}
!14725 = !{!14721, !14726}
!14726 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14722, file: !2404, line: 128, type: !119)
!14727 = !DILocation(line: 0, scope: !14722, inlinedAt: !14728)
!14728 = distinct !DILocation(line: 564, column: 6, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14704, file: !2404, line: 564, column: 6)
!14730 = !DILocation(line: 133, column: 17, scope: !14731, inlinedAt: !14728)
!14731 = distinct !DILexicalBlock(scope: !14722, file: !2404, line: 133, column: 6)
!14732 = !DILocation(line: 0, scope: !14729)
!14733 = !DILocation(line: 133, column: 6, scope: !14722, inlinedAt: !14728)
!14734 = !DILocation(line: 137, column: 2, scope: !14735, inlinedAt: !14728)
!14735 = distinct !DILexicalBlock(scope: !14736, file: !2404, line: 137, column: 2)
!14736 = distinct !DILexicalBlock(scope: !14722, file: !2404, line: 137, column: 2)
!14737 = !DILocation(line: 137, column: 2, scope: !14736, inlinedAt: !14728)
!14738 = !DILocation(line: 137, column: 2, scope: !14739, inlinedAt: !14728)
!14739 = distinct !DILexicalBlock(scope: !14735, file: !2404, line: 137, column: 2)
!14740 = !DILocation(line: 140, column: 6, scope: !14741, inlinedAt: !14728)
!14741 = distinct !DILexicalBlock(scope: !14722, file: !2404, line: 140, column: 6)
!14742 = !DILocation(line: 140, column: 6, scope: !14722, inlinedAt: !14728)
!14743 = !DILocation(line: 150, column: 9, scope: !14744, inlinedAt: !14728)
!14744 = distinct !DILexicalBlock(scope: !14722, file: !2404, line: 149, column: 6)
!14745 = !DILocation(line: 149, column: 6, scope: !14722, inlinedAt: !14728)
!14746 = !DILocation(line: 157, column: 6, scope: !14747, inlinedAt: !14728)
!14747 = distinct !DILexicalBlock(scope: !14722, file: !2404, line: 157, column: 6)
!14748 = !DILocation(line: 564, column: 6, scope: !14704)
!14749 = !DILocation(line: 566, column: 14, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14751, file: !2404, line: 566, column: 7)
!14751 = distinct !DILexicalBlock(scope: !14729, file: !2404, line: 564, column: 42)
!14752 = !DILocation(line: 566, column: 7, scope: !14751)
!14753 = !DILocation(line: 567, column: 4, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14750, file: !2404, line: 566, column: 27)
!14755 = !DILocation(line: 568, column: 3, scope: !14754)
!14756 = !DILocation(line: 585, column: 1, scope: !14704)
!14757 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2404, file: !2404, line: 1144, type: !14758, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14760)
!14758 = !DISubroutineType(types: !14759)
!14759 = !{!2296, !14588}
!14760 = !{!14761, !14762, !14763}
!14761 = !DILocalVariable(name: "pq", arg: 1, scope: !14757, file: !2404, line: 1144, type: !14588)
!14762 = !DILocalVariable(name: "thread", scope: !14757, file: !2404, line: 1146, type: !2296)
!14763 = !DILocalVariable(name: "n", scope: !14757, file: !2404, line: 1147, type: !2400)
!14764 = !DILocation(line: 0, scope: !14757)
!14765 = !DILocation(line: 1147, column: 19, scope: !14757)
!14766 = !DILocation(line: 1152, column: 2, scope: !14757)
!14767 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13524, file: !13524, line: 115, type: !14503, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14768)
!14768 = !{!14769}
!14769 = !DILocalVariable(name: "thread", arg: 1, scope: !14767, file: !13524, line: 115, type: !2296)
!14770 = !DILocation(line: 0, scope: !14767)
!14771 = !DILocation(line: 117, column: 46, scope: !14767)
!14772 = !DILocation(line: 117, column: 10, scope: !14767)
!14773 = !DILocation(line: 117, column: 9, scope: !14767)
!14774 = !DILocation(line: 117, column: 2, scope: !14767)
!14775 = distinct !DISubprogram(name: "is_preempt", scope: !2404, file: !2404, line: 62, type: !14338, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14776)
!14776 = !{!14777}
!14777 = !DILocalVariable(name: "thread", arg: 1, scope: !14775, file: !2404, line: 62, type: !2296)
!14778 = !DILocation(line: 0, scope: !14775)
!14779 = !DILocation(line: 65, column: 22, scope: !14775)
!14780 = !DILocation(line: 65, column: 30, scope: !14775)
!14781 = !DILocation(line: 65, column: 2, scope: !14775)
!14782 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13953, file: !13953, line: 35, type: !14783, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14787)
!14783 = !DISubroutineType(types: !14784)
!14784 = !{!345, !14785}
!14785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14786, size: 32)
!14786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2347)
!14787 = !{!14788}
!14788 = !DILocalVariable(name: "to", arg: 1, scope: !14782, file: !13953, line: 35, type: !14785)
!14789 = !DILocation(line: 0, scope: !14782)
!14790 = !DILocation(line: 37, column: 35, scope: !14782)
!14791 = !DILocation(line: 37, column: 10, scope: !14782)
!14792 = !DILocation(line: 37, column: 9, scope: !14782)
!14793 = !DILocation(line: 37, column: 2, scope: !14782)
!14794 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !153, file: !153, line: 225, type: !14795, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14799)
!14795 = !DISubroutineType(types: !14796)
!14796 = !{!345, !14797}
!14797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14798, size: 32)
!14798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2306)
!14799 = !{!14800}
!14800 = !DILocalVariable(name: "node", arg: 1, scope: !14794, file: !153, line: 225, type: !14797)
!14801 = !DILocation(line: 0, scope: !14794)
!14802 = !DILocation(line: 227, column: 15, scope: !14794)
!14803 = !DILocation(line: 227, column: 20, scope: !14794)
!14804 = !DILocation(line: 227, column: 2, scope: !14794)
!14805 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !153, file: !153, line: 325, type: !14677, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14806)
!14806 = !{!14807, !14808}
!14807 = !DILocalVariable(name: "list", arg: 1, scope: !14805, file: !153, line: 325, type: !14588)
!14808 = !DILocalVariable(name: "node", arg: 2, scope: !14805, file: !153, line: 326, type: !2400)
!14809 = !DILocation(line: 0, scope: !14805)
!14810 = !DILocation(line: 328, column: 24, scope: !14805)
!14811 = !DILocation(line: 328, column: 15, scope: !14805)
!14812 = !DILocation(line: 328, column: 9, scope: !14805)
!14813 = !DILocation(line: 328, column: 45, scope: !14805)
!14814 = !DILocation(line: 328, column: 2, scope: !14805)
!14815 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !153, file: !153, line: 266, type: !14816, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14818)
!14816 = !DISubroutineType(types: !14817)
!14817 = !{!345, !14588}
!14818 = !{!14819}
!14819 = !DILocalVariable(name: "list", arg: 1, scope: !14815, file: !153, line: 266, type: !14588)
!14820 = !DILocation(line: 0, scope: !14815)
!14821 = !DILocation(line: 268, column: 15, scope: !14815)
!14822 = !DILocation(line: 268, column: 20, scope: !14815)
!14823 = !DILocation(line: 268, column: 2, scope: !14815)
!14824 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !153, file: !153, line: 496, type: !14825, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14827)
!14825 = !DISubroutineType(types: !14826)
!14826 = !{null, !2400}
!14827 = !{!14828, !14829, !14830}
!14828 = !DILocalVariable(name: "node", arg: 1, scope: !14824, file: !153, line: 496, type: !2400)
!14829 = !DILocalVariable(name: "prev", scope: !14824, file: !153, line: 498, type: !14665)
!14830 = !DILocalVariable(name: "next", scope: !14824, file: !153, line: 499, type: !14665)
!14831 = !DILocation(line: 0, scope: !14824)
!14832 = !DILocation(line: 498, column: 34, scope: !14824)
!14833 = !DILocation(line: 499, column: 34, scope: !14824)
!14834 = !DILocation(line: 501, column: 8, scope: !14824)
!14835 = !DILocation(line: 501, column: 13, scope: !14824)
!14836 = !DILocation(line: 502, column: 8, scope: !14824)
!14837 = !DILocation(line: 502, column: 13, scope: !14824)
!14838 = !DILocation(line: 503, column: 2, scope: !14824)
!14839 = !DILocation(line: 504, column: 1, scope: !14824)
!14840 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !14825, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14841)
!14841 = !{!14842}
!14842 = !DILocalVariable(name: "node", arg: 1, scope: !14840, file: !153, line: 211, type: !2400)
!14843 = !DILocation(line: 0, scope: !14840)
!14844 = !DILocation(line: 213, column: 8, scope: !14840)
!14845 = !DILocation(line: 213, column: 13, scope: !14840)
!14846 = !DILocation(line: 214, column: 8, scope: !14840)
!14847 = !DILocation(line: 214, column: 13, scope: !14840)
!14848 = !DILocation(line: 215, column: 1, scope: !14840)
!14849 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13524, file: !13524, line: 131, type: !14850, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14852)
!14850 = !DISubroutineType(types: !14851)
!14851 = !{!345, !2296, !118}
!14852 = !{!14853, !14854}
!14853 = !DILocalVariable(name: "thread", arg: 1, scope: !14849, file: !13524, line: 131, type: !2296)
!14854 = !DILocalVariable(name: "state", arg: 2, scope: !14849, file: !13524, line: 131, type: !118)
!14855 = !DILocation(line: 0, scope: !14849)
!14856 = !DILocation(line: 133, column: 23, scope: !14849)
!14857 = !DILocation(line: 133, column: 10, scope: !14849)
!14858 = !DILocation(line: 133, column: 36, scope: !14849)
!14859 = !DILocation(line: 133, column: 45, scope: !14849)
!14860 = !DILocation(line: 133, column: 2, scope: !14849)
!14861 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13524, file: !13524, line: 211, type: !14862, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14864)
!14862 = !DISubroutineType(types: !14863)
!14863 = !{!345, !119, !119}
!14864 = !{!14865, !14866}
!14865 = !DILocalVariable(name: "prio", arg: 1, scope: !14861, file: !13524, line: 211, type: !119)
!14866 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14861, file: !13524, line: 211, type: !119)
!14867 = !DILocation(line: 0, scope: !14861)
!14868 = !DILocation(line: 213, column: 9, scope: !14861)
!14869 = !DILocation(line: 213, column: 2, scope: !14861)
!14870 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13524, file: !13524, line: 206, type: !14862, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14871)
!14871 = !{!14872, !14873}
!14872 = !DILocalVariable(name: "prio1", arg: 1, scope: !14870, file: !13524, line: 206, type: !119)
!14873 = !DILocalVariable(name: "prio2", arg: 2, scope: !14870, file: !13524, line: 206, type: !119)
!14874 = !DILocation(line: 0, scope: !14870)
!14875 = !DILocation(line: 208, column: 15, scope: !14870)
!14876 = !DILocation(line: 208, column: 2, scope: !14870)
!14877 = distinct !DISubprogram(name: "z_ready_thread", scope: !2404, file: !2404, line: 635, type: !14320, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14878)
!14878 = !{!14879, !14880, !14882}
!14879 = !DILocalVariable(name: "thread", arg: 1, scope: !14877, file: !2404, line: 635, type: !2296)
!14880 = !DILocalVariable(name: "__i", scope: !14881, file: !2404, line: 637, type: !14354)
!14881 = distinct !DILexicalBlock(scope: !14877, file: !2404, line: 637, column: 2)
!14882 = !DILocalVariable(name: "__key", scope: !14881, file: !2404, line: 637, type: !14354)
!14883 = !DILocation(line: 0, scope: !14877)
!14884 = !DILocation(line: 0, scope: !14881)
!14885 = !DILocation(line: 0, scope: !14362, inlinedAt: !14886)
!14886 = distinct !DILocation(line: 637, column: 2, scope: !14881)
!14887 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !14888)
!14888 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !14886)
!14889 = !DILocation(line: 0, scope: !14371, inlinedAt: !14888)
!14890 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !14886)
!14891 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !14886)
!14892 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !14886)
!14893 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !14886)
!14894 = !DILocation(line: 639, column: 4, scope: !14895)
!14895 = distinct !DILexicalBlock(scope: !14896, file: !2404, line: 638, column: 41)
!14896 = distinct !DILexicalBlock(scope: !14897, file: !2404, line: 638, column: 7)
!14897 = distinct !DILexicalBlock(scope: !14898, file: !2404, line: 637, column: 26)
!14898 = distinct !DILexicalBlock(scope: !14881, file: !2404, line: 637, column: 2)
!14899 = !DILocation(line: 0, scope: !14396, inlinedAt: !14900)
!14900 = distinct !DILocation(line: 637, column: 2, scope: !14898)
!14901 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !14900)
!14902 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !14900)
!14903 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !14900)
!14904 = !DILocation(line: 0, scope: !14410, inlinedAt: !14905)
!14905 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !14900)
!14906 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !14905)
!14907 = !DILocation(line: 642, column: 1, scope: !14877)
!14908 = distinct !DISubprogram(name: "ready_thread", scope: !2404, file: !2404, line: 617, type: !14320, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14909)
!14909 = !{!14910}
!14910 = !DILocalVariable(name: "thread", arg: 1, scope: !14908, file: !2404, line: 617, type: !2296)
!14911 = !DILocation(line: 0, scope: !14908)
!14912 = !DILocation(line: 626, column: 7, scope: !14913)
!14913 = distinct !DILexicalBlock(scope: !14908, file: !2404, line: 626, column: 6)
!14914 = !DILocation(line: 626, column: 34, scope: !14913)
!14915 = !DILocation(line: 626, column: 37, scope: !14913)
!14916 = !DILocation(line: 626, column: 6, scope: !14908)
!14917 = !DILocation(line: 0, scope: !14571, inlinedAt: !14918)
!14918 = distinct !DILocation(line: 629, column: 3, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !14913, file: !2404, line: 626, column: 64)
!14920 = !DILocation(line: 252, column: 15, scope: !14571, inlinedAt: !14918)
!14921 = !DILocation(line: 252, column: 28, scope: !14571, inlinedAt: !14918)
!14922 = !DILocation(line: 0, scope: !14578, inlinedAt: !14923)
!14923 = distinct !DILocation(line: 254, column: 3, scope: !14582, inlinedAt: !14918)
!14924 = !DILocation(line: 0, scope: !14585, inlinedAt: !14925)
!14925 = distinct !DILocation(line: 229, column: 2, scope: !14578, inlinedAt: !14923)
!14926 = !DILocation(line: 186, column: 2, scope: !14595, inlinedAt: !14925)
!14927 = !DILocation(line: 186, column: 2, scope: !14596, inlinedAt: !14925)
!14928 = !DILocation(line: 186, column: 2, scope: !14599, inlinedAt: !14925)
!14929 = !DILocation(line: 188, column: 2, scope: !14601, inlinedAt: !14925)
!14930 = !DILocation(line: 188, column: 2, scope: !14603, inlinedAt: !14925)
!14931 = !DILocation(line: 0, scope: !14601, inlinedAt: !14925)
!14932 = !DILocation(line: 189, column: 7, scope: !14606, inlinedAt: !14925)
!14933 = !DILocation(line: 189, column: 35, scope: !14606, inlinedAt: !14925)
!14934 = !DILocation(line: 189, column: 7, scope: !14607, inlinedAt: !14925)
!14935 = !DILocation(line: 191, column: 21, scope: !14611, inlinedAt: !14925)
!14936 = !DILocation(line: 190, column: 4, scope: !14611, inlinedAt: !14925)
!14937 = !DILocation(line: 192, column: 4, scope: !14611, inlinedAt: !14925)
!14938 = distinct !{!14938, !14929, !14939}
!14939 = !DILocation(line: 194, column: 2, scope: !14601, inlinedAt: !14925)
!14940 = !DILocation(line: 196, column: 37, scope: !14585, inlinedAt: !14925)
!14941 = !DILocation(line: 196, column: 2, scope: !14585, inlinedAt: !14925)
!14942 = !DILocation(line: 197, column: 1, scope: !14585, inlinedAt: !14925)
!14943 = !DILocation(line: 630, column: 3, scope: !14919)
!14944 = !DILocation(line: 632, column: 2, scope: !14919)
!14945 = !DILocation(line: 633, column: 1, scope: !14908)
!14946 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13524, file: !13524, line: 120, type: !14503, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14947)
!14947 = !{!14948}
!14948 = !DILocalVariable(name: "thread", arg: 1, scope: !14946, file: !13524, line: 120, type: !2296)
!14949 = !DILocation(line: 0, scope: !14946)
!14950 = !DILocation(line: 122, column: 12, scope: !14946)
!14951 = !DILocation(line: 122, column: 62, scope: !14946)
!14952 = !DILocation(line: 123, column: 4, scope: !14946)
!14953 = !DILocation(line: 122, column: 2, scope: !14946)
!14954 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2404, file: !2404, line: 644, type: !14320, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14955)
!14955 = !{!14956, !14957, !14959}
!14956 = !DILocalVariable(name: "thread", arg: 1, scope: !14954, file: !2404, line: 644, type: !2296)
!14957 = !DILocalVariable(name: "__i", scope: !14958, file: !2404, line: 646, type: !14354)
!14958 = distinct !DILexicalBlock(scope: !14954, file: !2404, line: 646, column: 2)
!14959 = !DILocalVariable(name: "__key", scope: !14958, file: !2404, line: 646, type: !14354)
!14960 = !DILocation(line: 0, scope: !14954)
!14961 = !DILocation(line: 0, scope: !14958)
!14962 = !DILocation(line: 0, scope: !14362, inlinedAt: !14963)
!14963 = distinct !DILocation(line: 646, column: 2, scope: !14958)
!14964 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !14965)
!14965 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !14963)
!14966 = !DILocation(line: 0, scope: !14371, inlinedAt: !14965)
!14967 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !14963)
!14968 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !14963)
!14969 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !14963)
!14970 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !14963)
!14971 = !DILocation(line: 647, column: 3, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !14973, file: !2404, line: 646, column: 26)
!14973 = distinct !DILexicalBlock(scope: !14958, file: !2404, line: 646, column: 2)
!14974 = !DILocation(line: 0, scope: !14396, inlinedAt: !14975)
!14975 = distinct !DILocation(line: 646, column: 2, scope: !14973)
!14976 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !14975)
!14977 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !14975)
!14978 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !14975)
!14979 = !DILocation(line: 0, scope: !14410, inlinedAt: !14980)
!14980 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !14975)
!14981 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !14980)
!14982 = !DILocation(line: 649, column: 1, scope: !14954)
!14983 = distinct !DISubprogram(name: "z_sched_start", scope: !2404, file: !2404, line: 651, type: !14320, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !14984)
!14984 = !{!14985, !14986}
!14985 = !DILocalVariable(name: "thread", arg: 1, scope: !14983, file: !2404, line: 651, type: !2296)
!14986 = !DILocalVariable(name: "key", scope: !14983, file: !2404, line: 653, type: !14354)
!14987 = !DILocation(line: 0, scope: !14983)
!14988 = !DILocation(line: 0, scope: !14362, inlinedAt: !14989)
!14989 = distinct !DILocation(line: 653, column: 25, scope: !14983)
!14990 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !14991)
!14991 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !14989)
!14992 = !DILocation(line: 0, scope: !14371, inlinedAt: !14991)
!14993 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !14989)
!14994 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !14989)
!14995 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !14989)
!14996 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !14989)
!14997 = !DILocation(line: 655, column: 6, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !14983, file: !2404, line: 655, column: 6)
!14999 = !DILocation(line: 655, column: 6, scope: !14983)
!15000 = !DILocation(line: 0, scope: !14396, inlinedAt: !15001)
!15001 = distinct !DILocation(line: 656, column: 3, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !14998, file: !2404, line: 655, column: 36)
!15003 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15001)
!15004 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15001)
!15005 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15001)
!15006 = !DILocation(line: 0, scope: !14410, inlinedAt: !15007)
!15007 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15001)
!15008 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15007)
!15009 = !DILocation(line: 657, column: 3, scope: !15002)
!15010 = !DILocation(line: 660, column: 2, scope: !14983)
!15011 = !DILocation(line: 661, column: 2, scope: !14983)
!15012 = !DILocation(line: 662, column: 2, scope: !14983)
!15013 = !DILocation(line: 663, column: 1, scope: !14983)
!15014 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13524, file: !13524, line: 126, type: !14503, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15015)
!15015 = !{!15016}
!15016 = !DILocalVariable(name: "thread", arg: 1, scope: !15014, file: !13524, line: 126, type: !2296)
!15017 = !DILocation(line: 0, scope: !15014)
!15018 = !DILocation(line: 128, column: 23, scope: !15014)
!15019 = !DILocation(line: 128, column: 36, scope: !15014)
!15020 = !DILocation(line: 128, column: 56, scope: !15014)
!15021 = !DILocation(line: 128, column: 2, scope: !15014)
!15022 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13524, file: !13524, line: 155, type: !14320, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15023)
!15023 = !{!15024}
!15024 = !DILocalVariable(name: "thread", arg: 1, scope: !15022, file: !13524, line: 155, type: !2296)
!15025 = !DILocation(line: 0, scope: !15022)
!15026 = !DILocation(line: 157, column: 15, scope: !15022)
!15027 = !DILocation(line: 157, column: 28, scope: !15022)
!15028 = !DILocation(line: 158, column: 1, scope: !15022)
!15029 = distinct !DISubprogram(name: "z_reschedule", scope: !2404, file: !2404, line: 967, type: !14397, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15030)
!15030 = !{!15031, !15032}
!15031 = !DILocalVariable(name: "lock", arg: 1, scope: !15029, file: !2404, line: 967, type: !14365)
!15032 = !DILocalVariable(name: "key", arg: 2, scope: !15029, file: !2404, line: 967, type: !14354)
!15033 = !DILocation(line: 0, scope: !15029)
!15034 = !DILocation(line: 969, column: 6, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !15029, file: !2404, line: 969, column: 6)
!15036 = !DILocation(line: 969, column: 23, scope: !15035)
!15037 = !DILocation(line: 969, column: 26, scope: !15035)
!15038 = !DILocation(line: 969, column: 6, scope: !15029)
!15039 = !DILocalVariable(name: "key", arg: 2, scope: !15040, file: !13628, line: 193, type: !14354)
!15040 = distinct !DISubprogram(name: "z_swap", scope: !13628, file: !13628, line: 193, type: !15041, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15043)
!15041 = !DISubroutineType(types: !15042)
!15042 = !{!119, !14365, !14354}
!15043 = !{!15044, !15039}
!15044 = !DILocalVariable(name: "lock", arg: 1, scope: !15040, file: !13628, line: 193, type: !14365)
!15045 = !DILocation(line: 0, scope: !15040, inlinedAt: !15046)
!15046 = distinct !DILocation(line: 970, column: 3, scope: !15047)
!15047 = distinct !DILexicalBlock(scope: !15035, file: !2404, line: 969, column: 39)
!15048 = !DILocalVariable(name: "l", arg: 1, scope: !15049, file: !259, line: 221, type: !14365)
!15049 = distinct !DISubprogram(name: "k_spin_release", scope: !259, file: !259, line: 221, type: !15050, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15052)
!15050 = !DISubroutineType(types: !15051)
!15051 = !{null, !14365}
!15052 = !{!15048}
!15053 = !DILocation(line: 0, scope: !15049, inlinedAt: !15054)
!15054 = distinct !DILocation(line: 195, column: 2, scope: !15040, inlinedAt: !15046)
!15055 = !DILocation(line: 225, column: 2, scope: !15056, inlinedAt: !15054)
!15056 = distinct !DILexicalBlock(scope: !15057, file: !259, line: 225, column: 2)
!15057 = distinct !DILexicalBlock(scope: !15049, file: !259, line: 225, column: 2)
!15058 = !DILocation(line: 225, column: 2, scope: !15057, inlinedAt: !15054)
!15059 = !DILocation(line: 225, column: 2, scope: !15060, inlinedAt: !15054)
!15060 = distinct !DILexicalBlock(scope: !15056, file: !259, line: 225, column: 2)
!15061 = !DILocation(line: 196, column: 9, scope: !15040, inlinedAt: !15046)
!15062 = !DILocation(line: 971, column: 2, scope: !15047)
!15063 = !DILocation(line: 0, scope: !14396, inlinedAt: !15064)
!15064 = distinct !DILocation(line: 972, column: 3, scope: !15065)
!15065 = distinct !DILexicalBlock(scope: !15035, file: !2404, line: 971, column: 9)
!15066 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15064)
!15067 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15064)
!15068 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15064)
!15069 = !DILocation(line: 0, scope: !14410, inlinedAt: !15070)
!15070 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15064)
!15071 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15070)
!15072 = !DILocation(line: 975, column: 1, scope: !15029)
!15073 = distinct !DISubprogram(name: "resched", scope: !2404, file: !2404, line: 940, type: !15074, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15076)
!15074 = !DISubroutineType(types: !15075)
!15075 = !{!345, !118}
!15076 = !{!15077}
!15077 = !DILocalVariable(name: "key", arg: 1, scope: !15073, file: !2404, line: 940, type: !118)
!15078 = !DILocation(line: 0, scope: !15073)
!15079 = !DILocalVariable(name: "key", arg: 1, scope: !15080, file: !6058, line: 112, type: !32)
!15080 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6058, file: !6058, line: 112, type: !15081, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15083)
!15081 = !DISubroutineType(types: !15082)
!15082 = !{!345, !32}
!15083 = !{!15079}
!15084 = !DILocation(line: 0, scope: !15080, inlinedAt: !15085)
!15085 = distinct !DILocation(line: 946, column: 9, scope: !15073)
!15086 = !DILocation(line: 115, column: 13, scope: !15080, inlinedAt: !15085)
!15087 = !DILocation(line: 946, column: 32, scope: !15073)
!15088 = !DILocation(line: 1031, column: 3, scope: !15089, inlinedAt: !15092)
!15089 = distinct !DISubprogram(name: "__get_IPSR", scope: !6379, file: !6379, line: 1027, type: !3257, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15090)
!15090 = !{!15091}
!15091 = !DILocalVariable(name: "result", scope: !15089, file: !6379, line: 1029, type: !118)
!15092 = distinct !DILocation(line: 48, column: 10, scope: !15093, inlinedAt: !15094)
!15093 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7429, file: !7429, line: 46, type: !7430, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !2102)
!15094 = distinct !DILocation(line: 946, column: 36, scope: !15073)
!15095 = !{i64 3772518}
!15096 = !DILocation(line: 0, scope: !15089, inlinedAt: !15092)
!15097 = !DILocation(line: 48, column: 9, scope: !15093, inlinedAt: !15094)
!15098 = !DILocation(line: 946, column: 2, scope: !15073)
!15099 = distinct !DISubprogram(name: "need_swap", scope: !2404, file: !2404, line: 953, type: !7430, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15100)
!15100 = !{!15101}
!15101 = !DILocalVariable(name: "new_thread", scope: !15099, file: !2404, line: 959, type: !2296)
!15102 = !DILocation(line: 962, column: 31, scope: !15099)
!15103 = !DILocation(line: 0, scope: !15099)
!15104 = !DILocation(line: 963, column: 23, scope: !15099)
!15105 = !DILocation(line: 963, column: 20, scope: !15099)
!15106 = !DILocation(line: 963, column: 2, scope: !15099)
!15107 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13628, file: !13628, line: 181, type: !6389, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15108)
!15108 = !{!15109, !15110}
!15109 = !DILocalVariable(name: "key", arg: 1, scope: !15107, file: !13628, line: 181, type: !32)
!15110 = !DILocalVariable(name: "ret", scope: !15107, file: !13628, line: 183, type: !119)
!15111 = !DILocation(line: 0, scope: !15107)
!15112 = !DILocation(line: 185, column: 8, scope: !15107)
!15113 = !DILocation(line: 186, column: 2, scope: !15107)
!15114 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2404, file: !2404, line: 665, type: !14320, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15115)
!15115 = !{!15116, !15117, !15119}
!15116 = !DILocalVariable(name: "thread", arg: 1, scope: !15114, file: !2404, line: 665, type: !2296)
!15117 = !DILocalVariable(name: "__i", scope: !15118, file: !2404, line: 671, type: !14354)
!15118 = distinct !DILexicalBlock(scope: !15114, file: !2404, line: 671, column: 2)
!15119 = !DILocalVariable(name: "__key", scope: !15118, file: !2404, line: 671, type: !14354)
!15120 = !DILocation(line: 0, scope: !15114)
!15121 = !DILocation(line: 669, column: 8, scope: !15114)
!15122 = !DILocation(line: 0, scope: !15118)
!15123 = !DILocation(line: 0, scope: !14362, inlinedAt: !15124)
!15124 = distinct !DILocation(line: 671, column: 2, scope: !15118)
!15125 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15126)
!15126 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !15124)
!15127 = !DILocation(line: 0, scope: !14371, inlinedAt: !15126)
!15128 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !15124)
!15129 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !15124)
!15130 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !15124)
!15131 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !15124)
!15132 = !DILocation(line: 672, column: 7, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15134, file: !2404, line: 672, column: 7)
!15134 = distinct !DILexicalBlock(scope: !15135, file: !2404, line: 671, column: 26)
!15135 = distinct !DILexicalBlock(scope: !15118, file: !2404, line: 671, column: 2)
!15136 = !DILocation(line: 672, column: 7, scope: !15134)
!15137 = !DILocation(line: 0, scope: !14554, inlinedAt: !15138)
!15138 = distinct !DILocation(line: 673, column: 4, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15133, file: !2404, line: 672, column: 35)
!15140 = !DILocation(line: 266, column: 15, scope: !14554, inlinedAt: !15138)
!15141 = !DILocation(line: 266, column: 28, scope: !14554, inlinedAt: !15138)
!15142 = !DILocation(line: 0, scope: !14562, inlinedAt: !15143)
!15143 = distinct !DILocation(line: 268, column: 3, scope: !14566, inlinedAt: !15138)
!15144 = !DILocation(line: 234, column: 2, scope: !14562, inlinedAt: !15143)
!15145 = !DILocation(line: 674, column: 3, scope: !15139)
!15146 = !DILocation(line: 675, column: 3, scope: !15134)
!15147 = !DILocation(line: 676, column: 26, scope: !15134)
!15148 = !DILocation(line: 676, column: 23, scope: !15134)
!15149 = !DILocation(line: 676, column: 3, scope: !15134)
!15150 = !DILocation(line: 0, scope: !14396, inlinedAt: !15151)
!15151 = distinct !DILocation(line: 671, column: 2, scope: !15135)
!15152 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15151)
!15153 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15151)
!15154 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15151)
!15155 = !DILocation(line: 0, scope: !14410, inlinedAt: !15156)
!15156 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15151)
!15157 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15156)
!15158 = !DILocation(line: 679, column: 16, scope: !15159)
!15159 = distinct !DILexicalBlock(scope: !15114, file: !2404, line: 679, column: 6)
!15160 = !DILocation(line: 679, column: 13, scope: !15159)
!15161 = !DILocation(line: 679, column: 6, scope: !15114)
!15162 = !DILocation(line: 680, column: 3, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15159, file: !2404, line: 679, column: 26)
!15164 = !DILocation(line: 681, column: 2, scope: !15163)
!15165 = !DILocation(line: 684, column: 1, scope: !15114)
!15166 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13953, file: !13953, line: 52, type: !14338, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15167)
!15167 = !{!15168}
!15168 = !DILocalVariable(name: "thread", arg: 1, scope: !15166, file: !13953, line: 52, type: !2296)
!15169 = !DILocation(line: 0, scope: !15166)
!15170 = !DILocation(line: 54, column: 39, scope: !15166)
!15171 = !DILocation(line: 54, column: 9, scope: !15166)
!15172 = !DILocation(line: 54, column: 2, scope: !15166)
!15173 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13524, file: !13524, line: 141, type: !14320, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15174)
!15174 = !{!15175}
!15175 = !DILocalVariable(name: "thread", arg: 1, scope: !15173, file: !13524, line: 141, type: !2296)
!15176 = !DILocation(line: 0, scope: !15173)
!15177 = !DILocation(line: 143, column: 15, scope: !15173)
!15178 = !DILocation(line: 143, column: 28, scope: !15173)
!15179 = !DILocation(line: 146, column: 1, scope: !15173)
!15180 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13524, file: !13524, line: 73, type: !3019, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !2102)
!15181 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15182)
!15182 = distinct !DILocation(line: 75, column: 30, scope: !15180)
!15183 = !DILocation(line: 0, scope: !14371, inlinedAt: !15182)
!15184 = !DILocation(line: 75, column: 9, scope: !15180)
!15185 = !DILocation(line: 76, column: 1, scope: !15180)
!15186 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2404, file: !2404, line: 977, type: !6474, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15187)
!15187 = !{!15188}
!15188 = !DILocalVariable(name: "key", arg: 1, scope: !15186, file: !2404, line: 977, type: !118)
!15189 = !DILocation(line: 0, scope: !15186)
!15190 = !DILocation(line: 979, column: 6, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15186, file: !2404, line: 979, column: 6)
!15192 = !DILocation(line: 979, column: 6, scope: !15186)
!15193 = !DILocation(line: 980, column: 3, scope: !15194)
!15194 = distinct !DILexicalBlock(scope: !15191, file: !2404, line: 979, column: 20)
!15195 = !DILocation(line: 981, column: 2, scope: !15194)
!15196 = !DILocation(line: 0, scope: !14410, inlinedAt: !15197)
!15197 = distinct !DILocation(line: 982, column: 3, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15191, file: !2404, line: 981, column: 9)
!15199 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15197)
!15200 = !DILocation(line: 985, column: 1, scope: !15186)
!15201 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2404, file: !2404, line: 695, type: !14320, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15202)
!15202 = !{!15203, !15204}
!15203 = !DILocalVariable(name: "thread", arg: 1, scope: !15201, file: !2404, line: 695, type: !2296)
!15204 = !DILocalVariable(name: "key", scope: !15201, file: !2404, line: 699, type: !14354)
!15205 = !DILocation(line: 0, scope: !15201)
!15206 = !DILocation(line: 0, scope: !14362, inlinedAt: !15207)
!15207 = distinct !DILocation(line: 699, column: 25, scope: !15201)
!15208 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15209)
!15209 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !15207)
!15210 = !DILocation(line: 0, scope: !14371, inlinedAt: !15209)
!15211 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !15207)
!15212 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !15207)
!15213 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !15207)
!15214 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !15207)
!15215 = !DILocation(line: 702, column: 7, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15201, file: !2404, line: 702, column: 6)
!15217 = !DILocation(line: 702, column: 6, scope: !15201)
!15218 = !DILocation(line: 0, scope: !14396, inlinedAt: !15219)
!15219 = distinct !DILocation(line: 703, column: 3, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15216, file: !2404, line: 702, column: 38)
!15221 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15219)
!15222 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15219)
!15223 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15219)
!15224 = !DILocation(line: 0, scope: !14410, inlinedAt: !15225)
!15225 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15219)
!15226 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15225)
!15227 = !DILocation(line: 704, column: 3, scope: !15220)
!15228 = !DILocation(line: 707, column: 2, scope: !15201)
!15229 = !DILocation(line: 708, column: 2, scope: !15201)
!15230 = !DILocation(line: 710, column: 2, scope: !15201)
!15231 = !DILocation(line: 713, column: 1, scope: !15201)
!15232 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13524, file: !13524, line: 96, type: !14503, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15233)
!15233 = !{!15234}
!15234 = !DILocalVariable(name: "thread", arg: 1, scope: !15232, file: !13524, line: 96, type: !2296)
!15235 = !DILocation(line: 0, scope: !15232)
!15236 = !DILocation(line: 98, column: 23, scope: !15232)
!15237 = !DILocation(line: 98, column: 36, scope: !15232)
!15238 = !DILocation(line: 98, column: 57, scope: !15232)
!15239 = !DILocation(line: 98, column: 2, scope: !15232)
!15240 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13524, file: !13524, line: 148, type: !14320, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15241)
!15241 = !{!15242}
!15242 = !DILocalVariable(name: "thread", arg: 1, scope: !15240, file: !13524, line: 148, type: !2296)
!15243 = !DILocation(line: 0, scope: !15240)
!15244 = !DILocation(line: 150, column: 15, scope: !15240)
!15245 = !DILocation(line: 150, column: 28, scope: !15240)
!15246 = !DILocation(line: 153, column: 1, scope: !15240)
!15247 = distinct !DISubprogram(name: "z_pend_thread", scope: !2404, file: !2404, line: 770, type: !15248, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15254)
!15248 = !DISubroutineType(types: !15249)
!15249 = !{null, !2296, !2327, !15250}
!15250 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !15251)
!15251 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !15252)
!15252 = !{!15253}
!15253 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15251, file: !115, line: 66, baseType: !114, size: 64)
!15254 = !{!15255, !15256, !15257, !15258, !15260}
!15255 = !DILocalVariable(name: "thread", arg: 1, scope: !15247, file: !2404, line: 770, type: !2296)
!15256 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15247, file: !2404, line: 770, type: !2327)
!15257 = !DILocalVariable(name: "timeout", arg: 3, scope: !15247, file: !2404, line: 771, type: !15250)
!15258 = !DILocalVariable(name: "__i", scope: !15259, file: !2404, line: 774, type: !14354)
!15259 = distinct !DILexicalBlock(scope: !15247, file: !2404, line: 774, column: 2)
!15260 = !DILocalVariable(name: "__key", scope: !15259, file: !2404, line: 774, type: !14354)
!15261 = !DILocation(line: 0, scope: !15247)
!15262 = !DILocation(line: 773, column: 2, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15264, file: !2404, line: 773, column: 2)
!15264 = distinct !DILexicalBlock(scope: !15247, file: !2404, line: 773, column: 2)
!15265 = !DILocation(line: 773, column: 2, scope: !15264)
!15266 = !DILocation(line: 773, column: 2, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15263, file: !2404, line: 773, column: 2)
!15268 = !DILocation(line: 0, scope: !15259)
!15269 = !DILocation(line: 0, scope: !14362, inlinedAt: !15270)
!15270 = distinct !DILocation(line: 774, column: 2, scope: !15259)
!15271 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15272)
!15272 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !15270)
!15273 = !DILocation(line: 0, scope: !14371, inlinedAt: !15272)
!15274 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !15270)
!15275 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !15270)
!15276 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !15270)
!15277 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !15270)
!15278 = !DILocation(line: 775, column: 3, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15280, file: !2404, line: 774, column: 26)
!15280 = distinct !DILexicalBlock(scope: !15259, file: !2404, line: 774, column: 2)
!15281 = !DILocation(line: 0, scope: !14396, inlinedAt: !15282)
!15282 = distinct !DILocation(line: 774, column: 2, scope: !15280)
!15283 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15282)
!15284 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15282)
!15285 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15282)
!15286 = !DILocation(line: 0, scope: !14410, inlinedAt: !15287)
!15287 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15282)
!15288 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15287)
!15289 = !DILocation(line: 777, column: 1, scope: !15247)
!15290 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2404, file: !2404, line: 79, type: !14503, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15291)
!15291 = !{!15292}
!15292 = !DILocalVariable(name: "thread", arg: 1, scope: !15290, file: !2404, line: 79, type: !2296)
!15293 = !DILocation(line: 0, scope: !15290)
!15294 = !DILocation(line: 81, column: 23, scope: !15290)
!15295 = !DILocation(line: 81, column: 36, scope: !15290)
!15296 = !DILocation(line: 81, column: 53, scope: !15290)
!15297 = !DILocation(line: 81, column: 2, scope: !15290)
!15298 = distinct !DISubprogram(name: "pend_locked", scope: !2404, file: !2404, line: 760, type: !15248, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15299)
!15299 = !{!15300, !15301, !15302}
!15300 = !DILocalVariable(name: "thread", arg: 1, scope: !15298, file: !2404, line: 760, type: !2296)
!15301 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15298, file: !2404, line: 760, type: !2327)
!15302 = !DILocalVariable(name: "timeout", arg: 3, scope: !15298, file: !2404, line: 761, type: !15250)
!15303 = !DILocation(line: 0, scope: !15298)
!15304 = !DILocation(line: 766, column: 2, scope: !15298)
!15305 = !DILocation(line: 767, column: 2, scope: !15298)
!15306 = !DILocation(line: 768, column: 1, scope: !15298)
!15307 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2404, file: !2404, line: 740, type: !15308, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15310)
!15308 = !DISubroutineType(types: !15309)
!15309 = !{null, !2296, !2327}
!15310 = !{!15311, !15312}
!15311 = !DILocalVariable(name: "thread", arg: 1, scope: !15307, file: !2404, line: 740, type: !2296)
!15312 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15307, file: !2404, line: 740, type: !2327)
!15313 = !DILocation(line: 0, scope: !15307)
!15314 = !DILocation(line: 742, column: 2, scope: !15307)
!15315 = !DILocation(line: 743, column: 2, scope: !15307)
!15316 = !DILocation(line: 747, column: 13, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15307, file: !2404, line: 747, column: 6)
!15318 = !DILocation(line: 747, column: 6, scope: !15307)
!15319 = !DILocation(line: 748, column: 16, scope: !15320)
!15320 = distinct !DILexicalBlock(scope: !15317, file: !2404, line: 747, column: 22)
!15321 = !DILocation(line: 748, column: 26, scope: !15320)
!15322 = !DILocation(line: 749, column: 28, scope: !15320)
!15323 = !DILocation(line: 0, scope: !14585, inlinedAt: !15324)
!15324 = distinct !DILocation(line: 749, column: 3, scope: !15320)
!15325 = !DILocation(line: 186, column: 2, scope: !14595, inlinedAt: !15324)
!15326 = !DILocation(line: 186, column: 2, scope: !14596, inlinedAt: !15324)
!15327 = !DILocation(line: 186, column: 2, scope: !14599, inlinedAt: !15324)
!15328 = !DILocation(line: 188, column: 2, scope: !14601, inlinedAt: !15324)
!15329 = !DILocation(line: 188, column: 2, scope: !14603, inlinedAt: !15324)
!15330 = !DILocation(line: 0, scope: !14601, inlinedAt: !15324)
!15331 = !DILocation(line: 189, column: 7, scope: !14606, inlinedAt: !15324)
!15332 = !DILocation(line: 189, column: 35, scope: !14606, inlinedAt: !15324)
!15333 = !DILocation(line: 189, column: 7, scope: !14607, inlinedAt: !15324)
!15334 = !DILocation(line: 191, column: 21, scope: !14611, inlinedAt: !15324)
!15335 = !DILocation(line: 190, column: 4, scope: !14611, inlinedAt: !15324)
!15336 = !DILocation(line: 192, column: 4, scope: !14611, inlinedAt: !15324)
!15337 = distinct !{!15337, !15328, !15338}
!15338 = !DILocation(line: 194, column: 2, scope: !14601, inlinedAt: !15324)
!15339 = !DILocation(line: 196, column: 37, scope: !14585, inlinedAt: !15324)
!15340 = !DILocation(line: 196, column: 2, scope: !14585, inlinedAt: !15324)
!15341 = !DILocation(line: 197, column: 1, scope: !14585, inlinedAt: !15324)
!15342 = !DILocation(line: 751, column: 1, scope: !15307)
!15343 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2404, file: !2404, line: 753, type: !15344, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15346)
!15344 = !DISubroutineType(types: !15345)
!15345 = !{null, !2296, !15250}
!15346 = !{!15347, !15348}
!15347 = !DILocalVariable(name: "thread", arg: 1, scope: !15343, file: !2404, line: 753, type: !2296)
!15348 = !DILocalVariable(name: "timeout", arg: 2, scope: !15343, file: !2404, line: 753, type: !15250)
!15349 = !DILocation(line: 0, scope: !15343)
!15350 = !DILocation(line: 755, column: 7, scope: !15351)
!15351 = distinct !DILexicalBlock(scope: !15343, file: !2404, line: 755, column: 6)
!15352 = !DILocation(line: 755, column: 6, scope: !15343)
!15353 = !DILocation(line: 756, column: 3, scope: !15354)
!15354 = distinct !DILexicalBlock(scope: !15351, file: !2404, line: 755, column: 41)
!15355 = !DILocation(line: 757, column: 2, scope: !15354)
!15356 = !DILocation(line: 758, column: 1, scope: !15343)
!15357 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13953, file: !13953, line: 47, type: !15344, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15358)
!15358 = !{!15359, !15360}
!15359 = !DILocalVariable(name: "thread", arg: 1, scope: !15357, file: !13953, line: 47, type: !2296)
!15360 = !DILocalVariable(name: "ticks", arg: 2, scope: !15357, file: !13953, line: 47, type: !15250)
!15361 = !DILocation(line: 0, scope: !15357)
!15362 = !DILocation(line: 49, column: 30, scope: !15357)
!15363 = !DILocation(line: 49, column: 2, scope: !15357)
!15364 = !DILocation(line: 50, column: 1, scope: !15357)
!15365 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2404, file: !2404, line: 795, type: !2353, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15366)
!15366 = !{!15367, !15368, !15369, !15371, !15372}
!15367 = !DILocalVariable(name: "timeout", arg: 1, scope: !15365, file: !2404, line: 795, type: !2355)
!15368 = !DILocalVariable(name: "thread", scope: !15365, file: !2404, line: 797, type: !2296)
!15369 = !DILocalVariable(name: "__i", scope: !15370, file: !2404, line: 800, type: !14354)
!15370 = distinct !DILexicalBlock(scope: !15365, file: !2404, line: 800, column: 2)
!15371 = !DILocalVariable(name: "__key", scope: !15370, file: !2404, line: 800, type: !14354)
!15372 = !DILocalVariable(name: "killed", scope: !15373, file: !2404, line: 801, type: !345)
!15373 = distinct !DILexicalBlock(scope: !15374, file: !2404, line: 800, column: 26)
!15374 = distinct !DILexicalBlock(scope: !15370, file: !2404, line: 800, column: 2)
!15375 = !DILocation(line: 0, scope: !15365)
!15376 = !DILocation(line: 797, column: 28, scope: !15365)
!15377 = !DILocation(line: 0, scope: !15370)
!15378 = !DILocation(line: 0, scope: !14362, inlinedAt: !15379)
!15379 = distinct !DILocation(line: 800, column: 2, scope: !15370)
!15380 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15381)
!15381 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !15379)
!15382 = !DILocation(line: 0, scope: !14371, inlinedAt: !15381)
!15383 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !15379)
!15384 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !15379)
!15385 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !15379)
!15386 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !15379)
!15387 = !DILocation(line: 801, column: 27, scope: !15373)
!15388 = !DILocation(line: 801, column: 32, scope: !15373)
!15389 = !DILocation(line: 801, column: 61, scope: !15373)
!15390 = !DILocation(line: 0, scope: !15373)
!15391 = !DILocation(line: 804, column: 7, scope: !15373)
!15392 = !DILocation(line: 805, column: 21, scope: !15393)
!15393 = distinct !DILexicalBlock(scope: !15394, file: !2404, line: 805, column: 8)
!15394 = distinct !DILexicalBlock(scope: !15395, file: !2404, line: 804, column: 16)
!15395 = distinct !DILexicalBlock(scope: !15373, file: !2404, line: 804, column: 7)
!15396 = !DILocation(line: 805, column: 31, scope: !15393)
!15397 = !DILocation(line: 805, column: 8, scope: !15394)
!15398 = !DILocation(line: 806, column: 5, scope: !15399)
!15399 = distinct !DILexicalBlock(scope: !15393, file: !2404, line: 805, column: 40)
!15400 = !DILocation(line: 807, column: 4, scope: !15399)
!15401 = !DILocation(line: 808, column: 4, scope: !15394)
!15402 = !DILocation(line: 809, column: 4, scope: !15394)
!15403 = !DILocation(line: 810, column: 4, scope: !15394)
!15404 = !DILocation(line: 811, column: 3, scope: !15394)
!15405 = !DILocation(line: 0, scope: !14396, inlinedAt: !15406)
!15406 = distinct !DILocation(line: 800, column: 2, scope: !15374)
!15407 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15406)
!15408 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15406)
!15409 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15406)
!15410 = !DILocation(line: 0, scope: !14410, inlinedAt: !15411)
!15411 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15406)
!15412 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15411)
!15413 = !DILocation(line: 813, column: 1, scope: !15365)
!15414 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2404, file: !2404, line: 779, type: !14320, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15415)
!15415 = !{!15416}
!15416 = !DILocalVariable(name: "thread", arg: 1, scope: !15414, file: !2404, line: 779, type: !2296)
!15417 = !DILocation(line: 0, scope: !15414)
!15418 = !DILocation(line: 781, column: 21, scope: !15414)
!15419 = !DILocation(line: 781, column: 2, scope: !15414)
!15420 = !DILocation(line: 782, column: 2, scope: !15414)
!15421 = !DILocation(line: 783, column: 15, scope: !15414)
!15422 = !DILocation(line: 783, column: 25, scope: !15414)
!15423 = !DILocation(line: 784, column: 1, scope: !15414)
!15424 = distinct !DISubprogram(name: "pended_on_thread", scope: !2404, file: !2404, line: 724, type: !15425, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15427)
!15425 = !DISubroutineType(types: !15426)
!15426 = !{!2327, !2296}
!15427 = !{!15428}
!15428 = !DILocalVariable(name: "thread", arg: 1, scope: !15424, file: !2404, line: 724, type: !2296)
!15429 = !DILocation(line: 0, scope: !15424)
!15430 = !DILocation(line: 726, column: 2, scope: !15431)
!15431 = distinct !DILexicalBlock(scope: !15432, file: !2404, line: 726, column: 2)
!15432 = distinct !DILexicalBlock(scope: !15424, file: !2404, line: 726, column: 2)
!15433 = !DILocation(line: 726, column: 2, scope: !15432)
!15434 = !DILocation(line: 726, column: 2, scope: !15435)
!15435 = distinct !DILexicalBlock(scope: !15431, file: !2404, line: 726, column: 2)
!15436 = !DILocation(line: 728, column: 2, scope: !15424)
!15437 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13524, file: !13524, line: 165, type: !14320, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15438)
!15438 = !{!15439}
!15439 = !DILocalVariable(name: "thread", arg: 1, scope: !15437, file: !13524, line: 165, type: !2296)
!15440 = !DILocation(line: 0, scope: !15437)
!15441 = !DILocation(line: 167, column: 15, scope: !15437)
!15442 = !DILocation(line: 167, column: 28, scope: !15437)
!15443 = !DILocation(line: 168, column: 1, scope: !15437)
!15444 = distinct !DISubprogram(name: "unready_thread", scope: !2404, file: !2404, line: 731, type: !14320, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15445)
!15445 = !{!15446}
!15446 = !DILocalVariable(name: "thread", arg: 1, scope: !15444, file: !2404, line: 731, type: !2296)
!15447 = !DILocation(line: 0, scope: !15444)
!15448 = !DILocation(line: 733, column: 6, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15444, file: !2404, line: 733, column: 6)
!15450 = !DILocation(line: 733, column: 6, scope: !15444)
!15451 = !DILocation(line: 0, scope: !14554, inlinedAt: !15452)
!15452 = distinct !DILocation(line: 734, column: 3, scope: !15453)
!15453 = distinct !DILexicalBlock(scope: !15449, file: !2404, line: 733, column: 34)
!15454 = !DILocation(line: 266, column: 15, scope: !14554, inlinedAt: !15452)
!15455 = !DILocation(line: 266, column: 28, scope: !14554, inlinedAt: !15452)
!15456 = !DILocation(line: 0, scope: !14562, inlinedAt: !15457)
!15457 = distinct !DILocation(line: 268, column: 3, scope: !14566, inlinedAt: !15452)
!15458 = !DILocation(line: 234, column: 2, scope: !14562, inlinedAt: !15457)
!15459 = !DILocation(line: 735, column: 2, scope: !15453)
!15460 = !DILocation(line: 736, column: 25, scope: !15444)
!15461 = !DILocation(line: 736, column: 22, scope: !15444)
!15462 = !DILocation(line: 736, column: 2, scope: !15444)
!15463 = !DILocation(line: 737, column: 1, scope: !15444)
!15464 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13524, file: !13524, line: 160, type: !14320, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15465)
!15465 = !{!15466}
!15466 = !DILocalVariable(name: "thread", arg: 1, scope: !15464, file: !13524, line: 160, type: !2296)
!15467 = !DILocation(line: 0, scope: !15464)
!15468 = !DILocation(line: 162, column: 15, scope: !15464)
!15469 = !DILocation(line: 162, column: 28, scope: !15464)
!15470 = !DILocation(line: 163, column: 1, scope: !15464)
!15471 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2404, file: !2404, line: 786, type: !14320, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15472)
!15472 = !{!15473, !15474, !15476}
!15473 = !DILocalVariable(name: "thread", arg: 1, scope: !15471, file: !2404, line: 786, type: !2296)
!15474 = !DILocalVariable(name: "__i", scope: !15475, file: !2404, line: 788, type: !14354)
!15475 = distinct !DILexicalBlock(scope: !15471, file: !2404, line: 788, column: 2)
!15476 = !DILocalVariable(name: "__key", scope: !15475, file: !2404, line: 788, type: !14354)
!15477 = !DILocation(line: 0, scope: !15471)
!15478 = !DILocation(line: 0, scope: !15475)
!15479 = !DILocation(line: 0, scope: !14362, inlinedAt: !15480)
!15480 = distinct !DILocation(line: 788, column: 2, scope: !15475)
!15481 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !15480)
!15483 = !DILocation(line: 0, scope: !14371, inlinedAt: !15482)
!15484 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !15480)
!15485 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !15480)
!15486 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !15480)
!15487 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !15480)
!15488 = !DILocation(line: 789, column: 3, scope: !15489)
!15489 = distinct !DILexicalBlock(scope: !15490, file: !2404, line: 788, column: 26)
!15490 = distinct !DILexicalBlock(scope: !15475, file: !2404, line: 788, column: 2)
!15491 = !DILocation(line: 0, scope: !14396, inlinedAt: !15492)
!15492 = distinct !DILocation(line: 788, column: 2, scope: !15490)
!15493 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15492)
!15494 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15492)
!15495 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15492)
!15496 = !DILocation(line: 0, scope: !14410, inlinedAt: !15497)
!15497 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15492)
!15498 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15497)
!15499 = !DILocation(line: 791, column: 1, scope: !15471)
!15500 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2404, file: !2404, line: 816, type: !15501, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15503)
!15501 = !DISubroutineType(types: !15502)
!15502 = !{!119, !118, !2327, !15250}
!15503 = !{!15504, !15505, !15506, !15507, !15508, !15510}
!15504 = !DILocalVariable(name: "key", arg: 1, scope: !15500, file: !2404, line: 816, type: !118)
!15505 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15500, file: !2404, line: 816, type: !2327)
!15506 = !DILocalVariable(name: "timeout", arg: 3, scope: !15500, file: !2404, line: 816, type: !15250)
!15507 = !DILocalVariable(name: "ret", scope: !15500, file: !2404, line: 828, type: !119)
!15508 = !DILocalVariable(name: "__i", scope: !15509, file: !2404, line: 829, type: !14354)
!15509 = distinct !DILexicalBlock(scope: !15500, file: !2404, line: 829, column: 2)
!15510 = !DILocalVariable(name: "__key", scope: !15509, file: !2404, line: 829, type: !14354)
!15511 = !DILocation(line: 0, scope: !15500)
!15512 = !DILocation(line: 823, column: 14, scope: !15500)
!15513 = !DILocation(line: 823, column: 2, scope: !15500)
!15514 = !DILocation(line: 826, column: 20, scope: !15500)
!15515 = !DILocation(line: 826, column: 18, scope: !15500)
!15516 = !DILocation(line: 828, column: 12, scope: !15500)
!15517 = !DILocation(line: 0, scope: !15509)
!15518 = !DILocation(line: 0, scope: !14362, inlinedAt: !15519)
!15519 = distinct !DILocation(line: 829, column: 2, scope: !15509)
!15520 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15521)
!15521 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !15519)
!15522 = !DILocation(line: 0, scope: !14371, inlinedAt: !15521)
!15523 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !15519)
!15524 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !15519)
!15525 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !15519)
!15526 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !15519)
!15527 = !DILocation(line: 830, column: 7, scope: !15528)
!15528 = distinct !DILexicalBlock(scope: !15529, file: !2404, line: 830, column: 7)
!15529 = distinct !DILexicalBlock(scope: !15530, file: !2404, line: 829, column: 26)
!15530 = distinct !DILexicalBlock(scope: !15509, file: !2404, line: 829, column: 2)
!15531 = !DILocation(line: 830, column: 26, scope: !15528)
!15532 = !DILocation(line: 830, column: 23, scope: !15528)
!15533 = !DILocation(line: 830, column: 7, scope: !15529)
!15534 = !DILocation(line: 831, column: 20, scope: !15535)
!15535 = distinct !DILexicalBlock(scope: !15528, file: !2404, line: 830, column: 36)
!15536 = !DILocation(line: 832, column: 3, scope: !15535)
!15537 = !DILocation(line: 0, scope: !14396, inlinedAt: !15538)
!15538 = distinct !DILocation(line: 829, column: 2, scope: !15530)
!15539 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15538)
!15540 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15538)
!15541 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15538)
!15542 = !DILocation(line: 0, scope: !14410, inlinedAt: !15543)
!15543 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15538)
!15544 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15543)
!15545 = !DILocation(line: 834, column: 2, scope: !15500)
!15546 = distinct !DISubprogram(name: "z_pend_curr", scope: !2404, file: !2404, line: 840, type: !15547, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15549)
!15547 = !DISubroutineType(types: !15548)
!15548 = !{!119, !14365, !14354, !2327, !15250}
!15549 = !{!15550, !15551, !15552, !15553}
!15550 = !DILocalVariable(name: "lock", arg: 1, scope: !15546, file: !2404, line: 840, type: !14365)
!15551 = !DILocalVariable(name: "key", arg: 2, scope: !15546, file: !2404, line: 840, type: !14354)
!15552 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15546, file: !2404, line: 841, type: !2327)
!15553 = !DILocalVariable(name: "timeout", arg: 4, scope: !15546, file: !2404, line: 841, type: !15250)
!15554 = !DILocation(line: 0, scope: !15546)
!15555 = !DILocation(line: 844, column: 20, scope: !15546)
!15556 = !DILocation(line: 844, column: 18, scope: !15546)
!15557 = !DILocation(line: 846, column: 2, scope: !15558)
!15558 = distinct !DILexicalBlock(scope: !15559, file: !2404, line: 846, column: 2)
!15559 = distinct !DILexicalBlock(scope: !15546, file: !2404, line: 846, column: 2)
!15560 = !DILocation(line: 846, column: 2, scope: !15559)
!15561 = !DILocation(line: 846, column: 2, scope: !15562)
!15562 = distinct !DILexicalBlock(scope: !15558, file: !2404, line: 846, column: 2)
!15563 = !DILocation(line: 0, scope: !14362, inlinedAt: !15564)
!15564 = distinct !DILocation(line: 856, column: 9, scope: !15546)
!15565 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15566)
!15566 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !15564)
!15567 = !DILocation(line: 0, scope: !14371, inlinedAt: !15566)
!15568 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !15564)
!15569 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !15564)
!15570 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !15564)
!15571 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !15564)
!15572 = !DILocation(line: 857, column: 14, scope: !15546)
!15573 = !DILocation(line: 857, column: 2, scope: !15546)
!15574 = !DILocation(line: 0, scope: !15049, inlinedAt: !15575)
!15575 = distinct !DILocation(line: 858, column: 2, scope: !15546)
!15576 = !DILocation(line: 225, column: 2, scope: !15056, inlinedAt: !15575)
!15577 = !DILocation(line: 225, column: 2, scope: !15057, inlinedAt: !15575)
!15578 = !DILocation(line: 225, column: 2, scope: !15060, inlinedAt: !15575)
!15579 = !DILocation(line: 0, scope: !15040, inlinedAt: !15580)
!15580 = distinct !DILocation(line: 859, column: 9, scope: !15546)
!15581 = !DILocation(line: 0, scope: !15049, inlinedAt: !15582)
!15582 = distinct !DILocation(line: 195, column: 2, scope: !15040, inlinedAt: !15580)
!15583 = !DILocation(line: 225, column: 2, scope: !15056, inlinedAt: !15582)
!15584 = !DILocation(line: 225, column: 2, scope: !15057, inlinedAt: !15582)
!15585 = !DILocation(line: 225, column: 2, scope: !15060, inlinedAt: !15582)
!15586 = !DILocation(line: 196, column: 9, scope: !15040, inlinedAt: !15580)
!15587 = !DILocation(line: 859, column: 2, scope: !15546)
!15588 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2404, file: !2404, line: 862, type: !15589, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15591)
!15589 = !DISubroutineType(types: !15590)
!15590 = !{!2296, !2327}
!15591 = !{!15592, !15593, !15594, !15596}
!15592 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15588, file: !2404, line: 862, type: !2327)
!15593 = !DILocalVariable(name: "thread", scope: !15588, file: !2404, line: 864, type: !2296)
!15594 = !DILocalVariable(name: "__i", scope: !15595, file: !2404, line: 866, type: !14354)
!15595 = distinct !DILexicalBlock(scope: !15588, file: !2404, line: 866, column: 2)
!15596 = !DILocalVariable(name: "__key", scope: !15595, file: !2404, line: 866, type: !14354)
!15597 = !DILocation(line: 0, scope: !15588)
!15598 = !DILocation(line: 0, scope: !15595)
!15599 = !DILocation(line: 0, scope: !14362, inlinedAt: !15600)
!15600 = distinct !DILocation(line: 866, column: 2, scope: !15595)
!15601 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15602)
!15602 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !15600)
!15603 = !DILocation(line: 0, scope: !14371, inlinedAt: !15602)
!15604 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !15600)
!15605 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !15600)
!15606 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !15600)
!15607 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !15600)
!15608 = !DILocation(line: 867, column: 12, scope: !15609)
!15609 = distinct !DILexicalBlock(scope: !15610, file: !2404, line: 866, column: 26)
!15610 = distinct !DILexicalBlock(scope: !15595, file: !2404, line: 866, column: 2)
!15611 = !DILocation(line: 869, column: 14, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !15609, file: !2404, line: 869, column: 7)
!15613 = !DILocation(line: 869, column: 7, scope: !15609)
!15614 = !DILocation(line: 870, column: 4, scope: !15615)
!15615 = distinct !DILexicalBlock(scope: !15612, file: !2404, line: 869, column: 23)
!15616 = !DILocation(line: 871, column: 3, scope: !15615)
!15617 = !DILocation(line: 0, scope: !14396, inlinedAt: !15618)
!15618 = distinct !DILocation(line: 866, column: 2, scope: !15610)
!15619 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15618)
!15620 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15618)
!15621 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15618)
!15622 = !DILocation(line: 0, scope: !14410, inlinedAt: !15623)
!15623 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15618)
!15624 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15623)
!15625 = !DILocation(line: 874, column: 2, scope: !15588)
!15626 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2404, file: !2404, line: 877, type: !15589, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15627)
!15627 = !{!15628, !15629, !15630, !15632}
!15628 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15626, file: !2404, line: 877, type: !2327)
!15629 = !DILocalVariable(name: "thread", scope: !15626, file: !2404, line: 879, type: !2296)
!15630 = !DILocalVariable(name: "__i", scope: !15631, file: !2404, line: 881, type: !14354)
!15631 = distinct !DILexicalBlock(scope: !15626, file: !2404, line: 881, column: 2)
!15632 = !DILocalVariable(name: "__key", scope: !15631, file: !2404, line: 881, type: !14354)
!15633 = !DILocation(line: 0, scope: !15626)
!15634 = !DILocation(line: 0, scope: !15631)
!15635 = !DILocation(line: 0, scope: !14362, inlinedAt: !15636)
!15636 = distinct !DILocation(line: 881, column: 2, scope: !15631)
!15637 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15638)
!15638 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !15636)
!15639 = !DILocation(line: 0, scope: !14371, inlinedAt: !15638)
!15640 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !15636)
!15641 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !15636)
!15642 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !15636)
!15643 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !15636)
!15644 = !DILocation(line: 882, column: 12, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15646, file: !2404, line: 881, column: 26)
!15646 = distinct !DILexicalBlock(scope: !15631, file: !2404, line: 881, column: 2)
!15647 = !DILocation(line: 884, column: 14, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15645, file: !2404, line: 884, column: 7)
!15649 = !DILocation(line: 884, column: 7, scope: !15645)
!15650 = !DILocation(line: 885, column: 4, scope: !15651)
!15651 = distinct !DILexicalBlock(scope: !15648, file: !2404, line: 884, column: 23)
!15652 = !DILocation(line: 886, column: 10, scope: !15651)
!15653 = !DILocation(line: 887, column: 3, scope: !15651)
!15654 = !DILocation(line: 0, scope: !14396, inlinedAt: !15655)
!15655 = distinct !DILocation(line: 881, column: 2, scope: !15646)
!15656 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15655)
!15657 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15655)
!15658 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15655)
!15659 = !DILocation(line: 0, scope: !14410, inlinedAt: !15660)
!15660 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15655)
!15661 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15660)
!15662 = !DILocation(line: 890, column: 2, scope: !15626)
!15663 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2404, file: !2404, line: 893, type: !14320, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15664)
!15664 = !{!15665}
!15665 = !DILocalVariable(name: "thread", arg: 1, scope: !15663, file: !2404, line: 893, type: !2296)
!15666 = !DILocation(line: 0, scope: !15663)
!15667 = !DILocation(line: 0, scope: !15471, inlinedAt: !15668)
!15668 = distinct !DILocation(line: 895, column: 2, scope: !15663)
!15669 = !DILocation(line: 0, scope: !15475, inlinedAt: !15668)
!15670 = !DILocation(line: 0, scope: !14362, inlinedAt: !15671)
!15671 = distinct !DILocation(line: 788, column: 2, scope: !15475, inlinedAt: !15668)
!15672 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15673)
!15673 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !15671)
!15674 = !DILocation(line: 0, scope: !14371, inlinedAt: !15673)
!15675 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !15671)
!15676 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !15671)
!15677 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !15671)
!15678 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !15671)
!15679 = !DILocation(line: 789, column: 3, scope: !15489, inlinedAt: !15668)
!15680 = !DILocation(line: 0, scope: !14396, inlinedAt: !15681)
!15681 = distinct !DILocation(line: 788, column: 2, scope: !15490, inlinedAt: !15668)
!15682 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15681)
!15683 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15681)
!15684 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15681)
!15685 = !DILocation(line: 0, scope: !14410, inlinedAt: !15686)
!15686 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15681)
!15687 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15686)
!15688 = !DILocation(line: 896, column: 8, scope: !15663)
!15689 = !DILocation(line: 897, column: 1, scope: !15663)
!15690 = distinct !DISubprogram(name: "z_set_prio", scope: !2404, file: !2404, line: 902, type: !14723, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15691)
!15691 = !{!15692, !15693, !15694, !15695, !15697}
!15692 = !DILocalVariable(name: "thread", arg: 1, scope: !15690, file: !2404, line: 902, type: !2296)
!15693 = !DILocalVariable(name: "prio", arg: 2, scope: !15690, file: !2404, line: 902, type: !119)
!15694 = !DILocalVariable(name: "need_sched", scope: !15690, file: !2404, line: 904, type: !345)
!15695 = !DILocalVariable(name: "__i", scope: !15696, file: !2404, line: 906, type: !14354)
!15696 = distinct !DILexicalBlock(scope: !15690, file: !2404, line: 906, column: 2)
!15697 = !DILocalVariable(name: "__key", scope: !15696, file: !2404, line: 906, type: !14354)
!15698 = !DILocation(line: 0, scope: !15690)
!15699 = !DILocation(line: 0, scope: !15696)
!15700 = !DILocation(line: 0, scope: !14362, inlinedAt: !15701)
!15701 = distinct !DILocation(line: 906, column: 2, scope: !15696)
!15702 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15703)
!15703 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !15701)
!15704 = !DILocation(line: 0, scope: !14371, inlinedAt: !15703)
!15705 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !15701)
!15706 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !15701)
!15707 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !15701)
!15708 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !15701)
!15709 = !DILocation(line: 907, column: 16, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15711, file: !2404, line: 906, column: 26)
!15711 = distinct !DILexicalBlock(scope: !15696, file: !2404, line: 906, column: 2)
!15712 = !DILocation(line: 909, column: 7, scope: !15710)
!15713 = !DILocation(line: 0, scope: !14554, inlinedAt: !15714)
!15714 = distinct !DILocation(line: 912, column: 5, scope: !15715)
!15715 = distinct !DILexicalBlock(scope: !15716, file: !2404, line: 911, column: 63)
!15716 = distinct !DILexicalBlock(scope: !15717, file: !2404, line: 911, column: 8)
!15717 = distinct !DILexicalBlock(scope: !15718, file: !2404, line: 909, column: 19)
!15718 = distinct !DILexicalBlock(scope: !15710, file: !2404, line: 909, column: 7)
!15719 = !DILocation(line: 266, column: 28, scope: !14554, inlinedAt: !15714)
!15720 = !DILocation(line: 0, scope: !14562, inlinedAt: !15721)
!15721 = distinct !DILocation(line: 268, column: 3, scope: !14566, inlinedAt: !15714)
!15722 = !DILocation(line: 234, column: 2, scope: !14562, inlinedAt: !15721)
!15723 = !DILocation(line: 913, column: 23, scope: !15715)
!15724 = !DILocation(line: 0, scope: !14571, inlinedAt: !15725)
!15725 = distinct !DILocation(line: 914, column: 5, scope: !15715)
!15726 = !DILocation(line: 252, column: 28, scope: !14571, inlinedAt: !15725)
!15727 = !DILocation(line: 0, scope: !14578, inlinedAt: !15728)
!15728 = distinct !DILocation(line: 254, column: 3, scope: !14582, inlinedAt: !15725)
!15729 = !DILocation(line: 0, scope: !14585, inlinedAt: !15730)
!15730 = distinct !DILocation(line: 229, column: 2, scope: !14578, inlinedAt: !15728)
!15731 = !DILocation(line: 186, column: 2, scope: !14595, inlinedAt: !15730)
!15732 = !DILocation(line: 186, column: 2, scope: !14596, inlinedAt: !15730)
!15733 = !DILocation(line: 186, column: 2, scope: !14599, inlinedAt: !15730)
!15734 = !DILocation(line: 188, column: 2, scope: !14601, inlinedAt: !15730)
!15735 = !DILocation(line: 188, column: 2, scope: !14603, inlinedAt: !15730)
!15736 = !DILocation(line: 0, scope: !14601, inlinedAt: !15730)
!15737 = !DILocation(line: 189, column: 7, scope: !14606, inlinedAt: !15730)
!15738 = !DILocation(line: 189, column: 35, scope: !14606, inlinedAt: !15730)
!15739 = !DILocation(line: 189, column: 7, scope: !14607, inlinedAt: !15730)
!15740 = !DILocation(line: 190, column: 4, scope: !14611, inlinedAt: !15730)
!15741 = !DILocation(line: 192, column: 4, scope: !14611, inlinedAt: !15730)
!15742 = distinct !{!15742, !15734, !15743}
!15743 = !DILocation(line: 194, column: 2, scope: !14601, inlinedAt: !15730)
!15744 = !DILocation(line: 196, column: 2, scope: !14585, inlinedAt: !15730)
!15745 = !DILocation(line: 197, column: 1, scope: !14585, inlinedAt: !15730)
!15746 = !DILocation(line: 918, column: 4, scope: !15717)
!15747 = !DILocation(line: 919, column: 3, scope: !15717)
!15748 = !DILocation(line: 920, column: 22, scope: !15749)
!15749 = distinct !DILexicalBlock(scope: !15718, file: !2404, line: 919, column: 10)
!15750 = !DILocation(line: 0, scope: !14396, inlinedAt: !15751)
!15751 = distinct !DILocation(line: 906, column: 2, scope: !15711)
!15752 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15751)
!15753 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15751)
!15754 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15751)
!15755 = !DILocation(line: 0, scope: !14410, inlinedAt: !15756)
!15756 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15751)
!15757 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15756)
!15758 = !DILocation(line: 926, column: 2, scope: !15690)
!15759 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2404, file: !2404, line: 929, type: !15760, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15762)
!15760 = !DISubroutineType(types: !15761)
!15761 = !{null, !2296, !119}
!15762 = !{!15763, !15764, !15765}
!15763 = !DILocalVariable(name: "thread", arg: 1, scope: !15759, file: !2404, line: 929, type: !2296)
!15764 = !DILocalVariable(name: "prio", arg: 2, scope: !15759, file: !2404, line: 929, type: !119)
!15765 = !DILocalVariable(name: "need_sched", scope: !15759, file: !2404, line: 931, type: !345)
!15766 = !DILocation(line: 0, scope: !15759)
!15767 = !DILocation(line: 931, column: 20, scope: !15759)
!15768 = !DILocation(line: 935, column: 17, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15759, file: !2404, line: 935, column: 6)
!15770 = !DILocation(line: 935, column: 20, scope: !15769)
!15771 = !DILocation(line: 935, column: 35, scope: !15769)
!15772 = !DILocation(line: 935, column: 48, scope: !15769)
!15773 = !DILocation(line: 935, column: 6, scope: !15759)
!15774 = !DILocation(line: 936, column: 3, scope: !15775)
!15775 = distinct !DILexicalBlock(scope: !15769, file: !2404, line: 935, column: 55)
!15776 = !DILocation(line: 937, column: 2, scope: !15775)
!15777 = !DILocation(line: 938, column: 1, scope: !15759)
!15778 = distinct !DISubprogram(name: "k_sched_lock", scope: !2404, file: !2404, line: 987, type: !3019, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15779)
!15779 = !{!15780, !15782}
!15780 = !DILocalVariable(name: "__i", scope: !15781, file: !2404, line: 989, type: !14354)
!15781 = distinct !DILexicalBlock(scope: !15778, file: !2404, line: 989, column: 2)
!15782 = !DILocalVariable(name: "__key", scope: !15781, file: !2404, line: 989, type: !14354)
!15783 = !DILocation(line: 0, scope: !15781)
!15784 = !DILocation(line: 0, scope: !14362, inlinedAt: !15785)
!15785 = distinct !DILocation(line: 989, column: 2, scope: !15781)
!15786 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15787)
!15787 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !15785)
!15788 = !DILocation(line: 0, scope: !14371, inlinedAt: !15787)
!15789 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !15785)
!15790 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !15785)
!15791 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !15785)
!15792 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !15785)
!15793 = !DILocation(line: 992, column: 3, scope: !15794)
!15794 = distinct !DILexicalBlock(scope: !15795, file: !2404, line: 989, column: 26)
!15795 = distinct !DILexicalBlock(scope: !15781, file: !2404, line: 989, column: 2)
!15796 = !DILocation(line: 0, scope: !14396, inlinedAt: !15797)
!15797 = distinct !DILocation(line: 989, column: 2, scope: !15795)
!15798 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15797)
!15799 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15797)
!15800 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15797)
!15801 = !DILocation(line: 0, scope: !14410, inlinedAt: !15802)
!15802 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15797)
!15803 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15802)
!15804 = !DILocation(line: 994, column: 1, scope: !15778)
!15805 = distinct !DISubprogram(name: "z_sched_lock", scope: !13524, file: !13524, line: 251, type: !3019, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !2102)
!15806 = !DILocation(line: 1031, column: 3, scope: !15089, inlinedAt: !15807)
!15807 = distinct !DILocation(line: 48, column: 10, scope: !15093, inlinedAt: !15808)
!15808 = distinct !DILocation(line: 253, column: 2, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15810, file: !13524, line: 253, column: 2)
!15810 = distinct !DILexicalBlock(scope: !15805, file: !13524, line: 253, column: 2)
!15811 = !DILocation(line: 0, scope: !15089, inlinedAt: !15807)
!15812 = !DILocation(line: 48, column: 9, scope: !15093, inlinedAt: !15808)
!15813 = !DILocation(line: 253, column: 2, scope: !15810)
!15814 = !DILocation(line: 253, column: 2, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15809, file: !13524, line: 253, column: 2)
!15816 = !DILocation(line: 254, column: 2, scope: !15817)
!15817 = distinct !DILexicalBlock(scope: !15818, file: !13524, line: 254, column: 2)
!15818 = distinct !DILexicalBlock(scope: !15805, file: !13524, line: 254, column: 2)
!15819 = !DILocation(line: 254, column: 2, scope: !15818)
!15820 = !DILocation(line: 254, column: 2, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15817, file: !13524, line: 254, column: 2)
!15822 = !DILocation(line: 256, column: 2, scope: !15805)
!15823 = !DILocation(line: 258, column: 2, scope: !15824)
!15824 = distinct !DILexicalBlock(scope: !15805, file: !13524, line: 258, column: 2)
!15825 = !{i64 2155196566}
!15826 = !DILocation(line: 259, column: 1, scope: !15805)
!15827 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2404, file: !2404, line: 996, type: !3019, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15828)
!15828 = !{!15829, !15831}
!15829 = !DILocalVariable(name: "__i", scope: !15830, file: !2404, line: 998, type: !14354)
!15830 = distinct !DILexicalBlock(scope: !15827, file: !2404, line: 998, column: 2)
!15831 = !DILocalVariable(name: "__key", scope: !15830, file: !2404, line: 998, type: !14354)
!15832 = !DILocation(line: 0, scope: !15830)
!15833 = !DILocation(line: 0, scope: !14362, inlinedAt: !15834)
!15834 = distinct !DILocation(line: 998, column: 2, scope: !15830)
!15835 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !15836)
!15836 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !15834)
!15837 = !DILocation(line: 0, scope: !14371, inlinedAt: !15836)
!15838 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !15834)
!15839 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !15834)
!15840 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !15834)
!15841 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !15834)
!15842 = !DILocation(line: 999, column: 3, scope: !15843)
!15843 = distinct !DILexicalBlock(scope: !15844, file: !2404, line: 999, column: 3)
!15844 = distinct !DILexicalBlock(scope: !15845, file: !2404, line: 999, column: 3)
!15845 = distinct !DILexicalBlock(scope: !15846, file: !2404, line: 998, column: 26)
!15846 = distinct !DILexicalBlock(scope: !15830, file: !2404, line: 998, column: 2)
!15847 = !DILocation(line: 999, column: 3, scope: !15844)
!15848 = !DILocation(line: 999, column: 3, scope: !15849)
!15849 = distinct !DILexicalBlock(scope: !15843, file: !2404, line: 999, column: 3)
!15850 = !DILocation(line: 1031, column: 3, scope: !15089, inlinedAt: !15851)
!15851 = distinct !DILocation(line: 48, column: 10, scope: !15093, inlinedAt: !15852)
!15852 = distinct !DILocation(line: 1000, column: 3, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15854, file: !2404, line: 1000, column: 3)
!15854 = distinct !DILexicalBlock(scope: !15845, file: !2404, line: 1000, column: 3)
!15855 = !DILocation(line: 0, scope: !15089, inlinedAt: !15851)
!15856 = !DILocation(line: 48, column: 9, scope: !15093, inlinedAt: !15852)
!15857 = !DILocation(line: 1000, column: 3, scope: !15854)
!15858 = !DILocation(line: 1000, column: 3, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15853, file: !2404, line: 1000, column: 3)
!15860 = !DILocation(line: 1002, column: 5, scope: !15845)
!15861 = !DILocation(line: 1002, column: 20, scope: !15845)
!15862 = !DILocation(line: 1002, column: 3, scope: !15845)
!15863 = !DILocation(line: 1003, column: 3, scope: !15845)
!15864 = !DILocation(line: 0, scope: !14396, inlinedAt: !15865)
!15865 = distinct !DILocation(line: 998, column: 2, scope: !15846)
!15866 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !15865)
!15867 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !15865)
!15868 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !15865)
!15869 = !DILocation(line: 0, scope: !14410, inlinedAt: !15870)
!15870 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !15865)
!15871 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !15870)
!15872 = !DILocation(line: 1011, column: 2, scope: !15827)
!15873 = !DILocation(line: 1012, column: 1, scope: !15827)
!15874 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2404, file: !2404, line: 1014, type: !14711, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !2102)
!15875 = !DILocation(line: 1028, column: 25, scope: !15874)
!15876 = !DILocation(line: 1028, column: 2, scope: !15874)
!15877 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2404, file: !2404, line: 1155, type: !15878, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15880)
!15878 = !DISubroutineType(types: !15879)
!15879 = !{!345, !2325, !2325}
!15880 = !{!15881, !15882, !15883, !15884, !15885}
!15881 = !DILocalVariable(name: "a", arg: 1, scope: !15877, file: !2404, line: 1155, type: !2325)
!15882 = !DILocalVariable(name: "b", arg: 2, scope: !15877, file: !2404, line: 1155, type: !2325)
!15883 = !DILocalVariable(name: "thread_a", scope: !15877, file: !2404, line: 1157, type: !2296)
!15884 = !DILocalVariable(name: "thread_b", scope: !15877, file: !2404, line: 1157, type: !2296)
!15885 = !DILocalVariable(name: "cmp", scope: !15877, file: !2404, line: 1158, type: !772)
!15886 = !DILocation(line: 0, scope: !15877)
!15887 = !DILocation(line: 1160, column: 13, scope: !15877)
!15888 = !DILocation(line: 1161, column: 13, scope: !15877)
!15889 = !DILocation(line: 1163, column: 8, scope: !15877)
!15890 = !DILocation(line: 1165, column: 10, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !15877, file: !2404, line: 1165, column: 6)
!15892 = !DILocation(line: 1165, column: 6, scope: !15877)
!15893 = !DILocation(line: 1167, column: 17, scope: !15894)
!15894 = distinct !DILexicalBlock(scope: !15891, file: !2404, line: 1167, column: 13)
!15895 = !DILocation(line: 1167, column: 13, scope: !15891)
!15896 = !DILocation(line: 1170, column: 25, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !15894, file: !2404, line: 1169, column: 9)
!15898 = !DILocation(line: 1170, column: 52, scope: !15897)
!15899 = !DILocation(line: 1170, column: 35, scope: !15897)
!15900 = !DILocation(line: 1170, column: 3, scope: !15897)
!15901 = !DILocation(line: 0, scope: !15891)
!15902 = !DILocation(line: 1173, column: 1, scope: !15877)
!15903 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2404, file: !2404, line: 1175, type: !15904, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15919)
!15904 = !DISubroutineType(types: !15905)
!15905 = !{null, !15906, !2296}
!15906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15907, size: 32)
!15907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15908, line: 37, size: 128, elements: !15909)
!15908 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15909 = !{!15910, !15918}
!15910 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15907, file: !15908, line: 38, baseType: !15911, size: 96)
!15911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !169, line: 83, size: 96, elements: !15912)
!15912 = !{!15913, !15914, !15917}
!15913 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15911, file: !169, line: 84, baseType: !2325, size: 32)
!15914 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15911, file: !169, line: 85, baseType: !15915, size: 32, offset: 32)
!15915 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !169, line: 81, baseType: !15916)
!15916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15878, size: 32)
!15917 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15911, file: !169, line: 86, baseType: !119, size: 32, offset: 64)
!15918 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15907, file: !15908, line: 39, baseType: !119, size: 32, offset: 96)
!15919 = !{!15920, !15921, !15922, !15923, !15932}
!15920 = !DILocalVariable(name: "pq", arg: 1, scope: !15903, file: !2404, line: 1175, type: !15906)
!15921 = !DILocalVariable(name: "thread", arg: 2, scope: !15903, file: !2404, line: 1175, type: !2296)
!15922 = !DILocalVariable(name: "t", scope: !15903, file: !2404, line: 1177, type: !2296)
!15923 = !DILocalVariable(name: "__f", scope: !15924, file: !2404, line: 1190, type: !15927)
!15924 = distinct !DILexicalBlock(scope: !15925, file: !2404, line: 1190, column: 3)
!15925 = distinct !DILexicalBlock(scope: !15926, file: !2404, line: 1189, column: 27)
!15926 = distinct !DILexicalBlock(scope: !15903, file: !2404, line: 1189, column: 6)
!15927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !169, line: 155, size: 96, elements: !15928)
!15928 = !{!15929, !15930, !15931}
!15929 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15927, file: !169, line: 156, baseType: !2399, size: 32)
!15930 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15927, file: !169, line: 157, baseType: !284, size: 32, offset: 32)
!15931 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15927, file: !169, line: 158, baseType: !772, size: 32, offset: 64)
!15932 = !DILocalVariable(name: "n", scope: !15933, file: !2404, line: 1190, type: !2325)
!15933 = distinct !DILexicalBlock(scope: !15934, file: !2404, line: 1190, column: 3)
!15934 = distinct !DILexicalBlock(scope: !15924, file: !2404, line: 1190, column: 3)
!15935 = !DILocation(line: 0, scope: !15903)
!15936 = !DILocation(line: 1179, column: 2, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15938, file: !2404, line: 1179, column: 2)
!15938 = distinct !DILexicalBlock(scope: !15903, file: !2404, line: 1179, column: 2)
!15939 = !DILocation(line: 1179, column: 2, scope: !15938)
!15940 = !DILocation(line: 1179, column: 2, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15937, file: !2404, line: 1179, column: 2)
!15942 = !DILocation(line: 1181, column: 31, scope: !15903)
!15943 = !DILocation(line: 1181, column: 45, scope: !15903)
!15944 = !DILocation(line: 1181, column: 15, scope: !15903)
!15945 = !DILocation(line: 1181, column: 25, scope: !15903)
!15946 = !DILocation(line: 1189, column: 11, scope: !15926)
!15947 = !DILocation(line: 1189, column: 7, scope: !15926)
!15948 = !DILocation(line: 1189, column: 6, scope: !15903)
!15949 = !DILocation(line: 1190, column: 3, scope: !15924)
!15950 = !DILocation(line: 1190, column: 3, scope: !15933)
!15951 = !DILocation(line: 0, scope: !15933)
!15952 = !DILocation(line: 1190, column: 3, scope: !15934)
!15953 = !DILocation(line: 1193, column: 2, scope: !15925)
!15954 = !DILocation(line: 1191, column: 42, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15934, file: !2404, line: 1190, column: 54)
!15956 = !DILocation(line: 1191, column: 12, scope: !15955)
!15957 = !DILocation(line: 1191, column: 22, scope: !15955)
!15958 = distinct !{!15958, !15949, !15959}
!15959 = !DILocation(line: 1192, column: 3, scope: !15924)
!15960 = !DILocation(line: 1195, column: 17, scope: !15903)
!15961 = !DILocation(line: 1195, column: 37, scope: !15903)
!15962 = !DILocation(line: 1195, column: 2, scope: !15903)
!15963 = !DILocation(line: 1196, column: 1, scope: !15903)
!15964 = !DISubprogram(name: "z_rb_foreach_next", scope: !169, file: !169, line: 176, type: !15965, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2102)
!15965 = !DISubroutineType(types: !15966)
!15966 = !{!2325, !15967, !15968}
!15967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15911, size: 32)
!15968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15927, size: 32)
!15969 = !DISubprogram(name: "rb_insert", scope: !169, file: !169, line: 105, type: !15970, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2102)
!15970 = !DISubroutineType(types: !15971)
!15971 = !{null, !15967, !2325}
!15972 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2404, file: !2404, line: 1198, type: !15904, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15973)
!15973 = !{!15974, !15975}
!15974 = !DILocalVariable(name: "pq", arg: 1, scope: !15972, file: !2404, line: 1198, type: !15906)
!15975 = !DILocalVariable(name: "thread", arg: 2, scope: !15972, file: !2404, line: 1198, type: !2296)
!15976 = !DILocation(line: 0, scope: !15972)
!15977 = !DILocation(line: 1200, column: 2, scope: !15978)
!15978 = distinct !DILexicalBlock(scope: !15979, file: !2404, line: 1200, column: 2)
!15979 = distinct !DILexicalBlock(scope: !15972, file: !2404, line: 1200, column: 2)
!15980 = !DILocation(line: 1200, column: 2, scope: !15979)
!15981 = !DILocation(line: 1200, column: 2, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15978, file: !2404, line: 1200, column: 2)
!15983 = !DILocation(line: 1202, column: 17, scope: !15972)
!15984 = !DILocation(line: 1202, column: 37, scope: !15972)
!15985 = !DILocation(line: 1202, column: 2, scope: !15972)
!15986 = !DILocation(line: 1204, column: 16, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15972, file: !2404, line: 1204, column: 6)
!15988 = !DILocation(line: 1204, column: 7, scope: !15987)
!15989 = !DILocation(line: 1204, column: 6, scope: !15972)
!15990 = !DILocation(line: 1205, column: 7, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15987, file: !2404, line: 1204, column: 22)
!15992 = !DILocation(line: 1205, column: 22, scope: !15991)
!15993 = !DILocation(line: 1206, column: 2, scope: !15991)
!15994 = !DILocation(line: 1207, column: 1, scope: !15972)
!15995 = !DISubprogram(name: "rb_remove", scope: !169, file: !169, line: 110, type: !15970, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2102)
!15996 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2404, file: !2404, line: 1209, type: !15997, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !15999)
!15997 = !DISubroutineType(types: !15998)
!15998 = !{!2296, !15906}
!15999 = !{!16000, !16001, !16002}
!16000 = !DILocalVariable(name: "pq", arg: 1, scope: !15996, file: !2404, line: 1209, type: !15906)
!16001 = !DILocalVariable(name: "thread", scope: !15996, file: !2404, line: 1211, type: !2296)
!16002 = !DILocalVariable(name: "n", scope: !15996, file: !2404, line: 1212, type: !2325)
!16003 = !DILocation(line: 0, scope: !15996)
!16004 = !DILocation(line: 1212, column: 37, scope: !15996)
!16005 = !DILocation(line: 1212, column: 21, scope: !15996)
!16006 = !DILocation(line: 1217, column: 2, scope: !15996)
!16007 = distinct !DISubprogram(name: "rb_get_min", scope: !169, file: !169, line: 115, type: !16008, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16010)
!16008 = !DISubroutineType(types: !16009)
!16009 = !{!2325, !15967}
!16010 = !{!16011}
!16011 = !DILocalVariable(name: "tree", arg: 1, scope: !16007, file: !169, line: 115, type: !15967)
!16012 = !DILocation(line: 0, scope: !16007)
!16013 = !DILocation(line: 117, column: 9, scope: !16007)
!16014 = !DILocation(line: 117, column: 2, scope: !16007)
!16015 = !DISubprogram(name: "z_rb_get_minmax", scope: !169, file: !169, line: 100, type: !16016, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2102)
!16016 = !DISubroutineType(types: !16017)
!16017 = !{!2325, !15967, !185}
!16018 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2404, file: !2404, line: 1246, type: !16019, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16027)
!16019 = !DISubroutineType(types: !16020)
!16020 = !{!2296, !16021}
!16021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16022, size: 32)
!16022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15908, line: 53, size: 2080, elements: !16023)
!16023 = !{!16024, !16026}
!16024 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16022, file: !15908, line: 54, baseType: !16025, size: 2048)
!16025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2332, size: 2048, elements: !231)
!16026 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16022, file: !15908, line: 55, baseType: !32, size: 32, offset: 2048)
!16027 = !{!16028, !16029, !16030, !16031}
!16028 = !DILocalVariable(name: "pq", arg: 1, scope: !16018, file: !2404, line: 1246, type: !16021)
!16029 = !DILocalVariable(name: "thread", scope: !16018, file: !2404, line: 1252, type: !2296)
!16030 = !DILocalVariable(name: "l", scope: !16018, file: !2404, line: 1253, type: !14588)
!16031 = !DILocalVariable(name: "n", scope: !16018, file: !2404, line: 1254, type: !2400)
!16032 = !DILocation(line: 0, scope: !16018)
!16033 = !DILocation(line: 1248, column: 11, scope: !16034)
!16034 = distinct !DILexicalBlock(scope: !16018, file: !2404, line: 1248, column: 6)
!16035 = !DILocation(line: 1248, column: 7, scope: !16034)
!16036 = !DILocation(line: 1248, column: 6, scope: !16018)
!16037 = !DILocation(line: 1253, column: 31, scope: !16018)
!16038 = !DILocation(line: 1253, column: 20, scope: !16018)
!16039 = !DILocation(line: 1254, column: 19, scope: !16018)
!16040 = !DILocation(line: 1260, column: 1, scope: !16018)
!16041 = distinct !DISubprogram(name: "z_unpend_all", scope: !2404, file: !2404, line: 1262, type: !16042, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16044)
!16042 = !DISubroutineType(types: !16043)
!16043 = !{!119, !2327}
!16044 = !{!16045, !16046, !16047}
!16045 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16041, file: !2404, line: 1262, type: !2327)
!16046 = !DILocalVariable(name: "need_sched", scope: !16041, file: !2404, line: 1264, type: !119)
!16047 = !DILocalVariable(name: "thread", scope: !16041, file: !2404, line: 1265, type: !2296)
!16048 = !DILocation(line: 0, scope: !16041)
!16049 = !DILocation(line: 1267, column: 19, scope: !16041)
!16050 = !DILocation(line: 1267, column: 41, scope: !16041)
!16051 = !DILocation(line: 1267, column: 2, scope: !16041)
!16052 = !DILocation(line: 1268, column: 3, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16041, file: !2404, line: 1267, column: 50)
!16054 = !DILocation(line: 1269, column: 3, scope: !16053)
!16055 = distinct !{!16055, !16051, !16056}
!16056 = !DILocation(line: 1271, column: 2, scope: !16041)
!16057 = !DILocation(line: 1273, column: 2, scope: !16041)
!16058 = distinct !DISubprogram(name: "z_waitq_head", scope: !13885, file: !13885, line: 52, type: !15589, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16059)
!16059 = !{!16060}
!16060 = !DILocalVariable(name: "w", arg: 1, scope: !16058, file: !13885, line: 52, type: !2327)
!16061 = !DILocation(line: 0, scope: !16058)
!16062 = !DILocation(line: 54, column: 52, scope: !16058)
!16063 = !DILocation(line: 54, column: 28, scope: !16058)
!16064 = !DILocation(line: 54, column: 9, scope: !16058)
!16065 = !DILocation(line: 54, column: 2, scope: !16058)
!16066 = distinct !DISubprogram(name: "init_ready_q", scope: !2404, file: !2404, line: 1276, type: !16067, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16074)
!16067 = !DISubroutineType(types: !16068)
!16068 = !{null, !16069}
!16069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16070, size: 32)
!16070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !179, line: 83, size: 96, elements: !16071)
!16071 = !{!16072, !16073}
!16072 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16070, file: !179, line: 86, baseType: !2296, size: 32)
!16073 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16070, file: !179, line: 90, baseType: !2332, size: 64, offset: 32)
!16074 = !{!16075}
!16075 = !DILocalVariable(name: "rq", arg: 1, scope: !16066, file: !2404, line: 1276, type: !16069)
!16076 = !DILocation(line: 0, scope: !16066)
!16077 = !DILocation(line: 1289, column: 22, scope: !16066)
!16078 = !DILocation(line: 1289, column: 2, scope: !16066)
!16079 = !DILocation(line: 1291, column: 1, scope: !16066)
!16080 = distinct !DISubprogram(name: "sys_dlist_init", scope: !153, file: !153, line: 197, type: !16081, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16083)
!16081 = !DISubroutineType(types: !16082)
!16082 = !{null, !14588}
!16083 = !{!16084}
!16084 = !DILocalVariable(name: "list", arg: 1, scope: !16080, file: !153, line: 197, type: !14588)
!16085 = !DILocation(line: 0, scope: !16080)
!16086 = !DILocation(line: 199, column: 8, scope: !16080)
!16087 = !DILocation(line: 199, column: 13, scope: !16080)
!16088 = !DILocation(line: 200, column: 8, scope: !16080)
!16089 = !DILocation(line: 200, column: 13, scope: !16080)
!16090 = !DILocation(line: 201, column: 1, scope: !16080)
!16091 = distinct !DISubprogram(name: "z_sched_init", scope: !2404, file: !2404, line: 1293, type: !3019, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !2102)
!16092 = !DILocation(line: 1302, column: 2, scope: !16091)
!16093 = !DILocation(line: 1306, column: 2, scope: !16091)
!16094 = !DILocation(line: 1309, column: 1, scope: !16091)
!16095 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2404, file: !2404, line: 1311, type: !16096, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16099)
!16096 = !DISubroutineType(types: !16097)
!16097 = !{!119, !16098}
!16098 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !2296)
!16099 = !{!16100}
!16100 = !DILocalVariable(name: "thread", arg: 1, scope: !16095, file: !2404, line: 1311, type: !16098)
!16101 = !DILocation(line: 0, scope: !16095)
!16102 = !DILocation(line: 1313, column: 22, scope: !16095)
!16103 = !DILocation(line: 1313, column: 9, scope: !16095)
!16104 = !DILocation(line: 1313, column: 2, scope: !16095)
!16105 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2404, file: !2404, line: 1325, type: !16106, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16108)
!16106 = !DISubroutineType(types: !16107)
!16107 = !{null, !16098, !119}
!16108 = !{!16109, !16110, !16111}
!16109 = !DILocalVariable(name: "thread", arg: 1, scope: !16105, file: !2404, line: 1325, type: !16098)
!16110 = !DILocalVariable(name: "prio", arg: 2, scope: !16105, file: !2404, line: 1325, type: !119)
!16111 = !DILocalVariable(name: "th", scope: !16105, file: !2404, line: 1334, type: !2296)
!16112 = !DILocation(line: 0, scope: !16105)
!16113 = !DILocation(line: 1331, column: 2, scope: !16114)
!16114 = distinct !DILexicalBlock(scope: !16115, file: !2404, line: 1331, column: 2)
!16115 = distinct !DILexicalBlock(scope: !16116, file: !2404, line: 1331, column: 2)
!16116 = distinct !DILexicalBlock(scope: !16105, file: !2404, line: 1331, column: 2)
!16117 = !DILocation(line: 1331, column: 2, scope: !16118)
!16118 = distinct !DILexicalBlock(scope: !16114, file: !2404, line: 1331, column: 2)
!16119 = !DILocation(line: 1031, column: 3, scope: !15089, inlinedAt: !16120)
!16120 = distinct !DILocation(line: 48, column: 10, scope: !15093, inlinedAt: !16121)
!16121 = distinct !DILocation(line: 1332, column: 2, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16123, file: !2404, line: 1332, column: 2)
!16123 = distinct !DILexicalBlock(scope: !16105, file: !2404, line: 1332, column: 2)
!16124 = !DILocation(line: 0, scope: !15089, inlinedAt: !16120)
!16125 = !DILocation(line: 48, column: 9, scope: !15093, inlinedAt: !16121)
!16126 = !DILocation(line: 1332, column: 2, scope: !16123)
!16127 = !DILocation(line: 1332, column: 2, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16122, file: !2404, line: 1332, column: 2)
!16129 = !DILocation(line: 1336, column: 2, scope: !16105)
!16130 = !DILocation(line: 1337, column: 1, scope: !16105)
!16131 = distinct !DISubprogram(name: "k_can_yield", scope: !2404, file: !2404, line: 1384, type: !7430, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !2102)
!16132 = !DILocation(line: 1386, column: 11, scope: !16131)
!16133 = !DILocation(line: 1386, column: 29, scope: !16131)
!16134 = !DILocation(line: 1386, column: 32, scope: !16131)
!16135 = !DILocation(line: 1386, column: 46, scope: !16131)
!16136 = !DILocation(line: 1387, column: 28, scope: !16131)
!16137 = !DILocation(line: 1387, column: 4, scope: !16131)
!16138 = !DILocation(line: 1386, column: 2, scope: !16131)
!16139 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !245, file: !245, line: 989, type: !7430, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !2102)
!16140 = !DILocation(line: 993, column: 10, scope: !16139)
!16141 = !DILocation(line: 993, column: 2, scope: !16139)
!16142 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2404, file: !2404, line: 1390, type: !3019, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16143)
!16143 = !{!16144}
!16144 = !DILocalVariable(name: "key", scope: !16142, file: !2404, line: 1396, type: !14354)
!16145 = !DILocation(line: 1031, column: 3, scope: !15089, inlinedAt: !16146)
!16146 = distinct !DILocation(line: 48, column: 10, scope: !15093, inlinedAt: !16147)
!16147 = distinct !DILocation(line: 1392, column: 2, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16149, file: !2404, line: 1392, column: 2)
!16149 = distinct !DILexicalBlock(scope: !16142, file: !2404, line: 1392, column: 2)
!16150 = !DILocation(line: 0, scope: !15089, inlinedAt: !16146)
!16151 = !DILocation(line: 48, column: 9, scope: !15093, inlinedAt: !16147)
!16152 = !DILocation(line: 1392, column: 2, scope: !16149)
!16153 = !DILocation(line: 1392, column: 2, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !16148, file: !2404, line: 1392, column: 2)
!16155 = !DILocation(line: 0, scope: !14362, inlinedAt: !16156)
!16156 = distinct !DILocation(line: 1396, column: 25, scope: !16142)
!16157 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !16158)
!16158 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !16156)
!16159 = !DILocation(line: 0, scope: !14371, inlinedAt: !16158)
!16160 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !16156)
!16161 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !16156)
!16162 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !16156)
!16163 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !16156)
!16164 = !DILocation(line: 0, scope: !16142)
!16165 = !DILocation(line: 1400, column: 18, scope: !16166)
!16166 = distinct !DILexicalBlock(scope: !16167, file: !2404, line: 1399, column: 36)
!16167 = distinct !DILexicalBlock(scope: !16142, file: !2404, line: 1398, column: 6)
!16168 = !DILocation(line: 0, scope: !14554, inlinedAt: !16169)
!16169 = distinct !DILocation(line: 1400, column: 3, scope: !16166)
!16170 = !DILocation(line: 266, column: 15, scope: !14554, inlinedAt: !16169)
!16171 = !DILocation(line: 266, column: 28, scope: !14554, inlinedAt: !16169)
!16172 = !DILocation(line: 0, scope: !14562, inlinedAt: !16173)
!16173 = distinct !DILocation(line: 268, column: 3, scope: !14566, inlinedAt: !16169)
!16174 = !DILocation(line: 234, column: 2, scope: !14562, inlinedAt: !16173)
!16175 = !DILocation(line: 1402, column: 15, scope: !16142)
!16176 = !DILocation(line: 0, scope: !14571, inlinedAt: !16177)
!16177 = distinct !DILocation(line: 1402, column: 2, scope: !16142)
!16178 = !DILocation(line: 252, column: 15, scope: !14571, inlinedAt: !16177)
!16179 = !DILocation(line: 252, column: 28, scope: !14571, inlinedAt: !16177)
!16180 = !DILocation(line: 0, scope: !14578, inlinedAt: !16181)
!16181 = distinct !DILocation(line: 254, column: 3, scope: !14582, inlinedAt: !16177)
!16182 = !DILocation(line: 0, scope: !14585, inlinedAt: !16183)
!16183 = distinct !DILocation(line: 229, column: 2, scope: !14578, inlinedAt: !16181)
!16184 = !DILocation(line: 186, column: 2, scope: !14595, inlinedAt: !16183)
!16185 = !DILocation(line: 186, column: 2, scope: !14596, inlinedAt: !16183)
!16186 = !DILocation(line: 186, column: 2, scope: !14599, inlinedAt: !16183)
!16187 = !DILocation(line: 188, column: 2, scope: !14601, inlinedAt: !16183)
!16188 = !DILocation(line: 188, column: 2, scope: !14603, inlinedAt: !16183)
!16189 = !DILocation(line: 0, scope: !14601, inlinedAt: !16183)
!16190 = !DILocation(line: 189, column: 7, scope: !14606, inlinedAt: !16183)
!16191 = !DILocation(line: 189, column: 35, scope: !14606, inlinedAt: !16183)
!16192 = !DILocation(line: 189, column: 7, scope: !14607, inlinedAt: !16183)
!16193 = !DILocation(line: 191, column: 21, scope: !14611, inlinedAt: !16183)
!16194 = !DILocation(line: 190, column: 4, scope: !14611, inlinedAt: !16183)
!16195 = !DILocation(line: 192, column: 4, scope: !14611, inlinedAt: !16183)
!16196 = distinct !{!16196, !16187, !16197}
!16197 = !DILocation(line: 194, column: 2, scope: !14601, inlinedAt: !16183)
!16198 = !DILocation(line: 196, column: 37, scope: !14585, inlinedAt: !16183)
!16199 = !DILocation(line: 196, column: 2, scope: !14585, inlinedAt: !16183)
!16200 = !DILocation(line: 197, column: 1, scope: !14585, inlinedAt: !16183)
!16201 = !DILocation(line: 1403, column: 2, scope: !16142)
!16202 = !DILocation(line: 0, scope: !15040, inlinedAt: !16203)
!16203 = distinct !DILocation(line: 1404, column: 2, scope: !16142)
!16204 = !DILocation(line: 0, scope: !15049, inlinedAt: !16205)
!16205 = distinct !DILocation(line: 195, column: 2, scope: !15040, inlinedAt: !16203)
!16206 = !DILocation(line: 225, column: 2, scope: !15056, inlinedAt: !16205)
!16207 = !DILocation(line: 225, column: 2, scope: !15057, inlinedAt: !16205)
!16208 = !DILocation(line: 225, column: 2, scope: !15060, inlinedAt: !16205)
!16209 = !DILocation(line: 196, column: 9, scope: !15040, inlinedAt: !16203)
!16210 = !DILocation(line: 1405, column: 1, scope: !16142)
!16211 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2404, file: !2404, line: 1459, type: !16212, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16214)
!16212 = !DISubroutineType(types: !16213)
!16213 = !{!772, !15250}
!16214 = !{!16215, !16216, !16217}
!16215 = !DILocalVariable(name: "timeout", arg: 1, scope: !16211, file: !2404, line: 1459, type: !15250)
!16216 = !DILocalVariable(name: "ticks", scope: !16211, file: !2404, line: 1461, type: !114)
!16217 = !DILocalVariable(name: "ret", scope: !16211, file: !2404, line: 1480, type: !772)
!16218 = !DILocation(line: 0, scope: !16211)
!16219 = !DILocation(line: 1031, column: 3, scope: !15089, inlinedAt: !16220)
!16220 = distinct !DILocation(line: 48, column: 10, scope: !15093, inlinedAt: !16221)
!16221 = distinct !DILocation(line: 1463, column: 2, scope: !16222)
!16222 = distinct !DILexicalBlock(scope: !16223, file: !2404, line: 1463, column: 2)
!16223 = distinct !DILexicalBlock(scope: !16211, file: !2404, line: 1463, column: 2)
!16224 = !DILocation(line: 0, scope: !15089, inlinedAt: !16220)
!16225 = !DILocation(line: 48, column: 9, scope: !15093, inlinedAt: !16221)
!16226 = !DILocation(line: 1463, column: 2, scope: !16223)
!16227 = !DILocation(line: 1463, column: 2, scope: !16228)
!16228 = distinct !DILexicalBlock(scope: !16222, file: !2404, line: 1463, column: 2)
!16229 = !DILocation(line: 1468, column: 6, scope: !16230)
!16230 = distinct !DILexicalBlock(scope: !16211, file: !2404, line: 1468, column: 6)
!16231 = !DILocation(line: 1468, column: 6, scope: !16211)
!16232 = !DILocation(line: 1469, column: 20, scope: !16233)
!16233 = distinct !DILexicalBlock(scope: !16230, file: !2404, line: 1468, column: 40)
!16234 = !DILocation(line: 1469, column: 3, scope: !16233)
!16235 = !DILocation(line: 1473, column: 3, scope: !16233)
!16236 = !DILocation(line: 1478, column: 10, scope: !16211)
!16237 = !DILocation(line: 1480, column: 16, scope: !16211)
!16238 = !DILocation(line: 1485, column: 1, scope: !16211)
!16239 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3270, file: !3270, line: 310, type: !16240, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16242)
!16240 = !DISubroutineType(types: !16241)
!16241 = !{null, !16098}
!16242 = !{!16243}
!16243 = !DILocalVariable(name: "thread", arg: 1, scope: !16239, file: !3270, line: 310, type: !16098)
!16244 = !DILocation(line: 0, scope: !16239)
!16245 = !DILocation(line: 319, column: 2, scope: !16246)
!16246 = distinct !DILexicalBlock(scope: !16239, file: !3270, line: 319, column: 2)
!16247 = !{i64 2155112724}
!16248 = !DILocation(line: 320, column: 2, scope: !16239)
!16249 = !DILocation(line: 321, column: 1, scope: !16239)
!16250 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2404, file: !2404, line: 1415, type: !16251, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16253)
!16251 = !DISubroutineType(types: !16252)
!16252 = !{!772, !114}
!16253 = !{!16254, !16255, !16256, !16257}
!16254 = !DILocalVariable(name: "ticks", arg: 1, scope: !16250, file: !2404, line: 1415, type: !114)
!16255 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16250, file: !2404, line: 1418, type: !118)
!16256 = !DILocalVariable(name: "timeout", scope: !16250, file: !2404, line: 1430, type: !15250)
!16257 = !DILocalVariable(name: "key", scope: !16250, file: !2404, line: 1437, type: !14354)
!16258 = !DILocation(line: 0, scope: !16250)
!16259 = !DILocation(line: 1031, column: 3, scope: !15089, inlinedAt: !16260)
!16260 = distinct !DILocation(line: 48, column: 10, scope: !15093, inlinedAt: !16261)
!16261 = distinct !DILocation(line: 1420, column: 2, scope: !16262)
!16262 = distinct !DILexicalBlock(scope: !16263, file: !2404, line: 1420, column: 2)
!16263 = distinct !DILexicalBlock(scope: !16250, file: !2404, line: 1420, column: 2)
!16264 = !DILocation(line: 0, scope: !15089, inlinedAt: !16260)
!16265 = !DILocation(line: 48, column: 9, scope: !15093, inlinedAt: !16261)
!16266 = !DILocation(line: 1420, column: 2, scope: !16263)
!16267 = !DILocation(line: 1420, column: 2, scope: !16268)
!16268 = distinct !DILexicalBlock(scope: !16262, file: !2404, line: 1420, column: 2)
!16269 = !DILocation(line: 1425, column: 12, scope: !16270)
!16270 = distinct !DILexicalBlock(scope: !16250, file: !2404, line: 1425, column: 6)
!16271 = !DILocation(line: 1425, column: 6, scope: !16250)
!16272 = !DILocation(line: 1426, column: 3, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16270, file: !2404, line: 1425, column: 18)
!16274 = !DILocation(line: 1427, column: 3, scope: !16273)
!16275 = !DILocation(line: 1431, column: 24, scope: !16276)
!16276 = distinct !DILexicalBlock(scope: !16250, file: !2404, line: 1431, column: 6)
!16277 = !DILocation(line: 1431, column: 6, scope: !16250)
!16278 = !DILocation(line: 1432, column: 35, scope: !16279)
!16279 = distinct !DILexicalBlock(scope: !16276, file: !2404, line: 1431, column: 30)
!16280 = !DILocation(line: 1432, column: 27, scope: !16279)
!16281 = !DILocation(line: 1433, column: 2, scope: !16279)
!16282 = !DILocation(line: 1434, column: 27, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16276, file: !2404, line: 1433, column: 9)
!16284 = !DILocation(line: 0, scope: !16276)
!16285 = !DILocation(line: 0, scope: !14362, inlinedAt: !16286)
!16286 = distinct !DILocation(line: 1437, column: 25, scope: !16250)
!16287 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !16288)
!16288 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !16286)
!16289 = !DILocation(line: 0, scope: !14371, inlinedAt: !16288)
!16290 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !16286)
!16291 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !16286)
!16292 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !16286)
!16293 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !16286)
!16294 = !DILocation(line: 1440, column: 20, scope: !16250)
!16295 = !DILocation(line: 1440, column: 18, scope: !16250)
!16296 = !DILocation(line: 1442, column: 2, scope: !16250)
!16297 = !DILocation(line: 1443, column: 23, scope: !16250)
!16298 = !DILocation(line: 1443, column: 2, scope: !16250)
!16299 = !DILocation(line: 1444, column: 29, scope: !16250)
!16300 = !DILocation(line: 1444, column: 2, scope: !16250)
!16301 = !DILocation(line: 0, scope: !15040, inlinedAt: !16302)
!16302 = distinct !DILocation(line: 1446, column: 8, scope: !16250)
!16303 = !DILocation(line: 0, scope: !15049, inlinedAt: !16304)
!16304 = distinct !DILocation(line: 195, column: 2, scope: !15040, inlinedAt: !16302)
!16305 = !DILocation(line: 225, column: 2, scope: !15056, inlinedAt: !16304)
!16306 = !DILocation(line: 225, column: 2, scope: !15057, inlinedAt: !16304)
!16307 = !DILocation(line: 225, column: 2, scope: !15060, inlinedAt: !16304)
!16308 = !DILocation(line: 196, column: 9, scope: !15040, inlinedAt: !16302)
!16309 = !DILocation(line: 1448, column: 2, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16311, file: !2404, line: 1448, column: 2)
!16311 = distinct !DILexicalBlock(scope: !16250, file: !2404, line: 1448, column: 2)
!16312 = !DILocation(line: 1448, column: 2, scope: !16311)
!16313 = !DILocation(line: 1448, column: 2, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16310, file: !2404, line: 1448, column: 2)
!16315 = !DILocation(line: 1450, column: 10, scope: !16250)
!16316 = !DILocation(line: 1450, column: 45, scope: !16250)
!16317 = !DILocation(line: 1450, column: 43, scope: !16250)
!16318 = !DILocation(line: 1451, column: 6, scope: !16250)
!16319 = !DILocation(line: 1457, column: 1, scope: !16250)
!16320 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3262, file: !3262, line: 1103, type: !3263, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16321)
!16321 = !{!16322}
!16322 = !DILocalVariable(name: "t", arg: 1, scope: !16320, file: !3262, line: 1103, type: !120)
!16323 = !DILocation(line: 0, scope: !16320)
!16324 = !DILocation(line: 0, scope: !14422, inlinedAt: !16325)
!16325 = distinct !DILocation(line: 1106, column: 9, scope: !16320)
!16326 = !DILocation(line: 139, column: 13, scope: !16327, inlinedAt: !16325)
!16327 = distinct !DILexicalBlock(scope: !16328, file: !3262, line: 138, column: 10)
!16328 = distinct !DILexicalBlock(scope: !16329, file: !3262, line: 136, column: 7)
!16329 = distinct !DILexicalBlock(scope: !14443, file: !3262, line: 134, column: 17)
!16330 = !DILocation(line: 1106, column: 2, scope: !16320)
!16331 = distinct !DISubprogram(name: "k_yield", scope: !3270, file: !3270, line: 140, type: !3019, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !2102)
!16332 = !DILocation(line: 148, column: 2, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16331, file: !3270, line: 148, column: 2)
!16334 = !{i64 2155112044}
!16335 = !DILocation(line: 149, column: 2, scope: !16331)
!16336 = !DILocation(line: 150, column: 1, scope: !16331)
!16337 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2404, file: !2404, line: 1495, type: !16338, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16340)
!16338 = !DISubroutineType(types: !16339)
!16339 = !{!772, !119}
!16340 = !{!16341, !16342}
!16341 = !DILocalVariable(name: "us", arg: 1, scope: !16337, file: !2404, line: 1495, type: !119)
!16342 = !DILocalVariable(name: "ticks", scope: !16337, file: !2404, line: 1497, type: !772)
!16343 = !DILocation(line: 0, scope: !16337)
!16344 = !DILocation(line: 1501, column: 31, scope: !16337)
!16345 = !DILocation(line: 1501, column: 10, scope: !16337)
!16346 = !DILocation(line: 1502, column: 23, scope: !16337)
!16347 = !DILocation(line: 1502, column: 10, scope: !16337)
!16348 = !DILocation(line: 1506, column: 31, scope: !16337)
!16349 = !DILocation(line: 1506, column: 9, scope: !16337)
!16350 = !DILocation(line: 1506, column: 2, scope: !16337)
!16351 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3262, file: !3262, line: 571, type: !3263, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16352)
!16352 = !{!16353}
!16353 = !DILocalVariable(name: "t", arg: 1, scope: !16351, file: !3262, line: 571, type: !120)
!16354 = !DILocation(line: 0, scope: !16351)
!16355 = !DILocation(line: 0, scope: !14422, inlinedAt: !16356)
!16356 = distinct !DILocation(line: 574, column: 9, scope: !16351)
!16357 = !DILocation(line: 135, column: 5, scope: !16329, inlinedAt: !16356)
!16358 = !DILocation(line: 139, column: 13, scope: !16327, inlinedAt: !16356)
!16359 = !DILocation(line: 574, column: 2, scope: !16351)
!16360 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3262, file: !3262, line: 1187, type: !3263, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16361)
!16361 = !{!16362}
!16362 = !DILocalVariable(name: "t", arg: 1, scope: !16360, file: !3262, line: 1187, type: !120)
!16363 = !DILocation(line: 0, scope: !16360)
!16364 = !DILocation(line: 0, scope: !14422, inlinedAt: !16365)
!16365 = distinct !DILocation(line: 1190, column: 9, scope: !16360)
!16366 = !DILocation(line: 145, column: 13, scope: !16367, inlinedAt: !16365)
!16367 = distinct !DILexicalBlock(scope: !14440, file: !3262, line: 144, column: 10)
!16368 = !DILocation(line: 1190, column: 2, scope: !16360)
!16369 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2404, file: !2404, line: 1517, type: !16240, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16370)
!16370 = !{!16371}
!16371 = !DILocalVariable(name: "thread", arg: 1, scope: !16369, file: !2404, line: 1517, type: !16098)
!16372 = !DILocation(line: 0, scope: !16369)
!16373 = !DILocation(line: 1521, column: 6, scope: !16374)
!16374 = distinct !DILexicalBlock(scope: !16369, file: !2404, line: 1521, column: 6)
!16375 = !DILocation(line: 1521, column: 6, scope: !16369)
!16376 = !DILocation(line: 1525, column: 6, scope: !16377)
!16377 = distinct !DILexicalBlock(scope: !16369, file: !2404, line: 1525, column: 6)
!16378 = !DILocation(line: 1525, column: 37, scope: !16377)
!16379 = !DILocation(line: 1525, column: 6, scope: !16369)
!16380 = !DILocation(line: 1527, column: 20, scope: !16381)
!16381 = distinct !DILexicalBlock(scope: !16382, file: !2404, line: 1527, column: 7)
!16382 = distinct !DILexicalBlock(scope: !16377, file: !2404, line: 1525, column: 42)
!16383 = !DILocation(line: 1527, column: 33, scope: !16381)
!16384 = !DILocation(line: 1527, column: 7, scope: !16382)
!16385 = !DILocation(line: 1532, column: 2, scope: !16369)
!16386 = !DILocation(line: 1533, column: 2, scope: !16369)
!16387 = !DILocation(line: 1031, column: 3, scope: !15089, inlinedAt: !16388)
!16388 = distinct !DILocation(line: 48, column: 10, scope: !15093, inlinedAt: !16389)
!16389 = distinct !DILocation(line: 1537, column: 7, scope: !16390)
!16390 = distinct !DILexicalBlock(scope: !16369, file: !2404, line: 1537, column: 6)
!16391 = !DILocation(line: 0, scope: !15089, inlinedAt: !16388)
!16392 = !DILocation(line: 48, column: 9, scope: !15093, inlinedAt: !16389)
!16393 = !DILocation(line: 1537, column: 6, scope: !16369)
!16394 = !DILocation(line: 1538, column: 3, scope: !16395)
!16395 = distinct !DILexicalBlock(scope: !16390, file: !2404, line: 1537, column: 25)
!16396 = !DILocation(line: 1539, column: 2, scope: !16395)
!16397 = !DILocation(line: 1540, column: 1, scope: !16369)
!16398 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13524, file: !13524, line: 101, type: !14503, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16399)
!16399 = !{!16400}
!16400 = !DILocalVariable(name: "thread", arg: 1, scope: !16398, file: !13524, line: 101, type: !2296)
!16401 = !DILocation(line: 0, scope: !16398)
!16402 = !DILocation(line: 103, column: 23, scope: !16398)
!16403 = !DILocation(line: 103, column: 36, scope: !16398)
!16404 = !DILocation(line: 103, column: 55, scope: !16398)
!16405 = !DILocation(line: 103, column: 2, scope: !16398)
!16406 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2404, file: !2404, line: 1567, type: !16407, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16409)
!16407 = !DISubroutineType(types: !16408)
!16408 = !{!16098}
!16409 = !{!16410}
!16410 = !DILocalVariable(name: "ret", scope: !16406, file: !2404, line: 1577, type: !16098)
!16411 = !DILocation(line: 1577, column: 30, scope: !16406)
!16412 = !DILocation(line: 0, scope: !16406)
!16413 = !DILocation(line: 1582, column: 2, scope: !16406)
!16414 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2404, file: !2404, line: 1593, type: !7733, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !2102)
!16415 = !DILocation(line: 1031, column: 3, scope: !15089, inlinedAt: !16416)
!16416 = distinct !DILocation(line: 48, column: 10, scope: !15093, inlinedAt: !16417)
!16417 = distinct !DILocation(line: 1595, column: 10, scope: !16414)
!16418 = !DILocation(line: 0, scope: !15089, inlinedAt: !16416)
!16419 = !DILocation(line: 48, column: 9, scope: !15093, inlinedAt: !16417)
!16420 = !DILocation(line: 1595, column: 27, scope: !16414)
!16421 = !DILocation(line: 1595, column: 41, scope: !16414)
!16422 = !DILocation(line: 1595, column: 30, scope: !16414)
!16423 = !DILocation(line: 1595, column: 2, scope: !16414)
!16424 = distinct !DISubprogram(name: "z_thread_abort", scope: !2404, file: !2404, line: 1725, type: !14320, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16425)
!16425 = !{!16426, !16427}
!16426 = !DILocalVariable(name: "thread", arg: 1, scope: !16424, file: !2404, line: 1725, type: !2296)
!16427 = !DILocalVariable(name: "key", scope: !16424, file: !2404, line: 1727, type: !14354)
!16428 = !DILocation(line: 0, scope: !16424)
!16429 = !DILocation(line: 0, scope: !14362, inlinedAt: !16430)
!16430 = distinct !DILocation(line: 1727, column: 25, scope: !16424)
!16431 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !16432)
!16432 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !16430)
!16433 = !DILocation(line: 0, scope: !14371, inlinedAt: !16432)
!16434 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !16430)
!16435 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !16430)
!16436 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !16430)
!16437 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !16430)
!16438 = !DILocation(line: 1729, column: 20, scope: !16439)
!16439 = distinct !DILexicalBlock(scope: !16424, file: !2404, line: 1729, column: 6)
!16440 = !DILocation(line: 1729, column: 33, scope: !16439)
!16441 = !DILocation(line: 1729, column: 48, scope: !16439)
!16442 = !DILocation(line: 1729, column: 6, scope: !16424)
!16443 = !DILocation(line: 0, scope: !14396, inlinedAt: !16444)
!16444 = distinct !DILocation(line: 1730, column: 3, scope: !16445)
!16445 = distinct !DILexicalBlock(scope: !16439, file: !2404, line: 1729, column: 54)
!16446 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !16444)
!16447 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !16444)
!16448 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !16444)
!16449 = !DILocation(line: 0, scope: !14410, inlinedAt: !16450)
!16450 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !16444)
!16451 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !16450)
!16452 = !DILocation(line: 1731, column: 3, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16454, file: !2404, line: 1731, column: 3)
!16454 = distinct !DILexicalBlock(scope: !16455, file: !2404, line: 1731, column: 3)
!16455 = distinct !DILexicalBlock(scope: !16445, file: !2404, line: 1731, column: 3)
!16456 = !DILocation(line: 1736, column: 20, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16424, file: !2404, line: 1736, column: 6)
!16458 = !DILocation(line: 1736, column: 33, scope: !16457)
!16459 = !DILocation(line: 1736, column: 49, scope: !16457)
!16460 = !DILocation(line: 1736, column: 6, scope: !16424)
!16461 = !DILocation(line: 0, scope: !14396, inlinedAt: !16462)
!16462 = distinct !DILocation(line: 1737, column: 3, scope: !16463)
!16463 = distinct !DILexicalBlock(scope: !16457, file: !2404, line: 1736, column: 56)
!16464 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !16462)
!16465 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !16462)
!16466 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !16462)
!16467 = !DILocation(line: 0, scope: !14410, inlinedAt: !16468)
!16468 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !16462)
!16469 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !16468)
!16470 = !DILocation(line: 1738, column: 3, scope: !16463)
!16471 = !DILocation(line: 1775, column: 2, scope: !16424)
!16472 = !DILocation(line: 1776, column: 16, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16424, file: !2404, line: 1776, column: 6)
!16474 = !DILocation(line: 1776, column: 13, scope: !16473)
!16475 = !DILocation(line: 1776, column: 25, scope: !16473)
!16476 = !DILocation(line: 1031, column: 3, scope: !15089, inlinedAt: !16477)
!16477 = distinct !DILocation(line: 48, column: 10, scope: !15093, inlinedAt: !16478)
!16478 = distinct !DILocation(line: 1776, column: 29, scope: !16473)
!16479 = !DILocation(line: 0, scope: !15089, inlinedAt: !16477)
!16480 = !DILocation(line: 48, column: 9, scope: !15093, inlinedAt: !16478)
!16481 = !DILocation(line: 1776, column: 6, scope: !16424)
!16482 = !DILocation(line: 0, scope: !15040, inlinedAt: !16483)
!16483 = distinct !DILocation(line: 1777, column: 3, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16473, file: !2404, line: 1776, column: 47)
!16485 = !DILocation(line: 0, scope: !15049, inlinedAt: !16486)
!16486 = distinct !DILocation(line: 195, column: 2, scope: !15040, inlinedAt: !16483)
!16487 = !DILocation(line: 225, column: 2, scope: !15056, inlinedAt: !16486)
!16488 = !DILocation(line: 225, column: 2, scope: !15057, inlinedAt: !16486)
!16489 = !DILocation(line: 225, column: 2, scope: !15060, inlinedAt: !16486)
!16490 = !DILocation(line: 196, column: 9, scope: !15040, inlinedAt: !16483)
!16491 = !DILocation(line: 1778, column: 3, scope: !16492)
!16492 = distinct !DILexicalBlock(scope: !16493, file: !2404, line: 1778, column: 3)
!16493 = distinct !DILexicalBlock(scope: !16494, file: !2404, line: 1778, column: 3)
!16494 = distinct !DILexicalBlock(scope: !16484, file: !2404, line: 1778, column: 3)
!16495 = !DILocation(line: 0, scope: !14396, inlinedAt: !16496)
!16496 = distinct !DILocation(line: 1780, column: 2, scope: !16424)
!16497 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !16496)
!16498 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !16496)
!16499 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !16496)
!16500 = !DILocation(line: 0, scope: !14410, inlinedAt: !16501)
!16501 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !16496)
!16502 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !16501)
!16503 = !DILocation(line: 1781, column: 1, scope: !16424)
!16504 = distinct !DISubprogram(name: "end_thread", scope: !2404, file: !2404, line: 1690, type: !14320, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16505)
!16505 = !{!16506}
!16506 = !DILocalVariable(name: "thread", arg: 1, scope: !16504, file: !2404, line: 1690, type: !2296)
!16507 = !DILocation(line: 0, scope: !16504)
!16508 = !DILocation(line: 1695, column: 20, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !16504, file: !2404, line: 1695, column: 6)
!16510 = !DILocation(line: 1695, column: 33, scope: !16509)
!16511 = !DILocation(line: 1695, column: 49, scope: !16509)
!16512 = !DILocation(line: 1695, column: 6, scope: !16504)
!16513 = !DILocation(line: 1697, column: 29, scope: !16514)
!16514 = distinct !DILexicalBlock(scope: !16509, file: !2404, line: 1695, column: 56)
!16515 = !DILocation(line: 1698, column: 7, scope: !16516)
!16516 = distinct !DILexicalBlock(scope: !16514, file: !2404, line: 1698, column: 7)
!16517 = !DILocation(line: 1698, column: 7, scope: !16514)
!16518 = !DILocation(line: 0, scope: !14554, inlinedAt: !16519)
!16519 = distinct !DILocation(line: 1699, column: 4, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16516, file: !2404, line: 1698, column: 35)
!16521 = !DILocation(line: 266, column: 28, scope: !14554, inlinedAt: !16519)
!16522 = !DILocation(line: 0, scope: !14562, inlinedAt: !16523)
!16523 = distinct !DILocation(line: 268, column: 3, scope: !14566, inlinedAt: !16519)
!16524 = !DILocation(line: 234, column: 2, scope: !14562, inlinedAt: !16523)
!16525 = !DILocation(line: 1700, column: 3, scope: !16520)
!16526 = !DILocation(line: 1701, column: 20, scope: !16527)
!16527 = distinct !DILexicalBlock(scope: !16514, file: !2404, line: 1701, column: 7)
!16528 = !DILocation(line: 1701, column: 30, scope: !16527)
!16529 = !DILocation(line: 1701, column: 7, scope: !16514)
!16530 = !DILocation(line: 1702, column: 4, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16527, file: !2404, line: 1701, column: 39)
!16532 = !DILocation(line: 1703, column: 3, scope: !16531)
!16533 = !DILocation(line: 1704, column: 9, scope: !16514)
!16534 = !DILocation(line: 1705, column: 23, scope: !16514)
!16535 = !DILocation(line: 1705, column: 3, scope: !16514)
!16536 = !DILocation(line: 1706, column: 3, scope: !16514)
!16537 = !DILocation(line: 1722, column: 2, scope: !16514)
!16538 = !DILocation(line: 1723, column: 1, scope: !16504)
!16539 = distinct !DISubprogram(name: "unpend_all", scope: !2404, file: !2404, line: 1674, type: !16540, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16542)
!16540 = !DISubroutineType(types: !16541)
!16541 = !{null, !2327}
!16542 = !{!16543, !16544}
!16543 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16539, file: !2404, line: 1674, type: !2327)
!16544 = !DILocalVariable(name: "thread", scope: !16539, file: !2404, line: 1676, type: !2296)
!16545 = !DILocation(line: 0, scope: !16539)
!16546 = !DILocation(line: 1678, column: 19, scope: !16539)
!16547 = !DILocation(line: 1678, column: 41, scope: !16539)
!16548 = !DILocation(line: 1678, column: 2, scope: !16539)
!16549 = !DILocation(line: 1679, column: 3, scope: !16550)
!16550 = distinct !DILexicalBlock(scope: !16539, file: !2404, line: 1678, column: 50)
!16551 = !DILocation(line: 1680, column: 9, scope: !16550)
!16552 = !DILocalVariable(name: "thread", arg: 1, scope: !16553, file: !13544, line: 65, type: !2296)
!16553 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13544, file: !13544, line: 65, type: !16554, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16556)
!16554 = !DISubroutineType(types: !16555)
!16555 = !{null, !2296, !32}
!16556 = !{!16552, !16557}
!16557 = !DILocalVariable(name: "value", arg: 2, scope: !16553, file: !13544, line: 65, type: !32)
!16558 = !DILocation(line: 0, scope: !16553, inlinedAt: !16559)
!16559 = distinct !DILocation(line: 1681, column: 3, scope: !16550)
!16560 = !DILocation(line: 67, column: 15, scope: !16553, inlinedAt: !16559)
!16561 = !DILocation(line: 67, column: 33, scope: !16553, inlinedAt: !16559)
!16562 = !DILocation(line: 1682, column: 3, scope: !16550)
!16563 = distinct !{!16563, !16548, !16564}
!16564 = !DILocation(line: 1683, column: 2, scope: !16539)
!16565 = !DILocation(line: 1684, column: 1, scope: !16539)
!16566 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2404, file: !2404, line: 1794, type: !16567, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16569)
!16567 = !DISubroutineType(types: !16568)
!16568 = !{!119, !2296, !15250}
!16569 = !{!16570, !16571, !16572, !16573}
!16570 = !DILocalVariable(name: "thread", arg: 1, scope: !16566, file: !2404, line: 1794, type: !2296)
!16571 = !DILocalVariable(name: "timeout", arg: 2, scope: !16566, file: !2404, line: 1794, type: !15250)
!16572 = !DILocalVariable(name: "key", scope: !16566, file: !2404, line: 1796, type: !14354)
!16573 = !DILocalVariable(name: "ret", scope: !16566, file: !2404, line: 1797, type: !119)
!16574 = !DILocation(line: 0, scope: !16566)
!16575 = !DILocation(line: 0, scope: !14362, inlinedAt: !16576)
!16576 = distinct !DILocation(line: 1796, column: 25, scope: !16566)
!16577 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !16578)
!16578 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !16576)
!16579 = !DILocation(line: 0, scope: !14371, inlinedAt: !16578)
!16580 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !16576)
!16581 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !16576)
!16582 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !16576)
!16583 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !16576)
!16584 = !DILocation(line: 1801, column: 20, scope: !16585)
!16585 = distinct !DILexicalBlock(scope: !16566, file: !2404, line: 1801, column: 6)
!16586 = !DILocation(line: 1801, column: 33, scope: !16585)
!16587 = !DILocation(line: 1801, column: 49, scope: !16585)
!16588 = !DILocation(line: 1801, column: 6, scope: !16566)
!16589 = !DILocation(line: 1803, column: 13, scope: !16590)
!16590 = distinct !DILexicalBlock(scope: !16585, file: !2404, line: 1803, column: 13)
!16591 = !DILocation(line: 1803, column: 13, scope: !16585)
!16592 = !DILocation(line: 1805, column: 24, scope: !16593)
!16593 = distinct !DILexicalBlock(scope: !16590, file: !2404, line: 1805, column: 13)
!16594 = !DILocation(line: 1805, column: 21, scope: !16593)
!16595 = !DILocation(line: 1805, column: 34, scope: !16593)
!16596 = !DILocation(line: 1806, column: 20, scope: !16593)
!16597 = !DILocation(line: 1806, column: 44, scope: !16593)
!16598 = !DILocation(line: 1806, column: 30, scope: !16593)
!16599 = !DILocation(line: 1805, column: 13, scope: !16590)
!16600 = !DILocation(line: 1031, column: 3, scope: !15089, inlinedAt: !16601)
!16601 = distinct !DILocation(line: 48, column: 10, scope: !15093, inlinedAt: !16602)
!16602 = distinct !DILocation(line: 1809, column: 3, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16604, file: !2404, line: 1809, column: 3)
!16604 = distinct !DILexicalBlock(scope: !16605, file: !2404, line: 1809, column: 3)
!16605 = distinct !DILexicalBlock(scope: !16593, file: !2404, line: 1808, column: 9)
!16606 = !DILocation(line: 0, scope: !15089, inlinedAt: !16601)
!16607 = !DILocation(line: 48, column: 9, scope: !15093, inlinedAt: !16602)
!16608 = !DILocation(line: 1809, column: 3, scope: !16604)
!16609 = !DILocation(line: 1809, column: 3, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16603, file: !2404, line: 1809, column: 3)
!16611 = !DILocation(line: 1810, column: 23, scope: !16605)
!16612 = !DILocation(line: 1810, column: 42, scope: !16605)
!16613 = !DILocation(line: 1810, column: 3, scope: !16605)
!16614 = !DILocation(line: 1811, column: 22, scope: !16605)
!16615 = !DILocation(line: 1811, column: 3, scope: !16605)
!16616 = !DILocation(line: 0, scope: !15040, inlinedAt: !16617)
!16617 = distinct !DILocation(line: 1814, column: 9, scope: !16605)
!16618 = !DILocation(line: 0, scope: !15049, inlinedAt: !16619)
!16619 = distinct !DILocation(line: 195, column: 2, scope: !15040, inlinedAt: !16617)
!16620 = !DILocation(line: 225, column: 2, scope: !15056, inlinedAt: !16619)
!16621 = !DILocation(line: 225, column: 2, scope: !15057, inlinedAt: !16619)
!16622 = !DILocation(line: 225, column: 2, scope: !15060, inlinedAt: !16619)
!16623 = !DILocation(line: 196, column: 9, scope: !15040, inlinedAt: !16617)
!16624 = !DILocation(line: 1817, column: 3, scope: !16605)
!16625 = !DILocation(line: 0, scope: !16585)
!16626 = !DILocation(line: 0, scope: !14396, inlinedAt: !16627)
!16627 = distinct !DILocation(line: 1822, column: 2, scope: !16566)
!16628 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !16627)
!16629 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !16627)
!16630 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !16627)
!16631 = !DILocation(line: 0, scope: !14410, inlinedAt: !16632)
!16632 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !16627)
!16633 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !16632)
!16634 = !DILocation(line: 1823, column: 2, scope: !16566)
!16635 = !DILocation(line: 1824, column: 1, scope: !16566)
!16636 = distinct !DISubprogram(name: "z_sched_wake", scope: !2404, file: !2404, line: 1882, type: !16637, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16639)
!16637 = !DISubroutineType(types: !16638)
!16638 = !{!345, !2327, !119, !113}
!16639 = !{!16640, !16641, !16642, !16643, !16644, !16645, !16647}
!16640 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16636, file: !2404, line: 1882, type: !2327)
!16641 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16636, file: !2404, line: 1882, type: !119)
!16642 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16636, file: !2404, line: 1882, type: !113)
!16643 = !DILocalVariable(name: "thread", scope: !16636, file: !2404, line: 1884, type: !2296)
!16644 = !DILocalVariable(name: "ret", scope: !16636, file: !2404, line: 1885, type: !345)
!16645 = !DILocalVariable(name: "__i", scope: !16646, file: !2404, line: 1887, type: !14354)
!16646 = distinct !DILexicalBlock(scope: !16636, file: !2404, line: 1887, column: 2)
!16647 = !DILocalVariable(name: "__key", scope: !16646, file: !2404, line: 1887, type: !14354)
!16648 = !DILocation(line: 0, scope: !16636)
!16649 = !DILocation(line: 0, scope: !16646)
!16650 = !DILocation(line: 0, scope: !14362, inlinedAt: !16651)
!16651 = distinct !DILocation(line: 1887, column: 2, scope: !16646)
!16652 = !DILocation(line: 55, column: 2, scope: !14371, inlinedAt: !16653)
!16653 = distinct !DILocation(line: 145, column: 10, scope: !14362, inlinedAt: !16651)
!16654 = !DILocation(line: 0, scope: !14371, inlinedAt: !16653)
!16655 = !DILocation(line: 148, column: 2, scope: !14379, inlinedAt: !16651)
!16656 = !DILocation(line: 148, column: 2, scope: !14380, inlinedAt: !16651)
!16657 = !DILocation(line: 148, column: 2, scope: !14383, inlinedAt: !16651)
!16658 = !DILocation(line: 160, column: 2, scope: !14362, inlinedAt: !16651)
!16659 = !DILocation(line: 1888, column: 12, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16661, file: !2404, line: 1887, column: 26)
!16661 = distinct !DILexicalBlock(scope: !16646, file: !2404, line: 1887, column: 2)
!16662 = !DILocation(line: 1890, column: 14, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16660, file: !2404, line: 1890, column: 7)
!16664 = !DILocation(line: 1890, column: 7, scope: !16660)
!16665 = !DILocalVariable(name: "thread", arg: 1, scope: !16666, file: !16667, line: 134, type: !2296)
!16666 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16667, file: !16667, line: 134, type: !16668, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16670)
!16667 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16668 = !DISubroutineType(types: !16669)
!16669 = !{null, !2296, !32, !113}
!16670 = !{!16665, !16671, !16672}
!16671 = !DILocalVariable(name: "value", arg: 2, scope: !16666, file: !16667, line: 135, type: !32)
!16672 = !DILocalVariable(name: "data", arg: 3, scope: !16666, file: !16667, line: 136, type: !113)
!16673 = !DILocation(line: 0, scope: !16666, inlinedAt: !16674)
!16674 = distinct !DILocation(line: 1891, column: 4, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16663, file: !2404, line: 1890, column: 23)
!16676 = !DILocation(line: 0, scope: !16553, inlinedAt: !16677)
!16677 = distinct !DILocation(line: 138, column: 2, scope: !16666, inlinedAt: !16674)
!16678 = !DILocation(line: 67, column: 15, scope: !16553, inlinedAt: !16677)
!16679 = !DILocation(line: 67, column: 33, scope: !16553, inlinedAt: !16677)
!16680 = !DILocation(line: 139, column: 15, scope: !16666, inlinedAt: !16674)
!16681 = !DILocation(line: 139, column: 25, scope: !16666, inlinedAt: !16674)
!16682 = !DILocation(line: 1894, column: 4, scope: !16675)
!16683 = !DILocation(line: 1895, column: 10, scope: !16675)
!16684 = !DILocation(line: 1896, column: 4, scope: !16675)
!16685 = !DILocation(line: 1898, column: 3, scope: !16675)
!16686 = !DILocation(line: 0, scope: !14396, inlinedAt: !16687)
!16687 = distinct !DILocation(line: 1887, column: 2, scope: !16661)
!16688 = !DILocation(line: 194, column: 2, scope: !14404, inlinedAt: !16687)
!16689 = !DILocation(line: 194, column: 2, scope: !14405, inlinedAt: !16687)
!16690 = !DILocation(line: 194, column: 2, scope: !14408, inlinedAt: !16687)
!16691 = !DILocation(line: 0, scope: !14410, inlinedAt: !16692)
!16692 = distinct !DILocation(line: 215, column: 2, scope: !14396, inlinedAt: !16687)
!16693 = !DILocation(line: 95, column: 2, scope: !14410, inlinedAt: !16692)
!16694 = !DILocation(line: 1901, column: 2, scope: !16636)
!16695 = distinct !DISubprogram(name: "z_sched_wait", scope: !2404, file: !2404, line: 1904, type: !16696, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2293, retainedNodes: !16699)
!16696 = !DISubroutineType(types: !16697)
!16697 = !{!119, !14365, !14354, !2327, !15250, !16698}
!16698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!16699 = !{!16700, !16701, !16702, !16703, !16704, !16705}
!16700 = !DILocalVariable(name: "lock", arg: 1, scope: !16695, file: !2404, line: 1904, type: !14365)
!16701 = !DILocalVariable(name: "key", arg: 2, scope: !16695, file: !2404, line: 1904, type: !14354)
!16702 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16695, file: !2404, line: 1905, type: !2327)
!16703 = !DILocalVariable(name: "timeout", arg: 4, scope: !16695, file: !2404, line: 1905, type: !15250)
!16704 = !DILocalVariable(name: "data", arg: 5, scope: !16695, file: !2404, line: 1905, type: !16698)
!16705 = !DILocalVariable(name: "ret", scope: !16695, file: !2404, line: 1907, type: !119)
!16706 = !DILocation(line: 0, scope: !16695)
!16707 = !DILocation(line: 1907, column: 12, scope: !16695)
!16708 = !DILocation(line: 1909, column: 11, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16695, file: !2404, line: 1909, column: 6)
!16710 = !DILocation(line: 1909, column: 6, scope: !16695)
!16711 = !DILocation(line: 1910, column: 11, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16709, file: !2404, line: 1909, column: 20)
!16713 = !DILocation(line: 1910, column: 26, scope: !16712)
!16714 = !DILocation(line: 1910, column: 9, scope: !16712)
!16715 = !DILocation(line: 1911, column: 2, scope: !16712)
!16716 = !DILocation(line: 1912, column: 2, scope: !16695)
!16717 = distinct !DISubprogram(name: "z_data_copy", scope: !16718, file: !16718, line: 22, type: !3019, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3002, retainedNodes: !2102)
!16718 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16719 = !DILocation(line: 24, column: 2, scope: !16717)
!16720 = !DILocation(line: 27, column: 2, scope: !16717)
!16721 = !DILocation(line: 71, column: 1, scope: !16717)
!16722 = distinct !DISubprogram(name: "z_add_timeout", scope: !2441, file: !2441, line: 88, type: !16723, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16729)
!16723 = !DISubroutineType(types: !16724)
!16724 = !{null, !2414, !2433, !16725}
!16725 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !16726)
!16726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !16727)
!16727 = !{!16728}
!16728 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16726, file: !115, line: 66, baseType: !114, size: 64)
!16729 = !{!16730, !16731, !16732, !16733, !16739, !16740, !16743, !16746}
!16730 = !DILocalVariable(name: "to", arg: 1, scope: !16722, file: !2441, line: 88, type: !2414)
!16731 = !DILocalVariable(name: "fn", arg: 2, scope: !16722, file: !2441, line: 88, type: !2433)
!16732 = !DILocalVariable(name: "timeout", arg: 3, scope: !16722, file: !2441, line: 89, type: !16725)
!16733 = !DILocalVariable(name: "__i", scope: !16734, file: !2441, line: 102, type: !16735)
!16734 = distinct !DILexicalBlock(scope: !16722, file: !2441, line: 102, column: 2)
!16735 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !16736)
!16736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !16737)
!16737 = !{!16738}
!16738 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16736, file: !259, line: 33, baseType: !119, size: 32)
!16739 = !DILocalVariable(name: "__key", scope: !16734, file: !2441, line: 102, type: !16735)
!16740 = !DILocalVariable(name: "t", scope: !16741, file: !2441, line: 103, type: !2414)
!16741 = distinct !DILexicalBlock(scope: !16742, file: !2441, line: 102, column: 24)
!16742 = distinct !DILexicalBlock(scope: !16734, file: !2441, line: 102, column: 2)
!16743 = !DILocalVariable(name: "ticks", scope: !16744, file: !2441, line: 107, type: !114)
!16744 = distinct !DILexicalBlock(scope: !16745, file: !2441, line: 106, column: 39)
!16745 = distinct !DILexicalBlock(scope: !16741, file: !2441, line: 105, column: 7)
!16746 = !DILocalVariable(name: "next_time", scope: !16747, file: !2441, line: 137, type: !772)
!16747 = distinct !DILexicalBlock(scope: !16748, file: !2441, line: 127, column: 22)
!16748 = distinct !DILexicalBlock(scope: !16741, file: !2441, line: 127, column: 7)
!16749 = !DILocation(line: 0, scope: !16722)
!16750 = !DILocation(line: 91, column: 6, scope: !16751)
!16751 = distinct !DILexicalBlock(scope: !16722, file: !2441, line: 91, column: 6)
!16752 = !DILocation(line: 91, column: 6, scope: !16722)
!16753 = !DILocation(line: 99, column: 2, scope: !16754)
!16754 = distinct !DILexicalBlock(scope: !16755, file: !2441, line: 99, column: 2)
!16755 = distinct !DILexicalBlock(scope: !16722, file: !2441, line: 99, column: 2)
!16756 = !DILocation(line: 99, column: 2, scope: !16755)
!16757 = !DILocation(line: 99, column: 2, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !16754, file: !2441, line: 99, column: 2)
!16759 = !DILocation(line: 100, column: 6, scope: !16722)
!16760 = !DILocation(line: 100, column: 9, scope: !16722)
!16761 = !DILocation(line: 0, scope: !16734)
!16762 = !DILocalVariable(name: "l", arg: 1, scope: !16763, file: !259, line: 136, type: !16766)
!16763 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !16764, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16767)
!16764 = !DISubroutineType(types: !16765)
!16765 = !{!16735, !16766}
!16766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!16767 = !{!16762, !16768}
!16768 = !DILocalVariable(name: "k", scope: !16763, file: !259, line: 139, type: !16735)
!16769 = !DILocation(line: 0, scope: !16763, inlinedAt: !16770)
!16770 = distinct !DILocation(line: 102, column: 2, scope: !16734)
!16771 = !DILocation(line: 55, column: 2, scope: !16772, inlinedAt: !16776)
!16772 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6058, file: !6058, line: 42, type: !6059, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16773)
!16773 = !{!16774, !16775}
!16774 = !DILocalVariable(name: "key", scope: !16772, file: !6058, line: 44, type: !32)
!16775 = !DILocalVariable(name: "tmp", scope: !16772, file: !6058, line: 53, type: !32)
!16776 = distinct !DILocation(line: 145, column: 10, scope: !16763, inlinedAt: !16770)
!16777 = !{i64 2287626}
!16778 = !DILocation(line: 0, scope: !16772, inlinedAt: !16776)
!16779 = !DILocation(line: 148, column: 2, scope: !16780, inlinedAt: !16770)
!16780 = distinct !DILexicalBlock(scope: !16781, file: !259, line: 148, column: 2)
!16781 = distinct !DILexicalBlock(scope: !16763, file: !259, line: 148, column: 2)
!16782 = !DILocation(line: 148, column: 2, scope: !16781, inlinedAt: !16770)
!16783 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !16770)
!16784 = distinct !DILexicalBlock(scope: !16780, file: !259, line: 148, column: 2)
!16785 = !DILocation(line: 160, column: 2, scope: !16763, inlinedAt: !16770)
!16786 = !DILocation(line: 106, column: 33, scope: !16745)
!16787 = !DILocation(line: 105, column: 7, scope: !16741)
!16788 = !DILocation(line: 107, column: 50, scope: !16744)
!16789 = !DILocation(line: 107, column: 48, scope: !16744)
!16790 = !DILocation(line: 0, scope: !16744)
!16791 = !DILocation(line: 109, column: 17, scope: !16744)
!16792 = !DILocation(line: 110, column: 3, scope: !16744)
!16793 = !DILocation(line: 111, column: 31, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16745, file: !2441, line: 110, column: 10)
!16795 = !DILocation(line: 111, column: 37, scope: !16794)
!16796 = !DILocation(line: 111, column: 35, scope: !16794)
!16797 = !DILocation(line: 0, scope: !16745)
!16798 = !DILocation(line: 109, column: 8, scope: !16744)
!16799 = !DILocation(line: 109, column: 15, scope: !16744)
!16800 = !DILocation(line: 114, column: 12, scope: !16801)
!16801 = distinct !DILexicalBlock(scope: !16741, file: !2441, line: 114, column: 3)
!16802 = !DILocation(line: 0, scope: !16741)
!16803 = !DILocation(line: 114, column: 3, scope: !16801)
!16804 = !DILocation(line: 115, column: 24, scope: !16805)
!16805 = distinct !DILexicalBlock(scope: !16806, file: !2441, line: 115, column: 8)
!16806 = distinct !DILexicalBlock(scope: !16807, file: !2441, line: 114, column: 45)
!16807 = distinct !DILexicalBlock(scope: !16801, file: !2441, line: 114, column: 3)
!16808 = !DILocation(line: 115, column: 11, scope: !16805)
!16809 = !DILocation(line: 115, column: 18, scope: !16805)
!16810 = !DILocation(line: 115, column: 8, scope: !16806)
!16811 = !DILocation(line: 116, column: 15, scope: !16812)
!16812 = distinct !DILexicalBlock(scope: !16805, file: !2441, line: 115, column: 32)
!16813 = !DILocation(line: 117, column: 26, scope: !16812)
!16814 = !DILocation(line: 117, column: 5, scope: !16812)
!16815 = !DILocation(line: 123, column: 7, scope: !16741)
!16816 = !DILocation(line: 120, column: 15, scope: !16806)
!16817 = !DILocation(line: 114, column: 36, scope: !16807)
!16818 = distinct !{!16818, !16803, !16819}
!16819 = !DILocation(line: 121, column: 3, scope: !16801)
!16820 = !DILocation(line: 124, column: 4, scope: !16821)
!16821 = distinct !DILexicalBlock(scope: !16822, file: !2441, line: 123, column: 18)
!16822 = distinct !DILexicalBlock(scope: !16741, file: !2441, line: 123, column: 7)
!16823 = !DILocation(line: 125, column: 3, scope: !16821)
!16824 = !DILocation(line: 127, column: 13, scope: !16748)
!16825 = !DILocation(line: 127, column: 10, scope: !16748)
!16826 = !DILocation(line: 127, column: 7, scope: !16741)
!16827 = !DILocation(line: 137, column: 24, scope: !16747)
!16828 = !DILocation(line: 0, scope: !16747)
!16829 = !DILocation(line: 139, column: 18, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16747, file: !2441, line: 139, column: 8)
!16831 = !DILocation(line: 139, column: 23, scope: !16830)
!16832 = !DILocation(line: 141, column: 5, scope: !16833)
!16833 = distinct !DILexicalBlock(scope: !16830, file: !2441, line: 140, column: 48)
!16834 = !DILocation(line: 142, column: 4, scope: !16833)
!16835 = !DILocalVariable(name: "key", arg: 2, scope: !16836, file: !259, line: 190, type: !16735)
!16836 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !16837, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16839)
!16837 = !DISubroutineType(types: !16838)
!16838 = !{null, !16766, !16735}
!16839 = !{!16840, !16835}
!16840 = !DILocalVariable(name: "l", arg: 1, scope: !16836, file: !259, line: 189, type: !16766)
!16841 = !DILocation(line: 0, scope: !16836, inlinedAt: !16842)
!16842 = distinct !DILocation(line: 102, column: 2, scope: !16742)
!16843 = !DILocation(line: 194, column: 2, scope: !16844, inlinedAt: !16842)
!16844 = distinct !DILexicalBlock(scope: !16845, file: !259, line: 194, column: 2)
!16845 = distinct !DILexicalBlock(scope: !16836, file: !259, line: 194, column: 2)
!16846 = !DILocation(line: 194, column: 2, scope: !16845, inlinedAt: !16842)
!16847 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !16842)
!16848 = distinct !DILexicalBlock(scope: !16844, file: !259, line: 194, column: 2)
!16849 = !DILocalVariable(name: "key", arg: 1, scope: !16850, file: !6058, line: 84, type: !32)
!16850 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6058, file: !6058, line: 84, type: !6069, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16851)
!16851 = !{!16849}
!16852 = !DILocation(line: 0, scope: !16850, inlinedAt: !16853)
!16853 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !16842)
!16854 = !DILocation(line: 95, column: 2, scope: !16850, inlinedAt: !16853)
!16855 = !{i64 2288443}
!16856 = !DILocation(line: 148, column: 1, scope: !16722)
!16857 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !153, file: !153, line: 225, type: !16858, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16862)
!16858 = !DISubroutineType(types: !16859)
!16859 = !{!345, !16860}
!16860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16861, size: 32)
!16861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2418)
!16862 = !{!16863}
!16863 = !DILocalVariable(name: "node", arg: 1, scope: !16857, file: !153, line: 225, type: !16860)
!16864 = !DILocation(line: 0, scope: !16857)
!16865 = !DILocation(line: 227, column: 15, scope: !16857)
!16866 = !DILocation(line: 227, column: 20, scope: !16857)
!16867 = !DILocation(line: 227, column: 2, scope: !16857)
!16868 = distinct !DISubprogram(name: "elapsed", scope: !2441, file: !2441, line: 62, type: !16869, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !2102)
!16869 = !DISubroutineType(types: !16870)
!16870 = !{!772}
!16871 = !DILocation(line: 64, column: 9, scope: !16868)
!16872 = !DILocation(line: 64, column: 28, scope: !16868)
!16873 = !DILocation(line: 64, column: 35, scope: !16868)
!16874 = !DILocation(line: 64, column: 2, scope: !16868)
!16875 = distinct !DISubprogram(name: "first", scope: !2441, file: !2441, line: 39, type: !16876, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16878)
!16876 = !DISubroutineType(types: !16877)
!16877 = !{!2414}
!16878 = !{!16879}
!16879 = !DILocalVariable(name: "t", scope: !16875, file: !2441, line: 41, type: !16880)
!16880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 32)
!16881 = !DILocation(line: 41, column: 19, scope: !16875)
!16882 = !DILocation(line: 0, scope: !16875)
!16883 = !DILocation(line: 43, column: 9, scope: !16875)
!16884 = !DILocation(line: 43, column: 2, scope: !16875)
!16885 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !153, file: !153, line: 443, type: !16886, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16888)
!16886 = !DISubroutineType(types: !16887)
!16887 = !{null, !16880, !16880}
!16888 = !{!16889, !16890, !16891}
!16889 = !DILocalVariable(name: "successor", arg: 1, scope: !16885, file: !153, line: 443, type: !16880)
!16890 = !DILocalVariable(name: "node", arg: 2, scope: !16885, file: !153, line: 443, type: !16880)
!16891 = !DILocalVariable(name: "prev", scope: !16885, file: !153, line: 445, type: !16892)
!16892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16880)
!16893 = !DILocation(line: 0, scope: !16885)
!16894 = !DILocation(line: 445, column: 39, scope: !16885)
!16895 = !DILocation(line: 447, column: 8, scope: !16885)
!16896 = !DILocation(line: 447, column: 13, scope: !16885)
!16897 = !DILocation(line: 448, column: 8, scope: !16885)
!16898 = !DILocation(line: 448, column: 13, scope: !16885)
!16899 = !DILocation(line: 449, column: 8, scope: !16885)
!16900 = !DILocation(line: 449, column: 13, scope: !16885)
!16901 = !DILocation(line: 450, column: 18, scope: !16885)
!16902 = !DILocation(line: 451, column: 1, scope: !16885)
!16903 = distinct !DISubprogram(name: "next", scope: !2441, file: !2441, line: 46, type: !16904, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16906)
!16904 = !DISubroutineType(types: !16905)
!16905 = !{!2414, !2414}
!16906 = !{!16907, !16908}
!16907 = !DILocalVariable(name: "t", arg: 1, scope: !16903, file: !2441, line: 46, type: !2414)
!16908 = !DILocalVariable(name: "n", scope: !16903, file: !2441, line: 48, type: !16880)
!16909 = !DILocation(line: 0, scope: !16903)
!16910 = !DILocation(line: 48, column: 58, scope: !16903)
!16911 = !DILocation(line: 48, column: 19, scope: !16903)
!16912 = !DILocation(line: 50, column: 9, scope: !16903)
!16913 = !DILocation(line: 50, column: 2, scope: !16903)
!16914 = distinct !DISubprogram(name: "sys_dlist_append", scope: !153, file: !153, line: 404, type: !16915, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16918)
!16915 = !DISubroutineType(types: !16916)
!16916 = !{null, !16917, !16880}
!16917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 32)
!16918 = !{!16919, !16920, !16921}
!16919 = !DILocalVariable(name: "list", arg: 1, scope: !16914, file: !153, line: 404, type: !16917)
!16920 = !DILocalVariable(name: "node", arg: 2, scope: !16914, file: !153, line: 404, type: !16880)
!16921 = !DILocalVariable(name: "tail", scope: !16914, file: !153, line: 406, type: !16892)
!16922 = !DILocation(line: 0, scope: !16914)
!16923 = !DILocation(line: 406, column: 34, scope: !16914)
!16924 = !DILocation(line: 408, column: 8, scope: !16914)
!16925 = !DILocation(line: 408, column: 13, scope: !16914)
!16926 = !DILocation(line: 409, column: 8, scope: !16914)
!16927 = !DILocation(line: 409, column: 13, scope: !16914)
!16928 = !DILocation(line: 411, column: 8, scope: !16914)
!16929 = !DILocation(line: 411, column: 13, scope: !16914)
!16930 = !DILocation(line: 412, column: 13, scope: !16914)
!16931 = !DILocation(line: 413, column: 1, scope: !16914)
!16932 = distinct !DISubprogram(name: "next_timeout", scope: !2441, file: !2441, line: 67, type: !16869, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16933)
!16933 = !{!16934, !16935, !16936}
!16934 = !DILocalVariable(name: "to", scope: !16932, file: !2441, line: 69, type: !2414)
!16935 = !DILocalVariable(name: "ticks_elapsed", scope: !16932, file: !2441, line: 70, type: !772)
!16936 = !DILocalVariable(name: "ret", scope: !16932, file: !2441, line: 71, type: !772)
!16937 = !DILocation(line: 69, column: 24, scope: !16932)
!16938 = !DILocation(line: 0, scope: !16932)
!16939 = !DILocation(line: 70, column: 26, scope: !16932)
!16940 = !DILocation(line: 73, column: 10, scope: !16941)
!16941 = distinct !DILexicalBlock(scope: !16932, file: !2441, line: 73, column: 6)
!16942 = !DILocation(line: 73, column: 19, scope: !16941)
!16943 = !DILocation(line: 74, column: 21, scope: !16941)
!16944 = !DILocation(line: 74, column: 30, scope: !16941)
!16945 = !DILocation(line: 74, column: 28, scope: !16941)
!16946 = !DILocation(line: 74, column: 45, scope: !16941)
!16947 = !DILocation(line: 73, column: 6, scope: !16932)
!16948 = !DILocation(line: 77, column: 9, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16941, file: !2441, line: 76, column: 9)
!16950 = !DILocation(line: 0, scope: !16941)
!16951 = !DILocation(line: 81, column: 20, scope: !16952)
!16952 = distinct !DILexicalBlock(scope: !16932, file: !2441, line: 81, column: 6)
!16953 = !DILocation(line: 81, column: 6, scope: !16952)
!16954 = !DILocation(line: 81, column: 32, scope: !16952)
!16955 = !DILocation(line: 85, column: 2, scope: !16932)
!16956 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !153, file: !153, line: 341, type: !16957, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16959)
!16957 = !DISubroutineType(types: !16958)
!16958 = !{!16880, !16917, !16880}
!16959 = !{!16960, !16961}
!16960 = !DILocalVariable(name: "list", arg: 1, scope: !16956, file: !153, line: 341, type: !16917)
!16961 = !DILocalVariable(name: "node", arg: 2, scope: !16956, file: !153, line: 342, type: !16880)
!16962 = !DILocation(line: 0, scope: !16956)
!16963 = !DILocation(line: 344, column: 15, scope: !16956)
!16964 = !DILocation(line: 344, column: 9, scope: !16956)
!16965 = !DILocation(line: 344, column: 26, scope: !16956)
!16966 = !DILocation(line: 344, column: 2, scope: !16956)
!16967 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !153, file: !153, line: 325, type: !16957, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16968)
!16968 = !{!16969, !16970}
!16969 = !DILocalVariable(name: "list", arg: 1, scope: !16967, file: !153, line: 325, type: !16917)
!16970 = !DILocalVariable(name: "node", arg: 2, scope: !16967, file: !153, line: 326, type: !16880)
!16971 = !DILocation(line: 0, scope: !16967)
!16972 = !DILocation(line: 328, column: 24, scope: !16967)
!16973 = !DILocation(line: 328, column: 15, scope: !16967)
!16974 = !DILocation(line: 328, column: 9, scope: !16967)
!16975 = !DILocation(line: 328, column: 45, scope: !16967)
!16976 = !DILocation(line: 328, column: 2, scope: !16967)
!16977 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !153, file: !153, line: 294, type: !16978, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16980)
!16978 = !DISubroutineType(types: !16979)
!16979 = !{!16880, !16917}
!16980 = !{!16981}
!16981 = !DILocalVariable(name: "list", arg: 1, scope: !16977, file: !153, line: 294, type: !16917)
!16982 = !DILocation(line: 0, scope: !16977)
!16983 = !DILocation(line: 296, column: 9, scope: !16977)
!16984 = !DILocation(line: 296, column: 2, scope: !16977)
!16985 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !153, file: !153, line: 266, type: !16986, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16988)
!16986 = !DISubroutineType(types: !16987)
!16987 = !{!345, !16917}
!16988 = !{!16989}
!16989 = !DILocalVariable(name: "list", arg: 1, scope: !16985, file: !153, line: 266, type: !16917)
!16990 = !DILocation(line: 0, scope: !16985)
!16991 = !DILocation(line: 268, column: 15, scope: !16985)
!16992 = !DILocation(line: 268, column: 20, scope: !16985)
!16993 = !DILocation(line: 268, column: 2, scope: !16985)
!16994 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2441, file: !2441, line: 150, type: !16995, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !16997)
!16995 = !DISubroutineType(types: !16996)
!16996 = !{!119, !2414}
!16997 = !{!16998, !16999, !17000, !17002}
!16998 = !DILocalVariable(name: "to", arg: 1, scope: !16994, file: !2441, line: 150, type: !2414)
!16999 = !DILocalVariable(name: "ret", scope: !16994, file: !2441, line: 152, type: !119)
!17000 = !DILocalVariable(name: "__i", scope: !17001, file: !2441, line: 154, type: !16735)
!17001 = distinct !DILexicalBlock(scope: !16994, file: !2441, line: 154, column: 2)
!17002 = !DILocalVariable(name: "__key", scope: !17001, file: !2441, line: 154, type: !16735)
!17003 = !DILocation(line: 0, scope: !16994)
!17004 = !DILocation(line: 0, scope: !17001)
!17005 = !DILocation(line: 0, scope: !16763, inlinedAt: !17006)
!17006 = distinct !DILocation(line: 154, column: 2, scope: !17001)
!17007 = !DILocation(line: 55, column: 2, scope: !16772, inlinedAt: !17008)
!17008 = distinct !DILocation(line: 145, column: 10, scope: !16763, inlinedAt: !17006)
!17009 = !DILocation(line: 0, scope: !16772, inlinedAt: !17008)
!17010 = !DILocation(line: 148, column: 2, scope: !16780, inlinedAt: !17006)
!17011 = !DILocation(line: 148, column: 2, scope: !16781, inlinedAt: !17006)
!17012 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17006)
!17013 = !DILocation(line: 160, column: 2, scope: !16763, inlinedAt: !17006)
!17014 = !DILocation(line: 155, column: 7, scope: !17015)
!17015 = distinct !DILexicalBlock(scope: !17016, file: !2441, line: 155, column: 7)
!17016 = distinct !DILexicalBlock(scope: !17017, file: !2441, line: 154, column: 24)
!17017 = distinct !DILexicalBlock(scope: !17001, file: !2441, line: 154, column: 2)
!17018 = !DILocation(line: 155, column: 7, scope: !17016)
!17019 = !DILocation(line: 156, column: 4, scope: !17020)
!17020 = distinct !DILexicalBlock(scope: !17015, file: !2441, line: 155, column: 39)
!17021 = !DILocation(line: 158, column: 3, scope: !17020)
!17022 = !DILocation(line: 0, scope: !16836, inlinedAt: !17023)
!17023 = distinct !DILocation(line: 154, column: 2, scope: !17017)
!17024 = !DILocation(line: 194, column: 2, scope: !16844, inlinedAt: !17023)
!17025 = !DILocation(line: 194, column: 2, scope: !16845, inlinedAt: !17023)
!17026 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17023)
!17027 = !DILocation(line: 0, scope: !16850, inlinedAt: !17028)
!17028 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17023)
!17029 = !DILocation(line: 95, column: 2, scope: !16850, inlinedAt: !17028)
!17030 = !DILocation(line: 161, column: 2, scope: !16994)
!17031 = distinct !DISubprogram(name: "remove_timeout", scope: !2441, file: !2441, line: 53, type: !2435, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !17032)
!17032 = !{!17033}
!17033 = !DILocalVariable(name: "t", arg: 1, scope: !17031, file: !2441, line: 53, type: !2414)
!17034 = !DILocation(line: 0, scope: !17031)
!17035 = !DILocation(line: 55, column: 6, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17031, file: !2441, line: 55, column: 6)
!17037 = !DILocation(line: 55, column: 14, scope: !17036)
!17038 = !DILocation(line: 55, column: 6, scope: !17031)
!17039 = !DILocation(line: 56, column: 25, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17036, file: !2441, line: 55, column: 23)
!17041 = !DILocation(line: 56, column: 12, scope: !17040)
!17042 = !DILocation(line: 56, column: 19, scope: !17040)
!17043 = !DILocation(line: 57, column: 2, scope: !17040)
!17044 = !DILocation(line: 59, column: 23, scope: !17031)
!17045 = !DILocation(line: 59, column: 2, scope: !17031)
!17046 = !DILocation(line: 60, column: 1, scope: !17031)
!17047 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !153, file: !153, line: 496, type: !17048, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !17050)
!17048 = !DISubroutineType(types: !17049)
!17049 = !{null, !16880}
!17050 = !{!17051, !17052, !17053}
!17051 = !DILocalVariable(name: "node", arg: 1, scope: !17047, file: !153, line: 496, type: !16880)
!17052 = !DILocalVariable(name: "prev", scope: !17047, file: !153, line: 498, type: !16892)
!17053 = !DILocalVariable(name: "next", scope: !17047, file: !153, line: 499, type: !16892)
!17054 = !DILocation(line: 0, scope: !17047)
!17055 = !DILocation(line: 498, column: 34, scope: !17047)
!17056 = !DILocation(line: 499, column: 34, scope: !17047)
!17057 = !DILocation(line: 501, column: 8, scope: !17047)
!17058 = !DILocation(line: 501, column: 13, scope: !17047)
!17059 = !DILocation(line: 502, column: 8, scope: !17047)
!17060 = !DILocation(line: 502, column: 13, scope: !17047)
!17061 = !DILocation(line: 503, column: 2, scope: !17047)
!17062 = !DILocation(line: 504, column: 1, scope: !17047)
!17063 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !17048, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !17064)
!17064 = !{!17065}
!17065 = !DILocalVariable(name: "node", arg: 1, scope: !17063, file: !153, line: 211, type: !16880)
!17066 = !DILocation(line: 0, scope: !17063)
!17067 = !DILocation(line: 213, column: 8, scope: !17063)
!17068 = !DILocation(line: 213, column: 13, scope: !17063)
!17069 = !DILocation(line: 214, column: 8, scope: !17063)
!17070 = !DILocation(line: 214, column: 13, scope: !17063)
!17071 = !DILocation(line: 215, column: 1, scope: !17063)
!17072 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2441, file: !2441, line: 183, type: !17073, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !17077)
!17073 = !DISubroutineType(types: !17074)
!17074 = !{!114, !17075}
!17075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17076, size: 32)
!17076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2415)
!17077 = !{!17078, !17079, !17080, !17082}
!17078 = !DILocalVariable(name: "timeout", arg: 1, scope: !17072, file: !2441, line: 183, type: !17075)
!17079 = !DILocalVariable(name: "ticks", scope: !17072, file: !2441, line: 185, type: !114)
!17080 = !DILocalVariable(name: "__i", scope: !17081, file: !2441, line: 187, type: !16735)
!17081 = distinct !DILexicalBlock(scope: !17072, file: !2441, line: 187, column: 2)
!17082 = !DILocalVariable(name: "__key", scope: !17081, file: !2441, line: 187, type: !16735)
!17083 = !DILocation(line: 0, scope: !17072)
!17084 = !DILocation(line: 0, scope: !17081)
!17085 = !DILocation(line: 0, scope: !16763, inlinedAt: !17086)
!17086 = distinct !DILocation(line: 187, column: 2, scope: !17081)
!17087 = !DILocation(line: 55, column: 2, scope: !16772, inlinedAt: !17088)
!17088 = distinct !DILocation(line: 145, column: 10, scope: !16763, inlinedAt: !17086)
!17089 = !DILocation(line: 0, scope: !16772, inlinedAt: !17088)
!17090 = !DILocation(line: 148, column: 2, scope: !16780, inlinedAt: !17086)
!17091 = !DILocation(line: 148, column: 2, scope: !16781, inlinedAt: !17086)
!17092 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17086)
!17093 = !DILocation(line: 160, column: 2, scope: !16763, inlinedAt: !17086)
!17094 = !DILocation(line: 188, column: 11, scope: !17095)
!17095 = distinct !DILexicalBlock(scope: !17096, file: !2441, line: 187, column: 24)
!17096 = distinct !DILexicalBlock(scope: !17081, file: !2441, line: 187, column: 2)
!17097 = !DILocation(line: 0, scope: !16836, inlinedAt: !17098)
!17098 = distinct !DILocation(line: 187, column: 2, scope: !17096)
!17099 = !DILocation(line: 194, column: 2, scope: !16844, inlinedAt: !17098)
!17100 = !DILocation(line: 194, column: 2, scope: !16845, inlinedAt: !17098)
!17101 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17098)
!17102 = !DILocation(line: 0, scope: !16850, inlinedAt: !17103)
!17103 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17098)
!17104 = !DILocation(line: 95, column: 2, scope: !16850, inlinedAt: !17103)
!17105 = !DILocation(line: 191, column: 2, scope: !17072)
!17106 = distinct !DISubprogram(name: "timeout_rem", scope: !2441, file: !2441, line: 165, type: !17073, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !17107)
!17107 = !{!17108, !17109, !17110}
!17108 = !DILocalVariable(name: "timeout", arg: 1, scope: !17106, file: !2441, line: 165, type: !17075)
!17109 = !DILocalVariable(name: "ticks", scope: !17106, file: !2441, line: 167, type: !114)
!17110 = !DILocalVariable(name: "t", scope: !17111, file: !2441, line: 173, type: !2414)
!17111 = distinct !DILexicalBlock(scope: !17106, file: !2441, line: 173, column: 2)
!17112 = !DILocation(line: 0, scope: !17106)
!17113 = !DILocation(line: 169, column: 6, scope: !17114)
!17114 = distinct !DILexicalBlock(scope: !17106, file: !2441, line: 169, column: 6)
!17115 = !DILocation(line: 169, column: 6, scope: !17106)
!17116 = !DILocation(line: 173, column: 28, scope: !17111)
!17117 = !DILocation(line: 0, scope: !17111)
!17118 = !DILocation(line: 173, column: 39, scope: !17119)
!17119 = distinct !DILexicalBlock(scope: !17111, file: !2441, line: 173, column: 2)
!17120 = !DILocation(line: 173, column: 2, scope: !17111)
!17121 = !DILocation(line: 174, column: 15, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !17119, file: !2441, line: 173, column: 61)
!17123 = !DILocation(line: 174, column: 9, scope: !17122)
!17124 = !DILocation(line: 175, column: 15, scope: !17125)
!17125 = distinct !DILexicalBlock(scope: !17122, file: !2441, line: 175, column: 7)
!17126 = !DILocation(line: 175, column: 7, scope: !17122)
!17127 = !DILocation(line: 173, column: 52, scope: !17119)
!17128 = distinct !{!17128, !17120, !17129}
!17129 = !DILocation(line: 178, column: 2, scope: !17111)
!17130 = !DILocation(line: 180, column: 17, scope: !17106)
!17131 = !DILocation(line: 180, column: 15, scope: !17106)
!17132 = !DILocation(line: 180, column: 2, scope: !17106)
!17133 = !DILocation(line: 181, column: 1, scope: !17106)
!17134 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13953, file: !13953, line: 35, type: !17135, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !17137)
!17135 = !DISubroutineType(types: !17136)
!17136 = !{!345, !17075}
!17137 = !{!17138}
!17138 = !DILocalVariable(name: "to", arg: 1, scope: !17134, file: !13953, line: 35, type: !17075)
!17139 = !DILocation(line: 0, scope: !17134)
!17140 = !DILocation(line: 37, column: 35, scope: !17134)
!17141 = !DILocation(line: 37, column: 10, scope: !17134)
!17142 = !DILocation(line: 37, column: 9, scope: !17134)
!17143 = !DILocation(line: 37, column: 2, scope: !17134)
!17144 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2441, file: !2441, line: 194, type: !17073, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !17145)
!17145 = !{!17146, !17147, !17148, !17150}
!17146 = !DILocalVariable(name: "timeout", arg: 1, scope: !17144, file: !2441, line: 194, type: !17075)
!17147 = !DILocalVariable(name: "ticks", scope: !17144, file: !2441, line: 196, type: !114)
!17148 = !DILocalVariable(name: "__i", scope: !17149, file: !2441, line: 198, type: !16735)
!17149 = distinct !DILexicalBlock(scope: !17144, file: !2441, line: 198, column: 2)
!17150 = !DILocalVariable(name: "__key", scope: !17149, file: !2441, line: 198, type: !16735)
!17151 = !DILocation(line: 0, scope: !17144)
!17152 = !DILocation(line: 0, scope: !17149)
!17153 = !DILocation(line: 0, scope: !16763, inlinedAt: !17154)
!17154 = distinct !DILocation(line: 198, column: 2, scope: !17149)
!17155 = !DILocation(line: 55, column: 2, scope: !16772, inlinedAt: !17156)
!17156 = distinct !DILocation(line: 145, column: 10, scope: !16763, inlinedAt: !17154)
!17157 = !DILocation(line: 0, scope: !16772, inlinedAt: !17156)
!17158 = !DILocation(line: 148, column: 2, scope: !16780, inlinedAt: !17154)
!17159 = !DILocation(line: 148, column: 2, scope: !16781, inlinedAt: !17154)
!17160 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17154)
!17161 = !DILocation(line: 160, column: 2, scope: !16763, inlinedAt: !17154)
!17162 = !DILocation(line: 199, column: 11, scope: !17163)
!17163 = distinct !DILexicalBlock(scope: !17164, file: !2441, line: 198, column: 24)
!17164 = distinct !DILexicalBlock(scope: !17149, file: !2441, line: 198, column: 2)
!17165 = !DILocation(line: 199, column: 23, scope: !17163)
!17166 = !DILocation(line: 0, scope: !16836, inlinedAt: !17167)
!17167 = distinct !DILocation(line: 198, column: 2, scope: !17164)
!17168 = !DILocation(line: 194, column: 2, scope: !16844, inlinedAt: !17167)
!17169 = !DILocation(line: 194, column: 2, scope: !16845, inlinedAt: !17167)
!17170 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17167)
!17171 = !DILocation(line: 0, scope: !16850, inlinedAt: !17172)
!17172 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17167)
!17173 = !DILocation(line: 95, column: 2, scope: !16850, inlinedAt: !17172)
!17174 = !DILocation(line: 199, column: 21, scope: !17163)
!17175 = !DILocation(line: 202, column: 2, scope: !17144)
!17176 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2441, file: !2441, line: 205, type: !16869, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !17177)
!17177 = !{!17178, !17179, !17181}
!17178 = !DILocalVariable(name: "ret", scope: !17176, file: !2441, line: 207, type: !772)
!17179 = !DILocalVariable(name: "__i", scope: !17180, file: !2441, line: 209, type: !16735)
!17180 = distinct !DILexicalBlock(scope: !17176, file: !2441, line: 209, column: 2)
!17181 = !DILocalVariable(name: "__key", scope: !17180, file: !2441, line: 209, type: !16735)
!17182 = !DILocation(line: 0, scope: !17176)
!17183 = !DILocation(line: 0, scope: !17180)
!17184 = !DILocation(line: 0, scope: !16763, inlinedAt: !17185)
!17185 = distinct !DILocation(line: 209, column: 2, scope: !17180)
!17186 = !DILocation(line: 55, column: 2, scope: !16772, inlinedAt: !17187)
!17187 = distinct !DILocation(line: 145, column: 10, scope: !16763, inlinedAt: !17185)
!17188 = !DILocation(line: 0, scope: !16772, inlinedAt: !17187)
!17189 = !DILocation(line: 148, column: 2, scope: !16780, inlinedAt: !17185)
!17190 = !DILocation(line: 148, column: 2, scope: !16781, inlinedAt: !17185)
!17191 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17185)
!17192 = !DILocation(line: 160, column: 2, scope: !16763, inlinedAt: !17185)
!17193 = !DILocation(line: 210, column: 9, scope: !17194)
!17194 = distinct !DILexicalBlock(scope: !17195, file: !2441, line: 209, column: 24)
!17195 = distinct !DILexicalBlock(scope: !17180, file: !2441, line: 209, column: 2)
!17196 = !DILocation(line: 0, scope: !16836, inlinedAt: !17197)
!17197 = distinct !DILocation(line: 209, column: 2, scope: !17195)
!17198 = !DILocation(line: 194, column: 2, scope: !16844, inlinedAt: !17197)
!17199 = !DILocation(line: 194, column: 2, scope: !16845, inlinedAt: !17197)
!17200 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17197)
!17201 = !DILocation(line: 0, scope: !16850, inlinedAt: !17202)
!17202 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17197)
!17203 = !DILocation(line: 95, column: 2, scope: !16850, inlinedAt: !17202)
!17204 = !DILocation(line: 212, column: 2, scope: !17176)
!17205 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2441, file: !2441, line: 215, type: !10838, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !17206)
!17206 = !{!17207, !17208, !17209, !17211, !17212, !17215, !17216}
!17207 = !DILocalVariable(name: "ticks", arg: 1, scope: !17205, file: !2441, line: 215, type: !772)
!17208 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17205, file: !2441, line: 215, type: !345)
!17209 = !DILocalVariable(name: "__i", scope: !17210, file: !2441, line: 217, type: !16735)
!17210 = distinct !DILexicalBlock(scope: !17205, file: !2441, line: 217, column: 2)
!17211 = !DILocalVariable(name: "__key", scope: !17210, file: !2441, line: 217, type: !16735)
!17212 = !DILocalVariable(name: "next_to", scope: !17213, file: !2441, line: 218, type: !119)
!17213 = distinct !DILexicalBlock(scope: !17214, file: !2441, line: 217, column: 24)
!17214 = distinct !DILexicalBlock(scope: !17210, file: !2441, line: 217, column: 2)
!17215 = !DILocalVariable(name: "sooner", scope: !17213, file: !2441, line: 219, type: !345)
!17216 = !DILocalVariable(name: "imminent", scope: !17213, file: !2441, line: 221, type: !345)
!17217 = !DILocation(line: 0, scope: !17205)
!17218 = !DILocation(line: 0, scope: !17210)
!17219 = !DILocation(line: 0, scope: !16763, inlinedAt: !17220)
!17220 = distinct !DILocation(line: 217, column: 2, scope: !17210)
!17221 = !DILocation(line: 55, column: 2, scope: !16772, inlinedAt: !17222)
!17222 = distinct !DILocation(line: 145, column: 10, scope: !16763, inlinedAt: !17220)
!17223 = !DILocation(line: 0, scope: !16772, inlinedAt: !17222)
!17224 = !DILocation(line: 148, column: 2, scope: !16780, inlinedAt: !17220)
!17225 = !DILocation(line: 148, column: 2, scope: !16781, inlinedAt: !17220)
!17226 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17220)
!17227 = !DILocation(line: 160, column: 2, scope: !16763, inlinedAt: !17220)
!17228 = !DILocation(line: 218, column: 17, scope: !17213)
!17229 = !DILocation(line: 0, scope: !17213)
!17230 = !DILocation(line: 221, column: 27, scope: !17213)
!17231 = !DILocation(line: 233, column: 17, scope: !17232)
!17232 = distinct !DILexicalBlock(scope: !17213, file: !2441, line: 233, column: 7)
!17233 = !DILocation(line: 234, column: 26, scope: !17234)
!17234 = distinct !DILexicalBlock(scope: !17232, file: !2441, line: 233, column: 56)
!17235 = !DILocation(line: 234, column: 4, scope: !17234)
!17236 = !DILocation(line: 235, column: 3, scope: !17234)
!17237 = !DILocation(line: 0, scope: !16836, inlinedAt: !17238)
!17238 = distinct !DILocation(line: 217, column: 2, scope: !17214)
!17239 = !DILocation(line: 194, column: 2, scope: !16844, inlinedAt: !17238)
!17240 = !DILocation(line: 194, column: 2, scope: !16845, inlinedAt: !17238)
!17241 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17238)
!17242 = !DILocation(line: 0, scope: !16850, inlinedAt: !17243)
!17243 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17238)
!17244 = !DILocation(line: 95, column: 2, scope: !16850, inlinedAt: !17243)
!17245 = !DILocation(line: 237, column: 1, scope: !17205)
!17246 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2441, file: !2441, line: 239, type: !17247, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !17249)
!17247 = !DISubroutineType(types: !17248)
!17248 = !{null, !772}
!17249 = !{!17250, !17251, !17252, !17254}
!17250 = !DILocalVariable(name: "ticks", arg: 1, scope: !17246, file: !2441, line: 239, type: !772)
!17251 = !DILocalVariable(name: "key", scope: !17246, file: !2441, line: 245, type: !16735)
!17252 = !DILocalVariable(name: "t", scope: !17253, file: !2441, line: 262, type: !2414)
!17253 = distinct !DILexicalBlock(scope: !17246, file: !2441, line: 261, column: 67)
!17254 = !DILocalVariable(name: "dt", scope: !17253, file: !2441, line: 263, type: !119)
!17255 = !DILocation(line: 0, scope: !17246)
!17256 = !DILocation(line: 242, column: 2, scope: !17246)
!17257 = !DILocation(line: 0, scope: !16763, inlinedAt: !17258)
!17258 = distinct !DILocation(line: 245, column: 25, scope: !17246)
!17259 = !DILocation(line: 55, column: 2, scope: !16772, inlinedAt: !17260)
!17260 = distinct !DILocation(line: 145, column: 10, scope: !16763, inlinedAt: !17258)
!17261 = !DILocation(line: 0, scope: !16772, inlinedAt: !17260)
!17262 = !DILocation(line: 148, column: 2, scope: !16780, inlinedAt: !17258)
!17263 = !DILocation(line: 148, column: 2, scope: !16781, inlinedAt: !17258)
!17264 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17258)
!17265 = !DILocation(line: 160, column: 2, scope: !16763, inlinedAt: !17258)
!17266 = !DILocation(line: 261, column: 9, scope: !17246)
!17267 = !DILocation(line: 261, column: 17, scope: !17246)
!17268 = !DILocation(line: 261, column: 25, scope: !17246)
!17269 = !DILocation(line: 261, column: 37, scope: !17246)
!17270 = !DILocation(line: 261, column: 47, scope: !17246)
!17271 = !DILocation(line: 261, column: 44, scope: !17246)
!17272 = !DILocation(line: 261, column: 2, scope: !17246)
!17273 = !DILocation(line: 0, scope: !17253)
!17274 = !DILocation(line: 263, column: 12, scope: !17253)
!17275 = !DILocation(line: 265, column: 16, scope: !17253)
!17276 = !DILocation(line: 265, column: 13, scope: !17253)
!17277 = !DILocation(line: 266, column: 13, scope: !17253)
!17278 = !DILocation(line: 267, column: 3, scope: !17253)
!17279 = !DILocation(line: 0, scope: !16836, inlinedAt: !17280)
!17280 = distinct !DILocation(line: 269, column: 3, scope: !17253)
!17281 = !DILocation(line: 194, column: 2, scope: !16844, inlinedAt: !17280)
!17282 = !DILocation(line: 194, column: 2, scope: !16845, inlinedAt: !17280)
!17283 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17280)
!17284 = !DILocation(line: 0, scope: !16850, inlinedAt: !17285)
!17285 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17280)
!17286 = !DILocation(line: 95, column: 2, scope: !16850, inlinedAt: !17285)
!17287 = !DILocation(line: 270, column: 6, scope: !17253)
!17288 = !DILocation(line: 270, column: 3, scope: !17253)
!17289 = !DILocation(line: 0, scope: !16763, inlinedAt: !17290)
!17290 = distinct !DILocation(line: 271, column: 9, scope: !17253)
!17291 = !DILocation(line: 55, column: 2, scope: !16772, inlinedAt: !17292)
!17292 = distinct !DILocation(line: 145, column: 10, scope: !16763, inlinedAt: !17290)
!17293 = !DILocation(line: 0, scope: !16772, inlinedAt: !17292)
!17294 = !DILocation(line: 148, column: 2, scope: !16780, inlinedAt: !17290)
!17295 = !DILocation(line: 148, column: 2, scope: !16781, inlinedAt: !17290)
!17296 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17290)
!17297 = !DILocation(line: 160, column: 2, scope: !16763, inlinedAt: !17290)
!17298 = !DILocation(line: 272, column: 22, scope: !17253)
!17299 = distinct !{!17299, !17272, !17300}
!17300 = !DILocation(line: 273, column: 2, scope: !17246)
!17301 = !DILocation(line: 276, column: 19, scope: !17302)
!17302 = distinct !DILexicalBlock(scope: !17303, file: !2441, line: 275, column: 23)
!17303 = distinct !DILexicalBlock(scope: !17246, file: !2441, line: 275, column: 6)
!17304 = !DILocation(line: 277, column: 2, scope: !17302)
!17305 = !DILocation(line: 279, column: 15, scope: !17246)
!17306 = !DILocation(line: 279, column: 12, scope: !17246)
!17307 = !DILocation(line: 280, column: 21, scope: !17246)
!17308 = !DILocation(line: 282, column: 24, scope: !17246)
!17309 = !DILocation(line: 282, column: 2, scope: !17246)
!17310 = !DILocation(line: 0, scope: !16836, inlinedAt: !17311)
!17311 = distinct !DILocation(line: 284, column: 2, scope: !17246)
!17312 = !DILocation(line: 194, column: 2, scope: !16844, inlinedAt: !17311)
!17313 = !DILocation(line: 194, column: 2, scope: !16845, inlinedAt: !17311)
!17314 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17311)
!17315 = !DILocation(line: 0, scope: !16850, inlinedAt: !17316)
!17316 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17311)
!17317 = !DILocation(line: 95, column: 2, scope: !16850, inlinedAt: !17316)
!17318 = !DILocation(line: 285, column: 1, scope: !17246)
!17319 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2441, file: !2441, line: 287, type: !17320, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !17322)
!17320 = !DISubroutineType(types: !17321)
!17321 = !{!116}
!17322 = !{!17323, !17324, !17326}
!17323 = !DILocalVariable(name: "t", scope: !17319, file: !2441, line: 289, type: !120)
!17324 = !DILocalVariable(name: "__i", scope: !17325, file: !2441, line: 291, type: !16735)
!17325 = distinct !DILexicalBlock(scope: !17319, file: !2441, line: 291, column: 2)
!17326 = !DILocalVariable(name: "__key", scope: !17325, file: !2441, line: 291, type: !16735)
!17327 = !DILocation(line: 0, scope: !17319)
!17328 = !DILocation(line: 0, scope: !17325)
!17329 = !DILocation(line: 0, scope: !16763, inlinedAt: !17330)
!17330 = distinct !DILocation(line: 291, column: 2, scope: !17325)
!17331 = !DILocation(line: 55, column: 2, scope: !16772, inlinedAt: !17332)
!17332 = distinct !DILocation(line: 145, column: 10, scope: !16763, inlinedAt: !17330)
!17333 = !DILocation(line: 0, scope: !16772, inlinedAt: !17332)
!17334 = !DILocation(line: 148, column: 2, scope: !16780, inlinedAt: !17330)
!17335 = !DILocation(line: 148, column: 2, scope: !16781, inlinedAt: !17330)
!17336 = !DILocation(line: 148, column: 2, scope: !16784, inlinedAt: !17330)
!17337 = !DILocation(line: 160, column: 2, scope: !16763, inlinedAt: !17330)
!17338 = !DILocation(line: 292, column: 7, scope: !17339)
!17339 = distinct !DILexicalBlock(scope: !17340, file: !2441, line: 291, column: 24)
!17340 = distinct !DILexicalBlock(scope: !17325, file: !2441, line: 291, column: 2)
!17341 = !DILocation(line: 292, column: 19, scope: !17339)
!17342 = !DILocation(line: 0, scope: !16836, inlinedAt: !17343)
!17343 = distinct !DILocation(line: 291, column: 2, scope: !17340)
!17344 = !DILocation(line: 194, column: 2, scope: !16844, inlinedAt: !17343)
!17345 = !DILocation(line: 194, column: 2, scope: !16845, inlinedAt: !17343)
!17346 = !DILocation(line: 194, column: 2, scope: !16848, inlinedAt: !17343)
!17347 = !DILocation(line: 0, scope: !16850, inlinedAt: !17348)
!17348 = distinct !DILocation(line: 215, column: 2, scope: !16836, inlinedAt: !17343)
!17349 = !DILocation(line: 95, column: 2, scope: !16850, inlinedAt: !17348)
!17350 = !DILocation(line: 292, column: 17, scope: !17339)
!17351 = !DILocation(line: 294, column: 2, scope: !17319)
!17352 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2441, file: !2441, line: 297, type: !3257, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !2102)
!17353 = !DILocation(line: 300, column: 19, scope: !17352)
!17354 = !DILocation(line: 300, column: 9, scope: !17352)
!17355 = !DILocation(line: 300, column: 2, scope: !17352)
!17356 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2441, file: !2441, line: 306, type: !17320, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !2102)
!17357 = !DILocation(line: 308, column: 9, scope: !17356)
!17358 = !DILocation(line: 308, column: 2, scope: !17356)
!17359 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2441, file: !2441, line: 319, type: !6474, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !17360)
!17360 = !{!17361, !17362, !17363, !17364}
!17361 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17359, file: !2441, line: 319, type: !118)
!17362 = !DILocalVariable(name: "start_cycles", scope: !17359, file: !2441, line: 328, type: !118)
!17363 = !DILocalVariable(name: "cycles_to_wait", scope: !17359, file: !2441, line: 331, type: !118)
!17364 = !DILocalVariable(name: "current_cycles", scope: !17365, file: !2441, line: 338, type: !118)
!17365 = distinct !DILexicalBlock(scope: !17366, file: !2441, line: 337, column: 11)
!17366 = distinct !DILexicalBlock(scope: !17367, file: !2441, line: 337, column: 2)
!17367 = distinct !DILexicalBlock(scope: !17359, file: !2441, line: 337, column: 2)
!17368 = !DILocation(line: 0, scope: !17359)
!17369 = !DILocation(line: 322, column: 19, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17359, file: !2441, line: 322, column: 6)
!17371 = !DILocation(line: 322, column: 6, scope: !17359)
!17372 = !DILocation(line: 328, column: 26, scope: !17359)
!17373 = !DILocation(line: 333, column: 43, scope: !17359)
!17374 = !DILocation(line: 337, column: 2, scope: !17359)
!17375 = !DILocation(line: 338, column: 29, scope: !17365)
!17376 = !DILocation(line: 0, scope: !17365)
!17377 = !DILocation(line: 341, column: 23, scope: !17378)
!17378 = distinct !DILexicalBlock(scope: !17365, file: !2441, line: 341, column: 7)
!17379 = !DILocation(line: 341, column: 39, scope: !17378)
!17380 = !DILocation(line: 349, column: 1, scope: !17359)
!17381 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !245, file: !245, line: 1675, type: !3257, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !2102)
!17382 = !DILocation(line: 1677, column: 9, scope: !17381)
!17383 = !DILocation(line: 1677, column: 2, scope: !17381)
!17384 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3345, file: !3345, line: 24, type: !3257, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !2102)
!17385 = !DILocation(line: 26, column: 9, scope: !17384)
!17386 = !DILocation(line: 26, column: 2, scope: !17384)
!17387 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2441, file: !2441, line: 364, type: !17388, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2411, retainedNodes: !17390)
!17388 = !DISubroutineType(types: !17389)
!17389 = !{!120, !16725}
!17390 = !{!17391, !17392}
!17391 = !DILocalVariable(name: "timeout", arg: 1, scope: !17387, file: !2441, line: 364, type: !16725)
!17392 = !DILocalVariable(name: "dt", scope: !17387, file: !2441, line: 366, type: !114)
!17393 = !DILocation(line: 0, scope: !17387)
!17394 = !DILocation(line: 368, column: 6, scope: !17387)
!17395 = !DILocation(line: 371, column: 10, scope: !17396)
!17396 = distinct !DILexicalBlock(scope: !17397, file: !2441, line: 370, column: 47)
!17397 = distinct !DILexicalBlock(scope: !17398, file: !2441, line: 370, column: 13)
!17398 = distinct !DILexicalBlock(scope: !17387, file: !2441, line: 368, column: 6)
!17399 = !DILocation(line: 371, column: 3, scope: !17396)
!17400 = !DILocation(line: 376, column: 58, scope: !17401)
!17401 = distinct !DILexicalBlock(scope: !17402, file: !2441, line: 376, column: 7)
!17402 = distinct !DILexicalBlock(scope: !17397, file: !2441, line: 372, column: 9)
!17403 = !DILocation(line: 376, column: 7, scope: !17402)
!17404 = !DILocation(line: 376, column: 43, scope: !17401)
!17405 = !DILocation(line: 377, column: 4, scope: !17406)
!17406 = distinct !DILexicalBlock(scope: !17401, file: !2441, line: 376, column: 64)
!17407 = !DILocation(line: 379, column: 10, scope: !17402)
!17408 = !DILocation(line: 379, column: 33, scope: !17402)
!17409 = !DILocation(line: 379, column: 31, scope: !17402)
!17410 = !DILocation(line: 379, column: 3, scope: !17402)
!17411 = !DILocation(line: 0, scope: !17398)
!17412 = !DILocation(line: 381, column: 1, scope: !17387)
!17413 = distinct !DISubprogram(name: "boot_banner", scope: !17414, file: !17414, line: 26, type: !3019, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3005, retainedNodes: !2102)
!17414 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17415 = !DILocation(line: 34, column: 2, scope: !17413)
!17416 = !DILocation(line: 36, column: 1, scope: !17413)
