; ModuleID = 'build/adafruit_trinket_m0/subsys/debug/gdbstub/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv6m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_thread.16 = type { %struct._thread_base.9, %struct._callee_saved.10, i8*, %union.anon.5, i32, %struct.k_heap.14*, %struct._thread_arch.15 }
%struct._thread_base.9 = type { %union.anon.5, %union.anon.5*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.8 }
%union.anon.2.7 = type { i16 }
%struct._timeout.8 = type { %struct._dnode.4, void (%struct._timeout.8*)*, i64 }
%struct._dnode.4 = type { %union.anon.0.2, %union.anon.0.2 }
%union.anon.0.2 = type { %struct._dnode.4* }
%struct._callee_saved.10 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon.5 = type { %struct._dnode.4 }
%struct.k_heap.14 = type { %struct.sys_heap.12, %union.anon.5, %struct.k_spinlock.13 }
%struct.sys_heap.12 = type { %struct.z_heap.11*, i8*, i32 }
%struct.z_heap.11 = type opaque
%struct.k_spinlock.13 = type {}
%struct._thread_arch.15 = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread.16*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.init_entry = type { i32 (%struct.device.73*)*, %struct.device.73* }
%struct.device.73 = type { i8*, i8*, i8*, %struct.device_state.72*, i8*, i16* }
%struct.device_state.72 = type { i8, i8 }
%struct.sam0_eic_data = type { [1 x %struct.sam0_eic_port_data], [16 x %struct.z_thread_stack_element] }
%struct.sam0_eic_port_data = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.uart_sam0_dev_cfg = type { %struct.SercomUsart*, i32, i32, i8, i32, i16, void (%struct.device.73*)*, %struct.pinctrl_dev_config* }
%struct.SercomUsart = type { %union.PORT_DIR_Type, %union.PORT_DIR_Type, [4 x i8], %union.GCLK_CLKCTRL_Type, %union.PORT_PMUX_Type, [5 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.PORT_PMUX_Type, [1 x i8], %union.GCLK_CLKCTRL_Type, %union.PORT_DIR_Type, [8 x i8], %union.GCLK_CLKCTRL_Type, [6 x i8], %union.PORT_PMUX_Type }
%union.PORT_DIR_Type = type { %union.anon.68 }
%union.anon.68 = type { i32 }
%union.GCLK_CLKCTRL_Type = type { %union.anon.2.7 }
%union.PORT_PMUX_Type = type { %struct.z_thread_stack_element }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { i32*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device.73*, i8*)*, void (%struct.device.73*, i8)*, i32 (%struct.device.73*)*, i32 (%struct.device.73*, %struct.uart_config*)*, i32 (%struct.device.73*, %struct.uart_config*)*, i32 (%struct.device.73*, i8*, i32)*, i32 (%struct.device.73*, i8*, i32)*, void (%struct.device.73*)*, void (%struct.device.73*)*, i32 (%struct.device.73*)*, void (%struct.device.73*)*, void (%struct.device.73*)*, i32 (%struct.device.73*)*, i32 (%struct.device.73*)*, void (%struct.device.73*)*, void (%struct.device.73*)*, i32 (%struct.device.73*)*, i32 (%struct.device.73*)*, void (%struct.device.73*, void (%struct.device.73*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_sam0_dev_data = type { %struct.uart_config, void (%struct.device.73*, i8*)*, i8* }
%struct.k_thread.203 = type { %struct._thread_base.196, %struct._callee_saved.10, i8*, %union.anon.192, i32, %struct.k_heap.201*, %struct._thread_arch.15 }
%struct._thread_base.196 = type { %union.anon.192, %union.anon.192*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.195 }
%struct._timeout.195 = type { %struct._dnode.191, void (%struct._timeout.195*)*, i64 }
%struct._dnode.191 = type { %union.anon.0.189, %union.anon.0.189 }
%union.anon.0.189 = type { %struct._dnode.191* }
%union.anon.192 = type { %struct._dnode.191 }
%struct.k_heap.201 = type { %struct.sys_heap.199, %union.anon.192, %struct.k_spinlock.13 }
%struct.sys_heap.199 = type { %struct.z_heap.198*, i8*, i32 }
%struct.z_heap.198 = type opaque
%struct._static_thread_data.499 = type { %struct.k_thread.203*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread.203*, %struct.k_thread.203*, i32, i8, %struct.k_spinlock.13 }
%struct._ready_q = type { %struct.k_thread.203*, %struct._dnode.191 }
%struct.__va_list = type { i8* }
%struct.buf_out_context = type { i32, [0 x i8] }
%struct.str_context = type { i8*, i32, i32 }
%struct.k_thread.60 = type { %struct._thread_base.53, %struct._callee_saved.10, i8*, %union.anon.49, i32, %struct.k_heap.58*, %struct._thread_arch.15 }
%struct._thread_base.53 = type { %union.anon.49, %union.anon.49*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.52 }
%struct._timeout.52 = type { %struct._dnode.48, void (%struct._timeout.52*)*, i64 }
%struct._dnode.48 = type { %union.anon.0.46, %union.anon.0.46 }
%union.anon.0.46 = type { %struct._dnode.48* }
%union.anon.49 = type { %struct._dnode.48 }
%struct.k_heap.58 = type { %struct.sys_heap.56, %union.anon.49, %struct.k_spinlock.13 }
%struct.sys_heap.56 = type { %struct.z_heap.55*, i8*, i32 }
%struct.z_heap.55 = type opaque
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.68, %union.anon.68 }
%struct.PortGroup = type { %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, [4 x i8], [16 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type], [32 x i8] }
%struct.soc_port_pin = type { %struct.PortGroup*, i32, i32 }
%struct.Nvmctrl = type { %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_PMUX_Type, [3 x i8], %union.PORT_PMUX_Type, [3 x i8], %union.PORT_PMUX_Type, [3 x i8], %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.GCLK_CLKCTRL_Type }
%struct.Sysctrl = type { %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.GCLK_CLKCTRL_Type, [2 x i8], %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.PORT_PMUX_Type, [3 x i8], %union.PORT_DIR_Type, %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_PMUX_Type, [3 x i8], %union.PORT_DIR_Type, [4 x i8], %union.GCLK_CLKCTRL_Type, [2 x i8], %union.PORT_DIR_Type, %union.PORT_PMUX_Type, [3 x i8], %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_PMUX_Type }
%struct.Gclk = type { %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.GCLK_CLKCTRL_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type }
%struct.Pm = type { %struct.z_thread_stack_element, %union.PORT_PMUX_Type, [6 x i8], %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, [8 x i8], %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, [16 x i8], %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, [1 x i8], %union.PORT_PMUX_Type }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, i32 }
%struct.NVIC_Type = type { [1 x i32], [31 x i32], [1 x i32], [31 x i32], [1 x i32], [31 x i32], [1 x i32], [31 x i32], [64 x i32], [8 x i32] }
%struct.SCB_Type = type { i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32 }
%struct.Eic = type { %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_PMUX_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, %union.PORT_DIR_Type, [2 x %union.PORT_DIR_Type] }
%struct.k_fifo = type { %struct.k_queue.345 }
%struct.k_queue.345 = type { %struct._sflist.344, %struct.k_spinlock.13, %struct._wait_q_t.330 }
%struct._sflist.344 = type { %union.anon.68*, %union.anon.68* }
%struct._wait_q_t.330 = type { %struct._dnode.328 }
%struct._dnode.328 = type { %union.anon.0.326, %union.anon.0.326 }
%union.anon.0.326 = type { %struct._dnode.328* }
%struct.SysTick_Type = type { i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode.191], i32 }

@_irq_vector_table = dso_local global [28 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local global [28 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 35324 to i8*), void (i8*)* inttoptr (i32 17129 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 35348 to i8*), void (i8*)* inttoptr (i32 31739 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 35372 to i8*), void (i8*)* inttoptr (i32 31739 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [13 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_thread to i8*), i8* bitcast (%struct.init_entry* @__init_atmel_samd_init to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct._isr_list* @sam0_eic_init.__isr_sam0_eic_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_27 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_27 to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_29 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_29 to i8*), i8* bitcast (%struct._isr_list* @uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_sam0_irq_config_1.__isr_uart_sam0_isr_irq_1 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@_k_thread_obj_thread = dso_local global %struct.k_thread.16 zeroinitializer, align 8, !dbg !25
@_k_thread_stack_thread = dso_local global [512 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 8, !dbg !262
@.str.1 = private unnamed_addr constant [7 x i8] c"thread\00", align 1
@_k_thread_data_thread = dso_local global %struct._static_thread_data { %struct.k_thread.16* @_k_thread_obj_thread, %struct.z_thread_stack_element* getelementptr inbounds ([512 x %struct.z_thread_stack_element], [512 x %struct.z_thread_stack_element]* @_k_thread_stack_thread, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* @thread_entry, i8* null, i8* null, i8* null, i32 7, i32 4, i32 0, void ()* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_thread", align 4, !dbg !105
@thread = dso_local constant %struct.k_thread.16* @_k_thread_obj_thread, align 4, !dbg !258
@.str.2 = private unnamed_addr constant [25 x i8] c"Hello from user thread!\0A\00", align 1
@_char_out = dso_local global i32 (i32)* @arch_printk_char_out, align 4, !dbg !267
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_atmel_samd_init = internal constant %struct.init_entry { i32 (%struct.device.73*)* @atmel_samd_init, %struct.device.73* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !276
@_vector_start = external dso_local global [0 x i8], align 1
@_stdout_hook = internal global i32 (i32)* @_stdout_hook_default, align 4, !dbg !1044
@__device_dts_ord_22 = dso_local constant %struct.device.73 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i32 0, i32 0), i8* null, i8* null, %struct.device_state.72* @__devstate_dts_ord_22, i8* bitcast (%struct.sam0_eic_data* @eic_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1054
@__devicehdl_dts_ord_22 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1612
@.str.20 = private unnamed_addr constant [13 x i8] c"eic@40001800\00", align 1
@__devstate_dts_ord_22 = internal global %struct.device_state.72 zeroinitializer, section ".z_devstate", align 1, !dbg !1594
@eic_data = internal global %struct.sam0_eic_data zeroinitializer, align 4, !dbg !1573
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device.73*)* @sam0_eic_init, %struct.device.73* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1548
@sam0_eic_channels = internal constant [1 x [32 x i8]] [[32 x i8] c"\00\01\02\03\04\05\06\07\FF\09\0A\0B\FF\FF\0E\0F\00\01\02\03\FF\FF\06\07\0C\0D\FF\0F\08\FF\0A\0B"], align 1, !dbg !1596
@sam0_eic_init.__isr_sam0_eic_isr_irq_0 = internal global %struct._isr_list { i32 4, i32 0, i8* bitcast (void (%struct.device.73*)* @sam0_eic_isr to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_22 to i8*) }, section ".intList", align 4, !dbg !1603
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device.73*)* @uart_console_init, %struct.device.73* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1623
@__devicehdl_dts_ord_27 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1617
@.str.25 = private unnamed_addr constant [16 x i8] c"sercom@42000800\00", align 1
@uart_sam0_config_0 = internal constant %struct.uart_sam0_dev_cfg { %struct.SercomUsart* inttoptr (i32 1107298304 to %struct.SercomUsart*), i32 115200, i32 3211264, i8 0, i32 4, i16 20, void (%struct.device.73*)* @uart_sam0_irq_config_0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_27 }, align 4, !dbg !1722
@uart_sam0_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device.73*, i8*)* @uart_sam0_poll_in, void (%struct.device.73*, i8)* @uart_sam0_poll_out, i32 (%struct.device.73*)* @uart_sam0_err_check, i32 (%struct.device.73*, %struct.uart_config*)* @uart_sam0_configure, i32 (%struct.device.73*, %struct.uart_config*)* @uart_sam0_config_get, i32 (%struct.device.73*, i8*, i32)* @uart_sam0_fifo_fill, i32 (%struct.device.73*, i8*, i32)* @uart_sam0_fifo_read, void (%struct.device.73*)* @uart_sam0_irq_tx_enable, void (%struct.device.73*)* @uart_sam0_irq_tx_disable, i32 (%struct.device.73*)* @uart_sam0_irq_tx_ready, void (%struct.device.73*)* @uart_sam0_irq_rx_enable, void (%struct.device.73*)* @uart_sam0_irq_rx_disable, i32 (%struct.device.73*)* @uart_sam0_irq_tx_complete, i32 (%struct.device.73*)* @uart_sam0_irq_rx_ready, void (%struct.device.73*)* null, void (%struct.device.73*)* null, i32 (%struct.device.73*)* @uart_sam0_irq_is_pending, i32 (%struct.device.73*)* @uart_sam0_irq_update, void (%struct.device.73*, void (%struct.device.73*, i8*)*, i8*)* @uart_sam0_irq_callback_set }, align 4, !dbg !2281
@__devstate_dts_ord_27 = internal global %struct.device_state.72 zeroinitializer, section ".z_devstate", align 1, !dbg !2241
@uart_sam0_data_0 = internal global %struct.uart_sam0_dev_data zeroinitializer, align 4, !dbg !2234
@__device_dts_ord_27 = dso_local constant %struct.device.73 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i32 0, i32 0), i8* bitcast (%struct.uart_sam0_dev_cfg* @uart_sam0_config_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_sam0_driver_api to i8*), %struct.device_state.72* @__devstate_dts_ord_27, i8* bitcast (%struct.uart_sam0_dev_data* @uart_sam0_data_0 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_27, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !2219
@__init___device_dts_ord_27 = internal constant %struct.init_entry { i32 (%struct.device.73*)* @uart_sam0_init, %struct.device.73* @__device_dts_ord_27 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !2221
@__devicehdl_dts_ord_29 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1621
@.str.1.27 = private unnamed_addr constant [16 x i8] c"sercom@42001000\00", align 1
@uart_sam0_config_1 = internal constant %struct.uart_sam0_dev_cfg { %struct.SercomUsart* inttoptr (i32 1107300352 to %struct.SercomUsart*), i32 115200, i32 1048576, i8 0, i32 16, i16 22, void (%struct.device.73*)* @uart_sam0_irq_config_1, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_29 }, align 4, !dbg !2283
@__devstate_dts_ord_29 = internal global %struct.device_state.72 zeroinitializer, section ".z_devstate", align 1, !dbg !2245
@uart_sam0_data_1 = internal global %struct.uart_sam0_dev_data zeroinitializer, align 4, !dbg !2243
@__device_dts_ord_29 = dso_local constant %struct.device.73 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.27, i32 0, i32 0), i8* bitcast (%struct.uart_sam0_dev_cfg* @uart_sam0_config_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_sam0_driver_api to i8*), %struct.device_state.72* @__devstate_dts_ord_29, i8* bitcast (%struct.uart_sam0_dev_data* @uart_sam0_data_1 to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_29, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !2230
@__init___device_dts_ord_29 = internal constant %struct.init_entry { i32 (%struct.device.73*)* @uart_sam0_init, %struct.device.73* @__device_dts_ord_29 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !2232
@__pinctrl_dev_config__device_dts_ord_27 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_27, i32 0, i32 0), i8 1 }, align 4, !dbg !2256
@uart_sam0_irq_config_0.__isr_uart_sam0_isr_irq_0 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device.73*)* @uart_sam0_isr to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_27 to i8*) }, section ".intList", align 4, !dbg !2247
@__pinctrl_states__device_dts_ord_27 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @__pinctrl_state_pins_0__device_dts_ord_27, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2275
@__pinctrl_state_pins_0__device_dts_ord_27 = internal constant [2 x i32] [i32 846200832, i32 845152256], align 4, !dbg !2278
@__pinctrl_dev_config__device_dts_ord_29 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_29, i32 0, i32 0), i8 1 }, align 4, !dbg !2482
@uart_sam0_irq_config_1.__isr_uart_sam0_isr_irq_1 = internal global %struct._isr_list { i32 11, i32 0, i8* bitcast (void (%struct.device.73*)* @uart_sam0_isr to i8*), i8* bitcast (%struct.device.73* @__device_dts_ord_29 to i8*) }, section ".intList", align 4, !dbg !2479
@__pinctrl_states__device_dts_ord_29 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @__pinctrl_state_pins_0__device_dts_ord_29, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2484
@__pinctrl_state_pins_0__device_dts_ord_29 = internal constant [2 x i32] [i32 848297984, i32 847249408], align 4, !dbg !2486
@overflow_cyc = internal global i32 0, align 4, !dbg !2488
@cycle_count = internal global i32 0, align 4, !dbg !2605
@announced_cycles = internal global i32 0, align 4, !dbg !2607
@last_load = internal global i32 0, align 4, !dbg !2603
@lock = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !2600
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device.73*)* @sys_clock_driver_init, %struct.device.73* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2574
@sam_port_addrs = internal constant [2 x i32] [i32 1090536448, i32 1090536576], align 4, !dbg !2609
@__device_start = external dso_local constant [0 x %struct.device.73], align 4
@__device_end = external dso_local constant [0 x %struct.device.73], align 4
@_k_neg_eagain = dso_local constant i32 -11, align 4, !dbg !2772
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !2778
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !2967
@z_main_thread = dso_local global %struct.k_thread.203 zeroinitializer, align 8, !dbg !2975
@z_idle_stacks = internal global [1 x [256 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !2982
@z_sys_init_run_level.levels = internal global [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2987
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.51 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal global [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.53, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.54, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.55, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !3005
@.str.52 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.53 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.54 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.55 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !3111
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data.499], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data.499], align 4
@sched_spinlock = dso_local global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !3116
@slice_ticks = internal global i32 0, align 4, !dbg !3227
@slice_max_prio = internal global i32 0, align 4, !dbg !3230
@pending_current = internal global %struct.k_thread.203* null, align 4, !dbg !3232
@z_sys_post_kernel = dso_local global i8 0, align 1, !dbg !2980
@z_idle_threads = dso_local global [1 x %struct.k_thread.203] zeroinitializer, align 8, !dbg !2977
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@timeout_lock = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !3234
@curr_tick = internal global i64 0, align 8, !dbg !3264
@timeout_list = internal global %struct._dnode.191 { %union.anon.0.189 { %struct._dnode.191* @timeout_list }, %union.anon.0.189 { %struct._dnode.191* @timeout_list } }, align 4, !dbg !3269
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2851
@announce_remaining = internal global i32 0, align 4, !dbg !3267
@.str.109 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optnone
define dso_local void @_OffsetAbsSyms() #1 !dbg !3585 {
  call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #9, !dbg !3587, !srcloc !3588
  call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #9, !dbg !3589, !srcloc !3590
  call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #9, !dbg !3591, !srcloc !3592
  call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #9, !dbg !3593, !srcloc !3594
  call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #9, !dbg !3595, !srcloc !3596
  call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #9, !dbg !3597, !srcloc !3598
  call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #9, !dbg !3599, !srcloc !3600
  call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #9, !dbg !3601, !srcloc !3602
  call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #9, !dbg !3603, !srcloc !3604
  call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #9, !dbg !3605, !srcloc !3606
  call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #9, !dbg !3607, !srcloc !3608
  call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #9, !dbg !3609, !srcloc !3610
  call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #9, !dbg !3611, !srcloc !3612
  call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #9, !dbg !3613, !srcloc !3614
  call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #9, !dbg !3615, !srcloc !3616
  call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #9, !dbg !3617, !srcloc !3618
  call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #9, !dbg !3619, !srcloc !3620
  call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #9, !dbg !3621, !srcloc !3622
  call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #9, !dbg !3623, !srcloc !3624
  call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #9, !dbg !3625, !srcloc !3626
  call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #9, !dbg !3627, !srcloc !3628
  call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #9, !dbg !3629, !srcloc !3630
  call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #9, !dbg !3631, !srcloc !3632
  call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #9, !dbg !3633, !srcloc !3634
  call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #9, !dbg !3635, !srcloc !3638
  call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #9, !dbg !3639, !srcloc !3640
  call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #9, !dbg !3641, !srcloc !3642
  call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #9, !dbg !3643, !srcloc !3644
  call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #9, !dbg !3645, !srcloc !3646
  call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #9, !dbg !3647, !srcloc !3648
  call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #9, !dbg !3649, !srcloc !3650
  call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #9, !dbg !3651, !srcloc !3652
  call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #9, !dbg !3653, !srcloc !3654
  call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #9, !dbg !3655, !srcloc !3656
  call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #9, !dbg !3657, !srcloc !3658
  call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #9, !dbg !3659, !srcloc !3660
  call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #9, !dbg !3661, !srcloc !3662
  call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #9, !dbg !3663, !srcloc !3664
  call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #9, !dbg !3665, !srcloc !3666
  call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #9, !dbg !3667, !srcloc !3668
  call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #9, !dbg !3669, !srcloc !3670
  call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #9, !dbg !3671, !srcloc !3672
  call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #9, !dbg !3673, !srcloc !3674
  call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #9, !dbg !3675, !srcloc !3676
  call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #9, !dbg !3677, !srcloc !3678
  call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #9, !dbg !3679, !srcloc !3680
  call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #9, !dbg !3681, !srcloc !3682
  ret void, !dbg !3683
}

; Function Attrs: noinline nounwind optnone
define internal void @thread_entry(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !3686 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3687, metadata !DIExpression()), !dbg !3688
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3689, metadata !DIExpression()), !dbg !3690
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3691, metadata !DIExpression()), !dbg !3692
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0)) #10, !dbg !3693
  ret void, !dbg !3694
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optnone
define dso_local void @main() #1 !dbg !3695 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3696, metadata !DIExpression()), !dbg !3697
  %2 = call i32 @test() #10, !dbg !3698
  store i32 %2, i32* %1, align 4, !dbg !3699
  %3 = load i32, i32* %1, align 4, !dbg !3700
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 noundef %3) #10, !dbg !3701
  ret void, !dbg !3702
}

; Function Attrs: noinline nounwind optnone
define internal i32 @test() #1 !dbg !3703 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3706, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3708, metadata !DIExpression()), !dbg !3709
  store i32 10, i32* %1, align 4, !dbg !3710
  %3 = load i32, i32* %1, align 4, !dbg !3711
  %4 = mul nsw i32 %3, 2, !dbg !3712
  store i32 %4, i32* %2, align 4, !dbg !3713
  %5 = load i32, i32* %1, align 4, !dbg !3714
  %6 = load i32, i32* %2, align 4, !dbg !3715
  %7 = add nsw i32 %5, %6, !dbg !3716
  ret i32 %7, !dbg !3717
}

; Function Attrs: noinline nounwind optnone
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3718 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3719, metadata !DIExpression()), !dbg !3720
  %3 = load i32, i32* %2, align 4, !dbg !3721
  ret i32 0, !dbg !3722
}

; Function Attrs: noinline nounwind optnone
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) #1 !dbg !3723 {
  %2 = alloca i32 (i32)*, align 4
  store i32 (i32)* %0, i32 (i32)** %2, align 4
  call void @llvm.dbg.declare(metadata i32 (i32)** %2, metadata !3726, metadata !DIExpression()), !dbg !3727
  %3 = load i32 (i32)*, i32 (i32)** %2, align 4, !dbg !3728
  store i32 (i32)* %3, i32 (i32)** @_char_out, align 4, !dbg !3729
  ret void, !dbg !3730
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @__printk_get_hook() #1 !dbg !3731 {
  %1 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3734
  %2 = bitcast i32 (i32)* %1 to i8*, !dbg !3734
  ret i8* %2, !dbg !3735
}

; Function Attrs: noinline nounwind optnone
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) #1 !dbg !3736 {
  %3 = alloca %struct.__va_list, align 4
  %4 = alloca i8*, align 4
  %5 = alloca %struct.buf_out_context, align 4
  %6 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0
  %7 = bitcast i8** %6 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %7, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3746, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !3748, metadata !DIExpression()), !dbg !3749
  %8 = call zeroext i1 @k_is_user_context() #10, !dbg !3750
  br i1 %8, label %9, label %22, !dbg !3752

9:                                                ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.buf_out_context* %5, metadata !3753, metadata !DIExpression()), !dbg !3762
  %10 = bitcast %struct.buf_out_context* %5 to i8*, !dbg !3762
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !3762
  %11 = bitcast %struct.buf_out_context* %5 to i8*, !dbg !3763
  %12 = load i8*, i8** %4, align 4, !dbg !3764
  %13 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !3765
  %14 = bitcast i8** %13 to [1 x i32]*, !dbg !3765
  %15 = load [1 x i32], [1 x i32]* %14, align 4, !dbg !3765
  %16 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @buf_char_out to i32 (...)*), i8* noundef %11, i8* noundef %12, [1 x i32] %15) #10, !dbg !3765
  %17 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %5, i32 0, i32 0, !dbg !3766
  %18 = load i32, i32* %17, align 4, !dbg !3766
  %19 = icmp ne i32 %18, 0, !dbg !3768
  br i1 %19, label %20, label %21, !dbg !3769

20:                                               ; preds = %9
  call void @buf_flush(%struct.buf_out_context* noundef %5) #10, !dbg !3770
  br label %21, !dbg !3772

21:                                               ; preds = %20, %9
  br label %28, !dbg !3773

22:                                               ; preds = %2
  %23 = load i8*, i8** %4, align 4, !dbg !3774
  %24 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !3776
  %25 = bitcast i8** %24 to [1 x i32]*, !dbg !3776
  %26 = load [1 x i32], [1 x i32]* %25, align 4, !dbg !3776
  %27 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %23, [1 x i32] %26) #10, !dbg !3776
  br label %28

28:                                               ; preds = %22, %21
  ret void, !dbg !3777
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @k_is_user_context() #1 !dbg !3778 {
  ret i1 false, !dbg !3782
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #3

; Function Attrs: noinline nounwind optnone
define internal i32 @buf_char_out(i32 noundef %0, i8* noundef %1) #1 !dbg !3783 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  %5 = alloca %struct.buf_out_context*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3786, metadata !DIExpression()), !dbg !3787
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3788, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.declare(metadata %struct.buf_out_context** %5, metadata !3790, metadata !DIExpression()), !dbg !3792
  %6 = load i8*, i8** %4, align 4, !dbg !3793
  %7 = bitcast i8* %6 to %struct.buf_out_context*, !dbg !3793
  store %struct.buf_out_context* %7, %struct.buf_out_context** %5, align 4, !dbg !3792
  %8 = load i32, i32* %3, align 4, !dbg !3794
  %9 = trunc i32 %8 to i8, !dbg !3794
  %10 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !3795
  %11 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %10, i32 0, i32 1, !dbg !3796
  %12 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !3797
  %13 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %12, i32 0, i32 0, !dbg !3798
  %14 = load i32, i32* %13, align 4, !dbg !3799
  %15 = add i32 %14, 1, !dbg !3799
  store i32 %15, i32* %13, align 4, !dbg !3799
  %16 = getelementptr inbounds [0 x i8], [0 x i8]* %11, i32 0, i32 %14, !dbg !3795
  store i8 %9, i8* %16, align 1, !dbg !3800
  %17 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !3801
  %18 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %17, i32 0, i32 0, !dbg !3803
  %19 = load i32, i32* %18, align 4, !dbg !3803
  %20 = icmp eq i32 %19, 0, !dbg !3804
  br i1 %20, label %21, label %23, !dbg !3805

21:                                               ; preds = %2
  %22 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !3806
  call void @buf_flush(%struct.buf_out_context* noundef %22) #10, !dbg !3808
  br label %23, !dbg !3809

23:                                               ; preds = %21, %2
  %24 = load i32, i32* %3, align 4, !dbg !3810
  ret i32 %24, !dbg !3811
}

; Function Attrs: noinline nounwind optnone
define internal i32 @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) #1 !dbg !3812 {
  %5 = alloca %struct.__va_list, align 4
  %6 = alloca i32 (...)*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0
  %10 = bitcast i8** %9 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %10, align 4
  store i32 (...)* %0, i32 (...)** %6, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %6, metadata !3820, metadata !DIExpression()), !dbg !3821
  store i8* %1, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3822, metadata !DIExpression()), !dbg !3823
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3824, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3826, metadata !DIExpression()), !dbg !3827
  %11 = load i32 (...)*, i32 (...)** %6, align 4, !dbg !3828
  %12 = load i8*, i8** %7, align 4, !dbg !3829
  %13 = load i8*, i8** %8, align 4, !dbg !3830
  %14 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0, !dbg !3831
  %15 = bitcast i8** %14 to [1 x i32]*, !dbg !3831
  %16 = load [1 x i32], [1 x i32]* %15, align 4, !dbg !3831
  %17 = call i32 @z_cbvprintf_impl(i32 (...)* noundef %11, i8* noundef %12, i8* noundef %13, [1 x i32] %16, i32 noundef 0) #10, !dbg !3831
  ret i32 %17, !dbg !3832
}

; Function Attrs: noinline nounwind optnone
define internal void @buf_flush(%struct.buf_out_context* noundef %0) #1 !dbg !3833 {
  %2 = alloca %struct.buf_out_context*, align 4
  store %struct.buf_out_context* %0, %struct.buf_out_context** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.buf_out_context** %2, metadata !3836, metadata !DIExpression()), !dbg !3837
  %3 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !3838
  %4 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %3, i32 0, i32 1, !dbg !3839
  %5 = getelementptr inbounds [0 x i8], [0 x i8]* %4, i32 0, i32 0, !dbg !3838
  %6 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !3840
  %7 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %6, i32 0, i32 0, !dbg !3841
  %8 = load i32, i32* %7, align 4, !dbg !3841
  call void @k_str_out(i8* noundef %5, i32 noundef %8) #10, !dbg !3842
  %9 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !3843
  %10 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %9, i32 0, i32 0, !dbg !3844
  store i32 0, i32* %10, align 4, !dbg !3845
  ret void, !dbg !3846
}

; Function Attrs: noinline nounwind optnone
define internal i32 @char_out(i32 noundef %0, i8* noundef %1) #1 !dbg !3847 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3848, metadata !DIExpression()), !dbg !3849
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3850, metadata !DIExpression()), !dbg !3851
  %5 = load i8*, i8** %4, align 4, !dbg !3852
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3853
  %7 = load i32, i32* %3, align 4, !dbg !3854
  %8 = call i32 %6(i32 noundef %7) #10, !dbg !3853
  ret i32 %8, !dbg !3855
}

; Function Attrs: noinline nounwind optnone
define internal void @k_str_out(i8* noundef %0, i32 noundef %1) #1 !dbg !3856 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3860, metadata !DIExpression()), !dbg !3861
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3862, metadata !DIExpression()), !dbg !3863
  br label %5, !dbg !3864

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !3865, !srcloc !3867
  br label %6, !dbg !3865

6:                                                ; preds = %5
  %7 = load i8*, i8** %3, align 4, !dbg !3868
  %8 = load i32, i32* %4, align 4, !dbg !3869
  call void @z_impl_k_str_out(i8* noundef %7, i32 noundef %8) #10, !dbg !3870
  ret void, !dbg !3871
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_str_out(i8* noundef %0, i32 noundef %1) #1 !dbg !3872 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3873, metadata !DIExpression()), !dbg !3874
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3875, metadata !DIExpression()), !dbg !3876
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3877, metadata !DIExpression()), !dbg !3878
  store i32 0, i32* %5, align 4, !dbg !3879
  br label %6, !dbg !3881

6:                                                ; preds = %18, %2
  %7 = load i32, i32* %5, align 4, !dbg !3882
  %8 = load i32, i32* %4, align 4, !dbg !3884
  %9 = icmp ult i32 %7, %8, !dbg !3885
  br i1 %9, label %10, label %21, !dbg !3886

10:                                               ; preds = %6
  %11 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3887
  %12 = load i8*, i8** %3, align 4, !dbg !3889
  %13 = load i32, i32* %5, align 4, !dbg !3890
  %14 = getelementptr inbounds i8, i8* %12, i32 %13, !dbg !3889
  %15 = load i8, i8* %14, align 1, !dbg !3889
  %16 = zext i8 %15 to i32, !dbg !3889
  %17 = call i32 %11(i32 noundef %16) #10, !dbg !3887
  br label %18, !dbg !3891

18:                                               ; preds = %10
  %19 = load i32, i32* %5, align 4, !dbg !3892
  %20 = add i32 %19, 1, !dbg !3892
  store i32 %20, i32* %5, align 4, !dbg !3892
  br label %6, !dbg !3893, !llvm.loop !3894

21:                                               ; preds = %6
  ret void, !dbg !3896
}

; Function Attrs: noinline nounwind optnone
define dso_local void @printk(i8* noundef %0, ...) #1 !dbg !3897 {
  %2 = alloca i8*, align 4
  %3 = alloca %struct.__va_list, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3900, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !3902, metadata !DIExpression()), !dbg !3903
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !3904
  call void @llvm.va_start(i8* %4), !dbg !3904
  %5 = load i8*, i8** %2, align 4, !dbg !3905
  %6 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !3906
  %7 = bitcast i8** %6 to [1 x i32]*, !dbg !3906
  %8 = load [1 x i32], [1 x i32]* %7, align 4, !dbg !3906
  call void @vprintk(i8* noundef %5, [1 x i32] %8) #10, !dbg !3906
  %9 = bitcast %struct.__va_list* %3 to i8*, !dbg !3907
  call void @llvm.va_end(i8* %9), !dbg !3907
  ret void, !dbg !3908
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #4

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #4

; Function Attrs: noinline nounwind optnone
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) #1 !dbg !3909 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca %struct.__va_list, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3912, metadata !DIExpression()), !dbg !3913
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3914, metadata !DIExpression()), !dbg !3915
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3916, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.declare(metadata %struct.__va_list* %7, metadata !3918, metadata !DIExpression()), !dbg !3919
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3920, metadata !DIExpression()), !dbg !3921
  %9 = bitcast %struct.__va_list* %7 to i8*, !dbg !3922
  call void @llvm.va_start(i8* %9), !dbg !3922
  %10 = load i8*, i8** %4, align 4, !dbg !3923
  %11 = load i32, i32* %5, align 4, !dbg !3924
  %12 = load i8*, i8** %6, align 4, !dbg !3925
  %13 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %7, i32 0, i32 0, !dbg !3926
  %14 = bitcast i8** %13 to [1 x i32]*, !dbg !3926
  %15 = load [1 x i32], [1 x i32]* %14, align 4, !dbg !3926
  %16 = call i32 @vsnprintk(i8* noundef %10, i32 noundef %11, i8* noundef %12, [1 x i32] %15) #10, !dbg !3926
  store i32 %16, i32* %8, align 4, !dbg !3927
  %17 = bitcast %struct.__va_list* %7 to i8*, !dbg !3928
  call void @llvm.va_end(i8* %17), !dbg !3928
  %18 = load i32, i32* %8, align 4, !dbg !3929
  ret i32 %18, !dbg !3930
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) #1 !dbg !3931 {
  %5 = alloca %struct.__va_list, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca %struct.str_context, align 4
  %10 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0
  %11 = bitcast i8** %10 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %11, align 4
  store i8* %0, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3934, metadata !DIExpression()), !dbg !3935
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3936, metadata !DIExpression()), !dbg !3937
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3938, metadata !DIExpression()), !dbg !3939
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3940, metadata !DIExpression()), !dbg !3941
  call void @llvm.dbg.declare(metadata %struct.str_context* %9, metadata !3942, metadata !DIExpression()), !dbg !3948
  %12 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 0, !dbg !3949
  %13 = load i8*, i8** %6, align 4, !dbg !3950
  store i8* %13, i8** %12, align 4, !dbg !3949
  %14 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 1, !dbg !3949
  %15 = load i32, i32* %7, align 4, !dbg !3951
  store i32 %15, i32* %14, align 4, !dbg !3949
  %16 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3949
  store i32 0, i32* %16, align 4, !dbg !3949
  %17 = bitcast %struct.str_context* %9 to i8*, !dbg !3952
  %18 = load i8*, i8** %8, align 4, !dbg !3953
  %19 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0, !dbg !3954
  %20 = bitcast i8** %19 to [1 x i32]*, !dbg !3954
  %21 = load [1 x i32], [1 x i32]* %20, align 4, !dbg !3954
  %22 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef %17, i8* noundef %18, [1 x i32] %21) #10, !dbg !3954
  %23 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3955
  %24 = load i32, i32* %23, align 4, !dbg !3955
  %25 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 1, !dbg !3957
  %26 = load i32, i32* %25, align 4, !dbg !3957
  %27 = icmp slt i32 %24, %26, !dbg !3958
  br i1 %27, label %28, label %33, !dbg !3959

28:                                               ; preds = %4
  %29 = load i8*, i8** %6, align 4, !dbg !3960
  %30 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3962
  %31 = load i32, i32* %30, align 4, !dbg !3962
  %32 = getelementptr inbounds i8, i8* %29, i32 %31, !dbg !3960
  store i8 0, i8* %32, align 1, !dbg !3963
  br label %33, !dbg !3964

33:                                               ; preds = %28, %4
  %34 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3965
  %35 = load i32, i32* %34, align 4, !dbg !3965
  ret i32 %35, !dbg !3966
}

; Function Attrs: noinline nounwind optnone
define internal i32 @str_out(i32 noundef %0, %struct.str_context* noundef %1) #1 !dbg !3967 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.str_context*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3971, metadata !DIExpression()), !dbg !3972
  store %struct.str_context* %1, %struct.str_context** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.str_context** %5, metadata !3973, metadata !DIExpression()), !dbg !3974
  %6 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3975
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %6, i32 0, i32 0, !dbg !3977
  %8 = load i8*, i8** %7, align 4, !dbg !3977
  %9 = icmp eq i8* %8, null, !dbg !3978
  br i1 %9, label %18, label %10, !dbg !3979

10:                                               ; preds = %2
  %11 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3980
  %12 = getelementptr inbounds %struct.str_context, %struct.str_context* %11, i32 0, i32 2, !dbg !3981
  %13 = load i32, i32* %12, align 4, !dbg !3981
  %14 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3982
  %15 = getelementptr inbounds %struct.str_context, %struct.str_context* %14, i32 0, i32 1, !dbg !3983
  %16 = load i32, i32* %15, align 4, !dbg !3983
  %17 = icmp sge i32 %13, %16, !dbg !3984
  br i1 %17, label %18, label %24, !dbg !3985

18:                                               ; preds = %10, %2
  %19 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3986
  %20 = getelementptr inbounds %struct.str_context, %struct.str_context* %19, i32 0, i32 2, !dbg !3988
  %21 = load i32, i32* %20, align 4, !dbg !3989
  %22 = add nsw i32 %21, 1, !dbg !3989
  store i32 %22, i32* %20, align 4, !dbg !3989
  %23 = load i32, i32* %4, align 4, !dbg !3990
  store i32 %23, i32* %3, align 4, !dbg !3991
  br label %55, !dbg !3991

24:                                               ; preds = %10
  %25 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3992
  %26 = getelementptr inbounds %struct.str_context, %struct.str_context* %25, i32 0, i32 2, !dbg !3994
  %27 = load i32, i32* %26, align 4, !dbg !3994
  %28 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3995
  %29 = getelementptr inbounds %struct.str_context, %struct.str_context* %28, i32 0, i32 1, !dbg !3996
  %30 = load i32, i32* %29, align 4, !dbg !3996
  %31 = sub nsw i32 %30, 1, !dbg !3997
  %32 = icmp eq i32 %27, %31, !dbg !3998
  br i1 %32, label %33, label %42, !dbg !3999

33:                                               ; preds = %24
  %34 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4000
  %35 = getelementptr inbounds %struct.str_context, %struct.str_context* %34, i32 0, i32 0, !dbg !4002
  %36 = load i8*, i8** %35, align 4, !dbg !4002
  %37 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4003
  %38 = getelementptr inbounds %struct.str_context, %struct.str_context* %37, i32 0, i32 2, !dbg !4004
  %39 = load i32, i32* %38, align 4, !dbg !4005
  %40 = add nsw i32 %39, 1, !dbg !4005
  store i32 %40, i32* %38, align 4, !dbg !4005
  %41 = getelementptr inbounds i8, i8* %36, i32 %39, !dbg !4000
  store i8 0, i8* %41, align 1, !dbg !4006
  br label %53, !dbg !4007

42:                                               ; preds = %24
  %43 = load i32, i32* %4, align 4, !dbg !4008
  %44 = trunc i32 %43 to i8, !dbg !4008
  %45 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4010
  %46 = getelementptr inbounds %struct.str_context, %struct.str_context* %45, i32 0, i32 0, !dbg !4011
  %47 = load i8*, i8** %46, align 4, !dbg !4011
  %48 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !4012
  %49 = getelementptr inbounds %struct.str_context, %struct.str_context* %48, i32 0, i32 2, !dbg !4013
  %50 = load i32, i32* %49, align 4, !dbg !4014
  %51 = add nsw i32 %50, 1, !dbg !4014
  store i32 %51, i32* %49, align 4, !dbg !4014
  %52 = getelementptr inbounds i8, i8* %47, i32 %50, !dbg !4010
  store i8 %44, i8* %52, align 1, !dbg !4015
  br label %53

53:                                               ; preds = %42, %33
  %54 = load i32, i32* %4, align 4, !dbg !4016
  store i32 %54, i32* %3, align 4, !dbg !4017
  br label %55, !dbg !4017

55:                                               ; preds = %53, %18
  %56 = load i32, i32* %3, align 4, !dbg !4018
  ret i32 %56, !dbg !4018
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !4019 {
  %5 = alloca void (i8*, i8*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %5, metadata !4023, metadata !DIExpression()), !dbg !4024
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4025, metadata !DIExpression()), !dbg !4026
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4027, metadata !DIExpression()), !dbg !4028
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4029, metadata !DIExpression()), !dbg !4030
  %9 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %5, align 4, !dbg !4031
  %10 = load i8*, i8** %6, align 4, !dbg !4032
  %11 = load i8*, i8** %7, align 4, !dbg !4033
  %12 = load i8*, i8** %8, align 4, !dbg !4034
  call void %9(i8* noundef %10, i8* noundef %11, i8* noundef %12) #10, !dbg !4031
  %13 = call %struct.k_thread.60* @k_current_get() #11, !dbg !4035
  call void @k_thread_abort(%struct.k_thread.60* noundef %13) #10, !dbg !4036
  unreachable, !dbg !4037
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @k_current_get() #6 !dbg !4038 {
  %1 = call %struct.k_thread.60* @z_current_get() #11, !dbg !4136
  ret %struct.k_thread.60* %1, !dbg !4137
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_abort(%struct.k_thread.60* noundef %0) #1 !dbg !4138 {
  %2 = alloca %struct.k_thread.60*, align 4
  store %struct.k_thread.60* %0, %struct.k_thread.60** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %2, metadata !4141, metadata !DIExpression()), !dbg !4142
  br label %3, !dbg !4143

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !4144, !srcloc !4146
  br label %4, !dbg !4144

4:                                                ; preds = %3
  %5 = load %struct.k_thread.60*, %struct.k_thread.60** %2, align 4, !dbg !4147
  call void bitcast (void (%struct.k_thread.203*)* @z_impl_k_thread_abort to void (%struct.k_thread.60*)*)(%struct.k_thread.60* noundef %5) #10, !dbg !4148
  ret void, !dbg !4149
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @z_current_get() #6 !dbg !4150 {
  br label %1, !dbg !4151

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !4152, !srcloc !4154
  br label %2, !dbg !4152

2:                                                ; preds = %1
  %3 = call %struct.k_thread.60* bitcast (%struct.k_thread.203* ()* @z_impl_z_current_get to %struct.k_thread.60* ()*)() #10, !dbg !4155
  ret %struct.k_thread.60* %3, !dbg !4156
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) #1 !dbg !4157 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.__va_list, align 4
  %8 = alloca i32 (...)*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i32, align 4
  %12 = alloca [22 x i8], align 1
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca %struct.anon, align 8
  %18 = alloca %struct.conversion*, align 4
  %19 = alloca %union.argument_value*, align 4
  %20 = alloca i8*, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 4
  %24 = alloca i8*, align 4
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i8, align 1
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %7, i32 0, i32 0
  %45 = bitcast i8** %44 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %45, align 4
  store i32 (...)* %0, i32 (...)** %8, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %8, metadata !4166, metadata !DIExpression()), !dbg !4167
  store i8* %1, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4168, metadata !DIExpression()), !dbg !4169
  store i8* %2, i8** %10, align 4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !4170, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.declare(metadata %struct.__va_list* %7, metadata !4172, metadata !DIExpression()), !dbg !4173
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4174, metadata !DIExpression()), !dbg !4175
  call void @llvm.dbg.declare(metadata [22 x i8]* %12, metadata !4176, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4181, metadata !DIExpression()), !dbg !4182
  store i32 0, i32* %13, align 4, !dbg !4182
  call void @llvm.dbg.declare(metadata i64* %14, metadata !4183, metadata !DIExpression()), !dbg !4184
  call void @llvm.dbg.declare(metadata i8* %15, metadata !4185, metadata !DIExpression()), !dbg !4187
  %46 = load i32, i32* %11, align 4, !dbg !4188
  %47 = and i32 %46, 1, !dbg !4189
  %48 = icmp eq i32 %47, 1, !dbg !4190
  %49 = zext i1 %48 to i8, !dbg !4187
  store i8 %49, i8* %15, align 1, !dbg !4187
  br label %50, !dbg !4191

50:                                               ; preds = %833, %581, %432, %77, %5
  %51 = load i8*, i8** %10, align 4, !dbg !4192
  %52 = load i8, i8* %51, align 1, !dbg !4193
  %53 = zext i8 %52 to i32, !dbg !4193
  %54 = icmp ne i32 %53, 0, !dbg !4194
  br i1 %54, label %55, label %834, !dbg !4191

55:                                               ; preds = %50
  %56 = load i8*, i8** %10, align 4, !dbg !4195
  %57 = load i8, i8* %56, align 1, !dbg !4198
  %58 = zext i8 %57 to i32, !dbg !4198
  %59 = icmp ne i32 %58, 37, !dbg !4199
  br i1 %59, label %60, label %78, !dbg !4200

60:                                               ; preds = %55
  br label %61, !dbg !4201

61:                                               ; preds = %60
  call void @llvm.dbg.declare(metadata i32* %16, metadata !4203, metadata !DIExpression()), !dbg !4205
  %62 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4205
  %63 = load i8*, i8** %10, align 4, !dbg !4205
  %64 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !4205
  store i8* %64, i8** %10, align 4, !dbg !4205
  %65 = load i8, i8* %63, align 1, !dbg !4205
  %66 = zext i8 %65 to i32, !dbg !4205
  %67 = load i8*, i8** %9, align 4, !dbg !4205
  %68 = bitcast i32 (...)* %62 to i32 (i32, i8*)*, !dbg !4205
  %69 = call i32 %68(i32 noundef %66, i8* noundef %67) #10, !dbg !4205
  store i32 %69, i32* %16, align 4, !dbg !4205
  %70 = load i32, i32* %16, align 4, !dbg !4206
  %71 = icmp slt i32 %70, 0, !dbg !4206
  br i1 %71, label %72, label %74, !dbg !4205

72:                                               ; preds = %61
  %73 = load i32, i32* %16, align 4, !dbg !4208
  store i32 %73, i32* %6, align 4, !dbg !4208
  br label %836, !dbg !4208

74:                                               ; preds = %61
  %75 = load i32, i32* %13, align 4, !dbg !4205
  %76 = add i32 %75, 1, !dbg !4205
  store i32 %76, i32* %13, align 4, !dbg !4205
  br label %77, !dbg !4205

77:                                               ; preds = %74
  br label %50, !dbg !4210, !llvm.loop !4211

78:                                               ; preds = %55
  call void @llvm.dbg.declare(metadata %struct.anon* %17, metadata !4213, metadata !DIExpression()), !dbg !4258
  %79 = bitcast %struct.anon* %17 to i8*, !dbg !4258
  call void @llvm.memset.p0i8.i32(i8* align 8 %79, i8 0, i32 24, i1 false), !dbg !4258
  call void @llvm.dbg.declare(metadata %struct.conversion** %18, metadata !4259, metadata !DIExpression()), !dbg !4262
  %80 = getelementptr inbounds %struct.anon, %struct.anon* %17, i32 0, i32 1, !dbg !4263
  store %struct.conversion* %80, %struct.conversion** %18, align 4, !dbg !4262
  call void @llvm.dbg.declare(metadata %union.argument_value** %19, metadata !4264, metadata !DIExpression()), !dbg !4267
  %81 = getelementptr inbounds %struct.anon, %struct.anon* %17, i32 0, i32 0, !dbg !4268
  store %union.argument_value* %81, %union.argument_value** %19, align 4, !dbg !4267
  call void @llvm.dbg.declare(metadata i8** %20, metadata !4269, metadata !DIExpression()), !dbg !4270
  %82 = load i8*, i8** %10, align 4, !dbg !4271
  store i8* %82, i8** %20, align 4, !dbg !4270
  call void @llvm.dbg.declare(metadata i32* %21, metadata !4272, metadata !DIExpression()), !dbg !4273
  store i32 -1, i32* %21, align 4, !dbg !4273
  call void @llvm.dbg.declare(metadata i32* %22, metadata !4274, metadata !DIExpression()), !dbg !4275
  store i32 -1, i32* %22, align 4, !dbg !4275
  call void @llvm.dbg.declare(metadata i8** %23, metadata !4276, metadata !DIExpression()), !dbg !4277
  store i8* null, i8** %23, align 4, !dbg !4277
  call void @llvm.dbg.declare(metadata i8** %24, metadata !4278, metadata !DIExpression()), !dbg !4279
  %83 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4280
  %84 = getelementptr inbounds i8, i8* %83, i32 22, !dbg !4281
  store i8* %84, i8** %24, align 4, !dbg !4279
  call void @llvm.dbg.declare(metadata i8* %25, metadata !4282, metadata !DIExpression()), !dbg !4283
  store i8 0, i8* %25, align 1, !dbg !4283
  %85 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4284
  %86 = load i8*, i8** %20, align 4, !dbg !4285
  %87 = call i8* @extract_conversion(%struct.conversion* noundef %85, i8* noundef %86) #10, !dbg !4286
  store i8* %87, i8** %10, align 4, !dbg !4287
  %88 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4288
  %89 = bitcast %struct.conversion* %88 to i24*, !dbg !4290
  %90 = load i24, i24* %89, align 4, !dbg !4290
  %91 = lshr i24 %90, 8, !dbg !4290
  %92 = and i24 %91, 1, !dbg !4290
  %93 = trunc i24 %92 to i1, !dbg !4290
  br i1 %93, label %94, label %111, !dbg !4291

94:                                               ; preds = %78
  %95 = bitcast %struct.__va_list* %7 to i8**, !dbg !4292
  %96 = load i8*, i8** %95, align 4, !dbg !4292
  %97 = getelementptr inbounds i8, i8* %96, i32 4, !dbg !4292
  store i8* %97, i8** %95, align 4, !dbg !4292
  %98 = bitcast i8* %96 to i32*, !dbg !4292
  %99 = load i32, i32* %98, align 4, !dbg !4292
  store i32 %99, i32* %21, align 4, !dbg !4294
  %100 = load i32, i32* %21, align 4, !dbg !4295
  %101 = icmp slt i32 %100, 0, !dbg !4297
  br i1 %101, label %102, label %110, !dbg !4298

102:                                              ; preds = %94
  %103 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4299
  %104 = bitcast %struct.conversion* %103 to i24*, !dbg !4301
  %105 = load i24, i24* %104, align 4, !dbg !4302
  %106 = and i24 %105, -5, !dbg !4302
  %107 = or i24 %106, 4, !dbg !4302
  store i24 %107, i24* %104, align 4, !dbg !4302
  %108 = load i32, i32* %21, align 4, !dbg !4303
  %109 = sub nsw i32 0, %108, !dbg !4304
  store i32 %109, i32* %21, align 4, !dbg !4305
  br label %110, !dbg !4306

110:                                              ; preds = %102, %94
  br label %125, !dbg !4307

111:                                              ; preds = %78
  %112 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4308
  %113 = bitcast %struct.conversion* %112 to i24*, !dbg !4310
  %114 = load i24, i24* %113, align 4, !dbg !4310
  %115 = lshr i24 %114, 7, !dbg !4310
  %116 = and i24 %115, 1, !dbg !4310
  %117 = trunc i24 %116 to i1, !dbg !4310
  br i1 %117, label %118, label %123, !dbg !4311

118:                                              ; preds = %111
  %119 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4312
  %120 = getelementptr inbounds %struct.conversion, %struct.conversion* %119, i32 0, i32 2, !dbg !4314
  %121 = bitcast %union.anon.68* %120 to i32*, !dbg !4314
  %122 = load i32, i32* %121, align 4, !dbg !4314
  store i32 %122, i32* %21, align 4, !dbg !4315
  br label %124, !dbg !4316

123:                                              ; preds = %111
  br label %124

124:                                              ; preds = %123, %118
  br label %125

125:                                              ; preds = %124, %110
  %126 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4317
  %127 = bitcast %struct.conversion* %126 to i24*, !dbg !4319
  %128 = load i24, i24* %127, align 4, !dbg !4319
  %129 = lshr i24 %128, 10, !dbg !4319
  %130 = and i24 %129, 1, !dbg !4319
  %131 = trunc i24 %130 to i1, !dbg !4319
  br i1 %131, label %132, label %149, !dbg !4320

132:                                              ; preds = %125
  call void @llvm.dbg.declare(metadata i32* %26, metadata !4321, metadata !DIExpression()), !dbg !4323
  %133 = bitcast %struct.__va_list* %7 to i8**, !dbg !4324
  %134 = load i8*, i8** %133, align 4, !dbg !4324
  %135 = getelementptr inbounds i8, i8* %134, i32 4, !dbg !4324
  store i8* %135, i8** %133, align 4, !dbg !4324
  %136 = bitcast i8* %134 to i32*, !dbg !4324
  %137 = load i32, i32* %136, align 4, !dbg !4324
  store i32 %137, i32* %26, align 4, !dbg !4323
  %138 = load i32, i32* %26, align 4, !dbg !4325
  %139 = icmp slt i32 %138, 0, !dbg !4327
  br i1 %139, label %140, label %146, !dbg !4328

140:                                              ; preds = %132
  %141 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4329
  %142 = bitcast %struct.conversion* %141 to i24*, !dbg !4331
  %143 = load i24, i24* %142, align 4, !dbg !4332
  %144 = and i24 %143, -513, !dbg !4332
  %145 = or i24 %144, 0, !dbg !4332
  store i24 %145, i24* %142, align 4, !dbg !4332
  br label %148, !dbg !4333

146:                                              ; preds = %132
  %147 = load i32, i32* %26, align 4, !dbg !4334
  store i32 %147, i32* %22, align 4, !dbg !4336
  br label %148

148:                                              ; preds = %146, %140
  br label %163, !dbg !4337

149:                                              ; preds = %125
  %150 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4338
  %151 = bitcast %struct.conversion* %150 to i24*, !dbg !4340
  %152 = load i24, i24* %151, align 4, !dbg !4340
  %153 = lshr i24 %152, 9, !dbg !4340
  %154 = and i24 %153, 1, !dbg !4340
  %155 = trunc i24 %154 to i1, !dbg !4340
  br i1 %155, label %156, label %161, !dbg !4341

156:                                              ; preds = %149
  %157 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4342
  %158 = getelementptr inbounds %struct.conversion, %struct.conversion* %157, i32 0, i32 3, !dbg !4344
  %159 = bitcast %union.anon.68* %158 to i32*, !dbg !4344
  %160 = load i32, i32* %159, align 4, !dbg !4344
  store i32 %160, i32* %22, align 4, !dbg !4345
  br label %162, !dbg !4346

161:                                              ; preds = %149
  br label %162

162:                                              ; preds = %161, %156
  br label %163

163:                                              ; preds = %162, %148
  %164 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4347
  %165 = getelementptr inbounds %struct.conversion, %struct.conversion* %164, i32 0, i32 2, !dbg !4348
  %166 = bitcast %union.anon.68* %165 to i32*, !dbg !4348
  store i32 0, i32* %166, align 4, !dbg !4349
  %167 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4350
  %168 = getelementptr inbounds %struct.conversion, %struct.conversion* %167, i32 0, i32 3, !dbg !4351
  %169 = bitcast %union.anon.68* %168 to i32*, !dbg !4351
  store i32 0, i32* %169, align 4, !dbg !4352
  call void @llvm.dbg.declare(metadata i32* %27, metadata !4353, metadata !DIExpression()), !dbg !4354
  %170 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4355
  %171 = bitcast %struct.conversion* %170 to i24*, !dbg !4356
  %172 = load i24, i24* %171, align 4, !dbg !4356
  %173 = lshr i24 %172, 16, !dbg !4356
  %174 = and i24 %173, 7, !dbg !4356
  %175 = zext i24 %174 to i32, !dbg !4356
  store i32 %175, i32* %27, align 4, !dbg !4354
  call void @llvm.dbg.declare(metadata i32* %28, metadata !4357, metadata !DIExpression()), !dbg !4358
  %176 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4359
  %177 = bitcast %struct.conversion* %176 to i24*, !dbg !4360
  %178 = load i24, i24* %177, align 4, !dbg !4360
  %179 = lshr i24 %178, 11, !dbg !4360
  %180 = and i24 %179, 15, !dbg !4360
  %181 = zext i24 %180 to i32, !dbg !4360
  store i32 %181, i32* %28, align 4, !dbg !4358
  %182 = load i32, i32* %27, align 4, !dbg !4361
  %183 = icmp eq i32 %182, 1, !dbg !4363
  br i1 %183, label %184, label %262, !dbg !4364

184:                                              ; preds = %163
  %185 = load i32, i32* %28, align 4, !dbg !4365
  switch i32 %185, label %186 [
    i32 0, label %187
    i32 1, label %187
    i32 2, label %187
    i32 3, label %196
    i32 4, label %205
    i32 5, label %217
    i32 6, label %229
    i32 7, label %229
  ], !dbg !4367

186:                                              ; preds = %184
  br label %187, !dbg !4368

187:                                              ; preds = %184, %184, %184, %186
  %188 = bitcast %struct.__va_list* %7 to i8**, !dbg !4369
  %189 = load i8*, i8** %188, align 4, !dbg !4369
  %190 = getelementptr inbounds i8, i8* %189, i32 4, !dbg !4369
  store i8* %190, i8** %188, align 4, !dbg !4369
  %191 = bitcast i8* %189 to i32*, !dbg !4369
  %192 = load i32, i32* %191, align 4, !dbg !4369
  %193 = sext i32 %192 to i64, !dbg !4369
  %194 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4371
  %195 = bitcast %union.argument_value* %194 to i64*, !dbg !4372
  store i64 %193, i64* %195, align 8, !dbg !4373
  br label %238, !dbg !4374

196:                                              ; preds = %184
  %197 = bitcast %struct.__va_list* %7 to i8**, !dbg !4375
  %198 = load i8*, i8** %197, align 4, !dbg !4375
  %199 = getelementptr inbounds i8, i8* %198, i32 4, !dbg !4375
  store i8* %199, i8** %197, align 4, !dbg !4375
  %200 = bitcast i8* %198 to i32*, !dbg !4375
  %201 = load i32, i32* %200, align 4, !dbg !4375
  %202 = sext i32 %201 to i64, !dbg !4375
  %203 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4378
  %204 = bitcast %union.argument_value* %203 to i64*, !dbg !4379
  store i64 %202, i64* %204, align 8, !dbg !4380
  br label %238, !dbg !4381

205:                                              ; preds = %184
  %206 = bitcast %struct.__va_list* %7 to i8**, !dbg !4382
  %207 = load i8*, i8** %206, align 4, !dbg !4382
  %208 = ptrtoint i8* %207 to i32, !dbg !4382
  %209 = add i32 %208, 7, !dbg !4382
  %210 = and i32 %209, -8, !dbg !4382
  %211 = inttoptr i32 %210 to i8*, !dbg !4382
  %212 = getelementptr inbounds i8, i8* %211, i32 8, !dbg !4382
  store i8* %212, i8** %206, align 4, !dbg !4382
  %213 = bitcast i8* %211 to i64*, !dbg !4382
  %214 = load i64, i64* %213, align 8, !dbg !4382
  %215 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4383
  %216 = bitcast %union.argument_value* %215 to i64*, !dbg !4384
  store i64 %214, i64* %216, align 8, !dbg !4385
  br label %238, !dbg !4386

217:                                              ; preds = %184
  %218 = bitcast %struct.__va_list* %7 to i8**, !dbg !4387
  %219 = load i8*, i8** %218, align 4, !dbg !4387
  %220 = ptrtoint i8* %219 to i32, !dbg !4387
  %221 = add i32 %220, 7, !dbg !4387
  %222 = and i32 %221, -8, !dbg !4387
  %223 = inttoptr i32 %222 to i8*, !dbg !4387
  %224 = getelementptr inbounds i8, i8* %223, i32 8, !dbg !4387
  store i8* %224, i8** %218, align 4, !dbg !4387
  %225 = bitcast i8* %223 to i64*, !dbg !4387
  %226 = load i64, i64* %225, align 8, !dbg !4387
  %227 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4388
  %228 = bitcast %union.argument_value* %227 to i64*, !dbg !4389
  store i64 %226, i64* %228, align 8, !dbg !4390
  br label %238, !dbg !4391

229:                                              ; preds = %184, %184
  %230 = bitcast %struct.__va_list* %7 to i8**, !dbg !4392
  %231 = load i8*, i8** %230, align 4, !dbg !4392
  %232 = getelementptr inbounds i8, i8* %231, i32 4, !dbg !4392
  store i8* %232, i8** %230, align 4, !dbg !4392
  %233 = bitcast i8* %231 to i32*, !dbg !4392
  %234 = load i32, i32* %233, align 4, !dbg !4392
  %235 = sext i32 %234 to i64, !dbg !4393
  %236 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4394
  %237 = bitcast %union.argument_value* %236 to i64*, !dbg !4395
  store i64 %235, i64* %237, align 8, !dbg !4396
  br label %238, !dbg !4397

238:                                              ; preds = %229, %217, %205, %196, %187
  %239 = load i32, i32* %28, align 4, !dbg !4398
  %240 = icmp eq i32 %239, 1, !dbg !4400
  br i1 %240, label %241, label %249, !dbg !4401

241:                                              ; preds = %238
  %242 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4402
  %243 = bitcast %union.argument_value* %242 to i64*, !dbg !4404
  %244 = load i64, i64* %243, align 8, !dbg !4404
  %245 = trunc i64 %244 to i8, !dbg !4405
  %246 = sext i8 %245 to i64, !dbg !4405
  %247 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4406
  %248 = bitcast %union.argument_value* %247 to i64*, !dbg !4407
  store i64 %246, i64* %248, align 8, !dbg !4408
  br label %261, !dbg !4409

249:                                              ; preds = %238
  %250 = load i32, i32* %28, align 4, !dbg !4410
  %251 = icmp eq i32 %250, 2, !dbg !4412
  br i1 %251, label %252, label %260, !dbg !4413

252:                                              ; preds = %249
  %253 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4414
  %254 = bitcast %union.argument_value* %253 to i64*, !dbg !4416
  %255 = load i64, i64* %254, align 8, !dbg !4416
  %256 = trunc i64 %255 to i16, !dbg !4417
  %257 = sext i16 %256 to i64, !dbg !4417
  %258 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4418
  %259 = bitcast %union.argument_value* %258 to i64*, !dbg !4419
  store i64 %257, i64* %259, align 8, !dbg !4420
  br label %260, !dbg !4421

260:                                              ; preds = %252, %249
  br label %261

261:                                              ; preds = %260, %241
  br label %404, !dbg !4422

262:                                              ; preds = %163
  %263 = load i32, i32* %27, align 4, !dbg !4423
  %264 = icmp eq i32 %263, 2, !dbg !4425
  br i1 %264, label %265, label %359, !dbg !4426

265:                                              ; preds = %262
  %266 = load i32, i32* %28, align 4, !dbg !4427
  switch i32 %266, label %267 [
    i32 0, label %268
    i32 1, label %268
    i32 2, label %268
    i32 3, label %277
    i32 4, label %302
    i32 5, label %314
    i32 6, label %326
    i32 7, label %326
  ], !dbg !4429

267:                                              ; preds = %265
  br label %268, !dbg !4430

268:                                              ; preds = %265, %265, %265, %267
  %269 = bitcast %struct.__va_list* %7 to i8**, !dbg !4431
  %270 = load i8*, i8** %269, align 4, !dbg !4431
  %271 = getelementptr inbounds i8, i8* %270, i32 4, !dbg !4431
  store i8* %271, i8** %269, align 4, !dbg !4431
  %272 = bitcast i8* %270 to i32*, !dbg !4431
  %273 = load i32, i32* %272, align 4, !dbg !4431
  %274 = zext i32 %273 to i64, !dbg !4431
  %275 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4433
  %276 = bitcast %union.argument_value* %275 to i64*, !dbg !4434
  store i64 %274, i64* %276, align 8, !dbg !4435
  br label %335, !dbg !4436

277:                                              ; preds = %265
  %278 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4437
  %279 = getelementptr inbounds %struct.conversion, %struct.conversion* %278, i32 0, i32 1, !dbg !4439
  %280 = load i8, i8* %279, align 1, !dbg !4439
  %281 = zext i8 %280 to i32, !dbg !4437
  %282 = icmp eq i32 %281, 99, !dbg !4440
  br i1 %282, label %283, label %292, !dbg !4441

283:                                              ; preds = %277
  %284 = bitcast %struct.__va_list* %7 to i8**, !dbg !4442
  %285 = load i8*, i8** %284, align 4, !dbg !4442
  %286 = getelementptr inbounds i8, i8* %285, i32 4, !dbg !4442
  store i8* %286, i8** %284, align 4, !dbg !4442
  %287 = bitcast i8* %285 to i32*, !dbg !4442
  %288 = load i32, i32* %287, align 4, !dbg !4442
  %289 = zext i32 %288 to i64, !dbg !4444
  %290 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4445
  %291 = bitcast %union.argument_value* %290 to i64*, !dbg !4446
  store i64 %289, i64* %291, align 8, !dbg !4447
  br label %301, !dbg !4448

292:                                              ; preds = %277
  %293 = bitcast %struct.__va_list* %7 to i8**, !dbg !4449
  %294 = load i8*, i8** %293, align 4, !dbg !4449
  %295 = getelementptr inbounds i8, i8* %294, i32 4, !dbg !4449
  store i8* %295, i8** %293, align 4, !dbg !4449
  %296 = bitcast i8* %294 to i32*, !dbg !4449
  %297 = load i32, i32* %296, align 4, !dbg !4449
  %298 = zext i32 %297 to i64, !dbg !4449
  %299 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4451
  %300 = bitcast %union.argument_value* %299 to i64*, !dbg !4452
  store i64 %298, i64* %300, align 8, !dbg !4453
  br label %301

301:                                              ; preds = %292, %283
  br label %335, !dbg !4454

302:                                              ; preds = %265
  %303 = bitcast %struct.__va_list* %7 to i8**, !dbg !4455
  %304 = load i8*, i8** %303, align 4, !dbg !4455
  %305 = ptrtoint i8* %304 to i32, !dbg !4455
  %306 = add i32 %305, 7, !dbg !4455
  %307 = and i32 %306, -8, !dbg !4455
  %308 = inttoptr i32 %307 to i8*, !dbg !4455
  %309 = getelementptr inbounds i8, i8* %308, i32 8, !dbg !4455
  store i8* %309, i8** %303, align 4, !dbg !4455
  %310 = bitcast i8* %308 to i64*, !dbg !4455
  %311 = load i64, i64* %310, align 8, !dbg !4455
  %312 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4456
  %313 = bitcast %union.argument_value* %312 to i64*, !dbg !4457
  store i64 %311, i64* %313, align 8, !dbg !4458
  br label %335, !dbg !4459

314:                                              ; preds = %265
  %315 = bitcast %struct.__va_list* %7 to i8**, !dbg !4460
  %316 = load i8*, i8** %315, align 4, !dbg !4460
  %317 = ptrtoint i8* %316 to i32, !dbg !4460
  %318 = add i32 %317, 7, !dbg !4460
  %319 = and i32 %318, -8, !dbg !4460
  %320 = inttoptr i32 %319 to i8*, !dbg !4460
  %321 = getelementptr inbounds i8, i8* %320, i32 8, !dbg !4460
  store i8* %321, i8** %315, align 4, !dbg !4460
  %322 = bitcast i8* %320 to i64*, !dbg !4460
  %323 = load i64, i64* %322, align 8, !dbg !4460
  %324 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4461
  %325 = bitcast %union.argument_value* %324 to i64*, !dbg !4462
  store i64 %323, i64* %325, align 8, !dbg !4463
  br label %335, !dbg !4464

326:                                              ; preds = %265, %265
  %327 = bitcast %struct.__va_list* %7 to i8**, !dbg !4465
  %328 = load i8*, i8** %327, align 4, !dbg !4465
  %329 = getelementptr inbounds i8, i8* %328, i32 4, !dbg !4465
  store i8* %329, i8** %327, align 4, !dbg !4465
  %330 = bitcast i8* %328 to i32*, !dbg !4465
  %331 = load i32, i32* %330, align 4, !dbg !4465
  %332 = zext i32 %331 to i64, !dbg !4466
  %333 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4467
  %334 = bitcast %union.argument_value* %333 to i64*, !dbg !4468
  store i64 %332, i64* %334, align 8, !dbg !4469
  br label %335, !dbg !4470

335:                                              ; preds = %326, %314, %302, %301, %268
  %336 = load i32, i32* %28, align 4, !dbg !4471
  %337 = icmp eq i32 %336, 1, !dbg !4473
  br i1 %337, label %338, label %346, !dbg !4474

338:                                              ; preds = %335
  %339 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4475
  %340 = bitcast %union.argument_value* %339 to i64*, !dbg !4477
  %341 = load i64, i64* %340, align 8, !dbg !4477
  %342 = trunc i64 %341 to i8, !dbg !4478
  %343 = zext i8 %342 to i64, !dbg !4478
  %344 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4479
  %345 = bitcast %union.argument_value* %344 to i64*, !dbg !4480
  store i64 %343, i64* %345, align 8, !dbg !4481
  br label %358, !dbg !4482

346:                                              ; preds = %335
  %347 = load i32, i32* %28, align 4, !dbg !4483
  %348 = icmp eq i32 %347, 2, !dbg !4485
  br i1 %348, label %349, label %357, !dbg !4486

349:                                              ; preds = %346
  %350 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4487
  %351 = bitcast %union.argument_value* %350 to i64*, !dbg !4489
  %352 = load i64, i64* %351, align 8, !dbg !4489
  %353 = trunc i64 %352 to i16, !dbg !4490
  %354 = zext i16 %353 to i64, !dbg !4490
  %355 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4491
  %356 = bitcast %union.argument_value* %355 to i64*, !dbg !4492
  store i64 %354, i64* %356, align 8, !dbg !4493
  br label %357, !dbg !4494

357:                                              ; preds = %349, %346
  br label %358

358:                                              ; preds = %357, %338
  br label %403, !dbg !4495

359:                                              ; preds = %262
  %360 = load i32, i32* %27, align 4, !dbg !4496
  %361 = icmp eq i32 %360, 4, !dbg !4498
  br i1 %361, label %362, label %390, !dbg !4499

362:                                              ; preds = %359
  %363 = load i32, i32* %28, align 4, !dbg !4500
  %364 = icmp eq i32 %363, 8, !dbg !4503
  br i1 %364, label %365, label %377, !dbg !4504

365:                                              ; preds = %362
  %366 = bitcast %struct.__va_list* %7 to i8**, !dbg !4505
  %367 = load i8*, i8** %366, align 4, !dbg !4505
  %368 = ptrtoint i8* %367 to i32, !dbg !4505
  %369 = add i32 %368, 7, !dbg !4505
  %370 = and i32 %369, -8, !dbg !4505
  %371 = inttoptr i32 %370 to i8*, !dbg !4505
  %372 = getelementptr inbounds i8, i8* %371, i32 8, !dbg !4505
  store i8* %372, i8** %366, align 4, !dbg !4505
  %373 = bitcast i8* %371 to double*, !dbg !4505
  %374 = load double, double* %373, align 8, !dbg !4505
  %375 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4507
  %376 = bitcast %union.argument_value* %375 to double*, !dbg !4508
  store double %374, double* %376, align 8, !dbg !4509
  br label %389, !dbg !4510

377:                                              ; preds = %362
  %378 = bitcast %struct.__va_list* %7 to i8**, !dbg !4511
  %379 = load i8*, i8** %378, align 4, !dbg !4511
  %380 = ptrtoint i8* %379 to i32, !dbg !4511
  %381 = add i32 %380, 7, !dbg !4511
  %382 = and i32 %381, -8, !dbg !4511
  %383 = inttoptr i32 %382 to i8*, !dbg !4511
  %384 = getelementptr inbounds i8, i8* %383, i32 8, !dbg !4511
  store i8* %384, i8** %378, align 4, !dbg !4511
  %385 = bitcast i8* %383 to double*, !dbg !4511
  %386 = load double, double* %385, align 8, !dbg !4511
  %387 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4513
  %388 = bitcast %union.argument_value* %387 to double*, !dbg !4514
  store double %386, double* %388, align 8, !dbg !4515
  br label %389

389:                                              ; preds = %377, %365
  br label %402, !dbg !4516

390:                                              ; preds = %359
  %391 = load i32, i32* %27, align 4, !dbg !4517
  %392 = icmp eq i32 %391, 3, !dbg !4519
  br i1 %392, label %393, label %401, !dbg !4520

393:                                              ; preds = %390
  %394 = bitcast %struct.__va_list* %7 to i8**, !dbg !4521
  %395 = load i8*, i8** %394, align 4, !dbg !4521
  %396 = getelementptr inbounds i8, i8* %395, i32 4, !dbg !4521
  store i8* %396, i8** %394, align 4, !dbg !4521
  %397 = bitcast i8* %395 to i8**, !dbg !4521
  %398 = load i8*, i8** %397, align 4, !dbg !4521
  %399 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4523
  %400 = bitcast %union.argument_value* %399 to i8**, !dbg !4524
  store i8* %398, i8** %400, align 8, !dbg !4525
  br label %401, !dbg !4526

401:                                              ; preds = %393, %390
  br label %402

402:                                              ; preds = %401, %389
  br label %403

403:                                              ; preds = %402, %358
  br label %404

404:                                              ; preds = %403, %261
  %405 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4527
  %406 = bitcast %struct.conversion* %405 to i24*, !dbg !4529
  %407 = load i24, i24* %406, align 4, !dbg !4529
  %408 = and i24 %407, 1, !dbg !4529
  %409 = trunc i24 %408 to i1, !dbg !4529
  br i1 %409, label %417, label %410, !dbg !4530

410:                                              ; preds = %404
  %411 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4531
  %412 = bitcast %struct.conversion* %411 to i24*, !dbg !4532
  %413 = load i24, i24* %412, align 4, !dbg !4532
  %414 = lshr i24 %413, 1, !dbg !4532
  %415 = and i24 %414, 1, !dbg !4532
  %416 = trunc i24 %415 to i1, !dbg !4532
  br i1 %416, label %417, label %433, !dbg !4533

417:                                              ; preds = %410, %404
  br label %418, !dbg !4534

418:                                              ; preds = %417
  call void @llvm.dbg.declare(metadata i32* %29, metadata !4536, metadata !DIExpression()), !dbg !4538
  %419 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4538
  %420 = load i8*, i8** %9, align 4, !dbg !4538
  %421 = load i8*, i8** %20, align 4, !dbg !4538
  %422 = load i8*, i8** %10, align 4, !dbg !4538
  %423 = call i32 @outs(i32 (...)* noundef %419, i8* noundef %420, i8* noundef %421, i8* noundef %422) #10, !dbg !4538
  store i32 %423, i32* %29, align 4, !dbg !4538
  %424 = load i32, i32* %29, align 4, !dbg !4539
  %425 = icmp slt i32 %424, 0, !dbg !4539
  br i1 %425, label %426, label %428, !dbg !4538

426:                                              ; preds = %418
  %427 = load i32, i32* %29, align 4, !dbg !4541
  store i32 %427, i32* %6, align 4, !dbg !4541
  br label %836, !dbg !4541

428:                                              ; preds = %418
  %429 = load i32, i32* %29, align 4, !dbg !4538
  %430 = load i32, i32* %13, align 4, !dbg !4538
  %431 = add i32 %430, %429, !dbg !4538
  store i32 %431, i32* %13, align 4, !dbg !4538
  br label %432, !dbg !4538

432:                                              ; preds = %428
  br label %50, !dbg !4543, !llvm.loop !4211

433:                                              ; preds = %410
  %434 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4544
  %435 = getelementptr inbounds %struct.conversion, %struct.conversion* %434, i32 0, i32 1, !dbg !4545
  %436 = load i8, i8* %435, align 1, !dbg !4545
  %437 = zext i8 %436 to i32, !dbg !4544
  switch i32 %437, label %577 [
    i32 37, label %438
    i32 115, label %452
    i32 99, label %469
    i32 100, label %478
    i32 105, label %478
    i32 111, label %511
    i32 117, label %511
    i32 120, label %511
    i32 88, label %511
    i32 112, label %545
    i32 110, label %570
    i32 97, label %576
    i32 65, label %576
    i32 101, label %576
    i32 69, label %576
    i32 102, label %576
    i32 70, label %576
    i32 103, label %576
    i32 71, label %576
  ], !dbg !4546

438:                                              ; preds = %433
  br label %439, !dbg !4547

439:                                              ; preds = %438
  call void @llvm.dbg.declare(metadata i32* %30, metadata !4549, metadata !DIExpression()), !dbg !4551
  %440 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4551
  %441 = load i8*, i8** %9, align 4, !dbg !4551
  %442 = bitcast i32 (...)* %440 to i32 (i32, i8*)*, !dbg !4551
  %443 = call i32 %442(i32 noundef 37, i8* noundef %441) #10, !dbg !4551
  store i32 %443, i32* %30, align 4, !dbg !4551
  %444 = load i32, i32* %30, align 4, !dbg !4552
  %445 = icmp slt i32 %444, 0, !dbg !4552
  br i1 %445, label %446, label %448, !dbg !4551

446:                                              ; preds = %439
  %447 = load i32, i32* %30, align 4, !dbg !4554
  store i32 %447, i32* %6, align 4, !dbg !4554
  br label %836, !dbg !4554

448:                                              ; preds = %439
  %449 = load i32, i32* %13, align 4, !dbg !4551
  %450 = add i32 %449, 1, !dbg !4551
  store i32 %450, i32* %13, align 4, !dbg !4551
  br label %451, !dbg !4551

451:                                              ; preds = %448
  br label %578, !dbg !4556

452:                                              ; preds = %433
  %453 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4557
  %454 = bitcast %union.argument_value* %453 to i8**, !dbg !4559
  %455 = load i8*, i8** %454, align 8, !dbg !4559
  store i8* %455, i8** %23, align 4, !dbg !4560
  call void @llvm.dbg.declare(metadata i32* %31, metadata !4561, metadata !DIExpression()), !dbg !4562
  %456 = load i32, i32* %22, align 4, !dbg !4563
  %457 = icmp sge i32 %456, 0, !dbg !4565
  br i1 %457, label %458, label %462, !dbg !4566

458:                                              ; preds = %452
  %459 = load i8*, i8** %23, align 4, !dbg !4567
  %460 = load i32, i32* %22, align 4, !dbg !4569
  %461 = call i32 @strnlen(i8* noundef %459, i32 noundef %460) #10, !dbg !4570
  store i32 %461, i32* %31, align 4, !dbg !4571
  br label %465, !dbg !4572

462:                                              ; preds = %452
  %463 = load i8*, i8** %23, align 4, !dbg !4573
  %464 = call i32 @strlen(i8* noundef %463) #10, !dbg !4575
  store i32 %464, i32* %31, align 4, !dbg !4576
  br label %465

465:                                              ; preds = %462, %458
  %466 = load i8*, i8** %23, align 4, !dbg !4577
  %467 = load i32, i32* %31, align 4, !dbg !4578
  %468 = getelementptr inbounds i8, i8* %466, i32 %467, !dbg !4579
  store i8* %468, i8** %24, align 4, !dbg !4580
  store i32 -1, i32* %22, align 4, !dbg !4581
  br label %578, !dbg !4582

469:                                              ; preds = %433
  %470 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4583
  store i8* %470, i8** %23, align 4, !dbg !4584
  %471 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4585
  %472 = bitcast %union.argument_value* %471 to i64*, !dbg !4586
  %473 = load i64, i64* %472, align 8, !dbg !4586
  %474 = trunc i64 %473 to i8, !dbg !4587
  %475 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4588
  store i8 %474, i8* %475, align 1, !dbg !4589
  %476 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4590
  %477 = getelementptr inbounds i8, i8* %476, i32 1, !dbg !4591
  store i8* %477, i8** %24, align 4, !dbg !4592
  br label %578, !dbg !4593

478:                                              ; preds = %433, %433
  %479 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4594
  %480 = bitcast %struct.conversion* %479 to i24*, !dbg !4596
  %481 = load i24, i24* %480, align 4, !dbg !4596
  %482 = lshr i24 %481, 3, !dbg !4596
  %483 = and i24 %482, 1, !dbg !4596
  %484 = trunc i24 %483 to i1, !dbg !4596
  br i1 %484, label %485, label %486, !dbg !4597

485:                                              ; preds = %478
  store i8 43, i8* %25, align 1, !dbg !4598
  br label %495, !dbg !4600

486:                                              ; preds = %478
  %487 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4601
  %488 = bitcast %struct.conversion* %487 to i24*, !dbg !4603
  %489 = load i24, i24* %488, align 4, !dbg !4603
  %490 = lshr i24 %489, 4, !dbg !4603
  %491 = and i24 %490, 1, !dbg !4603
  %492 = trunc i24 %491 to i1, !dbg !4603
  br i1 %492, label %493, label %494, !dbg !4604

493:                                              ; preds = %486
  store i8 32, i8* %25, align 1, !dbg !4605
  br label %494, !dbg !4607

494:                                              ; preds = %493, %486
  br label %495

495:                                              ; preds = %494, %485
  %496 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4608
  %497 = bitcast %union.argument_value* %496 to i64*, !dbg !4609
  %498 = load i64, i64* %497, align 8, !dbg !4609
  store i64 %498, i64* %14, align 8, !dbg !4610
  %499 = load i64, i64* %14, align 8, !dbg !4611
  %500 = icmp slt i64 %499, 0, !dbg !4613
  br i1 %500, label %501, label %506, !dbg !4614

501:                                              ; preds = %495
  store i8 45, i8* %25, align 1, !dbg !4615
  %502 = load i64, i64* %14, align 8, !dbg !4617
  %503 = sub nsw i64 0, %502, !dbg !4618
  %504 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4619
  %505 = bitcast %union.argument_value* %504 to i64*, !dbg !4620
  store i64 %503, i64* %505, align 8, !dbg !4621
  br label %510, !dbg !4622

506:                                              ; preds = %495
  %507 = load i64, i64* %14, align 8, !dbg !4623
  %508 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4625
  %509 = bitcast %union.argument_value* %508 to i64*, !dbg !4626
  store i64 %507, i64* %509, align 8, !dbg !4627
  br label %510

510:                                              ; preds = %506, %501
  br label %511, !dbg !4628

511:                                              ; preds = %433, %433, %433, %433, %510
  %512 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4629
  %513 = bitcast %union.argument_value* %512 to i64*, !dbg !4630
  %514 = load i64, i64* %513, align 8, !dbg !4630
  %515 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4631
  %516 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4632
  %517 = load i8*, i8** %24, align 4, !dbg !4633
  %518 = call i8* @encode_uint(i64 noundef %514, %struct.conversion* noundef %515, i8* noundef %516, i8* noundef %517) #10, !dbg !4634
  store i8* %518, i8** %23, align 4, !dbg !4635
  br label %519, !dbg !4636

519:                                              ; preds = %550, %511
  call void @llvm.dbg.label(metadata !4637), !dbg !4638
  %520 = load i32, i32* %22, align 4, !dbg !4639
  %521 = icmp sge i32 %520, 0, !dbg !4641
  br i1 %521, label %522, label %544, !dbg !4642

522:                                              ; preds = %519
  call void @llvm.dbg.declare(metadata i32* %32, metadata !4643, metadata !DIExpression()), !dbg !4645
  %523 = load i8*, i8** %24, align 4, !dbg !4646
  %524 = load i8*, i8** %23, align 4, !dbg !4647
  %525 = ptrtoint i8* %523 to i32, !dbg !4648
  %526 = ptrtoint i8* %524 to i32, !dbg !4648
  %527 = sub i32 %525, %526, !dbg !4648
  store i32 %527, i32* %32, align 4, !dbg !4645
  %528 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4649
  %529 = bitcast %struct.conversion* %528 to i24*, !dbg !4650
  %530 = load i24, i24* %529, align 4, !dbg !4651
  %531 = and i24 %530, -65, !dbg !4651
  %532 = or i24 %531, 0, !dbg !4651
  store i24 %532, i24* %529, align 4, !dbg !4651
  %533 = load i32, i32* %32, align 4, !dbg !4652
  %534 = load i32, i32* %22, align 4, !dbg !4654
  %535 = icmp ult i32 %533, %534, !dbg !4655
  br i1 %535, label %536, label %543, !dbg !4656

536:                                              ; preds = %522
  %537 = load i32, i32* %22, align 4, !dbg !4657
  %538 = load i32, i32* %32, align 4, !dbg !4659
  %539 = sub nsw i32 %537, %538, !dbg !4660
  %540 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4661
  %541 = getelementptr inbounds %struct.conversion, %struct.conversion* %540, i32 0, i32 2, !dbg !4662
  %542 = bitcast %union.anon.68* %541 to i32*, !dbg !4662
  store i32 %539, i32* %542, align 4, !dbg !4663
  br label %543, !dbg !4664

543:                                              ; preds = %536, %522
  br label %544, !dbg !4665

544:                                              ; preds = %543, %519
  br label %578, !dbg !4666

545:                                              ; preds = %433
  %546 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4667
  %547 = bitcast %union.argument_value* %546 to i8**, !dbg !4669
  %548 = load i8*, i8** %547, align 8, !dbg !4669
  %549 = icmp ne i8* %548, null, !dbg !4670
  br i1 %549, label %550, label %567, !dbg !4671

550:                                              ; preds = %545
  %551 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4672
  %552 = bitcast %union.argument_value* %551 to i8**, !dbg !4674
  %553 = load i8*, i8** %552, align 8, !dbg !4674
  %554 = ptrtoint i8* %553 to i32, !dbg !4675
  %555 = zext i32 %554 to i64, !dbg !4675
  %556 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4676
  %557 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !4677
  %558 = load i8*, i8** %24, align 4, !dbg !4678
  %559 = call i8* @encode_uint(i64 noundef %555, %struct.conversion* noundef %556, i8* noundef %557, i8* noundef %558) #10, !dbg !4679
  store i8* %559, i8** %23, align 4, !dbg !4680
  %560 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4681
  %561 = bitcast %struct.conversion* %560 to i24*, !dbg !4682
  %562 = load i24, i24* %561, align 4, !dbg !4683
  %563 = and i24 %562, -1048577, !dbg !4683
  %564 = or i24 %563, 1048576, !dbg !4683
  store i24 %564, i24* %561, align 4, !dbg !4683
  %565 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4684
  %566 = getelementptr inbounds %struct.conversion, %struct.conversion* %565, i32 0, i32 1, !dbg !4685
  store i8 120, i8* %566, align 1, !dbg !4686
  br label %519, !dbg !4687

567:                                              ; preds = %545
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8** %23, align 4, !dbg !4688
  %568 = load i8*, i8** %23, align 4, !dbg !4689
  %569 = getelementptr inbounds i8, i8* %568, i32 5, !dbg !4690
  store i8* %569, i8** %24, align 4, !dbg !4691
  br label %578, !dbg !4692

570:                                              ; preds = %433
  %571 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4693
  %572 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !4696
  %573 = bitcast %union.argument_value* %572 to i8**, !dbg !4697
  %574 = load i8*, i8** %573, align 8, !dbg !4697
  %575 = load i32, i32* %13, align 4, !dbg !4698
  call void @store_count(%struct.conversion* noundef %571, i8* noundef %574, i32 noundef %575) #10, !dbg !4699
  br label %578, !dbg !4700

576:                                              ; preds = %433, %433, %433, %433, %433, %433, %433, %433
  br label %578, !dbg !4701

577:                                              ; preds = %433
  br label %578, !dbg !4702

578:                                              ; preds = %577, %576, %570, %567, %544, %469, %465, %451
  %579 = load i8*, i8** %23, align 4, !dbg !4703
  %580 = icmp eq i8* %579, null, !dbg !4705
  br i1 %580, label %581, label %582, !dbg !4706

581:                                              ; preds = %578
  br label %50, !dbg !4707, !llvm.loop !4211

582:                                              ; preds = %578
  call void @llvm.dbg.declare(metadata i32* %33, metadata !4709, metadata !DIExpression()), !dbg !4710
  %583 = load i8*, i8** %24, align 4, !dbg !4711
  %584 = load i8*, i8** %23, align 4, !dbg !4712
  %585 = ptrtoint i8* %583 to i32, !dbg !4713
  %586 = ptrtoint i8* %584 to i32, !dbg !4713
  %587 = sub i32 %585, %586, !dbg !4713
  store i32 %587, i32* %33, align 4, !dbg !4710
  call void @llvm.dbg.declare(metadata i32* %34, metadata !4714, metadata !DIExpression()), !dbg !4715
  store i32 0, i32* %34, align 4, !dbg !4715
  %588 = load i8, i8* %25, align 1, !dbg !4716
  %589 = zext i8 %588 to i32, !dbg !4716
  %590 = icmp ne i32 %589, 0, !dbg !4718
  br i1 %590, label %591, label %594, !dbg !4719

591:                                              ; preds = %582
  %592 = load i32, i32* %33, align 4, !dbg !4720
  %593 = add i32 %592, 1, !dbg !4720
  store i32 %593, i32* %33, align 4, !dbg !4720
  br label %594, !dbg !4722

594:                                              ; preds = %591, %582
  %595 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4723
  %596 = bitcast %struct.conversion* %595 to i24*, !dbg !4725
  %597 = load i24, i24* %596, align 4, !dbg !4725
  %598 = lshr i24 %597, 20, !dbg !4725
  %599 = and i24 %598, 1, !dbg !4725
  %600 = trunc i24 %599 to i1, !dbg !4725
  br i1 %600, label %601, label %604, !dbg !4726

601:                                              ; preds = %594
  %602 = load i32, i32* %33, align 4, !dbg !4727
  %603 = add i32 %602, 2, !dbg !4727
  store i32 %603, i32* %33, align 4, !dbg !4727
  br label %615, !dbg !4729

604:                                              ; preds = %594
  %605 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4730
  %606 = bitcast %struct.conversion* %605 to i24*, !dbg !4732
  %607 = load i24, i24* %606, align 4, !dbg !4732
  %608 = lshr i24 %607, 19, !dbg !4732
  %609 = and i24 %608, 1, !dbg !4732
  %610 = trunc i24 %609 to i1, !dbg !4732
  br i1 %610, label %611, label %614, !dbg !4733

611:                                              ; preds = %604
  %612 = load i32, i32* %33, align 4, !dbg !4734
  %613 = add i32 %612, 1, !dbg !4734
  store i32 %613, i32* %33, align 4, !dbg !4734
  br label %614, !dbg !4736

614:                                              ; preds = %611, %604
  br label %615

615:                                              ; preds = %614, %601
  %616 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4737
  %617 = getelementptr inbounds %struct.conversion, %struct.conversion* %616, i32 0, i32 2, !dbg !4738
  %618 = bitcast %union.anon.68* %617 to i32*, !dbg !4738
  %619 = load i32, i32* %618, align 4, !dbg !4738
  %620 = load i32, i32* %33, align 4, !dbg !4739
  %621 = add i32 %620, %619, !dbg !4739
  store i32 %621, i32* %33, align 4, !dbg !4739
  %622 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4740
  %623 = bitcast %struct.conversion* %622 to i24*, !dbg !4742
  %624 = load i24, i24* %623, align 4, !dbg !4742
  %625 = lshr i24 %624, 22, !dbg !4742
  %626 = and i24 %625, 1, !dbg !4742
  %627 = trunc i24 %626 to i1, !dbg !4742
  br i1 %627, label %628, label %635, !dbg !4743

628:                                              ; preds = %615
  %629 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4744
  %630 = getelementptr inbounds %struct.conversion, %struct.conversion* %629, i32 0, i32 3, !dbg !4746
  %631 = bitcast %union.anon.68* %630 to i32*, !dbg !4746
  %632 = load i32, i32* %631, align 4, !dbg !4746
  %633 = load i32, i32* %33, align 4, !dbg !4747
  %634 = add i32 %633, %632, !dbg !4747
  store i32 %634, i32* %33, align 4, !dbg !4747
  br label %635, !dbg !4748

635:                                              ; preds = %628, %615
  %636 = load i32, i32* %21, align 4, !dbg !4749
  %637 = icmp sgt i32 %636, 0, !dbg !4751
  br i1 %637, label %638, label %699, !dbg !4752

638:                                              ; preds = %635
  %639 = load i32, i32* %33, align 4, !dbg !4753
  %640 = load i32, i32* %21, align 4, !dbg !4755
  %641 = sub nsw i32 %640, %639, !dbg !4755
  store i32 %641, i32* %21, align 4, !dbg !4755
  %642 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4756
  %643 = bitcast %struct.conversion* %642 to i24*, !dbg !4758
  %644 = load i24, i24* %643, align 4, !dbg !4758
  %645 = lshr i24 %644, 2, !dbg !4758
  %646 = and i24 %645, 1, !dbg !4758
  %647 = trunc i24 %646 to i1, !dbg !4758
  br i1 %647, label %698, label %648, !dbg !4759

648:                                              ; preds = %638
  call void @llvm.dbg.declare(metadata i8* %35, metadata !4760, metadata !DIExpression()), !dbg !4762
  store i8 32, i8* %35, align 1, !dbg !4762
  %649 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4763
  %650 = bitcast %struct.conversion* %649 to i24*, !dbg !4765
  %651 = load i24, i24* %650, align 4, !dbg !4765
  %652 = lshr i24 %651, 6, !dbg !4765
  %653 = and i24 %652, 1, !dbg !4765
  %654 = trunc i24 %653 to i1, !dbg !4765
  br i1 %654, label %655, label %676, !dbg !4766

655:                                              ; preds = %648
  %656 = load i8, i8* %25, align 1, !dbg !4767
  %657 = zext i8 %656 to i32, !dbg !4767
  %658 = icmp ne i32 %657, 0, !dbg !4770
  br i1 %658, label %659, label %675, !dbg !4771

659:                                              ; preds = %655
  br label %660, !dbg !4772

660:                                              ; preds = %659
  call void @llvm.dbg.declare(metadata i32* %36, metadata !4774, metadata !DIExpression()), !dbg !4776
  %661 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4776
  %662 = load i8, i8* %25, align 1, !dbg !4776
  %663 = zext i8 %662 to i32, !dbg !4776
  %664 = load i8*, i8** %9, align 4, !dbg !4776
  %665 = bitcast i32 (...)* %661 to i32 (i32, i8*)*, !dbg !4776
  %666 = call i32 %665(i32 noundef %663, i8* noundef %664) #10, !dbg !4776
  store i32 %666, i32* %36, align 4, !dbg !4776
  %667 = load i32, i32* %36, align 4, !dbg !4777
  %668 = icmp slt i32 %667, 0, !dbg !4777
  br i1 %668, label %669, label %671, !dbg !4776

669:                                              ; preds = %660
  %670 = load i32, i32* %36, align 4, !dbg !4779
  store i32 %670, i32* %6, align 4, !dbg !4779
  br label %836, !dbg !4779

671:                                              ; preds = %660
  %672 = load i32, i32* %13, align 4, !dbg !4776
  %673 = add i32 %672, 1, !dbg !4776
  store i32 %673, i32* %13, align 4, !dbg !4776
  br label %674, !dbg !4776

674:                                              ; preds = %671
  store i8 0, i8* %25, align 1, !dbg !4781
  br label %675, !dbg !4782

675:                                              ; preds = %674, %655
  store i8 48, i8* %35, align 1, !dbg !4783
  br label %676, !dbg !4784

676:                                              ; preds = %675, %648
  br label %677, !dbg !4785

677:                                              ; preds = %696, %676
  %678 = load i32, i32* %21, align 4, !dbg !4786
  %679 = add nsw i32 %678, -1, !dbg !4786
  store i32 %679, i32* %21, align 4, !dbg !4786
  %680 = icmp sgt i32 %678, 0, !dbg !4787
  br i1 %680, label %681, label %697, !dbg !4785

681:                                              ; preds = %677
  br label %682, !dbg !4788

682:                                              ; preds = %681
  call void @llvm.dbg.declare(metadata i32* %37, metadata !4790, metadata !DIExpression()), !dbg !4792
  %683 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4792
  %684 = load i8, i8* %35, align 1, !dbg !4792
  %685 = zext i8 %684 to i32, !dbg !4792
  %686 = load i8*, i8** %9, align 4, !dbg !4792
  %687 = bitcast i32 (...)* %683 to i32 (i32, i8*)*, !dbg !4792
  %688 = call i32 %687(i32 noundef %685, i8* noundef %686) #10, !dbg !4792
  store i32 %688, i32* %37, align 4, !dbg !4792
  %689 = load i32, i32* %37, align 4, !dbg !4793
  %690 = icmp slt i32 %689, 0, !dbg !4793
  br i1 %690, label %691, label %693, !dbg !4792

691:                                              ; preds = %682
  %692 = load i32, i32* %37, align 4, !dbg !4795
  store i32 %692, i32* %6, align 4, !dbg !4795
  br label %836, !dbg !4795

693:                                              ; preds = %682
  %694 = load i32, i32* %13, align 4, !dbg !4792
  %695 = add i32 %694, 1, !dbg !4792
  store i32 %695, i32* %13, align 4, !dbg !4792
  br label %696, !dbg !4792

696:                                              ; preds = %693
  br label %677, !dbg !4785, !llvm.loop !4797

697:                                              ; preds = %677
  br label %698, !dbg !4799

698:                                              ; preds = %697, %638
  br label %699, !dbg !4800

699:                                              ; preds = %698, %635
  %700 = load i8, i8* %25, align 1, !dbg !4801
  %701 = zext i8 %700 to i32, !dbg !4801
  %702 = icmp ne i32 %701, 0, !dbg !4803
  br i1 %702, label %703, label %719, !dbg !4804

703:                                              ; preds = %699
  br label %704, !dbg !4805

704:                                              ; preds = %703
  call void @llvm.dbg.declare(metadata i32* %38, metadata !4807, metadata !DIExpression()), !dbg !4809
  %705 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4809
  %706 = load i8, i8* %25, align 1, !dbg !4809
  %707 = zext i8 %706 to i32, !dbg !4809
  %708 = load i8*, i8** %9, align 4, !dbg !4809
  %709 = bitcast i32 (...)* %705 to i32 (i32, i8*)*, !dbg !4809
  %710 = call i32 %709(i32 noundef %707, i8* noundef %708) #10, !dbg !4809
  store i32 %710, i32* %38, align 4, !dbg !4809
  %711 = load i32, i32* %38, align 4, !dbg !4810
  %712 = icmp slt i32 %711, 0, !dbg !4810
  br i1 %712, label %713, label %715, !dbg !4809

713:                                              ; preds = %704
  %714 = load i32, i32* %38, align 4, !dbg !4812
  store i32 %714, i32* %6, align 4, !dbg !4812
  br label %836, !dbg !4812

715:                                              ; preds = %704
  %716 = load i32, i32* %13, align 4, !dbg !4809
  %717 = add i32 %716, 1, !dbg !4809
  store i32 %717, i32* %13, align 4, !dbg !4809
  br label %718, !dbg !4809

718:                                              ; preds = %715
  br label %719, !dbg !4814

719:                                              ; preds = %718, %699
  %720 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4815
  %721 = bitcast %struct.conversion* %720 to i24*, !dbg !4819
  %722 = load i24, i24* %721, align 4, !dbg !4819
  %723 = lshr i24 %722, 20, !dbg !4819
  %724 = and i24 %723, 1, !dbg !4819
  %725 = trunc i24 %724 to i1, !dbg !4819
  %726 = zext i1 %725 to i32, !dbg !4815
  %727 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4820
  %728 = bitcast %struct.conversion* %727 to i24*, !dbg !4821
  %729 = load i24, i24* %728, align 4, !dbg !4821
  %730 = lshr i24 %729, 19, !dbg !4821
  %731 = and i24 %730, 1, !dbg !4821
  %732 = trunc i24 %731 to i1, !dbg !4821
  %733 = zext i1 %732 to i32, !dbg !4820
  %734 = or i32 %726, %733, !dbg !4822
  %735 = icmp ne i32 %734, 0, !dbg !4822
  br i1 %735, label %736, label %750, !dbg !4823

736:                                              ; preds = %719
  br label %737, !dbg !4824

737:                                              ; preds = %736
  call void @llvm.dbg.declare(metadata i32* %39, metadata !4826, metadata !DIExpression()), !dbg !4828
  %738 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4828
  %739 = load i8*, i8** %9, align 4, !dbg !4828
  %740 = bitcast i32 (...)* %738 to i32 (i32, i8*)*, !dbg !4828
  %741 = call i32 %740(i32 noundef 48, i8* noundef %739) #10, !dbg !4828
  store i32 %741, i32* %39, align 4, !dbg !4828
  %742 = load i32, i32* %39, align 4, !dbg !4829
  %743 = icmp slt i32 %742, 0, !dbg !4829
  br i1 %743, label %744, label %746, !dbg !4828

744:                                              ; preds = %737
  %745 = load i32, i32* %39, align 4, !dbg !4831
  store i32 %745, i32* %6, align 4, !dbg !4831
  br label %836, !dbg !4831

746:                                              ; preds = %737
  %747 = load i32, i32* %13, align 4, !dbg !4828
  %748 = add i32 %747, 1, !dbg !4828
  store i32 %748, i32* %13, align 4, !dbg !4828
  br label %749, !dbg !4828

749:                                              ; preds = %746
  br label %750, !dbg !4833

750:                                              ; preds = %749, %719
  %751 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4834
  %752 = bitcast %struct.conversion* %751 to i24*, !dbg !4836
  %753 = load i24, i24* %752, align 4, !dbg !4836
  %754 = lshr i24 %753, 20, !dbg !4836
  %755 = and i24 %754, 1, !dbg !4836
  %756 = trunc i24 %755 to i1, !dbg !4836
  br i1 %756, label %757, label %775, !dbg !4837

757:                                              ; preds = %750
  br label %758, !dbg !4838

758:                                              ; preds = %757
  call void @llvm.dbg.declare(metadata i32* %40, metadata !4840, metadata !DIExpression()), !dbg !4842
  %759 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4842
  %760 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4842
  %761 = getelementptr inbounds %struct.conversion, %struct.conversion* %760, i32 0, i32 1, !dbg !4842
  %762 = load i8, i8* %761, align 1, !dbg !4842
  %763 = zext i8 %762 to i32, !dbg !4842
  %764 = load i8*, i8** %9, align 4, !dbg !4842
  %765 = bitcast i32 (...)* %759 to i32 (i32, i8*)*, !dbg !4842
  %766 = call i32 %765(i32 noundef %763, i8* noundef %764) #10, !dbg !4842
  store i32 %766, i32* %40, align 4, !dbg !4842
  %767 = load i32, i32* %40, align 4, !dbg !4843
  %768 = icmp slt i32 %767, 0, !dbg !4843
  br i1 %768, label %769, label %771, !dbg !4842

769:                                              ; preds = %758
  %770 = load i32, i32* %40, align 4, !dbg !4845
  store i32 %770, i32* %6, align 4, !dbg !4845
  br label %836, !dbg !4845

771:                                              ; preds = %758
  %772 = load i32, i32* %13, align 4, !dbg !4842
  %773 = add i32 %772, 1, !dbg !4842
  store i32 %773, i32* %13, align 4, !dbg !4842
  br label %774, !dbg !4842

774:                                              ; preds = %771
  br label %775, !dbg !4847

775:                                              ; preds = %774, %750
  %776 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !4848
  %777 = getelementptr inbounds %struct.conversion, %struct.conversion* %776, i32 0, i32 2, !dbg !4849
  %778 = bitcast %union.anon.68* %777 to i32*, !dbg !4849
  %779 = load i32, i32* %778, align 4, !dbg !4849
  store i32 %779, i32* %34, align 4, !dbg !4850
  br label %780, !dbg !4851

780:                                              ; preds = %797, %775
  %781 = load i32, i32* %34, align 4, !dbg !4852
  %782 = add nsw i32 %781, -1, !dbg !4852
  store i32 %782, i32* %34, align 4, !dbg !4852
  %783 = icmp sgt i32 %781, 0, !dbg !4853
  br i1 %783, label %784, label %798, !dbg !4851

784:                                              ; preds = %780
  br label %785, !dbg !4854

785:                                              ; preds = %784
  call void @llvm.dbg.declare(metadata i32* %41, metadata !4856, metadata !DIExpression()), !dbg !4858
  %786 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4858
  %787 = load i8*, i8** %9, align 4, !dbg !4858
  %788 = bitcast i32 (...)* %786 to i32 (i32, i8*)*, !dbg !4858
  %789 = call i32 %788(i32 noundef 48, i8* noundef %787) #10, !dbg !4858
  store i32 %789, i32* %41, align 4, !dbg !4858
  %790 = load i32, i32* %41, align 4, !dbg !4859
  %791 = icmp slt i32 %790, 0, !dbg !4859
  br i1 %791, label %792, label %794, !dbg !4858

792:                                              ; preds = %785
  %793 = load i32, i32* %41, align 4, !dbg !4861
  store i32 %793, i32* %6, align 4, !dbg !4861
  br label %836, !dbg !4861

794:                                              ; preds = %785
  %795 = load i32, i32* %13, align 4, !dbg !4858
  %796 = add i32 %795, 1, !dbg !4858
  store i32 %796, i32* %13, align 4, !dbg !4858
  br label %797, !dbg !4858

797:                                              ; preds = %794
  br label %780, !dbg !4851, !llvm.loop !4863

798:                                              ; preds = %780
  br label %799, !dbg !4865

799:                                              ; preds = %798
  call void @llvm.dbg.declare(metadata i32* %42, metadata !4866, metadata !DIExpression()), !dbg !4868
  %800 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4868
  %801 = load i8*, i8** %9, align 4, !dbg !4868
  %802 = load i8*, i8** %23, align 4, !dbg !4868
  %803 = load i8*, i8** %24, align 4, !dbg !4868
  %804 = call i32 @outs(i32 (...)* noundef %800, i8* noundef %801, i8* noundef %802, i8* noundef %803) #10, !dbg !4868
  store i32 %804, i32* %42, align 4, !dbg !4868
  %805 = load i32, i32* %42, align 4, !dbg !4869
  %806 = icmp slt i32 %805, 0, !dbg !4869
  br i1 %806, label %807, label %809, !dbg !4868

807:                                              ; preds = %799
  %808 = load i32, i32* %42, align 4, !dbg !4871
  store i32 %808, i32* %6, align 4, !dbg !4871
  br label %836, !dbg !4871

809:                                              ; preds = %799
  %810 = load i32, i32* %42, align 4, !dbg !4868
  %811 = load i32, i32* %13, align 4, !dbg !4868
  %812 = add i32 %811, %810, !dbg !4868
  store i32 %812, i32* %13, align 4, !dbg !4868
  br label %813, !dbg !4868

813:                                              ; preds = %809
  br label %814, !dbg !4873

814:                                              ; preds = %830, %813
  %815 = load i32, i32* %21, align 4, !dbg !4874
  %816 = icmp sgt i32 %815, 0, !dbg !4875
  br i1 %816, label %817, label %833, !dbg !4873

817:                                              ; preds = %814
  br label %818, !dbg !4876

818:                                              ; preds = %817
  call void @llvm.dbg.declare(metadata i32* %43, metadata !4878, metadata !DIExpression()), !dbg !4880
  %819 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4880
  %820 = load i8*, i8** %9, align 4, !dbg !4880
  %821 = bitcast i32 (...)* %819 to i32 (i32, i8*)*, !dbg !4880
  %822 = call i32 %821(i32 noundef 32, i8* noundef %820) #10, !dbg !4880
  store i32 %822, i32* %43, align 4, !dbg !4880
  %823 = load i32, i32* %43, align 4, !dbg !4881
  %824 = icmp slt i32 %823, 0, !dbg !4881
  br i1 %824, label %825, label %827, !dbg !4880

825:                                              ; preds = %818
  %826 = load i32, i32* %43, align 4, !dbg !4883
  store i32 %826, i32* %6, align 4, !dbg !4883
  br label %836, !dbg !4883

827:                                              ; preds = %818
  %828 = load i32, i32* %13, align 4, !dbg !4880
  %829 = add i32 %828, 1, !dbg !4880
  store i32 %829, i32* %13, align 4, !dbg !4880
  br label %830, !dbg !4880

830:                                              ; preds = %827
  %831 = load i32, i32* %21, align 4, !dbg !4885
  %832 = add nsw i32 %831, -1, !dbg !4885
  store i32 %832, i32* %21, align 4, !dbg !4885
  br label %814, !dbg !4873, !llvm.loop !4886

833:                                              ; preds = %814
  br label %50, !dbg !4191, !llvm.loop !4211

834:                                              ; preds = %50
  %835 = load i32, i32* %13, align 4, !dbg !4888
  store i32 %835, i32* %6, align 4, !dbg !4889
  br label %836, !dbg !4889

836:                                              ; preds = %834, %825, %807, %792, %769, %744, %713, %691, %669, %446, %426, %72
  %837 = load i32, i32* %6, align 4, !dbg !4890
  ret i32 %837, !dbg !4890
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_conversion(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !4891 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca %struct.conversion, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !4894, metadata !DIExpression()), !dbg !4895
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4896, metadata !DIExpression()), !dbg !4897
  %7 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4898
  %8 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %9 = load i24, i24* %8, align 4, !dbg !4899
  %10 = and i24 %9, -2, !dbg !4899
  %11 = or i24 %10, 0, !dbg !4899
  store i24 %11, i24* %8, align 4, !dbg !4899
  %12 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %13 = load i24, i24* %12, align 4, !dbg !4899
  %14 = and i24 %13, -3, !dbg !4899
  %15 = or i24 %14, 0, !dbg !4899
  store i24 %15, i24* %12, align 4, !dbg !4899
  %16 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %17 = load i24, i24* %16, align 4, !dbg !4899
  %18 = and i24 %17, -5, !dbg !4899
  %19 = or i24 %18, 0, !dbg !4899
  store i24 %19, i24* %16, align 4, !dbg !4899
  %20 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %21 = load i24, i24* %20, align 4, !dbg !4899
  %22 = and i24 %21, -9, !dbg !4899
  %23 = or i24 %22, 0, !dbg !4899
  store i24 %23, i24* %20, align 4, !dbg !4899
  %24 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %25 = load i24, i24* %24, align 4, !dbg !4899
  %26 = and i24 %25, -17, !dbg !4899
  %27 = or i24 %26, 0, !dbg !4899
  store i24 %27, i24* %24, align 4, !dbg !4899
  %28 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %29 = load i24, i24* %28, align 4, !dbg !4899
  %30 = and i24 %29, -33, !dbg !4899
  %31 = or i24 %30, 0, !dbg !4899
  store i24 %31, i24* %28, align 4, !dbg !4899
  %32 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %33 = load i24, i24* %32, align 4, !dbg !4899
  %34 = and i24 %33, -65, !dbg !4899
  %35 = or i24 %34, 0, !dbg !4899
  store i24 %35, i24* %32, align 4, !dbg !4899
  %36 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %37 = load i24, i24* %36, align 4, !dbg !4899
  %38 = and i24 %37, -129, !dbg !4899
  %39 = or i24 %38, 0, !dbg !4899
  store i24 %39, i24* %36, align 4, !dbg !4899
  %40 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %41 = load i24, i24* %40, align 4, !dbg !4899
  %42 = and i24 %41, -257, !dbg !4899
  %43 = or i24 %42, 0, !dbg !4899
  store i24 %43, i24* %40, align 4, !dbg !4899
  %44 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %45 = load i24, i24* %44, align 4, !dbg !4899
  %46 = and i24 %45, -513, !dbg !4899
  %47 = or i24 %46, 0, !dbg !4899
  store i24 %47, i24* %44, align 4, !dbg !4899
  %48 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %49 = load i24, i24* %48, align 4, !dbg !4899
  %50 = and i24 %49, -1025, !dbg !4899
  %51 = or i24 %50, 0, !dbg !4899
  store i24 %51, i24* %48, align 4, !dbg !4899
  %52 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %53 = load i24, i24* %52, align 4, !dbg !4899
  %54 = and i24 %53, -30721, !dbg !4899
  %55 = or i24 %54, 0, !dbg !4899
  store i24 %55, i24* %52, align 4, !dbg !4899
  %56 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %57 = load i24, i24* %56, align 4, !dbg !4899
  %58 = and i24 %57, -32769, !dbg !4899
  %59 = or i24 %58, 0, !dbg !4899
  store i24 %59, i24* %56, align 4, !dbg !4899
  %60 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %61 = load i24, i24* %60, align 4, !dbg !4899
  %62 = and i24 %61, -458753, !dbg !4899
  %63 = or i24 %62, 0, !dbg !4899
  store i24 %63, i24* %60, align 4, !dbg !4899
  %64 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %65 = load i24, i24* %64, align 4, !dbg !4899
  %66 = and i24 %65, -524289, !dbg !4899
  %67 = or i24 %66, 0, !dbg !4899
  store i24 %67, i24* %64, align 4, !dbg !4899
  %68 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %69 = load i24, i24* %68, align 4, !dbg !4899
  %70 = and i24 %69, -1048577, !dbg !4899
  %71 = or i24 %70, 0, !dbg !4899
  store i24 %71, i24* %68, align 4, !dbg !4899
  %72 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %73 = load i24, i24* %72, align 4, !dbg !4899
  %74 = and i24 %73, -2097153, !dbg !4899
  %75 = or i24 %74, 0, !dbg !4899
  store i24 %75, i24* %72, align 4, !dbg !4899
  %76 = bitcast %struct.conversion* %6 to i24*, !dbg !4899
  %77 = load i24, i24* %76, align 4, !dbg !4899
  %78 = and i24 %77, -4194305, !dbg !4899
  %79 = or i24 %78, 0, !dbg !4899
  store i24 %79, i24* %76, align 4, !dbg !4899
  %80 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 1, !dbg !4899
  store i8 0, i8* %80, align 1, !dbg !4899
  %81 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 2, !dbg !4899
  %82 = bitcast %union.anon.68* %81 to i8*, !dbg !4899
  call void @llvm.memset.p0i8.i32(i8* align 4 %82, i8 0, i32 4, i1 false), !dbg !4899
  %83 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 3, !dbg !4899
  %84 = bitcast %union.anon.68* %83 to i8*, !dbg !4899
  call void @llvm.memset.p0i8.i32(i8* align 4 %84, i8 0, i32 4, i1 false), !dbg !4899
  %85 = bitcast %struct.conversion* %7 to i8*, !dbg !4900
  %86 = bitcast %struct.conversion* %6 to i8*, !dbg !4900
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %85, i8* align 4 %86, i32 12, i1 false), !dbg !4900
  %87 = load i8*, i8** %5, align 4, !dbg !4901
  %88 = getelementptr inbounds i8, i8* %87, i32 1, !dbg !4901
  store i8* %88, i8** %5, align 4, !dbg !4901
  %89 = load i8*, i8** %5, align 4, !dbg !4902
  %90 = load i8, i8* %89, align 1, !dbg !4904
  %91 = zext i8 %90 to i32, !dbg !4904
  %92 = icmp eq i32 %91, 37, !dbg !4905
  br i1 %92, label %93, label %100, !dbg !4906

93:                                               ; preds = %2
  %94 = load i8*, i8** %5, align 4, !dbg !4907
  %95 = getelementptr inbounds i8, i8* %94, i32 1, !dbg !4907
  store i8* %95, i8** %5, align 4, !dbg !4907
  %96 = load i8, i8* %94, align 1, !dbg !4909
  %97 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4910
  %98 = getelementptr inbounds %struct.conversion, %struct.conversion* %97, i32 0, i32 1, !dbg !4911
  store i8 %96, i8* %98, align 1, !dbg !4912
  %99 = load i8*, i8** %5, align 4, !dbg !4913
  store i8* %99, i8** %3, align 4, !dbg !4914
  br label %117, !dbg !4914

100:                                              ; preds = %2
  %101 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4915
  %102 = load i8*, i8** %5, align 4, !dbg !4916
  %103 = call i8* @extract_flags(%struct.conversion* noundef %101, i8* noundef %102) #10, !dbg !4917
  store i8* %103, i8** %5, align 4, !dbg !4918
  %104 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4919
  %105 = load i8*, i8** %5, align 4, !dbg !4920
  %106 = call i8* @extract_width(%struct.conversion* noundef %104, i8* noundef %105) #10, !dbg !4921
  store i8* %106, i8** %5, align 4, !dbg !4922
  %107 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4923
  %108 = load i8*, i8** %5, align 4, !dbg !4924
  %109 = call i8* @extract_prec(%struct.conversion* noundef %107, i8* noundef %108) #10, !dbg !4925
  store i8* %109, i8** %5, align 4, !dbg !4926
  %110 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4927
  %111 = load i8*, i8** %5, align 4, !dbg !4928
  %112 = call i8* @extract_length(%struct.conversion* noundef %110, i8* noundef %111) #10, !dbg !4929
  store i8* %112, i8** %5, align 4, !dbg !4930
  %113 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4931
  %114 = load i8*, i8** %5, align 4, !dbg !4932
  %115 = call i8* @extract_specifier(%struct.conversion* noundef %113, i8* noundef %114) #10, !dbg !4933
  store i8* %115, i8** %5, align 4, !dbg !4934
  %116 = load i8*, i8** %5, align 4, !dbg !4935
  store i8* %116, i8** %3, align 4, !dbg !4936
  br label %117, !dbg !4936

117:                                              ; preds = %100, %93
  %118 = load i8*, i8** %3, align 4, !dbg !4937
  ret i8* %118, !dbg !4937
}

; Function Attrs: noinline nounwind optnone
define internal i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #1 !dbg !4938 {
  %5 = alloca i32, align 4
  %6 = alloca i32 (...)*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 (...)* %0, i32 (...)** %6, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %6, metadata !4941, metadata !DIExpression()), !dbg !4942
  store i8* %1, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4943, metadata !DIExpression()), !dbg !4944
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4945, metadata !DIExpression()), !dbg !4946
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4947, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4949, metadata !DIExpression()), !dbg !4950
  store i32 0, i32* %10, align 4, !dbg !4950
  br label %12, !dbg !4951

12:                                               ; preds = %41, %4
  %13 = load i8*, i8** %8, align 4, !dbg !4952
  %14 = load i8*, i8** %9, align 4, !dbg !4953
  %15 = icmp ult i8* %13, %14, !dbg !4954
  br i1 %15, label %26, label %16, !dbg !4955

16:                                               ; preds = %12
  %17 = load i8*, i8** %9, align 4, !dbg !4956
  %18 = icmp eq i8* %17, null, !dbg !4957
  br i1 %18, label %19, label %24, !dbg !4958

19:                                               ; preds = %16
  %20 = load i8*, i8** %8, align 4, !dbg !4959
  %21 = load i8, i8* %20, align 1, !dbg !4960
  %22 = zext i8 %21 to i32, !dbg !4960
  %23 = icmp ne i32 %22, 0, !dbg !4958
  br label %24

24:                                               ; preds = %19, %16
  %25 = phi i1 [ false, %16 ], [ %23, %19 ], !dbg !4961
  br label %26, !dbg !4955

26:                                               ; preds = %24, %12
  %27 = phi i1 [ true, %12 ], [ %25, %24 ]
  br i1 %27, label %28, label %44, !dbg !4951

28:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4962, metadata !DIExpression()), !dbg !4964
  %29 = load i32 (...)*, i32 (...)** %6, align 4, !dbg !4965
  %30 = load i8*, i8** %8, align 4, !dbg !4966
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4966
  store i8* %31, i8** %8, align 4, !dbg !4966
  %32 = load i8, i8* %30, align 1, !dbg !4967
  %33 = zext i8 %32 to i32, !dbg !4968
  %34 = load i8*, i8** %7, align 4, !dbg !4969
  %35 = bitcast i32 (...)* %29 to i32 (i32, i8*)*, !dbg !4965
  %36 = call i32 %35(i32 noundef %33, i8* noundef %34) #10, !dbg !4965
  store i32 %36, i32* %11, align 4, !dbg !4964
  %37 = load i32, i32* %11, align 4, !dbg !4970
  %38 = icmp slt i32 %37, 0, !dbg !4972
  br i1 %38, label %39, label %41, !dbg !4973

39:                                               ; preds = %28
  %40 = load i32, i32* %11, align 4, !dbg !4974
  store i32 %40, i32* %5, align 4, !dbg !4976
  br label %46, !dbg !4976

41:                                               ; preds = %28
  %42 = load i32, i32* %10, align 4, !dbg !4977
  %43 = add i32 %42, 1, !dbg !4977
  store i32 %43, i32* %10, align 4, !dbg !4977
  br label %12, !dbg !4951, !llvm.loop !4978

44:                                               ; preds = %26
  %45 = load i32, i32* %10, align 4, !dbg !4980
  store i32 %45, i32* %5, align 4, !dbg !4981
  br label %46, !dbg !4981

46:                                               ; preds = %44, %39
  %47 = load i32, i32* %5, align 4, !dbg !4982
  ret i32 %47, !dbg !4982
}

; Function Attrs: noinline nounwind optnone
define internal i8* @encode_uint(i64 noundef %0, %struct.conversion* noundef %1, i8* noundef %2, i8* noundef %3) #1 !dbg !4983 {
  %5 = alloca i64, align 8
  %6 = alloca %struct.conversion*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 4
  %12 = alloca i32, align 4
  store i64 %0, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4986, metadata !DIExpression()), !dbg !4987
  store %struct.conversion* %1, %struct.conversion** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %6, metadata !4988, metadata !DIExpression()), !dbg !4989
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4990, metadata !DIExpression()), !dbg !4991
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4992, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.declare(metadata i8* %9, metadata !4994, metadata !DIExpression()), !dbg !4995
  %13 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !4996
  %14 = getelementptr inbounds %struct.conversion, %struct.conversion* %13, i32 0, i32 1, !dbg !4997
  %15 = load i8, i8* %14, align 1, !dbg !4997
  %16 = zext i8 %15 to i32, !dbg !4998
  %17 = call i32 @isupper(i32 noundef %16) #10, !dbg !4999
  %18 = icmp ne i32 %17, 0, !dbg !4999
  %19 = zext i1 %18 to i8, !dbg !4995
  store i8 %19, i8* %9, align 1, !dbg !4995
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5000, metadata !DIExpression()), !dbg !5002
  %20 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5003
  %21 = getelementptr inbounds %struct.conversion, %struct.conversion* %20, i32 0, i32 1, !dbg !5004
  %22 = load i8, i8* %21, align 1, !dbg !5004
  %23 = call i32 @conversion_radix(i8 noundef zeroext %22) #10, !dbg !5005
  store i32 %23, i32* %10, align 4, !dbg !5002
  call void @llvm.dbg.declare(metadata i8** %11, metadata !5006, metadata !DIExpression()), !dbg !5007
  %24 = load i8*, i8** %7, align 4, !dbg !5008
  %25 = load i8*, i8** %8, align 4, !dbg !5009
  %26 = load i8*, i8** %7, align 4, !dbg !5010
  %27 = ptrtoint i8* %25 to i32, !dbg !5011
  %28 = ptrtoint i8* %26 to i32, !dbg !5011
  %29 = sub i32 %27, %28, !dbg !5011
  %30 = getelementptr inbounds i8, i8* %24, i32 %29, !dbg !5012
  store i8* %30, i8** %11, align 4, !dbg !5007
  br label %31, !dbg !5013

31:                                               ; preds = %71, %4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5014, metadata !DIExpression()), !dbg !5016
  %32 = load i64, i64* %5, align 8, !dbg !5017
  %33 = load i32, i32* %10, align 4, !dbg !5018
  %34 = zext i32 %33 to i64, !dbg !5018
  %35 = urem i64 %32, %34, !dbg !5019
  %36 = trunc i64 %35 to i32, !dbg !5020
  store i32 %36, i32* %12, align 4, !dbg !5016
  %37 = load i32, i32* %12, align 4, !dbg !5021
  %38 = icmp ule i32 %37, 9, !dbg !5022
  br i1 %38, label %39, label %42, !dbg !5023

39:                                               ; preds = %31
  %40 = load i32, i32* %12, align 4, !dbg !5024
  %41 = add i32 48, %40, !dbg !5025
  br label %55, !dbg !5023

42:                                               ; preds = %31
  %43 = load i8, i8* %9, align 1, !dbg !5026
  %44 = trunc i8 %43 to i1, !dbg !5026
  br i1 %44, label %45, label %49, !dbg !5026

45:                                               ; preds = %42
  %46 = load i32, i32* %12, align 4, !dbg !5027
  %47 = add i32 65, %46, !dbg !5028
  %48 = sub i32 %47, 10, !dbg !5029
  br label %53, !dbg !5026

49:                                               ; preds = %42
  %50 = load i32, i32* %12, align 4, !dbg !5030
  %51 = add i32 97, %50, !dbg !5031
  %52 = sub i32 %51, 10, !dbg !5032
  br label %53, !dbg !5026

53:                                               ; preds = %49, %45
  %54 = phi i32 [ %48, %45 ], [ %52, %49 ], !dbg !5026
  br label %55, !dbg !5023

55:                                               ; preds = %53, %39
  %56 = phi i32 [ %41, %39 ], [ %54, %53 ], !dbg !5023
  %57 = trunc i32 %56 to i8, !dbg !5023
  %58 = load i8*, i8** %11, align 4, !dbg !5033
  %59 = getelementptr inbounds i8, i8* %58, i32 -1, !dbg !5033
  store i8* %59, i8** %11, align 4, !dbg !5033
  store i8 %57, i8* %59, align 1, !dbg !5034
  %60 = load i32, i32* %10, align 4, !dbg !5035
  %61 = zext i32 %60 to i64, !dbg !5035
  %62 = load i64, i64* %5, align 8, !dbg !5036
  %63 = udiv i64 %62, %61, !dbg !5036
  store i64 %63, i64* %5, align 8, !dbg !5036
  br label %64, !dbg !5037

64:                                               ; preds = %55
  %65 = load i64, i64* %5, align 8, !dbg !5038
  %66 = icmp ne i64 %65, 0, !dbg !5039
  br i1 %66, label %67, label %71, !dbg !5040

67:                                               ; preds = %64
  %68 = load i8*, i8** %7, align 4, !dbg !5041
  %69 = load i8*, i8** %11, align 4, !dbg !5042
  %70 = icmp ult i8* %68, %69, !dbg !5043
  br label %71

71:                                               ; preds = %67, %64
  %72 = phi i1 [ false, %64 ], [ %70, %67 ], !dbg !5044
  br i1 %72, label %31, label %73, !dbg !5037, !llvm.loop !5045

73:                                               ; preds = %71
  %74 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5047
  %75 = bitcast %struct.conversion* %74 to i24*, !dbg !5049
  %76 = load i24, i24* %75, align 4, !dbg !5049
  %77 = lshr i24 %76, 5, !dbg !5049
  %78 = and i24 %77, 1, !dbg !5049
  %79 = trunc i24 %78 to i1, !dbg !5049
  br i1 %79, label %80, label %101, !dbg !5050

80:                                               ; preds = %73
  %81 = load i32, i32* %10, align 4, !dbg !5051
  %82 = icmp eq i32 %81, 8, !dbg !5054
  br i1 %82, label %83, label %89, !dbg !5055

83:                                               ; preds = %80
  %84 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5056
  %85 = bitcast %struct.conversion* %84 to i24*, !dbg !5058
  %86 = load i24, i24* %85, align 4, !dbg !5059
  %87 = and i24 %86, -524289, !dbg !5059
  %88 = or i24 %87, 524288, !dbg !5059
  store i24 %88, i24* %85, align 4, !dbg !5059
  br label %100, !dbg !5060

89:                                               ; preds = %80
  %90 = load i32, i32* %10, align 4, !dbg !5061
  %91 = icmp eq i32 %90, 16, !dbg !5063
  br i1 %91, label %92, label %98, !dbg !5064

92:                                               ; preds = %89
  %93 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !5065
  %94 = bitcast %struct.conversion* %93 to i24*, !dbg !5067
  %95 = load i24, i24* %94, align 4, !dbg !5068
  %96 = and i24 %95, -1048577, !dbg !5068
  %97 = or i24 %96, 1048576, !dbg !5068
  store i24 %97, i24* %94, align 4, !dbg !5068
  br label %99, !dbg !5069

98:                                               ; preds = %89
  br label %99

99:                                               ; preds = %98, %92
  br label %100

100:                                              ; preds = %99, %83
  br label %101, !dbg !5070

101:                                              ; preds = %100, %73
  %102 = load i8*, i8** %11, align 4, !dbg !5071
  ret i8* %102, !dbg !5072
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline nounwind optnone
define internal void @store_count(%struct.conversion* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !5073 {
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !5078, metadata !DIExpression()), !dbg !5079
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5080, metadata !DIExpression()), !dbg !5081
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5082, metadata !DIExpression()), !dbg !5083
  %7 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5084
  %8 = bitcast %struct.conversion* %7 to i24*, !dbg !5085
  %9 = load i24, i24* %8, align 4, !dbg !5085
  %10 = lshr i24 %9, 11, !dbg !5085
  %11 = and i24 %10, 15, !dbg !5085
  %12 = zext i24 %11 to i32, !dbg !5085
  switch i32 %12, label %48 [
    i32 0, label %13
    i32 1, label %17
    i32 2, label %21
    i32 3, label %26
    i32 4, label %30
    i32 5, label %35
    i32 6, label %40
    i32 7, label %44
  ], !dbg !5086

13:                                               ; preds = %3
  %14 = load i32, i32* %6, align 4, !dbg !5087
  %15 = load i8*, i8** %5, align 4, !dbg !5089
  %16 = bitcast i8* %15 to i32*, !dbg !5090
  store i32 %14, i32* %16, align 4, !dbg !5091
  br label %49, !dbg !5092

17:                                               ; preds = %3
  %18 = load i32, i32* %6, align 4, !dbg !5093
  %19 = trunc i32 %18 to i8, !dbg !5094
  %20 = load i8*, i8** %5, align 4, !dbg !5095
  store i8 %19, i8* %20, align 1, !dbg !5096
  br label %49, !dbg !5097

21:                                               ; preds = %3
  %22 = load i32, i32* %6, align 4, !dbg !5098
  %23 = trunc i32 %22 to i16, !dbg !5099
  %24 = load i8*, i8** %5, align 4, !dbg !5100
  %25 = bitcast i8* %24 to i16*, !dbg !5101
  store i16 %23, i16* %25, align 2, !dbg !5102
  br label %49, !dbg !5103

26:                                               ; preds = %3
  %27 = load i32, i32* %6, align 4, !dbg !5104
  %28 = load i8*, i8** %5, align 4, !dbg !5105
  %29 = bitcast i8* %28 to i32*, !dbg !5106
  store i32 %27, i32* %29, align 4, !dbg !5107
  br label %49, !dbg !5108

30:                                               ; preds = %3
  %31 = load i32, i32* %6, align 4, !dbg !5109
  %32 = sext i32 %31 to i64, !dbg !5110
  %33 = load i8*, i8** %5, align 4, !dbg !5111
  %34 = bitcast i8* %33 to i64*, !dbg !5112
  store i64 %32, i64* %34, align 8, !dbg !5113
  br label %49, !dbg !5114

35:                                               ; preds = %3
  %36 = load i32, i32* %6, align 4, !dbg !5115
  %37 = sext i32 %36 to i64, !dbg !5116
  %38 = load i8*, i8** %5, align 4, !dbg !5117
  %39 = bitcast i8* %38 to i64*, !dbg !5118
  store i64 %37, i64* %39, align 8, !dbg !5119
  br label %49, !dbg !5120

40:                                               ; preds = %3
  %41 = load i32, i32* %6, align 4, !dbg !5121
  %42 = load i8*, i8** %5, align 4, !dbg !5122
  %43 = bitcast i8* %42 to i32*, !dbg !5123
  store i32 %41, i32* %43, align 4, !dbg !5124
  br label %49, !dbg !5125

44:                                               ; preds = %3
  %45 = load i32, i32* %6, align 4, !dbg !5126
  %46 = load i8*, i8** %5, align 4, !dbg !5127
  %47 = bitcast i8* %46 to i32*, !dbg !5128
  store i32 %45, i32* %47, align 4, !dbg !5129
  br label %49, !dbg !5130

48:                                               ; preds = %3
  br label %49, !dbg !5131

49:                                               ; preds = %48, %44, %40, %35, %30, %26, %21, %17, %13
  ret void, !dbg !5132
}

; Function Attrs: noinline nounwind optnone
define internal i32 @isupper(i32 noundef %0) #1 !dbg !5133 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5135, metadata !DIExpression()), !dbg !5136
  %3 = load i32, i32* %2, align 4, !dbg !5137
  %4 = sub i32 %3, 65, !dbg !5138
  %5 = icmp ult i32 %4, 26, !dbg !5139
  %6 = zext i1 %5 to i32, !dbg !5139
  ret i32 %6, !dbg !5140
}

; Function Attrs: noinline nounwind optnone
define internal i32 @conversion_radix(i8 noundef zeroext %0) #1 !dbg !5141 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  store i8 %0, i8* %3, align 1
  call void @llvm.dbg.declare(metadata i8* %3, metadata !5144, metadata !DIExpression()), !dbg !5145
  %4 = load i8, i8* %3, align 1, !dbg !5146
  %5 = zext i8 %4 to i32, !dbg !5146
  switch i32 %5, label %6 [
    i32 100, label %7
    i32 105, label %7
    i32 117, label %7
    i32 111, label %8
    i32 112, label %9
    i32 120, label %9
    i32 88, label %9
  ], !dbg !5147

6:                                                ; preds = %1
  br label %7, !dbg !5148

7:                                                ; preds = %1, %1, %1, %6
  store i32 10, i32* %2, align 4, !dbg !5149
  br label %10, !dbg !5149

8:                                                ; preds = %1
  store i32 8, i32* %2, align 4, !dbg !5151
  br label %10, !dbg !5151

9:                                                ; preds = %1, %1, %1
  store i32 16, i32* %2, align 4, !dbg !5152
  br label %10, !dbg !5152

10:                                               ; preds = %9, %8, %7
  %11 = load i32, i32* %2, align 4, !dbg !5153
  ret i32 %11, !dbg !5153
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #7

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_flags(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5154 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8, align 1
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !5155, metadata !DIExpression()), !dbg !5156
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5157, metadata !DIExpression()), !dbg !5158
  call void @llvm.dbg.declare(metadata i8* %5, metadata !5159, metadata !DIExpression()), !dbg !5160
  store i8 1, i8* %5, align 1, !dbg !5160
  br label %6, !dbg !5161

6:                                                ; preds = %48, %2
  %7 = load i8*, i8** %4, align 4, !dbg !5162
  %8 = load i8, i8* %7, align 1, !dbg !5164
  %9 = zext i8 %8 to i32, !dbg !5164
  switch i32 %9, label %40 [
    i32 45, label %10
    i32 43, label %16
    i32 32, label %22
    i32 35, label %28
    i32 48, label %34
  ], !dbg !5165

10:                                               ; preds = %6
  %11 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5166
  %12 = bitcast %struct.conversion* %11 to i24*, !dbg !5168
  %13 = load i24, i24* %12, align 4, !dbg !5169
  %14 = and i24 %13, -5, !dbg !5169
  %15 = or i24 %14, 4, !dbg !5169
  store i24 %15, i24* %12, align 4, !dbg !5169
  br label %41, !dbg !5170

16:                                               ; preds = %6
  %17 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5171
  %18 = bitcast %struct.conversion* %17 to i24*, !dbg !5172
  %19 = load i24, i24* %18, align 4, !dbg !5173
  %20 = and i24 %19, -9, !dbg !5173
  %21 = or i24 %20, 8, !dbg !5173
  store i24 %21, i24* %18, align 4, !dbg !5173
  br label %41, !dbg !5174

22:                                               ; preds = %6
  %23 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5175
  %24 = bitcast %struct.conversion* %23 to i24*, !dbg !5176
  %25 = load i24, i24* %24, align 4, !dbg !5177
  %26 = and i24 %25, -17, !dbg !5177
  %27 = or i24 %26, 16, !dbg !5177
  store i24 %27, i24* %24, align 4, !dbg !5177
  br label %41, !dbg !5178

28:                                               ; preds = %6
  %29 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5179
  %30 = bitcast %struct.conversion* %29 to i24*, !dbg !5180
  %31 = load i24, i24* %30, align 4, !dbg !5181
  %32 = and i24 %31, -33, !dbg !5181
  %33 = or i24 %32, 32, !dbg !5181
  store i24 %33, i24* %30, align 4, !dbg !5181
  br label %41, !dbg !5182

34:                                               ; preds = %6
  %35 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5183
  %36 = bitcast %struct.conversion* %35 to i24*, !dbg !5184
  %37 = load i24, i24* %36, align 4, !dbg !5185
  %38 = and i24 %37, -65, !dbg !5185
  %39 = or i24 %38, 64, !dbg !5185
  store i24 %39, i24* %36, align 4, !dbg !5185
  br label %41, !dbg !5186

40:                                               ; preds = %6
  store i8 0, i8* %5, align 1, !dbg !5187
  br label %41, !dbg !5188

41:                                               ; preds = %40, %34, %28, %22, %16, %10
  %42 = load i8, i8* %5, align 1, !dbg !5189
  %43 = trunc i8 %42 to i1, !dbg !5189
  br i1 %43, label %44, label %47, !dbg !5191

44:                                               ; preds = %41
  %45 = load i8*, i8** %4, align 4, !dbg !5192
  %46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !5192
  store i8* %46, i8** %4, align 4, !dbg !5192
  br label %47, !dbg !5194

47:                                               ; preds = %44, %41
  br label %48, !dbg !5195

48:                                               ; preds = %47
  %49 = load i8, i8* %5, align 1, !dbg !5196
  %50 = trunc i8 %49 to i1, !dbg !5196
  br i1 %50, label %6, label %51, !dbg !5195, !llvm.loop !5197

51:                                               ; preds = %48
  %52 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5199
  %53 = bitcast %struct.conversion* %52 to i24*, !dbg !5201
  %54 = load i24, i24* %53, align 4, !dbg !5201
  %55 = lshr i24 %54, 6, !dbg !5201
  %56 = and i24 %55, 1, !dbg !5201
  %57 = trunc i24 %56 to i1, !dbg !5201
  br i1 %57, label %58, label %71, !dbg !5202

58:                                               ; preds = %51
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5203
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !5204
  %61 = load i24, i24* %60, align 4, !dbg !5204
  %62 = lshr i24 %61, 2, !dbg !5204
  %63 = and i24 %62, 1, !dbg !5204
  %64 = trunc i24 %63 to i1, !dbg !5204
  br i1 %64, label %65, label %71, !dbg !5205

65:                                               ; preds = %58
  %66 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5206
  %67 = bitcast %struct.conversion* %66 to i24*, !dbg !5208
  %68 = load i24, i24* %67, align 4, !dbg !5209
  %69 = and i24 %68, -65, !dbg !5209
  %70 = or i24 %69, 0, !dbg !5209
  store i24 %70, i24* %67, align 4, !dbg !5209
  br label %71, !dbg !5210

71:                                               ; preds = %65, %58, %51
  %72 = load i8*, i8** %4, align 4, !dbg !5211
  ret i8* %72, !dbg !5212
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_width(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5213 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !5214, metadata !DIExpression()), !dbg !5215
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5216, metadata !DIExpression()), !dbg !5217
  %8 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5218
  %9 = bitcast %struct.conversion* %8 to i24*, !dbg !5219
  %10 = load i24, i24* %9, align 4, !dbg !5220
  %11 = and i24 %10, -129, !dbg !5220
  %12 = or i24 %11, 128, !dbg !5220
  store i24 %12, i24* %9, align 4, !dbg !5220
  %13 = load i8*, i8** %5, align 4, !dbg !5221
  %14 = load i8, i8* %13, align 1, !dbg !5223
  %15 = zext i8 %14 to i32, !dbg !5223
  %16 = icmp eq i32 %15, 42, !dbg !5224
  br i1 %16, label %17, label %25, !dbg !5225

17:                                               ; preds = %2
  %18 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5226
  %19 = bitcast %struct.conversion* %18 to i24*, !dbg !5228
  %20 = load i24, i24* %19, align 4, !dbg !5229
  %21 = and i24 %20, -257, !dbg !5229
  %22 = or i24 %21, 256, !dbg !5229
  store i24 %22, i24* %19, align 4, !dbg !5229
  %23 = load i8*, i8** %5, align 4, !dbg !5230
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5230
  store i8* %24, i8** %5, align 4, !dbg !5230
  store i8* %24, i8** %3, align 4, !dbg !5231
  br label %74, !dbg !5231

25:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5232, metadata !DIExpression()), !dbg !5233
  %26 = load i8*, i8** %5, align 4, !dbg !5234
  store i8* %26, i8** %6, align 4, !dbg !5233
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5235, metadata !DIExpression()), !dbg !5236
  %27 = call i32 @extract_decimal(i8** noundef %5) #10, !dbg !5237
  store i32 %27, i32* %7, align 4, !dbg !5236
  %28 = load i8*, i8** %5, align 4, !dbg !5238
  %29 = load i8*, i8** %6, align 4, !dbg !5240
  %30 = icmp ne i8* %28, %29, !dbg !5241
  br i1 %30, label %31, label %72, !dbg !5242

31:                                               ; preds = %25
  %32 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5243
  %33 = bitcast %struct.conversion* %32 to i24*, !dbg !5245
  %34 = load i24, i24* %33, align 4, !dbg !5246
  %35 = and i24 %34, -129, !dbg !5246
  %36 = or i24 %35, 128, !dbg !5246
  store i24 %36, i24* %33, align 4, !dbg !5246
  %37 = load i32, i32* %7, align 4, !dbg !5247
  %38 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5248
  %39 = getelementptr inbounds %struct.conversion, %struct.conversion* %38, i32 0, i32 2, !dbg !5249
  %40 = bitcast %union.anon.68* %39 to i32*, !dbg !5249
  store i32 %37, i32* %40, align 4, !dbg !5250
  %41 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5251
  %42 = getelementptr inbounds %struct.conversion, %struct.conversion* %41, i32 0, i32 2, !dbg !5252
  %43 = bitcast %union.anon.68* %42 to i32*, !dbg !5252
  %44 = load i32, i32* %43, align 4, !dbg !5252
  %45 = icmp slt i32 %44, 0, !dbg !5253
  br i1 %45, label %53, label %46, !dbg !5254

46:                                               ; preds = %31
  %47 = load i32, i32* %7, align 4, !dbg !5255
  %48 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5256
  %49 = getelementptr inbounds %struct.conversion, %struct.conversion* %48, i32 0, i32 2, !dbg !5257
  %50 = bitcast %union.anon.68* %49 to i32*, !dbg !5257
  %51 = load i32, i32* %50, align 4, !dbg !5257
  %52 = icmp ne i32 %47, %51, !dbg !5258
  br label %53, !dbg !5254

53:                                               ; preds = %46, %31
  %54 = phi i1 [ true, %31 ], [ %52, %46 ]
  %55 = zext i1 %54 to i32, !dbg !5254
  %56 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5259
  %57 = bitcast %struct.conversion* %56 to i24*, !dbg !5260
  %58 = load i24, i24* %57, align 4, !dbg !5261
  %59 = lshr i24 %58, 1, !dbg !5261
  %60 = and i24 %59, 1, !dbg !5261
  %61 = trunc i24 %60 to i1, !dbg !5261
  %62 = zext i1 %61 to i32, !dbg !5261
  %63 = or i32 %62, %55, !dbg !5261
  %64 = icmp ne i32 %63, 0, !dbg !5261
  %65 = zext i1 %64 to i24, !dbg !5261
  %66 = load i24, i24* %57, align 4, !dbg !5261
  %67 = shl i24 %65, 1, !dbg !5261
  %68 = and i24 %66, -3, !dbg !5261
  %69 = or i24 %68, %67, !dbg !5261
  store i24 %69, i24* %57, align 4, !dbg !5261
  %70 = trunc i24 %65 to i8, !dbg !5261
  %71 = trunc i8 %70 to i1, !dbg !5261
  br label %72, !dbg !5262

72:                                               ; preds = %53, %25
  %73 = load i8*, i8** %5, align 4, !dbg !5263
  store i8* %73, i8** %3, align 4, !dbg !5264
  br label %74, !dbg !5264

74:                                               ; preds = %72, %17
  %75 = load i8*, i8** %3, align 4, !dbg !5265
  ret i8* %75, !dbg !5265
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_prec(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5266 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !5267, metadata !DIExpression()), !dbg !5268
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5269, metadata !DIExpression()), !dbg !5270
  %7 = load i8*, i8** %5, align 4, !dbg !5271
  %8 = load i8, i8* %7, align 1, !dbg !5272
  %9 = zext i8 %8 to i32, !dbg !5272
  %10 = icmp eq i32 %9, 46, !dbg !5273
  %11 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5274
  %12 = bitcast %struct.conversion* %11 to i24*, !dbg !5275
  %13 = zext i1 %10 to i24, !dbg !5276
  %14 = load i24, i24* %12, align 4, !dbg !5276
  %15 = shl i24 %13, 9, !dbg !5276
  %16 = and i24 %14, -513, !dbg !5276
  %17 = or i24 %16, %15, !dbg !5276
  store i24 %17, i24* %12, align 4, !dbg !5276
  %18 = trunc i24 %13 to i8, !dbg !5276
  %19 = trunc i8 %18 to i1, !dbg !5276
  %20 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5277
  %21 = bitcast %struct.conversion* %20 to i24*, !dbg !5279
  %22 = load i24, i24* %21, align 4, !dbg !5279
  %23 = lshr i24 %22, 9, !dbg !5279
  %24 = and i24 %23, 1, !dbg !5279
  %25 = trunc i24 %24 to i1, !dbg !5279
  br i1 %25, label %28, label %26, !dbg !5280

26:                                               ; preds = %2
  %27 = load i8*, i8** %5, align 4, !dbg !5281
  store i8* %27, i8** %3, align 4, !dbg !5283
  br label %81, !dbg !5283

28:                                               ; preds = %2
  %29 = load i8*, i8** %5, align 4, !dbg !5284
  %30 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !5284
  store i8* %30, i8** %5, align 4, !dbg !5284
  %31 = load i8*, i8** %5, align 4, !dbg !5285
  %32 = load i8, i8* %31, align 1, !dbg !5287
  %33 = zext i8 %32 to i32, !dbg !5287
  %34 = icmp eq i32 %33, 42, !dbg !5288
  br i1 %34, label %35, label %43, !dbg !5289

35:                                               ; preds = %28
  %36 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5290
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !5292
  %38 = load i24, i24* %37, align 4, !dbg !5293
  %39 = and i24 %38, -1025, !dbg !5293
  %40 = or i24 %39, 1024, !dbg !5293
  store i24 %40, i24* %37, align 4, !dbg !5293
  %41 = load i8*, i8** %5, align 4, !dbg !5294
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !5294
  store i8* %42, i8** %5, align 4, !dbg !5294
  store i8* %42, i8** %3, align 4, !dbg !5295
  br label %81, !dbg !5295

43:                                               ; preds = %28
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5296, metadata !DIExpression()), !dbg !5297
  %44 = call i32 @extract_decimal(i8** noundef %5) #10, !dbg !5298
  store i32 %44, i32* %6, align 4, !dbg !5297
  %45 = load i32, i32* %6, align 4, !dbg !5299
  %46 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5300
  %47 = getelementptr inbounds %struct.conversion, %struct.conversion* %46, i32 0, i32 3, !dbg !5301
  %48 = bitcast %union.anon.68* %47 to i32*, !dbg !5301
  store i32 %45, i32* %48, align 4, !dbg !5302
  %49 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5303
  %50 = getelementptr inbounds %struct.conversion, %struct.conversion* %49, i32 0, i32 3, !dbg !5304
  %51 = bitcast %union.anon.68* %50 to i32*, !dbg !5304
  %52 = load i32, i32* %51, align 4, !dbg !5304
  %53 = icmp slt i32 %52, 0, !dbg !5305
  br i1 %53, label %61, label %54, !dbg !5306

54:                                               ; preds = %43
  %55 = load i32, i32* %6, align 4, !dbg !5307
  %56 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5308
  %57 = getelementptr inbounds %struct.conversion, %struct.conversion* %56, i32 0, i32 3, !dbg !5309
  %58 = bitcast %union.anon.68* %57 to i32*, !dbg !5309
  %59 = load i32, i32* %58, align 4, !dbg !5309
  %60 = icmp ne i32 %55, %59, !dbg !5310
  br label %61, !dbg !5306

61:                                               ; preds = %54, %43
  %62 = phi i1 [ true, %43 ], [ %60, %54 ]
  %63 = zext i1 %62 to i32, !dbg !5306
  %64 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !5311
  %65 = bitcast %struct.conversion* %64 to i24*, !dbg !5312
  %66 = load i24, i24* %65, align 4, !dbg !5313
  %67 = lshr i24 %66, 1, !dbg !5313
  %68 = and i24 %67, 1, !dbg !5313
  %69 = trunc i24 %68 to i1, !dbg !5313
  %70 = zext i1 %69 to i32, !dbg !5313
  %71 = or i32 %70, %63, !dbg !5313
  %72 = icmp ne i32 %71, 0, !dbg !5313
  %73 = zext i1 %72 to i24, !dbg !5313
  %74 = load i24, i24* %65, align 4, !dbg !5313
  %75 = shl i24 %73, 1, !dbg !5313
  %76 = and i24 %74, -3, !dbg !5313
  %77 = or i24 %76, %75, !dbg !5313
  store i24 %77, i24* %65, align 4, !dbg !5313
  %78 = trunc i24 %73 to i8, !dbg !5313
  %79 = trunc i8 %78 to i1, !dbg !5313
  %80 = load i8*, i8** %5, align 4, !dbg !5314
  store i8* %80, i8** %3, align 4, !dbg !5315
  br label %81, !dbg !5315

81:                                               ; preds = %61, %35, %26
  %82 = load i8*, i8** %3, align 4, !dbg !5316
  ret i8* %82, !dbg !5316
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_length(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5317 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !5318, metadata !DIExpression()), !dbg !5319
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5320, metadata !DIExpression()), !dbg !5321
  %5 = load i8*, i8** %4, align 4, !dbg !5322
  %6 = load i8, i8* %5, align 1, !dbg !5323
  %7 = zext i8 %6 to i32, !dbg !5323
  switch i32 %7, label %87 [
    i32 104, label %8
    i32 108, label %29
    i32 106, label %50
    i32 122, label %58
    i32 116, label %66
    i32 76, label %74
  ], !dbg !5324

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 4, !dbg !5325
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !5325
  store i8* %10, i8** %4, align 4, !dbg !5325
  %11 = load i8, i8* %10, align 1, !dbg !5328
  %12 = zext i8 %11 to i32, !dbg !5328
  %13 = icmp eq i32 %12, 104, !dbg !5329
  br i1 %13, label %14, label %22, !dbg !5330

14:                                               ; preds = %8
  %15 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5331
  %16 = bitcast %struct.conversion* %15 to i24*, !dbg !5333
  %17 = load i24, i24* %16, align 4, !dbg !5334
  %18 = and i24 %17, -30721, !dbg !5334
  %19 = or i24 %18, 2048, !dbg !5334
  store i24 %19, i24* %16, align 4, !dbg !5334
  %20 = load i8*, i8** %4, align 4, !dbg !5335
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !5335
  store i8* %21, i8** %4, align 4, !dbg !5335
  br label %28, !dbg !5336

22:                                               ; preds = %8
  %23 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5337
  %24 = bitcast %struct.conversion* %23 to i24*, !dbg !5339
  %25 = load i24, i24* %24, align 4, !dbg !5340
  %26 = and i24 %25, -30721, !dbg !5340
  %27 = or i24 %26, 4096, !dbg !5340
  store i24 %27, i24* %24, align 4, !dbg !5340
  br label %28

28:                                               ; preds = %22, %14
  br label %93, !dbg !5341

29:                                               ; preds = %2
  %30 = load i8*, i8** %4, align 4, !dbg !5342
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5342
  store i8* %31, i8** %4, align 4, !dbg !5342
  %32 = load i8, i8* %31, align 1, !dbg !5344
  %33 = zext i8 %32 to i32, !dbg !5344
  %34 = icmp eq i32 %33, 108, !dbg !5345
  br i1 %34, label %35, label %43, !dbg !5346

35:                                               ; preds = %29
  %36 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5347
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !5349
  %38 = load i24, i24* %37, align 4, !dbg !5350
  %39 = and i24 %38, -30721, !dbg !5350
  %40 = or i24 %39, 8192, !dbg !5350
  store i24 %40, i24* %37, align 4, !dbg !5350
  %41 = load i8*, i8** %4, align 4, !dbg !5351
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !5351
  store i8* %42, i8** %4, align 4, !dbg !5351
  br label %49, !dbg !5352

43:                                               ; preds = %29
  %44 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5353
  %45 = bitcast %struct.conversion* %44 to i24*, !dbg !5355
  %46 = load i24, i24* %45, align 4, !dbg !5356
  %47 = and i24 %46, -30721, !dbg !5356
  %48 = or i24 %47, 6144, !dbg !5356
  store i24 %48, i24* %45, align 4, !dbg !5356
  br label %49

49:                                               ; preds = %43, %35
  br label %93, !dbg !5357

50:                                               ; preds = %2
  %51 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5358
  %52 = bitcast %struct.conversion* %51 to i24*, !dbg !5359
  %53 = load i24, i24* %52, align 4, !dbg !5360
  %54 = and i24 %53, -30721, !dbg !5360
  %55 = or i24 %54, 10240, !dbg !5360
  store i24 %55, i24* %52, align 4, !dbg !5360
  %56 = load i8*, i8** %4, align 4, !dbg !5361
  %57 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !5361
  store i8* %57, i8** %4, align 4, !dbg !5361
  br label %93, !dbg !5362

58:                                               ; preds = %2
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5363
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !5364
  %61 = load i24, i24* %60, align 4, !dbg !5365
  %62 = and i24 %61, -30721, !dbg !5365
  %63 = or i24 %62, 12288, !dbg !5365
  store i24 %63, i24* %60, align 4, !dbg !5365
  %64 = load i8*, i8** %4, align 4, !dbg !5366
  %65 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !5366
  store i8* %65, i8** %4, align 4, !dbg !5366
  br label %93, !dbg !5367

66:                                               ; preds = %2
  %67 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5368
  %68 = bitcast %struct.conversion* %67 to i24*, !dbg !5369
  %69 = load i24, i24* %68, align 4, !dbg !5370
  %70 = and i24 %69, -30721, !dbg !5370
  %71 = or i24 %70, 14336, !dbg !5370
  store i24 %71, i24* %68, align 4, !dbg !5370
  %72 = load i8*, i8** %4, align 4, !dbg !5371
  %73 = getelementptr inbounds i8, i8* %72, i32 1, !dbg !5371
  store i8* %73, i8** %4, align 4, !dbg !5371
  br label %93, !dbg !5372

74:                                               ; preds = %2
  %75 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5373
  %76 = bitcast %struct.conversion* %75 to i24*, !dbg !5374
  %77 = load i24, i24* %76, align 4, !dbg !5375
  %78 = and i24 %77, -30721, !dbg !5375
  %79 = or i24 %78, 16384, !dbg !5375
  store i24 %79, i24* %76, align 4, !dbg !5375
  %80 = load i8*, i8** %4, align 4, !dbg !5376
  %81 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !5376
  store i8* %81, i8** %4, align 4, !dbg !5376
  %82 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5377
  %83 = bitcast %struct.conversion* %82 to i24*, !dbg !5378
  %84 = load i24, i24* %83, align 4, !dbg !5379
  %85 = and i24 %84, -3, !dbg !5379
  %86 = or i24 %85, 2, !dbg !5379
  store i24 %86, i24* %83, align 4, !dbg !5379
  br label %93, !dbg !5380

87:                                               ; preds = %2
  %88 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5381
  %89 = bitcast %struct.conversion* %88 to i24*, !dbg !5382
  %90 = load i24, i24* %89, align 4, !dbg !5383
  %91 = and i24 %90, -30721, !dbg !5383
  %92 = or i24 %91, 0, !dbg !5383
  store i24 %92, i24* %89, align 4, !dbg !5383
  br label %93, !dbg !5384

93:                                               ; preds = %87, %74, %66, %58, %50, %49, %28
  %94 = load i8*, i8** %4, align 4, !dbg !5385
  ret i8* %94, !dbg !5386
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_specifier(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !5387 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8, align 1
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !5388, metadata !DIExpression()), !dbg !5389
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5390, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.declare(metadata i8* %5, metadata !5392, metadata !DIExpression()), !dbg !5393
  store i8 0, i8* %5, align 1, !dbg !5393
  %6 = load i8*, i8** %4, align 4, !dbg !5394
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !5394
  store i8* %7, i8** %4, align 4, !dbg !5394
  %8 = load i8, i8* %6, align 1, !dbg !5395
  %9 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5396
  %10 = getelementptr inbounds %struct.conversion, %struct.conversion* %9, i32 0, i32 1, !dbg !5397
  store i8 %8, i8* %10, align 1, !dbg !5398
  %11 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5399
  %12 = getelementptr inbounds %struct.conversion, %struct.conversion* %11, i32 0, i32 1, !dbg !5400
  %13 = load i8, i8* %12, align 1, !dbg !5400
  %14 = zext i8 %13 to i32, !dbg !5399
  switch i32 %14, label %94 [
    i32 100, label %15
    i32 105, label %15
    i32 111, label %21
    i32 99, label %21
    i32 117, label %21
    i32 120, label %21
    i32 88, label %21
    i32 97, label %58
    i32 65, label %58
    i32 101, label %58
    i32 69, label %58
    i32 102, label %58
    i32 70, label %58
    i32 103, label %58
    i32 71, label %58
    i32 110, label %64
    i32 115, label %79
    i32 112, label %79
  ], !dbg !5401

15:                                               ; preds = %2, %2
  %16 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5402
  %17 = bitcast %struct.conversion* %16 to i24*, !dbg !5404
  %18 = load i24, i24* %17, align 4, !dbg !5405
  %19 = and i24 %18, -458753, !dbg !5405
  %20 = or i24 %19, 65536, !dbg !5405
  store i24 %20, i24* %17, align 4, !dbg !5405
  br label %27, !dbg !5406

21:                                               ; preds = %2, %2, %2, %2, %2
  %22 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5407
  %23 = bitcast %struct.conversion* %22 to i24*, !dbg !5408
  %24 = load i24, i24* %23, align 4, !dbg !5409
  %25 = and i24 %24, -458753, !dbg !5409
  %26 = or i24 %25, 131072, !dbg !5409
  store i24 %26, i24* %23, align 4, !dbg !5409
  br label %27, !dbg !5407

27:                                               ; preds = %21, %15
  call void @llvm.dbg.label(metadata !5410), !dbg !5411
  %28 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5412
  %29 = bitcast %struct.conversion* %28 to i24*, !dbg !5414
  %30 = load i24, i24* %29, align 4, !dbg !5414
  %31 = lshr i24 %30, 11, !dbg !5414
  %32 = and i24 %31, 15, !dbg !5414
  %33 = zext i24 %32 to i32, !dbg !5414
  %34 = icmp eq i32 %33, 8, !dbg !5415
  br i1 %34, label %35, label %41, !dbg !5416

35:                                               ; preds = %27
  %36 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5417
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !5419
  %38 = load i24, i24* %37, align 4, !dbg !5420
  %39 = and i24 %38, -2, !dbg !5420
  %40 = or i24 %39, 1, !dbg !5420
  store i24 %40, i24* %37, align 4, !dbg !5420
  br label %41, !dbg !5421

41:                                               ; preds = %35, %27
  %42 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5422
  %43 = getelementptr inbounds %struct.conversion, %struct.conversion* %42, i32 0, i32 1, !dbg !5424
  %44 = load i8, i8* %43, align 1, !dbg !5424
  %45 = zext i8 %44 to i32, !dbg !5422
  %46 = icmp eq i32 %45, 99, !dbg !5425
  br i1 %46, label %47, label %56, !dbg !5426

47:                                               ; preds = %41
  %48 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5427
  %49 = bitcast %struct.conversion* %48 to i24*, !dbg !5429
  %50 = load i24, i24* %49, align 4, !dbg !5429
  %51 = lshr i24 %50, 11, !dbg !5429
  %52 = and i24 %51, 15, !dbg !5429
  %53 = zext i24 %52 to i32, !dbg !5429
  %54 = icmp ne i32 %53, 0, !dbg !5430
  %55 = zext i1 %54 to i8, !dbg !5431
  store i8 %55, i8* %5, align 1, !dbg !5431
  br label %57, !dbg !5432

56:                                               ; preds = %41
  br label %57

57:                                               ; preds = %56, %47
  br label %100, !dbg !5433

58:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5434
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !5435
  %61 = load i24, i24* %60, align 4, !dbg !5436
  %62 = and i24 %61, -458753, !dbg !5436
  %63 = or i24 %62, 262144, !dbg !5436
  store i24 %63, i24* %60, align 4, !dbg !5436
  store i8 1, i8* %5, align 1, !dbg !5437
  br label %100, !dbg !5440

64:                                               ; preds = %2
  %65 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5441
  %66 = bitcast %struct.conversion* %65 to i24*, !dbg !5442
  %67 = load i24, i24* %66, align 4, !dbg !5443
  %68 = and i24 %67, -458753, !dbg !5443
  %69 = or i24 %68, 196608, !dbg !5443
  store i24 %69, i24* %66, align 4, !dbg !5443
  %70 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5444
  %71 = bitcast %struct.conversion* %70 to i24*, !dbg !5446
  %72 = load i24, i24* %71, align 4, !dbg !5446
  %73 = lshr i24 %72, 11, !dbg !5446
  %74 = and i24 %73, 15, !dbg !5446
  %75 = zext i24 %74 to i32, !dbg !5446
  %76 = icmp eq i32 %75, 8, !dbg !5447
  br i1 %76, label %77, label %78, !dbg !5448

77:                                               ; preds = %64
  store i8 1, i8* %5, align 1, !dbg !5449
  br label %78, !dbg !5451

78:                                               ; preds = %77, %64
  br label %100, !dbg !5452

79:                                               ; preds = %2, %2
  %80 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5453
  %81 = bitcast %struct.conversion* %80 to i24*, !dbg !5454
  %82 = load i24, i24* %81, align 4, !dbg !5455
  %83 = and i24 %82, -458753, !dbg !5455
  %84 = or i24 %83, 196608, !dbg !5455
  store i24 %84, i24* %81, align 4, !dbg !5455
  %85 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5456
  %86 = bitcast %struct.conversion* %85 to i24*, !dbg !5458
  %87 = load i24, i24* %86, align 4, !dbg !5458
  %88 = lshr i24 %87, 11, !dbg !5458
  %89 = and i24 %88, 15, !dbg !5458
  %90 = zext i24 %89 to i32, !dbg !5458
  %91 = icmp ne i32 %90, 0, !dbg !5459
  br i1 %91, label %92, label %93, !dbg !5460

92:                                               ; preds = %79
  store i8 1, i8* %5, align 1, !dbg !5461
  br label %93, !dbg !5463

93:                                               ; preds = %92, %79
  br label %100, !dbg !5464

94:                                               ; preds = %2
  %95 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5465
  %96 = bitcast %struct.conversion* %95 to i24*, !dbg !5466
  %97 = load i24, i24* %96, align 4, !dbg !5467
  %98 = and i24 %97, -2, !dbg !5467
  %99 = or i24 %98, 1, !dbg !5467
  store i24 %99, i24* %96, align 4, !dbg !5467
  br label %100, !dbg !5468

100:                                              ; preds = %94, %93, %78, %58, %57
  %101 = load i8, i8* %5, align 1, !dbg !5469
  %102 = trunc i8 %101 to i1, !dbg !5469
  %103 = zext i1 %102 to i32, !dbg !5469
  %104 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !5470
  %105 = bitcast %struct.conversion* %104 to i24*, !dbg !5471
  %106 = load i24, i24* %105, align 4, !dbg !5472
  %107 = lshr i24 %106, 1, !dbg !5472
  %108 = and i24 %107, 1, !dbg !5472
  %109 = trunc i24 %108 to i1, !dbg !5472
  %110 = zext i1 %109 to i32, !dbg !5472
  %111 = or i32 %110, %103, !dbg !5472
  %112 = icmp ne i32 %111, 0, !dbg !5472
  %113 = zext i1 %112 to i24, !dbg !5472
  %114 = load i24, i24* %105, align 4, !dbg !5472
  %115 = shl i24 %113, 1, !dbg !5472
  %116 = and i24 %114, -3, !dbg !5472
  %117 = or i24 %116, %115, !dbg !5472
  store i24 %117, i24* %105, align 4, !dbg !5472
  %118 = trunc i24 %113 to i8, !dbg !5472
  %119 = trunc i8 %118 to i1, !dbg !5472
  %120 = load i8*, i8** %4, align 4, !dbg !5473
  ret i8* %120, !dbg !5474
}

; Function Attrs: noinline nounwind optnone
define internal i32 @extract_decimal(i8** noundef %0) #1 !dbg !5475 {
  %2 = alloca i8**, align 4
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8** %0, i8*** %2, align 4
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !5479, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5481, metadata !DIExpression()), !dbg !5482
  %5 = load i8**, i8*** %2, align 4, !dbg !5483
  %6 = load i8*, i8** %5, align 4, !dbg !5484
  store i8* %6, i8** %3, align 4, !dbg !5482
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5485, metadata !DIExpression()), !dbg !5486
  store i32 0, i32* %4, align 4, !dbg !5486
  br label %7, !dbg !5487

7:                                                ; preds = %13, %1
  %8 = load i8*, i8** %3, align 4, !dbg !5488
  %9 = load i8, i8* %8, align 1, !dbg !5489
  %10 = zext i8 %9 to i32, !dbg !5490
  %11 = call i32 @isdigit(i32 noundef %10) #10, !dbg !5491
  %12 = icmp ne i32 %11, 0, !dbg !5487
  br i1 %12, label %13, label %22, !dbg !5487

13:                                               ; preds = %7
  %14 = load i32, i32* %4, align 4, !dbg !5492
  %15 = mul i32 10, %14, !dbg !5494
  %16 = load i8*, i8** %3, align 4, !dbg !5495
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !5495
  store i8* %17, i8** %3, align 4, !dbg !5495
  %18 = load i8, i8* %16, align 1, !dbg !5496
  %19 = zext i8 %18 to i32, !dbg !5496
  %20 = add i32 %15, %19, !dbg !5497
  %21 = sub i32 %20, 48, !dbg !5498
  store i32 %21, i32* %4, align 4, !dbg !5499
  br label %7, !dbg !5487, !llvm.loop !5500

22:                                               ; preds = %7
  %23 = load i8*, i8** %3, align 4, !dbg !5502
  %24 = load i8**, i8*** %2, align 4, !dbg !5503
  store i8* %23, i8** %24, align 4, !dbg !5504
  %25 = load i32, i32* %4, align 4, !dbg !5505
  ret i32 %25, !dbg !5506
}

; Function Attrs: noinline nounwind optnone
define internal i32 @isdigit(i32 noundef %0) #1 !dbg !5507 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5508, metadata !DIExpression()), !dbg !5509
  %3 = load i32, i32* %2, align 4, !dbg !5510
  %4 = sub i32 %3, 48, !dbg !5511
  %5 = icmp ult i32 %4, 10, !dbg !5512
  %6 = zext i1 %5 to i32, !dbg !5512
  ret i32 %6, !dbg !5513
}

; Function Attrs: noinline nounwind optnone
define dso_local void @_ConfigAbsSyms() #1 !dbg !5514 {
  call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #9, !dbg !5516, !srcloc !5517
  call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #9, !dbg !5518, !srcloc !5519
  call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #9, !dbg !5520, !srcloc !5521
  call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,28\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #9, !dbg !5522, !srcloc !5523
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,48000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #9, !dbg !5524, !srcloc !5525
  call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,256\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #9, !dbg !5526, !srcloc !5527
  call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x0\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #9, !dbg !5528, !srcloc !5529
  call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #9, !dbg !5530, !srcloc !5531
  call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #9, !dbg !5532, !srcloc !5533
  call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #9, !dbg !5534, !srcloc !5535
  call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #9, !dbg !5536, !srcloc !5537
  call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #9, !dbg !5538, !srcloc !5539
  call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #9, !dbg !5540, !srcloc !5541
  call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #9, !dbg !5542, !srcloc !5543
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #9, !dbg !5544, !srcloc !5545
  call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #9, !dbg !5546, !srcloc !5547
  call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #9, !dbg !5548, !srcloc !5549
  call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #9, !dbg !5550, !srcloc !5551
  call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #9, !dbg !5552, !srcloc !5553
  call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #9, !dbg !5554, !srcloc !5555
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_APA_APA102_ENABLED\0A\09.equ\09CONFIG_DT_HAS_APA_APA102_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_APA_APA102_ENABLED,%object", ""() #9, !dbg !5556, !srcloc !5557
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV6M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV6M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV6M_SYSTICK_ENABLED,%object", ""() #9, !dbg !5558, !srcloc !5559
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M0__ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M0__ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M0__ENABLED,%object", ""() #9, !dbg !5560, !srcloc !5561
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V6M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V6M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V6M_NVIC_ENABLED,%object", ""() #9, !dbg !5562, !srcloc !5563
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_ADC_ENABLED,%object", ""() #9, !dbg !5564, !srcloc !5565
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_DMAC_ENABLED,%object", ""() #9, !dbg !5566, !srcloc !5567
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_EIC_ENABLED,%object", ""() #9, !dbg !5568, !srcloc !5569
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_GPIO_ENABLED,%object", ""() #9, !dbg !5570, !srcloc !5571
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_ID_ENABLED,%object", ""() #9, !dbg !5572, !srcloc !5573
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_NVMCTRL_ENABLED,%object", ""() #9, !dbg !5574, !srcloc !5575
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_PINCTRL_ENABLED,%object", ""() #9, !dbg !5576, !srcloc !5577
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_PINMUX_ENABLED,%object", ""() #9, !dbg !5578, !srcloc !5579
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_SPI_ENABLED,%object", ""() #9, !dbg !5580, !srcloc !5581
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_TC32_ENABLED,%object", ""() #9, !dbg !5582, !srcloc !5583
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_TCC_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_TCC_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_TCC_PWM_ENABLED,%object", ""() #9, !dbg !5584, !srcloc !5585
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_UART_ENABLED,%object", ""() #9, !dbg !5586, !srcloc !5587
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_USB_ENABLED,%object", ""() #9, !dbg !5588, !srcloc !5589
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM0_WATCHDOG_ENABLED,%object", ""() #9, !dbg !5590, !srcloc !5591
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAMD2X_GCLK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAMD2X_GCLK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAMD2X_GCLK_ENABLED,%object", ""() #9, !dbg !5592, !srcloc !5593
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAMD2X_PM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAMD2X_PM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAMD2X_PM_ENABLED,%object", ""() #9, !dbg !5594, !srcloc !5595
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_PARTITIONS_ENABLED,%object", ""() #9, !dbg !5596, !srcloc !5597
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #9, !dbg !5598, !srcloc !5599
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #9, !dbg !5600, !srcloc !5601
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_PWM_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_PWM_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_PWM_LEDS_ENABLED,%object", ""() #9, !dbg !5602, !srcloc !5603
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #9, !dbg !5604, !srcloc !5605
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #9, !dbg !5606, !srcloc !5607
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #9, !dbg !5608, !srcloc !5609
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #9, !dbg !5610, !srcloc !5611
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #9, !dbg !5612, !srcloc !5613
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #9, !dbg !5614, !srcloc !5615
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #9, !dbg !5616, !srcloc !5617
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #9, !dbg !5618, !srcloc !5619
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #9, !dbg !5620, !srcloc !5621
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #9, !dbg !5622, !srcloc !5623
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #9, !dbg !5624, !srcloc !5625
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #9, !dbg !5626, !srcloc !5627
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #9, !dbg !5628, !srcloc !5629
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #9, !dbg !5630, !srcloc !5631
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #9, !dbg !5632, !srcloc !5633
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #9, !dbg !5634, !srcloc !5635
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #9, !dbg !5636, !srcloc !5637
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #9, !dbg !5638, !srcloc !5639
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #9, !dbg !5640, !srcloc !5641
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #9, !dbg !5642, !srcloc !5643
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #9, !dbg !5644, !srcloc !5645
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #9, !dbg !5646, !srcloc !5647
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #9, !dbg !5648, !srcloc !5649
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #9, !dbg !5650, !srcloc !5651
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #9, !dbg !5652, !srcloc !5653
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #9, !dbg !5654, !srcloc !5655
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #9, !dbg !5656, !srcloc !5657
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #9, !dbg !5658, !srcloc !5659
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #9, !dbg !5660, !srcloc !5661
  call void asm sideeffect ".globl\09CONFIG_ASF\0A\09.equ\09CONFIG_ASF,1\0A\09.type\09CONFIG_ASF,%object", ""() #9, !dbg !5662, !srcloc !5663
  call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #9, !dbg !5664, !srcloc !5665
  call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #9, !dbg !5666, !srcloc !5667
  call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #9, !dbg !5668, !srcloc !5669
  call void asm sideeffect ".globl\09CONFIG_BOARD_ADAFRUIT_TRINKET_M0\0A\09.equ\09CONFIG_BOARD_ADAFRUIT_TRINKET_M0,1\0A\09.type\09CONFIG_BOARD_ADAFRUIT_TRINKET_M0,%object", ""() #9, !dbg !5670, !srcloc !5671
  call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_SAMD21\0A\09.equ\09CONFIG_SOC_SERIES_SAMD21,1\0A\09.type\09CONFIG_SOC_SERIES_SAMD21,%object", ""() #9, !dbg !5672, !srcloc !5673
  call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #9, !dbg !5674, !srcloc !5675
  call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_SAM0\0A\09.equ\09CONFIG_SOC_FAMILY_SAM0,1\0A\09.type\09CONFIG_SOC_FAMILY_SAM0,%object", ""() #9, !dbg !5676, !srcloc !5677
  call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAMD_OSC8M_AS_MAIN\0A\09.equ\09CONFIG_SOC_ATMEL_SAMD_OSC8M_AS_MAIN,1\0A\09.type\09CONFIG_SOC_ATMEL_SAMD_OSC8M_AS_MAIN,%object", ""() #9, !dbg !5678, !srcloc !5679
  call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_SAMD21E18A\0A\09.equ\09CONFIG_SOC_PART_NUMBER_SAMD21E18A,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_SAMD21E18A,%object", ""() #9, !dbg !5680, !srcloc !5681
  call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_REVISION\0A\09.equ\09CONFIG_SOC_SERIES_REVISION,1\0A\09.type\09CONFIG_SOC_SERIES_REVISION,%object", ""() #9, !dbg !5682, !srcloc !5683
  call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #9, !dbg !5684, !srcloc !5685
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #9, !dbg !5686, !srcloc !5687
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #9, !dbg !5688, !srcloc !5689
  call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #9, !dbg !5690, !srcloc !5691
  call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #9, !dbg !5692, !srcloc !5693
  call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #9, !dbg !5694, !srcloc !5695
  call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #9, !dbg !5696, !srcloc !5697
  call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #9, !dbg !5698, !srcloc !5699
  call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #9, !dbg !5700, !srcloc !5701
  call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #9, !dbg !5702, !srcloc !5703
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M0PLUS\0A\09.equ\09CONFIG_CPU_CORTEX_M0PLUS,1\0A\09.type\09CONFIG_CPU_CORTEX_M0PLUS,%object", ""() #9, !dbg !5704, !srcloc !5705
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #9, !dbg !5706, !srcloc !5707
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #9, !dbg !5708, !srcloc !5709
  call void asm sideeffect ".globl\09CONFIG_ARMV6_M_ARMV8_M_BASELINE\0A\09.equ\09CONFIG_ARMV6_M_ARMV8_M_BASELINE,1\0A\09.type\09CONFIG_ARMV6_M_ARMV8_M_BASELINE,%object", ""() #9, !dbg !5710, !srcloc !5711
  call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #9, !dbg !5712, !srcloc !5713
  call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #9, !dbg !5714, !srcloc !5715
  call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #9, !dbg !5716, !srcloc !5717
  call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #9, !dbg !5718, !srcloc !5719
  call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #9, !dbg !5720, !srcloc !5721
  call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #9, !dbg !5722, !srcloc !5723
  call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #9, !dbg !5724, !srcloc !5725
  call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #9, !dbg !5726, !srcloc !5727
  call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #9, !dbg !5728, !srcloc !5729
  call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #9, !dbg !5730, !srcloc !5731
  call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #9, !dbg !5732, !srcloc !5733
  call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #9, !dbg !5734, !srcloc !5735
  call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #9, !dbg !5736, !srcloc !5737
  call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #9, !dbg !5738, !srcloc !5739
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #9, !dbg !5740, !srcloc !5741
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #9, !dbg !5742, !srcloc !5743
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #9, !dbg !5744, !srcloc !5745
  call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #9, !dbg !5746, !srcloc !5747
  call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #9, !dbg !5748, !srcloc !5749
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #9, !dbg !5750, !srcloc !5751
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !5752, !srcloc !5753
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #9, !dbg !5754, !srcloc !5755
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #9, !dbg !5756, !srcloc !5757
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #9, !dbg !5758, !srcloc !5759
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #9, !dbg !5760, !srcloc !5761
  call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #9, !dbg !5762, !srcloc !5763
  call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #9, !dbg !5764, !srcloc !5765
  call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #9, !dbg !5766, !srcloc !5767
  call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #9, !dbg !5768, !srcloc !5769
  call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #9, !dbg !5770, !srcloc !5771
  call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #9, !dbg !5772, !srcloc !5773
  call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #9, !dbg !5774, !srcloc !5775
  call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #9, !dbg !5776, !srcloc !5777
  call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #9, !dbg !5778, !srcloc !5779
  call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #9, !dbg !5780, !srcloc !5781
  call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #9, !dbg !5782, !srcloc !5783
  call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #9, !dbg !5784, !srcloc !5785
  call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #9, !dbg !5786, !srcloc !5787
  call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #9, !dbg !5788, !srcloc !5789
  call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #9, !dbg !5790, !srcloc !5791
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #9, !dbg !5792, !srcloc !5793
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #9, !dbg !5794, !srcloc !5795
  call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_C\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_C,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_C,%object", ""() #9, !dbg !5796, !srcloc !5797
  call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #9, !dbg !5798, !srcloc !5799
  call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #9, !dbg !5800, !srcloc !5801
  call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #9, !dbg !5802, !srcloc !5803
  call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #9, !dbg !5804, !srcloc !5805
  call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #9, !dbg !5806, !srcloc !5807
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #9, !dbg !5808, !srcloc !5809
  call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #9, !dbg !5810, !srcloc !5811
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #9, !dbg !5812, !srcloc !5813
  call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #9, !dbg !5814, !srcloc !5815
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #9, !dbg !5816, !srcloc !5817
  call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #9, !dbg !5818, !srcloc !5819
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #9, !dbg !5820, !srcloc !5821
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #9, !dbg !5822, !srcloc !5823
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #9, !dbg !5824, !srcloc !5825
  call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #9, !dbg !5826, !srcloc !5827
  call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #9, !dbg !5828, !srcloc !5829
  call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #9, !dbg !5830, !srcloc !5831
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !5832, !srcloc !5833
  call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #9, !dbg !5834, !srcloc !5835
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #9, !dbg !5836, !srcloc !5837
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #9, !dbg !5838, !srcloc !5839
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #9, !dbg !5840, !srcloc !5841
  call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #9, !dbg !5842, !srcloc !5843
  call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #9, !dbg !5844, !srcloc !5845
  call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #9, !dbg !5846, !srcloc !5847
  call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #9, !dbg !5848, !srcloc !5849
  call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #9, !dbg !5850, !srcloc !5851
  call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #9, !dbg !5852, !srcloc !5853
  call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #9, !dbg !5854, !srcloc !5855
  call void asm sideeffect ".globl\09CONFIG_UART_SAM0\0A\09.equ\09CONFIG_UART_SAM0,1\0A\09.type\09CONFIG_UART_SAM0,%object", ""() #9, !dbg !5856, !srcloc !5857
  call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #9, !dbg !5858, !srcloc !5859
  call void asm sideeffect ".globl\09CONFIG_SAM0_EIC\0A\09.equ\09CONFIG_SAM0_EIC,1\0A\09.type\09CONFIG_SAM0_EIC,%object", ""() #9, !dbg !5860, !srcloc !5861
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #9, !dbg !5862, !srcloc !5863
  call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #9, !dbg !5864, !srcloc !5865
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #9, !dbg !5866, !srcloc !5867
  call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #9, !dbg !5868, !srcloc !5869
  call void asm sideeffect ".globl\09CONFIG_PINCTRL_SAM0\0A\09.equ\09CONFIG_PINCTRL_SAM0,1\0A\09.type\09CONFIG_PINCTRL_SAM0,%object", ""() #9, !dbg !5870, !srcloc !5871
  call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #9, !dbg !5872, !srcloc !5873
  call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #9, !dbg !5874, !srcloc !5875
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #9, !dbg !5876, !srcloc !5877
  call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #9, !dbg !5878, !srcloc !5879
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #9, !dbg !5880, !srcloc !5881
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #9, !dbg !5882, !srcloc !5883
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #9, !dbg !5884, !srcloc !5885
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #9, !dbg !5886, !srcloc !5887
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #9, !dbg !5888, !srcloc !5889
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #9, !dbg !5890, !srcloc !5891
  call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #9, !dbg !5892, !srcloc !5893
  call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #9, !dbg !5894, !srcloc !5895
  call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #9, !dbg !5896, !srcloc !5897
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #9, !dbg !5898, !srcloc !5899
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #9, !dbg !5900, !srcloc !5901
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #9, !dbg !5902, !srcloc !5903
  call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #9, !dbg !5904, !srcloc !5905
  call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #9, !dbg !5906, !srcloc !5907
  call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #9, !dbg !5908, !srcloc !5909
  call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #9, !dbg !5910, !srcloc !5911
  call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #9, !dbg !5912, !srcloc !5913
  call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #9, !dbg !5914, !srcloc !5915
  call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #9, !dbg !5916, !srcloc !5917
  call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #9, !dbg !5918, !srcloc !5919
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #9, !dbg !5920, !srcloc !5921
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !5922, !srcloc !5923
  call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #9, !dbg !5924, !srcloc !5925
  call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #9, !dbg !5926, !srcloc !5927
  call void asm sideeffect ".globl\09CONFIG_USE_DT_CODE_PARTITION\0A\09.equ\09CONFIG_USE_DT_CODE_PARTITION,1\0A\09.type\09CONFIG_USE_DT_CODE_PARTITION,%object", ""() #9, !dbg !5928, !srcloc !5929
  call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x2000\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #9, !dbg !5930, !srcloc !5931
  call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x3a000\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #9, !dbg !5932, !srcloc !5933
  call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #9, !dbg !5934, !srcloc !5935
  call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #9, !dbg !5936, !srcloc !5937
  call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #9, !dbg !5938, !srcloc !5939
  call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #9, !dbg !5940, !srcloc !5941
  call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #9, !dbg !5942, !srcloc !5943
  call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #9, !dbg !5944, !srcloc !5945
  call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #9, !dbg !5946, !srcloc !5947
  call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #9, !dbg !5948, !srcloc !5949
  call void asm sideeffect ".globl\09CONFIG_NO_OPTIMIZATIONS\0A\09.equ\09CONFIG_NO_OPTIMIZATIONS,1\0A\09.type\09CONFIG_NO_OPTIMIZATIONS,%object", ""() #9, !dbg !5950, !srcloc !5951
  call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #9, !dbg !5952, !srcloc !5953
  call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #9, !dbg !5954, !srcloc !5955
  call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #9, !dbg !5956, !srcloc !5957
  call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #9, !dbg !5958, !srcloc !5959
  call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #9, !dbg !5960, !srcloc !5961
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #9, !dbg !5962, !srcloc !5963
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #9, !dbg !5964, !srcloc !5965
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #9, !dbg !5966, !srcloc !5967
  call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #9, !dbg !5968, !srcloc !5969
  call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #9, !dbg !5970, !srcloc !5971
  call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #9, !dbg !5972, !srcloc !5973
  call void asm sideeffect ".globl\09CONFIG_BOOTLOADER_BOSSA\0A\09.equ\09CONFIG_BOOTLOADER_BOSSA,1\0A\09.type\09CONFIG_BOOTLOADER_BOSSA,%object", ""() #9, !dbg !5974, !srcloc !5975
  call void asm sideeffect ".globl\09CONFIG_BOOTLOADER_BOSSA_ADAFRUIT_UF2\0A\09.equ\09CONFIG_BOOTLOADER_BOSSA_ADAFRUIT_UF2,1\0A\09.type\09CONFIG_BOOTLOADER_BOSSA_ADAFRUIT_UF2,%object", ""() #9, !dbg !5976, !srcloc !5977
  call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #9, !dbg !5978, !srcloc !5979
  ret void, !dbg !5980
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @soc_port_pinmux_set(%struct.PortGroup* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !5981 {
  %4 = alloca %struct.PortGroup*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  store %struct.PortGroup* %0, %struct.PortGroup** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.PortGroup** %4, metadata !6136, metadata !DIExpression()), !dbg !6137
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6138, metadata !DIExpression()), !dbg !6139
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6140, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.declare(metadata i8* %7, metadata !6142, metadata !DIExpression()), !dbg !6143
  %9 = load i32, i32* %5, align 4, !dbg !6144
  %10 = and i32 %9, 1, !dbg !6145
  %11 = icmp ne i32 %10, 0, !dbg !6144
  %12 = zext i1 %11 to i8, !dbg !6143
  store i8 %12, i8* %7, align 1, !dbg !6143
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6146, metadata !DIExpression()), !dbg !6147
  %13 = load i32, i32* %5, align 4, !dbg !6148
  %14 = udiv i32 %13, 2, !dbg !6149
  store i32 %14, i32* %8, align 4, !dbg !6147
  %15 = load i8, i8* %7, align 1, !dbg !6150
  %16 = trunc i8 %15 to i1, !dbg !6150
  br i1 %16, label %17, label %31, !dbg !6152

17:                                               ; preds = %3
  %18 = load i32, i32* %6, align 4, !dbg !6153
  %19 = trunc i32 %18 to i8, !dbg !6153
  %20 = load %struct.PortGroup*, %struct.PortGroup** %4, align 4, !dbg !6155
  %21 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %20, i32 0, i32 12, !dbg !6156
  %22 = load i32, i32* %8, align 4, !dbg !6157
  %23 = getelementptr inbounds [16 x %union.PORT_PMUX_Type], [16 x %union.PORT_PMUX_Type]* %21, i32 0, i32 %22, !dbg !6155
  %24 = bitcast %union.PORT_PMUX_Type* %23 to %struct.z_thread_stack_element*, !dbg !6158
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !6159
  %26 = load volatile i8, i8* %25, align 1, !dbg !6160
  %27 = and i8 %19, 15, !dbg !6160
  %28 = shl i8 %27, 4, !dbg !6160
  %29 = and i8 %26, 15, !dbg !6160
  %30 = or i8 %29, %28, !dbg !6160
  store volatile i8 %30, i8* %25, align 1, !dbg !6160
  br label %44, !dbg !6161

31:                                               ; preds = %3
  %32 = load i32, i32* %6, align 4, !dbg !6162
  %33 = trunc i32 %32 to i8, !dbg !6162
  %34 = load %struct.PortGroup*, %struct.PortGroup** %4, align 4, !dbg !6164
  %35 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %34, i32 0, i32 12, !dbg !6165
  %36 = load i32, i32* %8, align 4, !dbg !6166
  %37 = getelementptr inbounds [16 x %union.PORT_PMUX_Type], [16 x %union.PORT_PMUX_Type]* %35, i32 0, i32 %36, !dbg !6164
  %38 = bitcast %union.PORT_PMUX_Type* %37 to %struct.z_thread_stack_element*, !dbg !6167
  %39 = bitcast %struct.z_thread_stack_element* %38 to i8*, !dbg !6168
  %40 = load volatile i8, i8* %39, align 1, !dbg !6169
  %41 = and i8 %33, 15, !dbg !6169
  %42 = and i8 %40, -16, !dbg !6169
  %43 = or i8 %42, %41, !dbg !6169
  store volatile i8 %43, i8* %39, align 1, !dbg !6169
  br label %44

44:                                               ; preds = %31, %17
  %45 = load %struct.PortGroup*, %struct.PortGroup** %4, align 4, !dbg !6170
  %46 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %45, i32 0, i32 13, !dbg !6171
  %47 = load i32, i32* %5, align 4, !dbg !6172
  %48 = getelementptr inbounds [32 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type]* %46, i32 0, i32 %47, !dbg !6170
  %49 = bitcast %union.PORT_PMUX_Type* %48 to %struct.z_thread_stack_element*, !dbg !6173
  %50 = bitcast %struct.z_thread_stack_element* %49 to i8*, !dbg !6174
  %51 = load volatile i8, i8* %50, align 1, !dbg !6175
  %52 = and i8 %51, -2, !dbg !6175
  %53 = or i8 %52, 1, !dbg !6175
  store volatile i8 %53, i8* %50, align 1, !dbg !6175
  ret i32 0, !dbg !6176
}

; Function Attrs: noinline nounwind optnone
define dso_local void @soc_port_configure(%struct.soc_port_pin* noundef %0) #1 !dbg !6177 {
  %2 = alloca %struct.soc_port_pin*, align 4
  %3 = alloca %struct.PortGroup*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.PORT_PMUX_Type, align 1
  store %struct.soc_port_pin* %0, %struct.soc_port_pin** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.soc_port_pin** %2, metadata !6188, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.declare(metadata %struct.PortGroup** %3, metadata !6190, metadata !DIExpression()), !dbg !6191
  %7 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6192
  %8 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %7, i32 0, i32 0, !dbg !6193
  %9 = load %struct.PortGroup*, %struct.PortGroup** %8, align 4, !dbg !6193
  store %struct.PortGroup* %9, %struct.PortGroup** %3, align 4, !dbg !6191
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6194, metadata !DIExpression()), !dbg !6195
  %10 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6196
  %11 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %10, i32 0, i32 2, !dbg !6197
  %12 = load i32, i32* %11, align 4, !dbg !6197
  store i32 %12, i32* %4, align 4, !dbg !6195
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6198, metadata !DIExpression()), !dbg !6199
  %13 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6200
  %14 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %13, i32 0, i32 2, !dbg !6201
  %15 = load i32, i32* %14, align 4, !dbg !6201
  %16 = and i32 %15, 983040, !dbg !6202
  %17 = lshr i32 %16, 16, !dbg !6203
  store i32 %17, i32* %5, align 4, !dbg !6199
  call void @llvm.dbg.declare(metadata %union.PORT_PMUX_Type* %6, metadata !6204, metadata !DIExpression()), !dbg !6205
  %18 = bitcast %union.PORT_PMUX_Type* %6 to i8*, !dbg !6205
  call void @llvm.memset.p0i8.i32(i8* align 1 %18, i8 0, i32 1, i1 false), !dbg !6205
  %19 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6206
  %20 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %19, i32 0, i32 13, !dbg !6207
  %21 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6208
  %22 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %21, i32 0, i32 1, !dbg !6209
  %23 = load i32, i32* %22, align 4, !dbg !6209
  %24 = getelementptr inbounds [32 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type]* %20, i32 0, i32 %23, !dbg !6206
  %25 = bitcast %union.PORT_PMUX_Type* %24 to i8*, !dbg !6210
  %26 = bitcast %union.PORT_PMUX_Type* %6 to i8*, !dbg !6210
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %25, i8* align 1 %26, i32 1, i1 true), !dbg !6210
  %27 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6211
  %28 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %27, i32 0, i32 1, !dbg !6212
  %29 = load i32, i32* %28, align 4, !dbg !6212
  %30 = shl i32 1, %29, !dbg !6213
  %31 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6214
  %32 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %31, i32 0, i32 1, !dbg !6215
  %33 = bitcast %union.PORT_DIR_Type* %32 to i32*, !dbg !6216
  store volatile i32 %30, i32* %33, align 4, !dbg !6217
  %34 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6218
  %35 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %34, i32 0, i32 1, !dbg !6219
  %36 = load i32, i32* %35, align 4, !dbg !6219
  %37 = shl i32 1, %36, !dbg !6220
  %38 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6221
  %39 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %38, i32 0, i32 5, !dbg !6222
  %40 = bitcast %union.PORT_DIR_Type* %39 to i32*, !dbg !6223
  store volatile i32 %37, i32* %40, align 4, !dbg !6224
  %41 = load i32, i32* %4, align 4, !dbg !6225
  %42 = and i32 %41, 64, !dbg !6227
  %43 = icmp ne i32 %42, 0, !dbg !6227
  br i1 %43, label %44, label %51, !dbg !6228

44:                                               ; preds = %1
  %45 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6229
  %46 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6231
  %47 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %46, i32 0, i32 1, !dbg !6232
  %48 = load i32, i32* %47, align 4, !dbg !6232
  %49 = load i32, i32* %5, align 4, !dbg !6233
  %50 = call i32 @soc_port_pinmux_set(%struct.PortGroup* noundef %45, i32 noundef %48, i32 noundef %49) #10, !dbg !6234
  br label %114, !dbg !6235

51:                                               ; preds = %1
  %52 = load i32, i32* %4, align 4, !dbg !6236
  %53 = and i32 %52, 3, !dbg !6238
  %54 = icmp ne i32 %53, 0, !dbg !6238
  br i1 %54, label %55, label %73, !dbg !6239

55:                                               ; preds = %51
  %56 = load i32, i32* %4, align 4, !dbg !6240
  %57 = and i32 %56, 1, !dbg !6243
  %58 = icmp ne i32 %57, 0, !dbg !6243
  br i1 %58, label %59, label %67, !dbg !6244

59:                                               ; preds = %55
  %60 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6245
  %61 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %60, i32 0, i32 1, !dbg !6247
  %62 = load i32, i32* %61, align 4, !dbg !6247
  %63 = shl i32 1, %62, !dbg !6248
  %64 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6249
  %65 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %64, i32 0, i32 6, !dbg !6250
  %66 = bitcast %union.PORT_DIR_Type* %65 to i32*, !dbg !6251
  store volatile i32 %63, i32* %66, align 4, !dbg !6252
  br label %67, !dbg !6253

67:                                               ; preds = %59, %55
  %68 = bitcast %union.PORT_PMUX_Type* %6 to %struct.z_thread_stack_element*, !dbg !6254
  %69 = bitcast %struct.z_thread_stack_element* %68 to i8*, !dbg !6255
  %70 = load i8, i8* %69, align 1, !dbg !6256
  %71 = and i8 %70, -5, !dbg !6256
  %72 = or i8 %71, 4, !dbg !6256
  store i8 %72, i8* %69, align 1, !dbg !6256
  br label %73, !dbg !6257

73:                                               ; preds = %67, %51
  %74 = load i32, i32* %4, align 4, !dbg !6258
  %75 = and i32 %74, 8, !dbg !6260
  %76 = icmp ne i32 %75, 0, !dbg !6260
  br i1 %76, label %77, label %83, !dbg !6261

77:                                               ; preds = %73
  %78 = bitcast %union.PORT_PMUX_Type* %6 to %struct.z_thread_stack_element*, !dbg !6262
  %79 = bitcast %struct.z_thread_stack_element* %78 to i8*, !dbg !6264
  %80 = load i8, i8* %79, align 1, !dbg !6265
  %81 = and i8 %80, -3, !dbg !6265
  %82 = or i8 %81, 2, !dbg !6265
  store i8 %82, i8* %79, align 1, !dbg !6265
  br label %83, !dbg !6266

83:                                               ; preds = %77, %73
  %84 = load i32, i32* %4, align 4, !dbg !6267
  %85 = and i32 %84, 16, !dbg !6269
  %86 = icmp ne i32 %85, 0, !dbg !6269
  br i1 %86, label %87, label %95, !dbg !6270

87:                                               ; preds = %83
  %88 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6271
  %89 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %88, i32 0, i32 1, !dbg !6273
  %90 = load i32, i32* %89, align 4, !dbg !6273
  %91 = shl i32 1, %90, !dbg !6274
  %92 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6275
  %93 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %92, i32 0, i32 2, !dbg !6276
  %94 = bitcast %union.PORT_DIR_Type* %93 to i32*, !dbg !6277
  store volatile i32 %91, i32* %94, align 4, !dbg !6278
  br label %95, !dbg !6279

95:                                               ; preds = %87, %83
  %96 = load i32, i32* %4, align 4, !dbg !6280
  %97 = and i32 %96, 32, !dbg !6282
  %98 = icmp ne i32 %97, 0, !dbg !6282
  br i1 %98, label %99, label %105, !dbg !6283

99:                                               ; preds = %95
  %100 = bitcast %union.PORT_PMUX_Type* %6 to %struct.z_thread_stack_element*, !dbg !6284
  %101 = bitcast %struct.z_thread_stack_element* %100 to i8*, !dbg !6286
  %102 = load i8, i8* %101, align 1, !dbg !6287
  %103 = and i8 %102, -65, !dbg !6287
  %104 = or i8 %103, 64, !dbg !6287
  store i8 %104, i8* %101, align 1, !dbg !6287
  br label %105, !dbg !6288

105:                                              ; preds = %99, %95
  %106 = load %struct.PortGroup*, %struct.PortGroup** %3, align 4, !dbg !6289
  %107 = getelementptr inbounds %struct.PortGroup, %struct.PortGroup* %106, i32 0, i32 13, !dbg !6290
  %108 = load %struct.soc_port_pin*, %struct.soc_port_pin** %2, align 4, !dbg !6291
  %109 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %108, i32 0, i32 1, !dbg !6292
  %110 = load i32, i32* %109, align 4, !dbg !6292
  %111 = getelementptr inbounds [32 x %union.PORT_PMUX_Type], [32 x %union.PORT_PMUX_Type]* %107, i32 0, i32 %110, !dbg !6289
  %112 = bitcast %union.PORT_PMUX_Type* %111 to i8*, !dbg !6293
  %113 = bitcast %union.PORT_PMUX_Type* %6 to i8*, !dbg !6293
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %112, i8* align 1 %113, i32 1, i1 true), !dbg !6293
  br label %114, !dbg !6294

114:                                              ; preds = %105, %44
  ret void, !dbg !6294
}

; Function Attrs: noinline nounwind optnone
define dso_local void @soc_port_list_configure(%struct.soc_port_pin* noundef %0, i32 noundef %1) #1 !dbg !6295 {
  %3 = alloca %struct.soc_port_pin*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.soc_port_pin* %0, %struct.soc_port_pin** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.soc_port_pin** %3, metadata !6298, metadata !DIExpression()), !dbg !6299
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6300, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6302, metadata !DIExpression()), !dbg !6304
  store i32 0, i32* %5, align 4, !dbg !6304
  br label %6, !dbg !6305

6:                                                ; preds = %14, %2
  %7 = load i32, i32* %5, align 4, !dbg !6306
  %8 = load i32, i32* %4, align 4, !dbg !6308
  %9 = icmp ult i32 %7, %8, !dbg !6309
  br i1 %9, label %10, label %17, !dbg !6310

10:                                               ; preds = %6
  %11 = load %struct.soc_port_pin*, %struct.soc_port_pin** %3, align 4, !dbg !6311
  %12 = load i32, i32* %5, align 4, !dbg !6313
  %13 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %11, i32 %12, !dbg !6311
  call void @soc_port_configure(%struct.soc_port_pin* noundef %13) #10, !dbg !6314
  br label %14, !dbg !6315

14:                                               ; preds = %10
  %15 = load i32, i32* %5, align 4, !dbg !6316
  %16 = add nsw i32 %15, 1, !dbg !6316
  store i32 %16, i32* %5, align 4, !dbg !6316
  br label %6, !dbg !6317, !llvm.loop !6318

17:                                               ; preds = %6
  ret void, !dbg !6320
}

; Function Attrs: noinline nounwind optnone
define internal i32 @atmel_samd_init(%struct.device.73* noundef %0) #1 !dbg !6321 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !6322, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6324, metadata !DIExpression()), !dbg !6325
  %6 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !6326
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6327, metadata !DIExpression()) #9, !dbg !6332
  %7 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !6334, !srcloc !6335
  store i32 %7, i32* %3, align 4, !dbg !6334
  %8 = load i32, i32* %3, align 4, !dbg !6336
  store i32 %8, i32* %5, align 4, !dbg !6337
  call void @flash_waitstates_init() #10, !dbg !6338
  call void @osc8m_init() #10, !dbg !6339
  call void @osc32k_init() #10, !dbg !6340
  call void @xosc_init() #10, !dbg !6341
  call void @xosc32k_init() #10, !dbg !6342
  call void @dfll_init() #10, !dbg !6343
  call void @gclks_init() #10, !dbg !6344
  call void @dividers_init() #10, !dbg !6345
  %9 = load i32, i32* %5, align 4, !dbg !6346
  store i32 %9, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6347, metadata !DIExpression()) #9, !dbg !6351
  %10 = load i32, i32* %2, align 4, !dbg !6353
  %11 = icmp ne i32 %10, 0, !dbg !6355
  br i1 %11, label %12, label %13, !dbg !6356

12:                                               ; preds = %1
  br label %14, !dbg !6357

13:                                               ; preds = %1
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !6359, !srcloc !6360
  br label %14, !dbg !6361

14:                                               ; preds = %12, %13
  ret i32 0, !dbg !6362
}

; Function Attrs: noinline nounwind optnone
define internal void @flash_waitstates_init() #1 !dbg !6363 {
  %1 = load volatile i32, i32* getelementptr inbounds (%struct.Nvmctrl, %struct.Nvmctrl* inttoptr (i32 1090535424 to %struct.Nvmctrl*), i32 0, i32 2, i32 0, i32 0), align 4, !dbg !6364
  %2 = and i32 %1, -31, !dbg !6364
  %3 = or i32 %2, 2, !dbg !6364
  store volatile i32 %3, i32* getelementptr inbounds (%struct.Nvmctrl, %struct.Nvmctrl* inttoptr (i32 1090535424 to %struct.Nvmctrl*), i32 0, i32 2, i32 0, i32 0), align 4, !dbg !6364
  ret void, !dbg !6365
}

; Function Attrs: noinline nounwind optnone
define internal void @osc8m_init() #1 !dbg !6366 {
  %1 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !6367
  %2 = and i32 %1, -769, !dbg !6367
  %3 = or i32 %2, 0, !dbg !6367
  store volatile i32 %3, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !6367
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !6368
  %5 = and i32 %4, -129, !dbg !6368
  %6 = or i32 %5, 0, !dbg !6368
  store volatile i32 %6, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !6368
  ret void, !dbg !6369
}

; Function Attrs: noinline nounwind optnone
define internal void @osc32k_init() #1 !dbg !6370 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6371, metadata !DIExpression()), !dbg !6372
  %3 = load i32, i32* inttoptr (i32 8413220 to i32*), align 4, !dbg !6373
  store i32 %3, i32* %1, align 4, !dbg !6372
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6374, metadata !DIExpression()), !dbg !6375
  %4 = load i32, i32* %1, align 4, !dbg !6376
  %5 = and i32 %4, 8128, !dbg !6377
  %6 = lshr i32 %5, 6, !dbg !6378
  store i32 %6, i32* %2, align 4, !dbg !6375
  %7 = load i32, i32* %2, align 4, !dbg !6379
  %8 = shl i32 %7, 16, !dbg !6379
  %9 = and i32 8323072, %8, !dbg !6379
  %10 = or i32 %9, 1536, !dbg !6380
  %11 = or i32 %10, 4, !dbg !6381
  %12 = or i32 %11, 2, !dbg !6382
  store volatile i32 %12, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 8, i32 0, i32 0), align 4, !dbg !6383
  br label %13, !dbg !6384

13:                                               ; preds = %19, %0
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6385
  %15 = lshr i32 %14, 2, !dbg !6385
  %16 = and i32 %15, 1, !dbg !6385
  %17 = icmp ne i32 %16, 0, !dbg !6386
  %18 = xor i1 %17, true, !dbg !6386
  br i1 %18, label %19, label %20, !dbg !6384

19:                                               ; preds = %13
  br label %13, !dbg !6384, !llvm.loop !6387

20:                                               ; preds = %13
  ret void, !dbg !6389
}

; Function Attrs: noinline nounwind optnone
define internal void @xosc_init() #1 !dbg !6390 {
  ret void, !dbg !6391
}

; Function Attrs: noinline nounwind optnone
define internal void @xosc32k_init() #1 !dbg !6392 {
  ret void, !dbg !6393
}

; Function Attrs: noinline nounwind optnone
define internal void @dfll_init() #1 !dbg !6394 {
  %1 = alloca i32, align 4
  store volatile i32 1, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 4, i32 0, i32 0), align 4, !dbg !6395
  call void @wait_gclk_synchronization() #10, !dbg !6396
  store volatile i32 67073, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6397
  call void @wait_gclk_synchronization() #10, !dbg !6398
  store volatile i16 16640, i16* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 2, i32 0, i32 0), align 2, !dbg !6399
  call void @wait_gclk_synchronization() #10, !dbg !6400
  store volatile i16 2, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6401
  br label %2, !dbg !6402

2:                                                ; preds = %8, %0
  %3 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6403
  %4 = lshr i32 %3, 4, !dbg !6403
  %5 = and i32 %4, 1, !dbg !6403
  %6 = icmp ne i32 %5, 0, !dbg !6404
  %7 = xor i1 %6, true, !dbg !6404
  br i1 %7, label %8, label %9, !dbg !6402

8:                                                ; preds = %2
  br label %2, !dbg !6402, !llvm.loop !6405

9:                                                ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6407, metadata !DIExpression()), !dbg !6408
  store i32 6, i32* %1, align 4, !dbg !6408
  %10 = load i32, i32* %1, align 4, !dbg !6409
  %11 = shl i32 %10, 0, !dbg !6409
  %12 = and i32 65535, %11, !dbg !6409
  %13 = or i32 2113863680, %12, !dbg !6410
  store volatile i32 %13, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 15, i32 0, i32 0), align 4, !dbg !6411
  br label %14, !dbg !6412

14:                                               ; preds = %20, %9
  %15 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6413
  %16 = lshr i32 %15, 4, !dbg !6413
  %17 = and i32 %16, 1, !dbg !6413
  %18 = icmp ne i32 %17, 0, !dbg !6414
  %19 = xor i1 %18, true, !dbg !6414
  br i1 %19, label %20, label %21, !dbg !6412

20:                                               ; preds = %14
  br label %14, !dbg !6412, !llvm.loop !6415

21:                                               ; preds = %14
  %22 = load volatile i16, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6417
  %23 = zext i16 %22 to i32, !dbg !6417
  %24 = or i32 %23, 2564, !dbg !6417
  %25 = trunc i32 %24 to i16, !dbg !6417
  store volatile i16 %25, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6417
  br label %26, !dbg !6418

26:                                               ; preds = %32, %21
  %27 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6419
  %28 = lshr i32 %27, 4, !dbg !6419
  %29 = and i32 %28, 1, !dbg !6419
  %30 = icmp ne i32 %29, 0, !dbg !6420
  %31 = xor i1 %30, true, !dbg !6420
  br i1 %31, label %32, label %33, !dbg !6418

32:                                               ; preds = %26
  br label %26, !dbg !6418, !llvm.loop !6421

33:                                               ; preds = %26
  %34 = load volatile i16, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6423
  %35 = and i16 %34, -3, !dbg !6423
  %36 = or i16 %35, 2, !dbg !6423
  store volatile i16 %36, i16* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 12, i32 0, i32 0), align 4, !dbg !6423
  br label %37, !dbg !6424

37:                                               ; preds = %50, %33
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6425
  %39 = lshr i32 %38, 7, !dbg !6425
  %40 = and i32 %39, 1, !dbg !6425
  %41 = icmp ne i32 %40, 0, !dbg !6426
  br i1 %41, label %42, label %48, !dbg !6427

42:                                               ; preds = %37
  %43 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6428
  %44 = lshr i32 %43, 6, !dbg !6428
  %45 = and i32 %44, 1, !dbg !6428
  %46 = icmp ne i32 %45, 0, !dbg !6429
  %47 = xor i1 %46, true, !dbg !6429
  br label %48, !dbg !6427

48:                                               ; preds = %42, %37
  %49 = phi i1 [ true, %37 ], [ %47, %42 ]
  br i1 %49, label %50, label %51, !dbg !6424

50:                                               ; preds = %48
  br label %37, !dbg !6424, !llvm.loop !6430

51:                                               ; preds = %48
  br label %52, !dbg !6432

52:                                               ; preds = %58, %51
  %53 = load volatile i32, i32* getelementptr inbounds (%struct.Sysctrl, %struct.Sysctrl* inttoptr (i32 1073743872 to %struct.Sysctrl*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6433
  %54 = lshr i32 %53, 4, !dbg !6433
  %55 = and i32 %54, 1, !dbg !6433
  %56 = icmp ne i32 %55, 0, !dbg !6434
  %57 = xor i1 %56, true, !dbg !6434
  br i1 %57, label %58, label %59, !dbg !6432

58:                                               ; preds = %52
  br label %52, !dbg !6432, !llvm.loop !6435

59:                                               ; preds = %52
  ret void, !dbg !6437
}

; Function Attrs: noinline nounwind optnone
define internal void @gclks_init() #1 !dbg !6438 {
  store volatile i32 0, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 4, i32 0, i32 0), align 4, !dbg !6439
  call void @wait_gclk_synchronization() #10, !dbg !6440
  store volatile i32 198400, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6441
  call void @wait_gclk_synchronization() #10, !dbg !6442
  store volatile i32 67075, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6443
  call void @wait_gclk_synchronization() #10, !dbg !6444
  store volatile i32 7938, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 4, i32 0, i32 0), align 4, !dbg !6445
  call void @wait_gclk_synchronization() #10, !dbg !6446
  store volatile i32 66562, i32* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6447
  call void @wait_gclk_synchronization() #10, !dbg !6448
  ret void, !dbg !6449
}

; Function Attrs: noinline nounwind optnone
define internal void @dividers_init() #1 !dbg !6450 {
  store volatile i8 0, i8* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 3, i32 0, i32 0), align 4, !dbg !6451
  store volatile i8 0, i8* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 4, i32 0, i32 0), align 1, !dbg !6452
  store volatile i8 0, i8* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 5, i32 0, i32 0), align 2, !dbg !6453
  store volatile i8 0, i8* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 6, i32 0, i32 0), align 1, !dbg !6454
  ret void, !dbg !6455
}

; Function Attrs: noinline nounwind optnone
define internal void @wait_gclk_synchronization() #1 !dbg !6456 {
  br label %1, !dbg !6457

1:                                                ; preds = %5, %0
  %2 = load volatile i8, i8* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 1, i32 0, i32 0), align 1, !dbg !6458
  %3 = lshr i8 %2, 7, !dbg !6458
  %4 = icmp ne i8 %3, 0, !dbg !6457
  br i1 %4, label %5, label %6, !dbg !6457

5:                                                ; preds = %1
  br label %1, !dbg !6457, !llvm.loop !6459

6:                                                ; preds = %1
  ret void, !dbg !6461
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !6462 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6510, metadata !DIExpression()), !dbg !6511
  store %struct.__esf* %1, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !6512, metadata !DIExpression()), !dbg !6513
  %5 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !6514
  %6 = icmp ne %struct.__esf* %5, null, !dbg !6516
  br i1 %6, label %7, label %9, !dbg !6517

7:                                                ; preds = %2
  %8 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !6518
  call void @esf_dump(%struct.__esf* noundef %8) #10, !dbg !6520
  br label %9, !dbg !6521

9:                                                ; preds = %7, %2
  %10 = load i32, i32* %3, align 4, !dbg !6522
  %11 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !6523
  call void @z_fatal_error(i32 noundef %10, %struct.__esf* noundef %11) #10, !dbg !6524
  ret void, !dbg !6525
}

; Function Attrs: noinline nounwind optnone
define internal void @esf_dump(%struct.__esf* noundef %0) #1 !dbg !6526 {
  %2 = alloca %struct.__esf*, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %2, metadata !6529, metadata !DIExpression()), !dbg !6530
  br label %19, !dbg !6531

19:                                               ; preds = %1
  br label %20, !dbg !6532

20:                                               ; preds = %19
  br label %21, !dbg !6536

21:                                               ; preds = %20
  br label %22, !dbg !6537

22:                                               ; preds = %21
  br label %23, !dbg !6541

23:                                               ; preds = %22
  br label %24, !dbg !6542

24:                                               ; preds = %23
  br label %25, !dbg !6546

25:                                               ; preds = %24
  br label %26, !dbg !6547

26:                                               ; preds = %25
  ret void, !dbg !6551
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved.10* noundef %1) #1 !dbg !6552 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca %struct._callee_saved.10*, align 4
  %5 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !6568, metadata !DIExpression()), !dbg !6569
  store %struct._callee_saved.10* %1, %struct._callee_saved.10** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._callee_saved.10** %4, metadata !6570, metadata !DIExpression()), !dbg !6571
  %6 = load %struct._callee_saved.10*, %struct._callee_saved.10** %4, align 4, !dbg !6572
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6573, metadata !DIExpression()), !dbg !6574
  %7 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !6575
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, !dbg !6576
  %9 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %8, i32 0, i32 0, !dbg !6577
  %10 = bitcast %union.anon.68* %9 to i32*, !dbg !6577
  %11 = load i32, i32* %10, align 4, !dbg !6577
  store i32 %11, i32* %5, align 4, !dbg !6574
  %12 = load i32, i32* %5, align 4, !dbg !6578
  %13 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !6579
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef %13) #10, !dbg !6580
  ret void, !dbg !6581
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @arch_syscall_oops(i8* noundef %0) #5 !dbg !6582 {
  %2 = alloca i8*, align 4
  %3 = alloca i32*, align 4
  %4 = alloca %struct.__esf, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6585, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.declare(metadata i32** %3, metadata !6587, metadata !DIExpression()), !dbg !6588
  %5 = load i8*, i8** %2, align 4, !dbg !6589
  %6 = bitcast i8* %5 to i32*, !dbg !6589
  store i32* %6, i32** %3, align 4, !dbg !6588
  call void @llvm.dbg.declare(metadata %struct.__esf* %4, metadata !6590, metadata !DIExpression()), !dbg !6591
  %7 = bitcast %struct.__esf* %4 to i8*, !dbg !6591
  call void @llvm.memset.p0i8.i32(i8* align 4 %7, i8 0, i32 32, i1 false), !dbg !6591
  %8 = load i32*, i32** %3, align 4, !dbg !6592
  %9 = getelementptr inbounds i32, i32* %8, i32 3, !dbg !6592
  %10 = load i32, i32* %9, align 4, !dbg !6592
  %11 = getelementptr inbounds %struct.__esf, %struct.__esf* %4, i32 0, i32 0, !dbg !6593
  %12 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %11, i32 0, i32 6, !dbg !6594
  %13 = bitcast %union.anon.68* %12 to i32*, !dbg !6594
  store i32 %10, i32* %13, align 4, !dbg !6595
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef %4) #10, !dbg !6596
  unreachable, !dbg !6597
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_irq_enable(i32 noundef %0) #1 !dbg !6598 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6600, metadata !DIExpression()), !dbg !6601
  %3 = load i32, i32* %2, align 4, !dbg !6602
  call void @__NVIC_EnableIRQ(i32 noundef %3) #10, !dbg !6603
  ret void, !dbg !6604
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_EnableIRQ(i32 noundef %0) #1 !dbg !6605 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6608, metadata !DIExpression()), !dbg !6609
  %3 = load i32, i32* %2, align 4, !dbg !6610
  %4 = icmp sge i32 %3, 0, !dbg !6612
  br i1 %4, label %5, label %9, !dbg !6613

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !6614, !srcloc !6616
  %6 = load i32, i32* %2, align 4, !dbg !6617
  %7 = and i32 %6, 31, !dbg !6618
  %8 = shl i32 1, %7, !dbg !6619
  store volatile i32 %8, i32* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 0, i32 0), align 4, !dbg !6620
  call void asm sideeffect "", "~{memory}"() #9, !dbg !6621, !srcloc !6622
  br label %9, !dbg !6623

9:                                                ; preds = %5, %1
  ret void, !dbg !6624
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_irq_disable(i32 noundef %0) #1 !dbg !6625 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6626, metadata !DIExpression()), !dbg !6627
  %3 = load i32, i32* %2, align 4, !dbg !6628
  call void @__NVIC_DisableIRQ(i32 noundef %3) #10, !dbg !6629
  ret void, !dbg !6630
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_DisableIRQ(i32 noundef %0) #1 !dbg !6631 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6632, metadata !DIExpression()), !dbg !6633
  %3 = load i32, i32* %2, align 4, !dbg !6634
  %4 = icmp sge i32 %3, 0, !dbg !6636
  br i1 %4, label %5, label %9, !dbg !6637

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !6638
  %7 = and i32 %6, 31, !dbg !6640
  %8 = shl i32 1, %7, !dbg !6641
  store volatile i32 %8, i32* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 2, i32 0), align 4, !dbg !6642
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !6643, !srcloc !6647
  call void asm sideeffect "isb 0xF", "~{memory}"() #9, !dbg !6648, !srcloc !6651
  br label %9, !dbg !6652

9:                                                ; preds = %5, %1
  ret void, !dbg !6653
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) #1 !dbg !6654 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6657, metadata !DIExpression()), !dbg !6658
  %3 = load i32, i32* %2, align 4, !dbg !6659
  %4 = udiv i32 %3, 32, !dbg !6659
  %5 = getelementptr inbounds [1 x i32], [1 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 0), i32 0, i32 %4, !dbg !6660
  %6 = load volatile i32, i32* %5, align 4, !dbg !6660
  %7 = load i32, i32* %2, align 4, !dbg !6661
  %8 = urem i32 %7, 32, !dbg !6661
  %9 = shl i32 1, %8, !dbg !6661
  %10 = and i32 %6, %9, !dbg !6662
  ret i32 %10, !dbg !6663
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !6664 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6667, metadata !DIExpression()), !dbg !6668
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6669, metadata !DIExpression()), !dbg !6670
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6671, metadata !DIExpression()), !dbg !6672
  %7 = load i32, i32* %5, align 4, !dbg !6673
  %8 = add i32 %7, 0, !dbg !6673
  store i32 %8, i32* %5, align 4, !dbg !6673
  %9 = load i32, i32* %4, align 4, !dbg !6676
  %10 = load i32, i32* %5, align 4, !dbg !6677
  call void @__NVIC_SetPriority(i32 noundef %9, i32 noundef %10) #10, !dbg !6678
  ret void, !dbg !6679
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #1 !dbg !6680 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6683, metadata !DIExpression()), !dbg !6684
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6685, metadata !DIExpression()), !dbg !6686
  %5 = load i32, i32* %3, align 4, !dbg !6687
  %6 = icmp sge i32 %5, 0, !dbg !6689
  br i1 %6, label %7, label %29, !dbg !6690

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !6691
  %9 = lshr i32 %8, 2, !dbg !6691
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !6693
  %11 = load volatile i32, i32* %10, align 4, !dbg !6693
  %12 = load i32, i32* %3, align 4, !dbg !6694
  %13 = and i32 %12, 3, !dbg !6694
  %14 = mul i32 %13, 8, !dbg !6694
  %15 = shl i32 255, %14, !dbg !6695
  %16 = xor i32 %15, -1, !dbg !6696
  %17 = and i32 %11, %16, !dbg !6697
  %18 = load i32, i32* %4, align 4, !dbg !6698
  %19 = shl i32 %18, 6, !dbg !6699
  %20 = and i32 %19, 255, !dbg !6700
  %21 = load i32, i32* %3, align 4, !dbg !6701
  %22 = and i32 %21, 3, !dbg !6701
  %23 = mul i32 %22, 8, !dbg !6701
  %24 = shl i32 %20, %23, !dbg !6702
  %25 = or i32 %17, %24, !dbg !6703
  %26 = load i32, i32* %3, align 4, !dbg !6704
  %27 = lshr i32 %26, 2, !dbg !6704
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !6705
  store volatile i32 %25, i32* %28, align 4, !dbg !6706
  br label %55, !dbg !6707

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !6708
  %31 = and i32 %30, 15, !dbg !6708
  %32 = sub i32 %31, 8, !dbg !6708
  %33 = lshr i32 %32, 2, !dbg !6708
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !6710
  %35 = load volatile i32, i32* %34, align 4, !dbg !6710
  %36 = load i32, i32* %3, align 4, !dbg !6711
  %37 = and i32 %36, 3, !dbg !6711
  %38 = mul i32 %37, 8, !dbg !6711
  %39 = shl i32 255, %38, !dbg !6712
  %40 = xor i32 %39, -1, !dbg !6713
  %41 = and i32 %35, %40, !dbg !6714
  %42 = load i32, i32* %4, align 4, !dbg !6715
  %43 = shl i32 %42, 6, !dbg !6716
  %44 = and i32 %43, 255, !dbg !6717
  %45 = load i32, i32* %3, align 4, !dbg !6718
  %46 = and i32 %45, 3, !dbg !6718
  %47 = mul i32 %46, 8, !dbg !6718
  %48 = shl i32 %44, %47, !dbg !6719
  %49 = or i32 %41, %48, !dbg !6720
  %50 = load i32, i32* %3, align 4, !dbg !6721
  %51 = and i32 %50, 15, !dbg !6721
  %52 = sub i32 %51, 8, !dbg !6721
  %53 = lshr i32 %52, 2, !dbg !6721
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !6722
  store volatile i32 %49, i32* %54, align 4, !dbg !6723
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !6724
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_irq_spurious(i8* noundef %0) #1 !dbg !6725 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6726, metadata !DIExpression()), !dbg !6727
  %3 = load i8*, i8** %2, align 4, !dbg !6728
  call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #10, !dbg !6729
  ret void, !dbg !6730
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_nmi() #1 !dbg !6731 {
  call void @z_SysNmiOnReset() #10, !dbg !6733
  call void @z_arm_int_exit() #10, !dbg !6734
  ret void, !dbg !6735
}

declare dso_local void @z_SysNmiOnReset() #0

declare dso_local void @z_arm_int_exit() #0

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_prep_c() #1 !dbg !6736 {
  call void @relocate_vector_table() #10, !dbg !6738
  call void @z_bss_zero() #10, !dbg !6739
  call void @z_data_copy() #10, !dbg !6740
  call void @z_arm_interrupt_init() #10, !dbg !6741
  call void @z_cstart() #12, !dbg !6742
  unreachable, !dbg !6742
}

; Function Attrs: noinline nounwind optnone
define internal void @relocate_vector_table() #1 !dbg !6743 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -256), i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 2), align 4, !dbg !6744
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !6745, !srcloc !6748
  call void asm sideeffect "isb 0xF", "~{memory}"() #9, !dbg !6749, !srcloc !6752
  ret void, !dbg !6753
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @arch_swap(i32 noundef %0) #1 !dbg !6754 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6756, metadata !DIExpression()), !dbg !6757
  %4 = load i32, i32* %3, align 4, !dbg !6758
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6759
  %6 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %5, i32 0, i32 6, !dbg !6760
  %7 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %6, i32 0, i32 0, !dbg !6761
  store i32 %4, i32* %7, align 8, !dbg !6762
  %8 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6763
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6764
  %10 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %9, i32 0, i32 6, !dbg !6765
  %11 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %10, i32 0, i32 1, !dbg !6766
  store i32 %8, i32* %11, align 4, !dbg !6767
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !6768
  %13 = or i32 %12, 268435456, !dbg !6768
  store volatile i32 %13, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !6768
  store i32 0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6769, metadata !DIExpression()) #9, !dbg !6771
  %14 = load i32, i32* %2, align 4, !dbg !6773
  %15 = icmp ne i32 %14, 0, !dbg !6775
  br i1 %15, label %16, label %17, !dbg !6776

16:                                               ; preds = %1
  br label %18, !dbg !6777

17:                                               ; preds = %1
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !6779, !srcloc !6780
  br label %18, !dbg !6781

18:                                               ; preds = %16, %17
  %19 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6782
  %20 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %19, i32 0, i32 6, !dbg !6783
  %21 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %20, i32 0, i32 1, !dbg !6784
  %22 = load i32, i32* %21, align 4, !dbg !6784
  ret i32 %22, !dbg !6785
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_new_thread(%struct.k_thread.203* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #1 !dbg !6786 {
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %struct.z_thread_stack_element*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca void (i8*, i8*, i8*)*, align 4
  %12 = alloca i8*, align 4
  %13 = alloca i8*, align 4
  %14 = alloca i8*, align 4
  %15 = alloca %struct.__basic_sf*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !6889, metadata !DIExpression()), !dbg !6890
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %9, metadata !6891, metadata !DIExpression()), !dbg !6892
  store i8* %2, i8** %10, align 4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !6893, metadata !DIExpression()), !dbg !6894
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %11, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %11, metadata !6895, metadata !DIExpression()), !dbg !6896
  store i8* %4, i8** %12, align 4
  call void @llvm.dbg.declare(metadata i8** %12, metadata !6897, metadata !DIExpression()), !dbg !6898
  store i8* %5, i8** %13, align 4
  call void @llvm.dbg.declare(metadata i8** %13, metadata !6899, metadata !DIExpression()), !dbg !6900
  store i8* %6, i8** %14, align 4
  call void @llvm.dbg.declare(metadata i8** %14, metadata !6901, metadata !DIExpression()), !dbg !6902
  call void @llvm.dbg.declare(metadata %struct.__basic_sf** %15, metadata !6903, metadata !DIExpression()), !dbg !6904
  %16 = load i8*, i8** %10, align 4, !dbg !6905
  %17 = getelementptr inbounds i8, i8* %16, i32 -32, !dbg !6905
  %18 = bitcast i8* %17 to %struct.__basic_sf*, !dbg !6905
  store %struct.__basic_sf* %18, %struct.__basic_sf** %15, align 4, !dbg !6906
  %19 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6907
  %20 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %19, i32 0, i32 6, !dbg !6908
  %21 = bitcast %union.anon.68* %20 to i32*, !dbg !6908
  store i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32* %21, align 4, !dbg !6909
  %22 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6910
  %23 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %22, i32 0, i32 6, !dbg !6911
  %24 = bitcast %union.anon.68* %23 to i32*, !dbg !6911
  %25 = load i32, i32* %24, align 4, !dbg !6912
  %26 = and i32 %25, -2, !dbg !6912
  store i32 %26, i32* %24, align 4, !dbg !6912
  %27 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %11, align 4, !dbg !6913
  %28 = ptrtoint void (i8*, i8*, i8*)* %27 to i32, !dbg !6914
  %29 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6915
  %30 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %29, i32 0, i32 0, !dbg !6916
  %31 = bitcast %union.anon.68* %30 to i32*, !dbg !6916
  store i32 %28, i32* %31, align 4, !dbg !6917
  %32 = load i8*, i8** %12, align 4, !dbg !6918
  %33 = ptrtoint i8* %32 to i32, !dbg !6919
  %34 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6920
  %35 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %34, i32 0, i32 1, !dbg !6921
  %36 = bitcast %union.anon.68* %35 to i32*, !dbg !6921
  store i32 %33, i32* %36, align 4, !dbg !6922
  %37 = load i8*, i8** %13, align 4, !dbg !6923
  %38 = ptrtoint i8* %37 to i32, !dbg !6924
  %39 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6925
  %40 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %39, i32 0, i32 2, !dbg !6926
  %41 = bitcast %union.anon.68* %40 to i32*, !dbg !6926
  store i32 %38, i32* %41, align 4, !dbg !6927
  %42 = load i8*, i8** %14, align 4, !dbg !6928
  %43 = ptrtoint i8* %42 to i32, !dbg !6929
  %44 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6930
  %45 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %44, i32 0, i32 3, !dbg !6931
  %46 = bitcast %union.anon.68* %45 to i32*, !dbg !6931
  store i32 %43, i32* %46, align 4, !dbg !6932
  %47 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6933
  %48 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %47, i32 0, i32 7, !dbg !6934
  store i32 16777216, i32* %48, align 4, !dbg !6935
  %49 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !6936
  %50 = ptrtoint %struct.__basic_sf* %49 to i32, !dbg !6937
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !6938
  %52 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %51, i32 0, i32 1, !dbg !6939
  %53 = getelementptr inbounds %struct._callee_saved.10, %struct._callee_saved.10* %52, i32 0, i32 8, !dbg !6940
  store i32 %50, i32* %53, align 8, !dbg !6941
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !6942
  %55 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %54, i32 0, i32 6, !dbg !6943
  %56 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %55, i32 0, i32 0, !dbg !6944
  store i32 0, i32* %56, align 8, !dbg !6945
  ret void, !dbg !6946
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_switch_to_main_thread(%struct.k_thread.203* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) #1 !dbg !6947 {
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca void (i8*, i8*, i8*)*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !6950, metadata !DIExpression()), !dbg !6951
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6952, metadata !DIExpression()), !dbg !6953
  store void (i8*, i8*, i8*)* %2, void (i8*, i8*, i8*)** %6, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %6, metadata !6954, metadata !DIExpression()), !dbg !6955
  call void @z_arm_prepare_switch_to_main() #10, !dbg !6956
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !6957
  store %struct.k_thread.203* %7, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6958
  %8 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %6, align 4, !dbg !6959
  %9 = load i8*, i8** %5, align 4, !dbg !6960
  call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie i\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %8, i8* %9) #9, !dbg !6961, !srcloc !6962
  unreachable, !dbg !6963
}

; Function Attrs: noinline nounwind optnone
define internal void @z_arm_prepare_switch_to_main() #1 !dbg !6964 {
  ret void, !dbg !6965
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved.10* noundef %3) #1 !dbg !6966 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct._callee_saved.10*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca %struct.__esf*, align 4
  %15 = alloca %struct.__esf, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6983, metadata !DIExpression()), !dbg !6984
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6985, metadata !DIExpression()), !dbg !6986
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6987, metadata !DIExpression()), !dbg !6988
  store %struct._callee_saved.10* %3, %struct._callee_saved.10** %9, align 4
  call void @llvm.dbg.declare(metadata %struct._callee_saved.10** %9, metadata !6989, metadata !DIExpression()), !dbg !6990
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6991, metadata !DIExpression()), !dbg !6992
  store i32 0, i32* %10, align 4, !dbg !6992
  call void @llvm.dbg.declare(metadata i32* %11, metadata !6993, metadata !DIExpression()), !dbg !6994
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !6995
  %17 = and i32 %16, 511, !dbg !6996
  store i32 %17, i32* %11, align 4, !dbg !6994
  call void @llvm.dbg.declare(metadata i8* %12, metadata !6997, metadata !DIExpression()), !dbg !6998
  call void @llvm.dbg.declare(metadata i8* %13, metadata !6999, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.declare(metadata %struct.__esf** %14, metadata !7001, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.declare(metadata %struct.__esf* %15, metadata !7003, metadata !DIExpression()), !dbg !7004
  store i32 0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7005, metadata !DIExpression()) #9, !dbg !7007
  %18 = load i32, i32* %5, align 4, !dbg !7009
  %19 = icmp ne i32 %18, 0, !dbg !7011
  br i1 %19, label %20, label %21, !dbg !7012

20:                                               ; preds = %4
  br label %22, !dbg !7013

21:                                               ; preds = %4
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !7015, !srcloc !7016
  br label %22, !dbg !7017

22:                                               ; preds = %20, %21
  %23 = load i32, i32* %6, align 4, !dbg !7018
  %24 = load i32, i32* %7, align 4, !dbg !7019
  %25 = load i32, i32* %8, align 4, !dbg !7020
  %26 = call %struct.__esf* @get_esf(i32 noundef %23, i32 noundef %24, i32 noundef %25, i8* noundef %13) #10, !dbg !7021
  store %struct.__esf* %26, %struct.__esf** %14, align 4, !dbg !7022
  %27 = load %struct.__esf*, %struct.__esf** %14, align 4, !dbg !7023
  %28 = load i32, i32* %11, align 4, !dbg !7024
  %29 = call i32 @fault_handle(%struct.__esf* noundef %27, i32 noundef %28, i8* noundef %12) #10, !dbg !7025
  store i32 %29, i32* %10, align 4, !dbg !7026
  %30 = load i8, i8* %12, align 1, !dbg !7027
  %31 = trunc i8 %30 to i1, !dbg !7027
  br i1 %31, label %32, label %33, !dbg !7029

32:                                               ; preds = %22
  br label %60, !dbg !7030

33:                                               ; preds = %22
  %34 = bitcast %struct.__esf* %15 to i8*, !dbg !7032
  %35 = load %struct.__esf*, %struct.__esf** %14, align 4, !dbg !7033
  %36 = bitcast %struct.__esf* %35 to i8*, !dbg !7033
  %37 = call i8* @memcpy(i8* noundef %34, i8* noundef %36, i32 noundef 32) #10, !dbg !7034
  %38 = load %struct._callee_saved.10*, %struct._callee_saved.10** %9, align 4, !dbg !7035
  %39 = load i8, i8* %13, align 1, !dbg !7036
  %40 = trunc i8 %39 to i1, !dbg !7036
  br i1 %40, label %41, label %53, !dbg !7038

41:                                               ; preds = %33
  %42 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !7039
  %43 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %42, i32 0, i32 7, !dbg !7042
  %44 = load i32, i32* %43, align 4, !dbg !7042
  %45 = and i32 %44, 511, !dbg !7043
  %46 = icmp eq i32 %45, 0, !dbg !7044
  br i1 %46, label %47, label %52, !dbg !7045

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !7046
  %49 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %48, i32 0, i32 7, !dbg !7048
  %50 = load i32, i32* %49, align 4, !dbg !7049
  %51 = or i32 %50, 511, !dbg !7049
  store i32 %51, i32* %49, align 4, !dbg !7049
  br label %52, !dbg !7050

52:                                               ; preds = %47, %41
  br label %58, !dbg !7051

53:                                               ; preds = %33
  %54 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !7052
  %55 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %54, i32 0, i32 7, !dbg !7054
  %56 = load i32, i32* %55, align 4, !dbg !7055
  %57 = and i32 %56, -512, !dbg !7055
  store i32 %57, i32* %55, align 4, !dbg !7055
  br label %58

58:                                               ; preds = %53, %52
  %59 = load i32, i32* %10, align 4, !dbg !7056
  call void @z_arm_fatal_error(i32 noundef %59, %struct.__esf* noundef %15) #10, !dbg !7057
  br label %60, !dbg !7058

60:                                               ; preds = %58, %32
  ret void, !dbg !7058
}

; Function Attrs: noinline nounwind optnone
define internal %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3) #1 !dbg !7059 {
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8, align 1
  %11 = alloca %struct.__esf*, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7063, metadata !DIExpression()), !dbg !7064
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7065, metadata !DIExpression()), !dbg !7066
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7067, metadata !DIExpression()), !dbg !7068
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7069, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.declare(metadata i8* %10, metadata !7071, metadata !DIExpression()), !dbg !7072
  store i8 0, i8* %10, align 1, !dbg !7072
  call void @llvm.dbg.declare(metadata %struct.__esf** %11, metadata !7073, metadata !DIExpression()), !dbg !7074
  store %struct.__esf* null, %struct.__esf** %11, align 4, !dbg !7074
  %16 = load i8*, i8** %9, align 4, !dbg !7075
  store i8 0, i8* %16, align 1, !dbg !7076
  %17 = load i32, i32* %8, align 4, !dbg !7077
  %18 = and i32 %17, -16777216, !dbg !7079
  %19 = icmp ne i32 %18, -16777216, !dbg !7080
  br i1 %19, label %20, label %21, !dbg !7081

20:                                               ; preds = %4
  store %struct.__esf* null, %struct.__esf** %5, align 4, !dbg !7082
  br label %49, !dbg !7082

21:                                               ; preds = %4
  %22 = load i32, i32* %8, align 4, !dbg !7084
  %23 = and i32 %22, 8, !dbg !7086
  %24 = icmp ne i32 %23, 0, !dbg !7086
  br i1 %24, label %25, label %32, !dbg !7087

25:                                               ; preds = %21
  %26 = load i32, i32* %8, align 4, !dbg !7088
  %27 = and i32 %26, 4, !dbg !7089
  %28 = icmp ne i32 %27, 0, !dbg !7089
  br i1 %28, label %32, label %29, !dbg !7090

29:                                               ; preds = %25
  br label %30, !dbg !7091

30:                                               ; preds = %29
  br label %31, !dbg !7093

31:                                               ; preds = %30
  store %struct.__esf* null, %struct.__esf** %5, align 4, !dbg !7097
  br label %49, !dbg !7097

32:                                               ; preds = %25, %21
  %33 = load i8, i8* %10, align 1, !dbg !7098
  %34 = trunc i8 %33 to i1, !dbg !7098
  br i1 %34, label %47, label %35, !dbg !7100

35:                                               ; preds = %32
  %36 = load i32, i32* %8, align 4, !dbg !7101
  %37 = and i32 %36, 8, !dbg !7104
  %38 = icmp ne i32 %37, 0, !dbg !7104
  br i1 %38, label %39, label %42, !dbg !7105

39:                                               ; preds = %35
  %40 = load i32, i32* %7, align 4, !dbg !7106
  %41 = inttoptr i32 %40 to %struct.__esf*, !dbg !7108
  store %struct.__esf* %41, %struct.__esf** %11, align 4, !dbg !7109
  br label %46, !dbg !7110

42:                                               ; preds = %35
  %43 = load i32, i32* %6, align 4, !dbg !7111
  %44 = inttoptr i32 %43 to %struct.__esf*, !dbg !7113
  store %struct.__esf* %44, %struct.__esf** %11, align 4, !dbg !7114
  %45 = load i8*, i8** %9, align 4, !dbg !7115
  store i8 1, i8* %45, align 1, !dbg !7116
  br label %46

46:                                               ; preds = %42, %39
  br label %47, !dbg !7117

47:                                               ; preds = %46, %32
  %48 = load %struct.__esf*, %struct.__esf** %11, align 4, !dbg !7118
  store %struct.__esf* %48, %struct.__esf** %5, align 4, !dbg !7119
  br label %49, !dbg !7119

49:                                               ; preds = %47, %31, %20
  %50 = load %struct.__esf*, %struct.__esf** %5, align 4, !dbg !7120
  ret %struct.__esf* %50, !dbg !7120
}

; Function Attrs: noinline nounwind optnone
define internal i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !7121 {
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !7124, metadata !DIExpression()), !dbg !7125
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7126, metadata !DIExpression()), !dbg !7127
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7128, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7130, metadata !DIExpression()), !dbg !7131
  store i32 0, i32* %7, align 4, !dbg !7131
  %8 = load i8*, i8** %6, align 4, !dbg !7132
  store i8 0, i8* %8, align 1, !dbg !7133
  %9 = load i32, i32* %5, align 4, !dbg !7134
  switch i32 %9, label %14 [
    i32 3, label %10
  ], !dbg !7135

10:                                               ; preds = %3
  %11 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !7136
  %12 = load i8*, i8** %6, align 4, !dbg !7138
  %13 = call i32 @hard_fault(%struct.__esf* noundef %11, i8* noundef %12) #10, !dbg !7139
  store i32 %13, i32* %7, align 4, !dbg !7140
  br label %17, !dbg !7141

14:                                               ; preds = %3
  %15 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !7142
  %16 = load i32, i32* %5, align 4, !dbg !7143
  call void @reserved_exception(%struct.__esf* noundef %15, i32 noundef %16) #10, !dbg !7144
  br label %17, !dbg !7145

17:                                               ; preds = %14, %10
  %18 = load i8*, i8** %6, align 4, !dbg !7146
  %19 = load i8, i8* %18, align 1, !dbg !7148
  %20 = trunc i8 %19 to i1, !dbg !7148
  %21 = zext i1 %20 to i32, !dbg !7149
  %22 = icmp eq i32 %21, 0, !dbg !7150
  br i1 %22, label %23, label %26, !dbg !7151

23:                                               ; preds = %17
  %24 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !7152
  %25 = load i32, i32* %5, align 4, !dbg !7154
  call void @fault_show(%struct.__esf* noundef %24, i32 noundef %25) #10, !dbg !7155
  br label %26, !dbg !7156

26:                                               ; preds = %23, %17
  %27 = load i32, i32* %7, align 4, !dbg !7157
  ret i32 %27, !dbg !7158
}

; Function Attrs: noinline nounwind optnone
define internal i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef %1) #1 !dbg !7159 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7162, metadata !DIExpression()), !dbg !7163
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7164, metadata !DIExpression()), !dbg !7165
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7166, metadata !DIExpression()), !dbg !7167
  store i32 0, i32* %5, align 4, !dbg !7167
  br label %14, !dbg !7168

14:                                               ; preds = %2
  br label %15, !dbg !7169

15:                                               ; preds = %14
  %16 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7173
  %17 = call zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %16) #10, !dbg !7175
  br i1 %17, label %18, label %26, !dbg !7176

18:                                               ; preds = %15
  br label %19, !dbg !7177

19:                                               ; preds = %18
  br label %20, !dbg !7179

20:                                               ; preds = %19
  %21 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7183
  %22 = getelementptr inbounds %struct.__esf, %struct.__esf* %21, i32 0, i32 0, !dbg !7184
  %23 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %22, i32 0, i32 0, !dbg !7185
  %24 = bitcast %union.anon.68* %23 to i32*, !dbg !7185
  %25 = load i32, i32* %24, align 4, !dbg !7185
  store i32 %25, i32* %5, align 4, !dbg !7186
  br label %26, !dbg !7187

26:                                               ; preds = %20, %15
  %27 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7188
  %28 = call zeroext i1 @memory_fault_recoverable(%struct.__esf* noundef %27, i1 noundef zeroext true) #10, !dbg !7189
  %29 = load i8*, i8** %4, align 4, !dbg !7190
  %30 = zext i1 %28 to i8, !dbg !7191
  store i8 %30, i8* %29, align 1, !dbg !7191
  %31 = load i32, i32* %5, align 4, !dbg !7192
  ret i32 %31, !dbg !7193
}

; Function Attrs: noinline nounwind optnone
define internal void @reserved_exception(%struct.__esf* noundef %0, i32 noundef %1) #1 !dbg !7194 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7199, metadata !DIExpression()), !dbg !7200
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7201, metadata !DIExpression()), !dbg !7202
  %9 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7203
  br label %10, !dbg !7204

10:                                               ; preds = %2
  br label %11, !dbg !7205

11:                                               ; preds = %10
  ret void, !dbg !7209
}

; Function Attrs: noinline nounwind optnone
define internal void @fault_show(%struct.__esf* noundef %0, i32 noundef %1) #1 !dbg !7210 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7211, metadata !DIExpression()), !dbg !7212
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7213, metadata !DIExpression()), !dbg !7214
  %5 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7215
  %6 = load i32, i32* %4, align 4, !dbg !7216
  ret void, !dbg !7217
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #1 !dbg !7218 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i16*, align 4
  %5 = alloca i16, align 2
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7221, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.declare(metadata i16** %4, metadata !7223, metadata !DIExpression()), !dbg !7224
  %6 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !7225
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %6, i32 0, i32 0, !dbg !7226
  %8 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %7, i32 0, i32 6, !dbg !7227
  %9 = bitcast %union.anon.68* %8 to i32*, !dbg !7227
  %10 = load i32, i32* %9, align 4, !dbg !7227
  %11 = inttoptr i32 %10 to i16*, !dbg !7228
  store i16* %11, i16** %4, align 4, !dbg !7224
  call void @llvm.dbg.declare(metadata i16* %5, metadata !7229, metadata !DIExpression()), !dbg !7230
  %12 = load i16*, i16** %4, align 4, !dbg !7231
  %13 = getelementptr inbounds i16, i16* %12, i32 -1, !dbg !7232
  %14 = load i16, i16* %13, align 2, !dbg !7233
  store i16 %14, i16* %5, align 2, !dbg !7230
  %15 = load i16, i16* %5, align 2, !dbg !7234
  %16 = zext i16 %15 to i32, !dbg !7234
  %17 = and i32 %16, 65280, !dbg !7236
  %18 = icmp eq i32 %17, 57088, !dbg !7237
  br i1 %18, label %19, label %25, !dbg !7238

19:                                               ; preds = %1
  %20 = load i16, i16* %5, align 2, !dbg !7239
  %21 = zext i16 %20 to i32, !dbg !7239
  %22 = and i32 %21, 255, !dbg !7240
  %23 = icmp eq i32 %22, 2, !dbg !7241
  br i1 %23, label %24, label %25, !dbg !7242

24:                                               ; preds = %19
  store i1 true, i1* %2, align 1, !dbg !7243
  br label %26, !dbg !7243

25:                                               ; preds = %19, %1
  store i1 false, i1* %2, align 1, !dbg !7245
  br label %26, !dbg !7245

26:                                               ; preds = %25, %24
  %27 = load i1, i1* %2, align 1, !dbg !7246
  ret i1 %27, !dbg !7246
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @memory_fault_recoverable(%struct.__esf* noundef %0, i1 noundef zeroext %1) #1 !dbg !7247 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i8, align 1
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !7250, metadata !DIExpression()), !dbg !7251
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !7252, metadata !DIExpression()), !dbg !7253
  ret i1 false, !dbg !7254
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fault_init() #1 !dbg !7255 {
  ret void, !dbg !7256
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_interrupt_init() #1 !dbg !7257 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7259, metadata !DIExpression()), !dbg !7260
  store i32 0, i32* %1, align 4, !dbg !7260
  br label %2, !dbg !7261

2:                                                ; preds = %7, %0
  %3 = load i32, i32* %1, align 4, !dbg !7262
  %4 = icmp slt i32 %3, 28, !dbg !7265
  br i1 %4, label %5, label %10, !dbg !7266

5:                                                ; preds = %2
  %6 = load i32, i32* %1, align 4, !dbg !7267
  call void @__NVIC_SetPriority.11(i32 noundef %6, i32 noundef 0) #10, !dbg !7269
  br label %7, !dbg !7270

7:                                                ; preds = %5
  %8 = load i32, i32* %1, align 4, !dbg !7271
  %9 = add nsw i32 %8, 1, !dbg !7271
  store i32 %9, i32* %1, align 4, !dbg !7271
  br label %2, !dbg !7272, !llvm.loop !7273

10:                                               ; preds = %2
  ret void, !dbg !7275
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.11(i32 noundef %0, i32 noundef %1) #1 !dbg !7276 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7277, metadata !DIExpression()), !dbg !7278
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7279, metadata !DIExpression()), !dbg !7280
  %5 = load i32, i32* %3, align 4, !dbg !7281
  %6 = icmp sge i32 %5, 0, !dbg !7283
  br i1 %6, label %7, label %29, !dbg !7284

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !7285
  %9 = lshr i32 %8, 2, !dbg !7285
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !7287
  %11 = load volatile i32, i32* %10, align 4, !dbg !7287
  %12 = load i32, i32* %3, align 4, !dbg !7288
  %13 = and i32 %12, 3, !dbg !7288
  %14 = mul i32 %13, 8, !dbg !7288
  %15 = shl i32 255, %14, !dbg !7289
  %16 = xor i32 %15, -1, !dbg !7290
  %17 = and i32 %11, %16, !dbg !7291
  %18 = load i32, i32* %4, align 4, !dbg !7292
  %19 = shl i32 %18, 6, !dbg !7293
  %20 = and i32 %19, 255, !dbg !7294
  %21 = load i32, i32* %3, align 4, !dbg !7295
  %22 = and i32 %21, 3, !dbg !7295
  %23 = mul i32 %22, 8, !dbg !7295
  %24 = shl i32 %20, %23, !dbg !7296
  %25 = or i32 %17, %24, !dbg !7297
  %26 = load i32, i32* %3, align 4, !dbg !7298
  %27 = lshr i32 %26, 2, !dbg !7298
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !7299
  store volatile i32 %25, i32* %28, align 4, !dbg !7300
  br label %55, !dbg !7301

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !7302
  %31 = and i32 %30, 15, !dbg !7302
  %32 = sub i32 %31, 8, !dbg !7302
  %33 = lshr i32 %32, 2, !dbg !7302
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !7304
  %35 = load volatile i32, i32* %34, align 4, !dbg !7304
  %36 = load i32, i32* %3, align 4, !dbg !7305
  %37 = and i32 %36, 3, !dbg !7305
  %38 = mul i32 %37, 8, !dbg !7305
  %39 = shl i32 255, %38, !dbg !7306
  %40 = xor i32 %39, -1, !dbg !7307
  %41 = and i32 %35, %40, !dbg !7308
  %42 = load i32, i32* %4, align 4, !dbg !7309
  %43 = shl i32 %42, 6, !dbg !7310
  %44 = and i32 %43, 255, !dbg !7311
  %45 = load i32, i32* %3, align 4, !dbg !7312
  %46 = and i32 %45, 3, !dbg !7312
  %47 = mul i32 %46, 8, !dbg !7312
  %48 = shl i32 %44, %47, !dbg !7313
  %49 = or i32 %41, %48, !dbg !7314
  %50 = load i32, i32* %3, align 4, !dbg !7315
  %51 = and i32 %50, 15, !dbg !7315
  %52 = sub i32 %51, 8, !dbg !7315
  %53 = lshr i32 %52, 2, !dbg !7315
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !7316
  store volatile i32 %49, i32* %54, align 4, !dbg !7317
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !7318
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_abort(%struct.k_thread.203* noundef %0) #1 !dbg !7319 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !7418, metadata !DIExpression()), !dbg !7419
  %4 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7420
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !7422
  %6 = icmp eq %struct.k_thread.203* %4, %5, !dbg !7423
  br i1 %6, label %7, label %19, !dbg !7424

7:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7425, metadata !DIExpression()) #9, !dbg !7429
  %8 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !7436, !srcloc !7437
  store i32 %8, i32* %2, align 4, !dbg !7436
  %9 = load i32, i32* %2, align 4, !dbg !7438
  %10 = icmp ne i32 %9, 0, !dbg !7439
  %11 = zext i1 %10 to i64, !dbg !7439
  %12 = select i1 %10, i32 1, i32 0, !dbg !7439
  br i1 %10, label %13, label %18, !dbg !7440

13:                                               ; preds = %7
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !7441
  %15 = or i32 %14, 268435456, !dbg !7441
  store volatile i32 %15, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !7441
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !7443
  %17 = and i32 %16, -32769, !dbg !7443
  store volatile i32 %17, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !7443
  br label %18, !dbg !7444

18:                                               ; preds = %13, %7
  br label %19, !dbg !7445

19:                                               ; preds = %18, %1
  %20 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !7446
  call void @z_thread_abort(%struct.k_thread.203* noundef %20) #10, !dbg !7447
  ret void, !dbg !7448
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strcpy(i8* noalias noundef %0, i8* noalias noundef %1) #1 !dbg !7449 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7455, metadata !DIExpression()), !dbg !7456
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7457, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7459, metadata !DIExpression()), !dbg !7460
  %6 = load i8*, i8** %3, align 4, !dbg !7461
  store i8* %6, i8** %5, align 4, !dbg !7460
  br label %7, !dbg !7462

7:                                                ; preds = %12, %2
  %8 = load i8*, i8** %4, align 4, !dbg !7463
  %9 = load i8, i8* %8, align 1, !dbg !7464
  %10 = zext i8 %9 to i32, !dbg !7464
  %11 = icmp ne i32 %10, 0, !dbg !7465
  br i1 %11, label %12, label %20, !dbg !7462

12:                                               ; preds = %7
  %13 = load i8*, i8** %4, align 4, !dbg !7466
  %14 = load i8, i8* %13, align 1, !dbg !7468
  %15 = load i8*, i8** %3, align 4, !dbg !7469
  store i8 %14, i8* %15, align 1, !dbg !7470
  %16 = load i8*, i8** %3, align 4, !dbg !7471
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !7471
  store i8* %17, i8** %3, align 4, !dbg !7471
  %18 = load i8*, i8** %4, align 4, !dbg !7472
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7472
  store i8* %19, i8** %4, align 4, !dbg !7472
  br label %7, !dbg !7462, !llvm.loop !7473

20:                                               ; preds = %7
  %21 = load i8*, i8** %3, align 4, !dbg !7475
  store i8 0, i8* %21, align 1, !dbg !7476
  %22 = load i8*, i8** %5, align 4, !dbg !7477
  ret i8* %22, !dbg !7478
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strncpy(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !7479 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7482, metadata !DIExpression()), !dbg !7483
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7484, metadata !DIExpression()), !dbg !7485
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7486, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7488, metadata !DIExpression()), !dbg !7489
  %8 = load i8*, i8** %4, align 4, !dbg !7490
  store i8* %8, i8** %7, align 4, !dbg !7489
  br label %9, !dbg !7491

9:                                                ; preds = %19, %3
  %10 = load i32, i32* %6, align 4, !dbg !7492
  %11 = icmp ugt i32 %10, 0, !dbg !7493
  br i1 %11, label %12, label %17, !dbg !7494

12:                                               ; preds = %9
  %13 = load i8*, i8** %5, align 4, !dbg !7495
  %14 = load i8, i8* %13, align 1, !dbg !7496
  %15 = zext i8 %14 to i32, !dbg !7496
  %16 = icmp ne i32 %15, 0, !dbg !7497
  br label %17

17:                                               ; preds = %12, %9
  %18 = phi i1 [ false, %9 ], [ %16, %12 ], !dbg !7498
  br i1 %18, label %19, label %29, !dbg !7491

19:                                               ; preds = %17
  %20 = load i8*, i8** %5, align 4, !dbg !7499
  %21 = load i8, i8* %20, align 1, !dbg !7501
  %22 = load i8*, i8** %4, align 4, !dbg !7502
  store i8 %21, i8* %22, align 1, !dbg !7503
  %23 = load i8*, i8** %5, align 4, !dbg !7504
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7504
  store i8* %24, i8** %5, align 4, !dbg !7504
  %25 = load i8*, i8** %4, align 4, !dbg !7505
  %26 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !7505
  store i8* %26, i8** %4, align 4, !dbg !7505
  %27 = load i32, i32* %6, align 4, !dbg !7506
  %28 = add i32 %27, -1, !dbg !7506
  store i32 %28, i32* %6, align 4, !dbg !7506
  br label %9, !dbg !7491, !llvm.loop !7507

29:                                               ; preds = %17
  br label %30, !dbg !7509

30:                                               ; preds = %33, %29
  %31 = load i32, i32* %6, align 4, !dbg !7510
  %32 = icmp ugt i32 %31, 0, !dbg !7511
  br i1 %32, label %33, label %39, !dbg !7509

33:                                               ; preds = %30
  %34 = load i8*, i8** %4, align 4, !dbg !7512
  store i8 0, i8* %34, align 1, !dbg !7514
  %35 = load i8*, i8** %4, align 4, !dbg !7515
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !7515
  store i8* %36, i8** %4, align 4, !dbg !7515
  %37 = load i32, i32* %6, align 4, !dbg !7516
  %38 = add i32 %37, -1, !dbg !7516
  store i32 %38, i32* %6, align 4, !dbg !7516
  br label %30, !dbg !7509, !llvm.loop !7517

39:                                               ; preds = %30
  %40 = load i8*, i8** %7, align 4, !dbg !7519
  ret i8* %40, !dbg !7520
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strchr(i8* noundef %0, i32 noundef %1) #1 !dbg !7521 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7524, metadata !DIExpression()), !dbg !7525
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7526, metadata !DIExpression()), !dbg !7527
  call void @llvm.dbg.declare(metadata i8* %5, metadata !7528, metadata !DIExpression()), !dbg !7529
  %6 = load i32, i32* %4, align 4, !dbg !7530
  %7 = trunc i32 %6 to i8, !dbg !7531
  store i8 %7, i8* %5, align 1, !dbg !7529
  br label %8, !dbg !7532

8:                                                ; preds = %22, %2
  %9 = load i8*, i8** %3, align 4, !dbg !7533
  %10 = load i8, i8* %9, align 1, !dbg !7534
  %11 = zext i8 %10 to i32, !dbg !7534
  %12 = load i8, i8* %5, align 1, !dbg !7535
  %13 = zext i8 %12 to i32, !dbg !7535
  %14 = icmp ne i32 %11, %13, !dbg !7536
  br i1 %14, label %15, label %20, !dbg !7537

15:                                               ; preds = %8
  %16 = load i8*, i8** %3, align 4, !dbg !7538
  %17 = load i8, i8* %16, align 1, !dbg !7539
  %18 = zext i8 %17 to i32, !dbg !7539
  %19 = icmp ne i32 %18, 0, !dbg !7540
  br label %20

20:                                               ; preds = %15, %8
  %21 = phi i1 [ false, %8 ], [ %19, %15 ], !dbg !7541
  br i1 %21, label %22, label %25, !dbg !7532

22:                                               ; preds = %20
  %23 = load i8*, i8** %3, align 4, !dbg !7542
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7542
  store i8* %24, i8** %3, align 4, !dbg !7542
  br label %8, !dbg !7532, !llvm.loop !7544

25:                                               ; preds = %20
  %26 = load i8*, i8** %3, align 4, !dbg !7546
  %27 = load i8, i8* %26, align 1, !dbg !7547
  %28 = zext i8 %27 to i32, !dbg !7547
  %29 = load i8, i8* %5, align 1, !dbg !7548
  %30 = zext i8 %29 to i32, !dbg !7548
  %31 = icmp eq i32 %28, %30, !dbg !7549
  br i1 %31, label %32, label %34, !dbg !7550

32:                                               ; preds = %25
  %33 = load i8*, i8** %3, align 4, !dbg !7551
  br label %35, !dbg !7550

34:                                               ; preds = %25
  br label %35, !dbg !7550

35:                                               ; preds = %34, %32
  %36 = phi i8* [ %33, %32 ], [ null, %34 ], !dbg !7550
  ret i8* %36, !dbg !7552
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strrchr(i8* noundef %0, i32 noundef %1) #1 !dbg !7553 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7554, metadata !DIExpression()), !dbg !7555
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7556, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7558, metadata !DIExpression()), !dbg !7559
  store i8* null, i8** %5, align 4, !dbg !7559
  br label %6, !dbg !7560

6:                                                ; preds = %17, %2
  %7 = load i8*, i8** %3, align 4, !dbg !7561
  %8 = load i8, i8* %7, align 1, !dbg !7564
  %9 = zext i8 %8 to i32, !dbg !7564
  %10 = load i32, i32* %4, align 4, !dbg !7565
  %11 = trunc i32 %10 to i8, !dbg !7566
  %12 = zext i8 %11 to i32, !dbg !7566
  %13 = icmp eq i32 %9, %12, !dbg !7567
  br i1 %13, label %14, label %16, !dbg !7568

14:                                               ; preds = %6
  %15 = load i8*, i8** %3, align 4, !dbg !7569
  store i8* %15, i8** %5, align 4, !dbg !7571
  br label %16, !dbg !7572

16:                                               ; preds = %14, %6
  br label %17, !dbg !7573

17:                                               ; preds = %16
  %18 = load i8*, i8** %3, align 4, !dbg !7574
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7574
  store i8* %19, i8** %3, align 4, !dbg !7574
  %20 = load i8, i8* %18, align 1, !dbg !7575
  %21 = icmp ne i8 %20, 0, !dbg !7573
  br i1 %21, label %6, label %22, !dbg !7573, !llvm.loop !7576

22:                                               ; preds = %17
  %23 = load i8*, i8** %5, align 4, !dbg !7578
  ret i8* %23, !dbg !7579
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strlen(i8* noundef %0) #1 !dbg !7580 {
  %2 = alloca i8*, align 4
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !7583, metadata !DIExpression()), !dbg !7584
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7585, metadata !DIExpression()), !dbg !7586
  store i32 0, i32* %3, align 4, !dbg !7586
  br label %4, !dbg !7587

4:                                                ; preds = %9, %1
  %5 = load i8*, i8** %2, align 4, !dbg !7588
  %6 = load i8, i8* %5, align 1, !dbg !7589
  %7 = zext i8 %6 to i32, !dbg !7589
  %8 = icmp ne i32 %7, 0, !dbg !7590
  br i1 %8, label %9, label %14, !dbg !7587

9:                                                ; preds = %4
  %10 = load i8*, i8** %2, align 4, !dbg !7591
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7591
  store i8* %11, i8** %2, align 4, !dbg !7591
  %12 = load i32, i32* %3, align 4, !dbg !7593
  %13 = add i32 %12, 1, !dbg !7593
  store i32 %13, i32* %3, align 4, !dbg !7593
  br label %4, !dbg !7587, !llvm.loop !7594

14:                                               ; preds = %4
  %15 = load i32, i32* %3, align 4, !dbg !7596
  ret i32 %15, !dbg !7597
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strnlen(i8* noundef %0, i32 noundef %1) #1 !dbg !7598 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7601, metadata !DIExpression()), !dbg !7602
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7603, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7605, metadata !DIExpression()), !dbg !7606
  store i32 0, i32* %5, align 4, !dbg !7606
  br label %6, !dbg !7607

6:                                                ; preds = %17, %2
  %7 = load i8*, i8** %3, align 4, !dbg !7608
  %8 = load i8, i8* %7, align 1, !dbg !7609
  %9 = zext i8 %8 to i32, !dbg !7609
  %10 = icmp ne i32 %9, 0, !dbg !7610
  br i1 %10, label %11, label %15, !dbg !7611

11:                                               ; preds = %6
  %12 = load i32, i32* %5, align 4, !dbg !7612
  %13 = load i32, i32* %4, align 4, !dbg !7613
  %14 = icmp ult i32 %12, %13, !dbg !7614
  br label %15

15:                                               ; preds = %11, %6
  %16 = phi i1 [ false, %6 ], [ %14, %11 ], !dbg !7615
  br i1 %16, label %17, label %22, !dbg !7607

17:                                               ; preds = %15
  %18 = load i8*, i8** %3, align 4, !dbg !7616
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7616
  store i8* %19, i8** %3, align 4, !dbg !7616
  %20 = load i32, i32* %5, align 4, !dbg !7618
  %21 = add i32 %20, 1, !dbg !7618
  store i32 %21, i32* %5, align 4, !dbg !7618
  br label %6, !dbg !7607, !llvm.loop !7619

22:                                               ; preds = %15
  %23 = load i32, i32* %5, align 4, !dbg !7621
  ret i32 %23, !dbg !7622
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strcmp(i8* noundef %0, i8* noundef %1) #1 !dbg !7623 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7626, metadata !DIExpression()), !dbg !7627
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7628, metadata !DIExpression()), !dbg !7629
  br label %5, !dbg !7630

5:                                                ; preds = %20, %2
  %6 = load i8*, i8** %3, align 4, !dbg !7631
  %7 = load i8, i8* %6, align 1, !dbg !7632
  %8 = zext i8 %7 to i32, !dbg !7632
  %9 = load i8*, i8** %4, align 4, !dbg !7633
  %10 = load i8, i8* %9, align 1, !dbg !7634
  %11 = zext i8 %10 to i32, !dbg !7634
  %12 = icmp eq i32 %8, %11, !dbg !7635
  br i1 %12, label %13, label %18, !dbg !7636

13:                                               ; preds = %5
  %14 = load i8*, i8** %3, align 4, !dbg !7637
  %15 = load i8, i8* %14, align 1, !dbg !7638
  %16 = zext i8 %15 to i32, !dbg !7638
  %17 = icmp ne i32 %16, 0, !dbg !7639
  br label %18

18:                                               ; preds = %13, %5
  %19 = phi i1 [ false, %5 ], [ %17, %13 ], !dbg !7640
  br i1 %19, label %20, label %25, !dbg !7630

20:                                               ; preds = %18
  %21 = load i8*, i8** %3, align 4, !dbg !7641
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !7641
  store i8* %22, i8** %3, align 4, !dbg !7641
  %23 = load i8*, i8** %4, align 4, !dbg !7643
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7643
  store i8* %24, i8** %4, align 4, !dbg !7643
  br label %5, !dbg !7630, !llvm.loop !7644

25:                                               ; preds = %18
  %26 = load i8*, i8** %3, align 4, !dbg !7646
  %27 = load i8, i8* %26, align 1, !dbg !7647
  %28 = zext i8 %27 to i32, !dbg !7647
  %29 = load i8*, i8** %4, align 4, !dbg !7648
  %30 = load i8, i8* %29, align 1, !dbg !7649
  %31 = zext i8 %30 to i32, !dbg !7649
  %32 = sub nsw i32 %28, %31, !dbg !7650
  ret i32 %32, !dbg !7651
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strncmp(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !7652 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7655, metadata !DIExpression()), !dbg !7656
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7657, metadata !DIExpression()), !dbg !7658
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7659, metadata !DIExpression()), !dbg !7660
  br label %7, !dbg !7661

7:                                                ; preds = %25, %3
  %8 = load i32, i32* %6, align 4, !dbg !7662
  %9 = icmp ugt i32 %8, 0, !dbg !7663
  br i1 %9, label %10, label %23, !dbg !7664

10:                                               ; preds = %7
  %11 = load i8*, i8** %4, align 4, !dbg !7665
  %12 = load i8, i8* %11, align 1, !dbg !7666
  %13 = zext i8 %12 to i32, !dbg !7666
  %14 = load i8*, i8** %5, align 4, !dbg !7667
  %15 = load i8, i8* %14, align 1, !dbg !7668
  %16 = zext i8 %15 to i32, !dbg !7668
  %17 = icmp eq i32 %13, %16, !dbg !7669
  br i1 %17, label %18, label %23, !dbg !7670

18:                                               ; preds = %10
  %19 = load i8*, i8** %4, align 4, !dbg !7671
  %20 = load i8, i8* %19, align 1, !dbg !7672
  %21 = zext i8 %20 to i32, !dbg !7672
  %22 = icmp ne i32 %21, 0, !dbg !7673
  br label %23

23:                                               ; preds = %18, %10, %7
  %24 = phi i1 [ false, %10 ], [ false, %7 ], [ %22, %18 ], !dbg !7674
  br i1 %24, label %25, label %32, !dbg !7661

25:                                               ; preds = %23
  %26 = load i8*, i8** %4, align 4, !dbg !7675
  %27 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !7675
  store i8* %27, i8** %4, align 4, !dbg !7675
  %28 = load i8*, i8** %5, align 4, !dbg !7677
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !7677
  store i8* %29, i8** %5, align 4, !dbg !7677
  %30 = load i32, i32* %6, align 4, !dbg !7678
  %31 = add i32 %30, -1, !dbg !7678
  store i32 %31, i32* %6, align 4, !dbg !7678
  br label %7, !dbg !7661, !llvm.loop !7679

32:                                               ; preds = %23
  %33 = load i32, i32* %6, align 4, !dbg !7681
  %34 = icmp eq i32 %33, 0, !dbg !7682
  br i1 %34, label %35, label %36, !dbg !7683

35:                                               ; preds = %32
  br label %44, !dbg !7683

36:                                               ; preds = %32
  %37 = load i8*, i8** %4, align 4, !dbg !7684
  %38 = load i8, i8* %37, align 1, !dbg !7685
  %39 = zext i8 %38 to i32, !dbg !7685
  %40 = load i8*, i8** %5, align 4, !dbg !7686
  %41 = load i8, i8* %40, align 1, !dbg !7687
  %42 = zext i8 %41 to i32, !dbg !7687
  %43 = sub nsw i32 %39, %42, !dbg !7688
  br label %44, !dbg !7683

44:                                               ; preds = %36, %35
  %45 = phi i32 [ 0, %35 ], [ %43, %36 ], !dbg !7683
  ret i32 %45, !dbg !7689
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef %1, i8** noundef %2) #1 !dbg !7690 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8**, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7694, metadata !DIExpression()), !dbg !7695
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7696, metadata !DIExpression()), !dbg !7697
  store i8** %2, i8*** %7, align 4
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !7698, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7700, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7702, metadata !DIExpression()), !dbg !7703
  %10 = load i8*, i8** %5, align 4, !dbg !7704
  %11 = icmp ne i8* %10, null, !dbg !7704
  br i1 %11, label %12, label %14, !dbg !7704

12:                                               ; preds = %3
  %13 = load i8*, i8** %5, align 4, !dbg !7705
  br label %17, !dbg !7704

14:                                               ; preds = %3
  %15 = load i8**, i8*** %7, align 4, !dbg !7706
  %16 = load i8*, i8** %15, align 4, !dbg !7707
  br label %17, !dbg !7704

17:                                               ; preds = %14, %12
  %18 = phi i8* [ %13, %12 ], [ %16, %14 ], !dbg !7704
  store i8* %18, i8** %8, align 4, !dbg !7708
  br label %19, !dbg !7709

19:                                               ; preds = %33, %17
  %20 = load i8*, i8** %8, align 4, !dbg !7710
  %21 = load i8, i8* %20, align 1, !dbg !7711
  %22 = zext i8 %21 to i32, !dbg !7711
  %23 = icmp ne i32 %22, 0, !dbg !7711
  br i1 %23, label %24, label %31, !dbg !7712

24:                                               ; preds = %19
  %25 = load i8*, i8** %6, align 4, !dbg !7713
  %26 = load i8*, i8** %8, align 4, !dbg !7714
  %27 = load i8, i8* %26, align 1, !dbg !7715
  %28 = zext i8 %27 to i32, !dbg !7715
  %29 = call i8* @strchr(i8* noundef %25, i32 noundef %28) #10, !dbg !7716
  %30 = icmp ne i8* %29, null, !dbg !7712
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i1 [ false, %19 ], [ %30, %24 ], !dbg !7717
  br i1 %32, label %33, label %36, !dbg !7709

33:                                               ; preds = %31
  %34 = load i8*, i8** %8, align 4, !dbg !7718
  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !7718
  store i8* %35, i8** %8, align 4, !dbg !7718
  br label %19, !dbg !7709, !llvm.loop !7720

36:                                               ; preds = %31
  %37 = load i8*, i8** %8, align 4, !dbg !7722
  %38 = load i8, i8* %37, align 1, !dbg !7724
  %39 = zext i8 %38 to i32, !dbg !7724
  %40 = icmp eq i32 %39, 0, !dbg !7725
  br i1 %40, label %41, label %44, !dbg !7726

41:                                               ; preds = %36
  %42 = load i8*, i8** %8, align 4, !dbg !7727
  %43 = load i8**, i8*** %7, align 4, !dbg !7729
  store i8* %42, i8** %43, align 4, !dbg !7730
  store i8* null, i8** %4, align 4, !dbg !7731
  br label %79, !dbg !7731

44:                                               ; preds = %36
  %45 = load i8*, i8** %8, align 4, !dbg !7732
  store i8* %45, i8** %9, align 4, !dbg !7733
  br label %46, !dbg !7734

46:                                               ; preds = %61, %44
  %47 = load i8*, i8** %9, align 4, !dbg !7735
  %48 = load i8, i8* %47, align 1, !dbg !7736
  %49 = zext i8 %48 to i32, !dbg !7736
  %50 = icmp ne i32 %49, 0, !dbg !7736
  br i1 %50, label %51, label %59, !dbg !7737

51:                                               ; preds = %46
  %52 = load i8*, i8** %6, align 4, !dbg !7738
  %53 = load i8*, i8** %9, align 4, !dbg !7739
  %54 = load i8, i8* %53, align 1, !dbg !7740
  %55 = zext i8 %54 to i32, !dbg !7740
  %56 = call i8* @strchr(i8* noundef %52, i32 noundef %55) #10, !dbg !7741
  %57 = icmp ne i8* %56, null, !dbg !7742
  %58 = xor i1 %57, true, !dbg !7742
  br label %59

59:                                               ; preds = %51, %46
  %60 = phi i1 [ false, %46 ], [ %58, %51 ], !dbg !7717
  br i1 %60, label %61, label %64, !dbg !7734

61:                                               ; preds = %59
  %62 = load i8*, i8** %9, align 4, !dbg !7743
  %63 = getelementptr inbounds i8, i8* %62, i32 1, !dbg !7743
  store i8* %63, i8** %9, align 4, !dbg !7743
  br label %46, !dbg !7734, !llvm.loop !7745

64:                                               ; preds = %59
  %65 = load i8*, i8** %9, align 4, !dbg !7747
  %66 = load i8, i8* %65, align 1, !dbg !7749
  %67 = zext i8 %66 to i32, !dbg !7749
  %68 = icmp ne i32 %67, 0, !dbg !7750
  br i1 %68, label %69, label %74, !dbg !7751

69:                                               ; preds = %64
  %70 = load i8*, i8** %9, align 4, !dbg !7752
  store i8 0, i8* %70, align 1, !dbg !7754
  %71 = load i8*, i8** %9, align 4, !dbg !7755
  %72 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !7756
  %73 = load i8**, i8*** %7, align 4, !dbg !7757
  store i8* %72, i8** %73, align 4, !dbg !7758
  br label %77, !dbg !7759

74:                                               ; preds = %64
  %75 = load i8*, i8** %9, align 4, !dbg !7760
  %76 = load i8**, i8*** %7, align 4, !dbg !7762
  store i8* %75, i8** %76, align 4, !dbg !7763
  br label %77

77:                                               ; preds = %74, %69
  %78 = load i8*, i8** %8, align 4, !dbg !7764
  store i8* %78, i8** %4, align 4, !dbg !7765
  br label %79, !dbg !7765

79:                                               ; preds = %77, %41
  %80 = load i8*, i8** %4, align 4, !dbg !7766
  ret i8* %80, !dbg !7766
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strcat(i8* noalias noundef %0, i8* noalias noundef %1) #1 !dbg !7767 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7768, metadata !DIExpression()), !dbg !7769
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7770, metadata !DIExpression()), !dbg !7771
  %5 = load i8*, i8** %3, align 4, !dbg !7772
  %6 = load i8*, i8** %3, align 4, !dbg !7773
  %7 = call i32 @strlen(i8* noundef %6) #10, !dbg !7774
  %8 = getelementptr inbounds i8, i8* %5, i32 %7, !dbg !7775
  %9 = load i8*, i8** %4, align 4, !dbg !7776
  %10 = call i8* @strcpy(i8* noundef %8, i8* noundef %9) #10, !dbg !7777
  %11 = load i8*, i8** %3, align 4, !dbg !7778
  ret i8* %11, !dbg !7779
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strncat(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !7780 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7781, metadata !DIExpression()), !dbg !7782
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7783, metadata !DIExpression()), !dbg !7784
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7785, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7787, metadata !DIExpression()), !dbg !7788
  %9 = load i8*, i8** %4, align 4, !dbg !7789
  store i8* %9, i8** %7, align 4, !dbg !7788
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7790, metadata !DIExpression()), !dbg !7791
  %10 = load i8*, i8** %4, align 4, !dbg !7792
  %11 = call i32 @strlen(i8* noundef %10) #10, !dbg !7793
  store i32 %11, i32* %8, align 4, !dbg !7791
  %12 = load i32, i32* %8, align 4, !dbg !7794
  %13 = load i8*, i8** %4, align 4, !dbg !7795
  %14 = getelementptr inbounds i8, i8* %13, i32 %12, !dbg !7795
  store i8* %14, i8** %4, align 4, !dbg !7795
  br label %15, !dbg !7796

15:                                               ; preds = %26, %3
  %16 = load i32, i32* %6, align 4, !dbg !7797
  %17 = add i32 %16, -1, !dbg !7797
  store i32 %17, i32* %6, align 4, !dbg !7797
  %18 = icmp ugt i32 %16, 0, !dbg !7798
  br i1 %18, label %19, label %24, !dbg !7799

19:                                               ; preds = %15
  %20 = load i8*, i8** %5, align 4, !dbg !7800
  %21 = load i8, i8* %20, align 1, !dbg !7801
  %22 = zext i8 %21 to i32, !dbg !7801
  %23 = icmp ne i32 %22, 0, !dbg !7802
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i1 [ false, %15 ], [ %23, %19 ], !dbg !7803
  br i1 %25, label %26, label %32, !dbg !7796

26:                                               ; preds = %24
  %27 = load i8*, i8** %5, align 4, !dbg !7804
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !7804
  store i8* %28, i8** %5, align 4, !dbg !7804
  %29 = load i8, i8* %27, align 1, !dbg !7806
  %30 = load i8*, i8** %4, align 4, !dbg !7807
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !7807
  store i8* %31, i8** %4, align 4, !dbg !7807
  store i8 %29, i8* %30, align 1, !dbg !7808
  br label %15, !dbg !7796, !llvm.loop !7809

32:                                               ; preds = %24
  %33 = load i8*, i8** %4, align 4, !dbg !7811
  store i8 0, i8* %33, align 1, !dbg !7812
  %34 = load i8*, i8** %7, align 4, !dbg !7813
  ret i8* %34, !dbg !7814
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @memcmp(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !7815 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7818, metadata !DIExpression()), !dbg !7819
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7820, metadata !DIExpression()), !dbg !7821
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7822, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7824, metadata !DIExpression()), !dbg !7825
  %10 = load i8*, i8** %5, align 4, !dbg !7826
  store i8* %10, i8** %8, align 4, !dbg !7825
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7827, metadata !DIExpression()), !dbg !7828
  %11 = load i8*, i8** %6, align 4, !dbg !7829
  store i8* %11, i8** %9, align 4, !dbg !7828
  %12 = load i32, i32* %7, align 4, !dbg !7830
  %13 = icmp ne i32 %12, 0, !dbg !7830
  br i1 %13, label %15, label %14, !dbg !7832

14:                                               ; preds = %3
  store i32 0, i32* %4, align 4, !dbg !7833
  br label %43, !dbg !7833

15:                                               ; preds = %3
  br label %16, !dbg !7835

16:                                               ; preds = %30, %15
  %17 = load i32, i32* %7, align 4, !dbg !7836
  %18 = add i32 %17, -1, !dbg !7836
  store i32 %18, i32* %7, align 4, !dbg !7836
  %19 = icmp ugt i32 %18, 0, !dbg !7837
  br i1 %19, label %20, label %28, !dbg !7838

20:                                               ; preds = %16
  %21 = load i8*, i8** %8, align 4, !dbg !7839
  %22 = load i8, i8* %21, align 1, !dbg !7840
  %23 = zext i8 %22 to i32, !dbg !7840
  %24 = load i8*, i8** %9, align 4, !dbg !7841
  %25 = load i8, i8* %24, align 1, !dbg !7842
  %26 = zext i8 %25 to i32, !dbg !7842
  %27 = icmp eq i32 %23, %26, !dbg !7843
  br label %28

28:                                               ; preds = %20, %16
  %29 = phi i1 [ false, %16 ], [ %27, %20 ], !dbg !7844
  br i1 %29, label %30, label %35, !dbg !7835

30:                                               ; preds = %28
  %31 = load i8*, i8** %8, align 4, !dbg !7845
  %32 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !7845
  store i8* %32, i8** %8, align 4, !dbg !7845
  %33 = load i8*, i8** %9, align 4, !dbg !7847
  %34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !7847
  store i8* %34, i8** %9, align 4, !dbg !7847
  br label %16, !dbg !7835, !llvm.loop !7848

35:                                               ; preds = %28
  %36 = load i8*, i8** %8, align 4, !dbg !7850
  %37 = load i8, i8* %36, align 1, !dbg !7851
  %38 = zext i8 %37 to i32, !dbg !7851
  %39 = load i8*, i8** %9, align 4, !dbg !7852
  %40 = load i8, i8* %39, align 1, !dbg !7853
  %41 = zext i8 %40 to i32, !dbg !7853
  %42 = sub nsw i32 %38, %41, !dbg !7854
  store i32 %42, i32* %4, align 4, !dbg !7855
  br label %43, !dbg !7855

43:                                               ; preds = %35, %14
  %44 = load i32, i32* %4, align 4, !dbg !7856
  ret i32 %44, !dbg !7856
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memmove(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !7857 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7860, metadata !DIExpression()), !dbg !7861
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7862, metadata !DIExpression()), !dbg !7863
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7864, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7866, metadata !DIExpression()), !dbg !7867
  %9 = load i8*, i8** %4, align 4, !dbg !7868
  store i8* %9, i8** %7, align 4, !dbg !7867
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7869, metadata !DIExpression()), !dbg !7870
  %10 = load i8*, i8** %5, align 4, !dbg !7871
  store i8* %10, i8** %8, align 4, !dbg !7870
  %11 = load i8*, i8** %7, align 4, !dbg !7872
  %12 = load i8*, i8** %8, align 4, !dbg !7874
  %13 = ptrtoint i8* %11 to i32, !dbg !7875
  %14 = ptrtoint i8* %12 to i32, !dbg !7875
  %15 = sub i32 %13, %14, !dbg !7875
  %16 = load i32, i32* %6, align 4, !dbg !7876
  %17 = icmp ult i32 %15, %16, !dbg !7877
  br i1 %17, label %18, label %33, !dbg !7878

18:                                               ; preds = %3
  br label %19, !dbg !7879

19:                                               ; preds = %22, %18
  %20 = load i32, i32* %6, align 4, !dbg !7881
  %21 = icmp ugt i32 %20, 0, !dbg !7882
  br i1 %21, label %22, label %32, !dbg !7879

22:                                               ; preds = %19
  %23 = load i32, i32* %6, align 4, !dbg !7883
  %24 = add i32 %23, -1, !dbg !7883
  store i32 %24, i32* %6, align 4, !dbg !7883
  %25 = load i8*, i8** %8, align 4, !dbg !7885
  %26 = load i32, i32* %6, align 4, !dbg !7886
  %27 = getelementptr inbounds i8, i8* %25, i32 %26, !dbg !7885
  %28 = load i8, i8* %27, align 1, !dbg !7885
  %29 = load i8*, i8** %7, align 4, !dbg !7887
  %30 = load i32, i32* %6, align 4, !dbg !7888
  %31 = getelementptr inbounds i8, i8* %29, i32 %30, !dbg !7887
  store i8 %28, i8* %31, align 1, !dbg !7889
  br label %19, !dbg !7879, !llvm.loop !7890

32:                                               ; preds = %19
  br label %48, !dbg !7892

33:                                               ; preds = %3
  br label %34, !dbg !7893

34:                                               ; preds = %37, %33
  %35 = load i32, i32* %6, align 4, !dbg !7895
  %36 = icmp ugt i32 %35, 0, !dbg !7896
  br i1 %36, label %37, label %47, !dbg !7893

37:                                               ; preds = %34
  %38 = load i8*, i8** %8, align 4, !dbg !7897
  %39 = load i8, i8* %38, align 1, !dbg !7899
  %40 = load i8*, i8** %7, align 4, !dbg !7900
  store i8 %39, i8* %40, align 1, !dbg !7901
  %41 = load i8*, i8** %7, align 4, !dbg !7902
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !7902
  store i8* %42, i8** %7, align 4, !dbg !7902
  %43 = load i8*, i8** %8, align 4, !dbg !7903
  %44 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !7903
  store i8* %44, i8** %8, align 4, !dbg !7903
  %45 = load i32, i32* %6, align 4, !dbg !7904
  %46 = add i32 %45, -1, !dbg !7904
  store i32 %46, i32* %6, align 4, !dbg !7904
  br label %34, !dbg !7893, !llvm.loop !7905

47:                                               ; preds = %34
  br label %48

48:                                               ; preds = %47, %32
  %49 = load i8*, i8** %4, align 4, !dbg !7907
  ret i8* %49, !dbg !7908
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memcpy(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !7909 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 4
  %12 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7914, metadata !DIExpression()), !dbg !7915
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7916, metadata !DIExpression()), !dbg !7917
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7918, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7920, metadata !DIExpression()), !dbg !7921
  %13 = load i8*, i8** %5, align 4, !dbg !7922
  store i8* %13, i8** %8, align 4, !dbg !7921
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7923, metadata !DIExpression()), !dbg !7924
  %14 = load i8*, i8** %6, align 4, !dbg !7925
  store i8* %14, i8** %9, align 4, !dbg !7924
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7926, metadata !DIExpression()), !dbg !7928
  store i32 3, i32* %10, align 4, !dbg !7928
  %15 = load i8*, i8** %5, align 4, !dbg !7929
  %16 = ptrtoint i8* %15 to i32, !dbg !7931
  %17 = load i8*, i8** %9, align 4, !dbg !7932
  %18 = ptrtoint i8* %17 to i32, !dbg !7933
  %19 = xor i32 %16, %18, !dbg !7934
  %20 = and i32 %19, 3, !dbg !7935
  %21 = icmp eq i32 %20, 0, !dbg !7936
  br i1 %21, label %22, label %62, !dbg !7937

22:                                               ; preds = %3
  br label %23, !dbg !7938

23:                                               ; preds = %33, %22
  %24 = load i8*, i8** %8, align 4, !dbg !7940
  %25 = ptrtoint i8* %24 to i32, !dbg !7941
  %26 = and i32 %25, 3, !dbg !7942
  %27 = icmp ne i32 %26, 0, !dbg !7938
  br i1 %27, label %28, label %41, !dbg !7938

28:                                               ; preds = %23
  %29 = load i32, i32* %7, align 4, !dbg !7943
  %30 = icmp eq i32 %29, 0, !dbg !7946
  br i1 %30, label %31, label %33, !dbg !7947

31:                                               ; preds = %28
  %32 = load i8*, i8** %5, align 4, !dbg !7948
  store i8* %32, i8** %4, align 4, !dbg !7950
  br label %76, !dbg !7950

33:                                               ; preds = %28
  %34 = load i8*, i8** %9, align 4, !dbg !7951
  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !7951
  store i8* %35, i8** %9, align 4, !dbg !7951
  %36 = load i8, i8* %34, align 1, !dbg !7952
  %37 = load i8*, i8** %8, align 4, !dbg !7953
  %38 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !7953
  store i8* %38, i8** %8, align 4, !dbg !7953
  store i8 %36, i8* %37, align 1, !dbg !7954
  %39 = load i32, i32* %7, align 4, !dbg !7955
  %40 = add i32 %39, -1, !dbg !7955
  store i32 %40, i32* %7, align 4, !dbg !7955
  br label %23, !dbg !7938, !llvm.loop !7956

41:                                               ; preds = %23
  call void @llvm.dbg.declare(metadata i32** %11, metadata !7958, metadata !DIExpression()), !dbg !7959
  %42 = load i8*, i8** %8, align 4, !dbg !7960
  %43 = bitcast i8* %42 to i32*, !dbg !7961
  store i32* %43, i32** %11, align 4, !dbg !7959
  call void @llvm.dbg.declare(metadata i32** %12, metadata !7962, metadata !DIExpression()), !dbg !7963
  %44 = load i8*, i8** %9, align 4, !dbg !7964
  %45 = bitcast i8* %44 to i32*, !dbg !7965
  store i32* %45, i32** %12, align 4, !dbg !7963
  br label %46, !dbg !7966

46:                                               ; preds = %49, %41
  %47 = load i32, i32* %7, align 4, !dbg !7967
  %48 = icmp uge i32 %47, 4, !dbg !7968
  br i1 %48, label %49, label %57, !dbg !7966

49:                                               ; preds = %46
  %50 = load i32*, i32** %12, align 4, !dbg !7969
  %51 = getelementptr inbounds i32, i32* %50, i32 1, !dbg !7969
  store i32* %51, i32** %12, align 4, !dbg !7969
  %52 = load i32, i32* %50, align 4, !dbg !7971
  %53 = load i32*, i32** %11, align 4, !dbg !7972
  %54 = getelementptr inbounds i32, i32* %53, i32 1, !dbg !7972
  store i32* %54, i32** %11, align 4, !dbg !7972
  store i32 %52, i32* %53, align 4, !dbg !7973
  %55 = load i32, i32* %7, align 4, !dbg !7974
  %56 = sub i32 %55, 4, !dbg !7974
  store i32 %56, i32* %7, align 4, !dbg !7974
  br label %46, !dbg !7966, !llvm.loop !7975

57:                                               ; preds = %46
  %58 = load i32*, i32** %11, align 4, !dbg !7977
  %59 = bitcast i32* %58 to i8*, !dbg !7978
  store i8* %59, i8** %8, align 4, !dbg !7979
  %60 = load i32*, i32** %12, align 4, !dbg !7980
  %61 = bitcast i32* %60 to i8*, !dbg !7981
  store i8* %61, i8** %9, align 4, !dbg !7982
  br label %62, !dbg !7983

62:                                               ; preds = %57, %3
  br label %63, !dbg !7984

63:                                               ; preds = %66, %62
  %64 = load i32, i32* %7, align 4, !dbg !7985
  %65 = icmp ugt i32 %64, 0, !dbg !7986
  br i1 %65, label %66, label %74, !dbg !7984

66:                                               ; preds = %63
  %67 = load i8*, i8** %9, align 4, !dbg !7987
  %68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !7987
  store i8* %68, i8** %9, align 4, !dbg !7987
  %69 = load i8, i8* %67, align 1, !dbg !7989
  %70 = load i8*, i8** %8, align 4, !dbg !7990
  %71 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !7990
  store i8* %71, i8** %8, align 4, !dbg !7990
  store i8 %69, i8* %70, align 1, !dbg !7991
  %72 = load i32, i32* %7, align 4, !dbg !7992
  %73 = add i32 %72, -1, !dbg !7992
  store i32 %73, i32* %7, align 4, !dbg !7992
  br label %63, !dbg !7984, !llvm.loop !7993

74:                                               ; preds = %63
  %75 = load i8*, i8** %5, align 4, !dbg !7995
  store i8* %75, i8** %4, align 4, !dbg !7996
  br label %76, !dbg !7996

76:                                               ; preds = %74, %31
  %77 = load i8*, i8** %4, align 4, !dbg !7997
  ret i8* %77, !dbg !7997
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !7998 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32*, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8001, metadata !DIExpression()), !dbg !8002
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8003, metadata !DIExpression()), !dbg !8004
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8005, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8007, metadata !DIExpression()), !dbg !8008
  %12 = load i8*, i8** %5, align 4, !dbg !8009
  store i8* %12, i8** %8, align 4, !dbg !8008
  call void @llvm.dbg.declare(metadata i8* %9, metadata !8010, metadata !DIExpression()), !dbg !8011
  %13 = load i32, i32* %6, align 4, !dbg !8012
  %14 = trunc i32 %13 to i8, !dbg !8013
  store i8 %14, i8* %9, align 1, !dbg !8011
  br label %15, !dbg !8014

15:                                               ; preds = %25, %3
  %16 = load i8*, i8** %8, align 4, !dbg !8015
  %17 = ptrtoint i8* %16 to i32, !dbg !8016
  %18 = and i32 %17, 3, !dbg !8017
  %19 = icmp ne i32 %18, 0, !dbg !8014
  br i1 %19, label %20, label %31, !dbg !8014

20:                                               ; preds = %15
  %21 = load i32, i32* %7, align 4, !dbg !8018
  %22 = icmp eq i32 %21, 0, !dbg !8021
  br i1 %22, label %23, label %25, !dbg !8022

23:                                               ; preds = %20
  %24 = load i8*, i8** %5, align 4, !dbg !8023
  store i8* %24, i8** %4, align 4, !dbg !8025
  br label %67, !dbg !8025

25:                                               ; preds = %20
  %26 = load i8, i8* %9, align 1, !dbg !8026
  %27 = load i8*, i8** %8, align 4, !dbg !8027
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !8027
  store i8* %28, i8** %8, align 4, !dbg !8027
  store i8 %26, i8* %27, align 1, !dbg !8028
  %29 = load i32, i32* %7, align 4, !dbg !8029
  %30 = add i32 %29, -1, !dbg !8029
  store i32 %30, i32* %7, align 4, !dbg !8029
  br label %15, !dbg !8014, !llvm.loop !8030

31:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata i32** %10, metadata !8032, metadata !DIExpression()), !dbg !8033
  %32 = load i8*, i8** %8, align 4, !dbg !8034
  %33 = bitcast i8* %32 to i32*, !dbg !8035
  store i32* %33, i32** %10, align 4, !dbg !8033
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8036, metadata !DIExpression()), !dbg !8037
  %34 = load i8, i8* %9, align 1, !dbg !8038
  %35 = zext i8 %34 to i32, !dbg !8039
  store i32 %35, i32* %11, align 4, !dbg !8037
  %36 = load i32, i32* %11, align 4, !dbg !8040
  %37 = shl i32 %36, 8, !dbg !8041
  %38 = load i32, i32* %11, align 4, !dbg !8042
  %39 = or i32 %38, %37, !dbg !8042
  store i32 %39, i32* %11, align 4, !dbg !8042
  %40 = load i32, i32* %11, align 4, !dbg !8043
  %41 = shl i32 %40, 16, !dbg !8044
  %42 = load i32, i32* %11, align 4, !dbg !8045
  %43 = or i32 %42, %41, !dbg !8045
  store i32 %43, i32* %11, align 4, !dbg !8045
  br label %44, !dbg !8046

44:                                               ; preds = %47, %31
  %45 = load i32, i32* %7, align 4, !dbg !8047
  %46 = icmp uge i32 %45, 4, !dbg !8048
  br i1 %46, label %47, label %53, !dbg !8046

47:                                               ; preds = %44
  %48 = load i32, i32* %11, align 4, !dbg !8049
  %49 = load i32*, i32** %10, align 4, !dbg !8051
  %50 = getelementptr inbounds i32, i32* %49, i32 1, !dbg !8051
  store i32* %50, i32** %10, align 4, !dbg !8051
  store i32 %48, i32* %49, align 4, !dbg !8052
  %51 = load i32, i32* %7, align 4, !dbg !8053
  %52 = sub i32 %51, 4, !dbg !8053
  store i32 %52, i32* %7, align 4, !dbg !8053
  br label %44, !dbg !8046, !llvm.loop !8054

53:                                               ; preds = %44
  %54 = load i32*, i32** %10, align 4, !dbg !8056
  %55 = bitcast i32* %54 to i8*, !dbg !8057
  store i8* %55, i8** %8, align 4, !dbg !8058
  br label %56, !dbg !8059

56:                                               ; preds = %59, %53
  %57 = load i32, i32* %7, align 4, !dbg !8060
  %58 = icmp ugt i32 %57, 0, !dbg !8061
  br i1 %58, label %59, label %65, !dbg !8059

59:                                               ; preds = %56
  %60 = load i8, i8* %9, align 1, !dbg !8062
  %61 = load i8*, i8** %8, align 4, !dbg !8064
  %62 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !8064
  store i8* %62, i8** %8, align 4, !dbg !8064
  store i8 %60, i8* %61, align 1, !dbg !8065
  %63 = load i32, i32* %7, align 4, !dbg !8066
  %64 = add i32 %63, -1, !dbg !8066
  store i32 %64, i32* %7, align 4, !dbg !8066
  br label %56, !dbg !8059, !llvm.loop !8067

65:                                               ; preds = %56
  %66 = load i8*, i8** %5, align 4, !dbg !8069
  store i8* %66, i8** %4, align 4, !dbg !8070
  br label %67, !dbg !8070

67:                                               ; preds = %65, %23
  %68 = load i8*, i8** %4, align 4, !dbg !8071
  ret i8* %68, !dbg !8071
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memchr(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !8072 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8075, metadata !DIExpression()), !dbg !8076
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8077, metadata !DIExpression()), !dbg !8078
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8079, metadata !DIExpression()), !dbg !8080
  %9 = load i32, i32* %7, align 4, !dbg !8081
  %10 = icmp ne i32 %9, 0, !dbg !8083
  br i1 %10, label %11, label %31, !dbg !8084

11:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i8** %8, metadata !8085, metadata !DIExpression()), !dbg !8087
  %12 = load i8*, i8** %5, align 4, !dbg !8088
  store i8* %12, i8** %8, align 4, !dbg !8087
  br label %13, !dbg !8089

13:                                               ; preds = %26, %11
  %14 = load i8*, i8** %8, align 4, !dbg !8090
  %15 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8090
  store i8* %15, i8** %8, align 4, !dbg !8090
  %16 = load i8, i8* %14, align 1, !dbg !8093
  %17 = zext i8 %16 to i32, !dbg !8093
  %18 = load i32, i32* %6, align 4, !dbg !8094
  %19 = trunc i32 %18 to i8, !dbg !8095
  %20 = zext i8 %19 to i32, !dbg !8095
  %21 = icmp eq i32 %17, %20, !dbg !8096
  br i1 %21, label %22, label %25, !dbg !8097

22:                                               ; preds = %13
  %23 = load i8*, i8** %8, align 4, !dbg !8098
  %24 = getelementptr inbounds i8, i8* %23, i32 -1, !dbg !8100
  store i8* %24, i8** %4, align 4, !dbg !8101
  br label %32, !dbg !8101

25:                                               ; preds = %13
  br label %26, !dbg !8102

26:                                               ; preds = %25
  %27 = load i32, i32* %7, align 4, !dbg !8103
  %28 = add i32 %27, -1, !dbg !8103
  store i32 %28, i32* %7, align 4, !dbg !8103
  %29 = icmp ne i32 %28, 0, !dbg !8104
  br i1 %29, label %13, label %30, !dbg !8102, !llvm.loop !8105

30:                                               ; preds = %26
  br label %31, !dbg !8107

31:                                               ; preds = %30, %3
  store i8* null, i8** %4, align 4, !dbg !8108
  br label %32, !dbg !8108

32:                                               ; preds = %31, %22
  %33 = load i8*, i8** %4, align 4, !dbg !8109
  ret i8* %33, !dbg !8109
}

; Function Attrs: noinline nounwind optnone
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) #1 !dbg !8110 {
  %2 = alloca i32 (i32)*, align 4
  store i32 (i32)* %0, i32 (i32)** %2, align 4
  call void @llvm.dbg.declare(metadata i32 (i32)** %2, metadata !8111, metadata !DIExpression()), !dbg !8112
  %3 = load i32 (i32)*, i32 (i32)** %2, align 4, !dbg !8113
  store i32 (i32)* %3, i32 (i32)** @_stdout_hook, align 4, !dbg !8114
  ret void, !dbg !8115
}

; Function Attrs: noinline nounwind optnone
define internal i32 @_stdout_hook_default(i32 noundef %0) #1 !dbg !8116 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8117, metadata !DIExpression()), !dbg !8118
  %3 = load i32, i32* %2, align 4, !dbg !8119
  ret i32 -1, !dbg !8120
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !8121 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8124, metadata !DIExpression()), !dbg !8125
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !8126, metadata !DIExpression()), !dbg !8127
  %5 = load i32*, i32** %4, align 4, !dbg !8128
  %6 = icmp eq i32* %5, inttoptr (i32 2 to i32*), !dbg !8129
  br i1 %6, label %10, label %7, !dbg !8130

7:                                                ; preds = %2
  %8 = load i32*, i32** %4, align 4, !dbg !8131
  %9 = icmp eq i32* %8, inttoptr (i32 3 to i32*), !dbg !8132
  br i1 %9, label %10, label %14, !dbg !8133

10:                                               ; preds = %7, %2
  %11 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8134
  %12 = load i32, i32* %3, align 4, !dbg !8135
  %13 = call i32 %11(i32 noundef %12) #10, !dbg !8134
  br label %15, !dbg !8133

14:                                               ; preds = %7
  br label %15, !dbg !8133

15:                                               ; preds = %14, %10
  %16 = phi i32 [ %13, %10 ], [ -1, %14 ], !dbg !8133
  ret i32 %16, !dbg !8136
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !8137 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8138, metadata !DIExpression()), !dbg !8139
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !8140, metadata !DIExpression()), !dbg !8141
  %5 = load i32, i32* %3, align 4, !dbg !8142
  %6 = load i32*, i32** %4, align 4, !dbg !8143
  %7 = call i32 @zephyr_fputc(i32 noundef %5, i32* noundef %6) #10, !dbg !8144
  ret i32 %7, !dbg !8145
}

; Function Attrs: noinline nounwind optnone
define internal i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !8146 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8148, metadata !DIExpression()), !dbg !8149
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !8150, metadata !DIExpression()), !dbg !8151
  br label %5, !dbg !8152

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8153, !srcloc !8155
  br label %6, !dbg !8153

6:                                                ; preds = %5
  %7 = load i32, i32* %3, align 4, !dbg !8156
  %8 = load i32*, i32** %4, align 4, !dbg !8157
  %9 = call i32 @z_impl_zephyr_fputc(i32 noundef %7, i32* noundef %8) #10, !dbg !8158
  ret i32 %9, !dbg !8159
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) #1 !dbg !8160 {
  %3 = alloca i8*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8164, metadata !DIExpression()), !dbg !8165
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !8166, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8168, metadata !DIExpression()), !dbg !8169
  %7 = load i8*, i8** %3, align 4, !dbg !8170
  %8 = call i32 @strlen(i8* noundef %7) #10, !dbg !8171
  store i32 %8, i32* %5, align 4, !dbg !8169
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8172, metadata !DIExpression()), !dbg !8173
  %9 = load i8*, i8** %3, align 4, !dbg !8174
  %10 = load i32, i32* %5, align 4, !dbg !8175
  %11 = load i32*, i32** %4, align 4, !dbg !8176
  %12 = call i32 @fwrite(i8* noundef %9, i32 noundef 1, i32 noundef %10, i32* noundef %11) #10, !dbg !8177
  store i32 %12, i32* %6, align 4, !dbg !8178
  %13 = load i32, i32* %5, align 4, !dbg !8179
  %14 = load i32, i32* %6, align 4, !dbg !8180
  %15 = icmp eq i32 %13, %14, !dbg !8181
  %16 = zext i1 %15 to i64, !dbg !8179
  %17 = select i1 %15, i32 0, i32 -1, !dbg !8179
  ret i32 %17, !dbg !8182
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !8183 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8186, metadata !DIExpression()), !dbg !8187
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8188, metadata !DIExpression()), !dbg !8189
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8190, metadata !DIExpression()), !dbg !8191
  store i32* %3, i32** %8, align 4
  call void @llvm.dbg.declare(metadata i32** %8, metadata !8192, metadata !DIExpression()), !dbg !8193
  %9 = load i8*, i8** %5, align 4, !dbg !8194
  %10 = load i32, i32* %6, align 4, !dbg !8195
  %11 = load i32, i32* %7, align 4, !dbg !8196
  %12 = load i32*, i32** %8, align 4, !dbg !8197
  %13 = call i32 @zephyr_fwrite(i8* noundef %9, i32 noundef %10, i32 noundef %11, i32* noundef %12) #10, !dbg !8198
  ret i32 %13, !dbg !8199
}

; Function Attrs: noinline nounwind optnone
define internal i32 @zephyr_fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !8200 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8201, metadata !DIExpression()), !dbg !8202
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8203, metadata !DIExpression()), !dbg !8204
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8205, metadata !DIExpression()), !dbg !8206
  store i32* %3, i32** %8, align 4
  call void @llvm.dbg.declare(metadata i32** %8, metadata !8207, metadata !DIExpression()), !dbg !8208
  br label %9, !dbg !8209

9:                                                ; preds = %4
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8210, !srcloc !8212
  br label %10, !dbg !8210

10:                                               ; preds = %9
  %11 = load i8*, i8** %5, align 4, !dbg !8213
  %12 = load i32, i32* %6, align 4, !dbg !8214
  %13 = load i32, i32* %7, align 4, !dbg !8215
  %14 = load i32*, i32** %8, align 4, !dbg !8216
  %15 = call i32 @z_impl_zephyr_fwrite(i8* noundef %11, i32 noundef %12, i32 noundef %13, i32* noundef %14) #10, !dbg !8217
  ret i32 %15, !dbg !8218
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !8219 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 4
  store i8* %0, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8220, metadata !DIExpression()), !dbg !8221
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8222, metadata !DIExpression()), !dbg !8223
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8224, metadata !DIExpression()), !dbg !8225
  store i32* %3, i32** %9, align 4
  call void @llvm.dbg.declare(metadata i32** %9, metadata !8226, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8228, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8230, metadata !DIExpression()), !dbg !8231
  call void @llvm.dbg.declare(metadata i8** %12, metadata !8232, metadata !DIExpression()), !dbg !8233
  %13 = load i32*, i32** %9, align 4, !dbg !8234
  %14 = icmp ne i32* %13, inttoptr (i32 2 to i32*), !dbg !8236
  br i1 %14, label %15, label %18, !dbg !8237

15:                                               ; preds = %4
  %16 = load i32*, i32** %9, align 4, !dbg !8238
  %17 = icmp ne i32* %16, inttoptr (i32 3 to i32*), !dbg !8239
  br i1 %17, label %24, label %18, !dbg !8240

18:                                               ; preds = %15, %4
  %19 = load i32, i32* %8, align 4, !dbg !8241
  %20 = icmp eq i32 %19, 0, !dbg !8242
  br i1 %20, label %24, label %21, !dbg !8243

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4, !dbg !8244
  %23 = icmp eq i32 %22, 0, !dbg !8245
  br i1 %23, label %24, label %25, !dbg !8246

24:                                               ; preds = %21, %18, %15
  store i32 0, i32* %5, align 4, !dbg !8247
  br label %56, !dbg !8247

25:                                               ; preds = %21
  %26 = load i8*, i8** %6, align 4, !dbg !8249
  store i8* %26, i8** %12, align 4, !dbg !8250
  %27 = load i32, i32* %8, align 4, !dbg !8251
  store i32 %27, i32* %10, align 4, !dbg !8252
  br label %28, !dbg !8253

28:                                               ; preds = %48, %25
  %29 = load i32, i32* %7, align 4, !dbg !8254
  store i32 %29, i32* %11, align 4, !dbg !8256
  br label %30, !dbg !8257

30:                                               ; preds = %42, %28
  %31 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8258
  %32 = load i8*, i8** %12, align 4, !dbg !8261
  %33 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !8261
  store i8* %33, i8** %12, align 4, !dbg !8261
  %34 = load i8, i8* %32, align 1, !dbg !8262
  %35 = zext i8 %34 to i32, !dbg !8263
  %36 = call i32 %31(i32 noundef %35) #10, !dbg !8258
  %37 = icmp eq i32 %36, -1, !dbg !8264
  br i1 %37, label %38, label %39, !dbg !8265

38:                                               ; preds = %30
  br label %52, !dbg !8266

39:                                               ; preds = %30
  %40 = load i32, i32* %11, align 4, !dbg !8268
  %41 = add i32 %40, -1, !dbg !8268
  store i32 %41, i32* %11, align 4, !dbg !8268
  br label %42, !dbg !8269

42:                                               ; preds = %39
  %43 = load i32, i32* %11, align 4, !dbg !8270
  %44 = icmp ugt i32 %43, 0, !dbg !8271
  br i1 %44, label %30, label %45, !dbg !8269, !llvm.loop !8272

45:                                               ; preds = %42
  %46 = load i32, i32* %10, align 4, !dbg !8274
  %47 = add i32 %46, -1, !dbg !8274
  store i32 %47, i32* %10, align 4, !dbg !8274
  br label %48, !dbg !8275

48:                                               ; preds = %45
  %49 = load i32, i32* %10, align 4, !dbg !8276
  %50 = icmp ugt i32 %49, 0, !dbg !8277
  br i1 %50, label %28, label %51, !dbg !8275, !llvm.loop !8278

51:                                               ; preds = %48
  br label %52, !dbg !8275

52:                                               ; preds = %51, %38
  call void @llvm.dbg.label(metadata !8280), !dbg !8281
  %53 = load i32, i32* %8, align 4, !dbg !8282
  %54 = load i32, i32* %10, align 4, !dbg !8283
  %55 = sub i32 %53, %54, !dbg !8284
  store i32 %55, i32* %5, align 4, !dbg !8285
  br label %56, !dbg !8285

56:                                               ; preds = %52, %24
  %57 = load i32, i32* %5, align 4, !dbg !8286
  ret i32 %57, !dbg !8286
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @puts(i8* noundef %0) #1 !dbg !8287 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !8290, metadata !DIExpression()), !dbg !8291
  %4 = load i8*, i8** %3, align 4, !dbg !8292
  %5 = call i32 @fputs(i8* noundef %4, i32* noundef inttoptr (i32 2 to i32*)) #10, !dbg !8294
  %6 = icmp eq i32 %5, -1, !dbg !8295
  br i1 %6, label %7, label %8, !dbg !8296

7:                                                ; preds = %1
  store i32 -1, i32* %2, align 4, !dbg !8297
  br label %13, !dbg !8297

8:                                                ; preds = %1
  %9 = call i32 @fputc(i32 noundef 10, i32* noundef inttoptr (i32 2 to i32*)) #10, !dbg !8299
  %10 = icmp eq i32 %9, -1, !dbg !8300
  %11 = zext i1 %10 to i64, !dbg !8299
  %12 = select i1 %10, i32 -1, i32 0, !dbg !8299
  store i32 %12, i32* %2, align 4, !dbg !8301
  br label %13, !dbg !8301

13:                                               ; preds = %8, %7
  %14 = load i32, i32* %2, align 4, !dbg !8302
  ret i32 %14, !dbg !8302
}

; Function Attrs: noinline nounwind optnone
define internal void @sam0_eic_isr(%struct.device.73* noundef %0) #1 !dbg !8303 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.sam0_eic_data*, align 4
  %4 = alloca i16, align 2
  %5 = alloca i32, align 4
  %6 = alloca %struct.z_thread_stack_element*, align 4
  %7 = alloca %struct.sam0_eic_port_data*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !8306, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %3, metadata !8308, metadata !DIExpression()), !dbg !8311
  %8 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !8312
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 4, !dbg !8313
  %10 = load i8*, i8** %9, align 4, !dbg !8313
  %11 = bitcast i8* %10 to %struct.sam0_eic_data*, !dbg !8312
  store %struct.sam0_eic_data* %11, %struct.sam0_eic_data** %3, align 4, !dbg !8311
  call void @llvm.dbg.declare(metadata i16* %4, metadata !8314, metadata !DIExpression()), !dbg !8315
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8316
  %13 = trunc i32 %12 to i16, !dbg !8317
  store i16 %13, i16* %4, align 2, !dbg !8315
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8318, metadata !DIExpression()), !dbg !8319
  %14 = load i16, i16* %4, align 2, !dbg !8320
  %15 = zext i16 %14 to i32, !dbg !8320
  store volatile i32 %15, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8321
  %16 = load i16, i16* %4, align 2, !dbg !8322
  %17 = zext i16 %16 to i32, !dbg !8322
  %18 = and i32 %17, 255, !dbg !8324
  %19 = icmp ne i32 %18, 0, !dbg !8324
  br i1 %19, label %20, label %21, !dbg !8325

20:                                               ; preds = %1
  store i32 0, i32* %5, align 4, !dbg !8326
  br label %26, !dbg !8328

21:                                               ; preds = %1
  store i32 8, i32* %5, align 4, !dbg !8329
  %22 = load i16, i16* %4, align 2, !dbg !8331
  %23 = zext i16 %22 to i32, !dbg !8331
  %24 = ashr i32 %23, 8, !dbg !8331
  %25 = trunc i32 %24 to i16, !dbg !8331
  store i16 %25, i16* %4, align 2, !dbg !8331
  br label %26

26:                                               ; preds = %21, %20
  br label %27, !dbg !8332

27:                                               ; preds = %62, %26
  %28 = load i16, i16* %4, align 2, !dbg !8333
  %29 = icmp ne i16 %28, 0, !dbg !8336
  br i1 %29, label %30, label %69, !dbg !8336

30:                                               ; preds = %27
  %31 = load i16, i16* %4, align 2, !dbg !8337
  %32 = zext i16 %31 to i32, !dbg !8337
  %33 = and i32 %32, 1, !dbg !8340
  %34 = icmp ne i32 %33, 0, !dbg !8340
  br i1 %34, label %36, label %35, !dbg !8341

35:                                               ; preds = %30
  br label %62, !dbg !8342

36:                                               ; preds = %30
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %6, metadata !8344, metadata !DIExpression()), !dbg !8346
  %37 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %3, align 4, !dbg !8347
  %38 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %37, i32 0, i32 1, !dbg !8348
  %39 = load i32, i32* %5, align 4, !dbg !8349
  %40 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %38, i32 0, i32 %39, !dbg !8347
  store %struct.z_thread_stack_element* %40, %struct.z_thread_stack_element** %6, align 4, !dbg !8346
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_port_data** %7, metadata !8350, metadata !DIExpression()), !dbg !8352
  %41 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %3, align 4, !dbg !8353
  %42 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %41, i32 0, i32 0, !dbg !8354
  %43 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !8355
  %44 = bitcast %struct.z_thread_stack_element* %43 to i8*, !dbg !8356
  %45 = load i8, i8* %44, align 1, !dbg !8356
  %46 = lshr i8 %45, 5, !dbg !8356
  %47 = and i8 %46, 3, !dbg !8356
  %48 = zext i8 %47 to i32, !dbg !8353
  %49 = getelementptr inbounds [1 x %struct.sam0_eic_port_data], [1 x %struct.sam0_eic_port_data]* %42, i32 0, i32 %48, !dbg !8353
  store %struct.sam0_eic_port_data* %49, %struct.sam0_eic_port_data** %7, align 4, !dbg !8352
  %50 = load %struct.sam0_eic_port_data*, %struct.sam0_eic_port_data** %7, align 4, !dbg !8357
  %51 = getelementptr inbounds %struct.sam0_eic_port_data, %struct.sam0_eic_port_data* %50, i32 0, i32 0, !dbg !8358
  %52 = load void (i32, i8*)*, void (i32, i8*)** %51, align 4, !dbg !8358
  %53 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !8359
  %54 = bitcast %struct.z_thread_stack_element* %53 to i8*, !dbg !8359
  %55 = load i8, i8* %54, align 1, !dbg !8359
  %56 = and i8 %55, 31, !dbg !8359
  %57 = zext i8 %56 to i32, !dbg !8359
  %58 = shl i32 1, %57, !dbg !8359
  %59 = load %struct.sam0_eic_port_data*, %struct.sam0_eic_port_data** %7, align 4, !dbg !8360
  %60 = getelementptr inbounds %struct.sam0_eic_port_data, %struct.sam0_eic_port_data* %59, i32 0, i32 1, !dbg !8361
  %61 = load i8*, i8** %60, align 4, !dbg !8361
  call void %52(i32 noundef %58, i8* noundef %61) #10, !dbg !8357
  br label %62, !dbg !8362

62:                                               ; preds = %36, %35
  %63 = load i16, i16* %4, align 2, !dbg !8363
  %64 = zext i16 %63 to i32, !dbg !8363
  %65 = ashr i32 %64, 1, !dbg !8363
  %66 = trunc i32 %65 to i16, !dbg !8363
  store i16 %66, i16* %4, align 2, !dbg !8363
  %67 = load i32, i32* %5, align 4, !dbg !8364
  %68 = add i32 %67, 1, !dbg !8364
  store i32 %68, i32* %5, align 4, !dbg !8364
  br label %27, !dbg !8365, !llvm.loop !8366

69:                                               ; preds = %27
  ret void, !dbg !8368
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sam0_eic_init(%struct.device.73* noundef %0) #1 !dbg !1605 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !8369, metadata !DIExpression()), !dbg !8370
  %3 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !8371
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 9, i32 0, i32 0), align 4, !dbg !8372
  %5 = and i32 %4, -65, !dbg !8372
  %6 = or i32 %5, 64, !dbg !8372
  store volatile i32 %6, i32* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 9, i32 0, i32 0), align 4, !dbg !8372
  store volatile i16 16389, i16* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 2, i32 0, i32 0), align 2, !dbg !8373
  br label %7, !dbg !8374

7:                                                ; preds = %1
  call void @z_arm_irq_priority_set(i32 noundef 4, i32 noundef 0, i32 noundef 0) #10, !dbg !8375
  call void @arch_irq_enable(i32 noundef 4) #10, !dbg !8378
  br label %8, !dbg !8378

8:                                                ; preds = %7
  call void @set_eic_enable(i1 noundef zeroext true) #10, !dbg !8379
  call void @wait_synchronization() #10, !dbg !8380
  ret i32 0, !dbg !8381
}

; Function Attrs: noinline nounwind optnone
define internal void @set_eic_enable(i1 noundef zeroext %0) #1 !dbg !8382 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !8385, metadata !DIExpression()), !dbg !8386
  %4 = load i8, i8* %2, align 1, !dbg !8387
  %5 = trunc i8 %4 to i1, !dbg !8387
  %6 = zext i1 %5 to i8, !dbg !8387
  %7 = load volatile i8, i8* inttoptr (i32 1073747968 to i8*), align 4, !dbg !8388
  %8 = and i8 %6, 1, !dbg !8388
  %9 = shl i8 %8, 1, !dbg !8388
  %10 = and i8 %7, -3, !dbg !8388
  %11 = or i8 %10, %9, !dbg !8388
  store volatile i8 %11, i8* inttoptr (i32 1073747968 to i8*), align 4, !dbg !8388
  ret void, !dbg !8389
}

; Function Attrs: noinline nounwind optnone
define internal void @wait_synchronization() #1 !dbg !8390 {
  br label %1, !dbg !8391

1:                                                ; preds = %5, %0
  %2 = load volatile i8, i8* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 1, i32 0, i32 0), align 1, !dbg !8392
  %3 = lshr i8 %2, 7, !dbg !8392
  %4 = icmp ne i8 %3, 0, !dbg !8391
  br i1 %4, label %5, label %6, !dbg !8391

5:                                                ; preds = %1
  br label %1, !dbg !8391, !llvm.loop !8393

6:                                                ; preds = %1
  ret void, !dbg !8395
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_acquire(i32 noundef %0, i32 noundef %1, i32 noundef %2, i1 noundef zeroext %3, void (i32, i8*)* noundef %4, i8* noundef %5) #1 !dbg !8396 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca void (i32, i8*)*, align 4
  %16 = alloca i8*, align 4
  %17 = alloca %struct.device.73*, align 4
  %18 = alloca %struct.sam0_eic_data*, align 4
  %19 = alloca %struct.sam0_eic_port_data*, align 4
  %20 = alloca %struct.z_thread_stack_element*, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8399, metadata !DIExpression()), !dbg !8400
  store i32 %1, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8401, metadata !DIExpression()), !dbg !8402
  store i32 %2, i32* %13, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8403, metadata !DIExpression()), !dbg !8404
  %27 = zext i1 %3 to i8
  store i8 %27, i8* %14, align 1
  call void @llvm.dbg.declare(metadata i8* %14, metadata !8405, metadata !DIExpression()), !dbg !8406
  store void (i32, i8*)* %4, void (i32, i8*)** %15, align 4
  call void @llvm.dbg.declare(metadata void (i32, i8*)** %15, metadata !8407, metadata !DIExpression()), !dbg !8408
  store i8* %5, i8** %16, align 4
  call void @llvm.dbg.declare(metadata i8** %16, metadata !8409, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.declare(metadata %struct.device.73** %17, metadata !8411, metadata !DIExpression()), !dbg !8413
  store %struct.device.73* @__device_dts_ord_22, %struct.device.73** %17, align 4, !dbg !8413
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %18, metadata !8414, metadata !DIExpression()), !dbg !8415
  %28 = load i8*, i8** getelementptr inbounds (%struct.device.73, %struct.device.73* @__device_dts_ord_22, i32 0, i32 4), align 4, !dbg !8416
  %29 = bitcast i8* %28 to %struct.sam0_eic_data*, !dbg !8417
  store %struct.sam0_eic_data* %29, %struct.sam0_eic_data** %18, align 4, !dbg !8415
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_port_data** %19, metadata !8418, metadata !DIExpression()), !dbg !8419
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %20, metadata !8420, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.declare(metadata i32* %21, metadata !8422, metadata !DIExpression()), !dbg !8423
  call void @llvm.dbg.declare(metadata i32* %22, metadata !8424, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.declare(metadata i32* %23, metadata !8426, metadata !DIExpression()), !dbg !8427
  call void @llvm.dbg.declare(metadata i32* %24, metadata !8428, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.declare(metadata i32* %25, metadata !8430, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.declare(metadata i32* %26, metadata !8432, metadata !DIExpression()), !dbg !8433
  %30 = load i32, i32* %11, align 4, !dbg !8434
  %31 = load i32, i32* %12, align 4, !dbg !8435
  %32 = call i32 @sam0_eic_map_to_line(i32 noundef %30, i32 noundef %31) #10, !dbg !8436
  store i32 %32, i32* %22, align 4, !dbg !8437
  %33 = load i32, i32* %22, align 4, !dbg !8438
  %34 = icmp slt i32 %33, 0, !dbg !8440
  br i1 %34, label %35, label %37, !dbg !8441

35:                                               ; preds = %6
  %36 = load i32, i32* %22, align 4, !dbg !8442
  store i32 %36, i32* %10, align 4, !dbg !8444
  br label %170, !dbg !8444

37:                                               ; preds = %6
  %38 = load i32, i32* %22, align 4, !dbg !8445
  %39 = shl i32 1, %38, !dbg !8445
  store i32 %39, i32* %21, align 4, !dbg !8446
  %40 = load i32, i32* %22, align 4, !dbg !8447
  %41 = sdiv i32 %40, 8, !dbg !8448
  store i32 %41, i32* %23, align 4, !dbg !8449
  %42 = load i32, i32* %22, align 4, !dbg !8450
  %43 = srem i32 %42, 8, !dbg !8451
  %44 = mul nsw i32 %43, 4, !dbg !8452
  store i32 %44, i32* %24, align 4, !dbg !8453
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8454, metadata !DIExpression()) #9, !dbg !8456
  %45 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !8458, !srcloc !8459
  store i32 %45, i32* %9, align 4, !dbg !8458
  %46 = load i32, i32* %9, align 4, !dbg !8460
  store i32 %46, i32* %25, align 4, !dbg !8461
  call void @set_eic_enable(i1 noundef zeroext false) #10, !dbg !8462
  %47 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %18, align 4, !dbg !8463
  %48 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %47, i32 0, i32 1, !dbg !8464
  %49 = load i32, i32* %22, align 4, !dbg !8465
  %50 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %48, i32 0, i32 %49, !dbg !8463
  store %struct.z_thread_stack_element* %50, %struct.z_thread_stack_element** %20, align 4, !dbg !8466
  %51 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8467
  %52 = bitcast %struct.z_thread_stack_element* %51 to i8*, !dbg !8469
  %53 = load i8, i8* %52, align 1, !dbg !8469
  %54 = lshr i8 %53, 7, !dbg !8469
  %55 = icmp ne i8 %54, 0, !dbg !8467
  br i1 %55, label %56, label %75, !dbg !8470

56:                                               ; preds = %37
  %57 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8471
  %58 = bitcast %struct.z_thread_stack_element* %57 to i8*, !dbg !8474
  %59 = load i8, i8* %58, align 1, !dbg !8474
  %60 = lshr i8 %59, 5, !dbg !8474
  %61 = and i8 %60, 3, !dbg !8474
  %62 = zext i8 %61 to i32, !dbg !8471
  %63 = load i32, i32* %11, align 4, !dbg !8475
  %64 = icmp ne i32 %62, %63, !dbg !8476
  br i1 %64, label %73, label %65, !dbg !8477

65:                                               ; preds = %56
  %66 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8478
  %67 = bitcast %struct.z_thread_stack_element* %66 to i8*, !dbg !8479
  %68 = load i8, i8* %67, align 1, !dbg !8479
  %69 = and i8 %68, 31, !dbg !8479
  %70 = zext i8 %69 to i32, !dbg !8478
  %71 = load i32, i32* %12, align 4, !dbg !8480
  %72 = icmp ne i32 %70, %71, !dbg !8481
  br i1 %72, label %73, label %74, !dbg !8482

73:                                               ; preds = %65, %56
  br label %163, !dbg !8483

74:                                               ; preds = %65
  br label %75, !dbg !8485

75:                                               ; preds = %74, %37
  %76 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %18, align 4, !dbg !8486
  %77 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %76, i32 0, i32 0, !dbg !8487
  %78 = load i32, i32* %11, align 4, !dbg !8488
  %79 = getelementptr inbounds [1 x %struct.sam0_eic_port_data], [1 x %struct.sam0_eic_port_data]* %77, i32 0, i32 %78, !dbg !8486
  store %struct.sam0_eic_port_data* %79, %struct.sam0_eic_port_data** %19, align 4, !dbg !8489
  %80 = load void (i32, i8*)*, void (i32, i8*)** %15, align 4, !dbg !8490
  %81 = load %struct.sam0_eic_port_data*, %struct.sam0_eic_port_data** %19, align 4, !dbg !8491
  %82 = getelementptr inbounds %struct.sam0_eic_port_data, %struct.sam0_eic_port_data* %81, i32 0, i32 0, !dbg !8492
  store void (i32, i8*)* %80, void (i32, i8*)** %82, align 4, !dbg !8493
  %83 = load i8*, i8** %16, align 4, !dbg !8494
  %84 = load %struct.sam0_eic_port_data*, %struct.sam0_eic_port_data** %19, align 4, !dbg !8495
  %85 = getelementptr inbounds %struct.sam0_eic_port_data, %struct.sam0_eic_port_data* %84, i32 0, i32 1, !dbg !8496
  store i8* %83, i8** %85, align 4, !dbg !8497
  %86 = load i32, i32* %12, align 4, !dbg !8498
  %87 = trunc i32 %86 to i8, !dbg !8498
  %88 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8499
  %89 = bitcast %struct.z_thread_stack_element* %88 to i8*, !dbg !8500
  %90 = load i8, i8* %89, align 1, !dbg !8501
  %91 = and i8 %87, 31, !dbg !8501
  %92 = and i8 %90, -32, !dbg !8501
  %93 = or i8 %92, %91, !dbg !8501
  store i8 %93, i8* %89, align 1, !dbg !8501
  %94 = load i32, i32* %11, align 4, !dbg !8502
  %95 = trunc i32 %94 to i8, !dbg !8502
  %96 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8503
  %97 = bitcast %struct.z_thread_stack_element* %96 to i8*, !dbg !8504
  %98 = load i8, i8* %97, align 1, !dbg !8505
  %99 = and i8 %95, 3, !dbg !8505
  %100 = shl i8 %99, 5, !dbg !8505
  %101 = and i8 %98, -97, !dbg !8505
  %102 = or i8 %101, %100, !dbg !8505
  store i8 %102, i8* %97, align 1, !dbg !8505
  %103 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %20, align 4, !dbg !8506
  %104 = bitcast %struct.z_thread_stack_element* %103 to i8*, !dbg !8507
  %105 = load i8, i8* %104, align 1, !dbg !8508
  %106 = and i8 %105, 127, !dbg !8508
  %107 = or i8 %106, -128, !dbg !8508
  store i8 %107, i8* %104, align 1, !dbg !8508
  %108 = load i32, i32* %23, align 4, !dbg !8509
  %109 = getelementptr inbounds [2 x %union.PORT_DIR_Type], [2 x %union.PORT_DIR_Type]* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 9), i32 0, i32 %108, !dbg !8510
  %110 = bitcast %union.PORT_DIR_Type* %109 to i32*, !dbg !8511
  %111 = load volatile i32, i32* %110, align 4, !dbg !8511
  store i32 %111, i32* %26, align 4, !dbg !8512
  %112 = load i32, i32* %24, align 4, !dbg !8513
  %113 = shl i32 15, %112, !dbg !8514
  %114 = xor i32 %113, -1, !dbg !8515
  %115 = load i32, i32* %26, align 4, !dbg !8516
  %116 = and i32 %115, %114, !dbg !8516
  store i32 %116, i32* %26, align 4, !dbg !8516
  %117 = load i32, i32* %13, align 4, !dbg !8517
  switch i32 %117, label %143 [
    i32 0, label %118
    i32 1, label %123
    i32 2, label %128
    i32 3, label %133
    i32 4, label %138
  ], !dbg !8518

118:                                              ; preds = %75
  %119 = load i32, i32* %24, align 4, !dbg !8519
  %120 = shl i32 1, %119, !dbg !8521
  %121 = load i32, i32* %26, align 4, !dbg !8522
  %122 = or i32 %121, %120, !dbg !8522
  store i32 %122, i32* %26, align 4, !dbg !8522
  br label %143, !dbg !8523

123:                                              ; preds = %75
  %124 = load i32, i32* %24, align 4, !dbg !8524
  %125 = shl i32 2, %124, !dbg !8525
  %126 = load i32, i32* %26, align 4, !dbg !8526
  %127 = or i32 %126, %125, !dbg !8526
  store i32 %127, i32* %26, align 4, !dbg !8526
  br label %143, !dbg !8527

128:                                              ; preds = %75
  %129 = load i32, i32* %24, align 4, !dbg !8528
  %130 = shl i32 3, %129, !dbg !8529
  %131 = load i32, i32* %26, align 4, !dbg !8530
  %132 = or i32 %131, %130, !dbg !8530
  store i32 %132, i32* %26, align 4, !dbg !8530
  br label %143, !dbg !8531

133:                                              ; preds = %75
  %134 = load i32, i32* %24, align 4, !dbg !8532
  %135 = shl i32 4, %134, !dbg !8533
  %136 = load i32, i32* %26, align 4, !dbg !8534
  %137 = or i32 %136, %135, !dbg !8534
  store i32 %137, i32* %26, align 4, !dbg !8534
  br label %143, !dbg !8535

138:                                              ; preds = %75
  %139 = load i32, i32* %24, align 4, !dbg !8536
  %140 = shl i32 5, %139, !dbg !8537
  %141 = load i32, i32* %26, align 4, !dbg !8538
  %142 = or i32 %141, %140, !dbg !8538
  store i32 %142, i32* %26, align 4, !dbg !8538
  br label %143, !dbg !8539

143:                                              ; preds = %75, %138, %133, %128, %123, %118
  %144 = load i8, i8* %14, align 1, !dbg !8540
  %145 = trunc i8 %144 to i1, !dbg !8540
  br i1 %145, label %146, label %151, !dbg !8542

146:                                              ; preds = %143
  %147 = load i32, i32* %24, align 4, !dbg !8543
  %148 = shl i32 8, %147, !dbg !8545
  %149 = load i32, i32* %26, align 4, !dbg !8546
  %150 = or i32 %149, %148, !dbg !8546
  store i32 %150, i32* %26, align 4, !dbg !8546
  br label %151, !dbg !8547

151:                                              ; preds = %146, %143
  %152 = load i32, i32* %26, align 4, !dbg !8548
  %153 = load i32, i32* %23, align 4, !dbg !8549
  %154 = getelementptr inbounds [2 x %union.PORT_DIR_Type], [2 x %union.PORT_DIR_Type]* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 9), i32 0, i32 %153, !dbg !8550
  %155 = bitcast %union.PORT_DIR_Type* %154 to i32*, !dbg !8551
  store volatile i32 %152, i32* %155, align 4, !dbg !8552
  call void @set_eic_enable(i1 noundef zeroext true) #10, !dbg !8553
  call void @wait_synchronization() #10, !dbg !8554
  %156 = load i32, i32* %21, align 4, !dbg !8555
  store volatile i32 %156, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8556
  %157 = load i32, i32* %25, align 4, !dbg !8557
  store i32 %157, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8558, metadata !DIExpression()) #9, !dbg !8560
  %158 = load i32, i32* %7, align 4, !dbg !8562
  %159 = icmp ne i32 %158, 0, !dbg !8564
  br i1 %159, label %160, label %161, !dbg !8565

160:                                              ; preds = %151
  br label %162, !dbg !8566

161:                                              ; preds = %151
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8568, !srcloc !8569
  br label %162, !dbg !8570

162:                                              ; preds = %160, %161
  store i32 0, i32* %10, align 4, !dbg !8571
  br label %170, !dbg !8571

163:                                              ; preds = %73
  call void @llvm.dbg.label(metadata !8572), !dbg !8573
  call void @set_eic_enable(i1 noundef zeroext true) #10, !dbg !8574
  call void @wait_synchronization() #10, !dbg !8575
  %164 = load i32, i32* %25, align 4, !dbg !8576
  store i32 %164, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8558, metadata !DIExpression()) #9, !dbg !8577
  %165 = load i32, i32* %8, align 4, !dbg !8579
  %166 = icmp ne i32 %165, 0, !dbg !8580
  br i1 %166, label %167, label %168, !dbg !8581

167:                                              ; preds = %163
  br label %169, !dbg !8582

168:                                              ; preds = %163
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8583, !srcloc !8569
  br label %169, !dbg !8584

169:                                              ; preds = %167, %168
  store i32 -16, i32* %10, align 4, !dbg !8585
  br label %170, !dbg !8585

170:                                              ; preds = %169, %162, %35
  %171 = load i32, i32* %10, align 4, !dbg !8586
  ret i32 %171, !dbg !8586
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sam0_eic_map_to_line(i32 noundef %0, i32 noundef %1) #1 !dbg !8587 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8590, metadata !DIExpression()), !dbg !8591
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8592, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.declare(metadata i8* %6, metadata !8594, metadata !DIExpression()), !dbg !8595
  %7 = load i32, i32* %4, align 4, !dbg !8596
  %8 = getelementptr inbounds [1 x [32 x i8]], [1 x [32 x i8]]* @sam0_eic_channels, i32 0, i32 %7, !dbg !8597
  %9 = load i32, i32* %5, align 4, !dbg !8598
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 %9, !dbg !8597
  %11 = load i8, i8* %10, align 1, !dbg !8597
  store i8 %11, i8* %6, align 1, !dbg !8595
  %12 = load i8, i8* %6, align 1, !dbg !8599
  %13 = zext i8 %12 to i32, !dbg !8599
  %14 = icmp eq i32 %13, 255, !dbg !8601
  br i1 %14, label %15, label %16, !dbg !8602

15:                                               ; preds = %2
  store i32 -134, i32* %3, align 4, !dbg !8603
  br label %19, !dbg !8603

16:                                               ; preds = %2
  %17 = load i8, i8* %6, align 1, !dbg !8605
  %18 = zext i8 %17 to i32, !dbg !8605
  store i32 %18, i32* %3, align 4, !dbg !8606
  br label %19, !dbg !8606

19:                                               ; preds = %16, %15
  %20 = load i32, i32* %3, align 4, !dbg !8607
  ret i32 %20, !dbg !8607
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_release(i32 noundef %0, i32 noundef %1) #1 !dbg !8608 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.device.73*, align 4
  %9 = alloca %struct.sam0_eic_data*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8609, metadata !DIExpression()), !dbg !8610
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8611, metadata !DIExpression()), !dbg !8612
  call void @llvm.dbg.declare(metadata %struct.device.73** %8, metadata !8613, metadata !DIExpression()), !dbg !8614
  store %struct.device.73* @__device_dts_ord_22, %struct.device.73** %8, align 4, !dbg !8614
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %9, metadata !8615, metadata !DIExpression()), !dbg !8616
  %15 = load i8*, i8** getelementptr inbounds (%struct.device.73, %struct.device.73* @__device_dts_ord_22, i32 0, i32 4), align 4, !dbg !8617
  %16 = bitcast i8* %15 to %struct.sam0_eic_data*, !dbg !8618
  store %struct.sam0_eic_data* %16, %struct.sam0_eic_data** %9, align 4, !dbg !8616
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8619, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.declare(metadata i32* %11, metadata !8621, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8623, metadata !DIExpression()), !dbg !8624
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8625, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.declare(metadata i32* %14, metadata !8627, metadata !DIExpression()), !dbg !8628
  %17 = load i32, i32* %6, align 4, !dbg !8629
  %18 = load i32, i32* %7, align 4, !dbg !8630
  %19 = call i32 @sam0_eic_map_to_line(i32 noundef %17, i32 noundef %18) #10, !dbg !8631
  store i32 %19, i32* %11, align 4, !dbg !8632
  %20 = load i32, i32* %11, align 4, !dbg !8633
  %21 = icmp slt i32 %20, 0, !dbg !8635
  br i1 %21, label %22, label %24, !dbg !8636

22:                                               ; preds = %2
  %23 = load i32, i32* %11, align 4, !dbg !8637
  store i32 %23, i32* %5, align 4, !dbg !8639
  br label %65, !dbg !8639

24:                                               ; preds = %2
  %25 = load i32, i32* %11, align 4, !dbg !8640
  %26 = shl i32 1, %25, !dbg !8640
  store i32 %26, i32* %10, align 4, !dbg !8641
  %27 = load i32, i32* %11, align 4, !dbg !8642
  %28 = sdiv i32 %27, 8, !dbg !8643
  store i32 %28, i32* %12, align 4, !dbg !8644
  %29 = load i32, i32* %11, align 4, !dbg !8645
  %30 = srem i32 %29, 8, !dbg !8646
  %31 = mul nsw i32 %30, 4, !dbg !8647
  store i32 %31, i32* %13, align 4, !dbg !8648
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8454, metadata !DIExpression()) #9, !dbg !8649
  %32 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !8651, !srcloc !8459
  store i32 %32, i32* %4, align 4, !dbg !8651
  %33 = load i32, i32* %4, align 4, !dbg !8652
  store i32 %33, i32* %14, align 4, !dbg !8653
  call void @set_eic_enable(i1 noundef zeroext false) #10, !dbg !8654
  call void @wait_synchronization() #10, !dbg !8655
  %34 = load i32, i32* %6, align 4, !dbg !8656
  %35 = load i32, i32* %7, align 4, !dbg !8658
  %36 = load i32, i32* %11, align 4, !dbg !8659
  %37 = call zeroext i1 @sam0_eic_check_ownership(i32 noundef %34, i32 noundef %35, i32 noundef %36) #10, !dbg !8660
  br i1 %37, label %39, label %38, !dbg !8661

38:                                               ; preds = %24
  br label %58, !dbg !8662

39:                                               ; preds = %24
  %40 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %9, align 4, !dbg !8664
  %41 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %40, i32 0, i32 1, !dbg !8665
  %42 = load i32, i32* %11, align 4, !dbg !8666
  %43 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %41, i32 0, i32 %42, !dbg !8664
  %44 = bitcast %struct.z_thread_stack_element* %43 to i8*, !dbg !8667
  %45 = load i8, i8* %44, align 1, !dbg !8668
  %46 = and i8 %45, 127, !dbg !8668
  %47 = or i8 %46, 0, !dbg !8668
  store i8 %47, i8* %44, align 1, !dbg !8668
  %48 = load i32, i32* %13, align 4, !dbg !8669
  %49 = shl i32 15, %48, !dbg !8670
  %50 = xor i32 %49, -1, !dbg !8671
  %51 = load i32, i32* %12, align 4, !dbg !8672
  %52 = getelementptr inbounds [2 x %union.PORT_DIR_Type], [2 x %union.PORT_DIR_Type]* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 9), i32 0, i32 %51, !dbg !8673
  %53 = bitcast %union.PORT_DIR_Type* %52 to i32*, !dbg !8674
  %54 = load volatile i32, i32* %53, align 4, !dbg !8675
  %55 = and i32 %54, %50, !dbg !8675
  store volatile i32 %55, i32* %53, align 4, !dbg !8675
  %56 = load i32, i32* %10, align 4, !dbg !8676
  store volatile i32 %56, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 5, i32 0, i32 0), align 4, !dbg !8677
  %57 = load i32, i32* %10, align 4, !dbg !8678
  store volatile i32 %57, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8679
  br label %58, !dbg !8680

58:                                               ; preds = %39, %38
  call void @llvm.dbg.label(metadata !8681), !dbg !8682
  call void @set_eic_enable(i1 noundef zeroext true) #10, !dbg !8683
  call void @wait_synchronization() #10, !dbg !8684
  %59 = load i32, i32* %14, align 4, !dbg !8685
  store i32 %59, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8558, metadata !DIExpression()) #9, !dbg !8686
  %60 = load i32, i32* %3, align 4, !dbg !8688
  %61 = icmp ne i32 %60, 0, !dbg !8689
  br i1 %61, label %62, label %63, !dbg !8690

62:                                               ; preds = %58
  br label %64, !dbg !8691

63:                                               ; preds = %58
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !8692, !srcloc !8569
  br label %64, !dbg !8693

64:                                               ; preds = %62, %63
  store i32 0, i32* %5, align 4, !dbg !8694
  br label %65, !dbg !8694

65:                                               ; preds = %64, %22
  %66 = load i32, i32* %5, align 4, !dbg !8695
  ret i32 %66, !dbg !8695
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sam0_eic_check_ownership(i32 noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !8696 {
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.device.73*, align 4
  %9 = alloca %struct.sam0_eic_data*, align 4
  %10 = alloca %struct.z_thread_stack_element*, align 4
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8699, metadata !DIExpression()), !dbg !8700
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8701, metadata !DIExpression()), !dbg !8702
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8703, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.declare(metadata %struct.device.73** %8, metadata !8705, metadata !DIExpression()), !dbg !8706
  store %struct.device.73* @__device_dts_ord_22, %struct.device.73** %8, align 4, !dbg !8706
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %9, metadata !8707, metadata !DIExpression()), !dbg !8708
  %11 = load i8*, i8** getelementptr inbounds (%struct.device.73, %struct.device.73* @__device_dts_ord_22, i32 0, i32 4), align 4, !dbg !8709
  %12 = bitcast i8* %11 to %struct.sam0_eic_data*, !dbg !8710
  store %struct.sam0_eic_data* %12, %struct.sam0_eic_data** %9, align 4, !dbg !8708
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %10, metadata !8711, metadata !DIExpression()), !dbg !8712
  %13 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %9, align 4, !dbg !8713
  %14 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %13, i32 0, i32 1, !dbg !8714
  %15 = load i32, i32* %7, align 4, !dbg !8715
  %16 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %14, i32 0, i32 %15, !dbg !8713
  store %struct.z_thread_stack_element* %16, %struct.z_thread_stack_element** %10, align 4, !dbg !8712
  %17 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %10, align 4, !dbg !8716
  %18 = bitcast %struct.z_thread_stack_element* %17 to i8*, !dbg !8718
  %19 = load i8, i8* %18, align 1, !dbg !8718
  %20 = lshr i8 %19, 7, !dbg !8718
  %21 = icmp ne i8 %20, 0, !dbg !8716
  br i1 %21, label %23, label %22, !dbg !8719

22:                                               ; preds = %3
  store i1 false, i1* %4, align 1, !dbg !8720
  br label %42, !dbg !8720

23:                                               ; preds = %3
  %24 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %10, align 4, !dbg !8722
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !8724
  %26 = load i8, i8* %25, align 1, !dbg !8724
  %27 = lshr i8 %26, 5, !dbg !8724
  %28 = and i8 %27, 3, !dbg !8724
  %29 = zext i8 %28 to i32, !dbg !8722
  %30 = load i32, i32* %5, align 4, !dbg !8725
  %31 = icmp ne i32 %29, %30, !dbg !8726
  br i1 %31, label %40, label %32, !dbg !8727

32:                                               ; preds = %23
  %33 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %10, align 4, !dbg !8728
  %34 = bitcast %struct.z_thread_stack_element* %33 to i8*, !dbg !8729
  %35 = load i8, i8* %34, align 1, !dbg !8729
  %36 = and i8 %35, 31, !dbg !8729
  %37 = zext i8 %36 to i32, !dbg !8728
  %38 = load i32, i32* %6, align 4, !dbg !8730
  %39 = icmp ne i32 %37, %38, !dbg !8731
  br i1 %39, label %40, label %41, !dbg !8732

40:                                               ; preds = %32, %23
  store i1 false, i1* %4, align 1, !dbg !8733
  br label %42, !dbg !8733

41:                                               ; preds = %32
  store i1 true, i1* %4, align 1, !dbg !8735
  br label %42, !dbg !8735

42:                                               ; preds = %41, %40, %22
  %43 = load i1, i1* %4, align 1, !dbg !8736
  ret i1 %43, !dbg !8736
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_enable_interrupt(i32 noundef %0, i32 noundef %1) #1 !dbg !8737 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8738, metadata !DIExpression()), !dbg !8739
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8740, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8742, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8744, metadata !DIExpression()), !dbg !8745
  %8 = load i32, i32* %4, align 4, !dbg !8746
  %9 = load i32, i32* %5, align 4, !dbg !8747
  %10 = call i32 @sam0_eic_map_to_line(i32 noundef %8, i32 noundef %9) #10, !dbg !8748
  store i32 %10, i32* %7, align 4, !dbg !8749
  %11 = load i32, i32* %7, align 4, !dbg !8750
  %12 = icmp slt i32 %11, 0, !dbg !8752
  br i1 %12, label %13, label %15, !dbg !8753

13:                                               ; preds = %2
  %14 = load i32, i32* %7, align 4, !dbg !8754
  store i32 %14, i32* %3, align 4, !dbg !8756
  br label %26, !dbg !8756

15:                                               ; preds = %2
  %16 = load i32, i32* %4, align 4, !dbg !8757
  %17 = load i32, i32* %5, align 4, !dbg !8759
  %18 = load i32, i32* %7, align 4, !dbg !8760
  %19 = call zeroext i1 @sam0_eic_check_ownership(i32 noundef %16, i32 noundef %17, i32 noundef %18) #10, !dbg !8761
  br i1 %19, label %21, label %20, !dbg !8762

20:                                               ; preds = %15
  store i32 -16, i32* %3, align 4, !dbg !8763
  br label %26, !dbg !8763

21:                                               ; preds = %15
  %22 = load i32, i32* %7, align 4, !dbg !8765
  %23 = shl i32 1, %22, !dbg !8765
  store i32 %23, i32* %6, align 4, !dbg !8766
  %24 = load i32, i32* %6, align 4, !dbg !8767
  store volatile i32 %24, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8768
  %25 = load i32, i32* %6, align 4, !dbg !8769
  store volatile i32 %25, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 6, i32 0, i32 0), align 4, !dbg !8770
  store i32 0, i32* %3, align 4, !dbg !8771
  br label %26, !dbg !8771

26:                                               ; preds = %21, %20, %13
  %27 = load i32, i32* %3, align 4, !dbg !8772
  ret i32 %27, !dbg !8772
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_disable_interrupt(i32 noundef %0, i32 noundef %1) #1 !dbg !8773 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8774, metadata !DIExpression()), !dbg !8775
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8776, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8778, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8780, metadata !DIExpression()), !dbg !8781
  %8 = load i32, i32* %4, align 4, !dbg !8782
  %9 = load i32, i32* %5, align 4, !dbg !8783
  %10 = call i32 @sam0_eic_map_to_line(i32 noundef %8, i32 noundef %9) #10, !dbg !8784
  store i32 %10, i32* %7, align 4, !dbg !8785
  %11 = load i32, i32* %7, align 4, !dbg !8786
  %12 = icmp slt i32 %11, 0, !dbg !8788
  br i1 %12, label %13, label %15, !dbg !8789

13:                                               ; preds = %2
  %14 = load i32, i32* %7, align 4, !dbg !8790
  store i32 %14, i32* %3, align 4, !dbg !8792
  br label %26, !dbg !8792

15:                                               ; preds = %2
  %16 = load i32, i32* %4, align 4, !dbg !8793
  %17 = load i32, i32* %5, align 4, !dbg !8795
  %18 = load i32, i32* %7, align 4, !dbg !8796
  %19 = call zeroext i1 @sam0_eic_check_ownership(i32 noundef %16, i32 noundef %17, i32 noundef %18) #10, !dbg !8797
  br i1 %19, label %21, label %20, !dbg !8798

20:                                               ; preds = %15
  store i32 -16, i32* %3, align 4, !dbg !8799
  br label %26, !dbg !8799

21:                                               ; preds = %15
  %22 = load i32, i32* %7, align 4, !dbg !8801
  %23 = shl i32 1, %22, !dbg !8801
  store i32 %23, i32* %6, align 4, !dbg !8802
  %24 = load i32, i32* %6, align 4, !dbg !8803
  store volatile i32 %24, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 5, i32 0, i32 0), align 4, !dbg !8804
  %25 = load i32, i32* %6, align 4, !dbg !8805
  store volatile i32 %25, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8806
  store i32 0, i32* %3, align 4, !dbg !8807
  br label %26, !dbg !8807

26:                                               ; preds = %21, %20, %13
  %27 = load i32, i32* %3, align 4, !dbg !8808
  ret i32 %27, !dbg !8808
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sam0_eic_interrupt_pending(i32 noundef %0) #1 !dbg !8809 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca %struct.sam0_eic_data*, align 4
  %5 = alloca %struct.z_thread_stack_element*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8812, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !8814, metadata !DIExpression()), !dbg !8815
  store %struct.device.73* @__device_dts_ord_22, %struct.device.73** %3, align 4, !dbg !8815
  call void @llvm.dbg.declare(metadata %struct.sam0_eic_data** %4, metadata !8816, metadata !DIExpression()), !dbg !8817
  %9 = load i8*, i8** getelementptr inbounds (%struct.device.73, %struct.device.73* @__device_dts_ord_22, i32 0, i32 4), align 4, !dbg !8818
  %10 = bitcast i8* %9 to %struct.sam0_eic_data*, !dbg !8819
  store %struct.sam0_eic_data* %10, %struct.sam0_eic_data** %4, align 4, !dbg !8817
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %5, metadata !8820, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8822, metadata !DIExpression()), !dbg !8823
  %11 = load volatile i32, i32* getelementptr inbounds (%struct.Eic, %struct.Eic* inttoptr (i32 1073747968 to %struct.Eic*), i32 0, i32 7, i32 0, i32 0), align 4, !dbg !8824
  store i32 %11, i32* %6, align 4, !dbg !8823
  call void @llvm.dbg.declare(metadata i32* %7, metadata !8825, metadata !DIExpression()), !dbg !8826
  store i32 0, i32* %7, align 4, !dbg !8826
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8827, metadata !DIExpression()), !dbg !8829
  store i32 0, i32* %8, align 4, !dbg !8829
  br label %12, !dbg !8830

12:                                               ; preds = %52, %1
  %13 = load i32, i32* %8, align 4, !dbg !8831
  %14 = icmp slt i32 %13, 16, !dbg !8833
  br i1 %14, label %15, label %55, !dbg !8834

15:                                               ; preds = %12
  %16 = load %struct.sam0_eic_data*, %struct.sam0_eic_data** %4, align 4, !dbg !8835
  %17 = getelementptr inbounds %struct.sam0_eic_data, %struct.sam0_eic_data* %16, i32 0, i32 1, !dbg !8837
  %18 = load i32, i32* %8, align 4, !dbg !8838
  %19 = getelementptr inbounds [16 x %struct.z_thread_stack_element], [16 x %struct.z_thread_stack_element]* %17, i32 0, i32 %18, !dbg !8835
  store %struct.z_thread_stack_element* %19, %struct.z_thread_stack_element** %5, align 4, !dbg !8839
  %20 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !8840
  %21 = bitcast %struct.z_thread_stack_element* %20 to i8*, !dbg !8842
  %22 = load i8, i8* %21, align 1, !dbg !8842
  %23 = lshr i8 %22, 7, !dbg !8842
  %24 = icmp ne i8 %23, 0, !dbg !8840
  br i1 %24, label %26, label %25, !dbg !8843

25:                                               ; preds = %15
  br label %52, !dbg !8844

26:                                               ; preds = %15
  %27 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !8846
  %28 = bitcast %struct.z_thread_stack_element* %27 to i8*, !dbg !8848
  %29 = load i8, i8* %28, align 1, !dbg !8848
  %30 = lshr i8 %29, 5, !dbg !8848
  %31 = and i8 %30, 3, !dbg !8848
  %32 = zext i8 %31 to i32, !dbg !8846
  %33 = load i32, i32* %2, align 4, !dbg !8849
  %34 = icmp ne i32 %32, %33, !dbg !8850
  br i1 %34, label %35, label %36, !dbg !8851

35:                                               ; preds = %26
  br label %52, !dbg !8852

36:                                               ; preds = %26
  %37 = load i32, i32* %6, align 4, !dbg !8854
  %38 = load i32, i32* %8, align 4, !dbg !8856
  %39 = shl i32 1, %38, !dbg !8856
  %40 = and i32 %37, %39, !dbg !8857
  %41 = icmp ne i32 %40, 0, !dbg !8857
  br i1 %41, label %43, label %42, !dbg !8858

42:                                               ; preds = %36
  br label %52, !dbg !8859

43:                                               ; preds = %36
  %44 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !8861
  %45 = bitcast %struct.z_thread_stack_element* %44 to i8*, !dbg !8861
  %46 = load i8, i8* %45, align 1, !dbg !8861
  %47 = and i8 %46, 31, !dbg !8861
  %48 = zext i8 %47 to i32, !dbg !8861
  %49 = shl i32 1, %48, !dbg !8861
  %50 = load i32, i32* %7, align 4, !dbg !8862
  %51 = or i32 %50, %49, !dbg !8862
  store i32 %51, i32* %7, align 4, !dbg !8862
  br label %52, !dbg !8863

52:                                               ; preds = %43, %42, %35, %25
  %53 = load i32, i32* %8, align 4, !dbg !8864
  %54 = add nsw i32 %53, 1, !dbg !8864
  store i32 %54, i32* %8, align 4, !dbg !8864
  br label %12, !dbg !8865, !llvm.loop !8866

55:                                               ; preds = %12
  %56 = load i32, i32* %7, align 4, !dbg !8868
  ret i32 %56, !dbg !8869
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_console_init(%struct.device.73* noundef %0) #1 !dbg !8870 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !8871, metadata !DIExpression()), !dbg !8872
  %4 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !8873
  %5 = call zeroext i1 @device_is_ready(%struct.device.73* noundef @__device_dts_ord_27) #10, !dbg !8874
  br i1 %5, label %7, label %6, !dbg !8876

6:                                                ; preds = %1
  store i32 -19, i32* %2, align 4, !dbg !8877
  br label %8, !dbg !8877

7:                                                ; preds = %1
  call void @uart_console_hook_install() #10, !dbg !8879
  store i32 0, i32* %2, align 4, !dbg !8880
  br label %8, !dbg !8880

8:                                                ; preds = %7, %6
  %9 = load i32, i32* %2, align 4, !dbg !8881
  ret i32 %9, !dbg !8881
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @device_is_ready(%struct.device.73* noundef %0) #1 !dbg !8882 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !8886, metadata !DIExpression()), !dbg !8887
  br label %3, !dbg !8888

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8889, !srcloc !8891
  br label %4, !dbg !8889

4:                                                ; preds = %3
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !8892
  %6 = call zeroext i1 @z_impl_device_is_ready(%struct.device.73* noundef %5) #10, !dbg !8893
  ret i1 %6, !dbg !8894
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_console_hook_install() #1 !dbg !8895 {
  call void @__stdout_hook_install(i32 (i32)* noundef @console_out) #10, !dbg !8896
  call void @__printk_hook_install(i32 (i32)* noundef @console_out) #10, !dbg !8897
  ret void, !dbg !8898
}

; Function Attrs: noinline nounwind optnone
define internal i32 @console_out(i32 noundef %0) #1 !dbg !8899 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8900, metadata !DIExpression()), !dbg !8901
  %3 = load i32, i32* %2, align 4, !dbg !8902
  %4 = icmp eq i32 10, %3, !dbg !8904
  br i1 %4, label %5, label %6, !dbg !8905

5:                                                ; preds = %1
  call void @uart_poll_out(%struct.device.73* noundef @__device_dts_ord_27, i8 noundef zeroext 13) #10, !dbg !8906
  br label %6, !dbg !8908

6:                                                ; preds = %5, %1
  %7 = load i32, i32* %2, align 4, !dbg !8909
  %8 = trunc i32 %7 to i8, !dbg !8909
  call void @uart_poll_out(%struct.device.73* noundef @__device_dts_ord_27, i8 noundef zeroext %8) #10, !dbg !8910
  %9 = load i32, i32* %2, align 4, !dbg !8911
  ret i32 %9, !dbg !8912
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_poll_out(%struct.device.73* noundef %0, i8 noundef zeroext %1) #1 !dbg !8913 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i8, align 1
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !8915, metadata !DIExpression()), !dbg !8916
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !8917, metadata !DIExpression()), !dbg !8918
  br label %5, !dbg !8919

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !8920, !srcloc !8922
  br label %6, !dbg !8920

6:                                                ; preds = %5
  %7 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !8923
  %8 = load i8, i8* %4, align 1, !dbg !8924
  call void @z_impl_uart_poll_out(%struct.device.73* noundef %7, i8 noundef zeroext %8) #10, !dbg !8925
  ret void, !dbg !8926
}

; Function Attrs: noinline nounwind optnone
define internal void @z_impl_uart_poll_out(%struct.device.73* noundef %0, i8 noundef zeroext %1) #1 !dbg !8927 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i8, align 1
  %5 = alloca %struct.uart_driver_api*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !8928, metadata !DIExpression()), !dbg !8929
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !8930, metadata !DIExpression()), !dbg !8931
  call void @llvm.dbg.declare(metadata %struct.uart_driver_api** %5, metadata !8932, metadata !DIExpression()), !dbg !8933
  %6 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !8934
  %7 = getelementptr inbounds %struct.device.73, %struct.device.73* %6, i32 0, i32 2, !dbg !8935
  %8 = load i8*, i8** %7, align 4, !dbg !8935
  %9 = bitcast i8* %8 to %struct.uart_driver_api*, !dbg !8936
  store %struct.uart_driver_api* %9, %struct.uart_driver_api** %5, align 4, !dbg !8933
  %10 = load %struct.uart_driver_api*, %struct.uart_driver_api** %5, align 4, !dbg !8937
  %11 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %10, i32 0, i32 1, !dbg !8938
  %12 = load void (%struct.device.73*, i8)*, void (%struct.device.73*, i8)** %11, align 4, !dbg !8938
  %13 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !8939
  %14 = load i8, i8* %4, align 1, !dbg !8940
  call void %12(%struct.device.73* noundef %13, i8 noundef zeroext %14) #10, !dbg !8937
  ret void, !dbg !8941
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_impl_device_is_ready(%struct.device.73* noundef %0) #1 !dbg !8942 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !8943, metadata !DIExpression()), !dbg !8944
  %3 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !8945
  %4 = call zeroext i1 @z_device_is_ready(%struct.device.73* noundef %3) #10, !dbg !8946
  ret i1 %4, !dbg !8947
}

; Function Attrs: noinline nounwind optnone
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) #1 !dbg !8948 {
  %4 = alloca %struct.k_fifo*, align 4
  %5 = alloca %struct.k_fifo*, align 4
  %6 = alloca i8 (i8*, i8)*, align 4
  store %struct.k_fifo* %0, %struct.k_fifo** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_fifo** %4, metadata !8994, metadata !DIExpression()), !dbg !8995
  store %struct.k_fifo* %1, %struct.k_fifo** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_fifo** %5, metadata !8996, metadata !DIExpression()), !dbg !8997
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** %6, align 4
  call void @llvm.dbg.declare(metadata i8 (i8*, i8)** %6, metadata !8998, metadata !DIExpression()), !dbg !8999
  %7 = load %struct.k_fifo*, %struct.k_fifo** %4, align 4, !dbg !9000
  %8 = load %struct.k_fifo*, %struct.k_fifo** %5, align 4, !dbg !9001
  %9 = load i8 (i8*, i8)*, i8 (i8*, i8)** %6, align 4, !dbg !9002
  ret void, !dbg !9003
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_poll_in(%struct.device.73* noundef %0, i8* noundef %1) #1 !dbg !9004 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %7 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !9005, metadata !DIExpression()), !dbg !9006
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !9007, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %6, metadata !9009, metadata !DIExpression()), !dbg !9011
  %8 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !9012
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 1, !dbg !9013
  %10 = load i8*, i8** %9, align 4, !dbg !9013
  %11 = bitcast i8* %10 to %struct.uart_sam0_dev_cfg*, !dbg !9012
  store %struct.uart_sam0_dev_cfg* %11, %struct.uart_sam0_dev_cfg** %6, align 4, !dbg !9011
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %7, metadata !9014, metadata !DIExpression()), !dbg !9016
  %12 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %6, align 4, !dbg !9017
  %13 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %12, i32 0, i32 0, !dbg !9018
  %14 = load %struct.SercomUsart*, %struct.SercomUsart** %13, align 4, !dbg !9018
  store %struct.SercomUsart* %14, %struct.SercomUsart** %7, align 4, !dbg !9016
  %15 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9019
  %16 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %15, i32 0, i32 10, !dbg !9021
  %17 = bitcast %union.PORT_PMUX_Type* %16 to %struct.z_thread_stack_element*, !dbg !9022
  %18 = bitcast %struct.z_thread_stack_element* %17 to i8*, !dbg !9023
  %19 = load volatile i8, i8* %18, align 4, !dbg !9023
  %20 = lshr i8 %19, 2, !dbg !9023
  %21 = and i8 %20, 1, !dbg !9023
  %22 = icmp ne i8 %21, 0, !dbg !9019
  br i1 %22, label %24, label %23, !dbg !9024

23:                                               ; preds = %2
  store i32 -16, i32* %3, align 4, !dbg !9025
  br label %31, !dbg !9025

24:                                               ; preds = %2
  %25 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9027
  %26 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %25, i32 0, i32 15, !dbg !9028
  %27 = bitcast %union.GCLK_CLKCTRL_Type* %26 to i16*, !dbg !9029
  %28 = load volatile i16, i16* %27, align 4, !dbg !9029
  %29 = trunc i16 %28 to i8, !dbg !9030
  %30 = load i8*, i8** %5, align 4, !dbg !9031
  store i8 %29, i8* %30, align 1, !dbg !9032
  store i32 0, i32* %3, align 4, !dbg !9033
  br label %31, !dbg !9033

31:                                               ; preds = %24, %23
  %32 = load i32, i32* %3, align 4, !dbg !9034
  ret i32 %32, !dbg !9034
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_poll_out(%struct.device.73* noundef %0, i8 noundef zeroext %1) #1 !dbg !9035 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i8, align 1
  %5 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %6 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9036, metadata !DIExpression()), !dbg !9037
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !9038, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %5, metadata !9040, metadata !DIExpression()), !dbg !9041
  %7 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9042
  %8 = getelementptr inbounds %struct.device.73, %struct.device.73* %7, i32 0, i32 1, !dbg !9043
  %9 = load i8*, i8** %8, align 4, !dbg !9043
  %10 = bitcast i8* %9 to %struct.uart_sam0_dev_cfg*, !dbg !9042
  store %struct.uart_sam0_dev_cfg* %10, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9041
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %6, metadata !9044, metadata !DIExpression()), !dbg !9045
  %11 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9046
  %12 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %11, i32 0, i32 0, !dbg !9047
  %13 = load %struct.SercomUsart*, %struct.SercomUsart** %12, align 4, !dbg !9047
  store %struct.SercomUsart* %13, %struct.SercomUsart** %6, align 4, !dbg !9045
  br label %14, !dbg !9048

14:                                               ; preds = %23, %2
  %15 = load %struct.SercomUsart*, %struct.SercomUsart** %6, align 4, !dbg !9049
  %16 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %15, i32 0, i32 10, !dbg !9050
  %17 = bitcast %union.PORT_PMUX_Type* %16 to %struct.z_thread_stack_element*, !dbg !9051
  %18 = bitcast %struct.z_thread_stack_element* %17 to i8*, !dbg !9052
  %19 = load volatile i8, i8* %18, align 4, !dbg !9052
  %20 = and i8 %19, 1, !dbg !9052
  %21 = icmp ne i8 %20, 0, !dbg !9053
  %22 = xor i1 %21, true, !dbg !9053
  br i1 %22, label %23, label %24, !dbg !9048

23:                                               ; preds = %14
  br label %14, !dbg !9048, !llvm.loop !9054

24:                                               ; preds = %14
  %25 = load i8, i8* %4, align 1, !dbg !9056
  %26 = zext i8 %25 to i16, !dbg !9056
  %27 = load %struct.SercomUsart*, %struct.SercomUsart** %6, align 4, !dbg !9057
  %28 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %27, i32 0, i32 15, !dbg !9058
  %29 = bitcast %union.GCLK_CLKCTRL_Type* %28 to i16*, !dbg !9059
  store volatile i16 %26, i16* %29, align 4, !dbg !9060
  ret void, !dbg !9061
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_err_check(%struct.device.73* noundef %0) #1 !dbg !9062 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  %5 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9063, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9065, metadata !DIExpression()), !dbg !9066
  %6 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9067
  %7 = getelementptr inbounds %struct.device.73, %struct.device.73* %6, i32 0, i32 1, !dbg !9068
  %8 = load i8*, i8** %7, align 4, !dbg !9068
  %9 = bitcast i8* %8 to %struct.uart_sam0_dev_cfg*, !dbg !9067
  store %struct.uart_sam0_dev_cfg* %9, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9066
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9069, metadata !DIExpression()), !dbg !9070
  %10 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9071
  %11 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %10, i32 0, i32 0, !dbg !9072
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %11, align 4, !dbg !9072
  store %struct.SercomUsart* %12, %struct.SercomUsart** %4, align 4, !dbg !9070
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9073, metadata !DIExpression()), !dbg !9074
  store i32 0, i32* %5, align 4, !dbg !9074
  %13 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9075
  %14 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %13, i32 0, i32 12, !dbg !9077
  %15 = bitcast %union.GCLK_CLKCTRL_Type* %14 to i16*, !dbg !9078
  %16 = load volatile i16, i16* %15, align 2, !dbg !9078
  %17 = zext i16 %16 to i32, !dbg !9075
  %18 = and i32 %17, 4, !dbg !9079
  %19 = icmp ne i32 %18, 0, !dbg !9079
  br i1 %19, label %20, label %23, !dbg !9080

20:                                               ; preds = %1
  %21 = load i32, i32* %5, align 4, !dbg !9081
  %22 = or i32 %21, 1, !dbg !9081
  store i32 %22, i32* %5, align 4, !dbg !9081
  br label %23, !dbg !9083

23:                                               ; preds = %20, %1
  %24 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9084
  %25 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %24, i32 0, i32 12, !dbg !9086
  %26 = bitcast %union.GCLK_CLKCTRL_Type* %25 to i16*, !dbg !9087
  %27 = load volatile i16, i16* %26, align 2, !dbg !9087
  %28 = zext i16 %27 to i32, !dbg !9084
  %29 = and i32 %28, 2, !dbg !9088
  %30 = icmp ne i32 %29, 0, !dbg !9088
  br i1 %30, label %31, label %34, !dbg !9089

31:                                               ; preds = %23
  %32 = load i32, i32* %5, align 4, !dbg !9090
  %33 = or i32 %32, 2, !dbg !9090
  store i32 %33, i32* %5, align 4, !dbg !9090
  br label %34, !dbg !9092

34:                                               ; preds = %31, %23
  %35 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9093
  %36 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %35, i32 0, i32 12, !dbg !9095
  %37 = bitcast %union.GCLK_CLKCTRL_Type* %36 to i16*, !dbg !9096
  %38 = load volatile i16, i16* %37, align 2, !dbg !9096
  %39 = zext i16 %38 to i32, !dbg !9093
  %40 = and i32 %39, 1, !dbg !9097
  %41 = icmp ne i32 %40, 0, !dbg !9097
  br i1 %41, label %42, label %45, !dbg !9098

42:                                               ; preds = %34
  %43 = load i32, i32* %5, align 4, !dbg !9099
  %44 = or i32 %43, 4, !dbg !9099
  store i32 %44, i32* %5, align 4, !dbg !9099
  br label %45, !dbg !9101

45:                                               ; preds = %42, %34
  %46 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9102
  %47 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %46, i32 0, i32 12, !dbg !9103
  %48 = bitcast %union.GCLK_CLKCTRL_Type* %47 to i16*, !dbg !9104
  %49 = load volatile i16, i16* %48, align 2, !dbg !9105
  %50 = zext i16 %49 to i32, !dbg !9105
  %51 = or i32 %50, 7, !dbg !9105
  %52 = trunc i32 %51 to i16, !dbg !9105
  store volatile i16 %52, i16* %48, align 2, !dbg !9105
  %53 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9106
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %53) #10, !dbg !9107
  %54 = load i32, i32* %5, align 4, !dbg !9108
  ret i32 %54, !dbg !9109
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_configure(%struct.device.73* noundef %0, %struct.uart_config* noundef %1) #1 !dbg !9110 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca %struct.uart_config*, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %8 = alloca %struct.uart_sam0_dev_data*, align 4
  %9 = alloca %struct.SercomUsart*, align 4
  %10 = alloca %union.PORT_DIR_Type, align 4
  %11 = alloca %union.PORT_DIR_Type, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !9111, metadata !DIExpression()), !dbg !9112
  store %struct.uart_config* %1, %struct.uart_config** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.uart_config** %5, metadata !9113, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9115, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %7, metadata !9117, metadata !DIExpression()), !dbg !9119
  %12 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !9120
  %13 = getelementptr inbounds %struct.device.73, %struct.device.73* %12, i32 0, i32 1, !dbg !9121
  %14 = load i8*, i8** %13, align 4, !dbg !9121
  %15 = bitcast i8* %14 to %struct.uart_sam0_dev_cfg*, !dbg !9120
  store %struct.uart_sam0_dev_cfg* %15, %struct.uart_sam0_dev_cfg** %7, align 4, !dbg !9119
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %8, metadata !9122, metadata !DIExpression()), !dbg !9125
  %16 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !9126
  %17 = getelementptr inbounds %struct.device.73, %struct.device.73* %16, i32 0, i32 4, !dbg !9127
  %18 = load i8*, i8** %17, align 4, !dbg !9127
  %19 = bitcast i8* %18 to %struct.uart_sam0_dev_data*, !dbg !9126
  store %struct.uart_sam0_dev_data* %19, %struct.uart_sam0_dev_data** %8, align 4, !dbg !9125
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %9, metadata !9128, metadata !DIExpression()), !dbg !9129
  %20 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %7, align 4, !dbg !9130
  %21 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %20, i32 0, i32 0, !dbg !9131
  %22 = load %struct.SercomUsart*, %struct.SercomUsart** %21, align 4, !dbg !9131
  store %struct.SercomUsart* %22, %struct.SercomUsart** %9, align 4, !dbg !9129
  %23 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9132
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %23) #10, !dbg !9133
  %24 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9134
  %25 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %24, i32 0, i32 0, !dbg !9135
  %26 = bitcast %union.PORT_DIR_Type* %25 to %union.anon.68*, !dbg !9136
  %27 = bitcast %union.anon.68* %26 to i32*, !dbg !9137
  %28 = load volatile i32, i32* %27, align 4, !dbg !9138
  %29 = and i32 %28, -3, !dbg !9138
  %30 = or i32 %29, 0, !dbg !9138
  store volatile i32 %30, i32* %27, align 4, !dbg !9138
  %31 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9139
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %31) #10, !dbg !9140
  %32 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9141
  %33 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %32, i32 0, i32 4, !dbg !9143
  %34 = load i8, i8* %33, align 1, !dbg !9143
  %35 = zext i8 %34 to i32, !dbg !9141
  %36 = icmp ne i32 %35, 0, !dbg !9144
  br i1 %36, label %37, label %38, !dbg !9145

37:                                               ; preds = %2
  store i32 -134, i32* %3, align 4, !dbg !9146
  br label %193, !dbg !9146

38:                                               ; preds = %2
  %39 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9148
  %40 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %39, i32 0, i32 4, !dbg !9149
  %41 = load i8, i8* %40, align 1, !dbg !9149
  %42 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !9150
  %43 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %42, i32 0, i32 0, !dbg !9151
  %44 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %43, i32 0, i32 4, !dbg !9152
  store i8 %41, i8* %44, align 1, !dbg !9153
  call void @llvm.dbg.declare(metadata %union.PORT_DIR_Type* %10, metadata !9154, metadata !DIExpression()), !dbg !9155
  %45 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9156
  %46 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %45, i32 0, i32 0, !dbg !9157
  %47 = bitcast %union.PORT_DIR_Type* %10 to i8*, !dbg !9157
  %48 = bitcast %union.PORT_DIR_Type* %46 to i8*, !dbg !9157
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %47, i8* align 4 %48, i32 4, i1 true), !dbg !9157
  call void @llvm.dbg.declare(metadata %union.PORT_DIR_Type* %11, metadata !9158, metadata !DIExpression()), !dbg !9159
  %49 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9160
  %50 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %49, i32 0, i32 1, !dbg !9161
  %51 = bitcast %union.PORT_DIR_Type* %11 to i8*, !dbg !9161
  %52 = bitcast %union.PORT_DIR_Type* %50 to i8*, !dbg !9161
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %51, i8* align 4 %52, i32 4, i1 true), !dbg !9161
  %53 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9162
  %54 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %53, i32 0, i32 1, !dbg !9163
  %55 = load i8, i8* %54, align 4, !dbg !9163
  %56 = zext i8 %55 to i32, !dbg !9162
  switch i32 %56, label %85 [
    i32 0, label %57
    i32 1, label %63
    i32 2, label %74
  ], !dbg !9164

57:                                               ; preds = %38
  %58 = bitcast %union.PORT_DIR_Type* %10 to %union.anon.68*, !dbg !9165
  %59 = bitcast %union.anon.68* %58 to i32*, !dbg !9167
  %60 = load i32, i32* %59, align 4, !dbg !9168
  %61 = and i32 %60, -251658241, !dbg !9168
  %62 = or i32 %61, 0, !dbg !9168
  store i32 %62, i32* %59, align 4, !dbg !9168
  br label %86, !dbg !9169

63:                                               ; preds = %38
  %64 = bitcast %union.PORT_DIR_Type* %10 to %union.anon.68*, !dbg !9170
  %65 = bitcast %union.anon.68* %64 to i32*, !dbg !9171
  %66 = load i32, i32* %65, align 4, !dbg !9172
  %67 = and i32 %66, -251658241, !dbg !9172
  %68 = or i32 %67, 16777216, !dbg !9172
  store i32 %68, i32* %65, align 4, !dbg !9172
  %69 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9173
  %70 = bitcast %union.anon.68* %69 to i32*, !dbg !9174
  %71 = load i32, i32* %70, align 4, !dbg !9175
  %72 = and i32 %71, -8193, !dbg !9175
  %73 = or i32 %72, 8192, !dbg !9175
  store i32 %73, i32* %70, align 4, !dbg !9175
  br label %86, !dbg !9176

74:                                               ; preds = %38
  %75 = bitcast %union.PORT_DIR_Type* %10 to %union.anon.68*, !dbg !9177
  %76 = bitcast %union.anon.68* %75 to i32*, !dbg !9178
  %77 = load i32, i32* %76, align 4, !dbg !9179
  %78 = and i32 %77, -251658241, !dbg !9179
  %79 = or i32 %78, 16777216, !dbg !9179
  store i32 %79, i32* %76, align 4, !dbg !9179
  %80 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9180
  %81 = bitcast %union.anon.68* %80 to i32*, !dbg !9181
  %82 = load i32, i32* %81, align 4, !dbg !9182
  %83 = and i32 %82, -8193, !dbg !9182
  %84 = or i32 %83, 0, !dbg !9182
  store i32 %84, i32* %81, align 4, !dbg !9182
  br label %86, !dbg !9183

85:                                               ; preds = %38
  store i32 -134, i32* %3, align 4, !dbg !9184
  br label %193, !dbg !9184

86:                                               ; preds = %74, %63, %57
  %87 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9185
  %88 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %87, i32 0, i32 1, !dbg !9186
  %89 = load i8, i8* %88, align 4, !dbg !9186
  %90 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !9187
  %91 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %90, i32 0, i32 0, !dbg !9188
  %92 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %91, i32 0, i32 1, !dbg !9189
  store i8 %89, i8* %92, align 4, !dbg !9190
  %93 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9191
  %94 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %93, i32 0, i32 2, !dbg !9192
  %95 = load i8, i8* %94, align 1, !dbg !9192
  %96 = zext i8 %95 to i32, !dbg !9191
  switch i32 %96, label %109 [
    i32 1, label %97
    i32 3, label %103
  ], !dbg !9193

97:                                               ; preds = %86
  %98 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9194
  %99 = bitcast %union.anon.68* %98 to i32*, !dbg !9196
  %100 = load i32, i32* %99, align 4, !dbg !9197
  %101 = and i32 %100, -65, !dbg !9197
  %102 = or i32 %101, 0, !dbg !9197
  store i32 %102, i32* %99, align 4, !dbg !9197
  br label %110, !dbg !9198

103:                                              ; preds = %86
  %104 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9199
  %105 = bitcast %union.anon.68* %104 to i32*, !dbg !9200
  %106 = load i32, i32* %105, align 4, !dbg !9201
  %107 = and i32 %106, -65, !dbg !9201
  %108 = or i32 %107, 64, !dbg !9201
  store i32 %108, i32* %105, align 4, !dbg !9201
  br label %110, !dbg !9202

109:                                              ; preds = %86
  store i32 -134, i32* %3, align 4, !dbg !9203
  br label %193, !dbg !9203

110:                                              ; preds = %103, %97
  %111 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9204
  %112 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %111, i32 0, i32 2, !dbg !9205
  %113 = load i8, i8* %112, align 1, !dbg !9205
  %114 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !9206
  %115 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %114, i32 0, i32 0, !dbg !9207
  %116 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %115, i32 0, i32 2, !dbg !9208
  store i8 %113, i8* %116, align 1, !dbg !9209
  %117 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9210
  %118 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %117, i32 0, i32 3, !dbg !9211
  %119 = load i8, i8* %118, align 2, !dbg !9211
  %120 = zext i8 %119 to i32, !dbg !9210
  switch i32 %120, label %151 [
    i32 0, label %121
    i32 1, label %127
    i32 2, label %133
    i32 3, label %139
    i32 4, label %145
  ], !dbg !9212

121:                                              ; preds = %110
  %122 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9213
  %123 = bitcast %union.anon.68* %122 to i32*, !dbg !9215
  %124 = load i32, i32* %123, align 4, !dbg !9216
  %125 = and i32 %124, -8, !dbg !9216
  %126 = or i32 %125, 5, !dbg !9216
  store i32 %126, i32* %123, align 4, !dbg !9216
  br label %152, !dbg !9217

127:                                              ; preds = %110
  %128 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9218
  %129 = bitcast %union.anon.68* %128 to i32*, !dbg !9219
  %130 = load i32, i32* %129, align 4, !dbg !9220
  %131 = and i32 %130, -8, !dbg !9220
  %132 = or i32 %131, 6, !dbg !9220
  store i32 %132, i32* %129, align 4, !dbg !9220
  br label %152, !dbg !9221

133:                                              ; preds = %110
  %134 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9222
  %135 = bitcast %union.anon.68* %134 to i32*, !dbg !9223
  %136 = load i32, i32* %135, align 4, !dbg !9224
  %137 = and i32 %136, -8, !dbg !9224
  %138 = or i32 %137, 7, !dbg !9224
  store i32 %138, i32* %135, align 4, !dbg !9224
  br label %152, !dbg !9225

139:                                              ; preds = %110
  %140 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9226
  %141 = bitcast %union.anon.68* %140 to i32*, !dbg !9227
  %142 = load i32, i32* %141, align 4, !dbg !9228
  %143 = and i32 %142, -8, !dbg !9228
  %144 = or i32 %143, 0, !dbg !9228
  store i32 %144, i32* %141, align 4, !dbg !9228
  br label %152, !dbg !9229

145:                                              ; preds = %110
  %146 = bitcast %union.PORT_DIR_Type* %11 to %union.anon.68*, !dbg !9230
  %147 = bitcast %union.anon.68* %146 to i32*, !dbg !9231
  %148 = load i32, i32* %147, align 4, !dbg !9232
  %149 = and i32 %148, -8, !dbg !9232
  %150 = or i32 %149, 1, !dbg !9232
  store i32 %150, i32* %147, align 4, !dbg !9232
  br label %152, !dbg !9233

151:                                              ; preds = %110
  store i32 -134, i32* %3, align 4, !dbg !9234
  br label %193, !dbg !9234

152:                                              ; preds = %145, %139, %133, %127, %121
  %153 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9235
  %154 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %153, i32 0, i32 3, !dbg !9236
  %155 = load i8, i8* %154, align 2, !dbg !9236
  %156 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !9237
  %157 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %156, i32 0, i32 0, !dbg !9238
  %158 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %157, i32 0, i32 3, !dbg !9239
  store i8 %155, i8* %158, align 2, !dbg !9240
  %159 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9241
  %160 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %159, i32 0, i32 0, !dbg !9242
  %161 = bitcast %union.PORT_DIR_Type* %160 to i8*, !dbg !9243
  %162 = bitcast %union.PORT_DIR_Type* %10 to i8*, !dbg !9243
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %161, i8* align 4 %162, i32 4, i1 true), !dbg !9243
  %163 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9244
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %163) #10, !dbg !9245
  %164 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9246
  %165 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %164, i32 0, i32 1, !dbg !9247
  %166 = bitcast %union.PORT_DIR_Type* %165 to i8*, !dbg !9248
  %167 = bitcast %union.PORT_DIR_Type* %11 to i8*, !dbg !9248
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %166, i8* align 4 %167, i32 4, i1 true), !dbg !9248
  %168 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9249
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %168) #10, !dbg !9250
  %169 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9251
  %170 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9252
  %171 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %170, i32 0, i32 0, !dbg !9253
  %172 = load i32, i32* %171, align 4, !dbg !9253
  %173 = call i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef %169, i32 noundef %172, i32 noundef 48000000) #10, !dbg !9254
  store i32 %173, i32* %6, align 4, !dbg !9255
  %174 = load i32, i32* %6, align 4, !dbg !9256
  %175 = icmp ne i32 %174, 0, !dbg !9258
  br i1 %175, label %176, label %178, !dbg !9259

176:                                              ; preds = %152
  %177 = load i32, i32* %6, align 4, !dbg !9260
  store i32 %177, i32* %3, align 4, !dbg !9262
  br label %193, !dbg !9262

178:                                              ; preds = %152
  %179 = load %struct.uart_config*, %struct.uart_config** %5, align 4, !dbg !9263
  %180 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %179, i32 0, i32 0, !dbg !9264
  %181 = load i32, i32* %180, align 4, !dbg !9264
  %182 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %8, align 4, !dbg !9265
  %183 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %182, i32 0, i32 0, !dbg !9266
  %184 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %183, i32 0, i32 0, !dbg !9267
  store i32 %181, i32* %184, align 4, !dbg !9268
  %185 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9269
  %186 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %185, i32 0, i32 0, !dbg !9270
  %187 = bitcast %union.PORT_DIR_Type* %186 to %union.anon.68*, !dbg !9271
  %188 = bitcast %union.anon.68* %187 to i32*, !dbg !9272
  %189 = load volatile i32, i32* %188, align 4, !dbg !9273
  %190 = and i32 %189, -3, !dbg !9273
  %191 = or i32 %190, 2, !dbg !9273
  store volatile i32 %191, i32* %188, align 4, !dbg !9273
  %192 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9274
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %192) #10, !dbg !9275
  store i32 0, i32* %3, align 4, !dbg !9276
  br label %193, !dbg !9276

193:                                              ; preds = %178, %176, %151, %109, %85, %37
  %194 = load i32, i32* %3, align 4, !dbg !9277
  ret i32 %194, !dbg !9277
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_config_get(%struct.device.73* noundef %0, %struct.uart_config* noundef %1) #1 !dbg !9278 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca %struct.uart_config*, align 4
  %5 = alloca %struct.uart_sam0_dev_data*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9279, metadata !DIExpression()), !dbg !9280
  store %struct.uart_config* %1, %struct.uart_config** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.uart_config** %4, metadata !9281, metadata !DIExpression()), !dbg !9282
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %5, metadata !9283, metadata !DIExpression()), !dbg !9284
  %6 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9285
  %7 = getelementptr inbounds %struct.device.73, %struct.device.73* %6, i32 0, i32 4, !dbg !9286
  %8 = load i8*, i8** %7, align 4, !dbg !9286
  %9 = bitcast i8* %8 to %struct.uart_sam0_dev_data*, !dbg !9285
  store %struct.uart_sam0_dev_data* %9, %struct.uart_sam0_dev_data** %5, align 4, !dbg !9284
  %10 = load %struct.uart_config*, %struct.uart_config** %4, align 4, !dbg !9287
  %11 = bitcast %struct.uart_config* %10 to i8*, !dbg !9287
  %12 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %5, align 4, !dbg !9288
  %13 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %12, i32 0, i32 0, !dbg !9289
  %14 = bitcast %struct.uart_config* %13 to i8*, !dbg !9290
  %15 = call i8* @memcpy(i8* noundef %11, i8* noundef %14, i32 noundef 8) #10, !dbg !9291
  ret i32 0, !dbg !9292
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_fifo_fill(%struct.device.73* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !9293 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.device.73*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %9 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %5, metadata !9294, metadata !DIExpression()), !dbg !9295
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9296, metadata !DIExpression()), !dbg !9297
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9298, metadata !DIExpression()), !dbg !9299
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %8, metadata !9300, metadata !DIExpression()), !dbg !9301
  %10 = load %struct.device.73*, %struct.device.73** %5, align 4, !dbg !9302
  %11 = getelementptr inbounds %struct.device.73, %struct.device.73* %10, i32 0, i32 1, !dbg !9303
  %12 = load i8*, i8** %11, align 4, !dbg !9303
  %13 = bitcast i8* %12 to %struct.uart_sam0_dev_cfg*, !dbg !9302
  store %struct.uart_sam0_dev_cfg* %13, %struct.uart_sam0_dev_cfg** %8, align 4, !dbg !9301
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %9, metadata !9304, metadata !DIExpression()), !dbg !9305
  %14 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %8, align 4, !dbg !9306
  %15 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %14, i32 0, i32 0, !dbg !9307
  %16 = load %struct.SercomUsart*, %struct.SercomUsart** %15, align 4, !dbg !9307
  store %struct.SercomUsart* %16, %struct.SercomUsart** %9, align 4, !dbg !9305
  %17 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9308
  %18 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %17, i32 0, i32 10, !dbg !9310
  %19 = bitcast %union.PORT_PMUX_Type* %18 to %struct.z_thread_stack_element*, !dbg !9311
  %20 = bitcast %struct.z_thread_stack_element* %19 to i8*, !dbg !9312
  %21 = load volatile i8, i8* %20, align 4, !dbg !9312
  %22 = and i8 %21, 1, !dbg !9312
  %23 = zext i8 %22 to i32, !dbg !9308
  %24 = icmp ne i32 %23, 0, !dbg !9308
  br i1 %24, label %25, label %36, !dbg !9313

25:                                               ; preds = %3
  %26 = load i32, i32* %7, align 4, !dbg !9314
  %27 = icmp sge i32 %26, 1, !dbg !9315
  br i1 %27, label %28, label %36, !dbg !9316

28:                                               ; preds = %25
  %29 = load i8*, i8** %6, align 4, !dbg !9317
  %30 = getelementptr inbounds i8, i8* %29, i32 0, !dbg !9317
  %31 = load i8, i8* %30, align 1, !dbg !9317
  %32 = zext i8 %31 to i16, !dbg !9317
  %33 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9319
  %34 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %33, i32 0, i32 15, !dbg !9320
  %35 = bitcast %union.GCLK_CLKCTRL_Type* %34 to i16*, !dbg !9321
  store volatile i16 %32, i16* %35, align 4, !dbg !9322
  store i32 1, i32* %4, align 4, !dbg !9323
  br label %37, !dbg !9323

36:                                               ; preds = %25, %3
  store i32 0, i32* %4, align 4, !dbg !9324
  br label %37, !dbg !9324

37:                                               ; preds = %36, %28
  %38 = load i32, i32* %4, align 4, !dbg !9326
  ret i32 %38, !dbg !9326
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_fifo_read(%struct.device.73* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !9327 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.device.73*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %9 = alloca %struct.SercomUsart*, align 4
  %10 = alloca i8, align 1
  store %struct.device.73* %0, %struct.device.73** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %5, metadata !9328, metadata !DIExpression()), !dbg !9329
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9330, metadata !DIExpression()), !dbg !9331
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9332, metadata !DIExpression()), !dbg !9333
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %8, metadata !9334, metadata !DIExpression()), !dbg !9335
  %11 = load %struct.device.73*, %struct.device.73** %5, align 4, !dbg !9336
  %12 = getelementptr inbounds %struct.device.73, %struct.device.73* %11, i32 0, i32 1, !dbg !9337
  %13 = load i8*, i8** %12, align 4, !dbg !9337
  %14 = bitcast i8* %13 to %struct.uart_sam0_dev_cfg*, !dbg !9336
  store %struct.uart_sam0_dev_cfg* %14, %struct.uart_sam0_dev_cfg** %8, align 4, !dbg !9335
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %9, metadata !9338, metadata !DIExpression()), !dbg !9339
  %15 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %8, align 4, !dbg !9340
  %16 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %15, i32 0, i32 0, !dbg !9341
  %17 = load %struct.SercomUsart*, %struct.SercomUsart** %16, align 4, !dbg !9341
  store %struct.SercomUsart* %17, %struct.SercomUsart** %9, align 4, !dbg !9339
  %18 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9342
  %19 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %18, i32 0, i32 10, !dbg !9344
  %20 = bitcast %union.PORT_PMUX_Type* %19 to %struct.z_thread_stack_element*, !dbg !9345
  %21 = bitcast %struct.z_thread_stack_element* %20 to i8*, !dbg !9346
  %22 = load volatile i8, i8* %21, align 4, !dbg !9346
  %23 = lshr i8 %22, 2, !dbg !9346
  %24 = and i8 %23, 1, !dbg !9346
  %25 = icmp ne i8 %24, 0, !dbg !9342
  br i1 %25, label %26, label %38, !dbg !9347

26:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i8* %10, metadata !9348, metadata !DIExpression()), !dbg !9350
  %27 = load %struct.SercomUsart*, %struct.SercomUsart** %9, align 4, !dbg !9351
  %28 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %27, i32 0, i32 15, !dbg !9352
  %29 = bitcast %union.GCLK_CLKCTRL_Type* %28 to i16*, !dbg !9353
  %30 = load volatile i16, i16* %29, align 4, !dbg !9353
  %31 = trunc i16 %30 to i8, !dbg !9351
  store i8 %31, i8* %10, align 1, !dbg !9350
  %32 = load i32, i32* %7, align 4, !dbg !9354
  %33 = icmp sge i32 %32, 1, !dbg !9356
  br i1 %33, label %34, label %37, !dbg !9357

34:                                               ; preds = %26
  %35 = load i8, i8* %10, align 1, !dbg !9358
  %36 = load i8*, i8** %6, align 4, !dbg !9360
  store i8 %35, i8* %36, align 1, !dbg !9361
  store i32 1, i32* %4, align 4, !dbg !9362
  br label %39, !dbg !9362

37:                                               ; preds = %26
  store i32 -22, i32* %4, align 4, !dbg !9363
  br label %39, !dbg !9363

38:                                               ; preds = %3
  store i32 0, i32* %4, align 4, !dbg !9365
  br label %39, !dbg !9365

39:                                               ; preds = %38, %37, %34
  %40 = load i32, i32* %4, align 4, !dbg !9366
  ret i32 %40, !dbg !9366
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_tx_enable(%struct.device.73* noundef %0) #1 !dbg !9367 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9368, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9370, metadata !DIExpression()), !dbg !9371
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9372
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9373
  %7 = load i8*, i8** %6, align 4, !dbg !9373
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9372
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9371
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9374, metadata !DIExpression()), !dbg !9375
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9376
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9377
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9377
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9375
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9378
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 8, !dbg !9379
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !9380
  store volatile i8 3, i8* %14, align 2, !dbg !9381
  ret void, !dbg !9382
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_tx_disable(%struct.device.73* noundef %0) #1 !dbg !9383 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9384, metadata !DIExpression()), !dbg !9385
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9386, metadata !DIExpression()), !dbg !9387
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9388
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9389
  %7 = load i8*, i8** %6, align 4, !dbg !9389
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9388
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9387
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9390, metadata !DIExpression()), !dbg !9391
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9392
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9393
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9393
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9391
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9394
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 6, !dbg !9395
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !9396
  store volatile i8 3, i8* %14, align 4, !dbg !9397
  ret void, !dbg !9398
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_tx_ready(%struct.device.73* noundef %0) #1 !dbg !9399 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9400, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9402, metadata !DIExpression()), !dbg !9403
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9404
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9405
  %7 = load i8*, i8** %6, align 4, !dbg !9405
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9404
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9403
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9406, metadata !DIExpression()), !dbg !9407
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9408
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9409
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9409
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9407
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9410
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 10, !dbg !9411
  %14 = bitcast %union.PORT_PMUX_Type* %13 to %struct.z_thread_stack_element*, !dbg !9412
  %15 = bitcast %struct.z_thread_stack_element* %14 to i8*, !dbg !9413
  %16 = load volatile i8, i8* %15, align 4, !dbg !9413
  %17 = and i8 %16, 1, !dbg !9413
  %18 = zext i8 %17 to i32, !dbg !9410
  %19 = icmp ne i32 %18, 0, !dbg !9414
  br i1 %19, label %20, label %29, !dbg !9415

20:                                               ; preds = %1
  %21 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9416
  %22 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %21, i32 0, i32 8, !dbg !9417
  %23 = bitcast %union.PORT_PMUX_Type* %22 to %struct.z_thread_stack_element*, !dbg !9418
  %24 = bitcast %struct.z_thread_stack_element* %23 to i8*, !dbg !9419
  %25 = load volatile i8, i8* %24, align 2, !dbg !9419
  %26 = and i8 %25, 1, !dbg !9419
  %27 = zext i8 %26 to i32, !dbg !9416
  %28 = icmp ne i32 %27, 0, !dbg !9420
  br label %29

29:                                               ; preds = %20, %1
  %30 = phi i1 [ false, %1 ], [ %28, %20 ], !dbg !9421
  %31 = zext i1 %30 to i32, !dbg !9415
  ret i32 %31, !dbg !9422
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_rx_enable(%struct.device.73* noundef %0) #1 !dbg !9423 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9424, metadata !DIExpression()), !dbg !9425
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9426, metadata !DIExpression()), !dbg !9427
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9428
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9429
  %7 = load i8*, i8** %6, align 4, !dbg !9429
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9428
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9427
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9430, metadata !DIExpression()), !dbg !9431
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9432
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9433
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9433
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9431
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9434
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 8, !dbg !9435
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !9436
  store volatile i8 4, i8* %14, align 2, !dbg !9437
  ret void, !dbg !9438
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_rx_disable(%struct.device.73* noundef %0) #1 !dbg !9439 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9440, metadata !DIExpression()), !dbg !9441
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9442, metadata !DIExpression()), !dbg !9443
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9444
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9445
  %7 = load i8*, i8** %6, align 4, !dbg !9445
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9444
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9443
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9446, metadata !DIExpression()), !dbg !9447
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9448
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9449
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9449
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9447
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9450
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 6, !dbg !9451
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !9452
  store volatile i8 4, i8* %14, align 4, !dbg !9453
  ret void, !dbg !9454
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_tx_complete(%struct.device.73* noundef %0) #1 !dbg !9455 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9456, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9458, metadata !DIExpression()), !dbg !9459
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9460
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9461
  %7 = load i8*, i8** %6, align 4, !dbg !9461
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9460
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9459
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9462, metadata !DIExpression()), !dbg !9463
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9464
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9465
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9465
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9463
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9466
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 10, !dbg !9467
  %14 = bitcast %union.PORT_PMUX_Type* %13 to %struct.z_thread_stack_element*, !dbg !9468
  %15 = bitcast %struct.z_thread_stack_element* %14 to i8*, !dbg !9469
  %16 = load volatile i8, i8* %15, align 4, !dbg !9469
  %17 = lshr i8 %16, 1, !dbg !9469
  %18 = and i8 %17, 1, !dbg !9469
  %19 = zext i8 %18 to i32, !dbg !9466
  %20 = icmp ne i32 %19, 0, !dbg !9470
  br i1 %20, label %21, label %31, !dbg !9471

21:                                               ; preds = %1
  %22 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9472
  %23 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %22, i32 0, i32 8, !dbg !9473
  %24 = bitcast %union.PORT_PMUX_Type* %23 to %struct.z_thread_stack_element*, !dbg !9474
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !9475
  %26 = load volatile i8, i8* %25, align 2, !dbg !9475
  %27 = lshr i8 %26, 1, !dbg !9475
  %28 = and i8 %27, 1, !dbg !9475
  %29 = zext i8 %28 to i32, !dbg !9472
  %30 = icmp ne i32 %29, 0, !dbg !9476
  br label %31

31:                                               ; preds = %21, %1
  %32 = phi i1 [ false, %1 ], [ %30, %21 ], !dbg !9477
  %33 = zext i1 %32 to i32, !dbg !9471
  ret i32 %33, !dbg !9478
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_rx_ready(%struct.device.73* noundef %0) #1 !dbg !9479 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9480, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9482, metadata !DIExpression()), !dbg !9483
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9484
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9485
  %7 = load i8*, i8** %6, align 4, !dbg !9485
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9484
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9483
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9486, metadata !DIExpression()), !dbg !9487
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9488
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9489
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9489
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9487
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9490
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 10, !dbg !9491
  %14 = bitcast %union.PORT_PMUX_Type* %13 to %struct.z_thread_stack_element*, !dbg !9492
  %15 = bitcast %struct.z_thread_stack_element* %14 to i8*, !dbg !9493
  %16 = load volatile i8, i8* %15, align 4, !dbg !9493
  %17 = lshr i8 %16, 2, !dbg !9493
  %18 = and i8 %17, 1, !dbg !9493
  %19 = zext i8 %18 to i32, !dbg !9490
  %20 = icmp ne i32 %19, 0, !dbg !9494
  %21 = zext i1 %20 to i32, !dbg !9494
  ret i32 %21, !dbg !9495
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_is_pending(%struct.device.73* noundef %0) #1 !dbg !9496 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9497, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9499, metadata !DIExpression()), !dbg !9500
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9501
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9502
  %7 = load i8*, i8** %6, align 4, !dbg !9502
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9501
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9500
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9503, metadata !DIExpression()), !dbg !9504
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9505
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9506
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9506
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9504
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9507
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 8, !dbg !9508
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !9509
  %15 = load volatile i8, i8* %14, align 2, !dbg !9509
  %16 = zext i8 %15 to i32, !dbg !9507
  %17 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9510
  %18 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %17, i32 0, i32 10, !dbg !9511
  %19 = bitcast %union.PORT_PMUX_Type* %18 to i8*, !dbg !9512
  %20 = load volatile i8, i8* %19, align 4, !dbg !9512
  %21 = zext i8 %20 to i32, !dbg !9510
  %22 = and i32 %16, %21, !dbg !9513
  %23 = icmp ne i32 %22, 0, !dbg !9514
  %24 = zext i1 %23 to i32, !dbg !9514
  ret i32 %24, !dbg !9515
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_irq_update(%struct.device.73* noundef %0) #1 !dbg !9516 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %4 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9517, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %3, metadata !9519, metadata !DIExpression()), !dbg !9520
  %5 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9521
  %6 = getelementptr inbounds %struct.device.73, %struct.device.73* %5, i32 0, i32 1, !dbg !9522
  %7 = load i8*, i8** %6, align 4, !dbg !9522
  %8 = bitcast i8* %7 to %struct.uart_sam0_dev_cfg*, !dbg !9521
  store %struct.uart_sam0_dev_cfg* %8, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9520
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %4, metadata !9523, metadata !DIExpression()), !dbg !9524
  %9 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %3, align 4, !dbg !9525
  %10 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %9, i32 0, i32 0, !dbg !9526
  %11 = load %struct.SercomUsart*, %struct.SercomUsart** %10, align 4, !dbg !9526
  store %struct.SercomUsart* %11, %struct.SercomUsart** %4, align 4, !dbg !9524
  %12 = load %struct.SercomUsart*, %struct.SercomUsart** %4, align 4, !dbg !9527
  %13 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %12, i32 0, i32 10, !dbg !9528
  %14 = bitcast %union.PORT_PMUX_Type* %13 to i8*, !dbg !9529
  store volatile i8 8, i8* %14, align 4, !dbg !9530
  ret i32 1, !dbg !9531
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_callback_set(%struct.device.73* noundef %0, void (%struct.device.73*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !9532 {
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca void (%struct.device.73*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca %struct.uart_sam0_dev_data*, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !9533, metadata !DIExpression()), !dbg !9534
  store void (%struct.device.73*, i8*)* %1, void (%struct.device.73*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (%struct.device.73*, i8*)** %5, metadata !9535, metadata !DIExpression()), !dbg !9536
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !9537, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %7, metadata !9539, metadata !DIExpression()), !dbg !9540
  %8 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !9541
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 4, !dbg !9542
  %10 = load i8*, i8** %9, align 4, !dbg !9542
  %11 = bitcast i8* %10 to %struct.uart_sam0_dev_data*, !dbg !9541
  store %struct.uart_sam0_dev_data* %11, %struct.uart_sam0_dev_data** %7, align 4, !dbg !9540
  %12 = load void (%struct.device.73*, i8*)*, void (%struct.device.73*, i8*)** %5, align 4, !dbg !9543
  %13 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %7, align 4, !dbg !9544
  %14 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %13, i32 0, i32 1, !dbg !9545
  store void (%struct.device.73*, i8*)* %12, void (%struct.device.73*, i8*)** %14, align 4, !dbg !9546
  %15 = load i8*, i8** %6, align 4, !dbg !9547
  %16 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %7, align 4, !dbg !9548
  %17 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %16, i32 0, i32 2, !dbg !9549
  store i8* %15, i8** %17, align 4, !dbg !9550
  ret void, !dbg !9551
}

; Function Attrs: noinline nounwind optnone
define internal void @wait_synchronization.26(%struct.SercomUsart* noundef %0) #1 !dbg !9552 {
  %2 = alloca %struct.SercomUsart*, align 4
  store %struct.SercomUsart* %0, %struct.SercomUsart** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %2, metadata !9555, metadata !DIExpression()), !dbg !9556
  br label %3, !dbg !9557

3:                                                ; preds = %10, %1
  %4 = load %struct.SercomUsart*, %struct.SercomUsart** %2, align 4, !dbg !9558
  %5 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %4, i32 0, i32 13, !dbg !9559
  %6 = bitcast %union.PORT_DIR_Type* %5 to i32*, !dbg !9560
  %7 = load volatile i32, i32* %6, align 4, !dbg !9560
  %8 = and i32 %7, 7, !dbg !9561
  %9 = icmp ne i32 %8, 0, !dbg !9562
  br i1 %9, label %10, label %11, !dbg !9557

10:                                               ; preds = %3
  br label %3, !dbg !9557, !llvm.loop !9563

11:                                               ; preds = %3
  ret void, !dbg !9565
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !9566 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.SercomUsart*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i16, align 2
  store %struct.SercomUsart* %0, %struct.SercomUsart** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %5, metadata !9569, metadata !DIExpression()), !dbg !9570
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9571, metadata !DIExpression()), !dbg !9572
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9573, metadata !DIExpression()), !dbg !9574
  call void @llvm.dbg.declare(metadata i64* %8, metadata !9575, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.declare(metadata i16* %9, metadata !9577, metadata !DIExpression()), !dbg !9578
  %10 = load i32, i32* %6, align 4, !dbg !9579
  %11 = zext i32 %10 to i64, !dbg !9580
  %12 = shl i64 %11, 20, !dbg !9581
  store i64 %12, i64* %8, align 8, !dbg !9582
  %13 = load i64, i64* %8, align 8, !dbg !9583
  %14 = load i32, i32* %7, align 4, !dbg !9584
  %15 = lshr i32 %14, 1, !dbg !9585
  %16 = zext i32 %15 to i64, !dbg !9586
  %17 = add i64 %13, %16, !dbg !9587
  %18 = load i32, i32* %7, align 4, !dbg !9588
  %19 = zext i32 %18 to i64, !dbg !9588
  %20 = udiv i64 %17, %19, !dbg !9589
  store i64 %20, i64* %8, align 8, !dbg !9590
  %21 = load i64, i64* %8, align 8, !dbg !9591
  %22 = icmp ult i64 %21, 1, !dbg !9593
  br i1 %22, label %26, label %23, !dbg !9594

23:                                               ; preds = %3
  %24 = load i64, i64* %8, align 8, !dbg !9595
  %25 = icmp ugt i64 %24, 65535, !dbg !9596
  br i1 %25, label %26, label %27, !dbg !9597

26:                                               ; preds = %23, %3
  store i32 -34, i32* %4, align 4, !dbg !9598
  br label %38, !dbg !9598

27:                                               ; preds = %23
  %28 = load i64, i64* %8, align 8, !dbg !9600
  %29 = trunc i64 %28 to i16, !dbg !9601
  %30 = zext i16 %29 to i32, !dbg !9601
  %31 = sub nsw i32 65536, %30, !dbg !9602
  %32 = trunc i32 %31 to i16, !dbg !9603
  store i16 %32, i16* %9, align 2, !dbg !9604
  %33 = load i16, i16* %9, align 2, !dbg !9605
  %34 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9606
  %35 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %34, i32 0, i32 3, !dbg !9607
  %36 = bitcast %union.GCLK_CLKCTRL_Type* %35 to i16*, !dbg !9608
  store volatile i16 %33, i16* %36, align 4, !dbg !9609
  %37 = load %struct.SercomUsart*, %struct.SercomUsart** %5, align 4, !dbg !9610
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %37) #10, !dbg !9611
  store i32 0, i32* %4, align 4, !dbg !9612
  br label %38, !dbg !9612

38:                                               ; preds = %27, %26
  %39 = load i32, i32* %4, align 4, !dbg !9613
  ret i32 %39, !dbg !9613
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_config_0(%struct.device.73* noundef %0) #1 !dbg !2249 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9614, metadata !DIExpression()), !dbg !9615
  br label %3, !dbg !9615

3:                                                ; preds = %1
  call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #10, !dbg !9616
  call void @arch_irq_enable(i32 noundef 9) #10, !dbg !9619
  br label %4, !dbg !9619

4:                                                ; preds = %3
  ret void, !dbg !9615
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_irq_config_1(%struct.device.73* noundef %0) #1 !dbg !2481 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9620, metadata !DIExpression()), !dbg !9621
  br label %3, !dbg !9621

3:                                                ; preds = %1
  call void @z_arm_irq_priority_set(i32 noundef 11, i32 noundef 0, i32 noundef 0) #10, !dbg !9622
  call void @arch_irq_enable(i32 noundef 11) #10, !dbg !9625
  br label %4, !dbg !9625

4:                                                ; preds = %3
  ret void, !dbg !9621
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_sam0_isr(%struct.device.73* noundef %0) #1 !dbg !9626 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca %struct.uart_sam0_dev_data*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9627, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %3, metadata !9629, metadata !DIExpression()), !dbg !9630
  %4 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9631
  %5 = getelementptr inbounds %struct.device.73, %struct.device.73* %4, i32 0, i32 4, !dbg !9632
  %6 = load i8*, i8** %5, align 4, !dbg !9632
  %7 = bitcast i8* %6 to %struct.uart_sam0_dev_data*, !dbg !9631
  store %struct.uart_sam0_dev_data* %7, %struct.uart_sam0_dev_data** %3, align 4, !dbg !9630
  %8 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %3, align 4, !dbg !9633
  %9 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %8, i32 0, i32 1, !dbg !9635
  %10 = load void (%struct.device.73*, i8*)*, void (%struct.device.73*, i8*)** %9, align 4, !dbg !9635
  %11 = icmp ne void (%struct.device.73*, i8*)* %10, null, !dbg !9633
  br i1 %11, label %12, label %20, !dbg !9636

12:                                               ; preds = %1
  %13 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %3, align 4, !dbg !9637
  %14 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %13, i32 0, i32 1, !dbg !9639
  %15 = load void (%struct.device.73*, i8*)*, void (%struct.device.73*, i8*)** %14, align 4, !dbg !9639
  %16 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9640
  %17 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %3, align 4, !dbg !9641
  %18 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %17, i32 0, i32 2, !dbg !9642
  %19 = load i8*, i8** %18, align 4, !dbg !9642
  call void %15(%struct.device.73* noundef %16, i8* noundef %19) #10, !dbg !9637
  br label %20, !dbg !9643

20:                                               ; preds = %12, %1
  ret void, !dbg !9644
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_sam0_init(%struct.device.73* noundef %0) #1 !dbg !9645 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.uart_sam0_dev_cfg*, align 4
  %6 = alloca %struct.uart_sam0_dev_data*, align 4
  %7 = alloca %struct.SercomUsart*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !9646, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9648, metadata !DIExpression()), !dbg !9649
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_cfg** %5, metadata !9650, metadata !DIExpression()), !dbg !9651
  %8 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9652
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 1, !dbg !9653
  %10 = load i8*, i8** %9, align 4, !dbg !9653
  %11 = bitcast i8* %10 to %struct.uart_sam0_dev_cfg*, !dbg !9652
  store %struct.uart_sam0_dev_cfg* %11, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9651
  call void @llvm.dbg.declare(metadata %struct.uart_sam0_dev_data** %6, metadata !9654, metadata !DIExpression()), !dbg !9655
  %12 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9656
  %13 = getelementptr inbounds %struct.device.73, %struct.device.73* %12, i32 0, i32 4, !dbg !9657
  %14 = load i8*, i8** %13, align 4, !dbg !9657
  %15 = bitcast i8* %14 to %struct.uart_sam0_dev_data*, !dbg !9656
  store %struct.uart_sam0_dev_data* %15, %struct.uart_sam0_dev_data** %6, align 4, !dbg !9655
  call void @llvm.dbg.declare(metadata %struct.SercomUsart** %7, metadata !9658, metadata !DIExpression()), !dbg !9659
  %16 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9660
  %17 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %16, i32 0, i32 0, !dbg !9661
  %18 = load %struct.SercomUsart*, %struct.SercomUsart** %17, align 4, !dbg !9661
  store %struct.SercomUsart* %18, %struct.SercomUsart** %7, align 4, !dbg !9659
  %19 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9662
  %20 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %19, i32 0, i32 5, !dbg !9663
  %21 = load i16, i16* %20, align 4, !dbg !9663
  %22 = zext i16 %21 to i32, !dbg !9662
  %23 = or i32 %22, 0, !dbg !9664
  %24 = or i32 %23, 16384, !dbg !9665
  %25 = trunc i32 %24 to i16, !dbg !9662
  store volatile i16 %25, i16* getelementptr inbounds (%struct.Gclk, %struct.Gclk* inttoptr (i32 1073744896 to %struct.Gclk*), i32 0, i32 2, i32 0, i32 0), align 2, !dbg !9666
  %26 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9667
  %27 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %26, i32 0, i32 4, !dbg !9668
  %28 = load i32, i32* %27, align 4, !dbg !9668
  %29 = load volatile i32, i32* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !9669
  %30 = or i32 %29, %28, !dbg !9669
  store volatile i32 %30, i32* getelementptr inbounds (%struct.Pm, %struct.Pm* inttoptr (i32 1073742848 to %struct.Pm*), i32 0, i32 11, i32 0, i32 0), align 4, !dbg !9669
  %31 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9670
  %32 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %31, i32 0, i32 6, !dbg !9671
  %33 = bitcast %union.PORT_PMUX_Type* %32 to i8*, !dbg !9672
  store volatile i8 -65, i8* %33, align 4, !dbg !9673
  %34 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9674
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %34) #10, !dbg !9675
  %35 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9676
  %36 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %35, i32 0, i32 2, !dbg !9677
  %37 = load i32, i32* %36, align 4, !dbg !9677
  %38 = or i32 %37, 4, !dbg !9678
  %39 = or i32 %38, 0, !dbg !9679
  %40 = or i32 %39, 0, !dbg !9680
  %41 = or i32 %40, 536870912, !dbg !9681
  %42 = or i32 %41, 1073741824, !dbg !9682
  %43 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9683
  %44 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %43, i32 0, i32 0, !dbg !9684
  %45 = bitcast %union.PORT_DIR_Type* %44 to i32*, !dbg !9685
  store volatile i32 %42, i32* %45, align 4, !dbg !9686
  %46 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9687
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %46) #10, !dbg !9688
  %47 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9689
  %48 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %47, i32 0, i32 7, !dbg !9690
  %49 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %48, align 4, !dbg !9690
  %50 = call i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %49, i8 noundef zeroext 0) #10, !dbg !9691
  store i32 %50, i32* %4, align 4, !dbg !9692
  %51 = load i32, i32* %4, align 4, !dbg !9693
  %52 = icmp slt i32 %51, 0, !dbg !9695
  br i1 %52, label %53, label %55, !dbg !9696

53:                                               ; preds = %1
  %54 = load i32, i32* %4, align 4, !dbg !9697
  store i32 %54, i32* %2, align 4, !dbg !9699
  br label %100, !dbg !9699

55:                                               ; preds = %1
  %56 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !9700
  %57 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %56, i32 0, i32 0, !dbg !9701
  %58 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %57, i32 0, i32 4, !dbg !9702
  store i8 0, i8* %58, align 1, !dbg !9703
  %59 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !9704
  %60 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %59, i32 0, i32 0, !dbg !9705
  %61 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %60, i32 0, i32 1, !dbg !9706
  store i8 0, i8* %61, align 4, !dbg !9707
  %62 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !9708
  %63 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %62, i32 0, i32 0, !dbg !9709
  %64 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %63, i32 0, i32 2, !dbg !9710
  store i8 1, i8* %64, align 1, !dbg !9711
  %65 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !9712
  %66 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %65, i32 0, i32 0, !dbg !9713
  %67 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %66, i32 0, i32 3, !dbg !9714
  store i8 3, i8* %67, align 2, !dbg !9715
  %68 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9716
  %69 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %68, i32 0, i32 1, !dbg !9717
  %70 = bitcast %union.PORT_DIR_Type* %69 to i32*, !dbg !9718
  store volatile i32 196608, i32* %70, align 4, !dbg !9719
  %71 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9720
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %71) #10, !dbg !9721
  %72 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9722
  %73 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9723
  %74 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %73, i32 0, i32 1, !dbg !9724
  %75 = load i32, i32* %74, align 4, !dbg !9724
  %76 = call i32 @uart_sam0_set_baudrate(%struct.SercomUsart* noundef %72, i32 noundef %75, i32 noundef 48000000) #10, !dbg !9725
  store i32 %76, i32* %4, align 4, !dbg !9726
  %77 = load i32, i32* %4, align 4, !dbg !9727
  %78 = icmp ne i32 %77, 0, !dbg !9729
  br i1 %78, label %79, label %81, !dbg !9730

79:                                               ; preds = %55
  %80 = load i32, i32* %4, align 4, !dbg !9731
  store i32 %80, i32* %2, align 4, !dbg !9733
  br label %100, !dbg !9733

81:                                               ; preds = %55
  %82 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9734
  %83 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %82, i32 0, i32 1, !dbg !9735
  %84 = load i32, i32* %83, align 4, !dbg !9735
  %85 = load %struct.uart_sam0_dev_data*, %struct.uart_sam0_dev_data** %6, align 4, !dbg !9736
  %86 = getelementptr inbounds %struct.uart_sam0_dev_data, %struct.uart_sam0_dev_data* %85, i32 0, i32 0, !dbg !9737
  %87 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %86, i32 0, i32 0, !dbg !9738
  store i32 %84, i32* %87, align 4, !dbg !9739
  %88 = load %struct.uart_sam0_dev_cfg*, %struct.uart_sam0_dev_cfg** %5, align 4, !dbg !9740
  %89 = getelementptr inbounds %struct.uart_sam0_dev_cfg, %struct.uart_sam0_dev_cfg* %88, i32 0, i32 6, !dbg !9741
  %90 = load void (%struct.device.73*)*, void (%struct.device.73*)** %89, align 4, !dbg !9741
  %91 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !9742
  call void %90(%struct.device.73* noundef %91) #10, !dbg !9740
  %92 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9743
  %93 = getelementptr inbounds %struct.SercomUsart, %struct.SercomUsart* %92, i32 0, i32 0, !dbg !9744
  %94 = bitcast %union.PORT_DIR_Type* %93 to %union.anon.68*, !dbg !9745
  %95 = bitcast %union.anon.68* %94 to i32*, !dbg !9746
  %96 = load volatile i32, i32* %95, align 4, !dbg !9747
  %97 = and i32 %96, -3, !dbg !9747
  %98 = or i32 %97, 2, !dbg !9747
  store volatile i32 %98, i32* %95, align 4, !dbg !9747
  %99 = load %struct.SercomUsart*, %struct.SercomUsart** %7, align 4, !dbg !9748
  call void @wait_synchronization.26(%struct.SercomUsart* noundef %99) #10, !dbg !9749
  store i32 0, i32* %2, align 4, !dbg !9750
  br label %100, !dbg !9750

100:                                              ; preds = %81, %79, %53
  %101 = load i32, i32* %2, align 4, !dbg !9751
  ret i32 %101, !dbg !9751
}

; Function Attrs: noinline nounwind optnone
define internal i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext %1) #1 !dbg !9752 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.pinctrl_dev_config*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca %struct.pinctrl_state*, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %4, metadata !9755, metadata !DIExpression()), !dbg !9756
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !9757, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9759, metadata !DIExpression()), !dbg !9760
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state** %7, metadata !9761, metadata !DIExpression()), !dbg !9762
  %8 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %4, align 4, !dbg !9763
  %9 = load i8, i8* %5, align 1, !dbg !9764
  %10 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %8, i8 noundef zeroext %9, %struct.pinctrl_state** noundef %7) #10, !dbg !9765
  store i32 %10, i32* %6, align 4, !dbg !9766
  %11 = load i32, i32* %6, align 4, !dbg !9767
  %12 = icmp slt i32 %11, 0, !dbg !9769
  br i1 %12, label %13, label %15, !dbg !9770

13:                                               ; preds = %2
  %14 = load i32, i32* %6, align 4, !dbg !9771
  store i32 %14, i32* %3, align 4, !dbg !9773
  br label %19, !dbg !9773

15:                                               ; preds = %2
  %16 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %4, align 4, !dbg !9774
  %17 = load %struct.pinctrl_state*, %struct.pinctrl_state** %7, align 4, !dbg !9775
  %18 = call i32 @pinctrl_apply_state_direct(%struct.pinctrl_dev_config* noundef %16, %struct.pinctrl_state* noundef %17) #10, !dbg !9776
  store i32 %18, i32* %3, align 4, !dbg !9777
  br label %19, !dbg !9777

19:                                               ; preds = %15, %13
  %20 = load i32, i32* %3, align 4, !dbg !9778
  ret i32 %20, !dbg !9778
}

; Function Attrs: noinline nounwind optnone
define internal i32 @pinctrl_apply_state_direct(%struct.pinctrl_dev_config* noundef %0, %struct.pinctrl_state* noundef %1) #1 !dbg !9779 {
  %3 = alloca %struct.pinctrl_dev_config*, align 4
  %4 = alloca %struct.pinctrl_state*, align 4
  %5 = alloca i32, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %3, metadata !9782, metadata !DIExpression()), !dbg !9783
  store %struct.pinctrl_state* %1, %struct.pinctrl_state** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state** %4, metadata !9784, metadata !DIExpression()), !dbg !9785
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9786, metadata !DIExpression()), !dbg !9787
  %6 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %3, align 4, !dbg !9788
  store i32 0, i32* %5, align 4, !dbg !9789
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9790
  %8 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 0, i32 0, !dbg !9791
  %9 = load i32*, i32** %8, align 4, !dbg !9791
  %10 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9792
  %11 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %10, i32 0, i32 1, !dbg !9793
  %12 = load i8, i8* %11, align 4, !dbg !9793
  %13 = load i32, i32* %5, align 4, !dbg !9794
  %14 = call i32 @pinctrl_configure_pins(i32* noundef %9, i8 noundef zeroext %12, i32 noundef %13) #10, !dbg !9795
  ret i32 %14, !dbg !9796
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_driver_init(%struct.device.73* noundef %0) #1 !dbg !9797 {
  %2 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %2, metadata !9798, metadata !DIExpression()), !dbg !9799
  %3 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !9800
  call void @__NVIC_SetPriority.30(i32 noundef -1, i32 noundef 0) #10, !dbg !9801
  %4 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9802
  %5 = sdiv i32 %4, 10000, !dbg !9802
  %6 = sub nsw i32 %5, 1, !dbg !9803
  store i32 %6, i32* @last_load, align 4, !dbg !9804
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9805
  %7 = load i32, i32* @last_load, align 4, !dbg !9806
  store volatile i32 %7, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 1), align 4, !dbg !9807
  store volatile i32 0, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !9808
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !9809
  %9 = or i32 %8, 7, !dbg !9809
  store volatile i32 %9, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !9809
  ret i32 0, !dbg !9810
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.30(i32 noundef %0, i32 noundef %1) #1 !dbg !9811 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9812, metadata !DIExpression()), !dbg !9813
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9814, metadata !DIExpression()), !dbg !9815
  %5 = load i32, i32* %3, align 4, !dbg !9816
  %6 = icmp sge i32 %5, 0, !dbg !9818
  br i1 %6, label %7, label %29, !dbg !9819

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !9820
  %9 = lshr i32 %8, 2, !dbg !9820
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !9822
  %11 = load volatile i32, i32* %10, align 4, !dbg !9822
  %12 = load i32, i32* %3, align 4, !dbg !9823
  %13 = and i32 %12, 3, !dbg !9823
  %14 = mul i32 %13, 8, !dbg !9823
  %15 = shl i32 255, %14, !dbg !9824
  %16 = xor i32 %15, -1, !dbg !9825
  %17 = and i32 %11, %16, !dbg !9826
  %18 = load i32, i32* %4, align 4, !dbg !9827
  %19 = shl i32 %18, 6, !dbg !9828
  %20 = and i32 %19, 255, !dbg !9829
  %21 = load i32, i32* %3, align 4, !dbg !9830
  %22 = and i32 %21, 3, !dbg !9830
  %23 = mul i32 %22, 8, !dbg !9830
  %24 = shl i32 %20, %23, !dbg !9831
  %25 = or i32 %17, %24, !dbg !9832
  %26 = load i32, i32* %3, align 4, !dbg !9833
  %27 = lshr i32 %26, 2, !dbg !9833
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !9834
  store volatile i32 %25, i32* %28, align 4, !dbg !9835
  br label %55, !dbg !9836

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !9837
  %31 = and i32 %30, 15, !dbg !9837
  %32 = sub i32 %31, 8, !dbg !9837
  %33 = lshr i32 %32, 2, !dbg !9837
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !9839
  %35 = load volatile i32, i32* %34, align 4, !dbg !9839
  %36 = load i32, i32* %3, align 4, !dbg !9840
  %37 = and i32 %36, 3, !dbg !9840
  %38 = mul i32 %37, 8, !dbg !9840
  %39 = shl i32 255, %38, !dbg !9841
  %40 = xor i32 %39, -1, !dbg !9842
  %41 = and i32 %35, %40, !dbg !9843
  %42 = load i32, i32* %4, align 4, !dbg !9844
  %43 = shl i32 %42, 6, !dbg !9845
  %44 = and i32 %43, 255, !dbg !9846
  %45 = load i32, i32* %3, align 4, !dbg !9847
  %46 = and i32 %45, 3, !dbg !9847
  %47 = mul i32 %46, 8, !dbg !9847
  %48 = shl i32 %44, %47, !dbg !9848
  %49 = or i32 %41, %48, !dbg !9849
  %50 = load i32, i32* %3, align 4, !dbg !9850
  %51 = and i32 %50, 15, !dbg !9850
  %52 = sub i32 %51, 8, !dbg !9850
  %53 = lshr i32 %52, 2, !dbg !9850
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !9851
  store volatile i32 %49, i32* %54, align 4, !dbg !9852
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !9853
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec() #1 !dbg !9854 {
  ret i32 48000000, !dbg !9856
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_isr(i8* noundef %0) #1 !dbg !9857 {
  %2 = alloca i8*, align 4
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !9858, metadata !DIExpression()), !dbg !9859
  %4 = load i8*, i8** %2, align 4, !dbg !9860
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9861, metadata !DIExpression()), !dbg !9862
  %5 = call i32 @elapsed() #10, !dbg !9863
  %6 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9864
  %7 = load i32, i32* @cycle_count, align 4, !dbg !9865
  %8 = add i32 %7, %6, !dbg !9865
  store i32 %8, i32* @cycle_count, align 4, !dbg !9865
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9866
  %9 = load i32, i32* @cycle_count, align 4, !dbg !9867
  %10 = load i32, i32* @announced_cycles, align 4, !dbg !9870
  %11 = sub i32 %9, %10, !dbg !9871
  %12 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9872
  %13 = sdiv i32 %12, 10000, !dbg !9872
  %14 = udiv i32 %11, %13, !dbg !9873
  store i32 %14, i32* %3, align 4, !dbg !9874
  %15 = load i32, i32* %3, align 4, !dbg !9875
  %16 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9876
  %17 = sdiv i32 %16, 10000, !dbg !9876
  %18 = mul i32 %15, %17, !dbg !9877
  %19 = load i32, i32* @announced_cycles, align 4, !dbg !9878
  %20 = add i32 %19, %18, !dbg !9878
  store i32 %20, i32* @announced_cycles, align 4, !dbg !9878
  %21 = load i32, i32* %3, align 4, !dbg !9879
  call void @sys_clock_announce(i32 noundef %21) #10, !dbg !9880
  call void @z_arm_int_exit() #10, !dbg !9881
  ret void, !dbg !9882
}

; Function Attrs: noinline nounwind optnone
define internal i32 @elapsed() #1 !dbg !9883 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9884, metadata !DIExpression()), !dbg !9885
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !9886
  store i32 %4, i32* %1, align 4, !dbg !9885
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9887, metadata !DIExpression()), !dbg !9888
  %5 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !9889
  store i32 %5, i32* %2, align 4, !dbg !9888
  call void @llvm.dbg.declare(metadata i32* %3, metadata !9890, metadata !DIExpression()), !dbg !9891
  %6 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !9892
  store i32 %6, i32* %3, align 4, !dbg !9891
  %7 = load i32, i32* %2, align 4, !dbg !9893
  %8 = and i32 %7, 65536, !dbg !9895
  %9 = icmp ne i32 %8, 0, !dbg !9895
  br i1 %9, label %14, label %10, !dbg !9896

10:                                               ; preds = %0
  %11 = load i32, i32* %1, align 4, !dbg !9897
  %12 = load i32, i32* %3, align 4, !dbg !9898
  %13 = icmp ult i32 %11, %12, !dbg !9899
  br i1 %13, label %14, label %19, !dbg !9900

14:                                               ; preds = %10, %0
  %15 = load i32, i32* @last_load, align 4, !dbg !9901
  %16 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9903
  %17 = add i32 %16, %15, !dbg !9903
  store volatile i32 %17, i32* @overflow_cyc, align 4, !dbg !9903
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !9904
  br label %19, !dbg !9905

19:                                               ; preds = %14, %10
  %20 = load i32, i32* @last_load, align 4, !dbg !9906
  %21 = load i32, i32* %3, align 4, !dbg !9907
  %22 = sub i32 %20, %21, !dbg !9908
  %23 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9909
  %24 = add i32 %22, %23, !dbg !9910
  ret i32 %24, !dbg !9911
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) #1 !dbg !9912 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9915, metadata !DIExpression()), !dbg !9916
  %18 = zext i1 %1 to i8
  store i8 %18, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !9917, metadata !DIExpression()), !dbg !9918
  %19 = load i8, i8* %10, align 1, !dbg !9919
  %20 = trunc i8 %19 to i1, !dbg !9919
  br i1 %20, label %21, label %28, !dbg !9921

21:                                               ; preds = %2
  %22 = load i32, i32* %9, align 4, !dbg !9922
  %23 = sext i32 %22 to i64, !dbg !9922
  %24 = icmp eq i64 %23, -1, !dbg !9923
  br i1 %24, label %25, label %28, !dbg !9924

25:                                               ; preds = %21
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !9925
  %27 = and i32 %26, -2, !dbg !9925
  store volatile i32 %27, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !9925
  store i32 -16777216, i32* @last_load, align 4, !dbg !9927
  br label %201, !dbg !9928

28:                                               ; preds = %21, %2
  call void @llvm.dbg.declare(metadata i32* %11, metadata !9929, metadata !DIExpression()), !dbg !9930
  call void @llvm.dbg.declare(metadata i32* %12, metadata !9931, metadata !DIExpression()), !dbg !9932
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9933, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.declare(metadata i32* %14, metadata !9935, metadata !DIExpression()), !dbg !9936
  %29 = load i32, i32* @last_load, align 4, !dbg !9937
  store i32 %29, i32* %14, align 4, !dbg !9936
  %30 = load i32, i32* %9, align 4, !dbg !9938
  %31 = sext i32 %30 to i64, !dbg !9938
  %32 = icmp eq i64 %31, -1, !dbg !9939
  br i1 %32, label %33, label %38, !dbg !9940

33:                                               ; preds = %28
  %34 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9941
  %35 = sdiv i32 %34, 10000, !dbg !9941
  %36 = sdiv i32 16777215, %35, !dbg !9941
  %37 = sub nsw i32 %36, 1, !dbg !9941
  br label %40, !dbg !9940

38:                                               ; preds = %28
  %39 = load i32, i32* %9, align 4, !dbg !9942
  br label %40, !dbg !9940

40:                                               ; preds = %38, %33
  %41 = phi i32 [ %37, %33 ], [ %39, %38 ], !dbg !9940
  store i32 %41, i32* %9, align 4, !dbg !9943
  %42 = load i32, i32* %9, align 4, !dbg !9944
  %43 = sub nsw i32 %42, 1, !dbg !9944
  %44 = icmp sle i32 %43, 0, !dbg !9944
  br i1 %44, label %45, label %46, !dbg !9944

45:                                               ; preds = %40
  br label %64, !dbg !9944

46:                                               ; preds = %40
  %47 = load i32, i32* %9, align 4, !dbg !9944
  %48 = sub nsw i32 %47, 1, !dbg !9944
  %49 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9944
  %50 = sdiv i32 %49, 10000, !dbg !9944
  %51 = sdiv i32 16777215, %50, !dbg !9944
  %52 = sub nsw i32 %51, 1, !dbg !9944
  %53 = icmp slt i32 %48, %52, !dbg !9944
  br i1 %53, label %54, label %57, !dbg !9944

54:                                               ; preds = %46
  %55 = load i32, i32* %9, align 4, !dbg !9944
  %56 = sub nsw i32 %55, 1, !dbg !9944
  br label %62, !dbg !9944

57:                                               ; preds = %46
  %58 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9944
  %59 = sdiv i32 %58, 10000, !dbg !9944
  %60 = sdiv i32 16777215, %59, !dbg !9944
  %61 = sub nsw i32 %60, 1, !dbg !9944
  br label %62, !dbg !9944

62:                                               ; preds = %57, %54
  %63 = phi i32 [ %56, %54 ], [ %61, %57 ], !dbg !9944
  br label %64, !dbg !9944

64:                                               ; preds = %62, %45
  %65 = phi i32 [ 0, %45 ], [ %63, %62 ], !dbg !9944
  store i32 %65, i32* %9, align 4, !dbg !9945
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !9946, metadata !DIExpression()), !dbg !9951
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !9952, metadata !DIExpression()) #9, !dbg !9957
  %66 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !9959
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !9960, metadata !DIExpression()) #9, !dbg !9961
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9962, metadata !DIExpression()) #9, !dbg !9964
  %67 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !9966, !srcloc !9967
  store i32 %67, i32* %4, align 4, !dbg !9966
  %68 = load i32, i32* %4, align 4, !dbg !9968
  %69 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !9969
  store i32 %68, i32* %69, align 4, !dbg !9970
  %70 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !9971
  %71 = load i32, i32* %70, align 4, !dbg !9971
  %72 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !9972
  store i32 %71, i32* %72, align 4, !dbg !9972
  call void @llvm.dbg.declare(metadata i32* %16, metadata !9973, metadata !DIExpression()), !dbg !9974
  %73 = call i32 @elapsed() #10, !dbg !9975
  store i32 %73, i32* %16, align 4, !dbg !9974
  %74 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !9976
  store i32 %74, i32* %12, align 4, !dbg !9977
  %75 = load i32, i32* %16, align 4, !dbg !9978
  %76 = load i32, i32* @cycle_count, align 4, !dbg !9979
  %77 = add i32 %76, %75, !dbg !9979
  store i32 %77, i32* @cycle_count, align 4, !dbg !9979
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9980
  call void @llvm.dbg.declare(metadata i32* %17, metadata !9981, metadata !DIExpression()), !dbg !9982
  %78 = load i32, i32* @cycle_count, align 4, !dbg !9983
  %79 = load i32, i32* @announced_cycles, align 4, !dbg !9984
  %80 = sub i32 %78, %79, !dbg !9985
  store i32 %80, i32* %17, align 4, !dbg !9982
  %81 = load i32, i32* %17, align 4, !dbg !9986
  %82 = icmp slt i32 %81, 0, !dbg !9988
  br i1 %82, label %83, label %95, !dbg !9989

83:                                               ; preds = %64
  %84 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9990
  %85 = sdiv i32 %84, 10000, !dbg !9990
  %86 = sdiv i32 %85, 16, !dbg !9990
  %87 = icmp sgt i32 1024, %86, !dbg !9990
  br i1 %87, label %88, label %89, !dbg !9990

88:                                               ; preds = %83
  br label %93, !dbg !9990

89:                                               ; preds = %83
  %90 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9990
  %91 = sdiv i32 %90, 10000, !dbg !9990
  %92 = sdiv i32 %91, 16, !dbg !9990
  br label %93, !dbg !9990

93:                                               ; preds = %89, %88
  %94 = phi i32 [ 1024, %88 ], [ %92, %89 ], !dbg !9990
  store i32 %94, i32* @last_load, align 4, !dbg !9992
  br label %166, !dbg !9993

95:                                               ; preds = %64
  %96 = load i32, i32* %9, align 4, !dbg !9994
  %97 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9996
  %98 = sdiv i32 %97, 10000, !dbg !9996
  %99 = mul nsw i32 %96, %98, !dbg !9997
  store i32 %99, i32* %11, align 4, !dbg !9998
  %100 = load i32, i32* %17, align 4, !dbg !9999
  %101 = load i32, i32* %11, align 4, !dbg !10000
  %102 = add i32 %101, %100, !dbg !10000
  store i32 %102, i32* %11, align 4, !dbg !10000
  %103 = load i32, i32* %11, align 4, !dbg !10001
  %104 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10002
  %105 = sdiv i32 %104, 10000, !dbg !10002
  %106 = add i32 %103, %105, !dbg !10003
  %107 = sub i32 %106, 1, !dbg !10004
  %108 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10005
  %109 = sdiv i32 %108, 10000, !dbg !10005
  %110 = udiv i32 %107, %109, !dbg !10006
  %111 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10007
  %112 = sdiv i32 %111, 10000, !dbg !10007
  %113 = mul i32 %110, %112, !dbg !10008
  store i32 %113, i32* %11, align 4, !dbg !10009
  %114 = load i32, i32* %17, align 4, !dbg !10010
  %115 = load i32, i32* %11, align 4, !dbg !10011
  %116 = sub i32 %115, %114, !dbg !10011
  store i32 %116, i32* %11, align 4, !dbg !10011
  %117 = load i32, i32* %11, align 4, !dbg !10012
  %118 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10012
  %119 = sdiv i32 %118, 10000, !dbg !10012
  %120 = sdiv i32 %119, 16, !dbg !10012
  %121 = icmp sgt i32 1024, %120, !dbg !10012
  br i1 %121, label %122, label %123, !dbg !10012

122:                                              ; preds = %95
  br label %127, !dbg !10012

123:                                              ; preds = %95
  %124 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10012
  %125 = sdiv i32 %124, 10000, !dbg !10012
  %126 = sdiv i32 %125, 16, !dbg !10012
  br label %127, !dbg !10012

127:                                              ; preds = %123, %122
  %128 = phi i32 [ 1024, %122 ], [ %126, %123 ], !dbg !10012
  %129 = icmp ugt i32 %117, %128, !dbg !10012
  br i1 %129, label %130, label %132, !dbg !10012

130:                                              ; preds = %127
  %131 = load i32, i32* %11, align 4, !dbg !10012
  br label %144, !dbg !10012

132:                                              ; preds = %127
  %133 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10012
  %134 = sdiv i32 %133, 10000, !dbg !10012
  %135 = sdiv i32 %134, 16, !dbg !10012
  %136 = icmp sgt i32 1024, %135, !dbg !10012
  br i1 %136, label %137, label %138, !dbg !10012

137:                                              ; preds = %132
  br label %142, !dbg !10012

138:                                              ; preds = %132
  %139 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10012
  %140 = sdiv i32 %139, 10000, !dbg !10012
  %141 = sdiv i32 %140, 16, !dbg !10012
  br label %142, !dbg !10012

142:                                              ; preds = %138, %137
  %143 = phi i32 [ 1024, %137 ], [ %141, %138 ], !dbg !10012
  br label %144, !dbg !10012

144:                                              ; preds = %142, %130
  %145 = phi i32 [ %131, %130 ], [ %143, %142 ], !dbg !10012
  store i32 %145, i32* %11, align 4, !dbg !10013
  %146 = load i32, i32* %11, align 4, !dbg !10014
  %147 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10016
  %148 = sdiv i32 %147, 10000, !dbg !10016
  %149 = sdiv i32 16777215, %148, !dbg !10016
  %150 = sub nsw i32 %149, 1, !dbg !10016
  %151 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10016
  %152 = sdiv i32 %151, 10000, !dbg !10016
  %153 = mul nsw i32 %150, %152, !dbg !10016
  %154 = icmp ugt i32 %146, %153, !dbg !10017
  br i1 %154, label %155, label %163, !dbg !10018

155:                                              ; preds = %144
  %156 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10019
  %157 = sdiv i32 %156, 10000, !dbg !10019
  %158 = sdiv i32 16777215, %157, !dbg !10019
  %159 = sub nsw i32 %158, 1, !dbg !10019
  %160 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10019
  %161 = sdiv i32 %160, 10000, !dbg !10019
  %162 = mul nsw i32 %159, %161, !dbg !10019
  store i32 %162, i32* @last_load, align 4, !dbg !10021
  br label %165, !dbg !10022

163:                                              ; preds = %144
  %164 = load i32, i32* %11, align 4, !dbg !10023
  store i32 %164, i32* @last_load, align 4, !dbg !10025
  br label %165

165:                                              ; preds = %163, %155
  br label %166

166:                                              ; preds = %165, %93
  %167 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !10026
  store i32 %167, i32* %13, align 4, !dbg !10027
  %168 = load i32, i32* @last_load, align 4, !dbg !10028
  %169 = sub i32 %168, 1, !dbg !10029
  store volatile i32 %169, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 1), align 4, !dbg !10030
  store volatile i32 0, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 2), align 4, !dbg !10031
  %170 = load i32, i32* %12, align 4, !dbg !10032
  %171 = load i32, i32* %13, align 4, !dbg !10034
  %172 = icmp ult i32 %170, %171, !dbg !10035
  br i1 %172, label %173, label %181, !dbg !10036

173:                                              ; preds = %166
  %174 = load i32, i32* %12, align 4, !dbg !10037
  %175 = load i32, i32* %14, align 4, !dbg !10039
  %176 = load i32, i32* %13, align 4, !dbg !10040
  %177 = sub i32 %175, %176, !dbg !10041
  %178 = add i32 %174, %177, !dbg !10042
  %179 = load i32, i32* @cycle_count, align 4, !dbg !10043
  %180 = add i32 %179, %178, !dbg !10043
  store i32 %180, i32* @cycle_count, align 4, !dbg !10043
  br label %187, !dbg !10044

181:                                              ; preds = %166
  %182 = load i32, i32* %12, align 4, !dbg !10045
  %183 = load i32, i32* %13, align 4, !dbg !10047
  %184 = sub i32 %182, %183, !dbg !10048
  %185 = load i32, i32* @cycle_count, align 4, !dbg !10049
  %186 = add i32 %185, %184, !dbg !10049
  store i32 %186, i32* @cycle_count, align 4, !dbg !10049
  br label %187

187:                                              ; preds = %181, %173
  %188 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !10050
  %189 = bitcast i32* %188 to [1 x i32]*, !dbg !10050
  %190 = load [1 x i32], [1 x i32]* %189, align 4, !dbg !10050
  %191 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %192 = bitcast i32* %191 to [1 x i32]*
  store [1 x i32] %190, [1 x i32]* %192, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !10051, metadata !DIExpression()) #9, !dbg !10055
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !10057, metadata !DIExpression()) #9, !dbg !10058
  %193 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !10059
  %194 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !10060
  %195 = load i32, i32* %194, align 4, !dbg !10060
  store i32 %195, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10061, metadata !DIExpression()) #9, !dbg !10063
  %196 = load i32, i32* %3, align 4, !dbg !10065
  %197 = icmp ne i32 %196, 0, !dbg !10067
  br i1 %197, label %198, label %199, !dbg !10068

198:                                              ; preds = %187
  br label %200, !dbg !10069

199:                                              ; preds = %187
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !10071, !srcloc !10072
  br label %200, !dbg !10073

200:                                              ; preds = %198, %199
  br label %201, !dbg !10074

201:                                              ; preds = %200, %25
  ret void, !dbg !10074
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_elapsed() #1 !dbg !10075 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !10076, metadata !DIExpression()), !dbg !10077
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !9952, metadata !DIExpression()) #9, !dbg !10078
  %9 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !10080
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !9960, metadata !DIExpression()) #9, !dbg !10081
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9962, metadata !DIExpression()) #9, !dbg !10082
  %10 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !10084, !srcloc !9967
  store i32 %10, i32* %2, align 4, !dbg !10084
  %11 = load i32, i32* %2, align 4, !dbg !10085
  %12 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !10086
  store i32 %11, i32* %12, align 4, !dbg !10087
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !10088
  %14 = load i32, i32* %13, align 4, !dbg !10088
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !10089
  store i32 %14, i32* %15, align 4, !dbg !10089
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10090, metadata !DIExpression()), !dbg !10091
  %16 = call i32 @elapsed() #10, !dbg !10092
  %17 = load i32, i32* @cycle_count, align 4, !dbg !10093
  %18 = add i32 %16, %17, !dbg !10094
  %19 = load i32, i32* @announced_cycles, align 4, !dbg !10095
  %20 = sub i32 %18, %19, !dbg !10096
  store i32 %20, i32* %8, align 4, !dbg !10091
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !10097
  %22 = bitcast i32* %21 to [1 x i32]*, !dbg !10097
  %23 = load [1 x i32], [1 x i32]* %22, align 4, !dbg !10097
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %25 = bitcast i32* %24 to [1 x i32]*
  store [1 x i32] %23, [1 x i32]* %25, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !10051, metadata !DIExpression()) #9, !dbg !10098
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !10057, metadata !DIExpression()) #9, !dbg !10100
  %26 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !10101
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !10102
  %28 = load i32, i32* %27, align 4, !dbg !10102
  store i32 %28, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10061, metadata !DIExpression()) #9, !dbg !10103
  %29 = load i32, i32* %1, align 4, !dbg !10105
  %30 = icmp ne i32 %29, 0, !dbg !10106
  br i1 %30, label %31, label %32, !dbg !10107

31:                                               ; preds = %0
  br label %33, !dbg !10108

32:                                               ; preds = %0
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !10109, !srcloc !10072
  br label %33, !dbg !10110

33:                                               ; preds = %31, %32
  %34 = load i32, i32* %8, align 4, !dbg !10111
  %35 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !10112
  %36 = sdiv i32 %35, 10000, !dbg !10112
  %37 = udiv i32 %34, %36, !dbg !10113
  ret i32 %37, !dbg !10114
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_cycle_get_32() #1 !dbg !10115 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !10116, metadata !DIExpression()), !dbg !10117
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !9952, metadata !DIExpression()) #9, !dbg !10118
  %9 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !10120
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !9960, metadata !DIExpression()) #9, !dbg !10121
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9962, metadata !DIExpression()) #9, !dbg !10122
  %10 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !10124, !srcloc !9967
  store i32 %10, i32* %2, align 4, !dbg !10124
  %11 = load i32, i32* %2, align 4, !dbg !10125
  %12 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !10126
  store i32 %11, i32* %12, align 4, !dbg !10127
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !10128
  %14 = load i32, i32* %13, align 4, !dbg !10128
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !10129
  store i32 %14, i32* %15, align 4, !dbg !10129
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10130, metadata !DIExpression()), !dbg !10131
  %16 = call i32 @elapsed() #10, !dbg !10132
  %17 = load i32, i32* @cycle_count, align 4, !dbg !10133
  %18 = add i32 %16, %17, !dbg !10134
  store i32 %18, i32* %8, align 4, !dbg !10131
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !10135
  %20 = bitcast i32* %19 to [1 x i32]*, !dbg !10135
  %21 = load [1 x i32], [1 x i32]* %20, align 4, !dbg !10135
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %23 = bitcast i32* %22 to [1 x i32]*
  store [1 x i32] %21, [1 x i32]* %23, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !10051, metadata !DIExpression()) #9, !dbg !10136
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !10057, metadata !DIExpression()) #9, !dbg !10138
  %24 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !10139
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !10140
  %26 = load i32, i32* %25, align 4, !dbg !10140
  store i32 %26, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10061, metadata !DIExpression()) #9, !dbg !10141
  %27 = load i32, i32* %1, align 4, !dbg !10143
  %28 = icmp ne i32 %27, 0, !dbg !10144
  br i1 %28, label %29, label %30, !dbg !10145

29:                                               ; preds = %0
  br label %31, !dbg !10146

30:                                               ; preds = %0
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !10147, !srcloc !10072
  br label %31, !dbg !10148

31:                                               ; preds = %29, %30
  %32 = load i32, i32* %8, align 4, !dbg !10149
  ret i32 %32, !dbg !10150
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_idle_exit() #1 !dbg !10151 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10152
  %2 = icmp eq i32 %1, -16777216, !dbg !10154
  br i1 %2, label %3, label %6, !dbg !10155

3:                                                ; preds = %0
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10156
  %5 = or i32 %4, 1, !dbg !10156
  store volatile i32 %5, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10156
  br label %6, !dbg !10158

6:                                                ; preds = %3, %0
  ret void, !dbg !10159
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_disable() #1 !dbg !10160 {
  %1 = load volatile i32, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10161
  %2 = and i32 %1, -2, !dbg !10161
  store volatile i32 %2, i32* getelementptr inbounds (%struct.SysTick_Type, %struct.SysTick_Type* inttoptr (i32 -536813552 to %struct.SysTick_Type*), i32 0, i32 0), align 4, !dbg !10161
  ret void, !dbg !10162
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext %1, %struct.pinctrl_state** noundef %2) #1 !dbg !10163 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.pinctrl_dev_config*, align 4
  %6 = alloca i8, align 1
  %7 = alloca %struct.pinctrl_state**, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %5, metadata !10181, metadata !DIExpression()), !dbg !10182
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !10183, metadata !DIExpression()), !dbg !10184
  store %struct.pinctrl_state** %2, %struct.pinctrl_state*** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state*** %7, metadata !10185, metadata !DIExpression()), !dbg !10186
  %8 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !10187
  %9 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %8, i32 0, i32 0, !dbg !10188
  %10 = load %struct.pinctrl_state*, %struct.pinctrl_state** %9, align 4, !dbg !10188
  %11 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %10, i32 0, !dbg !10187
  %12 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !10189
  store %struct.pinctrl_state* %11, %struct.pinctrl_state** %12, align 4, !dbg !10190
  br label %13, !dbg !10191

13:                                               ; preds = %35, %3
  %14 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !10192
  %15 = load %struct.pinctrl_state*, %struct.pinctrl_state** %14, align 4, !dbg !10193
  %16 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !10194
  %17 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %16, i32 0, i32 0, !dbg !10195
  %18 = load %struct.pinctrl_state*, %struct.pinctrl_state** %17, align 4, !dbg !10195
  %19 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !10196
  %20 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %19, i32 0, i32 1, !dbg !10197
  %21 = load i8, i8* %20, align 4, !dbg !10197
  %22 = zext i8 %21 to i32, !dbg !10194
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %18, i32 %22, !dbg !10194
  %24 = icmp ult %struct.pinctrl_state* %15, %23, !dbg !10198
  br i1 %24, label %25, label %39, !dbg !10191

25:                                               ; preds = %13
  %26 = load i8, i8* %6, align 1, !dbg !10199
  %27 = zext i8 %26 to i32, !dbg !10199
  %28 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !10202
  %29 = load %struct.pinctrl_state*, %struct.pinctrl_state** %28, align 4, !dbg !10203
  %30 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %29, i32 0, i32 2, !dbg !10204
  %31 = load i8, i8* %30, align 1, !dbg !10204
  %32 = zext i8 %31 to i32, !dbg !10205
  %33 = icmp eq i32 %27, %32, !dbg !10206
  br i1 %33, label %34, label %35, !dbg !10207

34:                                               ; preds = %25
  store i32 0, i32* %4, align 4, !dbg !10208
  br label %40, !dbg !10208

35:                                               ; preds = %25
  %36 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !10210
  %37 = load %struct.pinctrl_state*, %struct.pinctrl_state** %36, align 4, !dbg !10211
  %38 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %37, i32 1, !dbg !10211
  store %struct.pinctrl_state* %38, %struct.pinctrl_state** %36, align 4, !dbg !10211
  br label %13, !dbg !10191, !llvm.loop !10212

39:                                               ; preds = %13
  store i32 -2, i32* %4, align 4, !dbg !10214
  br label %40, !dbg !10214

40:                                               ; preds = %39, %34
  %41 = load i32, i32* %4, align 4, !dbg !10215
  ret i32 %41, !dbg !10215
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @pinctrl_configure_pins(i32* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10216 {
  %4 = alloca i32*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !10219, metadata !DIExpression()), !dbg !10220
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !10221, metadata !DIExpression()), !dbg !10222
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10223, metadata !DIExpression()), !dbg !10224
  %8 = load i32, i32* %6, align 4, !dbg !10225
  call void @llvm.dbg.declare(metadata i8* %7, metadata !10226, metadata !DIExpression()), !dbg !10228
  store i8 0, i8* %7, align 1, !dbg !10228
  br label %9, !dbg !10229

9:                                                ; preds = %19, %3
  %10 = load i8, i8* %7, align 1, !dbg !10230
  %11 = zext i8 %10 to i32, !dbg !10230
  %12 = load i8, i8* %5, align 1, !dbg !10232
  %13 = zext i8 %12 to i32, !dbg !10232
  %14 = icmp slt i32 %11, %13, !dbg !10233
  br i1 %14, label %15, label %22, !dbg !10234

15:                                               ; preds = %9
  %16 = load i32*, i32** %4, align 4, !dbg !10235
  %17 = getelementptr inbounds i32, i32* %16, i32 1, !dbg !10235
  store i32* %17, i32** %4, align 4, !dbg !10235
  %18 = load i32, i32* %16, align 4, !dbg !10237
  call void @pinctrl_configure_pin(i32 noundef %18) #10, !dbg !10238
  br label %19, !dbg !10239

19:                                               ; preds = %15
  %20 = load i8, i8* %7, align 1, !dbg !10240
  %21 = add i8 %20, 1, !dbg !10240
  store i8 %21, i8* %7, align 1, !dbg !10240
  br label %9, !dbg !10241, !llvm.loop !10242

22:                                               ; preds = %9
  ret i32 0, !dbg !10244
}

; Function Attrs: noinline nounwind optnone
define internal void @pinctrl_configure_pin(i32 noundef %0) #1 !dbg !10245 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.soc_port_pin, align 4
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10248, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.declare(metadata %struct.soc_port_pin* %3, metadata !10250, metadata !DIExpression()), !dbg !10256
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10257, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.declare(metadata i8* %5, metadata !10259, metadata !DIExpression()), !dbg !10260
  %6 = load i32, i32* %2, align 4, !dbg !10261
  %7 = lshr i32 %6, 16, !dbg !10261
  %8 = and i32 %7, 65535, !dbg !10261
  %9 = lshr i32 %8, 0, !dbg !10261
  %10 = and i32 %9, 15, !dbg !10261
  %11 = trunc i32 %10 to i8, !dbg !10261
  store i8 %11, i8* %4, align 1, !dbg !10262
  %12 = load i32, i32* %2, align 4, !dbg !10263
  %13 = lshr i32 %12, 16, !dbg !10263
  %14 = and i32 %13, 65535, !dbg !10263
  %15 = lshr i32 %14, 9, !dbg !10263
  %16 = and i32 %15, 7, !dbg !10263
  %17 = trunc i32 %16 to i8, !dbg !10263
  store i8 %17, i8* %5, align 1, !dbg !10264
  %18 = load i8, i8* %4, align 1, !dbg !10265
  %19 = zext i8 %18 to i32, !dbg !10266
  %20 = getelementptr inbounds [2 x i32], [2 x i32]* @sam_port_addrs, i32 0, i32 %19, !dbg !10266
  %21 = load i32, i32* %20, align 4, !dbg !10266
  %22 = inttoptr i32 %21 to %struct.PortGroup*, !dbg !10267
  %23 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %3, i32 0, i32 0, !dbg !10268
  store %struct.PortGroup* %22, %struct.PortGroup** %23, align 4, !dbg !10269
  %24 = load i32, i32* %2, align 4, !dbg !10270
  %25 = lshr i32 %24, 16, !dbg !10270
  %26 = and i32 %25, 65535, !dbg !10270
  %27 = lshr i32 %26, 4, !dbg !10270
  %28 = and i32 %27, 31, !dbg !10270
  %29 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %3, i32 0, i32 1, !dbg !10271
  store i32 %28, i32* %29, align 4, !dbg !10272
  %30 = load i32, i32* %2, align 4, !dbg !10273
  %31 = lshr i32 %30, 0, !dbg !10273
  %32 = and i32 %31, 63, !dbg !10273
  %33 = shl i32 %32, 0, !dbg !10274
  %34 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %3, i32 0, i32 2, !dbg !10275
  store i32 %33, i32* %34, align 4, !dbg !10276
  %35 = load i8, i8* %5, align 1, !dbg !10277
  %36 = zext i8 %35 to i32, !dbg !10277
  %37 = icmp eq i32 %36, 1, !dbg !10279
  br i1 %37, label %38, label %49, !dbg !10280

38:                                               ; preds = %1
  %39 = load i32, i32* %2, align 4, !dbg !10281
  %40 = lshr i32 %39, 16, !dbg !10281
  %41 = and i32 %40, 65535, !dbg !10281
  %42 = lshr i32 %41, 12, !dbg !10281
  %43 = and i32 %42, 15, !dbg !10281
  %44 = shl i32 %43, 16, !dbg !10283
  %45 = or i32 %44, 64, !dbg !10284
  %46 = getelementptr inbounds %struct.soc_port_pin, %struct.soc_port_pin* %3, i32 0, i32 2, !dbg !10285
  %47 = load i32, i32* %46, align 4, !dbg !10286
  %48 = or i32 %47, %45, !dbg !10286
  store i32 %48, i32* %46, align 4, !dbg !10286
  br label %49, !dbg !10287

49:                                               ; preds = %38, %1
  call void @soc_port_configure(%struct.soc_port_pin* noundef %3) #10, !dbg !10288
  ret void, !dbg !10289
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_device_state_init() #1 !dbg !10290 {
  %1 = alloca %struct.device.73*, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %1, metadata !10292, metadata !DIExpression()), !dbg !10308
  store %struct.device.73* getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 0), %struct.device.73** %1, align 4, !dbg !10308
  br label %2, !dbg !10309

2:                                                ; preds = %5, %0
  %3 = load %struct.device.73*, %struct.device.73** %1, align 4, !dbg !10310
  %4 = icmp ult %struct.device.73* %3, getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_end, i32 0, i32 0), !dbg !10311
  br i1 %4, label %5, label %10, !dbg !10309

5:                                                ; preds = %2
  %6 = load %struct.device.73*, %struct.device.73** %1, align 4, !dbg !10312
  %7 = bitcast %struct.device.73* %6 to i8*, !dbg !10312
  call void @z_object_init(i8* noundef %7) #10, !dbg !10314
  %8 = load %struct.device.73*, %struct.device.73** %1, align 4, !dbg !10315
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 1, !dbg !10315
  store %struct.device.73* %9, %struct.device.73** %1, align 4, !dbg !10315
  br label %2, !dbg !10309, !llvm.loop !10316

10:                                               ; preds = %2
  ret void, !dbg !10318
}

; Function Attrs: noinline nounwind optnone
define internal void @z_object_init(i8* noundef %0) #1 !dbg !10319 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !10320, metadata !DIExpression()), !dbg !10321
  %3 = load i8*, i8** %2, align 4, !dbg !10322
  ret void, !dbg !10323
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.device.73* @z_impl_device_get_binding(i8* noundef %0) #1 !dbg !10324 {
  %2 = alloca %struct.device.73*, align 4
  %3 = alloca i8*, align 4
  %4 = alloca %struct.device.73*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10327, metadata !DIExpression()), !dbg !10328
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !10329, metadata !DIExpression()), !dbg !10330
  %5 = load i8*, i8** %3, align 4, !dbg !10331
  %6 = icmp eq i8* %5, null, !dbg !10333
  br i1 %6, label %13, label %7, !dbg !10334

7:                                                ; preds = %1
  %8 = load i8*, i8** %3, align 4, !dbg !10335
  %9 = getelementptr inbounds i8, i8* %8, i32 0, !dbg !10335
  %10 = load i8, i8* %9, align 1, !dbg !10335
  %11 = zext i8 %10 to i32, !dbg !10335
  %12 = icmp eq i32 %11, 0, !dbg !10336
  br i1 %12, label %13, label %14, !dbg !10337

13:                                               ; preds = %7, %1
  store %struct.device.73* null, %struct.device.73** %2, align 4, !dbg !10338
  br label %54, !dbg !10338

14:                                               ; preds = %7
  store %struct.device.73* getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 0), %struct.device.73** %4, align 4, !dbg !10340
  br label %15, !dbg !10342

15:                                               ; preds = %30, %14
  %16 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10343
  %17 = icmp ne %struct.device.73* %16, getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_end, i32 0, i32 0), !dbg !10345
  br i1 %17, label %18, label %33, !dbg !10346

18:                                               ; preds = %15
  %19 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10347
  %20 = call zeroext i1 @z_device_is_ready(%struct.device.73* noundef %19) #10, !dbg !10350
  br i1 %20, label %21, label %29, !dbg !10351

21:                                               ; preds = %18
  %22 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10352
  %23 = getelementptr inbounds %struct.device.73, %struct.device.73* %22, i32 0, i32 0, !dbg !10353
  %24 = load i8*, i8** %23, align 4, !dbg !10353
  %25 = load i8*, i8** %3, align 4, !dbg !10354
  %26 = icmp eq i8* %24, %25, !dbg !10355
  br i1 %26, label %27, label %29, !dbg !10356

27:                                               ; preds = %21
  %28 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10357
  store %struct.device.73* %28, %struct.device.73** %2, align 4, !dbg !10359
  br label %54, !dbg !10359

29:                                               ; preds = %21, %18
  br label %30, !dbg !10360

30:                                               ; preds = %29
  %31 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10361
  %32 = getelementptr inbounds %struct.device.73, %struct.device.73* %31, i32 1, !dbg !10361
  store %struct.device.73* %32, %struct.device.73** %4, align 4, !dbg !10361
  br label %15, !dbg !10362, !llvm.loop !10363

33:                                               ; preds = %15
  store %struct.device.73* getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 0), %struct.device.73** %4, align 4, !dbg !10365
  br label %34, !dbg !10367

34:                                               ; preds = %50, %33
  %35 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10368
  %36 = icmp ne %struct.device.73* %35, getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_end, i32 0, i32 0), !dbg !10370
  br i1 %36, label %37, label %53, !dbg !10371

37:                                               ; preds = %34
  %38 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10372
  %39 = call zeroext i1 @z_device_is_ready(%struct.device.73* noundef %38) #10, !dbg !10375
  br i1 %39, label %40, label %49, !dbg !10376

40:                                               ; preds = %37
  %41 = load i8*, i8** %3, align 4, !dbg !10377
  %42 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10378
  %43 = getelementptr inbounds %struct.device.73, %struct.device.73* %42, i32 0, i32 0, !dbg !10379
  %44 = load i8*, i8** %43, align 4, !dbg !10379
  %45 = call i32 @strcmp(i8* noundef %41, i8* noundef %44) #10, !dbg !10380
  %46 = icmp eq i32 %45, 0, !dbg !10381
  br i1 %46, label %47, label %49, !dbg !10382

47:                                               ; preds = %40
  %48 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10383
  store %struct.device.73* %48, %struct.device.73** %2, align 4, !dbg !10385
  br label %54, !dbg !10385

49:                                               ; preds = %40, %37
  br label %50, !dbg !10386

50:                                               ; preds = %49
  %51 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10387
  %52 = getelementptr inbounds %struct.device.73, %struct.device.73* %51, i32 1, !dbg !10387
  store %struct.device.73* %52, %struct.device.73** %4, align 4, !dbg !10387
  br label %34, !dbg !10388, !llvm.loop !10389

53:                                               ; preds = %34
  store %struct.device.73* null, %struct.device.73** %2, align 4, !dbg !10391
  br label %54, !dbg !10391

54:                                               ; preds = %53, %47, %27, %13
  %55 = load %struct.device.73*, %struct.device.73** %2, align 4, !dbg !10392
  ret %struct.device.73* %55, !dbg !10392
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_device_is_ready(%struct.device.73* noundef %0) #1 !dbg !10393 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.device.73*, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !10396, metadata !DIExpression()), !dbg !10397
  %4 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10398
  %5 = icmp eq %struct.device.73* %4, null, !dbg !10400
  br i1 %5, label %6, label %7, !dbg !10401

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !10402
  br label %25, !dbg !10402

7:                                                ; preds = %1
  %8 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10404
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 3, !dbg !10405
  %10 = load %struct.device_state.72*, %struct.device_state.72** %9, align 4, !dbg !10405
  %11 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %10, i32 0, i32 1, !dbg !10406
  %12 = load i8, i8* %11, align 1, !dbg !10406
  %13 = and i8 %12, 1, !dbg !10406
  %14 = trunc i8 %13 to i1, !dbg !10406
  br i1 %14, label %15, label %23, !dbg !10407

15:                                               ; preds = %7
  %16 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10408
  %17 = getelementptr inbounds %struct.device.73, %struct.device.73* %16, i32 0, i32 3, !dbg !10409
  %18 = load %struct.device_state.72*, %struct.device_state.72** %17, align 4, !dbg !10409
  %19 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %18, i32 0, i32 0, !dbg !10410
  %20 = load i8, i8* %19, align 1, !dbg !10410
  %21 = zext i8 %20 to i32, !dbg !10408
  %22 = icmp eq i32 %21, 0, !dbg !10411
  br label %23

23:                                               ; preds = %15, %7
  %24 = phi i1 [ false, %7 ], [ %22, %15 ], !dbg !10412
  store i1 %24, i1* %2, align 1, !dbg !10413
  br label %25, !dbg !10413

25:                                               ; preds = %23, %6
  %26 = load i1, i1* %2, align 1, !dbg !10414
  ret i1 %26, !dbg !10414
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_device_get_all_static(%struct.device.73** noundef %0) #1 !dbg !10415 {
  %2 = alloca %struct.device.73**, align 4
  store %struct.device.73** %0, %struct.device.73*** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73*** %2, metadata !10419, metadata !DIExpression()), !dbg !10420
  %3 = load %struct.device.73**, %struct.device.73*** %2, align 4, !dbg !10421
  store %struct.device.73* getelementptr inbounds ([0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 0), %struct.device.73** %3, align 4, !dbg !10422
  ret i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device.73]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device.73]* @__device_start to i32)), i32 24), !dbg !10423
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @device_required_foreach(%struct.device.73* noundef %0, i32 (%struct.device.73*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !10424 {
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i32 (%struct.device.73*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !10431, metadata !DIExpression()), !dbg !10432
  store i32 (%struct.device.73*, i8*)* %1, i32 (%struct.device.73*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.73*, i8*)** %5, metadata !10433, metadata !DIExpression()), !dbg !10434
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10435, metadata !DIExpression()), !dbg !10436
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10437, metadata !DIExpression()), !dbg !10438
  store i32 0, i32* %7, align 4, !dbg !10438
  call void @llvm.dbg.declare(metadata i16** %8, metadata !10439, metadata !DIExpression()), !dbg !10440
  %9 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10441
  %10 = call i16* @device_required_handles_get(%struct.device.73* noundef %9, i32* noundef %7) #10, !dbg !10442
  store i16* %10, i16** %8, align 4, !dbg !10440
  %11 = load i16*, i16** %8, align 4, !dbg !10443
  %12 = load i32, i32* %7, align 4, !dbg !10444
  %13 = load i32 (%struct.device.73*, i8*)*, i32 (%struct.device.73*, i8*)** %5, align 4, !dbg !10445
  %14 = load i8*, i8** %6, align 4, !dbg !10446
  %15 = call i32 @device_visitor(i16* noundef %11, i32 noundef %12, i32 (%struct.device.73*, i8*)* noundef %13, i8* noundef %14) #10, !dbg !10447
  ret i32 %15, !dbg !10448
}

; Function Attrs: noinline nounwind optnone
define internal i16* @device_required_handles_get(%struct.device.73* noundef %0, i32* noundef %1) #1 !dbg !10449 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i16*, align 4
  %6 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !10452, metadata !DIExpression()), !dbg !10453
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !10454, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.declare(metadata i16** %5, metadata !10456, metadata !DIExpression()), !dbg !10457
  %7 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10458
  %8 = getelementptr inbounds %struct.device.73, %struct.device.73* %7, i32 0, i32 5, !dbg !10459
  %9 = load i16*, i16** %8, align 4, !dbg !10459
  store i16* %9, i16** %5, align 4, !dbg !10457
  %10 = load i16*, i16** %5, align 4, !dbg !10460
  %11 = icmp ne i16* %10, null, !dbg !10462
  br i1 %11, label %12, label %35, !dbg !10463

12:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10464, metadata !DIExpression()), !dbg !10466
  store i32 0, i32* %6, align 4, !dbg !10466
  br label %13, !dbg !10467

13:                                               ; preds = %29, %12
  %14 = load i16*, i16** %5, align 4, !dbg !10468
  %15 = load i32, i32* %6, align 4, !dbg !10469
  %16 = getelementptr inbounds i16, i16* %14, i32 %15, !dbg !10468
  %17 = load i16, i16* %16, align 2, !dbg !10468
  %18 = sext i16 %17 to i32, !dbg !10468
  %19 = icmp ne i32 %18, 32767, !dbg !10470
  br i1 %19, label %20, label %27, !dbg !10471

20:                                               ; preds = %13
  %21 = load i16*, i16** %5, align 4, !dbg !10472
  %22 = load i32, i32* %6, align 4, !dbg !10473
  %23 = getelementptr inbounds i16, i16* %21, i32 %22, !dbg !10472
  %24 = load i16, i16* %23, align 2, !dbg !10472
  %25 = sext i16 %24 to i32, !dbg !10472
  %26 = icmp ne i32 %25, -32768, !dbg !10474
  br label %27

27:                                               ; preds = %20, %13
  %28 = phi i1 [ false, %13 ], [ %26, %20 ], !dbg !10475
  br i1 %28, label %29, label %32, !dbg !10467

29:                                               ; preds = %27
  %30 = load i32, i32* %6, align 4, !dbg !10476
  %31 = add i32 %30, 1, !dbg !10476
  store i32 %31, i32* %6, align 4, !dbg !10476
  br label %13, !dbg !10467, !llvm.loop !10478

32:                                               ; preds = %27
  %33 = load i32, i32* %6, align 4, !dbg !10480
  %34 = load i32*, i32** %4, align 4, !dbg !10481
  store i32 %33, i32* %34, align 4, !dbg !10482
  br label %35, !dbg !10483

35:                                               ; preds = %32, %2
  %36 = load i16*, i16** %5, align 4, !dbg !10484
  ret i16* %36, !dbg !10485
}

; Function Attrs: noinline nounwind optnone
define internal i32 @device_visitor(i16* noundef %0, i32 noundef %1, i32 (%struct.device.73*, i8*)* noundef %2, i8* noundef %3) #1 !dbg !10486 {
  %5 = alloca i32, align 4
  %6 = alloca i16*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32 (%struct.device.73*, i8*)*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca %struct.device.73*, align 4
  %13 = alloca i32, align 4
  store i16* %0, i16** %6, align 4
  call void @llvm.dbg.declare(metadata i16** %6, metadata !10489, metadata !DIExpression()), !dbg !10490
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10491, metadata !DIExpression()), !dbg !10492
  store i32 (%struct.device.73*, i8*)* %2, i32 (%struct.device.73*, i8*)** %8, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.73*, i8*)** %8, metadata !10493, metadata !DIExpression()), !dbg !10494
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !10495, metadata !DIExpression()), !dbg !10496
  call void @llvm.dbg.declare(metadata i32* %10, metadata !10497, metadata !DIExpression()), !dbg !10499
  store i32 0, i32* %10, align 4, !dbg !10499
  br label %14, !dbg !10500

14:                                               ; preds = %34, %4
  %15 = load i32, i32* %10, align 4, !dbg !10501
  %16 = load i32, i32* %7, align 4, !dbg !10503
  %17 = icmp ult i32 %15, %16, !dbg !10504
  br i1 %17, label %18, label %37, !dbg !10505

18:                                               ; preds = %14
  call void @llvm.dbg.declare(metadata i16* %11, metadata !10506, metadata !DIExpression()), !dbg !10508
  %19 = load i16*, i16** %6, align 4, !dbg !10509
  %20 = load i32, i32* %10, align 4, !dbg !10510
  %21 = getelementptr inbounds i16, i16* %19, i32 %20, !dbg !10509
  %22 = load i16, i16* %21, align 2, !dbg !10509
  store i16 %22, i16* %11, align 2, !dbg !10508
  call void @llvm.dbg.declare(metadata %struct.device.73** %12, metadata !10511, metadata !DIExpression()), !dbg !10512
  %23 = load i16, i16* %11, align 2, !dbg !10513
  %24 = call %struct.device.73* @device_from_handle(i16 noundef signext %23) #10, !dbg !10514
  store %struct.device.73* %24, %struct.device.73** %12, align 4, !dbg !10512
  call void @llvm.dbg.declare(metadata i32* %13, metadata !10515, metadata !DIExpression()), !dbg !10516
  %25 = load i32 (%struct.device.73*, i8*)*, i32 (%struct.device.73*, i8*)** %8, align 4, !dbg !10517
  %26 = load %struct.device.73*, %struct.device.73** %12, align 4, !dbg !10518
  %27 = load i8*, i8** %9, align 4, !dbg !10519
  %28 = call i32 %25(%struct.device.73* noundef %26, i8* noundef %27) #10, !dbg !10517
  store i32 %28, i32* %13, align 4, !dbg !10516
  %29 = load i32, i32* %13, align 4, !dbg !10520
  %30 = icmp slt i32 %29, 0, !dbg !10522
  br i1 %30, label %31, label %33, !dbg !10523

31:                                               ; preds = %18
  %32 = load i32, i32* %13, align 4, !dbg !10524
  store i32 %32, i32* %5, align 4, !dbg !10526
  br label %39, !dbg !10526

33:                                               ; preds = %18
  br label %34, !dbg !10527

34:                                               ; preds = %33
  %35 = load i32, i32* %10, align 4, !dbg !10528
  %36 = add i32 %35, 1, !dbg !10528
  store i32 %36, i32* %10, align 4, !dbg !10528
  br label %14, !dbg !10529, !llvm.loop !10530

37:                                               ; preds = %14
  %38 = load i32, i32* %7, align 4, !dbg !10532
  store i32 %38, i32* %5, align 4, !dbg !10533
  br label %39, !dbg !10533

39:                                               ; preds = %37, %31
  %40 = load i32, i32* %5, align 4, !dbg !10534
  ret i32 %40, !dbg !10534
}

; Function Attrs: noinline nounwind optnone
define internal %struct.device.73* @device_from_handle(i16 noundef signext %0) #1 !dbg !10535 {
  %2 = alloca i16, align 2
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32, align 4
  store i16 %0, i16* %2, align 2
  call void @llvm.dbg.declare(metadata i16* %2, metadata !10538, metadata !DIExpression()), !dbg !10539
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !10540, metadata !DIExpression()), !dbg !10541
  store %struct.device.73* null, %struct.device.73** %3, align 4, !dbg !10541
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10542, metadata !DIExpression()), !dbg !10543
  store i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device.73]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device.73]* @__device_start to i32)), i32 24), i32* %4, align 4, !dbg !10543
  %5 = load i16, i16* %2, align 2, !dbg !10544
  %6 = sext i16 %5 to i32, !dbg !10544
  %7 = icmp sgt i32 %6, 0, !dbg !10546
  br i1 %7, label %8, label %18, !dbg !10547

8:                                                ; preds = %1
  %9 = load i16, i16* %2, align 2, !dbg !10548
  %10 = sext i16 %9 to i32, !dbg !10549
  %11 = load i32, i32* %4, align 4, !dbg !10550
  %12 = icmp ule i32 %10, %11, !dbg !10551
  br i1 %12, label %13, label %18, !dbg !10552

13:                                               ; preds = %8
  %14 = load i16, i16* %2, align 2, !dbg !10553
  %15 = sext i16 %14 to i32, !dbg !10553
  %16 = sub nsw i32 %15, 1, !dbg !10555
  %17 = getelementptr inbounds [0 x %struct.device.73], [0 x %struct.device.73]* @__device_start, i32 0, i32 %16, !dbg !10556
  store %struct.device.73* %17, %struct.device.73** %3, align 4, !dbg !10557
  br label %18, !dbg !10558

18:                                               ; preds = %13, %8, %1
  %19 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10559
  ret %struct.device.73* %19, !dbg !10560
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @device_supported_foreach(%struct.device.73* noundef %0, i32 (%struct.device.73*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !10561 {
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i32 (%struct.device.73*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 4
  store %struct.device.73* %0, %struct.device.73** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !10562, metadata !DIExpression()), !dbg !10563
  store i32 (%struct.device.73*, i8*)* %1, i32 (%struct.device.73*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.73*, i8*)** %5, metadata !10564, metadata !DIExpression()), !dbg !10565
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !10566, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10568, metadata !DIExpression()), !dbg !10569
  store i32 0, i32* %7, align 4, !dbg !10569
  call void @llvm.dbg.declare(metadata i16** %8, metadata !10570, metadata !DIExpression()), !dbg !10571
  %9 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !10572
  %10 = call i16* @device_supported_handles_get(%struct.device.73* noundef %9, i32* noundef %7) #10, !dbg !10573
  store i16* %10, i16** %8, align 4, !dbg !10571
  %11 = load i16*, i16** %8, align 4, !dbg !10574
  %12 = load i32, i32* %7, align 4, !dbg !10575
  %13 = load i32 (%struct.device.73*, i8*)*, i32 (%struct.device.73*, i8*)** %5, align 4, !dbg !10576
  %14 = load i8*, i8** %6, align 4, !dbg !10577
  %15 = call i32 @device_visitor(i16* noundef %11, i32 noundef %12, i32 (%struct.device.73*, i8*)* noundef %13, i8* noundef %14) #10, !dbg !10578
  ret i32 %15, !dbg !10579
}

; Function Attrs: noinline nounwind optnone
define internal i16* @device_supported_handles_get(%struct.device.73* noundef %0, i32* noundef %1) #1 !dbg !10580 {
  %3 = alloca %struct.device.73*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i16*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.device.73* %0, %struct.device.73** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.73** %3, metadata !10581, metadata !DIExpression()), !dbg !10582
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !10583, metadata !DIExpression()), !dbg !10584
  call void @llvm.dbg.declare(metadata i16** %5, metadata !10585, metadata !DIExpression()), !dbg !10586
  %8 = load %struct.device.73*, %struct.device.73** %3, align 4, !dbg !10587
  %9 = getelementptr inbounds %struct.device.73, %struct.device.73* %8, i32 0, i32 5, !dbg !10588
  %10 = load i16*, i16** %9, align 4, !dbg !10588
  store i16* %10, i16** %5, align 4, !dbg !10586
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10589, metadata !DIExpression()), !dbg !10590
  store i32 0, i32* %6, align 4, !dbg !10590
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10591, metadata !DIExpression()), !dbg !10592
  store i32 0, i32* %7, align 4, !dbg !10592
  %11 = load i16*, i16** %5, align 4, !dbg !10593
  %12 = icmp ne i16* %11, null, !dbg !10595
  br i1 %12, label %13, label %42, !dbg !10596

13:                                               ; preds = %2
  br label %14, !dbg !10597

14:                                               ; preds = %25, %13
  %15 = load i32, i32* %6, align 4, !dbg !10599
  %16 = icmp ne i32 %15, 2, !dbg !10600
  br i1 %16, label %17, label %28, !dbg !10597

17:                                               ; preds = %14
  %18 = load i16*, i16** %5, align 4, !dbg !10601
  %19 = load i16, i16* %18, align 2, !dbg !10604
  %20 = sext i16 %19 to i32, !dbg !10604
  %21 = icmp eq i32 %20, -32768, !dbg !10605
  br i1 %21, label %22, label %25, !dbg !10606

22:                                               ; preds = %17
  %23 = load i32, i32* %6, align 4, !dbg !10607
  %24 = add i32 %23, 1, !dbg !10607
  store i32 %24, i32* %6, align 4, !dbg !10607
  br label %25, !dbg !10609

25:                                               ; preds = %22, %17
  %26 = load i16*, i16** %5, align 4, !dbg !10610
  %27 = getelementptr inbounds i16, i16* %26, i32 1, !dbg !10610
  store i16* %27, i16** %5, align 4, !dbg !10610
  br label %14, !dbg !10597, !llvm.loop !10611

28:                                               ; preds = %14
  br label %29, !dbg !10613

29:                                               ; preds = %36, %28
  %30 = load i16*, i16** %5, align 4, !dbg !10614
  %31 = load i32, i32* %7, align 4, !dbg !10615
  %32 = getelementptr inbounds i16, i16* %30, i32 %31, !dbg !10614
  %33 = load i16, i16* %32, align 2, !dbg !10614
  %34 = sext i16 %33 to i32, !dbg !10614
  %35 = icmp ne i32 %34, 32767, !dbg !10616
  br i1 %35, label %36, label %39, !dbg !10613

36:                                               ; preds = %29
  %37 = load i32, i32* %7, align 4, !dbg !10617
  %38 = add i32 %37, 1, !dbg !10617
  store i32 %38, i32* %7, align 4, !dbg !10617
  br label %29, !dbg !10613, !llvm.loop !10619

39:                                               ; preds = %29
  %40 = load i32, i32* %7, align 4, !dbg !10621
  %41 = load i32*, i32** %4, align 4, !dbg !10622
  store i32 %40, i32* %41, align 4, !dbg !10623
  br label %42, !dbg !10624

42:                                               ; preds = %39, %2
  %43 = load i16*, i16** %5, align 4, !dbg !10625
  ret i16* %43, !dbg !10626
}

; Function Attrs: noinline nounwind optnone
define dso_local i32* @z_impl_z_errno() #1 !dbg !10627 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10630
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 4, !dbg !10631
  ret i32* %2, !dbg !10632
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump(i32 noundef %0, %struct.__esf* noundef %1, %struct.k_thread.60* noundef %2) #1 !dbg !10633 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca %struct.k_thread.60*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10774, metadata !DIExpression()), !dbg !10775
  store %struct.__esf* %1, %struct.__esf** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %5, metadata !10776, metadata !DIExpression()), !dbg !10777
  store %struct.k_thread.60* %2, %struct.k_thread.60** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %6, metadata !10778, metadata !DIExpression()), !dbg !10779
  ret void, !dbg !10780
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) #1 !dbg !10781 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10784, metadata !DIExpression()), !dbg !10785
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10786, metadata !DIExpression()), !dbg !10787
  ret void, !dbg !10788
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump_buffer_output(i8* noundef %0, i32 noundef %1) #1 !dbg !10789 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10792, metadata !DIExpression()), !dbg !10793
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10794, metadata !DIExpression()), !dbg !10795
  ret void, !dbg !10796
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @coredump_query(i32 noundef %0, i8* noundef %1) #1 !dbg !10797 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10800, metadata !DIExpression()), !dbg !10801
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10802, metadata !DIExpression()), !dbg !10803
  ret i32 -134, !dbg !10804
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* noundef %1) #1 !dbg !10805 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10808, metadata !DIExpression()), !dbg !10809
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10810, metadata !DIExpression()), !dbg !10811
  ret i32 -134, !dbg !10812
}

; Function Attrs: noinline noreturn nounwind optnone
define weak dso_local void @arch_system_halt(i32 noundef %0) #5 !dbg !10813 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10815, metadata !DIExpression()), !dbg !10816
  %4 = load i32, i32* %3, align 4, !dbg !10817
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10818, metadata !DIExpression()) #9, !dbg !10820
  %5 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !10822, !srcloc !10823
  store i32 %5, i32* %2, align 4, !dbg !10822
  %6 = load i32, i32* %2, align 4, !dbg !10824
  br label %7, !dbg !10825

7:                                                ; preds = %7, %1
  br label %7, !dbg !10826, !llvm.loop !10829
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !10832 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10835, metadata !DIExpression()), !dbg !10836
  store %struct.__esf* %1, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !10837, metadata !DIExpression()), !dbg !10838
  %9 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !10839
  br label %10, !dbg !10840

10:                                               ; preds = %2
  br label %11, !dbg !10841

11:                                               ; preds = %10
  %12 = load i32, i32* %3, align 4, !dbg !10845
  call void @arch_system_halt(i32 noundef %12) #12, !dbg !10846
  unreachable, !dbg !10846
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @k_fatal_halt(i32 noundef %0) #5 !dbg !10847 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10848, metadata !DIExpression()), !dbg !10849
  %3 = load i32, i32* %2, align 4, !dbg !10850
  call void @arch_system_halt(i32 noundef %3) #12, !dbg !10851
  unreachable, !dbg !10851
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !10852 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.__esf*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.k_thread.60*, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 4
  store i32 %0, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10853, metadata !DIExpression()), !dbg !10854
  store %struct.__esf* %1, %struct.__esf** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %8, metadata !10855, metadata !DIExpression()), !dbg !10856
  call void @llvm.dbg.declare(metadata i32* %9, metadata !10857, metadata !DIExpression()), !dbg !10858
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10818, metadata !DIExpression()) #9, !dbg !10859
  %23 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !10861, !srcloc !10823
  store i32 %23, i32* %6, align 4, !dbg !10861
  %24 = load i32, i32* %6, align 4, !dbg !10862
  store i32 %24, i32* %9, align 4, !dbg !10858
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %10, metadata !10863, metadata !DIExpression()), !dbg !10864
  %25 = call %struct.k_thread.60* @k_current_get.41() #11, !dbg !10865
  store %struct.k_thread.60* %25, %struct.k_thread.60** %10, align 4, !dbg !10864
  br label %26, !dbg !10866

26:                                               ; preds = %2
  br label %27, !dbg !10867

27:                                               ; preds = %26
  %28 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !10871
  %29 = icmp ne %struct.__esf* %28, null, !dbg !10873
  br i1 %29, label %30, label %43, !dbg !10874

30:                                               ; preds = %27
  %31 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !10875
  store %struct.__esf* %31, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !10876, metadata !DIExpression()), !dbg !10880
  %32 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !10882
  %33 = getelementptr inbounds %struct.__esf, %struct.__esf* %32, i32 0, i32 0, !dbg !10883
  %34 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %33, i32 0, i32 7, !dbg !10884
  %35 = load i32, i32* %34, align 4, !dbg !10884
  %36 = and i32 %35, 511, !dbg !10885
  %37 = icmp ne i32 %36, 0, !dbg !10886
  %38 = zext i1 %37 to i64, !dbg !10886
  %39 = select i1 %37, i32 1, i32 0, !dbg !10886
  br i1 %37, label %40, label %43, !dbg !10887

40:                                               ; preds = %30
  br label %41, !dbg !10888

41:                                               ; preds = %40
  br label %42, !dbg !10890

42:                                               ; preds = %41
  br label %43, !dbg !10894

43:                                               ; preds = %42, %30, %27
  br label %44, !dbg !10895

44:                                               ; preds = %43
  br label %45, !dbg !10896

45:                                               ; preds = %44
  %46 = load i32, i32* %7, align 4, !dbg !10900
  %47 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !10901
  %48 = load %struct.k_thread.60*, %struct.k_thread.60** %10, align 4, !dbg !10902
  call void @coredump(i32 noundef %46, %struct.__esf* noundef %47, %struct.k_thread.60* noundef %48) #10, !dbg !10903
  %49 = load i32, i32* %7, align 4, !dbg !10904
  %50 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !10905
  call void @k_sys_fatal_error_handler(i32 noundef %49, %struct.__esf* noundef %50) #10, !dbg !10906
  %51 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !10907
  %52 = icmp ne %struct.__esf* %51, null, !dbg !10911
  br i1 %52, label %53, label %64, !dbg !10912

53:                                               ; preds = %45
  %54 = load %struct.__esf*, %struct.__esf** %8, align 4, !dbg !10913
  store %struct.__esf* %54, %struct.__esf** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %5, metadata !10876, metadata !DIExpression()), !dbg !10914
  %55 = load %struct.__esf*, %struct.__esf** %5, align 4, !dbg !10916
  %56 = getelementptr inbounds %struct.__esf, %struct.__esf* %55, i32 0, i32 0, !dbg !10917
  %57 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %56, i32 0, i32 7, !dbg !10918
  %58 = load i32, i32* %57, align 4, !dbg !10918
  %59 = and i32 %58, 511, !dbg !10919
  %60 = icmp ne i32 %59, 0, !dbg !10920
  %61 = zext i1 %60 to i64, !dbg !10920
  %62 = select i1 %60, i32 1, i32 0, !dbg !10920
  br i1 %60, label %63, label %64, !dbg !10921

63:                                               ; preds = %53
  br label %64, !dbg !10922

64:                                               ; preds = %63, %53, %45
  %65 = load i32, i32* %9, align 4, !dbg !10924
  store i32 %65, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10925, metadata !DIExpression()) #9, !dbg !10927
  %66 = load i32, i32* %3, align 4, !dbg !10929
  %67 = icmp ne i32 %66, 0, !dbg !10931
  br i1 %67, label %68, label %69, !dbg !10932

68:                                               ; preds = %64
  br label %70, !dbg !10933

69:                                               ; preds = %64
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !10935, !srcloc !10936
  br label %70, !dbg !10937

70:                                               ; preds = %68, %69
  %71 = load %struct.k_thread.60*, %struct.k_thread.60** %10, align 4, !dbg !10938
  call void @k_thread_abort.42(%struct.k_thread.60* noundef %71) #10, !dbg !10941
  ret void, !dbg !10942
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @k_current_get.41() #6 !dbg !10943 {
  %1 = call %struct.k_thread.60* @z_current_get.43() #11, !dbg !10947
  ret %struct.k_thread.60* %1, !dbg !10948
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_abort.42(%struct.k_thread.60* noundef %0) #1 !dbg !10949 {
  %2 = alloca %struct.k_thread.60*, align 4
  store %struct.k_thread.60* %0, %struct.k_thread.60** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %2, metadata !10952, metadata !DIExpression()), !dbg !10953
  br label %3, !dbg !10954

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !10955, !srcloc !10957
  br label %4, !dbg !10955

4:                                                ; preds = %3
  %5 = load %struct.k_thread.60*, %struct.k_thread.60** %2, align 4, !dbg !10958
  call void bitcast (void (%struct.k_thread.203*)* @z_impl_k_thread_abort to void (%struct.k_thread.60*)*)(%struct.k_thread.60* noundef %5) #10, !dbg !10959
  ret void, !dbg !10960
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @z_current_get.43() #6 !dbg !10961 {
  br label %1, !dbg !10962

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !10963, !srcloc !10965
  br label %2, !dbg !10963

2:                                                ; preds = %1
  %3 = call %struct.k_thread.60* bitcast (%struct.k_thread.203* ()* @z_impl_z_current_get to %struct.k_thread.60* ()*)() #10, !dbg !10966
  ret %struct.k_thread.60* %3, !dbg !10967
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !10968 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10971, metadata !DIExpression()), !dbg !10972
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10973, metadata !DIExpression()), !dbg !10974
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10975, metadata !DIExpression()), !dbg !10976
  %7 = load i8*, i8** %4, align 4, !dbg !10977
  %8 = load i32, i32* %5, align 4, !dbg !10978
  %9 = load i32, i32* %6, align 4, !dbg !10979
  %10 = call i8* @memset(i8* noundef %7, i32 noundef %8, i32 noundef %9) #10, !dbg !10980
  ret void, !dbg !10981
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !10982 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !10985, metadata !DIExpression()), !dbg !10986
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !10987, metadata !DIExpression()), !dbg !10988
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10989, metadata !DIExpression()), !dbg !10990
  %7 = load i8*, i8** %4, align 4, !dbg !10991
  %8 = load i8*, i8** %5, align 4, !dbg !10992
  %9 = load i32, i32* %6, align 4, !dbg !10993
  %10 = call i8* @memcpy(i8* noundef %7, i8* noundef %8, i32 noundef %9) #10, !dbg !10994
  ret void, !dbg !10995
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_bss_zero() #1 !dbg !10996 {
  call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #10, !dbg !10997
  ret void, !dbg !10998
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_cpu(i32 noundef %0) #1 !dbg !10999 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11002, metadata !DIExpression()), !dbg !11003
  %3 = load i32, i32* %2, align 4, !dbg !11004
  call void @init_idle_thread(i32 noundef %3) #10, !dbg !11005
  %4 = load i32, i32* %2, align 4, !dbg !11006
  %5 = getelementptr inbounds [1 x %struct.k_thread.203], [1 x %struct.k_thread.203]* @z_idle_threads, i32 0, i32 %4, !dbg !11007
  %6 = load i32, i32* %2, align 4, !dbg !11008
  %7 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %6, !dbg !11009
  %8 = getelementptr inbounds %struct._cpu, %struct._cpu* %7, i32 0, i32 3, !dbg !11010
  store %struct.k_thread.203* %5, %struct.k_thread.203** %8, align 4, !dbg !11011
  %9 = load i32, i32* %2, align 4, !dbg !11012
  %10 = trunc i32 %9 to i8, !dbg !11012
  %11 = load i32, i32* %2, align 4, !dbg !11013
  %12 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %11, !dbg !11014
  %13 = getelementptr inbounds %struct._cpu, %struct._cpu* %12, i32 0, i32 5, !dbg !11015
  store i8 %10, i8* %13, align 4, !dbg !11016
  %14 = load i32, i32* %2, align 4, !dbg !11017
  %15 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %14, !dbg !11018
  %16 = getelementptr inbounds [2048 x %struct.z_thread_stack_element], [2048 x %struct.z_thread_stack_element]* %15, i32 0, i32 0, !dbg !11018
  %17 = call i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef %16) #10, !dbg !11019
  %18 = getelementptr inbounds i8, i8* %17, i32 2048, !dbg !11020
  %19 = load i32, i32* %2, align 4, !dbg !11021
  %20 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %19, !dbg !11022
  %21 = getelementptr inbounds %struct._cpu, %struct._cpu* %20, i32 0, i32 1, !dbg !11023
  store i8* %18, i8** %21, align 4, !dbg !11024
  ret void, !dbg !11025
}

; Function Attrs: noinline nounwind optnone
define internal void @init_idle_thread(i32 noundef %0) #1 !dbg !11026 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.z_thread_stack_element*, align 4
  %5 = alloca i8*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11027, metadata !DIExpression()), !dbg !11028
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !11029, metadata !DIExpression()), !dbg !11030
  %6 = load i32, i32* %2, align 4, !dbg !11031
  %7 = getelementptr inbounds [1 x %struct.k_thread.203], [1 x %struct.k_thread.203]* @z_idle_threads, i32 0, i32 %6, !dbg !11032
  store %struct.k_thread.203* %7, %struct.k_thread.203** %3, align 4, !dbg !11030
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %4, metadata !11033, metadata !DIExpression()), !dbg !11036
  %8 = load i32, i32* %2, align 4, !dbg !11037
  %9 = getelementptr inbounds [1 x [256 x %struct.z_thread_stack_element]], [1 x [256 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %8, !dbg !11038
  %10 = getelementptr inbounds [256 x %struct.z_thread_stack_element], [256 x %struct.z_thread_stack_element]* %9, i32 0, i32 0, !dbg !11038
  store %struct.z_thread_stack_element* %10, %struct.z_thread_stack_element** %4, align 4, !dbg !11036
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11039, metadata !DIExpression()), !dbg !11040
  store i8* null, i8** %5, align 4, !dbg !11040
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !11041
  %12 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %4, align 4, !dbg !11042
  %13 = load i32, i32* %2, align 4, !dbg !11043
  %14 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %13, !dbg !11044
  %15 = bitcast %struct._cpu* %14 to i8*, !dbg !11045
  %16 = load i8*, i8** %5, align 4, !dbg !11046
  %17 = call i8* @z_setup_new_thread(%struct.k_thread.203* noundef %11, %struct.z_thread_stack_element* noundef %12, i32 noundef 256, void (i8*, i8*, i8*)* noundef @idle, i8* noundef %15, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef %16) #10, !dbg !11047
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !11048
  call void @z_mark_thread_as_started(%struct.k_thread.203* noundef %18) #10, !dbg !11049
  ret void, !dbg !11050
}

; Function Attrs: noinline nounwind optnone
define internal i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef %0) #1 !dbg !11051 {
  %2 = alloca %struct.z_thread_stack_element*, align 4
  store %struct.z_thread_stack_element* %0, %struct.z_thread_stack_element** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %2, metadata !11054, metadata !DIExpression()), !dbg !11055
  %3 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %2, align 4, !dbg !11056
  %4 = bitcast %struct.z_thread_stack_element* %3 to i8*, !dbg !11057
  %5 = getelementptr inbounds i8, i8* %4, i32 0, !dbg !11058
  ret i8* %5, !dbg !11059
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_started(%struct.k_thread.203* noundef %0) #1 !dbg !11060 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !11064, metadata !DIExpression()), !dbg !11065
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11066
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !11067
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !11068
  %6 = load i8, i8* %5, align 1, !dbg !11069
  %7 = zext i8 %6 to i32, !dbg !11069
  %8 = and i32 %7, -5, !dbg !11069
  %9 = trunc i32 %8 to i8, !dbg !11069
  store i8 %9, i8* %5, align 1, !dbg !11069
  ret void, !dbg !11070
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @z_cstart() #5 !dbg !11071 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.203, align 8
  call void @gcov_static_init() #10, !dbg !11072
  call void @z_sys_init_run_level(i32 noundef 0) #10, !dbg !11073
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11074, metadata !DIExpression()) #9, !dbg !11077
  %4 = call i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #13, !dbg !11082
  %5 = ptrtoint i8* %4 to i32, !dbg !11083
  %6 = add i32 %5, 2048, !dbg !11084
  store i32 %6, i32* %2, align 4, !dbg !11077
  %7 = load i32, i32* %2, align 4, !dbg !11085
  store i32 %7, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !11086, metadata !DIExpression()) #9, !dbg !11090
  %8 = load i32, i32* %1, align 4, !dbg !11092
  call void asm sideeffect "MSR msp, $0", "r"(i32 %8) #9, !dbg !11093, !srcloc !11094
  call void @__NVIC_SetPriority.50(i32 noundef -2, i32 noundef 255) #13, !dbg !11095
  call void @z_arm_fault_init() #13, !dbg !11098
  call void @z_arm_cpu_idle_init() #13, !dbg !11099
  br label %9, !dbg !11100

9:                                                ; preds = %0
  br label %10, !dbg !11101

10:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata %struct.k_thread.203* %3, metadata !11103, metadata !DIExpression()), !dbg !11104
  call void @z_dummy_thread_init(%struct.k_thread.203* noundef %3) #10, !dbg !11105
  call void @z_device_state_init() #10, !dbg !11106
  call void @z_sys_init_run_level(i32 noundef 1) #10, !dbg !11107
  call void @z_sys_init_run_level(i32 noundef 2) #10, !dbg !11108
  %11 = call i8* @prepare_multithreading() #10, !dbg !11109
  call void @switch_to_main_thread(i8* noundef %11) #12, !dbg !11110
  unreachable, !dbg !11110
}

; Function Attrs: noinline nounwind optnone
define internal void @gcov_static_init() #1 !dbg !11111 {
  ret void, !dbg !11113
}

; Function Attrs: noinline nounwind optnone
define internal void @z_sys_init_run_level(i32 noundef %0) #1 !dbg !2989 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.init_entry*, align 4
  %4 = alloca %struct.device.73*, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11114, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.declare(metadata %struct.init_entry** %3, metadata !11116, metadata !DIExpression()), !dbg !11117
  %6 = load i32, i32* %2, align 4, !dbg !11118
  %7 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %6, !dbg !11120
  %8 = load %struct.init_entry*, %struct.init_entry** %7, align 4, !dbg !11120
  store %struct.init_entry* %8, %struct.init_entry** %3, align 4, !dbg !11121
  br label %9, !dbg !11122

9:                                                ; preds = %56, %1
  %10 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !11123
  %11 = load i32, i32* %2, align 4, !dbg !11125
  %12 = add i32 %11, 1, !dbg !11126
  %13 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %12, !dbg !11127
  %14 = load %struct.init_entry*, %struct.init_entry** %13, align 4, !dbg !11127
  %15 = icmp ult %struct.init_entry* %10, %14, !dbg !11128
  br i1 %15, label %16, label %59, !dbg !11129

16:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata %struct.device.73** %4, metadata !11130, metadata !DIExpression()), !dbg !11132
  %17 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !11133
  %18 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %17, i32 0, i32 1, !dbg !11134
  %19 = load %struct.device.73*, %struct.device.73** %18, align 4, !dbg !11134
  store %struct.device.73* %19, %struct.device.73** %4, align 4, !dbg !11132
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11135, metadata !DIExpression()), !dbg !11136
  %20 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !11137
  %21 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %20, i32 0, i32 0, !dbg !11138
  %22 = load i32 (%struct.device.73*)*, i32 (%struct.device.73*)** %21, align 4, !dbg !11138
  %23 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11139
  %24 = call i32 %22(%struct.device.73* noundef %23) #10, !dbg !11137
  store i32 %24, i32* %5, align 4, !dbg !11136
  %25 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11140
  %26 = icmp ne %struct.device.73* %25, null, !dbg !11142
  br i1 %26, label %27, label %55, !dbg !11143

27:                                               ; preds = %16
  %28 = load i32, i32* %5, align 4, !dbg !11144
  %29 = icmp ne i32 %28, 0, !dbg !11147
  br i1 %29, label %30, label %47, !dbg !11148

30:                                               ; preds = %27
  %31 = load i32, i32* %5, align 4, !dbg !11149
  %32 = icmp slt i32 %31, 0, !dbg !11152
  br i1 %32, label %33, label %36, !dbg !11153

33:                                               ; preds = %30
  %34 = load i32, i32* %5, align 4, !dbg !11154
  %35 = sub nsw i32 0, %34, !dbg !11156
  store i32 %35, i32* %5, align 4, !dbg !11157
  br label %36, !dbg !11158

36:                                               ; preds = %33, %30
  %37 = load i32, i32* %5, align 4, !dbg !11159
  %38 = icmp sgt i32 %37, 255, !dbg !11161
  br i1 %38, label %39, label %40, !dbg !11162

39:                                               ; preds = %36
  store i32 255, i32* %5, align 4, !dbg !11163
  br label %40, !dbg !11165

40:                                               ; preds = %39, %36
  %41 = load i32, i32* %5, align 4, !dbg !11166
  %42 = trunc i32 %41 to i8, !dbg !11166
  %43 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11167
  %44 = getelementptr inbounds %struct.device.73, %struct.device.73* %43, i32 0, i32 3, !dbg !11168
  %45 = load %struct.device_state.72*, %struct.device_state.72** %44, align 4, !dbg !11168
  %46 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %45, i32 0, i32 0, !dbg !11169
  store i8 %42, i8* %46, align 1, !dbg !11170
  br label %47, !dbg !11171

47:                                               ; preds = %40, %27
  %48 = load %struct.device.73*, %struct.device.73** %4, align 4, !dbg !11172
  %49 = getelementptr inbounds %struct.device.73, %struct.device.73* %48, i32 0, i32 3, !dbg !11173
  %50 = load %struct.device_state.72*, %struct.device_state.72** %49, align 4, !dbg !11173
  %51 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %50, i32 0, i32 1, !dbg !11174
  %52 = load i8, i8* %51, align 1, !dbg !11175
  %53 = and i8 %52, -2, !dbg !11175
  %54 = or i8 %53, 1, !dbg !11175
  store i8 %54, i8* %51, align 1, !dbg !11175
  br label %55, !dbg !11176

55:                                               ; preds = %47, %16
  br label %56, !dbg !11177

56:                                               ; preds = %55
  %57 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !11178
  %58 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %57, i32 1, !dbg !11178
  store %struct.init_entry* %58, %struct.init_entry** %3, align 4, !dbg !11178
  br label %9, !dbg !11179, !llvm.loop !11180

59:                                               ; preds = %9
  ret void, !dbg !11182
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.50(i32 noundef %0, i32 noundef %1) #1 !dbg !11183 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11184, metadata !DIExpression()), !dbg !11185
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11186, metadata !DIExpression()), !dbg !11187
  %5 = load i32, i32* %3, align 4, !dbg !11188
  %6 = icmp sge i32 %5, 0, !dbg !11190
  br i1 %6, label %7, label %29, !dbg !11191

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4, !dbg !11192
  %9 = lshr i32 %8, 2, !dbg !11192
  %10 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %9, !dbg !11194
  %11 = load volatile i32, i32* %10, align 4, !dbg !11194
  %12 = load i32, i32* %3, align 4, !dbg !11195
  %13 = and i32 %12, 3, !dbg !11195
  %14 = mul i32 %13, 8, !dbg !11195
  %15 = shl i32 255, %14, !dbg !11196
  %16 = xor i32 %15, -1, !dbg !11197
  %17 = and i32 %11, %16, !dbg !11198
  %18 = load i32, i32* %4, align 4, !dbg !11199
  %19 = shl i32 %18, 6, !dbg !11200
  %20 = and i32 %19, 255, !dbg !11201
  %21 = load i32, i32* %3, align 4, !dbg !11202
  %22 = and i32 %21, 3, !dbg !11202
  %23 = mul i32 %22, 8, !dbg !11202
  %24 = shl i32 %20, %23, !dbg !11203
  %25 = or i32 %17, %24, !dbg !11204
  %26 = load i32, i32* %3, align 4, !dbg !11205
  %27 = lshr i32 %26, 2, !dbg !11205
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 9), i32 0, i32 %27, !dbg !11206
  store volatile i32 %25, i32* %28, align 4, !dbg !11207
  br label %55, !dbg !11208

29:                                               ; preds = %2
  %30 = load i32, i32* %3, align 4, !dbg !11209
  %31 = and i32 %30, 15, !dbg !11209
  %32 = sub i32 %31, 8, !dbg !11209
  %33 = lshr i32 %32, 2, !dbg !11209
  %34 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %33, !dbg !11211
  %35 = load volatile i32, i32* %34, align 4, !dbg !11211
  %36 = load i32, i32* %3, align 4, !dbg !11212
  %37 = and i32 %36, 3, !dbg !11212
  %38 = mul i32 %37, 8, !dbg !11212
  %39 = shl i32 255, %38, !dbg !11213
  %40 = xor i32 %39, -1, !dbg !11214
  %41 = and i32 %35, %40, !dbg !11215
  %42 = load i32, i32* %4, align 4, !dbg !11216
  %43 = shl i32 %42, 6, !dbg !11217
  %44 = and i32 %43, 255, !dbg !11218
  %45 = load i32, i32* %3, align 4, !dbg !11219
  %46 = and i32 %45, 3, !dbg !11219
  %47 = mul i32 %46, 8, !dbg !11219
  %48 = shl i32 %44, %47, !dbg !11220
  %49 = or i32 %41, %48, !dbg !11221
  %50 = load i32, i32* %3, align 4, !dbg !11222
  %51 = and i32 %50, 15, !dbg !11222
  %52 = sub i32 %51, 8, !dbg !11222
  %53 = lshr i32 %52, 2, !dbg !11222
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), i32 0, i32 %53, !dbg !11223
  store volatile i32 %49, i32* %54, align 4, !dbg !11224
  br label %55

55:                                               ; preds = %29, %7
  ret void, !dbg !11225
}

declare dso_local void @z_arm_cpu_idle_init() #0

; Function Attrs: noinline nounwind optnone
define internal void @z_dummy_thread_init(%struct.k_thread.203* noundef %0) #1 !dbg !11226 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !11228, metadata !DIExpression()), !dbg !11229
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11230
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !11231
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !11232
  store i8 1, i8* %5, align 1, !dbg !11233
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11234
  %7 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %6, i32 0, i32 0, !dbg !11235
  %8 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %7, i32 0, i32 2, !dbg !11236
  store i8 1, i8* %8, align 4, !dbg !11237
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11238
  %10 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %9, i32 0, i32 5, !dbg !11239
  store %struct.k_heap.201* null, %struct.k_heap.201** %10, align 4, !dbg !11240
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11241
  store %struct.k_thread.203* %11, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11242
  ret void, !dbg !11243
}

; Function Attrs: noinline nounwind optnone
define internal i8* @prepare_multithreading() #1 !dbg !11244 {
  %1 = alloca i8*, align 4
  call void @llvm.dbg.declare(metadata i8** %1, metadata !11247, metadata !DIExpression()), !dbg !11248
  call void @z_sched_init() #10, !dbg !11249
  store %struct.k_thread.203* @z_main_thread, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11250
  %2 = call i8* @z_setup_new_thread(%struct.k_thread.203* noundef @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0)) #10, !dbg !11251
  store i8* %2, i8** %1, align 4, !dbg !11252
  call void @z_mark_thread_as_started(%struct.k_thread.203* noundef @z_main_thread) #10, !dbg !11253
  call void @z_ready_thread(%struct.k_thread.203* noundef @z_main_thread) #10, !dbg !11254
  call void @z_init_cpu(i32 noundef 0) #10, !dbg !11255
  %3 = load i8*, i8** %1, align 4, !dbg !11256
  ret i8* %3, !dbg !11257
}

; Function Attrs: noinline noreturn nounwind optnone
define internal void @switch_to_main_thread(i8* noundef %0) #5 !dbg !11258 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !11261, metadata !DIExpression()), !dbg !11262
  %3 = load i8*, i8** %2, align 4, !dbg !11263
  call void @arch_switch_to_main_thread(%struct.k_thread.203* noundef @z_main_thread, i8* noundef %3, void (i8*, i8*, i8*)* noundef @bg_thread_main) #10, !dbg !11264
  unreachable, !dbg !11265
}

; Function Attrs: noinline nounwind optnone
define internal void @bg_thread_main(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !11266 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11267, metadata !DIExpression()), !dbg !11268
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11269, metadata !DIExpression()), !dbg !11270
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11271, metadata !DIExpression()), !dbg !11272
  %7 = load i8*, i8** %4, align 4, !dbg !11273
  %8 = load i8*, i8** %5, align 4, !dbg !11274
  %9 = load i8*, i8** %6, align 4, !dbg !11275
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11276
  call void @z_sys_init_run_level(i32 noundef 3) #10, !dbg !11277
  call void @boot_banner() #10, !dbg !11278
  call void @z_sys_init_run_level(i32 noundef 4) #10, !dbg !11279
  call void @z_init_static_threads() #10, !dbg !11280
  call void @main() #10, !dbg !11281
  %10 = load i8, i8* getelementptr inbounds (%struct.k_thread.203, %struct.k_thread.203* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11282
  %11 = zext i8 %10 to i32, !dbg !11282
  %12 = and i32 %11, -2, !dbg !11282
  %13 = trunc i32 %12 to i8, !dbg !11282
  store i8 %13, i8* getelementptr inbounds (%struct.k_thread.203, %struct.k_thread.203* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11282
  ret void, !dbg !11283
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_thread_foreach(void (%struct.k_thread.203*, i8*)* noundef %0, i8* noundef %1) #1 !dbg !11284 {
  %3 = alloca void (%struct.k_thread.203*, i8*)*, align 4
  %4 = alloca i8*, align 4
  store void (%struct.k_thread.203*, i8*)* %0, void (%struct.k_thread.203*, i8*)** %3, align 4
  call void @llvm.dbg.declare(metadata void (%struct.k_thread.203*, i8*)** %3, metadata !11293, metadata !DIExpression()), !dbg !11294
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11295, metadata !DIExpression()), !dbg !11296
  ret void, !dbg !11297
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread.203*, i8*)* noundef %0, i8* noundef %1) #1 !dbg !11298 {
  %3 = alloca void (%struct.k_thread.203*, i8*)*, align 4
  %4 = alloca i8*, align 4
  store void (%struct.k_thread.203*, i8*)* %0, void (%struct.k_thread.203*, i8*)** %3, align 4
  call void @llvm.dbg.declare(metadata void (%struct.k_thread.203*, i8*)** %3, metadata !11299, metadata !DIExpression()), !dbg !11300
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11301, metadata !DIExpression()), !dbg !11302
  ret void, !dbg !11303
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @k_is_in_isr() #1 !dbg !11304 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !11305, metadata !DIExpression()) #9, !dbg !11307
  %2 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !11311, !srcloc !11312
  store i32 %2, i32* %1, align 4, !dbg !11311
  %3 = load i32, i32* %1, align 4, !dbg !11313
  %4 = icmp ne i32 %3, 0, !dbg !11314
  %5 = zext i1 %4 to i64, !dbg !11314
  %6 = select i1 %4, i32 1, i32 0, !dbg !11314
  ret i1 %4, !dbg !11315
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_essential_set() #1 !dbg !11316 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11317
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 0, !dbg !11318
  %3 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %2, i32 0, i32 2, !dbg !11319
  %4 = load i8, i8* %3, align 4, !dbg !11320
  %5 = zext i8 %4 to i32, !dbg !11320
  %6 = or i32 %5, 1, !dbg !11320
  %7 = trunc i32 %6 to i8, !dbg !11320
  store i8 %7, i8* %3, align 4, !dbg !11320
  ret void, !dbg !11321
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_essential_clear() #1 !dbg !11322 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11323
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 0, !dbg !11324
  %3 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %2, i32 0, i32 2, !dbg !11325
  %4 = load i8, i8* %3, align 4, !dbg !11326
  %5 = zext i8 %4 to i32, !dbg !11326
  %6 = and i32 %5, -2, !dbg !11326
  %7 = trunc i32 %6 to i8, !dbg !11326
  store i8 %7, i8* %3, align 4, !dbg !11326
  ret void, !dbg !11327
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_is_thread_essential() #1 !dbg !11328 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11329
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 0, !dbg !11330
  %3 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %2, i32 0, i32 2, !dbg !11331
  %4 = load i8, i8* %3, align 4, !dbg !11331
  %5 = zext i8 %4 to i32, !dbg !11329
  %6 = and i32 %5, 1, !dbg !11332
  %7 = icmp eq i32 %6, 1, !dbg !11333
  ret i1 %7, !dbg !11334
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread.203* noundef %0, i8* noundef %1) #1 !dbg !11335 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i8*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !11338, metadata !DIExpression()), !dbg !11339
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11340, metadata !DIExpression()), !dbg !11341
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !11342
  %6 = load i8*, i8** %4, align 4, !dbg !11343
  br label %7, !dbg !11344

7:                                                ; preds = %2
  br label %8, !dbg !11345

8:                                                ; preds = %7
  ret i32 -88, !dbg !11347
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @k_thread_name_get(%struct.k_thread.203* noundef %0) #1 !dbg !11348 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !11351, metadata !DIExpression()), !dbg !11352
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11353
  ret i8* null, !dbg !11354
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread.203* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !11355 {
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !11358, metadata !DIExpression()), !dbg !11359
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11360, metadata !DIExpression()), !dbg !11361
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11362, metadata !DIExpression()), !dbg !11363
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !11364
  %8 = load i8*, i8** %5, align 4, !dbg !11365
  %9 = load i32, i32* %6, align 4, !dbg !11366
  ret i32 -88, !dbg !11367
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @k_thread_state_str(%struct.k_thread.203* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !3007 {
  %4 = alloca i8*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !11368, metadata !DIExpression()), !dbg !11369
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11370, metadata !DIExpression()), !dbg !11371
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11372, metadata !DIExpression()), !dbg !11373
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11374, metadata !DIExpression()), !dbg !11375
  store i32 0, i32* %8, align 4, !dbg !11375
  call void @llvm.dbg.declare(metadata i8* %9, metadata !11376, metadata !DIExpression()), !dbg !11377
  call void @llvm.dbg.declare(metadata i8* %10, metadata !11378, metadata !DIExpression()), !dbg !11379
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !11380
  %13 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %12, i32 0, i32 0, !dbg !11381
  %14 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %13, i32 0, i32 3, !dbg !11382
  %15 = load i8, i8* %14, align 1, !dbg !11382
  store i8 %15, i8* %10, align 1, !dbg !11379
  %16 = load i8*, i8** %6, align 4, !dbg !11383
  %17 = icmp eq i8* %16, null, !dbg !11385
  br i1 %17, label %21, label %18, !dbg !11386

18:                                               ; preds = %3
  %19 = load i32, i32* %7, align 4, !dbg !11387
  %20 = icmp eq i32 %19, 0, !dbg !11388
  br i1 %20, label %21, label %22, !dbg !11389

21:                                               ; preds = %18, %3
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8** %4, align 4, !dbg !11390
  br label %88, !dbg !11390

22:                                               ; preds = %18
  %23 = load i32, i32* %7, align 4, !dbg !11392
  %24 = add i32 %23, -1, !dbg !11392
  store i32 %24, i32* %7, align 4, !dbg !11392
  call void @llvm.dbg.declare(metadata i8* %11, metadata !11393, metadata !DIExpression()), !dbg !11395
  store i8 0, i8* %11, align 1, !dbg !11395
  br label %25, !dbg !11396

25:                                               ; preds = %80, %22
  %26 = load i8, i8* %10, align 1, !dbg !11397
  %27 = zext i8 %26 to i32, !dbg !11397
  %28 = icmp ne i32 %27, 0, !dbg !11399
  br i1 %28, label %29, label %83, !dbg !11400

29:                                               ; preds = %25
  %30 = load i8, i8* %11, align 1, !dbg !11401
  %31 = zext i8 %30 to i32, !dbg !11401
  %32 = shl i32 1, %31, !dbg !11401
  %33 = trunc i32 %32 to i8, !dbg !11401
  store i8 %33, i8* %9, align 1, !dbg !11403
  %34 = load i8, i8* %10, align 1, !dbg !11404
  %35 = zext i8 %34 to i32, !dbg !11404
  %36 = load i8, i8* %9, align 1, !dbg !11406
  %37 = zext i8 %36 to i32, !dbg !11406
  %38 = and i32 %35, %37, !dbg !11407
  %39 = icmp eq i32 %38, 0, !dbg !11408
  br i1 %39, label %40, label %41, !dbg !11409

40:                                               ; preds = %29
  br label %80, !dbg !11410

41:                                               ; preds = %29
  %42 = load i8*, i8** %6, align 4, !dbg !11412
  %43 = load i32, i32* %8, align 4, !dbg !11413
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !11414
  %45 = load i32, i32* %7, align 4, !dbg !11415
  %46 = load i32, i32* %8, align 4, !dbg !11416
  %47 = sub i32 %45, %46, !dbg !11417
  %48 = load i8, i8* %11, align 1, !dbg !11418
  %49 = zext i8 %48 to i32, !dbg !11419
  %50 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %49, !dbg !11419
  %51 = load i8*, i8** %50, align 4, !dbg !11419
  %52 = load i8, i8* %11, align 1, !dbg !11420
  %53 = zext i8 %52 to i32, !dbg !11421
  %54 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %53, !dbg !11421
  %55 = load i32, i32* %54, align 4, !dbg !11421
  %56 = call i32 @copy_bytes(i8* noundef %44, i32 noundef %47, i8* noundef %51, i32 noundef %55) #10, !dbg !11422
  %57 = load i32, i32* %8, align 4, !dbg !11423
  %58 = add i32 %57, %56, !dbg !11423
  store i32 %58, i32* %8, align 4, !dbg !11423
  %59 = load i8, i8* %9, align 1, !dbg !11424
  %60 = zext i8 %59 to i32, !dbg !11424
  %61 = xor i32 %60, -1, !dbg !11425
  %62 = load i8, i8* %10, align 1, !dbg !11426
  %63 = zext i8 %62 to i32, !dbg !11426
  %64 = and i32 %63, %61, !dbg !11426
  %65 = trunc i32 %64 to i8, !dbg !11426
  store i8 %65, i8* %10, align 1, !dbg !11426
  %66 = load i8, i8* %10, align 1, !dbg !11427
  %67 = zext i8 %66 to i32, !dbg !11427
  %68 = icmp ne i32 %67, 0, !dbg !11429
  br i1 %68, label %69, label %79, !dbg !11430

69:                                               ; preds = %41
  %70 = load i8*, i8** %6, align 4, !dbg !11431
  %71 = load i32, i32* %8, align 4, !dbg !11433
  %72 = getelementptr inbounds i8, i8* %70, i32 %71, !dbg !11434
  %73 = load i32, i32* %7, align 4, !dbg !11435
  %74 = load i32, i32* %8, align 4, !dbg !11436
  %75 = sub i32 %73, %74, !dbg !11437
  %76 = call i32 @copy_bytes(i8* noundef %72, i32 noundef %75, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #10, !dbg !11438
  %77 = load i32, i32* %8, align 4, !dbg !11439
  %78 = add i32 %77, %76, !dbg !11439
  store i32 %78, i32* %8, align 4, !dbg !11439
  br label %79, !dbg !11440

79:                                               ; preds = %69, %41
  br label %80, !dbg !11441

80:                                               ; preds = %79, %40
  %81 = load i8, i8* %11, align 1, !dbg !11442
  %82 = add i8 %81, 1, !dbg !11442
  store i8 %82, i8* %11, align 1, !dbg !11442
  br label %25, !dbg !11443, !llvm.loop !11444

83:                                               ; preds = %25
  %84 = load i8*, i8** %6, align 4, !dbg !11446
  %85 = load i32, i32* %8, align 4, !dbg !11447
  %86 = getelementptr inbounds i8, i8* %84, i32 %85, !dbg !11446
  store i8 0, i8* %86, align 1, !dbg !11448
  %87 = load i8*, i8** %6, align 4, !dbg !11449
  store i8* %87, i8** %4, align 4, !dbg !11450
  br label %88, !dbg !11450

88:                                               ; preds = %83, %21
  %89 = load i8*, i8** %4, align 4, !dbg !11451
  ret i8* %89, !dbg !11451
}

; Function Attrs: noinline nounwind optnone
define internal i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) #1 !dbg !11452 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11455, metadata !DIExpression()), !dbg !11456
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11457, metadata !DIExpression()), !dbg !11458
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !11459, metadata !DIExpression()), !dbg !11460
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11461, metadata !DIExpression()), !dbg !11462
  call void @llvm.dbg.declare(metadata i32* %9, metadata !11463, metadata !DIExpression()), !dbg !11464
  %10 = load i32, i32* %6, align 4, !dbg !11465
  %11 = load i32, i32* %8, align 4, !dbg !11465
  %12 = icmp ult i32 %10, %11, !dbg !11465
  br i1 %12, label %13, label %15, !dbg !11465

13:                                               ; preds = %4
  %14 = load i32, i32* %6, align 4, !dbg !11465
  br label %17, !dbg !11465

15:                                               ; preds = %4
  %16 = load i32, i32* %8, align 4, !dbg !11465
  br label %17, !dbg !11465

17:                                               ; preds = %15, %13
  %18 = phi i32 [ %14, %13 ], [ %16, %15 ], !dbg !11465
  store i32 %18, i32* %9, align 4, !dbg !11466
  %19 = load i8*, i8** %5, align 4, !dbg !11467
  %20 = load i8*, i8** %7, align 4, !dbg !11468
  %21 = load i32, i32* %9, align 4, !dbg !11469
  %22 = call i8* @memcpy(i8* noundef %19, i8* noundef %20, i32 noundef %21) #10, !dbg !11470
  %23 = load i32, i32* %9, align 4, !dbg !11471
  ret i32 %23, !dbg !11472
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_start(%struct.k_thread.203* noundef %0) #1 !dbg !11473 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !11476, metadata !DIExpression()), !dbg !11477
  br label %3, !dbg !11478

3:                                                ; preds = %1
  br label %4, !dbg !11479

4:                                                ; preds = %3
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11481
  call void @z_sched_start(%struct.k_thread.203* noundef %5) #10, !dbg !11482
  ret void, !dbg !11483
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @z_setup_new_thread(%struct.k_thread.203* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) #1 !dbg !11484 {
  %11 = alloca i8*, align 4
  %12 = alloca %struct.k_thread.203*, align 4
  %13 = alloca %struct.z_thread_stack_element*, align 4
  %14 = alloca i32, align 4
  %15 = alloca void (i8*, i8*, i8*)*, align 4
  %16 = alloca i8*, align 4
  %17 = alloca i8*, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 4
  %22 = alloca i8*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %12, metadata !11492, metadata !DIExpression()), !dbg !11493
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %13, metadata !11494, metadata !DIExpression()), !dbg !11495
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !11496, metadata !DIExpression()), !dbg !11497
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %15, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %15, metadata !11498, metadata !DIExpression()), !dbg !11499
  store i8* %4, i8** %16, align 4
  call void @llvm.dbg.declare(metadata i8** %16, metadata !11500, metadata !DIExpression()), !dbg !11501
  store i8* %5, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !11502, metadata !DIExpression()), !dbg !11503
  store i8* %6, i8** %18, align 4
  call void @llvm.dbg.declare(metadata i8** %18, metadata !11504, metadata !DIExpression()), !dbg !11505
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !11506, metadata !DIExpression()), !dbg !11507
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !11508, metadata !DIExpression()), !dbg !11509
  store i8* %9, i8** %21, align 4
  call void @llvm.dbg.declare(metadata i8** %21, metadata !11510, metadata !DIExpression()), !dbg !11511
  call void @llvm.dbg.declare(metadata i8** %22, metadata !11512, metadata !DIExpression()), !dbg !11513
  br label %23, !dbg !11514

23:                                               ; preds = %10
  br label %24, !dbg !11515

24:                                               ; preds = %23
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11517
  %26 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %25, i32 0, i32 3, !dbg !11518
  call void @z_waitq_init(%union.anon.192* noundef %26) #10, !dbg !11519
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11520
  %28 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %27, i32 0, i32 0, !dbg !11521
  %29 = load i32, i32* %19, align 4, !dbg !11522
  %30 = load i32, i32* %20, align 4, !dbg !11523
  call void @z_init_thread_base(%struct._thread_base.196* noundef %28, i32 noundef %29, i32 noundef 4, i32 noundef %30) #10, !dbg !11524
  %31 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11525
  %32 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !11526
  %33 = load i32, i32* %14, align 4, !dbg !11527
  %34 = call i8* @setup_thread_stack(%struct.k_thread.203* noundef %31, %struct.z_thread_stack_element* noundef %32, i32 noundef %33) #10, !dbg !11528
  store i8* %34, i8** %22, align 4, !dbg !11529
  %35 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11530
  %36 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !11531
  %37 = load i8*, i8** %22, align 4, !dbg !11532
  %38 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %15, align 4, !dbg !11533
  %39 = load i8*, i8** %16, align 4, !dbg !11534
  %40 = load i8*, i8** %17, align 4, !dbg !11535
  %41 = load i8*, i8** %18, align 4, !dbg !11536
  call void @arch_new_thread(%struct.k_thread.203* noundef %35, %struct.z_thread_stack_element* noundef %36, i8* noundef %37, void (i8*, i8*, i8*)* noundef %38, i8* noundef %39, i8* noundef %40, i8* noundef %41) #10, !dbg !11537
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11538
  %43 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %42, i32 0, i32 2, !dbg !11539
  store i8* null, i8** %43, align 4, !dbg !11540
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11541
  %45 = icmp ne %struct.k_thread.203* %44, null, !dbg !11541
  br i1 %45, label %50, label %46, !dbg !11543

46:                                               ; preds = %24
  %47 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11544
  %48 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %47, i32 0, i32 5, !dbg !11546
  store %struct.k_heap.201* null, %struct.k_heap.201** %48, align 4, !dbg !11547
  %49 = load i8*, i8** %22, align 4, !dbg !11548
  store i8* %49, i8** %11, align 4, !dbg !11549
  br label %59, !dbg !11549

50:                                               ; preds = %24
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11550
  %52 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %51, i32 0, i32 5, !dbg !11551
  %53 = load %struct.k_heap.201*, %struct.k_heap.201** %52, align 4, !dbg !11551
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11552
  %55 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %54, i32 0, i32 5, !dbg !11553
  store %struct.k_heap.201* %53, %struct.k_heap.201** %55, align 4, !dbg !11554
  br label %56, !dbg !11555

56:                                               ; preds = %50
  br label %57, !dbg !11556

57:                                               ; preds = %56
  %58 = load i8*, i8** %22, align 4, !dbg !11558
  store i8* %58, i8** %11, align 4, !dbg !11559
  br label %59, !dbg !11559

59:                                               ; preds = %57, %46
  %60 = load i8*, i8** %11, align 4, !dbg !11560
  ret i8* %60, !dbg !11560
}

; Function Attrs: noinline nounwind optnone
define internal void @z_waitq_init(%union.anon.192* noundef %0) #1 !dbg !11561 {
  %2 = alloca %union.anon.192*, align 4
  store %union.anon.192* %0, %union.anon.192** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %2, metadata !11565, metadata !DIExpression()), !dbg !11566
  %3 = load %union.anon.192*, %union.anon.192** %2, align 4, !dbg !11567
  %4 = getelementptr inbounds %union.anon.192, %union.anon.192* %3, i32 0, i32 0, !dbg !11568
  call void @sys_dlist_init(%struct._dnode.191* noundef %4) #10, !dbg !11569
  ret void, !dbg !11570
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_thread_base(%struct._thread_base.196* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11571 {
  %5 = alloca %struct._thread_base.196*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct._thread_base.196* %0, %struct._thread_base.196** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._thread_base.196** %5, metadata !11575, metadata !DIExpression()), !dbg !11576
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11577, metadata !DIExpression()), !dbg !11578
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11579, metadata !DIExpression()), !dbg !11580
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11581, metadata !DIExpression()), !dbg !11582
  %9 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !11583
  %10 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %9, i32 0, i32 1, !dbg !11584
  store %union.anon.192* null, %union.anon.192** %10, align 8, !dbg !11585
  %11 = load i32, i32* %8, align 4, !dbg !11586
  %12 = trunc i32 %11 to i8, !dbg !11587
  %13 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !11588
  %14 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %13, i32 0, i32 2, !dbg !11589
  store i8 %12, i8* %14, align 4, !dbg !11590
  %15 = load i32, i32* %7, align 4, !dbg !11591
  %16 = trunc i32 %15 to i8, !dbg !11592
  %17 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !11593
  %18 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %17, i32 0, i32 3, !dbg !11594
  store i8 %16, i8* %18, align 1, !dbg !11595
  %19 = load i32, i32* %6, align 4, !dbg !11596
  %20 = trunc i32 %19 to i8, !dbg !11596
  %21 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !11597
  %22 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %21, i32 0, i32 4, !dbg !11598
  %23 = bitcast %union.anon.2.7* %22 to %struct.device_state.72*, !dbg !11598
  %24 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %23, i32 0, i32 0, !dbg !11598
  store i8 %20, i8* %24, align 2, !dbg !11599
  %25 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !11600
  %26 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %25, i32 0, i32 4, !dbg !11601
  %27 = bitcast %union.anon.2.7* %26 to %struct.device_state.72*, !dbg !11601
  %28 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %27, i32 0, i32 1, !dbg !11601
  store i8 0, i8* %28, align 1, !dbg !11602
  %29 = load %struct._thread_base.196*, %struct._thread_base.196** %5, align 4, !dbg !11603
  call void @z_init_thread_timeout(%struct._thread_base.196* noundef %29) #10, !dbg !11604
  ret void, !dbg !11605
}

; Function Attrs: noinline nounwind optnone
define internal i8* @setup_thread_stack(%struct.k_thread.203* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #1 !dbg !11606 {
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.z_thread_stack_element*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !11609, metadata !DIExpression()), !dbg !11610
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %5, metadata !11611, metadata !DIExpression()), !dbg !11612
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11613, metadata !DIExpression()), !dbg !11614
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11615, metadata !DIExpression()), !dbg !11616
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11617, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.declare(metadata i8** %9, metadata !11619, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.declare(metadata i8** %10, metadata !11621, metadata !DIExpression()), !dbg !11622
  call void @llvm.dbg.declare(metadata i32* %11, metadata !11623, metadata !DIExpression()), !dbg !11624
  store i32 0, i32* %11, align 4, !dbg !11624
  %16 = load i32, i32* %6, align 4, !dbg !11625
  %17 = add i32 %16, 7, !dbg !11625
  %18 = and i32 %17, -8, !dbg !11625
  %19 = add i32 %18, 0, !dbg !11625
  store i32 %19, i32* %7, align 4, !dbg !11627
  %20 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !11628
  %21 = call i8* @Z_KERNEL_STACK_BUFFER.58(%struct.z_thread_stack_element* noundef %20) #10, !dbg !11629
  store i8* %21, i8** %10, align 4, !dbg !11630
  %22 = load i32, i32* %7, align 4, !dbg !11631
  %23 = sub i32 %22, 0, !dbg !11632
  store i32 %23, i32* %8, align 4, !dbg !11633
  %24 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !11634
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !11635
  %26 = load i32, i32* %7, align 4, !dbg !11636
  %27 = getelementptr inbounds i8, i8* %25, i32 %26, !dbg !11637
  store i8* %27, i8** %9, align 4, !dbg !11638
  br label %28, !dbg !11639

28:                                               ; preds = %3
  br label %29, !dbg !11640

29:                                               ; preds = %28
  %30 = load i32, i32* %11, align 4, !dbg !11644
  %31 = add i32 %30, 7, !dbg !11644
  %32 = and i32 %31, -8, !dbg !11644
  store i32 %32, i32* %11, align 4, !dbg !11645
  %33 = load i32, i32* %11, align 4, !dbg !11646
  %34 = load i8*, i8** %9, align 4, !dbg !11647
  %35 = sub i32 0, %33, !dbg !11647
  %36 = getelementptr inbounds i8, i8* %34, i32 %35, !dbg !11647
  store i8* %36, i8** %9, align 4, !dbg !11647
  %37 = load i8*, i8** %9, align 4, !dbg !11648
  ret i8* %37, !dbg !11649
}

; Function Attrs: noinline nounwind optnone
define internal i8* @Z_KERNEL_STACK_BUFFER.58(%struct.z_thread_stack_element* noundef %0) #1 !dbg !11650 {
  %2 = alloca %struct.z_thread_stack_element*, align 4
  store %struct.z_thread_stack_element* %0, %struct.z_thread_stack_element** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %2, metadata !11653, metadata !DIExpression()), !dbg !11654
  %3 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %2, align 4, !dbg !11655
  %4 = bitcast %struct.z_thread_stack_element* %3 to i8*, !dbg !11656
  %5 = getelementptr inbounds i8, i8* %4, i32 0, !dbg !11657
  ret i8* %5, !dbg !11658
}

; Function Attrs: noinline nounwind optnone
define internal void @z_init_thread_timeout(%struct._thread_base.196* noundef %0) #1 !dbg !11659 {
  %2 = alloca %struct._thread_base.196*, align 4
  store %struct._thread_base.196* %0, %struct._thread_base.196** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._thread_base.196** %2, metadata !11663, metadata !DIExpression()), !dbg !11664
  %3 = load %struct._thread_base.196*, %struct._thread_base.196** %2, align 4, !dbg !11665
  %4 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %3, i32 0, i32 7, !dbg !11666
  call void @z_init_timeout(%struct._timeout.195* noundef %4) #10, !dbg !11667
  ret void, !dbg !11668
}

; Function Attrs: noinline nounwind optnone
define internal void @z_init_timeout(%struct._timeout.195* noundef %0) #1 !dbg !11669 {
  %2 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !11670, metadata !DIExpression()), !dbg !11671
  %3 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !11672
  %4 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %3, i32 0, i32 0, !dbg !11673
  call void @sys_dnode_init(%struct._dnode.191* noundef %4) #10, !dbg !11674
  ret void, !dbg !11675
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init(%struct._dnode.191* noundef %0) #1 !dbg !11676 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !11679, metadata !DIExpression()), !dbg !11680
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !11681
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !11682
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !11682
  store %struct._dnode.191* null, %struct._dnode.191** %5, align 4, !dbg !11683
  %6 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !11684
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !11685
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !11685
  store %struct._dnode.191* null, %struct._dnode.191** %8, align 4, !dbg !11686
  ret void, !dbg !11687
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_init(%struct._dnode.191* noundef %0) #1 !dbg !11688 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !11692, metadata !DIExpression()), !dbg !11693
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !11694
  %4 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !11695
  %5 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %4, i32 0, i32 0, !dbg !11696
  %6 = bitcast %union.anon.0.189* %5 to %struct._dnode.191**, !dbg !11696
  store %struct._dnode.191* %3, %struct._dnode.191** %6, align 4, !dbg !11697
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !11698
  %8 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !11699
  %9 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %8, i32 0, i32 1, !dbg !11700
  %10 = bitcast %union.anon.0.189* %9 to %struct._dnode.191**, !dbg !11700
  store %struct._dnode.191* %7, %struct._dnode.191** %10, align 4, !dbg !11701
  ret void, !dbg !11702
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_impl_k_thread_create(%struct.k_thread.203* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) #1 !dbg !11703 {
  %11 = alloca %union.argument_value, align 8
  %12 = alloca %struct.k_thread.203*, align 4
  %13 = alloca %struct.z_thread_stack_element*, align 4
  %14 = alloca i32, align 4
  %15 = alloca void (i8*, i8*, i8*)*, align 4
  %16 = alloca i8*, align 4
  %17 = alloca i8*, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %union.argument_value, align 8
  %22 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0
  %23 = bitcast i64* %22 to [1 x i64]*
  store [1 x i64] %9, [1 x i64]* %23, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %12, metadata !11710, metadata !DIExpression()), !dbg !11711
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %13, metadata !11712, metadata !DIExpression()), !dbg !11713
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !11714, metadata !DIExpression()), !dbg !11715
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %15, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %15, metadata !11716, metadata !DIExpression()), !dbg !11717
  store i8* %4, i8** %16, align 4
  call void @llvm.dbg.declare(metadata i8** %16, metadata !11718, metadata !DIExpression()), !dbg !11719
  store i8* %5, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !11720, metadata !DIExpression()), !dbg !11721
  store i8* %6, i8** %18, align 4
  call void @llvm.dbg.declare(metadata i8** %18, metadata !11722, metadata !DIExpression()), !dbg !11723
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !11724, metadata !DIExpression()), !dbg !11725
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !11726, metadata !DIExpression()), !dbg !11727
  call void @llvm.dbg.declare(metadata %union.argument_value* %11, metadata !11728, metadata !DIExpression()), !dbg !11729
  %24 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11730
  %25 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !11731
  %26 = load i32, i32* %14, align 4, !dbg !11732
  %27 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %15, align 4, !dbg !11733
  %28 = load i8*, i8** %16, align 4, !dbg !11734
  %29 = load i8*, i8** %17, align 4, !dbg !11735
  %30 = load i8*, i8** %18, align 4, !dbg !11736
  %31 = load i32, i32* %19, align 4, !dbg !11737
  %32 = load i32, i32* %20, align 4, !dbg !11738
  %33 = call i8* @z_setup_new_thread(%struct.k_thread.203* noundef %24, %struct.z_thread_stack_element* noundef %25, i32 noundef %26, void (i8*, i8*, i8*)* noundef %27, i8* noundef %28, i8* noundef %29, i8* noundef %30, i32 noundef %31, i32 noundef %32, i8* noundef null) #10, !dbg !11739
  %34 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !11740
  %35 = load i64, i64* %34, align 8, !dbg !11740
  %36 = getelementptr inbounds %union.argument_value, %union.argument_value* %21, i32 0, i32 0, !dbg !11740
  store i64 -1, i64* %36, align 8, !dbg !11740
  %37 = icmp eq i64 %35, -1, !dbg !11740
  br i1 %37, label %43, label %38, !dbg !11742

38:                                               ; preds = %10
  %39 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11743
  %40 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !11745
  %41 = bitcast i64* %40 to [1 x i64]*, !dbg !11745
  %42 = load [1 x i64], [1 x i64]* %41, align 8, !dbg !11745
  call void @schedule_new_thread(%struct.k_thread.203* noundef %39, [1 x i64] %42) #10, !dbg !11745
  br label %43, !dbg !11746

43:                                               ; preds = %38, %10
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !11747
  ret %struct.k_thread.203* %44, !dbg !11748
}

; Function Attrs: noinline nounwind optnone
define internal void @schedule_new_thread(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !11749 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %union.argument_value, align 8
  %6 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %7 = bitcast i64* %6 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %7, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !11752, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !11754, metadata !DIExpression()), !dbg !11755
  %8 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !11756
  %9 = load i64, i64* %8, align 8, !dbg !11756
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !11756
  store i64 0, i64* %10, align 8, !dbg !11756
  %11 = icmp eq i64 %9, 0, !dbg !11756
  br i1 %11, label %12, label %14, !dbg !11758

12:                                               ; preds = %2
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !11759
  call void @k_thread_start(%struct.k_thread.203* noundef %13) #10, !dbg !11761
  br label %19, !dbg !11762

14:                                               ; preds = %2
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !11763
  %16 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !11765
  %17 = bitcast i64* %16 to [1 x i64]*, !dbg !11765
  %18 = load [1 x i64], [1 x i64]* %17, align 8, !dbg !11765
  call void @z_add_thread_timeout(%struct.k_thread.203* noundef %15, [1 x i64] %18) #10, !dbg !11765
  br label %19

19:                                               ; preds = %14, %12
  ret void, !dbg !11766
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_start(%struct.k_thread.203* noundef %0) #1 !dbg !11767 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !11770, metadata !DIExpression()), !dbg !11771
  br label %3, !dbg !11772

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !11773, !srcloc !11775
  br label %4, !dbg !11773

4:                                                ; preds = %3
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !11776
  call void @z_impl_k_thread_start(%struct.k_thread.203* noundef %5) #10, !dbg !11777
  ret void, !dbg !11778
}

; Function Attrs: noinline nounwind optnone
define internal void @z_add_thread_timeout(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !11779 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !11780, metadata !DIExpression()), !dbg !11781
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !11782, metadata !DIExpression()), !dbg !11783
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !11784
  %8 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %7, i32 0, i32 0, !dbg !11785
  %9 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %8, i32 0, i32 7, !dbg !11786
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !11787
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !11787
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !11787
  call void @z_add_timeout(%struct._timeout.195* noundef %9, void (%struct._timeout.195*)* noundef @z_thread_timeout, [1 x i64] %12) #10, !dbg !11787
  ret void, !dbg !11788
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_static_threads() #1 !dbg !11789 {
  %1 = alloca %struct._static_thread_data.499*, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct._static_thread_data.499*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.argument_value, align 8
  call void @llvm.dbg.declare(metadata %struct._static_thread_data.499** %1, metadata !11790, metadata !DIExpression()), !dbg !11807
  store %struct._static_thread_data.499* getelementptr inbounds ([0 x %struct._static_thread_data.499], [0 x %struct._static_thread_data.499]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data.499** %1, align 4, !dbg !11807
  br label %6, !dbg !11807

6:                                                ; preds = %50, %0
  %7 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11808
  %8 = icmp ult %struct._static_thread_data.499* %7, getelementptr inbounds ([0 x %struct._static_thread_data.499], [0 x %struct._static_thread_data.499]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11808
  %9 = zext i1 %8 to i32, !dbg !11808
  store i32 %9, i32* %2, align 4, !dbg !11811
  %10 = load i32, i32* %2, align 4, !dbg !11808
  %11 = icmp ne i32 %10, 0, !dbg !11807
  br i1 %11, label %12, label %53, !dbg !11807

12:                                               ; preds = %6
  %13 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11813
  %14 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %13, i32 0, i32 0, !dbg !11815
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !11815
  %16 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11816
  %17 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %16, i32 0, i32 1, !dbg !11817
  %18 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %17, align 4, !dbg !11817
  %19 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11818
  %20 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %19, i32 0, i32 2, !dbg !11819
  %21 = load i32, i32* %20, align 4, !dbg !11819
  %22 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11820
  %23 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %22, i32 0, i32 3, !dbg !11821
  %24 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %23, align 4, !dbg !11821
  %25 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11822
  %26 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %25, i32 0, i32 4, !dbg !11823
  %27 = load i8*, i8** %26, align 4, !dbg !11823
  %28 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11824
  %29 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %28, i32 0, i32 5, !dbg !11825
  %30 = load i8*, i8** %29, align 4, !dbg !11825
  %31 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11826
  %32 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %31, i32 0, i32 6, !dbg !11827
  %33 = load i8*, i8** %32, align 4, !dbg !11827
  %34 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11828
  %35 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %34, i32 0, i32 7, !dbg !11829
  %36 = load i32, i32* %35, align 4, !dbg !11829
  %37 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11830
  %38 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %37, i32 0, i32 8, !dbg !11831
  %39 = load i32, i32* %38, align 4, !dbg !11831
  %40 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11832
  %41 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %40, i32 0, i32 11, !dbg !11833
  %42 = load i8*, i8** %41, align 4, !dbg !11833
  %43 = call i8* @z_setup_new_thread(%struct.k_thread.203* noundef %15, %struct.z_thread_stack_element* noundef %18, i32 noundef %21, void (i8*, i8*, i8*)* noundef %24, i8* noundef %27, i8* noundef %30, i8* noundef %33, i32 noundef %36, i32 noundef %39, i8* noundef %42) #10, !dbg !11834
  %44 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11835
  %45 = bitcast %struct._static_thread_data.499* %44 to i8*, !dbg !11835
  %46 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11836
  %47 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %46, i32 0, i32 0, !dbg !11837
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %47, align 4, !dbg !11837
  %49 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %48, i32 0, i32 2, !dbg !11838
  store i8* %45, i8** %49, align 4, !dbg !11839
  br label %50, !dbg !11840

50:                                               ; preds = %12
  %51 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %1, align 4, !dbg !11841
  %52 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %51, i32 1, !dbg !11841
  store %struct._static_thread_data.499* %52, %struct._static_thread_data.499** %1, align 4, !dbg !11841
  br label %6, !dbg !11841, !llvm.loop !11842

53:                                               ; preds = %6
  call void @k_sched_lock() #10, !dbg !11844
  call void @llvm.dbg.declare(metadata %struct._static_thread_data.499** %3, metadata !11845, metadata !DIExpression()), !dbg !11847
  store %struct._static_thread_data.499* getelementptr inbounds ([0 x %struct._static_thread_data.499], [0 x %struct._static_thread_data.499]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data.499** %3, align 4, !dbg !11847
  br label %54, !dbg !11847

54:                                               ; preds = %88, %53
  %55 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %3, align 4, !dbg !11848
  %56 = icmp ult %struct._static_thread_data.499* %55, getelementptr inbounds ([0 x %struct._static_thread_data.499], [0 x %struct._static_thread_data.499]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11848
  %57 = zext i1 %56 to i32, !dbg !11848
  store i32 %57, i32* %4, align 4, !dbg !11851
  %58 = load i32, i32* %4, align 4, !dbg !11848
  %59 = icmp ne i32 %58, 0, !dbg !11847
  br i1 %59, label %60, label %91, !dbg !11847

60:                                               ; preds = %54
  %61 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %3, align 4, !dbg !11853
  %62 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %61, i32 0, i32 9, !dbg !11856
  %63 = load i32, i32* %62, align 4, !dbg !11856
  %64 = sext i32 %63 to i64, !dbg !11853
  %65 = icmp ne i64 %64, -1, !dbg !11857
  br i1 %65, label %66, label %87, !dbg !11858

66:                                               ; preds = %60
  %67 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %3, align 4, !dbg !11859
  %68 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %67, i32 0, i32 0, !dbg !11861
  %69 = load %struct.k_thread.203*, %struct.k_thread.203** %68, align 4, !dbg !11861
  %70 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !11862
  %71 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %3, align 4, !dbg !11862
  %72 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %71, i32 0, i32 9, !dbg !11862
  %73 = load i32, i32* %72, align 4, !dbg !11862
  %74 = icmp sgt i32 %73, 0, !dbg !11862
  br i1 %74, label %75, label %79, !dbg !11862

75:                                               ; preds = %66
  %76 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %3, align 4, !dbg !11862
  %77 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %76, i32 0, i32 9, !dbg !11862
  %78 = load i32, i32* %77, align 4, !dbg !11862
  br label %80, !dbg !11862

79:                                               ; preds = %66
  br label %80, !dbg !11862

80:                                               ; preds = %79, %75
  %81 = phi i32 [ %78, %75 ], [ 0, %79 ], !dbg !11862
  %82 = sext i32 %81 to i64, !dbg !11862
  %83 = call i64 @k_ms_to_ticks_ceil64(i64 noundef %82) #10, !dbg !11862
  store i64 %83, i64* %70, align 8, !dbg !11862
  %84 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !11863
  %85 = bitcast i64* %84 to [1 x i64]*, !dbg !11863
  %86 = load [1 x i64], [1 x i64]* %85, align 8, !dbg !11863
  call void @schedule_new_thread(%struct.k_thread.203* noundef %69, [1 x i64] %86) #10, !dbg !11863
  br label %87, !dbg !11864

87:                                               ; preds = %80, %60
  br label %88, !dbg !11865

88:                                               ; preds = %87
  %89 = load %struct._static_thread_data.499*, %struct._static_thread_data.499** %3, align 4, !dbg !11866
  %90 = getelementptr inbounds %struct._static_thread_data.499, %struct._static_thread_data.499* %89, i32 1, !dbg !11866
  store %struct._static_thread_data.499* %90, %struct._static_thread_data.499** %3, align 4, !dbg !11866
  br label %54, !dbg !11866, !llvm.loop !11867

91:                                               ; preds = %54
  call void @k_sched_unlock() #10, !dbg !11869
  ret void, !dbg !11870
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ms_to_ticks_ceil64(i64 noundef %0) #1 !dbg !11871 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !11874, metadata !DIExpression()), !dbg !11875
  %15 = load i64, i64* %14, align 8, !dbg !11876
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !11877, metadata !DIExpression()), !dbg !11881
  store i32 1000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11883, metadata !DIExpression()), !dbg !11884
  store i32 10000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11885, metadata !DIExpression()), !dbg !11886
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !11887, metadata !DIExpression()), !dbg !11888
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !11889, metadata !DIExpression()), !dbg !11890
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !11891, metadata !DIExpression()), !dbg !11892
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !11893, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.declare(metadata i8* %10, metadata !11895, metadata !DIExpression()), !dbg !11896
  %16 = load i8, i8* %6, align 1, !dbg !11897
  %17 = trunc i8 %16 to i1, !dbg !11897
  br i1 %17, label %18, label %27, !dbg !11898

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !11899
  %20 = load i32, i32* %4, align 4, !dbg !11900
  %21 = icmp ugt i32 %19, %20, !dbg !11901
  br i1 %21, label %22, label %27, !dbg !11902

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !11903
  %24 = load i32, i32* %4, align 4, !dbg !11904
  %25 = urem i32 %23, %24, !dbg !11905
  %26 = icmp eq i32 %25, 0, !dbg !11906
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !11907
  %29 = zext i1 %28 to i8, !dbg !11896
  store i8 %29, i8* %10, align 1, !dbg !11896
  call void @llvm.dbg.declare(metadata i8* %11, metadata !11908, metadata !DIExpression()), !dbg !11909
  %30 = load i8, i8* %6, align 1, !dbg !11910
  %31 = trunc i8 %30 to i1, !dbg !11910
  br i1 %31, label %32, label %41, !dbg !11911

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !11912
  %34 = load i32, i32* %5, align 4, !dbg !11913
  %35 = icmp ugt i32 %33, %34, !dbg !11914
  br i1 %35, label %36, label %41, !dbg !11915

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !11916
  %38 = load i32, i32* %5, align 4, !dbg !11917
  %39 = urem i32 %37, %38, !dbg !11918
  %40 = icmp eq i32 %39, 0, !dbg !11919
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !11907
  %43 = zext i1 %42 to i8, !dbg !11909
  store i8 %43, i8* %11, align 1, !dbg !11909
  %44 = load i32, i32* %4, align 4, !dbg !11920
  %45 = load i32, i32* %5, align 4, !dbg !11922
  %46 = icmp eq i32 %44, %45, !dbg !11923
  br i1 %46, label %47, label %58, !dbg !11924

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !11925
  %49 = trunc i8 %48 to i1, !dbg !11925
  br i1 %49, label %50, label %54, !dbg !11925

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !11927
  %52 = trunc i64 %51 to i32, !dbg !11928
  %53 = zext i32 %52 to i64, !dbg !11929
  br label %56, !dbg !11925

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !11930
  br label %56, !dbg !11925

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !11925
  store i64 %57, i64* %2, align 8, !dbg !11931
  br label %195, !dbg !11931

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !11932, metadata !DIExpression()), !dbg !11933
  store i64 0, i64* %12, align 8, !dbg !11933
  %59 = load i8, i8* %10, align 1, !dbg !11934
  %60 = trunc i8 %59 to i1, !dbg !11934
  br i1 %60, label %86, label %61, !dbg !11936

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !11937, metadata !DIExpression()), !dbg !11939
  %62 = load i8, i8* %11, align 1, !dbg !11940
  %63 = trunc i8 %62 to i1, !dbg !11940
  br i1 %63, label %64, label %68, !dbg !11940

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !11941
  %66 = load i32, i32* %5, align 4, !dbg !11942
  %67 = udiv i32 %65, %66, !dbg !11943
  br label %70, !dbg !11940

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !11944
  br label %70, !dbg !11940

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !11940
  store i32 %71, i32* %13, align 4, !dbg !11939
  %72 = load i8, i8* %8, align 1, !dbg !11945
  %73 = trunc i8 %72 to i1, !dbg !11945
  br i1 %73, label %74, label %78, !dbg !11947

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !11948
  %76 = sub i32 %75, 1, !dbg !11950
  %77 = zext i32 %76 to i64, !dbg !11948
  store i64 %77, i64* %12, align 8, !dbg !11951
  br label %78, !dbg !11952

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !11953
  %80 = trunc i8 %79 to i1, !dbg !11953
  br i1 %80, label %81, label %85, !dbg !11955

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !11956
  %83 = udiv i32 %82, 2, !dbg !11958
  %84 = zext i32 %83 to i64, !dbg !11956
  store i64 %84, i64* %12, align 8, !dbg !11959
  br label %85, !dbg !11960

85:                                               ; preds = %81, %78
  br label %86, !dbg !11961

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !11962
  %88 = trunc i8 %87 to i1, !dbg !11962
  br i1 %88, label %89, label %114, !dbg !11964

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !11965
  %91 = load i64, i64* %3, align 8, !dbg !11967
  %92 = add i64 %91, %90, !dbg !11967
  store i64 %92, i64* %3, align 8, !dbg !11967
  %93 = load i8, i8* %7, align 1, !dbg !11968
  %94 = trunc i8 %93 to i1, !dbg !11968
  br i1 %94, label %95, label %106, !dbg !11970

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !11971
  %97 = icmp ult i64 %96, 4294967296, !dbg !11972
  br i1 %97, label %98, label %106, !dbg !11973

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !11974
  %100 = trunc i64 %99 to i32, !dbg !11976
  %101 = load i32, i32* %4, align 4, !dbg !11977
  %102 = load i32, i32* %5, align 4, !dbg !11978
  %103 = udiv i32 %101, %102, !dbg !11979
  %104 = udiv i32 %100, %103, !dbg !11980
  %105 = zext i32 %104 to i64, !dbg !11981
  store i64 %105, i64* %2, align 8, !dbg !11982
  br label %195, !dbg !11982

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !11983
  %108 = load i32, i32* %4, align 4, !dbg !11985
  %109 = zext i32 %108 to i64, !dbg !11986
  %110 = load i32, i32* %5, align 4, !dbg !11987
  %111 = zext i32 %110 to i64, !dbg !11987
  %112 = udiv i64 %109, %111, !dbg !11988
  %113 = udiv i64 %107, %112, !dbg !11989
  store i64 %113, i64* %2, align 8, !dbg !11990
  br label %195, !dbg !11990

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !11991
  %116 = trunc i8 %115 to i1, !dbg !11991
  br i1 %116, label %117, label %136, !dbg !11993

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !11994
  %119 = trunc i8 %118 to i1, !dbg !11994
  br i1 %119, label %120, label %128, !dbg !11997

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !11998
  %122 = trunc i64 %121 to i32, !dbg !12000
  %123 = load i32, i32* %5, align 4, !dbg !12001
  %124 = load i32, i32* %4, align 4, !dbg !12002
  %125 = udiv i32 %123, %124, !dbg !12003
  %126 = mul i32 %122, %125, !dbg !12004
  %127 = zext i32 %126 to i64, !dbg !12005
  store i64 %127, i64* %2, align 8, !dbg !12006
  br label %195, !dbg !12006

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !12007
  %130 = load i32, i32* %5, align 4, !dbg !12009
  %131 = zext i32 %130 to i64, !dbg !12010
  %132 = load i32, i32* %4, align 4, !dbg !12011
  %133 = zext i32 %132 to i64, !dbg !12011
  %134 = udiv i64 %131, %133, !dbg !12012
  %135 = mul i64 %129, %134, !dbg !12013
  store i64 %135, i64* %2, align 8, !dbg !12014
  br label %195, !dbg !12014

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !12015
  %138 = trunc i8 %137 to i1, !dbg !12015
  br i1 %138, label %139, label %151, !dbg !12018

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !12019
  %141 = load i32, i32* %5, align 4, !dbg !12021
  %142 = zext i32 %141 to i64, !dbg !12021
  %143 = mul i64 %140, %142, !dbg !12022
  %144 = load i64, i64* %12, align 8, !dbg !12023
  %145 = add i64 %143, %144, !dbg !12024
  %146 = load i32, i32* %4, align 4, !dbg !12025
  %147 = zext i32 %146 to i64, !dbg !12025
  %148 = udiv i64 %145, %147, !dbg !12026
  %149 = trunc i64 %148 to i32, !dbg !12027
  %150 = zext i32 %149 to i64, !dbg !12027
  store i64 %150, i64* %2, align 8, !dbg !12028
  br label %195, !dbg !12028

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !12029
  %153 = trunc i8 %152 to i1, !dbg !12029
  br i1 %153, label %154, label %174, !dbg !12031

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !12032
  %156 = zext i32 %155 to i64, !dbg !12032
  %157 = mul i64 31536000, %156, !dbg !12032
  %158 = add i64 %157, 4294967294, !dbg !12032
  %159 = udiv i64 %158, 4294967295, !dbg !12032
  %160 = load i32, i32* %5, align 4, !dbg !12032
  %161 = zext i32 %160 to i64, !dbg !12032
  %162 = mul i64 %159, %161, !dbg !12032
  %163 = icmp ule i64 %162, 4294967295, !dbg !12032
  br i1 %163, label %164, label %174, !dbg !12033

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !12034
  %166 = load i32, i32* %5, align 4, !dbg !12036
  %167 = zext i32 %166 to i64, !dbg !12036
  %168 = mul i64 %165, %167, !dbg !12037
  %169 = load i64, i64* %12, align 8, !dbg !12038
  %170 = add i64 %168, %169, !dbg !12039
  %171 = load i32, i32* %4, align 4, !dbg !12040
  %172 = zext i32 %171 to i64, !dbg !12040
  %173 = udiv i64 %170, %172, !dbg !12041
  store i64 %173, i64* %2, align 8, !dbg !12042
  br label %195, !dbg !12042

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !12043
  %176 = load i32, i32* %4, align 4, !dbg !12045
  %177 = zext i32 %176 to i64, !dbg !12045
  %178 = udiv i64 %175, %177, !dbg !12046
  %179 = load i32, i32* %5, align 4, !dbg !12047
  %180 = zext i32 %179 to i64, !dbg !12047
  %181 = mul i64 %178, %180, !dbg !12048
  %182 = load i64, i64* %3, align 8, !dbg !12049
  %183 = load i32, i32* %4, align 4, !dbg !12050
  %184 = zext i32 %183 to i64, !dbg !12050
  %185 = urem i64 %182, %184, !dbg !12051
  %186 = load i32, i32* %5, align 4, !dbg !12052
  %187 = zext i32 %186 to i64, !dbg !12052
  %188 = mul i64 %185, %187, !dbg !12053
  %189 = load i64, i64* %12, align 8, !dbg !12054
  %190 = add i64 %188, %189, !dbg !12055
  %191 = load i32, i32* %4, align 4, !dbg !12056
  %192 = zext i32 %191 to i64, !dbg !12056
  %193 = udiv i64 %190, %192, !dbg !12057
  %194 = add i64 %181, %193, !dbg !12058
  store i64 %194, i64* %2, align 8, !dbg !12059
  br label %195, !dbg !12059

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !12060
  ret i64 %196, !dbg !12061
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !12062 {
  %5 = alloca void (i8*, i8*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %5, metadata !12063, metadata !DIExpression()), !dbg !12064
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12065, metadata !DIExpression()), !dbg !12066
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !12067, metadata !DIExpression()), !dbg !12068
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !12069, metadata !DIExpression()), !dbg !12070
  br label %9, !dbg !12071

9:                                                ; preds = %4
  br label %10, !dbg !12072

10:                                               ; preds = %9
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12074
  %12 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %11, i32 0, i32 0, !dbg !12075
  %13 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %12, i32 0, i32 2, !dbg !12076
  %14 = load i8, i8* %13, align 4, !dbg !12077
  %15 = zext i8 %14 to i32, !dbg !12077
  %16 = or i32 %15, 4, !dbg !12077
  %17 = trunc i32 %16 to i8, !dbg !12077
  store i8 %17, i8* %13, align 4, !dbg !12077
  call void @z_thread_essential_clear() #10, !dbg !12078
  %18 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %5, align 4, !dbg !12079
  %19 = load i8*, i8** %6, align 4, !dbg !12080
  %20 = load i8*, i8** %7, align 4, !dbg !12081
  %21 = load i8*, i8** %8, align 4, !dbg !12082
  call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %18, i8* noundef %19, i8* noundef %20, i8* noundef %21) #12, !dbg !12083
  unreachable, !dbg !12083
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread.203* noundef %0) #1 !dbg !12084 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12087, metadata !DIExpression()), !dbg !12088
  ret i32 -134, !dbg !12089
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !12090 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12093, metadata !DIExpression()), !dbg !12094
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12095, metadata !DIExpression()), !dbg !12096
  ret i32 -134, !dbg !12097
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread.203* noundef %0, %struct.k_spinlock.13* noundef %1) #1 !dbg !12098 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.k_spinlock.13, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12104, metadata !DIExpression()), !dbg !12105
  store %struct.k_spinlock.13* %1, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12106, metadata !DIExpression()), !dbg !12107
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12108
  %8 = icmp eq %struct.k_thread.203* %7, null, !dbg !12110
  br i1 %8, label %12, label %9, !dbg !12111

9:                                                ; preds = %2
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !12112
  %11 = icmp eq %struct.k_spinlock.13* %10, null, !dbg !12113
  br i1 %11, label %12, label %13, !dbg !12114

12:                                               ; preds = %9, %2
  store i32 -22, i32* %3, align 4, !dbg !12115
  br label %17, !dbg !12115

13:                                               ; preds = %9
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !12117
  %15 = bitcast %struct.k_spinlock.13* %14 to i8*, !dbg !12118
  %16 = bitcast %struct.k_spinlock.13* %6 to i8*, !dbg !12118
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %15, i8* align 1 %16, i32 0, i1 false), !dbg !12118
  store i32 0, i32* %3, align 4, !dbg !12119
  br label %17, !dbg !12119

17:                                               ; preds = %13, %12
  %18 = load i32, i32* %3, align 4, !dbg !12120
  ret i32 %18, !dbg !12120
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock.13* noundef %0) #1 !dbg !12121 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_spinlock.13*, align 4
  %4 = alloca %struct.k_spinlock.13, align 1
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %3, metadata !12124, metadata !DIExpression()), !dbg !12125
  %5 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !12126
  %6 = icmp eq %struct.k_spinlock.13* %5, null, !dbg !12128
  br i1 %6, label %7, label %8, !dbg !12129

7:                                                ; preds = %1
  store i32 -22, i32* %2, align 4, !dbg !12130
  br label %12, !dbg !12130

8:                                                ; preds = %1
  %9 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !12132
  %10 = bitcast %struct.k_spinlock.13* %9 to i8*, !dbg !12133
  %11 = bitcast %struct.k_spinlock.13* %4 to i8*, !dbg !12133
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %10, i8* align 1 %11, i32 0, i1 false), !dbg !12133
  store i32 0, i32* %2, align 4, !dbg !12134
  br label %12, !dbg !12134

12:                                               ; preds = %8, %7
  %13 = load i32, i32* %2, align 4, !dbg !12135
  ret i32 %13, !dbg !12135
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_pm_save_idle_exit() #1 !dbg !12136 {
  call void @sys_clock_idle_exit() #10, !dbg !12138
  ret void, !dbg !12139
}

; Function Attrs: noinline nounwind optnone
define dso_local void @idle(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !12140 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12141, metadata !DIExpression()), !dbg !12142
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12143, metadata !DIExpression()), !dbg !12144
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !12145, metadata !DIExpression()), !dbg !12146
  %8 = load i8*, i8** %5, align 4, !dbg !12147
  %9 = load i8*, i8** %6, align 4, !dbg !12148
  %10 = load i8*, i8** %7, align 4, !dbg !12149
  br label %11, !dbg !12150

11:                                               ; preds = %3, %11
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12151, metadata !DIExpression()) #9, !dbg !12153
  %12 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !12156, !srcloc !12157
  store i32 %12, i32* %4, align 4, !dbg !12156
  %13 = load i32, i32* %4, align 4, !dbg !12158
  call void @k_cpu_idle() #10, !dbg !12159
  br label %11, !dbg !12150, !llvm.loop !12160
}

; Function Attrs: noinline nounwind optnone
define internal void @k_cpu_idle() #1 !dbg !12162 {
  call void @arch_cpu_idle() #10, !dbg !12163
  ret void, !dbg !12164
}

declare dso_local void @arch_cpu_idle() #0

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %0, %struct.k_thread.203* noundef %1) #1 !dbg !12165 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12168, metadata !DIExpression()), !dbg !12169
  store %struct.k_thread.203* %1, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12170, metadata !DIExpression()), !dbg !12171
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12172, metadata !DIExpression()), !dbg !12173
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12174
  %9 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %8, i32 0, i32 0, !dbg !12175
  %10 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %9, i32 0, i32 4, !dbg !12176
  %11 = bitcast %union.anon.2.7* %10 to %struct.device_state.72*, !dbg !12176
  %12 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %11, i32 0, i32 0, !dbg !12176
  %13 = load i8, i8* %12, align 2, !dbg !12176
  %14 = sext i8 %13 to i32, !dbg !12174
  store i32 %14, i32* %6, align 4, !dbg !12173
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12177, metadata !DIExpression()), !dbg !12178
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !12179
  %16 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %15, i32 0, i32 0, !dbg !12180
  %17 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %16, i32 0, i32 4, !dbg !12181
  %18 = bitcast %union.anon.2.7* %17 to %struct.device_state.72*, !dbg !12181
  %19 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %18, i32 0, i32 0, !dbg !12181
  %20 = load i8, i8* %19, align 2, !dbg !12181
  %21 = sext i8 %20 to i32, !dbg !12179
  store i32 %21, i32* %7, align 4, !dbg !12178
  %22 = load i32, i32* %6, align 4, !dbg !12182
  %23 = load i32, i32* %7, align 4, !dbg !12184
  %24 = icmp ne i32 %22, %23, !dbg !12185
  br i1 %24, label %25, label %29, !dbg !12186

25:                                               ; preds = %2
  %26 = load i32, i32* %7, align 4, !dbg !12187
  %27 = load i32, i32* %6, align 4, !dbg !12189
  %28 = sub nsw i32 %26, %27, !dbg !12190
  store i32 %28, i32* %3, align 4, !dbg !12191
  br label %30, !dbg !12191

29:                                               ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !12192
  br label %30, !dbg !12192

30:                                               ; preds = %29, %25
  %31 = load i32, i32* %3, align 4, !dbg !12193
  ret i32 %31, !dbg !12193
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reset_time_slice(%struct.k_thread.203* noundef %0) #1 !dbg !12194 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12197, metadata !DIExpression()), !dbg !12198
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12199
  %4 = call i32 @slice_time(%struct.k_thread.203* noundef %3) #10, !dbg !12201
  %5 = icmp ne i32 %4, 0, !dbg !12202
  br i1 %5, label %6, label %13, !dbg !12203

6:                                                ; preds = %1
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12204
  %8 = call i32 @slice_time(%struct.k_thread.203* noundef %7) #10, !dbg !12206
  %9 = call i32 @sys_clock_elapsed() #10, !dbg !12207
  %10 = add i32 %8, %9, !dbg !12208
  store i32 %10, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12209
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12210
  %12 = call i32 @slice_time(%struct.k_thread.203* noundef %11) #10, !dbg !12211
  call void @z_set_timeout_expiry(i32 noundef %12, i1 noundef zeroext false) #10, !dbg !12212
  br label %13, !dbg !12213

13:                                               ; preds = %6, %1
  ret void, !dbg !12214
}

; Function Attrs: noinline nounwind optnone
define internal i32 @slice_time(%struct.k_thread.203* noundef %0) #1 !dbg !12215 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12218, metadata !DIExpression()), !dbg !12219
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12220, metadata !DIExpression()), !dbg !12221
  %4 = load i32, i32* @slice_ticks, align 4, !dbg !12222
  store i32 %4, i32* %3, align 4, !dbg !12221
  %5 = load i32, i32* %3, align 4, !dbg !12223
  ret i32 %5, !dbg !12224
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) #1 !dbg !12225 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %union.anon.68, align 4
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12228, metadata !DIExpression()), !dbg !12229
  store i32 %1, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12230, metadata !DIExpression()), !dbg !12231
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !12232, metadata !DIExpression()), !dbg !12238
  %13 = bitcast %union.anon.68* %11 to i8*, !dbg !12238
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !12238
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !12239, metadata !DIExpression()), !dbg !12238
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12240, metadata !DIExpression()) #9, !dbg !12245
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !12247
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12248, metadata !DIExpression()) #9, !dbg !12249
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12250, metadata !DIExpression()) #9, !dbg !12252
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !12254, !srcloc !12255
  store i32 %15, i32* %3, align 4, !dbg !12254
  %16 = load i32, i32* %3, align 4, !dbg !12256
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !12257
  store i32 %16, i32* %17, align 4, !dbg !12258
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !12259
  %19 = load i32, i32* %18, align 4, !dbg !12259
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12238
  store i32 %19, i32* %20, align 4, !dbg !12238
  br label %21, !dbg !12238

21:                                               ; preds = %55, %2
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !12260
  %23 = load i32, i32* %22, align 4, !dbg !12260
  %24 = icmp ne i32 %23, 0, !dbg !12260
  %25 = xor i1 %24, true, !dbg !12260
  br i1 %25, label %26, label %57, !dbg !12238

26:                                               ; preds = %21
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12262
  %27 = load i32, i32* %9, align 4, !dbg !12264
  %28 = call i32 @k_ms_to_ticks_ceil32(i32 noundef %27) #10, !dbg !12265
  store i32 %28, i32* @slice_ticks, align 4, !dbg !12266
  %29 = load i32, i32* %9, align 4, !dbg !12267
  %30 = icmp sgt i32 %29, 0, !dbg !12269
  br i1 %30, label %31, label %39, !dbg !12270

31:                                               ; preds = %26
  %32 = load i32, i32* @slice_ticks, align 4, !dbg !12271
  %33 = icmp sgt i32 2, %32, !dbg !12271
  br i1 %33, label %34, label %35, !dbg !12271

34:                                               ; preds = %31
  br label %37, !dbg !12271

35:                                               ; preds = %31
  %36 = load i32, i32* @slice_ticks, align 4, !dbg !12271
  br label %37, !dbg !12271

37:                                               ; preds = %35, %34
  %38 = phi i32 [ 2, %34 ], [ %36, %35 ], !dbg !12271
  store i32 %38, i32* @slice_ticks, align 4, !dbg !12273
  br label %39, !dbg !12274

39:                                               ; preds = %37, %26
  %40 = load i32, i32* %10, align 4, !dbg !12275
  store i32 %40, i32* @slice_max_prio, align 4, !dbg !12276
  %41 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12277
  call void @z_reset_time_slice(%struct.k_thread.203* noundef %41) #10, !dbg !12278
  br label %42, !dbg !12279

42:                                               ; preds = %39
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12260
  %44 = bitcast i32* %43 to [1 x i32]*, !dbg !12260
  %45 = load [1 x i32], [1 x i32]* %44, align 4, !dbg !12260
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %47 = bitcast i32* %46 to [1 x i32]*
  store [1 x i32] %45, [1 x i32]* %47, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12280, metadata !DIExpression()) #9, !dbg !12284
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12286, metadata !DIExpression()) #9, !dbg !12287
  %48 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !12288
  %49 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !12289
  %50 = load i32, i32* %49, align 4, !dbg !12289
  store i32 %50, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12290, metadata !DIExpression()) #9, !dbg !12292
  %51 = load i32, i32* %4, align 4, !dbg !12294
  %52 = icmp ne i32 %51, 0, !dbg !12296
  br i1 %52, label %53, label %54, !dbg !12297

53:                                               ; preds = %42
  br label %55, !dbg !12298

54:                                               ; preds = %42
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !12300, !srcloc !12301
  br label %55, !dbg !12302

55:                                               ; preds = %53, %54
  %56 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !12260
  store i32 1, i32* %56, align 4, !dbg !12260
  br label %21, !dbg !12260, !llvm.loop !12303

57:                                               ; preds = %21
  ret void, !dbg !12305
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #1 !dbg !12306 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12309, metadata !DIExpression()), !dbg !12310
  %15 = load i32, i32* %14, align 4, !dbg !12311
  %16 = zext i32 %15 to i64, !dbg !12311
  store i64 %16, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12312, metadata !DIExpression()), !dbg !12314
  store i32 1000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12316, metadata !DIExpression()), !dbg !12317
  store i32 10000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12318, metadata !DIExpression()), !dbg !12319
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12320, metadata !DIExpression()), !dbg !12321
  store i8 1, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12322, metadata !DIExpression()), !dbg !12323
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12324, metadata !DIExpression()), !dbg !12325
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12326, metadata !DIExpression()), !dbg !12327
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12328, metadata !DIExpression()), !dbg !12329
  %17 = load i8, i8* %6, align 1, !dbg !12330
  %18 = trunc i8 %17 to i1, !dbg !12330
  br i1 %18, label %19, label %28, !dbg !12331

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !12332
  %21 = load i32, i32* %4, align 4, !dbg !12333
  %22 = icmp ugt i32 %20, %21, !dbg !12334
  br i1 %22, label %23, label %28, !dbg !12335

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !12336
  %25 = load i32, i32* %4, align 4, !dbg !12337
  %26 = urem i32 %24, %25, !dbg !12338
  %27 = icmp eq i32 %26, 0, !dbg !12339
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !12340
  %30 = zext i1 %29 to i8, !dbg !12329
  store i8 %30, i8* %10, align 1, !dbg !12329
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12341, metadata !DIExpression()), !dbg !12342
  %31 = load i8, i8* %6, align 1, !dbg !12343
  %32 = trunc i8 %31 to i1, !dbg !12343
  br i1 %32, label %33, label %42, !dbg !12344

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !12345
  %35 = load i32, i32* %5, align 4, !dbg !12346
  %36 = icmp ugt i32 %34, %35, !dbg !12347
  br i1 %36, label %37, label %42, !dbg !12348

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !12349
  %39 = load i32, i32* %5, align 4, !dbg !12350
  %40 = urem i32 %38, %39, !dbg !12351
  %41 = icmp eq i32 %40, 0, !dbg !12352
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !12340
  %44 = zext i1 %43 to i8, !dbg !12342
  store i8 %44, i8* %11, align 1, !dbg !12342
  %45 = load i32, i32* %4, align 4, !dbg !12353
  %46 = load i32, i32* %5, align 4, !dbg !12355
  %47 = icmp eq i32 %45, %46, !dbg !12356
  br i1 %47, label %48, label %59, !dbg !12357

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !12358
  %50 = trunc i8 %49 to i1, !dbg !12358
  br i1 %50, label %51, label %55, !dbg !12358

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !12360
  %53 = trunc i64 %52 to i32, !dbg !12361
  %54 = zext i32 %53 to i64, !dbg !12362
  br label %57, !dbg !12358

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !12363
  br label %57, !dbg !12358

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !12358
  store i64 %58, i64* %2, align 8, !dbg !12364
  br label %196, !dbg !12364

59:                                               ; preds = %42
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12365, metadata !DIExpression()), !dbg !12366
  store i64 0, i64* %12, align 8, !dbg !12366
  %60 = load i8, i8* %10, align 1, !dbg !12367
  %61 = trunc i8 %60 to i1, !dbg !12367
  br i1 %61, label %87, label %62, !dbg !12369

62:                                               ; preds = %59
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12370, metadata !DIExpression()), !dbg !12372
  %63 = load i8, i8* %11, align 1, !dbg !12373
  %64 = trunc i8 %63 to i1, !dbg !12373
  br i1 %64, label %65, label %69, !dbg !12373

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !12374
  %67 = load i32, i32* %5, align 4, !dbg !12375
  %68 = udiv i32 %66, %67, !dbg !12376
  br label %71, !dbg !12373

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !12377
  br label %71, !dbg !12373

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !12373
  store i32 %72, i32* %13, align 4, !dbg !12372
  %73 = load i8, i8* %8, align 1, !dbg !12378
  %74 = trunc i8 %73 to i1, !dbg !12378
  br i1 %74, label %75, label %79, !dbg !12380

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !12381
  %77 = sub i32 %76, 1, !dbg !12383
  %78 = zext i32 %77 to i64, !dbg !12381
  store i64 %78, i64* %12, align 8, !dbg !12384
  br label %79, !dbg !12385

79:                                               ; preds = %75, %71
  %80 = load i8, i8* %9, align 1, !dbg !12386
  %81 = trunc i8 %80 to i1, !dbg !12386
  br i1 %81, label %82, label %86, !dbg !12388

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !12389
  %84 = udiv i32 %83, 2, !dbg !12391
  %85 = zext i32 %84 to i64, !dbg !12389
  store i64 %85, i64* %12, align 8, !dbg !12392
  br label %86, !dbg !12393

86:                                               ; preds = %82, %79
  br label %87, !dbg !12394

87:                                               ; preds = %86, %59
  %88 = load i8, i8* %11, align 1, !dbg !12395
  %89 = trunc i8 %88 to i1, !dbg !12395
  br i1 %89, label %90, label %115, !dbg !12397

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !12398
  %92 = load i64, i64* %3, align 8, !dbg !12400
  %93 = add i64 %92, %91, !dbg !12400
  store i64 %93, i64* %3, align 8, !dbg !12400
  %94 = load i8, i8* %7, align 1, !dbg !12401
  %95 = trunc i8 %94 to i1, !dbg !12401
  br i1 %95, label %96, label %107, !dbg !12403

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !12404
  %98 = icmp ult i64 %97, 4294967296, !dbg !12405
  br i1 %98, label %99, label %107, !dbg !12406

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !12407
  %101 = trunc i64 %100 to i32, !dbg !12409
  %102 = load i32, i32* %4, align 4, !dbg !12410
  %103 = load i32, i32* %5, align 4, !dbg !12411
  %104 = udiv i32 %102, %103, !dbg !12412
  %105 = udiv i32 %101, %104, !dbg !12413
  %106 = zext i32 %105 to i64, !dbg !12414
  store i64 %106, i64* %2, align 8, !dbg !12415
  br label %196, !dbg !12415

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !12416
  %109 = load i32, i32* %4, align 4, !dbg !12418
  %110 = zext i32 %109 to i64, !dbg !12419
  %111 = load i32, i32* %5, align 4, !dbg !12420
  %112 = zext i32 %111 to i64, !dbg !12420
  %113 = udiv i64 %110, %112, !dbg !12421
  %114 = udiv i64 %108, %113, !dbg !12422
  store i64 %114, i64* %2, align 8, !dbg !12423
  br label %196, !dbg !12423

115:                                              ; preds = %87
  %116 = load i8, i8* %10, align 1, !dbg !12424
  %117 = trunc i8 %116 to i1, !dbg !12424
  br i1 %117, label %118, label %137, !dbg !12426

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !12427
  %120 = trunc i8 %119 to i1, !dbg !12427
  br i1 %120, label %121, label %129, !dbg !12430

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !12431
  %123 = trunc i64 %122 to i32, !dbg !12433
  %124 = load i32, i32* %5, align 4, !dbg !12434
  %125 = load i32, i32* %4, align 4, !dbg !12435
  %126 = udiv i32 %124, %125, !dbg !12436
  %127 = mul i32 %123, %126, !dbg !12437
  %128 = zext i32 %127 to i64, !dbg !12438
  store i64 %128, i64* %2, align 8, !dbg !12439
  br label %196, !dbg !12439

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !12440
  %131 = load i32, i32* %5, align 4, !dbg !12442
  %132 = zext i32 %131 to i64, !dbg !12443
  %133 = load i32, i32* %4, align 4, !dbg !12444
  %134 = zext i32 %133 to i64, !dbg !12444
  %135 = udiv i64 %132, %134, !dbg !12445
  %136 = mul i64 %130, %135, !dbg !12446
  store i64 %136, i64* %2, align 8, !dbg !12447
  br label %196, !dbg !12447

137:                                              ; preds = %115
  %138 = load i8, i8* %7, align 1, !dbg !12448
  %139 = trunc i8 %138 to i1, !dbg !12448
  br i1 %139, label %140, label %152, !dbg !12451

140:                                              ; preds = %137
  %141 = load i64, i64* %3, align 8, !dbg !12452
  %142 = load i32, i32* %5, align 4, !dbg !12454
  %143 = zext i32 %142 to i64, !dbg !12454
  %144 = mul i64 %141, %143, !dbg !12455
  %145 = load i64, i64* %12, align 8, !dbg !12456
  %146 = add i64 %144, %145, !dbg !12457
  %147 = load i32, i32* %4, align 4, !dbg !12458
  %148 = zext i32 %147 to i64, !dbg !12458
  %149 = udiv i64 %146, %148, !dbg !12459
  %150 = trunc i64 %149 to i32, !dbg !12460
  %151 = zext i32 %150 to i64, !dbg !12460
  store i64 %151, i64* %2, align 8, !dbg !12461
  br label %196, !dbg !12461

152:                                              ; preds = %137
  %153 = load i8, i8* %6, align 1, !dbg !12462
  %154 = trunc i8 %153 to i1, !dbg !12462
  br i1 %154, label %155, label %175, !dbg !12464

155:                                              ; preds = %152
  %156 = load i32, i32* %4, align 4, !dbg !12465
  %157 = zext i32 %156 to i64, !dbg !12465
  %158 = mul i64 31536000, %157, !dbg !12465
  %159 = add i64 %158, 4294967294, !dbg !12465
  %160 = udiv i64 %159, 4294967295, !dbg !12465
  %161 = load i32, i32* %5, align 4, !dbg !12465
  %162 = zext i32 %161 to i64, !dbg !12465
  %163 = mul i64 %160, %162, !dbg !12465
  %164 = icmp ule i64 %163, 4294967295, !dbg !12465
  br i1 %164, label %165, label %175, !dbg !12466

165:                                              ; preds = %155
  %166 = load i64, i64* %3, align 8, !dbg !12467
  %167 = load i32, i32* %5, align 4, !dbg !12469
  %168 = zext i32 %167 to i64, !dbg !12469
  %169 = mul i64 %166, %168, !dbg !12470
  %170 = load i64, i64* %12, align 8, !dbg !12471
  %171 = add i64 %169, %170, !dbg !12472
  %172 = load i32, i32* %4, align 4, !dbg !12473
  %173 = zext i32 %172 to i64, !dbg !12473
  %174 = udiv i64 %171, %173, !dbg !12474
  store i64 %174, i64* %2, align 8, !dbg !12475
  br label %196, !dbg !12475

175:                                              ; preds = %155, %152
  %176 = load i64, i64* %3, align 8, !dbg !12476
  %177 = load i32, i32* %4, align 4, !dbg !12478
  %178 = zext i32 %177 to i64, !dbg !12478
  %179 = udiv i64 %176, %178, !dbg !12479
  %180 = load i32, i32* %5, align 4, !dbg !12480
  %181 = zext i32 %180 to i64, !dbg !12480
  %182 = mul i64 %179, %181, !dbg !12481
  %183 = load i64, i64* %3, align 8, !dbg !12482
  %184 = load i32, i32* %4, align 4, !dbg !12483
  %185 = zext i32 %184 to i64, !dbg !12483
  %186 = urem i64 %183, %185, !dbg !12484
  %187 = load i32, i32* %5, align 4, !dbg !12485
  %188 = zext i32 %187 to i64, !dbg !12485
  %189 = mul i64 %186, %188, !dbg !12486
  %190 = load i64, i64* %12, align 8, !dbg !12487
  %191 = add i64 %189, %190, !dbg !12488
  %192 = load i32, i32* %4, align 4, !dbg !12489
  %193 = zext i32 %192 to i64, !dbg !12489
  %194 = udiv i64 %191, %193, !dbg !12490
  %195 = add i64 %182, %194, !dbg !12491
  store i64 %195, i64* %2, align 8, !dbg !12492
  br label %196, !dbg !12492

196:                                              ; preds = %57, %99, %107, %121, %129, %140, %165, %175
  %197 = load i64, i64* %2, align 8, !dbg !12493
  %198 = trunc i64 %197 to i32, !dbg !12494
  ret i32 %198, !dbg !12495
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_time_slice(i32 noundef %0) #1 !dbg !12496 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca i32, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %union.anon.68, align 4
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12497, metadata !DIExpression()), !dbg !12498
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !12499, metadata !DIExpression()), !dbg !12500
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !12240, metadata !DIExpression()) #9, !dbg !12501
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !12503
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !12248, metadata !DIExpression()) #9, !dbg !12504
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12250, metadata !DIExpression()) #9, !dbg !12505
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !12507, !srcloc !12255
  store i32 %15, i32* %2, align 4, !dbg !12507
  %16 = load i32, i32* %2, align 4, !dbg !12508
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !12509
  store i32 %16, i32* %17, align 4, !dbg !12510
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !12511
  %19 = load i32, i32* %18, align 4, !dbg !12511
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12512
  store i32 %19, i32* %20, align 4, !dbg !12512
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** @pending_current, align 4, !dbg !12513
  %22 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12515
  %23 = icmp eq %struct.k_thread.203* %21, %22, !dbg !12516
  br i1 %23, label %24, label %39, !dbg !12517

24:                                               ; preds = %1
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12518
  call void @z_reset_time_slice(%struct.k_thread.203* noundef %25) #10, !dbg !12520
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12521
  %27 = bitcast i32* %26 to [1 x i32]*, !dbg !12521
  %28 = load [1 x i32], [1 x i32]* %27, align 4, !dbg !12521
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %30 = bitcast i32* %29 to [1 x i32]*
  store [1 x i32] %28, [1 x i32]* %30, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12280, metadata !DIExpression()) #9, !dbg !12522
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12286, metadata !DIExpression()) #9, !dbg !12524
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !12525
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !12526
  %33 = load i32, i32* %32, align 4, !dbg !12526
  store i32 %33, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12290, metadata !DIExpression()) #9, !dbg !12527
  %34 = load i32, i32* %4, align 4, !dbg !12529
  %35 = icmp ne i32 %34, 0, !dbg !12530
  br i1 %35, label %36, label %37, !dbg !12531

36:                                               ; preds = %24
  br label %38, !dbg !12532

37:                                               ; preds = %24
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !12533, !srcloc !12301
  br label %38, !dbg !12534

38:                                               ; preds = %36, %37
  br label %78, !dbg !12535

39:                                               ; preds = %1
  store %struct.k_thread.203* null, %struct.k_thread.203** @pending_current, align 4, !dbg !12536
  %40 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12537
  %41 = call i32 @slice_time(%struct.k_thread.203* noundef %40) #10, !dbg !12539
  %42 = icmp ne i32 %41, 0, !dbg !12539
  br i1 %42, label %43, label %63, !dbg !12540

43:                                               ; preds = %39
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12541
  %45 = call zeroext i1 @sliceable(%struct.k_thread.203* noundef %44) #10, !dbg !12542
  br i1 %45, label %46, label %63, !dbg !12543

46:                                               ; preds = %43
  %47 = load i32, i32* %11, align 4, !dbg !12544
  %48 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12547
  %49 = icmp sge i32 %47, %48, !dbg !12548
  br i1 %49, label %50, label %58, !dbg !12549

50:                                               ; preds = %46
  %51 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12550
  %52 = bitcast i32* %51 to [1 x i32]*, !dbg !12550
  %53 = load [1 x i32], [1 x i32]* %52, align 4, !dbg !12550
  %54 = call i32 @slice_expired_locked([1 x i32] %53) #10, !dbg !12550
  %55 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !12550
  store i32 %54, i32* %55, align 4, !dbg !12550
  %56 = bitcast %union.anon.68* %12 to i8*, !dbg !12550
  %57 = bitcast %union.anon.68* %13 to i8*, !dbg !12550
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %56, i8* align 4 %57, i32 4, i1 false), !dbg !12550
  br label %62, !dbg !12552

58:                                               ; preds = %46
  %59 = load i32, i32* %11, align 4, !dbg !12553
  %60 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12555
  %61 = sub nsw i32 %60, %59, !dbg !12555
  store i32 %61, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12555
  br label %62

62:                                               ; preds = %58, %50
  br label %64, !dbg !12556

63:                                               ; preds = %43, %39
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12557
  br label %64

64:                                               ; preds = %63, %62
  %65 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12559
  %66 = bitcast i32* %65 to [1 x i32]*, !dbg !12559
  %67 = load [1 x i32], [1 x i32]* %66, align 4, !dbg !12559
  %68 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %69 = bitcast i32* %68 to [1 x i32]*
  store [1 x i32] %67, [1 x i32]* %69, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12280, metadata !DIExpression()) #9, !dbg !12560
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12286, metadata !DIExpression()) #9, !dbg !12562
  %70 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !12563
  %71 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !12564
  %72 = load i32, i32* %71, align 4, !dbg !12564
  store i32 %72, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12290, metadata !DIExpression()) #9, !dbg !12565
  %73 = load i32, i32* %3, align 4, !dbg !12567
  %74 = icmp ne i32 %73, 0, !dbg !12568
  br i1 %74, label %75, label %76, !dbg !12569

75:                                               ; preds = %64
  br label %77, !dbg !12570

76:                                               ; preds = %64
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !12571, !srcloc !12301
  br label %77, !dbg !12572

77:                                               ; preds = %75, %76
  br label %78, !dbg !12573

78:                                               ; preds = %77, %38
  ret void, !dbg !12573
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sliceable(%struct.k_thread.203* noundef %0) #1 !dbg !12574 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca i8, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12577, metadata !DIExpression()), !dbg !12578
  call void @llvm.dbg.declare(metadata i8* %3, metadata !12579, metadata !DIExpression()), !dbg !12580
  %4 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12581
  %5 = call i32 @is_preempt(%struct.k_thread.203* noundef %4) #10, !dbg !12582
  %6 = icmp ne i32 %5, 0, !dbg !12582
  br i1 %6, label %7, label %24, !dbg !12583

7:                                                ; preds = %1
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12584
  %9 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %8) #10, !dbg !12585
  br i1 %9, label %24, label %10, !dbg !12586

10:                                               ; preds = %7
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12587
  %12 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %11, i32 0, i32 0, !dbg !12588
  %13 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %12, i32 0, i32 4, !dbg !12589
  %14 = bitcast %union.anon.2.7* %13 to %struct.device_state.72*, !dbg !12589
  %15 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %14, i32 0, i32 0, !dbg !12589
  %16 = load i8, i8* %15, align 2, !dbg !12589
  %17 = sext i8 %16 to i32, !dbg !12587
  %18 = load i32, i32* @slice_max_prio, align 4, !dbg !12590
  %19 = call zeroext i1 @z_is_prio_higher(i32 noundef %17, i32 noundef %18) #10, !dbg !12591
  br i1 %19, label %24, label %20, !dbg !12592

20:                                               ; preds = %10
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12593
  %22 = call zeroext i1 @z_is_idle_thread_object(%struct.k_thread.203* noundef %21) #10, !dbg !12594
  %23 = xor i1 %22, true, !dbg !12595
  br label %24

24:                                               ; preds = %20, %10, %7, %1
  %25 = phi i1 [ false, %10 ], [ false, %7 ], [ false, %1 ], [ %23, %20 ], !dbg !12596
  %26 = zext i1 %25 to i8, !dbg !12580
  store i8 %26, i8* %3, align 1, !dbg !12580
  %27 = load i8, i8* %3, align 1, !dbg !12597
  %28 = trunc i8 %27 to i1, !dbg !12597
  ret i1 %28, !dbg !12598
}

; Function Attrs: noinline nounwind optnone
define internal i32 @slice_expired_locked([1 x i32] %0) #1 !dbg !12599 {
  %2 = alloca %union.anon.68, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %6 = bitcast i32* %5 to [1 x i32]*
  store [1 x i32] %0, [1 x i32]* %6, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !12602, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12604, metadata !DIExpression()), !dbg !12605
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12606
  store %struct.k_thread.203* %7, %struct.k_thread.203** %4, align 4, !dbg !12605
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12607
  %9 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %8) #10, !dbg !12609
  br i1 %9, label %12, label %10, !dbg !12610

10:                                               ; preds = %1
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12611
  call void @move_thread_to_end_of_prio_q(%struct.k_thread.203* noundef %11) #10, !dbg !12613
  br label %12, !dbg !12614

12:                                               ; preds = %10, %1
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12615
  call void @z_reset_time_slice(%struct.k_thread.203* noundef %13) #10, !dbg !12616
  %14 = bitcast %union.anon.68* %2 to i8*, !dbg !12617
  %15 = bitcast %union.anon.68* %3 to i8*, !dbg !12617
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %14, i8* align 4 %15, i32 4, i1 false), !dbg !12617
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %2, i32 0, i32 0, !dbg !12618
  %17 = load i32, i32* %16, align 4, !dbg !12618
  ret i32 %17, !dbg !12618
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %0) #1 !dbg !12619 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca i8, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12620, metadata !DIExpression()), !dbg !12621
  call void @llvm.dbg.declare(metadata i8* %3, metadata !12622, metadata !DIExpression()), !dbg !12623
  %4 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12624
  %5 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %4, i32 0, i32 0, !dbg !12625
  %6 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %5, i32 0, i32 3, !dbg !12626
  %7 = load i8, i8* %6, align 1, !dbg !12626
  store i8 %7, i8* %3, align 1, !dbg !12623
  %8 = load i8, i8* %3, align 1, !dbg !12627
  %9 = zext i8 %8 to i32, !dbg !12627
  %10 = and i32 %9, 31, !dbg !12628
  %11 = icmp ne i32 %10, 0, !dbg !12629
  ret i1 %11, !dbg !12630
}

; Function Attrs: noinline nounwind optnone
define internal void @move_thread_to_end_of_prio_q(%struct.k_thread.203* noundef %0) #1 !dbg !12631 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %struct.k_thread.203*, align 4
  %11 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %11, metadata !12632, metadata !DIExpression()), !dbg !12633
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !12634
  %13 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %12) #10, !dbg !12636
  br i1 %13, label %14, label %31, !dbg !12637

14:                                               ; preds = %1
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !12638
  store %struct.k_thread.203* %15, %struct.k_thread.203** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %10, metadata !12640, metadata !DIExpression()) #9, !dbg !12642
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %10, align 4, !dbg !12644
  %17 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %16, i32 0, i32 0, !dbg !12645
  %18 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %17, i32 0, i32 3, !dbg !12646
  %19 = load i8, i8* %18, align 1, !dbg !12647
  %20 = zext i8 %19 to i32, !dbg !12647
  %21 = and i32 %20, -129, !dbg !12647
  %22 = trunc i32 %21 to i8, !dbg !12647
  store i8 %22, i8* %18, align 1, !dbg !12647
  %23 = load %struct.k_thread.203*, %struct.k_thread.203** %10, align 4, !dbg !12648
  %24 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %23) #13, !dbg !12650
  br i1 %24, label %25, label %30, !dbg !12651

25:                                               ; preds = %14
  %26 = load %struct.k_thread.203*, %struct.k_thread.203** %10, align 4, !dbg !12652
  store %struct.k_thread.203* %26, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !12654, metadata !DIExpression()) #9, !dbg !12656
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !12658
  store %struct.k_thread.203* %27, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !12659, metadata !DIExpression()), !dbg !12663
  %28 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !12665
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !12666
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %28, %struct.k_thread.203* noundef %29) #13, !dbg !12667
  br label %30, !dbg !12668

30:                                               ; preds = %14, %25
  br label %31, !dbg !12669

31:                                               ; preds = %30, %1
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !12670
  store %struct.k_thread.203* %32, %struct.k_thread.203** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !12671, metadata !DIExpression()) #9, !dbg !12673
  %33 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !12675
  %34 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %33, i32 0, i32 0, !dbg !12676
  %35 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %34, i32 0, i32 3, !dbg !12677
  %36 = load i8, i8* %35, align 1, !dbg !12678
  %37 = zext i8 %36 to i32, !dbg !12678
  %38 = or i32 %37, 128, !dbg !12678
  %39 = trunc i32 %38 to i8, !dbg !12678
  store i8 %39, i8* %35, align 1, !dbg !12678
  %40 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !12679
  %41 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %40) #13, !dbg !12681
  br i1 %41, label %42, label %107, !dbg !12682

42:                                               ; preds = %31
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !12683
  store %struct.k_thread.203* %43, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !12685, metadata !DIExpression()) #9, !dbg !12687
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !12689
  store %struct.k_thread.203* %44, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12659, metadata !DIExpression()) #9, !dbg !12690
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !12692
  store %struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12693, metadata !DIExpression()) #9, !dbg !12698
  store %struct.k_thread.203* %45, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12700, metadata !DIExpression()) #9, !dbg !12701
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12702, metadata !DIExpression()) #9, !dbg !12703
  %46 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12704
  %47 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %46) #13, !dbg !12704
  %48 = icmp ne %struct._dnode.191* %47, null, !dbg !12704
  br i1 %48, label %49, label %54, !dbg !12704

49:                                               ; preds = %42
  %50 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12704
  %51 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %50) #13, !dbg !12704
  %52 = bitcast %struct._dnode.191* %51 to i8*, !dbg !12704
  %53 = bitcast i8* %52 to %struct.k_thread.203*, !dbg !12704
  br label %55, !dbg !12704

54:                                               ; preds = %42
  br label %55, !dbg !12704

55:                                               ; preds = %54, %49
  %56 = phi %struct.k_thread.203* [ %53, %49 ], [ null, %54 ], !dbg !12704
  store %struct.k_thread.203* %56, %struct.k_thread.203** %4, align 4, !dbg !12704
  br label %57, !dbg !12704

57:                                               ; preds = %98, %55
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12706
  %59 = icmp ne %struct.k_thread.203* %58, null, !dbg !12706
  br i1 %59, label %60, label %100, !dbg !12704

60:                                               ; preds = %57
  %61 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !12708
  %62 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12711
  %63 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %61, %struct.k_thread.203* noundef %62) #13, !dbg !12712
  %64 = icmp sgt i32 %63, 0, !dbg !12713
  br i1 %64, label %65, label %74, !dbg !12714

65:                                               ; preds = %60
  %66 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12715
  %67 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %66, i32 0, i32 0, !dbg !12717
  %68 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %67, i32 0, i32 0, !dbg !12718
  %69 = bitcast %union.anon.192* %68 to %struct._dnode.191*, !dbg !12718
  %70 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !12719
  %71 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %70, i32 0, i32 0, !dbg !12720
  %72 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %71, i32 0, i32 0, !dbg !12721
  %73 = bitcast %union.anon.192* %72 to %struct._dnode.191*, !dbg !12721
  call void @sys_dlist_insert(%struct._dnode.191* noundef %69, %struct._dnode.191* noundef %73) #13, !dbg !12722
  br label %106, !dbg !12723

74:                                               ; preds = %60
  %75 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12706
  %76 = icmp ne %struct.k_thread.203* %75, null, !dbg !12706
  br i1 %76, label %77, label %97, !dbg !12706

77:                                               ; preds = %74
  %78 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12706
  %79 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12706
  %80 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %79, i32 0, i32 0, !dbg !12706
  %81 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %80, i32 0, i32 0, !dbg !12706
  %82 = bitcast %union.anon.192* %81 to %struct._dnode.191*, !dbg !12706
  %83 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %78, %struct._dnode.191* noundef %82) #13, !dbg !12706
  %84 = icmp ne %struct._dnode.191* %83, null, !dbg !12706
  br i1 %84, label %85, label %94, !dbg !12706

85:                                               ; preds = %77
  %86 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12706
  %87 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12706
  %88 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %87, i32 0, i32 0, !dbg !12706
  %89 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %88, i32 0, i32 0, !dbg !12706
  %90 = bitcast %union.anon.192* %89 to %struct._dnode.191*, !dbg !12706
  %91 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %86, %struct._dnode.191* noundef %90) #13, !dbg !12706
  %92 = bitcast %struct._dnode.191* %91 to i8*, !dbg !12706
  %93 = bitcast i8* %92 to %struct.k_thread.203*, !dbg !12706
  br label %95, !dbg !12706

94:                                               ; preds = %77
  br label %95, !dbg !12706

95:                                               ; preds = %94, %85
  %96 = phi %struct.k_thread.203* [ %93, %85 ], [ null, %94 ], !dbg !12706
  br label %98, !dbg !12706

97:                                               ; preds = %74
  br label %98, !dbg !12706

98:                                               ; preds = %97, %95
  %99 = phi %struct.k_thread.203* [ %96, %95 ], [ null, %97 ], !dbg !12706
  store %struct.k_thread.203* %99, %struct.k_thread.203** %4, align 4, !dbg !12706
  br label %57, !dbg !12706, !llvm.loop !12724

100:                                              ; preds = %57
  %101 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12726
  %102 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !12727
  %103 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %102, i32 0, i32 0, !dbg !12728
  %104 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %103, i32 0, i32 0, !dbg !12729
  %105 = bitcast %union.anon.192* %104 to %struct._dnode.191*, !dbg !12729
  call void @sys_dlist_append(%struct._dnode.191* noundef %101, %struct._dnode.191* noundef %105) #13, !dbg !12730
  br label %106, !dbg !12731

106:                                              ; preds = %65, %100
  br label %107, !dbg !12732

107:                                              ; preds = %31, %106
  %108 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !12733
  %109 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12734
  %110 = icmp eq %struct.k_thread.203* %108, %109, !dbg !12735
  %111 = zext i1 %110 to i32, !dbg !12735
  call void @update_cache(i32 noundef %111) #10, !dbg !12736
  ret void, !dbg !12737
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %0) #1 !dbg !12738 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12739, metadata !DIExpression()), !dbg !12740
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12741
  %4 = call zeroext i1 @z_is_thread_state_set(%struct.k_thread.203* noundef %3, i32 noundef 128) #10, !dbg !12742
  ret i1 %4, !dbg !12743
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %0) #1 !dbg !12744 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12745, metadata !DIExpression()), !dbg !12746
  ret i1 true, !dbg !12747
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_dumb_remove(%struct._dnode.191* noundef %0, %struct.k_thread.203* noundef %1) #1 !dbg !12748 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12749, metadata !DIExpression()), !dbg !12750
  store %struct.k_thread.203* %1, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12751, metadata !DIExpression()), !dbg !12752
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !12753
  %6 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %5, i32 0, i32 0, !dbg !12754
  %7 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %6, i32 0, i32 0, !dbg !12755
  %8 = bitcast %union.anon.192* %7 to %struct._dnode.191*, !dbg !12755
  call void @sys_dlist_remove(%struct._dnode.191* noundef %8) #10, !dbg !12756
  ret void, !dbg !12757
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %0) #1 !dbg !12758 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12761, metadata !DIExpression()), !dbg !12762
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12763
  %4 = call zeroext i1 @sys_dlist_is_empty(%struct._dnode.191* noundef %3) #10, !dbg !12764
  br i1 %4, label %5, label %6, !dbg !12764

5:                                                ; preds = %1
  br label %11, !dbg !12764

6:                                                ; preds = %1
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12765
  %8 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %7, i32 0, i32 0, !dbg !12766
  %9 = bitcast %union.anon.0.189* %8 to %struct._dnode.191**, !dbg !12766
  %10 = load %struct._dnode.191*, %struct._dnode.191** %9, align 4, !dbg !12766
  br label %11, !dbg !12764

11:                                               ; preds = %6, %5
  %12 = phi %struct._dnode.191* [ null, %5 ], [ %10, %6 ], !dbg !12764
  ret %struct._dnode.191* %12, !dbg !12767
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_insert(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !12768 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12771, metadata !DIExpression()), !dbg !12772
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !12773, metadata !DIExpression()), !dbg !12774
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !12775, metadata !DIExpression()), !dbg !12777
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12778
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !12779
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !12779
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !12779
  store %struct._dnode.191* %9, %struct._dnode.191** %5, align 4, !dbg !12777
  %10 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !12780
  %11 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12781
  %12 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %11, i32 0, i32 1, !dbg !12782
  %13 = bitcast %union.anon.0.189* %12 to %struct._dnode.191**, !dbg !12782
  store %struct._dnode.191* %10, %struct._dnode.191** %13, align 4, !dbg !12783
  %14 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12784
  %15 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12785
  %16 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %15, i32 0, i32 0, !dbg !12786
  %17 = bitcast %union.anon.0.189* %16 to %struct._dnode.191**, !dbg !12786
  store %struct._dnode.191* %14, %struct._dnode.191** %17, align 4, !dbg !12787
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12788
  %19 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !12789
  %20 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %19, i32 0, i32 0, !dbg !12790
  %21 = bitcast %union.anon.0.189* %20 to %struct._dnode.191**, !dbg !12790
  store %struct._dnode.191* %18, %struct._dnode.191** %21, align 4, !dbg !12791
  %22 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12792
  %23 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12793
  %24 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %23, i32 0, i32 1, !dbg !12794
  %25 = bitcast %union.anon.0.189* %24 to %struct._dnode.191**, !dbg !12794
  store %struct._dnode.191* %22, %struct._dnode.191** %25, align 4, !dbg !12795
  ret void, !dbg !12796
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !12797 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12800, metadata !DIExpression()), !dbg !12801
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !12802, metadata !DIExpression()), !dbg !12803
  %5 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12804
  %6 = icmp ne %struct._dnode.191* %5, null, !dbg !12805
  br i1 %6, label %7, label %11, !dbg !12806

7:                                                ; preds = %2
  %8 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12807
  %9 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12808
  %10 = call %struct._dnode.191* @sys_dlist_peek_next_no_check(%struct._dnode.191* noundef %8, %struct._dnode.191* noundef %9) #10, !dbg !12809
  br label %12, !dbg !12806

11:                                               ; preds = %2
  br label %12, !dbg !12806

12:                                               ; preds = %11, %7
  %13 = phi %struct._dnode.191* [ %10, %7 ], [ null, %11 ], !dbg !12806
  ret %struct._dnode.191* %13, !dbg !12810
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_append(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !12811 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12814, metadata !DIExpression()), !dbg !12815
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !12816, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !12818, metadata !DIExpression()), !dbg !12819
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12820
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !12821
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !12821
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !12821
  store %struct._dnode.191* %9, %struct._dnode.191** %5, align 4, !dbg !12819
  %10 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12822
  %11 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12823
  %12 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %11, i32 0, i32 0, !dbg !12824
  %13 = bitcast %union.anon.0.189* %12 to %struct._dnode.191**, !dbg !12824
  store %struct._dnode.191* %10, %struct._dnode.191** %13, align 4, !dbg !12825
  %14 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !12826
  %15 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12827
  %16 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %15, i32 0, i32 1, !dbg !12828
  %17 = bitcast %union.anon.0.189* %16 to %struct._dnode.191**, !dbg !12828
  store %struct._dnode.191* %14, %struct._dnode.191** %17, align 4, !dbg !12829
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12830
  %19 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !12831
  %20 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %19, i32 0, i32 0, !dbg !12832
  %21 = bitcast %union.anon.0.189* %20 to %struct._dnode.191**, !dbg !12832
  store %struct._dnode.191* %18, %struct._dnode.191** %21, align 4, !dbg !12833
  %22 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12834
  %23 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12835
  %24 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %23, i32 0, i32 1, !dbg !12836
  %25 = bitcast %union.anon.0.189* %24 to %struct._dnode.191**, !dbg !12836
  store %struct._dnode.191* %22, %struct._dnode.191** %25, align 4, !dbg !12837
  ret void, !dbg !12838
}

; Function Attrs: noinline nounwind optnone
define internal void @update_cache(i32 noundef %0) #1 !dbg !12839 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12840, metadata !DIExpression()), !dbg !12841
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !12842, metadata !DIExpression()), !dbg !12843
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12844, metadata !DIExpression()) #9, !dbg !12848
  %8 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !12850
  %9 = call %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %8) #13, !dbg !12853
  store %struct.k_thread.203* %9, %struct.k_thread.203** %5, align 4, !dbg !12848
  %10 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !12854
  %11 = icmp ne %struct.k_thread.203* %10, null, !dbg !12855
  br i1 %11, label %12, label %14, !dbg !12856

12:                                               ; preds = %1
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !12857
  br label %16, !dbg !12856

14:                                               ; preds = %1
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12858
  br label %16, !dbg !12856

16:                                               ; preds = %12, %14
  %17 = phi %struct.k_thread.203* [ %13, %12 ], [ %15, %14 ], !dbg !12856
  store %struct.k_thread.203* %17, %struct.k_thread.203** %7, align 4, !dbg !12843
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !12859
  %19 = load i32, i32* %6, align 4, !dbg !12861
  store %struct.k_thread.203* %18, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12862, metadata !DIExpression()) #9, !dbg !12866
  store i32 %19, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12868, metadata !DIExpression()) #9, !dbg !12869
  %20 = load i32, i32* %4, align 4, !dbg !12870
  %21 = icmp ne i32 %20, 0, !dbg !12872
  br i1 %21, label %22, label %23, !dbg !12873

22:                                               ; preds = %16
  store i1 true, i1* %2, align 1, !dbg !12874
  br label %41, !dbg !12874

23:                                               ; preds = %16
  %24 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12876
  %25 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %24) #13, !dbg !12878
  br i1 %25, label %26, label %27, !dbg !12879

26:                                               ; preds = %23
  store i1 true, i1* %2, align 1, !dbg !12880
  br label %41, !dbg !12880

27:                                               ; preds = %23
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !12882
  %29 = call zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.203* noundef %28) #13, !dbg !12884
  br i1 %29, label %30, label %31, !dbg !12885

30:                                               ; preds = %27
  store i1 true, i1* %2, align 1, !dbg !12886
  br label %41, !dbg !12886

31:                                               ; preds = %27
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12888
  %33 = call i32 @is_preempt(%struct.k_thread.203* noundef %32) #13, !dbg !12890
  %34 = icmp ne i32 %33, 0, !dbg !12890
  br i1 %34, label %39, label %35, !dbg !12891

35:                                               ; preds = %31
  %36 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !12892
  %37 = call i32 @is_metairq(%struct.k_thread.203* noundef %36) #13, !dbg !12893
  %38 = icmp ne i32 %37, 0, !dbg !12893
  br i1 %38, label %39, label %40, !dbg !12894

39:                                               ; preds = %35, %31
  store i1 true, i1* %2, align 1, !dbg !12895
  br label %41, !dbg !12895

40:                                               ; preds = %35
  store i1 false, i1* %2, align 1, !dbg !12897
  br label %41, !dbg !12897

41:                                               ; preds = %22, %26, %30, %39, %40
  %42 = load i1, i1* %2, align 1, !dbg !12898
  br i1 %42, label %43, label %52, !dbg !12899

43:                                               ; preds = %41
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !12900
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12903
  %46 = icmp ne %struct.k_thread.203* %44, %45, !dbg !12904
  br i1 %46, label %47, label %49, !dbg !12905

47:                                               ; preds = %43
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !12906
  call void @z_reset_time_slice(%struct.k_thread.203* noundef %48) #10, !dbg !12908
  br label %49, !dbg !12909

49:                                               ; preds = %47, %43
  %50 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !12910
  call void @update_metairq_preempt(%struct.k_thread.203* noundef %50) #10, !dbg !12911
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !12912
  store %struct.k_thread.203* %51, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12913
  br label %54, !dbg !12914

52:                                               ; preds = %41
  %53 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12915
  store %struct.k_thread.203* %53, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12917
  br label %54

54:                                               ; preds = %52, %49
  ret void, !dbg !12918
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %0) #1 !dbg !12919 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12922, metadata !DIExpression()), !dbg !12923
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12924, metadata !DIExpression()), !dbg !12925
  store %struct.k_thread.203* null, %struct.k_thread.203** %3, align 4, !dbg !12925
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !12926, metadata !DIExpression()), !dbg !12927
  %5 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12928
  %6 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %5) #10, !dbg !12929
  store %struct._dnode.191* %6, %struct._dnode.191** %4, align 4, !dbg !12927
  %7 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12930
  %8 = icmp ne %struct._dnode.191* %7, null, !dbg !12932
  br i1 %8, label %9, label %14, !dbg !12933

9:                                                ; preds = %1
  %10 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12934
  %11 = bitcast %struct._dnode.191* %10 to i8*, !dbg !12934
  %12 = getelementptr inbounds i8, i8* %11, i32 0, !dbg !12934
  %13 = bitcast i8* %12 to %struct.k_thread.203*, !dbg !12934
  store %struct.k_thread.203* %13, %struct.k_thread.203** %3, align 4, !dbg !12936
  br label %14, !dbg !12937

14:                                               ; preds = %9, %1
  %15 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !12938
  ret %struct.k_thread.203* %15, !dbg !12939
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.203* noundef %0) #1 !dbg !12940 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12941, metadata !DIExpression()), !dbg !12942
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12943
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !12944
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 7, !dbg !12945
  %6 = call zeroext i1 @z_is_inactive_timeout(%struct._timeout.195* noundef %5) #10, !dbg !12946
  %7 = xor i1 %6, true, !dbg !12947
  ret i1 %7, !dbg !12948
}

; Function Attrs: noinline nounwind optnone
define internal i32 @is_preempt(%struct.k_thread.203* noundef %0) #1 !dbg !12949 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12950, metadata !DIExpression()), !dbg !12951
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !12952
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !12953
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 4, !dbg !12954
  %6 = bitcast %union.anon.2.7* %5 to i16*, !dbg !12954
  %7 = load i16, i16* %6, align 2, !dbg !12954
  %8 = zext i16 %7 to i32, !dbg !12952
  %9 = icmp ule i32 %8, 127, !dbg !12955
  %10 = zext i1 %9 to i32, !dbg !12955
  ret i32 %10, !dbg !12956
}

; Function Attrs: noinline nounwind optnone
define internal i32 @is_metairq(%struct.k_thread.203* noundef %0) #1 !dbg !12957 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12958, metadata !DIExpression()), !dbg !12959
  ret i32 0, !dbg !12960
}

; Function Attrs: noinline nounwind optnone
define internal void @update_metairq_preempt(%struct.k_thread.203* noundef %0) #1 !dbg !12961 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12962, metadata !DIExpression()), !dbg !12963
  ret void, !dbg !12964
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_inactive_timeout(%struct._timeout.195* noundef %0) #1 !dbg !12965 {
  %2 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !12970, metadata !DIExpression()), !dbg !12971
  %3 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !12972
  %4 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %3, i32 0, i32 0, !dbg !12973
  %5 = call zeroext i1 @sys_dnode_is_linked(%struct._dnode.191* noundef %4) #10, !dbg !12974
  %6 = xor i1 %5, true, !dbg !12975
  ret i1 %6, !dbg !12976
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dnode_is_linked(%struct._dnode.191* noundef %0) #1 !dbg !12977 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12982, metadata !DIExpression()), !dbg !12983
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !12984
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !12985
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !12985
  %6 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !12985
  %7 = icmp ne %struct._dnode.191* %6, null, !dbg !12986
  ret i1 %7, !dbg !12987
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_next_no_check(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !12988 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12989, metadata !DIExpression()), !dbg !12990
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !12991, metadata !DIExpression()), !dbg !12992
  %5 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12993
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !12994
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !12995
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !12995
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !12995
  %10 = icmp eq %struct._dnode.191* %5, %9, !dbg !12996
  br i1 %10, label %11, label %12, !dbg !12997

11:                                               ; preds = %2
  br label %17, !dbg !12997

12:                                               ; preds = %2
  %13 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !12998
  %14 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %13, i32 0, i32 0, !dbg !12999
  %15 = bitcast %union.anon.0.189* %14 to %struct._dnode.191**, !dbg !12999
  %16 = load %struct._dnode.191*, %struct._dnode.191** %15, align 4, !dbg !12999
  br label %17, !dbg !12997

17:                                               ; preds = %12, %11
  %18 = phi %struct._dnode.191* [ null, %11 ], [ %16, %12 ], !dbg !12997
  ret %struct._dnode.191* %18, !dbg !13000
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dlist_is_empty(%struct._dnode.191* noundef %0) #1 !dbg !13001 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !13004, metadata !DIExpression()), !dbg !13005
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13006
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !13007
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !13007
  %6 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !13007
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13008
  %8 = icmp eq %struct._dnode.191* %6, %7, !dbg !13009
  ret i1 %8, !dbg !13010
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_remove(%struct._dnode.191* noundef %0) #1 !dbg !13011 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !13014, metadata !DIExpression()), !dbg !13015
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !13016, metadata !DIExpression()), !dbg !13017
  %5 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13018
  %6 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %5, i32 0, i32 1, !dbg !13019
  %7 = bitcast %union.anon.0.189* %6 to %struct._dnode.191**, !dbg !13019
  %8 = load %struct._dnode.191*, %struct._dnode.191** %7, align 4, !dbg !13019
  store %struct._dnode.191* %8, %struct._dnode.191** %3, align 4, !dbg !13017
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !13020, metadata !DIExpression()), !dbg !13021
  %9 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13022
  %10 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %9, i32 0, i32 0, !dbg !13023
  %11 = bitcast %union.anon.0.189* %10 to %struct._dnode.191**, !dbg !13023
  %12 = load %struct._dnode.191*, %struct._dnode.191** %11, align 4, !dbg !13023
  store %struct._dnode.191* %12, %struct._dnode.191** %4, align 4, !dbg !13021
  %13 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13024
  %14 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13025
  %15 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %14, i32 0, i32 0, !dbg !13026
  %16 = bitcast %union.anon.0.189* %15 to %struct._dnode.191**, !dbg !13026
  store %struct._dnode.191* %13, %struct._dnode.191** %16, align 4, !dbg !13027
  %17 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13028
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !13029
  %19 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %18, i32 0, i32 1, !dbg !13030
  %20 = bitcast %union.anon.0.189* %19 to %struct._dnode.191**, !dbg !13030
  store %struct._dnode.191* %17, %struct._dnode.191** %20, align 4, !dbg !13031
  %21 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13032
  call void @sys_dnode_init.63(%struct._dnode.191* noundef %21) #10, !dbg !13033
  ret void, !dbg !13034
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init.63(%struct._dnode.191* noundef %0) #1 !dbg !13035 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !13036, metadata !DIExpression()), !dbg !13037
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13038
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !13039
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !13039
  store %struct._dnode.191* null, %struct._dnode.191** %5, align 4, !dbg !13040
  %6 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13041
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !13042
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !13042
  store %struct._dnode.191* null, %struct._dnode.191** %8, align 4, !dbg !13043
  ret void, !dbg !13044
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_state_set(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !13045 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !13048, metadata !DIExpression()), !dbg !13049
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13050, metadata !DIExpression()), !dbg !13051
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13052
  %6 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %5, i32 0, i32 0, !dbg !13053
  %7 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %6, i32 0, i32 3, !dbg !13054
  %8 = load i8, i8* %7, align 1, !dbg !13054
  %9 = zext i8 %8 to i32, !dbg !13052
  %10 = load i32, i32* %4, align 4, !dbg !13055
  %11 = and i32 %9, %10, !dbg !13056
  %12 = icmp ne i32 %11, 0, !dbg !13057
  ret i1 %12, !dbg !13058
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #1 !dbg !13059 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13062, metadata !DIExpression()), !dbg !13063
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13064, metadata !DIExpression()), !dbg !13065
  %5 = load i32, i32* %3, align 4, !dbg !13066
  %6 = load i32, i32* %4, align 4, !dbg !13067
  %7 = call zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %5, i32 noundef %6) #10, !dbg !13068
  ret i1 %7, !dbg !13069
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_idle_thread_object(%struct.k_thread.203* noundef %0) #1 !dbg !13070 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13071, metadata !DIExpression()), !dbg !13072
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13073
  %4 = icmp eq %struct.k_thread.203* %3, getelementptr inbounds ([1 x %struct.k_thread.203], [1 x %struct.k_thread.203]* @z_idle_threads, i32 0, i32 0), !dbg !13074
  ret i1 %4, !dbg !13075
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #1 !dbg !13076 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13077, metadata !DIExpression()), !dbg !13078
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13079, metadata !DIExpression()), !dbg !13080
  %5 = load i32, i32* %3, align 4, !dbg !13081
  %6 = load i32, i32* %4, align 4, !dbg !13082
  %7 = icmp slt i32 %5, %6, !dbg !13083
  ret i1 %7, !dbg !13084
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_ready_thread(%struct.k_thread.203* noundef %0) #1 !dbg !13085 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13086, metadata !DIExpression()), !dbg !13087
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13088, metadata !DIExpression()), !dbg !13090
  %11 = bitcast %union.anon.68* %9 to i8*, !dbg !13090
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !13090
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13091, metadata !DIExpression()), !dbg !13090
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12240, metadata !DIExpression()) #9, !dbg !13092
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13094
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12248, metadata !DIExpression()) #9, !dbg !13095
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12250, metadata !DIExpression()) #9, !dbg !13096
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13098, !srcloc !12255
  store i32 %13, i32* %2, align 4, !dbg !13098
  %14 = load i32, i32* %2, align 4, !dbg !13099
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13100
  store i32 %14, i32* %15, align 4, !dbg !13101
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13102
  %17 = load i32, i32* %16, align 4, !dbg !13102
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13090
  store i32 %17, i32* %18, align 4, !dbg !13090
  br label %19, !dbg !13090

19:                                               ; preds = %43, %1
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13103
  %21 = load i32, i32* %20, align 4, !dbg !13103
  %22 = icmp ne i32 %21, 0, !dbg !13103
  %23 = xor i1 %22, true, !dbg !13103
  br i1 %23, label %24, label %45, !dbg !13090

24:                                               ; preds = %19
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13105
  %26 = call zeroext i1 @thread_active_elsewhere(%struct.k_thread.203* noundef %25) #10, !dbg !13108
  br i1 %26, label %29, label %27, !dbg !13109

27:                                               ; preds = %24
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13110
  call void @ready_thread(%struct.k_thread.203* noundef %28) #10, !dbg !13112
  br label %29, !dbg !13113

29:                                               ; preds = %27, %24
  br label %30, !dbg !13114

30:                                               ; preds = %29
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13103
  %32 = bitcast i32* %31 to [1 x i32]*, !dbg !13103
  %33 = load [1 x i32], [1 x i32]* %32, align 4, !dbg !13103
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %35 = bitcast i32* %34 to [1 x i32]*
  store [1 x i32] %33, [1 x i32]* %35, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12280, metadata !DIExpression()) #9, !dbg !13115
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12286, metadata !DIExpression()) #9, !dbg !13117
  %36 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13118
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !13119
  %38 = load i32, i32* %37, align 4, !dbg !13119
  store i32 %38, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12290, metadata !DIExpression()) #9, !dbg !13120
  %39 = load i32, i32* %3, align 4, !dbg !13122
  %40 = icmp ne i32 %39, 0, !dbg !13123
  br i1 %40, label %41, label %42, !dbg !13124

41:                                               ; preds = %30
  br label %43, !dbg !13125

42:                                               ; preds = %30
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13126, !srcloc !12301
  br label %43, !dbg !13127

43:                                               ; preds = %41, %42
  %44 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13103
  store i32 1, i32* %44, align 4, !dbg !13103
  br label %19, !dbg !13103, !llvm.loop !13128

45:                                               ; preds = %19
  ret void, !dbg !13130
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @thread_active_elsewhere(%struct.k_thread.203* noundef %0) #1 !dbg !13131 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13132, metadata !DIExpression()), !dbg !13133
  ret i1 false, !dbg !13134
}

; Function Attrs: noinline nounwind optnone
define internal void @ready_thread(%struct.k_thread.203* noundef %0) #1 !dbg !13135 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13136, metadata !DIExpression()), !dbg !13137
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13138
  %10 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %9) #10, !dbg !13140
  br i1 %10, label %93, label %11, !dbg !13141

11:                                               ; preds = %1
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13142
  %13 = call zeroext i1 @z_is_thread_ready(%struct.k_thread.203* noundef %12) #10, !dbg !13143
  br i1 %13, label %14, label %93, !dbg !13144

14:                                               ; preds = %11
  br label %15, !dbg !13145

15:                                               ; preds = %14
  br label %16, !dbg !13147

16:                                               ; preds = %15
  %17 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13149
  store %struct.k_thread.203* %17, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !12671, metadata !DIExpression()) #9, !dbg !13150
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !13152
  %19 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %18, i32 0, i32 0, !dbg !13153
  %20 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %19, i32 0, i32 3, !dbg !13154
  %21 = load i8, i8* %20, align 1, !dbg !13155
  %22 = zext i8 %21 to i32, !dbg !13155
  %23 = or i32 %22, 128, !dbg !13155
  %24 = trunc i32 %23 to i8, !dbg !13155
  store i8 %24, i8* %20, align 1, !dbg !13155
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !13156
  %26 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %25) #13, !dbg !13157
  br i1 %26, label %27, label %92, !dbg !13158

27:                                               ; preds = %16
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !13159
  store %struct.k_thread.203* %28, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !12685, metadata !DIExpression()) #9, !dbg !13160
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13162
  store %struct.k_thread.203* %29, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12659, metadata !DIExpression()) #9, !dbg !13163
  %30 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13165
  store %struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !12693, metadata !DIExpression()) #9, !dbg !13166
  store %struct.k_thread.203* %30, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12700, metadata !DIExpression()) #9, !dbg !13168
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12702, metadata !DIExpression()) #9, !dbg !13169
  %31 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13170
  %32 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %31) #13, !dbg !13170
  %33 = icmp ne %struct._dnode.191* %32, null, !dbg !13170
  br i1 %33, label %34, label %39, !dbg !13170

34:                                               ; preds = %27
  %35 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13170
  %36 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %35) #13, !dbg !13170
  %37 = bitcast %struct._dnode.191* %36 to i8*, !dbg !13170
  %38 = bitcast i8* %37 to %struct.k_thread.203*, !dbg !13170
  br label %40, !dbg !13170

39:                                               ; preds = %27
  br label %40, !dbg !13170

40:                                               ; preds = %39, %34
  %41 = phi %struct.k_thread.203* [ %38, %34 ], [ null, %39 ], !dbg !13170
  store %struct.k_thread.203* %41, %struct.k_thread.203** %4, align 4, !dbg !13170
  br label %42, !dbg !13170

42:                                               ; preds = %83, %40
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13171
  %44 = icmp ne %struct.k_thread.203* %43, null, !dbg !13171
  br i1 %44, label %45, label %85, !dbg !13170

45:                                               ; preds = %42
  %46 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13172
  %47 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13173
  %48 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %46, %struct.k_thread.203* noundef %47) #13, !dbg !13174
  %49 = icmp sgt i32 %48, 0, !dbg !13175
  br i1 %49, label %50, label %59, !dbg !13176

50:                                               ; preds = %45
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13177
  %52 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %51, i32 0, i32 0, !dbg !13178
  %53 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %52, i32 0, i32 0, !dbg !13179
  %54 = bitcast %union.anon.192* %53 to %struct._dnode.191*, !dbg !13179
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13180
  %56 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %55, i32 0, i32 0, !dbg !13181
  %57 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %56, i32 0, i32 0, !dbg !13182
  %58 = bitcast %union.anon.192* %57 to %struct._dnode.191*, !dbg !13182
  call void @sys_dlist_insert(%struct._dnode.191* noundef %54, %struct._dnode.191* noundef %58) #13, !dbg !13183
  br label %91, !dbg !13184

59:                                               ; preds = %45
  %60 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13171
  %61 = icmp ne %struct.k_thread.203* %60, null, !dbg !13171
  br i1 %61, label %62, label %82, !dbg !13171

62:                                               ; preds = %59
  %63 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13171
  %64 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13171
  %65 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %64, i32 0, i32 0, !dbg !13171
  %66 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %65, i32 0, i32 0, !dbg !13171
  %67 = bitcast %union.anon.192* %66 to %struct._dnode.191*, !dbg !13171
  %68 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %63, %struct._dnode.191* noundef %67) #13, !dbg !13171
  %69 = icmp ne %struct._dnode.191* %68, null, !dbg !13171
  br i1 %69, label %70, label %79, !dbg !13171

70:                                               ; preds = %62
  %71 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13171
  %72 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13171
  %73 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %72, i32 0, i32 0, !dbg !13171
  %74 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %73, i32 0, i32 0, !dbg !13171
  %75 = bitcast %union.anon.192* %74 to %struct._dnode.191*, !dbg !13171
  %76 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %71, %struct._dnode.191* noundef %75) #13, !dbg !13171
  %77 = bitcast %struct._dnode.191* %76 to i8*, !dbg !13171
  %78 = bitcast i8* %77 to %struct.k_thread.203*, !dbg !13171
  br label %80, !dbg !13171

79:                                               ; preds = %62
  br label %80, !dbg !13171

80:                                               ; preds = %79, %70
  %81 = phi %struct.k_thread.203* [ %78, %70 ], [ null, %79 ], !dbg !13171
  br label %83, !dbg !13171

82:                                               ; preds = %59
  br label %83, !dbg !13171

83:                                               ; preds = %82, %80
  %84 = phi %struct.k_thread.203* [ %81, %80 ], [ null, %82 ], !dbg !13171
  store %struct.k_thread.203* %84, %struct.k_thread.203** %4, align 4, !dbg !13171
  br label %42, !dbg !13171, !llvm.loop !13185

85:                                               ; preds = %42
  %86 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !13187
  %87 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13188
  %88 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %87, i32 0, i32 0, !dbg !13189
  %89 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %88, i32 0, i32 0, !dbg !13190
  %90 = bitcast %union.anon.192* %89 to %struct._dnode.191*, !dbg !13190
  call void @sys_dlist_append(%struct._dnode.191* noundef %86, %struct._dnode.191* noundef %90) #13, !dbg !13191
  br label %91, !dbg !13192

91:                                               ; preds = %50, %85
  br label %92, !dbg !13193

92:                                               ; preds = %16, %91
  call void @update_cache(i32 noundef 0) #10, !dbg !13194
  call void @flag_ipi() #10, !dbg !13195
  br label %93, !dbg !13196

93:                                               ; preds = %92, %11, %1
  ret void, !dbg !13197
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_ready(%struct.k_thread.203* noundef %0) #1 !dbg !13198 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13199, metadata !DIExpression()), !dbg !13200
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13201
  %4 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.203* noundef %3) #10, !dbg !13202
  %5 = zext i1 %4 to i32, !dbg !13203
  %6 = icmp ne i32 %5, 0, !dbg !13204
  br i1 %6, label %10, label %7, !dbg !13205

7:                                                ; preds = %1
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13206
  %9 = call zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.203* noundef %8) #10, !dbg !13207
  br label %10, !dbg !13205

10:                                               ; preds = %7, %1
  %11 = phi i1 [ true, %1 ], [ %9, %7 ]
  %12 = xor i1 %11, true, !dbg !13208
  ret i1 %12, !dbg !13209
}

; Function Attrs: noinline nounwind optnone
define internal void @flag_ipi() #1 !dbg !13210 {
  ret void, !dbg !13211
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread.203* noundef %0) #1 !dbg !13212 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13213, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13215, metadata !DIExpression()), !dbg !13217
  %11 = bitcast %union.anon.68* %9 to i8*, !dbg !13217
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !13217
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13218, metadata !DIExpression()), !dbg !13217
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12240, metadata !DIExpression()) #9, !dbg !13219
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13221
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12248, metadata !DIExpression()) #9, !dbg !13222
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12250, metadata !DIExpression()) #9, !dbg !13223
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13225, !srcloc !12255
  store i32 %13, i32* %2, align 4, !dbg !13225
  %14 = load i32, i32* %2, align 4, !dbg !13226
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13227
  store i32 %14, i32* %15, align 4, !dbg !13228
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13229
  %17 = load i32, i32* %16, align 4, !dbg !13229
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13217
  store i32 %17, i32* %18, align 4, !dbg !13217
  br label %19, !dbg !13217

19:                                               ; preds = %39, %1
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13230
  %21 = load i32, i32* %20, align 4, !dbg !13230
  %22 = icmp ne i32 %21, 0, !dbg !13230
  %23 = xor i1 %22, true, !dbg !13230
  br i1 %23, label %24, label %41, !dbg !13217

24:                                               ; preds = %19
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13232
  call void @move_thread_to_end_of_prio_q(%struct.k_thread.203* noundef %25) #10, !dbg !13234
  br label %26, !dbg !13235

26:                                               ; preds = %24
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13230
  %28 = bitcast i32* %27 to [1 x i32]*, !dbg !13230
  %29 = load [1 x i32], [1 x i32]* %28, align 4, !dbg !13230
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %31 = bitcast i32* %30 to [1 x i32]*
  store [1 x i32] %29, [1 x i32]* %31, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12280, metadata !DIExpression()) #9, !dbg !13236
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12286, metadata !DIExpression()) #9, !dbg !13238
  %32 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13239
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !13240
  %34 = load i32, i32* %33, align 4, !dbg !13240
  store i32 %34, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12290, metadata !DIExpression()) #9, !dbg !13241
  %35 = load i32, i32* %3, align 4, !dbg !13243
  %36 = icmp ne i32 %35, 0, !dbg !13244
  br i1 %36, label %37, label %38, !dbg !13245

37:                                               ; preds = %26
  br label %39, !dbg !13246

38:                                               ; preds = %26
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13247, !srcloc !12301
  br label %39, !dbg !13248

39:                                               ; preds = %37, %38
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13230
  store i32 1, i32* %40, align 4, !dbg !13230
  br label %19, !dbg !13230, !llvm.loop !13249

41:                                               ; preds = %19
  ret void, !dbg !13251
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_sched_start(%struct.k_thread.203* noundef %0) #1 !dbg !13252 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13253, metadata !DIExpression()), !dbg !13254
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13255, metadata !DIExpression()), !dbg !13256
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12240, metadata !DIExpression()) #9, !dbg !13257
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13259
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12248, metadata !DIExpression()) #9, !dbg !13260
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12250, metadata !DIExpression()) #9, !dbg !13261
  %11 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13263, !srcloc !12255
  store i32 %11, i32* %2, align 4, !dbg !13263
  %12 = load i32, i32* %2, align 4, !dbg !13264
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13265
  store i32 %12, i32* %13, align 4, !dbg !13266
  %14 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13267
  %15 = load i32, i32* %14, align 4, !dbg !13267
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13268
  store i32 %15, i32* %16, align 4, !dbg !13268
  %17 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13269
  %18 = call zeroext i1 @z_has_thread_started(%struct.k_thread.203* noundef %17) #10, !dbg !13271
  br i1 %18, label %19, label %33, !dbg !13272

19:                                               ; preds = %1
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13273
  %21 = bitcast i32* %20 to [1 x i32]*, !dbg !13273
  %22 = load [1 x i32], [1 x i32]* %21, align 4, !dbg !13273
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %24 = bitcast i32* %23 to [1 x i32]*
  store [1 x i32] %22, [1 x i32]* %24, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12280, metadata !DIExpression()) #9, !dbg !13275
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12286, metadata !DIExpression()) #9, !dbg !13277
  %25 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13278
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !13279
  %27 = load i32, i32* %26, align 4, !dbg !13279
  store i32 %27, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12290, metadata !DIExpression()) #9, !dbg !13280
  %28 = load i32, i32* %3, align 4, !dbg !13282
  %29 = icmp ne i32 %28, 0, !dbg !13283
  br i1 %29, label %30, label %31, !dbg !13284

30:                                               ; preds = %19
  br label %32, !dbg !13285

31:                                               ; preds = %19
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13286, !srcloc !12301
  br label %32, !dbg !13287

32:                                               ; preds = %30, %31
  br label %39, !dbg !13288

33:                                               ; preds = %1
  %34 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13289
  call void @z_mark_thread_as_started.68(%struct.k_thread.203* noundef %34) #10, !dbg !13290
  %35 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13291
  call void @ready_thread(%struct.k_thread.203* noundef %35) #10, !dbg !13292
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13293
  %37 = bitcast i32* %36 to [1 x i32]*, !dbg !13293
  %38 = load [1 x i32], [1 x i32]* %37, align 4, !dbg !13293
  call void @z_reschedule(%struct.k_spinlock.13* noundef @sched_spinlock, [1 x i32] %38) #10, !dbg !13293
  br label %39, !dbg !13294

39:                                               ; preds = %33, %32
  ret void, !dbg !13294
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_has_thread_started(%struct.k_thread.203* noundef %0) #1 !dbg !13295 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13296, metadata !DIExpression()), !dbg !13297
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13298
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13299
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13300
  %6 = load i8, i8* %5, align 1, !dbg !13300
  %7 = zext i8 %6 to i32, !dbg !13298
  %8 = and i32 %7, 4, !dbg !13301
  %9 = icmp eq i32 %8, 0, !dbg !13302
  ret i1 %9, !dbg !13303
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_started.68(%struct.k_thread.203* noundef %0) #1 !dbg !13304 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13305, metadata !DIExpression()), !dbg !13306
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13307
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13308
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13309
  %6 = load i8, i8* %5, align 1, !dbg !13310
  %7 = zext i8 %6 to i32, !dbg !13310
  %8 = and i32 %7, -5, !dbg !13310
  %9 = trunc i32 %8 to i8, !dbg !13310
  store i8 %9, i8* %5, align 1, !dbg !13310
  ret void, !dbg !13311
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reschedule(%struct.k_spinlock.13* noundef %0, [1 x i32] %1) #1 !dbg !13312 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0
  %12 = bitcast i32* %11 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %12, align 4
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !13313, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13315, metadata !DIExpression()), !dbg !13316
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13317
  %14 = load i32, i32* %13, align 4, !dbg !13317
  %15 = call zeroext i1 @resched(i32 noundef %14) #10, !dbg !13319
  br i1 %15, label %16, label %30, !dbg !13320

16:                                               ; preds = %2
  %17 = call zeroext i1 @need_swap() #10, !dbg !13321
  br i1 %17, label %18, label %30, !dbg !13322

18:                                               ; preds = %16
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !13323
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13325
  %21 = bitcast i32* %20 to [1 x i32]*, !dbg !13325
  %22 = load [1 x i32], [1 x i32]* %21, align 4, !dbg !13325
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %24 = bitcast i32* %23 to [1 x i32]*
  store [1 x i32] %22, [1 x i32]* %24, align 4
  store %struct.k_spinlock.13* %19, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !13326, metadata !DIExpression()) #9, !dbg !13330
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !13332, metadata !DIExpression()) #9, !dbg !13333
  %25 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !13334
  store %struct.k_spinlock.13* %25, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !13335, metadata !DIExpression()) #9, !dbg !13339
  %26 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !13341
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !13342
  %28 = load i32, i32* %27, align 4, !dbg !13342
  %29 = call i32 @z_swap_irqlock(i32 noundef %28) #13, !dbg !13343
  br label %45, !dbg !13344

30:                                               ; preds = %16, %2
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !13345
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13347
  %33 = bitcast i32* %32 to [1 x i32]*, !dbg !13347
  %34 = load [1 x i32], [1 x i32]* %33, align 4, !dbg !13347
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %36 = bitcast i32* %35 to [1 x i32]*
  store [1 x i32] %34, [1 x i32]* %36, align 4
  store %struct.k_spinlock.13* %31, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12280, metadata !DIExpression()) #9, !dbg !13348
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12286, metadata !DIExpression()) #9, !dbg !13350
  %37 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !13351
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13352
  %39 = load i32, i32* %38, align 4, !dbg !13352
  store i32 %39, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12290, metadata !DIExpression()) #9, !dbg !13353
  %40 = load i32, i32* %3, align 4, !dbg !13355
  %41 = icmp ne i32 %40, 0, !dbg !13356
  br i1 %41, label %42, label %43, !dbg !13357

42:                                               ; preds = %30
  br label %44, !dbg !13358

43:                                               ; preds = %30
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13359, !srcloc !12301
  br label %44, !dbg !13360

44:                                               ; preds = %42, %43
  call void @signal_pending_ipi() #10, !dbg !13361
  br label %45

45:                                               ; preds = %44, %18
  ret void, !dbg !13362
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @resched(i32 noundef %0) #1 !dbg !13363 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13366, metadata !DIExpression()), !dbg !13367
  %5 = load i32, i32* %4, align 4, !dbg !13368
  store i32 %5, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13369, metadata !DIExpression()), !dbg !13373
  %6 = load i32, i32* %3, align 4, !dbg !13375
  %7 = icmp eq i32 %6, 0, !dbg !13376
  br i1 %7, label %8, label %15, !dbg !13377

8:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13378, metadata !DIExpression()) #9, !dbg !13380
  %9 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !13384, !srcloc !13385
  store i32 %9, i32* %2, align 4, !dbg !13384
  %10 = load i32, i32* %2, align 4, !dbg !13386
  %11 = icmp ne i32 %10, 0, !dbg !13387
  %12 = zext i1 %11 to i64, !dbg !13387
  %13 = select i1 %11, i32 1, i32 0, !dbg !13387
  %14 = xor i1 %11, true, !dbg !13388
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i1 [ false, %1 ], [ %14, %8 ], !dbg !13389
  ret i1 %16, !dbg !13390
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @need_swap() #1 !dbg !13391 {
  %1 = alloca %struct.k_thread.203*, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %1, metadata !13392, metadata !DIExpression()), !dbg !13393
  %2 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13394
  store %struct.k_thread.203* %2, %struct.k_thread.203** %1, align 4, !dbg !13395
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %1, align 4, !dbg !13396
  %4 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13397
  %5 = icmp ne %struct.k_thread.203* %3, %4, !dbg !13398
  ret i1 %5, !dbg !13399
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_swap_irqlock(i32 noundef %0) #1 !dbg !13400 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13401, metadata !DIExpression()), !dbg !13402
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13403, metadata !DIExpression()), !dbg !13404
  %4 = load i32, i32* %2, align 4, !dbg !13405
  %5 = call i32 @arch_swap(i32 noundef %4) #10, !dbg !13406
  store i32 %5, i32* %3, align 4, !dbg !13407
  %6 = load i32, i32* %3, align 4, !dbg !13408
  ret i32 %6, !dbg !13409
}

; Function Attrs: noinline nounwind optnone
define internal void @signal_pending_ipi() #1 !dbg !13410 {
  ret void, !dbg !13411
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread.203* noundef %0) #1 !dbg !13412 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %struct.k_thread.203*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %11, metadata !13413, metadata !DIExpression()), !dbg !13414
  br label %14, !dbg !13415

14:                                               ; preds = %1
  br label %15, !dbg !13416

15:                                               ; preds = %14
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13418
  %17 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %16) #10, !dbg !13419
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !13420, metadata !DIExpression()), !dbg !13422
  %18 = bitcast %union.anon.68* %12 to i8*, !dbg !13422
  call void @llvm.memset.p0i8.i32(i8* align 4 %18, i8 0, i32 4, i1 false), !dbg !13422
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !13423, metadata !DIExpression()), !dbg !13422
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !12240, metadata !DIExpression()) #9, !dbg !13424
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !13426
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !12248, metadata !DIExpression()) #9, !dbg !13427
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12250, metadata !DIExpression()) #9, !dbg !13428
  %20 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13430, !srcloc !12255
  store i32 %20, i32* %4, align 4, !dbg !13430
  %21 = load i32, i32* %4, align 4, !dbg !13431
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13432
  store i32 %21, i32* %22, align 4, !dbg !13433
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13434
  %24 = load i32, i32* %23, align 4, !dbg !13434
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13422
  store i32 %24, i32* %25, align 4, !dbg !13422
  br label %26, !dbg !13422

26:                                               ; preds = %70, %15
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !13435
  %28 = load i32, i32* %27, align 4, !dbg !13435
  %29 = icmp ne i32 %28, 0, !dbg !13435
  %30 = xor i1 %29, true, !dbg !13435
  br i1 %30, label %31, label %72, !dbg !13422

31:                                               ; preds = %26
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13437
  %33 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %32) #10, !dbg !13440
  br i1 %33, label %34, label %51, !dbg !13441

34:                                               ; preds = %31
  %35 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13442
  store %struct.k_thread.203* %35, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !12640, metadata !DIExpression()) #9, !dbg !13444
  %36 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13446
  %37 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %36, i32 0, i32 0, !dbg !13447
  %38 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %37, i32 0, i32 3, !dbg !13448
  %39 = load i8, i8* %38, align 1, !dbg !13449
  %40 = zext i8 %39 to i32, !dbg !13449
  %41 = and i32 %40, -129, !dbg !13449
  %42 = trunc i32 %41 to i8, !dbg !13449
  store i8 %42, i8* %38, align 1, !dbg !13449
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13450
  %44 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %43) #13, !dbg !13451
  br i1 %44, label %45, label %50, !dbg !13452

45:                                               ; preds = %34
  %46 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13453
  store %struct.k_thread.203* %46, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12654, metadata !DIExpression()) #9, !dbg !13454
  %47 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13456
  store %struct.k_thread.203* %47, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12659, metadata !DIExpression()), !dbg !13457
  %48 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !13459
  %49 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13460
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %48, %struct.k_thread.203* noundef %49) #13, !dbg !13461
  br label %50, !dbg !13462

50:                                               ; preds = %34, %45
  br label %51, !dbg !13463

51:                                               ; preds = %50, %31
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13464
  call void @z_mark_thread_as_suspended(%struct.k_thread.203* noundef %52) #10, !dbg !13465
  %53 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13466
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13467
  %55 = icmp eq %struct.k_thread.203* %53, %54, !dbg !13468
  %56 = zext i1 %55 to i32, !dbg !13468
  call void @update_cache(i32 noundef %56) #10, !dbg !13469
  br label %57, !dbg !13470

57:                                               ; preds = %51
  %58 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13435
  %59 = bitcast i32* %58 to [1 x i32]*, !dbg !13435
  %60 = load [1 x i32], [1 x i32]* %59, align 4, !dbg !13435
  %61 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %62 = bitcast i32* %61 to [1 x i32]*
  store [1 x i32] %60, [1 x i32]* %62, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12280, metadata !DIExpression()) #9, !dbg !13471
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12286, metadata !DIExpression()) #9, !dbg !13473
  %63 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !13474
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13475
  %65 = load i32, i32* %64, align 4, !dbg !13475
  store i32 %65, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12290, metadata !DIExpression()) #9, !dbg !13476
  %66 = load i32, i32* %5, align 4, !dbg !13478
  %67 = icmp ne i32 %66, 0, !dbg !13479
  br i1 %67, label %68, label %69, !dbg !13480

68:                                               ; preds = %57
  br label %70, !dbg !13481

69:                                               ; preds = %57
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13482, !srcloc !12301
  br label %70, !dbg !13483

70:                                               ; preds = %68, %69
  %71 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !13435
  store i32 1, i32* %71, align 4, !dbg !13435
  br label %26, !dbg !13435, !llvm.loop !13484

72:                                               ; preds = %26
  %73 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13486
  %74 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13488
  %75 = icmp eq %struct.k_thread.203* %73, %74, !dbg !13489
  br i1 %75, label %76, label %77, !dbg !13490

76:                                               ; preds = %72
  call void @z_reschedule_unlocked() #10, !dbg !13491
  br label %77, !dbg !13493

77:                                               ; preds = %76, %72
  br label %78, !dbg !13494

78:                                               ; preds = %77
  br label %79, !dbg !13495

79:                                               ; preds = %78
  ret void, !dbg !13497
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %0) #1 !dbg !13498 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13499, metadata !DIExpression()), !dbg !13500
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13501
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13502
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 7, !dbg !13503
  %6 = call i32 @z_abort_timeout(%struct._timeout.195* noundef %5) #10, !dbg !13504
  ret i32 %6, !dbg !13505
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_suspended(%struct.k_thread.203* noundef %0) #1 !dbg !13506 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13507, metadata !DIExpression()), !dbg !13508
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13509
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13510
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13511
  %6 = load i8, i8* %5, align 1, !dbg !13512
  %7 = zext i8 %6 to i32, !dbg !13512
  %8 = or i32 %7, 16, !dbg !13512
  %9 = trunc i32 %8 to i8, !dbg !13512
  store i8 %9, i8* %5, align 1, !dbg !13512
  br label %10, !dbg !13513

10:                                               ; preds = %1
  br label %11, !dbg !13514

11:                                               ; preds = %10
  ret void, !dbg !13516
}

; Function Attrs: noinline nounwind optnone
define internal void @z_reschedule_unlocked() #1 !dbg !13517 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12250, metadata !DIExpression()) #9, !dbg !13518
  %2 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13520, !srcloc !12255
  store i32 %2, i32* %1, align 4, !dbg !13520
  %3 = load i32, i32* %1, align 4, !dbg !13521
  call void @z_reschedule_irqlock(i32 noundef %3) #10, !dbg !13522
  ret void, !dbg !13523
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reschedule_irqlock(i32 noundef %0) #1 !dbg !13524 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13525, metadata !DIExpression()), !dbg !13526
  %4 = load i32, i32* %3, align 4, !dbg !13527
  %5 = call zeroext i1 @resched(i32 noundef %4) #10, !dbg !13529
  br i1 %5, label %6, label %9, !dbg !13530

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4, !dbg !13531
  %8 = call i32 @z_swap_irqlock(i32 noundef %7) #10, !dbg !13533
  br label %16, !dbg !13534

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !13535
  store i32 %10, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12290, metadata !DIExpression()) #9, !dbg !13537
  %11 = load i32, i32* %2, align 4, !dbg !13539
  %12 = icmp ne i32 %11, 0, !dbg !13540
  br i1 %12, label %13, label %14, !dbg !13541

13:                                               ; preds = %9
  br label %15, !dbg !13542

14:                                               ; preds = %9
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13543, !srcloc !12301
  br label %15, !dbg !13544

15:                                               ; preds = %13, %14
  call void @signal_pending_ipi() #10, !dbg !13545
  br label %16

16:                                               ; preds = %15, %6
  ret void, !dbg !13546
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_resume(%struct.k_thread.203* noundef %0) #1 !dbg !13547 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13548, metadata !DIExpression()), !dbg !13549
  br label %10, !dbg !13550

10:                                               ; preds = %1
  br label %11, !dbg !13551

11:                                               ; preds = %10
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13553, metadata !DIExpression()), !dbg !13554
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12240, metadata !DIExpression()) #9, !dbg !13555
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13557
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12248, metadata !DIExpression()) #9, !dbg !13558
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12250, metadata !DIExpression()) #9, !dbg !13559
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13561, !srcloc !12255
  store i32 %13, i32* %2, align 4, !dbg !13561
  %14 = load i32, i32* %2, align 4, !dbg !13562
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13563
  store i32 %14, i32* %15, align 4, !dbg !13564
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13565
  %17 = load i32, i32* %16, align 4, !dbg !13565
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13566
  store i32 %17, i32* %18, align 4, !dbg !13566
  %19 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13567
  %20 = call zeroext i1 @z_is_thread_suspended(%struct.k_thread.203* noundef %19) #10, !dbg !13569
  br i1 %20, label %35, label %21, !dbg !13570

21:                                               ; preds = %11
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13571
  %23 = bitcast i32* %22 to [1 x i32]*, !dbg !13571
  %24 = load [1 x i32], [1 x i32]* %23, align 4, !dbg !13571
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %26 = bitcast i32* %25 to [1 x i32]*
  store [1 x i32] %24, [1 x i32]* %26, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12280, metadata !DIExpression()) #9, !dbg !13573
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12286, metadata !DIExpression()) #9, !dbg !13575
  %27 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13576
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !13577
  %29 = load i32, i32* %28, align 4, !dbg !13577
  store i32 %29, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12290, metadata !DIExpression()) #9, !dbg !13578
  %30 = load i32, i32* %3, align 4, !dbg !13580
  %31 = icmp ne i32 %30, 0, !dbg !13581
  br i1 %31, label %32, label %33, !dbg !13582

32:                                               ; preds = %21
  br label %34, !dbg !13583

33:                                               ; preds = %21
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13584, !srcloc !12301
  br label %34, !dbg !13585

34:                                               ; preds = %32, %33
  br label %42, !dbg !13586

35:                                               ; preds = %11
  %36 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13587
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.203* noundef %36) #10, !dbg !13588
  %37 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13589
  call void @ready_thread(%struct.k_thread.203* noundef %37) #10, !dbg !13590
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13591
  %39 = bitcast i32* %38 to [1 x i32]*, !dbg !13591
  %40 = load [1 x i32], [1 x i32]* %39, align 4, !dbg !13591
  call void @z_reschedule(%struct.k_spinlock.13* noundef @sched_spinlock, [1 x i32] %40) #10, !dbg !13591
  br label %41, !dbg !13592

41:                                               ; preds = %35
  br label %42, !dbg !13593

42:                                               ; preds = %34, %41
  ret void, !dbg !13595
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_suspended(%struct.k_thread.203* noundef %0) #1 !dbg !13596 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13597, metadata !DIExpression()), !dbg !13598
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13599
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13600
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13601
  %6 = load i8, i8* %5, align 1, !dbg !13601
  %7 = zext i8 %6 to i32, !dbg !13599
  %8 = and i32 %7, 16, !dbg !13602
  %9 = icmp ne i32 %8, 0, !dbg !13603
  ret i1 %9, !dbg !13604
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_not_suspended(%struct.k_thread.203* noundef %0) #1 !dbg !13605 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13606, metadata !DIExpression()), !dbg !13607
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13608
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13609
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13610
  %6 = load i8, i8* %5, align 1, !dbg !13611
  %7 = zext i8 %6 to i32, !dbg !13611
  %8 = and i32 %7, -17, !dbg !13611
  %9 = trunc i32 %8 to i8, !dbg !13611
  store i8 %9, i8* %5, align 1, !dbg !13611
  br label %10, !dbg !13612

10:                                               ; preds = %1
  br label %11, !dbg !13613

11:                                               ; preds = %10
  ret void, !dbg !13615
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_pend_thread(%struct.k_thread.203* noundef %0, %union.anon.192* noundef %1, [1 x i64] %2) #1 !dbg !13616 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.argument_value, align 8
  %11 = alloca %struct.k_thread.203*, align 4
  %12 = alloca %union.anon.192*, align 4
  %13 = alloca %union.anon.68, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0
  %16 = bitcast i64* %15 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %16, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %11, metadata !13623, metadata !DIExpression()), !dbg !13624
  store %union.anon.192* %1, %union.anon.192** %12, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %12, metadata !13625, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.declare(metadata %union.argument_value* %10, metadata !13627, metadata !DIExpression()), !dbg !13628
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !13629, metadata !DIExpression()), !dbg !13631
  %17 = bitcast %union.anon.68* %13 to i8*, !dbg !13631
  call void @llvm.memset.p0i8.i32(i8* align 4 %17, i8 0, i32 4, i1 false), !dbg !13631
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !13632, metadata !DIExpression()), !dbg !13631
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !12240, metadata !DIExpression()) #9, !dbg !13633
  %18 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !13635
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !12248, metadata !DIExpression()) #9, !dbg !13636
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12250, metadata !DIExpression()) #9, !dbg !13637
  %19 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13639, !srcloc !12255
  store i32 %19, i32* %4, align 4, !dbg !13639
  %20 = load i32, i32* %4, align 4, !dbg !13640
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !13641
  store i32 %20, i32* %21, align 4, !dbg !13642
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !13643
  %23 = load i32, i32* %22, align 4, !dbg !13643
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !13631
  store i32 %23, i32* %24, align 4, !dbg !13631
  br label %25, !dbg !13631

25:                                               ; preds = %49, %3
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13644
  %27 = load i32, i32* %26, align 4, !dbg !13644
  %28 = icmp ne i32 %27, 0, !dbg !13644
  %29 = xor i1 %28, true, !dbg !13644
  br i1 %29, label %30, label %51, !dbg !13631

30:                                               ; preds = %25
  %31 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !13646
  %32 = load %union.anon.192*, %union.anon.192** %12, align 4, !dbg !13648
  %33 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !13649
  %34 = bitcast i64* %33 to [1 x i64]*, !dbg !13649
  %35 = load [1 x i64], [1 x i64]* %34, align 8, !dbg !13649
  call void @pend_locked(%struct.k_thread.203* noundef %31, %union.anon.192* noundef %32, [1 x i64] %35) #10, !dbg !13649
  br label %36, !dbg !13650

36:                                               ; preds = %30
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !13644
  %38 = bitcast i32* %37 to [1 x i32]*, !dbg !13644
  %39 = load [1 x i32], [1 x i32]* %38, align 4, !dbg !13644
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %41 = bitcast i32* %40 to [1 x i32]*
  store [1 x i32] %39, [1 x i32]* %41, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12280, metadata !DIExpression()) #9, !dbg !13651
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12286, metadata !DIExpression()) #9, !dbg !13653
  %42 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13654
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13655
  %44 = load i32, i32* %43, align 4, !dbg !13655
  store i32 %44, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12290, metadata !DIExpression()) #9, !dbg !13656
  %45 = load i32, i32* %5, align 4, !dbg !13658
  %46 = icmp ne i32 %45, 0, !dbg !13659
  br i1 %46, label %47, label %48, !dbg !13660

47:                                               ; preds = %36
  br label %49, !dbg !13661

48:                                               ; preds = %36
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13662, !srcloc !12301
  br label %49, !dbg !13663

49:                                               ; preds = %47, %48
  %50 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13644
  store i32 1, i32* %50, align 4, !dbg !13644
  br label %25, !dbg !13644, !llvm.loop !13664

51:                                               ; preds = %25
  ret void, !dbg !13666
}

; Function Attrs: noinline nounwind optnone
define internal void @pend_locked(%struct.k_thread.203* noundef %0, %union.anon.192* noundef %1, [1 x i64] %2) #1 !dbg !13667 {
  %4 = alloca %union.argument_value, align 8
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %union.anon.192*, align 4
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %8, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !13668, metadata !DIExpression()), !dbg !13669
  store %union.anon.192* %1, %union.anon.192** %6, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %6, metadata !13670, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.declare(metadata %union.argument_value* %4, metadata !13672, metadata !DIExpression()), !dbg !13673
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13674
  %10 = load %union.anon.192*, %union.anon.192** %6, align 4, !dbg !13675
  call void @add_to_waitq_locked(%struct.k_thread.203* noundef %9, %union.anon.192* noundef %10) #10, !dbg !13676
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13677
  %12 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0, !dbg !13678
  %13 = bitcast i64* %12 to [1 x i64]*, !dbg !13678
  %14 = load [1 x i64], [1 x i64]* %13, align 8, !dbg !13678
  call void @add_thread_timeout(%struct.k_thread.203* noundef %11, [1 x i64] %14) #10, !dbg !13678
  ret void, !dbg !13679
}

; Function Attrs: noinline nounwind optnone
define internal void @add_to_waitq_locked(%struct.k_thread.203* noundef %0, %union.anon.192* noundef %1) #1 !dbg !13680 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %union.anon.192*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !13683, metadata !DIExpression()), !dbg !13684
  store %union.anon.192* %1, %union.anon.192** %7, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %7, metadata !13685, metadata !DIExpression()), !dbg !13686
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13687
  call void @unready_thread(%struct.k_thread.203* noundef %8) #10, !dbg !13688
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13689
  call void @z_mark_thread_as_pending(%struct.k_thread.203* noundef %9) #10, !dbg !13690
  br label %10, !dbg !13691

10:                                               ; preds = %2
  br label %11, !dbg !13692

11:                                               ; preds = %10
  %12 = load %union.anon.192*, %union.anon.192** %7, align 4, !dbg !13694
  %13 = icmp ne %union.anon.192* %12, null, !dbg !13696
  br i1 %13, label %14, label %83, !dbg !13697

14:                                               ; preds = %11
  %15 = load %union.anon.192*, %union.anon.192** %7, align 4, !dbg !13698
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13700
  %17 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %16, i32 0, i32 0, !dbg !13701
  %18 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %17, i32 0, i32 1, !dbg !13702
  store %union.anon.192* %15, %union.anon.192** %18, align 8, !dbg !13703
  %19 = load %union.anon.192*, %union.anon.192** %7, align 4, !dbg !13704
  %20 = getelementptr inbounds %union.anon.192, %union.anon.192* %19, i32 0, i32 0, !dbg !13705
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !13706
  store %struct._dnode.191* %20, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12693, metadata !DIExpression()) #9, !dbg !13707
  store %struct.k_thread.203* %21, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12700, metadata !DIExpression()) #9, !dbg !13709
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12702, metadata !DIExpression()) #9, !dbg !13710
  %22 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13711
  %23 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %22) #13, !dbg !13711
  %24 = icmp ne %struct._dnode.191* %23, null, !dbg !13711
  br i1 %24, label %25, label %30, !dbg !13711

25:                                               ; preds = %14
  %26 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13711
  %27 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %26) #13, !dbg !13711
  %28 = bitcast %struct._dnode.191* %27 to i8*, !dbg !13711
  %29 = bitcast i8* %28 to %struct.k_thread.203*, !dbg !13711
  br label %31, !dbg !13711

30:                                               ; preds = %14
  br label %31, !dbg !13711

31:                                               ; preds = %30, %25
  %32 = phi %struct.k_thread.203* [ %29, %25 ], [ null, %30 ], !dbg !13711
  store %struct.k_thread.203* %32, %struct.k_thread.203** %5, align 4, !dbg !13711
  br label %33, !dbg !13711

33:                                               ; preds = %74, %31
  %34 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13712
  %35 = icmp ne %struct.k_thread.203* %34, null, !dbg !13712
  br i1 %35, label %36, label %76, !dbg !13711

36:                                               ; preds = %33
  %37 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13713
  %38 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13714
  %39 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %37, %struct.k_thread.203* noundef %38) #13, !dbg !13715
  %40 = icmp sgt i32 %39, 0, !dbg !13716
  br i1 %40, label %41, label %50, !dbg !13717

41:                                               ; preds = %36
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13718
  %43 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %42, i32 0, i32 0, !dbg !13719
  %44 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %43, i32 0, i32 0, !dbg !13720
  %45 = bitcast %union.anon.192* %44 to %struct._dnode.191*, !dbg !13720
  %46 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13721
  %47 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %46, i32 0, i32 0, !dbg !13722
  %48 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %47, i32 0, i32 0, !dbg !13723
  %49 = bitcast %union.anon.192* %48 to %struct._dnode.191*, !dbg !13723
  call void @sys_dlist_insert(%struct._dnode.191* noundef %45, %struct._dnode.191* noundef %49) #13, !dbg !13724
  br label %82, !dbg !13725

50:                                               ; preds = %36
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13712
  %52 = icmp ne %struct.k_thread.203* %51, null, !dbg !13712
  br i1 %52, label %53, label %73, !dbg !13712

53:                                               ; preds = %50
  %54 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13712
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13712
  %56 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %55, i32 0, i32 0, !dbg !13712
  %57 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %56, i32 0, i32 0, !dbg !13712
  %58 = bitcast %union.anon.192* %57 to %struct._dnode.191*, !dbg !13712
  %59 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %54, %struct._dnode.191* noundef %58) #13, !dbg !13712
  %60 = icmp ne %struct._dnode.191* %59, null, !dbg !13712
  br i1 %60, label %61, label %70, !dbg !13712

61:                                               ; preds = %53
  %62 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13712
  %63 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13712
  %64 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %63, i32 0, i32 0, !dbg !13712
  %65 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %64, i32 0, i32 0, !dbg !13712
  %66 = bitcast %union.anon.192* %65 to %struct._dnode.191*, !dbg !13712
  %67 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %62, %struct._dnode.191* noundef %66) #13, !dbg !13712
  %68 = bitcast %struct._dnode.191* %67 to i8*, !dbg !13712
  %69 = bitcast i8* %68 to %struct.k_thread.203*, !dbg !13712
  br label %71, !dbg !13712

70:                                               ; preds = %53
  br label %71, !dbg !13712

71:                                               ; preds = %70, %61
  %72 = phi %struct.k_thread.203* [ %69, %61 ], [ null, %70 ], !dbg !13712
  br label %74, !dbg !13712

73:                                               ; preds = %50
  br label %74, !dbg !13712

74:                                               ; preds = %73, %71
  %75 = phi %struct.k_thread.203* [ %72, %71 ], [ null, %73 ], !dbg !13712
  store %struct.k_thread.203* %75, %struct.k_thread.203** %5, align 4, !dbg !13712
  br label %33, !dbg !13712, !llvm.loop !13726

76:                                               ; preds = %33
  %77 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !13728
  %78 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13729
  %79 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %78, i32 0, i32 0, !dbg !13730
  %80 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %79, i32 0, i32 0, !dbg !13731
  %81 = bitcast %union.anon.192* %80 to %struct._dnode.191*, !dbg !13731
  call void @sys_dlist_append(%struct._dnode.191* noundef %77, %struct._dnode.191* noundef %81) #13, !dbg !13732
  br label %82, !dbg !13733

82:                                               ; preds = %41, %76
  br label %83, !dbg !13734

83:                                               ; preds = %82, %11
  ret void, !dbg !13735
}

; Function Attrs: noinline nounwind optnone
define internal void @add_thread_timeout(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !13736 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %union.argument_value, align 8
  %6 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %7 = bitcast i64* %6 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %7, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13739, metadata !DIExpression()), !dbg !13740
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !13741, metadata !DIExpression()), !dbg !13742
  %8 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !13743
  %9 = load i64, i64* %8, align 8, !dbg !13743
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !13743
  store i64 -1, i64* %10, align 8, !dbg !13743
  %11 = icmp eq i64 %9, -1, !dbg !13743
  br i1 %11, label %17, label %12, !dbg !13745

12:                                               ; preds = %2
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13746
  %14 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !13748
  %15 = bitcast i64* %14 to [1 x i64]*, !dbg !13748
  %16 = load [1 x i64], [1 x i64]* %15, align 8, !dbg !13748
  call void @z_add_thread_timeout.69(%struct.k_thread.203* noundef %13, [1 x i64] %16) #10, !dbg !13748
  br label %17, !dbg !13749

17:                                               ; preds = %12, %2
  ret void, !dbg !13750
}

; Function Attrs: noinline nounwind optnone
define internal void @z_add_thread_timeout.69(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !13751 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !13752, metadata !DIExpression()), !dbg !13753
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !13754, metadata !DIExpression()), !dbg !13755
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13756
  %8 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %7, i32 0, i32 0, !dbg !13757
  %9 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %8, i32 0, i32 7, !dbg !13758
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !13759
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !13759
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !13759
  call void @z_add_timeout(%struct._timeout.195* noundef %9, void (%struct._timeout.195*)* noundef @z_thread_timeout, [1 x i64] %12) #10, !dbg !13759
  ret void, !dbg !13760
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_timeout(%struct._timeout.195* noundef %0) #1 !dbg !13761 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.195*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca i8, align 1
  store %struct._timeout.195* %0, %struct._timeout.195** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %8, metadata !13762, metadata !DIExpression()), !dbg !13763
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !13764, metadata !DIExpression()), !dbg !13765
  %13 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !13766
  %14 = bitcast %struct._timeout.195* %13 to i8*, !dbg !13766
  %15 = getelementptr inbounds i8, i8* %14, i32 -24, !dbg !13766
  %16 = bitcast i8* %15 to %struct.k_thread.203*, !dbg !13766
  store %struct.k_thread.203* %16, %struct.k_thread.203** %9, align 4, !dbg !13765
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13767, metadata !DIExpression()), !dbg !13769
  %17 = bitcast %union.anon.68* %10 to i8*, !dbg !13769
  call void @llvm.memset.p0i8.i32(i8* align 4 %17, i8 0, i32 4, i1 false), !dbg !13769
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !13770, metadata !DIExpression()), !dbg !13769
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12240, metadata !DIExpression()) #9, !dbg !13771
  %18 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13773
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12248, metadata !DIExpression()) #9, !dbg !13774
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12250, metadata !DIExpression()) #9, !dbg !13775
  %19 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13777, !srcloc !12255
  store i32 %19, i32* %2, align 4, !dbg !13777
  %20 = load i32, i32* %2, align 4, !dbg !13778
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13779
  store i32 %20, i32* %21, align 4, !dbg !13780
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13781
  %23 = load i32, i32* %22, align 4, !dbg !13781
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !13769
  store i32 %23, i32* %24, align 4, !dbg !13769
  br label %25, !dbg !13769

25:                                               ; preds = %77, %1
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13782
  %27 = load i32, i32* %26, align 4, !dbg !13782
  %28 = icmp ne i32 %27, 0, !dbg !13782
  %29 = xor i1 %28, true, !dbg !13782
  br i1 %29, label %30, label %79, !dbg !13769

30:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata i8* %12, metadata !13784, metadata !DIExpression()), !dbg !13786
  %31 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13787
  %32 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %31, i32 0, i32 0, !dbg !13788
  %33 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %32, i32 0, i32 3, !dbg !13789
  %34 = load i8, i8* %33, align 1, !dbg !13789
  %35 = zext i8 %34 to i32, !dbg !13787
  %36 = and i32 %35, 8, !dbg !13790
  %37 = icmp ne i32 %36, 0, !dbg !13790
  br i1 %37, label %46, label %38, !dbg !13791

38:                                               ; preds = %30
  %39 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13792
  %40 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %39, i32 0, i32 0, !dbg !13793
  %41 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %40, i32 0, i32 3, !dbg !13794
  %42 = load i8, i8* %41, align 1, !dbg !13794
  %43 = zext i8 %42 to i32, !dbg !13792
  %44 = and i32 %43, 32, !dbg !13795
  %45 = icmp ne i32 %44, 0, !dbg !13791
  br label %46, !dbg !13791

46:                                               ; preds = %38, %30
  %47 = phi i1 [ true, %30 ], [ %45, %38 ]
  %48 = zext i1 %47 to i8, !dbg !13786
  store i8 %48, i8* %12, align 1, !dbg !13786
  %49 = load i8, i8* %12, align 1, !dbg !13796
  %50 = trunc i8 %49 to i1, !dbg !13796
  br i1 %50, label %63, label %51, !dbg !13798

51:                                               ; preds = %46
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13799
  %53 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %52, i32 0, i32 0, !dbg !13802
  %54 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %53, i32 0, i32 1, !dbg !13803
  %55 = load %union.anon.192*, %union.anon.192** %54, align 8, !dbg !13803
  %56 = icmp ne %union.anon.192* %55, null, !dbg !13804
  br i1 %56, label %57, label %59, !dbg !13805

57:                                               ; preds = %51
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13806
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %58) #10, !dbg !13808
  br label %59, !dbg !13809

59:                                               ; preds = %57, %51
  %60 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13810
  call void @z_mark_thread_as_started.68(%struct.k_thread.203* noundef %60) #10, !dbg !13811
  %61 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13812
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.203* noundef %61) #10, !dbg !13813
  %62 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !13814
  call void @ready_thread(%struct.k_thread.203* noundef %62) #10, !dbg !13815
  br label %63, !dbg !13816

63:                                               ; preds = %59, %46
  br label %64, !dbg !13817

64:                                               ; preds = %63
  %65 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !13782
  %66 = bitcast i32* %65 to [1 x i32]*, !dbg !13782
  %67 = load [1 x i32], [1 x i32]* %66, align 4, !dbg !13782
  %68 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %69 = bitcast i32* %68 to [1 x i32]*
  store [1 x i32] %67, [1 x i32]* %69, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12280, metadata !DIExpression()) #9, !dbg !13818
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12286, metadata !DIExpression()) #9, !dbg !13820
  %70 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13821
  %71 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !13822
  %72 = load i32, i32* %71, align 4, !dbg !13822
  store i32 %72, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12290, metadata !DIExpression()) #9, !dbg !13823
  %73 = load i32, i32* %3, align 4, !dbg !13825
  %74 = icmp ne i32 %73, 0, !dbg !13826
  br i1 %74, label %75, label %76, !dbg !13827

75:                                               ; preds = %64
  br label %77, !dbg !13828

76:                                               ; preds = %64
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13829, !srcloc !12301
  br label %77, !dbg !13830

77:                                               ; preds = %75, %76
  %78 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13782
  store i32 1, i32* %78, align 4, !dbg !13782
  br label %25, !dbg !13782, !llvm.loop !13831

79:                                               ; preds = %25
  ret void, !dbg !13833
}

; Function Attrs: noinline nounwind optnone
define internal void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %0) #1 !dbg !13834 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13835, metadata !DIExpression()), !dbg !13836
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13837
  %4 = call %union.anon.192* @pended_on_thread(%struct.k_thread.203* noundef %3) #10, !dbg !13838
  %5 = getelementptr inbounds %union.anon.192, %union.anon.192* %4, i32 0, i32 0, !dbg !13839
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13840
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %5, %struct.k_thread.203* noundef %6) #10, !dbg !13841
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13842
  call void @z_mark_thread_as_not_pending(%struct.k_thread.203* noundef %7) #10, !dbg !13843
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13844
  %9 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %8, i32 0, i32 0, !dbg !13845
  %10 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %9, i32 0, i32 1, !dbg !13846
  store %union.anon.192* null, %union.anon.192** %10, align 8, !dbg !13847
  ret void, !dbg !13848
}

; Function Attrs: noinline nounwind optnone
define internal %union.anon.192* @pended_on_thread(%struct.k_thread.203* noundef %0) #1 !dbg !13849 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13852, metadata !DIExpression()), !dbg !13853
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13854
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13855
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 1, !dbg !13856
  %6 = load %union.anon.192*, %union.anon.192** %5, align 8, !dbg !13856
  ret %union.anon.192* %6, !dbg !13857
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_not_pending(%struct.k_thread.203* noundef %0) #1 !dbg !13858 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13859, metadata !DIExpression()), !dbg !13860
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13861
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13862
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13863
  %6 = load i8, i8* %5, align 1, !dbg !13864
  %7 = zext i8 %6 to i32, !dbg !13864
  %8 = and i32 %7, -3, !dbg !13864
  %9 = trunc i32 %8 to i8, !dbg !13864
  store i8 %9, i8* %5, align 1, !dbg !13864
  ret void, !dbg !13865
}

; Function Attrs: noinline nounwind optnone
define internal void @unready_thread(%struct.k_thread.203* noundef %0) #1 !dbg !13866 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !13867, metadata !DIExpression()), !dbg !13868
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13869
  %7 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %6) #10, !dbg !13871
  br i1 %7, label %8, label %25, !dbg !13872

8:                                                ; preds = %1
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13873
  store %struct.k_thread.203* %9, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12640, metadata !DIExpression()) #9, !dbg !13875
  %10 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13877
  %11 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %10, i32 0, i32 0, !dbg !13878
  %12 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %11, i32 0, i32 3, !dbg !13879
  %13 = load i8, i8* %12, align 1, !dbg !13880
  %14 = zext i8 %13 to i32, !dbg !13880
  %15 = and i32 %14, -129, !dbg !13880
  %16 = trunc i32 %15 to i8, !dbg !13880
  store i8 %16, i8* %12, align 1, !dbg !13880
  %17 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13881
  %18 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %17) #13, !dbg !13882
  br i1 %18, label %19, label %24, !dbg !13883

19:                                               ; preds = %8
  %20 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !13884
  store %struct.k_thread.203* %20, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12654, metadata !DIExpression()) #9, !dbg !13885
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13887
  store %struct.k_thread.203* %21, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12659, metadata !DIExpression()), !dbg !13888
  %22 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !13890
  %23 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !13891
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %22, %struct.k_thread.203* noundef %23) #13, !dbg !13892
  br label %24, !dbg !13893

24:                                               ; preds = %8, %19
  br label %25, !dbg !13894

25:                                               ; preds = %24, %1
  %26 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !13895
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13896
  %28 = icmp eq %struct.k_thread.203* %26, %27, !dbg !13897
  %29 = zext i1 %28 to i32, !dbg !13897
  call void @update_cache(i32 noundef %29) #10, !dbg !13898
  ret void, !dbg !13899
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_pending(%struct.k_thread.203* noundef %0) #1 !dbg !13900 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !13901, metadata !DIExpression()), !dbg !13902
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !13903
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !13904
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !13905
  %6 = load i8, i8* %5, align 1, !dbg !13906
  %7 = zext i8 %6 to i32, !dbg !13906
  %8 = or i32 %7, 2, !dbg !13906
  %9 = trunc i32 %8 to i8, !dbg !13906
  store i8 %9, i8* %5, align 1, !dbg !13906
  ret void, !dbg !13907
}

; Function Attrs: alwaysinline nounwind
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread.203* noundef %0) #8 !dbg !13908 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13909, metadata !DIExpression()), !dbg !13910
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13911, metadata !DIExpression()), !dbg !13913
  %11 = bitcast %union.anon.68* %9 to i8*, !dbg !13913
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !13913
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13914, metadata !DIExpression()), !dbg !13913
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12240, metadata !DIExpression()) #9, !dbg !13915
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13917
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12248, metadata !DIExpression()) #9, !dbg !13918
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12250, metadata !DIExpression()) #9, !dbg !13919
  %13 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13921, !srcloc !12255
  store i32 %13, i32* %2, align 4, !dbg !13921
  %14 = load i32, i32* %2, align 4, !dbg !13922
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13923
  store i32 %14, i32* %15, align 4, !dbg !13924
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13925
  %17 = load i32, i32* %16, align 4, !dbg !13925
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13913
  store i32 %17, i32* %18, align 4, !dbg !13913
  br label %19, !dbg !13913

19:                                               ; preds = %39, %1
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13926
  %21 = load i32, i32* %20, align 4, !dbg !13926
  %22 = icmp ne i32 %21, 0, !dbg !13926
  %23 = xor i1 %22, true, !dbg !13926
  br i1 %23, label %24, label %41, !dbg !13913

24:                                               ; preds = %19
  %25 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !13928
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %25) #10, !dbg !13930
  br label %26, !dbg !13931

26:                                               ; preds = %24
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13926
  %28 = bitcast i32* %27 to [1 x i32]*, !dbg !13926
  %29 = load [1 x i32], [1 x i32]* %28, align 4, !dbg !13926
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %31 = bitcast i32* %30 to [1 x i32]*
  store [1 x i32] %29, [1 x i32]* %31, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12280, metadata !DIExpression()) #9, !dbg !13932
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12286, metadata !DIExpression()) #9, !dbg !13934
  %32 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !13935
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !13936
  %34 = load i32, i32* %33, align 4, !dbg !13936
  store i32 %34, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12290, metadata !DIExpression()) #9, !dbg !13937
  %35 = load i32, i32* %3, align 4, !dbg !13939
  %36 = icmp ne i32 %35, 0, !dbg !13940
  br i1 %36, label %37, label %38, !dbg !13941

37:                                               ; preds = %26
  br label %39, !dbg !13942

38:                                               ; preds = %26
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !13943, !srcloc !12301
  br label %39, !dbg !13944

39:                                               ; preds = %37, %38
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13926
  store i32 1, i32* %40, align 4, !dbg !13926
  br label %19, !dbg !13926, !llvm.loop !13945

41:                                               ; preds = %19
  ret void, !dbg !13947
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon.192* noundef %1, [1 x i64] %2) #1 !dbg !13948 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.argument_value, align 8
  %11 = alloca i32, align 4
  %12 = alloca %union.anon.192*, align 4
  %13 = alloca i32, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0
  %17 = bitcast i64* %16 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %17, align 8
  store i32 %0, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !13951, metadata !DIExpression()), !dbg !13952
  store %union.anon.192* %1, %union.anon.192** %12, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %12, metadata !13953, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.declare(metadata %union.argument_value* %10, metadata !13955, metadata !DIExpression()), !dbg !13956
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13957
  %19 = load %union.anon.192*, %union.anon.192** %12, align 4, !dbg !13958
  %20 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !13959
  %21 = bitcast i64* %20 to [1 x i64]*, !dbg !13959
  %22 = load [1 x i64], [1 x i64]* %21, align 8, !dbg !13959
  call void @pend_locked(%struct.k_thread.203* noundef %18, %union.anon.192* noundef %19, [1 x i64] %22) #10, !dbg !13959
  %23 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13960
  store %struct.k_thread.203* %23, %struct.k_thread.203** @pending_current, align 4, !dbg !13961
  call void @llvm.dbg.declare(metadata i32* %13, metadata !13962, metadata !DIExpression()), !dbg !13963
  %24 = load i32, i32* %11, align 4, !dbg !13964
  %25 = call i32 @z_swap_irqlock(i32 noundef %24) #10, !dbg !13965
  store i32 %25, i32* %13, align 4, !dbg !13963
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !13966, metadata !DIExpression()), !dbg !13968
  %26 = bitcast %union.anon.68* %14 to i8*, !dbg !13968
  call void @llvm.memset.p0i8.i32(i8* align 4 %26, i8 0, i32 4, i1 false), !dbg !13968
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !13969, metadata !DIExpression()), !dbg !13968
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !12240, metadata !DIExpression()) #9, !dbg !13970
  %27 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !13972
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !12248, metadata !DIExpression()) #9, !dbg !13973
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12250, metadata !DIExpression()) #9, !dbg !13974
  %28 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !13976, !srcloc !12255
  store i32 %28, i32* %4, align 4, !dbg !13976
  %29 = load i32, i32* %4, align 4, !dbg !13977
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !13978
  store i32 %29, i32* %30, align 4, !dbg !13979
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !13980
  %32 = load i32, i32* %31, align 4, !dbg !13980
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !13968
  store i32 %32, i32* %33, align 4, !dbg !13968
  br label %34, !dbg !13968

34:                                               ; preds = %58, %3
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !13981
  %36 = load i32, i32* %35, align 4, !dbg !13981
  %37 = icmp ne i32 %36, 0, !dbg !13981
  %38 = xor i1 %37, true, !dbg !13981
  br i1 %38, label %39, label %60, !dbg !13968

39:                                               ; preds = %34
  %40 = load %struct.k_thread.203*, %struct.k_thread.203** @pending_current, align 4, !dbg !13983
  %41 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13986
  %42 = icmp eq %struct.k_thread.203* %40, %41, !dbg !13987
  br i1 %42, label %43, label %44, !dbg !13988

43:                                               ; preds = %39
  store %struct.k_thread.203* null, %struct.k_thread.203** @pending_current, align 4, !dbg !13989
  br label %44, !dbg !13991

44:                                               ; preds = %43, %39
  br label %45, !dbg !13992

45:                                               ; preds = %44
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !13981
  %47 = bitcast i32* %46 to [1 x i32]*, !dbg !13981
  %48 = load [1 x i32], [1 x i32]* %47, align 4, !dbg !13981
  %49 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %50 = bitcast i32* %49 to [1 x i32]*
  store [1 x i32] %48, [1 x i32]* %50, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12280, metadata !DIExpression()) #9, !dbg !13993
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12286, metadata !DIExpression()) #9, !dbg !13995
  %51 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13996
  %52 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13997
  %53 = load i32, i32* %52, align 4, !dbg !13997
  store i32 %53, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12290, metadata !DIExpression()) #9, !dbg !13998
  %54 = load i32, i32* %5, align 4, !dbg !14000
  %55 = icmp ne i32 %54, 0, !dbg !14001
  br i1 %55, label %56, label %57, !dbg !14002

56:                                               ; preds = %45
  br label %58, !dbg !14003

57:                                               ; preds = %45
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14004, !srcloc !12301
  br label %58, !dbg !14005

58:                                               ; preds = %56, %57
  %59 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !13981
  store i32 1, i32* %59, align 4, !dbg !13981
  br label %34, !dbg !13981, !llvm.loop !14006

60:                                               ; preds = %34
  %61 = load i32, i32* %13, align 4, !dbg !14008
  ret i32 %61, !dbg !14009
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_pend_curr(%struct.k_spinlock.13* noundef %0, [1 x i32] %1, %union.anon.192* noundef %2, [1 x i64] %3) #1 !dbg !14010 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %union.argument_value, align 8
  %14 = alloca %struct.k_spinlock.13*, align 4
  %15 = alloca %union.anon.192*, align 4
  %16 = alloca %union.anon.68, align 4
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0
  %18 = bitcast i32* %17 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %18, align 4
  %19 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0
  %20 = bitcast i64* %19 to [1 x i64]*
  store [1 x i64] %3, [1 x i64]* %20, align 8
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %14, metadata !14013, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !14015, metadata !DIExpression()), !dbg !14016
  store %union.anon.192* %2, %union.anon.192** %15, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %15, metadata !14017, metadata !DIExpression()), !dbg !14018
  call void @llvm.dbg.declare(metadata %union.argument_value* %13, metadata !14019, metadata !DIExpression()), !dbg !14020
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14021
  store %struct.k_thread.203* %21, %struct.k_thread.203** @pending_current, align 4, !dbg !14022
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !12240, metadata !DIExpression()) #9, !dbg !14023
  %22 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !14025
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !12248, metadata !DIExpression()) #9, !dbg !14026
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12250, metadata !DIExpression()) #9, !dbg !14027
  %23 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14029, !srcloc !12255
  store i32 %23, i32* %5, align 4, !dbg !14029
  %24 = load i32, i32* %5, align 4, !dbg !14030
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14031
  store i32 %24, i32* %25, align 4, !dbg !14032
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14033
  %27 = load i32, i32* %26, align 4, !dbg !14033
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14034
  store i32 %27, i32* %28, align 4, !dbg !14034
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14035
  %30 = load %union.anon.192*, %union.anon.192** %15, align 4, !dbg !14036
  %31 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !14037
  %32 = bitcast i64* %31 to [1 x i64]*, !dbg !14037
  %33 = load [1 x i64], [1 x i64]* %32, align 8, !dbg !14037
  call void @pend_locked(%struct.k_thread.203* noundef %29, %union.anon.192* noundef %30, [1 x i64] %33) #10, !dbg !14037
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %14, align 4, !dbg !14038
  store %struct.k_spinlock.13* %34, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !13335, metadata !DIExpression()), !dbg !14039
  %35 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !14041
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !14042
  %37 = bitcast i32* %36 to [1 x i32]*, !dbg !14042
  %38 = load [1 x i32], [1 x i32]* %37, align 4, !dbg !14042
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %40 = bitcast i32* %39 to [1 x i32]*
  store [1 x i32] %38, [1 x i32]* %40, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !13326, metadata !DIExpression()) #9, !dbg !14043
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !13332, metadata !DIExpression()) #9, !dbg !14045
  %41 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !14046
  store %struct.k_spinlock.13* %41, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !13335, metadata !DIExpression()) #9, !dbg !14047
  %42 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14049
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14050
  %44 = load i32, i32* %43, align 4, !dbg !14050
  %45 = call i32 @z_swap_irqlock(i32 noundef %44) #13, !dbg !14051
  ret i32 %45, !dbg !14052
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_unpend1_no_timeout(%union.anon.192* noundef %0) #1 !dbg !14053 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.192*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %union.anon.192* %0, %union.anon.192** %8, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %8, metadata !14056, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !14058, metadata !DIExpression()), !dbg !14059
  store %struct.k_thread.203* null, %struct.k_thread.203** %9, align 4, !dbg !14059
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !14060, metadata !DIExpression()), !dbg !14062
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !14062
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !14062
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !14063, metadata !DIExpression()), !dbg !14062
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12240, metadata !DIExpression()) #9, !dbg !14064
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14066
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12248, metadata !DIExpression()) #9, !dbg !14067
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12250, metadata !DIExpression()) #9, !dbg !14068
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14070, !srcloc !12255
  store i32 %14, i32* %2, align 4, !dbg !14070
  %15 = load i32, i32* %2, align 4, !dbg !14071
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14072
  store i32 %15, i32* %16, align 4, !dbg !14073
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14074
  %18 = load i32, i32* %17, align 4, !dbg !14074
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14062
  store i32 %18, i32* %19, align 4, !dbg !14062
  br label %20, !dbg !14062

20:                                               ; preds = %47, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14075
  %22 = load i32, i32* %21, align 4, !dbg !14075
  %23 = icmp ne i32 %22, 0, !dbg !14075
  %24 = xor i1 %23, true, !dbg !14075
  br i1 %24, label %25, label %49, !dbg !14062

25:                                               ; preds = %20
  %26 = load %union.anon.192*, %union.anon.192** %8, align 4, !dbg !14077
  %27 = getelementptr inbounds %union.anon.192, %union.anon.192* %26, i32 0, i32 0, !dbg !14079
  %28 = call %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %27) #10, !dbg !14080
  store %struct.k_thread.203* %28, %struct.k_thread.203** %9, align 4, !dbg !14081
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14082
  %30 = icmp ne %struct.k_thread.203* %29, null, !dbg !14084
  br i1 %30, label %31, label %33, !dbg !14085

31:                                               ; preds = %25
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14086
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %32) #10, !dbg !14088
  br label %33, !dbg !14089

33:                                               ; preds = %31, %25
  br label %34, !dbg !14090

34:                                               ; preds = %33
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14075
  %36 = bitcast i32* %35 to [1 x i32]*, !dbg !14075
  %37 = load [1 x i32], [1 x i32]* %36, align 4, !dbg !14075
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %39 = bitcast i32* %38 to [1 x i32]*
  store [1 x i32] %37, [1 x i32]* %39, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12280, metadata !DIExpression()) #9, !dbg !14091
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12286, metadata !DIExpression()) #9, !dbg !14093
  %40 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14094
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14095
  %42 = load i32, i32* %41, align 4, !dbg !14095
  store i32 %42, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12290, metadata !DIExpression()) #9, !dbg !14096
  %43 = load i32, i32* %3, align 4, !dbg !14098
  %44 = icmp ne i32 %43, 0, !dbg !14099
  br i1 %44, label %45, label %46, !dbg !14100

45:                                               ; preds = %34
  br label %47, !dbg !14101

46:                                               ; preds = %34
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14102, !srcloc !12301
  br label %47, !dbg !14103

47:                                               ; preds = %45, %46
  %48 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14075
  store i32 1, i32* %48, align 4, !dbg !14075
  br label %20, !dbg !14075, !llvm.loop !14104

49:                                               ; preds = %20
  %50 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14106
  ret %struct.k_thread.203* %50, !dbg !14107
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_unpend_first_thread(%union.anon.192* noundef %0) #1 !dbg !14108 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.192*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %union.anon.192* %0, %union.anon.192** %8, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %8, metadata !14109, metadata !DIExpression()), !dbg !14110
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !14111, metadata !DIExpression()), !dbg !14112
  store %struct.k_thread.203* null, %struct.k_thread.203** %9, align 4, !dbg !14112
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !14113, metadata !DIExpression()), !dbg !14115
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !14115
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !14115
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !14116, metadata !DIExpression()), !dbg !14115
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12240, metadata !DIExpression()) #9, !dbg !14117
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14119
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12248, metadata !DIExpression()) #9, !dbg !14120
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12250, metadata !DIExpression()) #9, !dbg !14121
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14123, !srcloc !12255
  store i32 %14, i32* %2, align 4, !dbg !14123
  %15 = load i32, i32* %2, align 4, !dbg !14124
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14125
  store i32 %15, i32* %16, align 4, !dbg !14126
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14127
  %18 = load i32, i32* %17, align 4, !dbg !14127
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14115
  store i32 %18, i32* %19, align 4, !dbg !14115
  br label %20, !dbg !14115

20:                                               ; preds = %49, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14128
  %22 = load i32, i32* %21, align 4, !dbg !14128
  %23 = icmp ne i32 %22, 0, !dbg !14128
  %24 = xor i1 %23, true, !dbg !14128
  br i1 %24, label %25, label %51, !dbg !14115

25:                                               ; preds = %20
  %26 = load %union.anon.192*, %union.anon.192** %8, align 4, !dbg !14130
  %27 = getelementptr inbounds %union.anon.192, %union.anon.192* %26, i32 0, i32 0, !dbg !14132
  %28 = call %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %27) #10, !dbg !14133
  store %struct.k_thread.203* %28, %struct.k_thread.203** %9, align 4, !dbg !14134
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14135
  %30 = icmp ne %struct.k_thread.203* %29, null, !dbg !14137
  br i1 %30, label %31, label %35, !dbg !14138

31:                                               ; preds = %25
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14139
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %32) #10, !dbg !14141
  %33 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14142
  %34 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %33) #10, !dbg !14143
  br label %35, !dbg !14144

35:                                               ; preds = %31, %25
  br label %36, !dbg !14145

36:                                               ; preds = %35
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14128
  %38 = bitcast i32* %37 to [1 x i32]*, !dbg !14128
  %39 = load [1 x i32], [1 x i32]* %38, align 4, !dbg !14128
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %41 = bitcast i32* %40 to [1 x i32]*
  store [1 x i32] %39, [1 x i32]* %41, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12280, metadata !DIExpression()) #9, !dbg !14146
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12286, metadata !DIExpression()) #9, !dbg !14148
  %42 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14149
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14150
  %44 = load i32, i32* %43, align 4, !dbg !14150
  store i32 %44, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12290, metadata !DIExpression()) #9, !dbg !14151
  %45 = load i32, i32* %3, align 4, !dbg !14153
  %46 = icmp ne i32 %45, 0, !dbg !14154
  br i1 %46, label %47, label %48, !dbg !14155

47:                                               ; preds = %36
  br label %49, !dbg !14156

48:                                               ; preds = %36
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14157, !srcloc !12301
  br label %49, !dbg !14158

49:                                               ; preds = %47, %48
  %50 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14128
  store i32 1, i32* %50, align 4, !dbg !14128
  br label %20, !dbg !14128, !llvm.loop !14159

51:                                               ; preds = %20
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14161
  ret %struct.k_thread.203* %52, !dbg !14162
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_unpend_thread(%struct.k_thread.203* noundef %0) #1 !dbg !14163 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %11, metadata !14164, metadata !DIExpression()), !dbg !14165
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !14166
  store %struct.k_thread.203* %12, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !13909, metadata !DIExpression()) #9, !dbg !14167
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13911, metadata !DIExpression()) #9, !dbg !14169
  %13 = bitcast %union.anon.68* %9 to i8*, !dbg !14169
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false) #9, !dbg !14169
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13914, metadata !DIExpression()) #9, !dbg !14169
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12240, metadata !DIExpression()) #9, !dbg !14170
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14172
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12248, metadata !DIExpression()) #9, !dbg !14173
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12250, metadata !DIExpression()) #9, !dbg !14174
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14176, !srcloc !12255
  store i32 %15, i32* %2, align 4, !dbg !14176
  %16 = load i32, i32* %2, align 4, !dbg !14177
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14178
  store i32 %16, i32* %17, align 4, !dbg !14179
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14180
  %19 = load i32, i32* %18, align 4, !dbg !14180
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14169
  store i32 %19, i32* %20, align 4, !dbg !14169
  br label %21, !dbg !14169

21:                                               ; preds = %40, %1
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14181
  %23 = load i32, i32* %22, align 4, !dbg !14181
  %24 = icmp ne i32 %23, 0, !dbg !14181
  %25 = xor i1 %24, true, !dbg !14181
  br i1 %25, label %26, label %42, !dbg !14169

26:                                               ; preds = %21
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14182
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %27) #13, !dbg !14183
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14181
  %29 = bitcast i32* %28 to [1 x i32]*, !dbg !14181
  %30 = load [1 x i32], [1 x i32]* %29, align 4, !dbg !14181
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %32 = bitcast i32* %31 to [1 x i32]*
  store [1 x i32] %30, [1 x i32]* %32, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12280, metadata !DIExpression()) #9, !dbg !14184
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12286, metadata !DIExpression()) #9, !dbg !14186
  %33 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14187
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14188
  %35 = load i32, i32* %34, align 4, !dbg !14188
  store i32 %35, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12290, metadata !DIExpression()) #9, !dbg !14189
  %36 = load i32, i32* %3, align 4, !dbg !14191
  %37 = icmp ne i32 %36, 0, !dbg !14192
  br i1 %37, label %38, label %39, !dbg !14193

38:                                               ; preds = %26
  br label %40, !dbg !14194

39:                                               ; preds = %26
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14195, !srcloc !12301
  br label %40, !dbg !14196

40:                                               ; preds = %38, %39
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14181
  store i32 1, i32* %41, align 4, !dbg !14181
  br label %21, !dbg !14181, !llvm.loop !14197

42:                                               ; preds = %21
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %11, align 4, !dbg !14199
  %44 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %43) #10, !dbg !14200
  ret void, !dbg !14201
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_set_prio(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !14202 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.k_thread.203*, align 4
  %13 = alloca %struct.k_thread.203*, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %union.anon.68, align 4
  %17 = alloca %struct.k_spinlock.13*, align 4
  %18 = alloca %struct.k_thread.203*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca %union.anon.68, align 4
  %22 = alloca %union.anon.68, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %18, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %18, metadata !14203, metadata !DIExpression()), !dbg !14204
  store i32 %1, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !14205, metadata !DIExpression()), !dbg !14206
  call void @llvm.dbg.declare(metadata i8* %20, metadata !14207, metadata !DIExpression()), !dbg !14208
  store i8 0, i8* %20, align 1, !dbg !14208
  call void @llvm.dbg.declare(metadata %union.anon.68* %21, metadata !14209, metadata !DIExpression()), !dbg !14211
  %23 = bitcast %union.anon.68* %21 to i8*, !dbg !14211
  call void @llvm.memset.p0i8.i32(i8* align 4 %23, i8 0, i32 4, i1 false), !dbg !14211
  call void @llvm.dbg.declare(metadata %union.anon.68* %22, metadata !14212, metadata !DIExpression()), !dbg !14211
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %17, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %17, metadata !12240, metadata !DIExpression()) #9, !dbg !14213
  %24 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %17, align 4, !dbg !14215
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !12248, metadata !DIExpression()) #9, !dbg !14216
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12250, metadata !DIExpression()) #9, !dbg !14217
  %25 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14219, !srcloc !12255
  store i32 %25, i32* %10, align 4, !dbg !14219
  %26 = load i32, i32* %10, align 4, !dbg !14220
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14221
  store i32 %26, i32* %27, align 4, !dbg !14222
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14223
  %29 = load i32, i32* %28, align 4, !dbg !14223
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %22, i32 0, i32 0, !dbg !14211
  store i32 %29, i32* %30, align 4, !dbg !14211
  br label %31, !dbg !14211

31:                                               ; preds = %164, %2
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !14224
  %33 = load i32, i32* %32, align 4, !dbg !14224
  %34 = icmp ne i32 %33, 0, !dbg !14224
  %35 = xor i1 %34, true, !dbg !14224
  br i1 %35, label %36, label %166, !dbg !14211

36:                                               ; preds = %31
  %37 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !14226
  %38 = call zeroext i1 @z_is_thread_ready(%struct.k_thread.203* noundef %37) #10, !dbg !14228
  %39 = zext i1 %38 to i8, !dbg !14229
  store i8 %39, i8* %20, align 1, !dbg !14229
  %40 = load i8, i8* %20, align 1, !dbg !14230
  %41 = trunc i8 %40 to i1, !dbg !14230
  br i1 %41, label %42, label %142, !dbg !14232

42:                                               ; preds = %36
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !14233
  store %struct.k_thread.203* %43, %struct.k_thread.203** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %13, metadata !12640, metadata !DIExpression()) #9, !dbg !14237
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !14239
  %45 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %44, i32 0, i32 0, !dbg !14240
  %46 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %45, i32 0, i32 3, !dbg !14241
  %47 = load i8, i8* %46, align 1, !dbg !14242
  %48 = zext i8 %47 to i32, !dbg !14242
  %49 = and i32 %48, -129, !dbg !14242
  %50 = trunc i32 %49 to i8, !dbg !14242
  store i8 %50, i8* %46, align 1, !dbg !14242
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !14243
  %52 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %51) #13, !dbg !14244
  br i1 %52, label %53, label %58, !dbg !14245

53:                                               ; preds = %42
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !14246
  store %struct.k_thread.203* %54, %struct.k_thread.203** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !12654, metadata !DIExpression()) #9, !dbg !14247
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14249
  store %struct.k_thread.203* %55, %struct.k_thread.203** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %8, metadata !12659, metadata !DIExpression()), !dbg !14250
  %56 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !14252
  %57 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14253
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %56, %struct.k_thread.203* noundef %57) #13, !dbg !14254
  br label %58, !dbg !14255

58:                                               ; preds = %42, %53
  %59 = load i32, i32* %19, align 4, !dbg !14256
  %60 = trunc i32 %59 to i8, !dbg !14256
  %61 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !14257
  %62 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %61, i32 0, i32 0, !dbg !14258
  %63 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %62, i32 0, i32 4, !dbg !14259
  %64 = bitcast %union.anon.2.7* %63 to %struct.device_state.72*, !dbg !14259
  %65 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %64, i32 0, i32 0, !dbg !14259
  store i8 %60, i8* %65, align 2, !dbg !14260
  %66 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !14261
  store %struct.k_thread.203* %66, %struct.k_thread.203** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %12, metadata !12671, metadata !DIExpression()) #9, !dbg !14262
  %67 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !14264
  %68 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %67, i32 0, i32 0, !dbg !14265
  %69 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %68, i32 0, i32 3, !dbg !14266
  %70 = load i8, i8* %69, align 1, !dbg !14267
  %71 = zext i8 %70 to i32, !dbg !14267
  %72 = or i32 %71, 128, !dbg !14267
  %73 = trunc i32 %72 to i8, !dbg !14267
  store i8 %73, i8* %69, align 1, !dbg !14267
  %74 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !14268
  %75 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %74) #13, !dbg !14269
  br i1 %75, label %76, label %141, !dbg !14270

76:                                               ; preds = %58
  %77 = load %struct.k_thread.203*, %struct.k_thread.203** %12, align 4, !dbg !14271
  store %struct.k_thread.203* %77, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !12685, metadata !DIExpression()) #9, !dbg !14272
  %78 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14274
  store %struct.k_thread.203* %78, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !12659, metadata !DIExpression()) #9, !dbg !14275
  %79 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14277
  store %struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !12693, metadata !DIExpression()) #9, !dbg !14278
  store %struct.k_thread.203* %79, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12700, metadata !DIExpression()) #9, !dbg !14280
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12702, metadata !DIExpression()) #9, !dbg !14281
  %80 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14282
  %81 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %80) #13, !dbg !14282
  %82 = icmp ne %struct._dnode.191* %81, null, !dbg !14282
  br i1 %82, label %83, label %88, !dbg !14282

83:                                               ; preds = %76
  %84 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14282
  %85 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %84) #13, !dbg !14282
  %86 = bitcast %struct._dnode.191* %85 to i8*, !dbg !14282
  %87 = bitcast i8* %86 to %struct.k_thread.203*, !dbg !14282
  br label %89, !dbg !14282

88:                                               ; preds = %76
  br label %89, !dbg !14282

89:                                               ; preds = %88, %83
  %90 = phi %struct.k_thread.203* [ %87, %83 ], [ null, %88 ], !dbg !14282
  store %struct.k_thread.203* %90, %struct.k_thread.203** %5, align 4, !dbg !14282
  br label %91, !dbg !14282

91:                                               ; preds = %132, %89
  %92 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14283
  %93 = icmp ne %struct.k_thread.203* %92, null, !dbg !14283
  br i1 %93, label %94, label %134, !dbg !14282

94:                                               ; preds = %91
  %95 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14284
  %96 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14285
  %97 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %95, %struct.k_thread.203* noundef %96) #13, !dbg !14286
  %98 = icmp sgt i32 %97, 0, !dbg !14287
  br i1 %98, label %99, label %108, !dbg !14288

99:                                               ; preds = %94
  %100 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14289
  %101 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %100, i32 0, i32 0, !dbg !14290
  %102 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %101, i32 0, i32 0, !dbg !14291
  %103 = bitcast %union.anon.192* %102 to %struct._dnode.191*, !dbg !14291
  %104 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14292
  %105 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %104, i32 0, i32 0, !dbg !14293
  %106 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %105, i32 0, i32 0, !dbg !14294
  %107 = bitcast %union.anon.192* %106 to %struct._dnode.191*, !dbg !14294
  call void @sys_dlist_insert(%struct._dnode.191* noundef %103, %struct._dnode.191* noundef %107) #13, !dbg !14295
  br label %140, !dbg !14296

108:                                              ; preds = %94
  %109 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14283
  %110 = icmp ne %struct.k_thread.203* %109, null, !dbg !14283
  br i1 %110, label %111, label %131, !dbg !14283

111:                                              ; preds = %108
  %112 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14283
  %113 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14283
  %114 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %113, i32 0, i32 0, !dbg !14283
  %115 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %114, i32 0, i32 0, !dbg !14283
  %116 = bitcast %union.anon.192* %115 to %struct._dnode.191*, !dbg !14283
  %117 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %112, %struct._dnode.191* noundef %116) #13, !dbg !14283
  %118 = icmp ne %struct._dnode.191* %117, null, !dbg !14283
  br i1 %118, label %119, label %128, !dbg !14283

119:                                              ; preds = %111
  %120 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14283
  %121 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14283
  %122 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %121, i32 0, i32 0, !dbg !14283
  %123 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %122, i32 0, i32 0, !dbg !14283
  %124 = bitcast %union.anon.192* %123 to %struct._dnode.191*, !dbg !14283
  %125 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %120, %struct._dnode.191* noundef %124) #13, !dbg !14283
  %126 = bitcast %struct._dnode.191* %125 to i8*, !dbg !14283
  %127 = bitcast i8* %126 to %struct.k_thread.203*, !dbg !14283
  br label %129, !dbg !14283

128:                                              ; preds = %111
  br label %129, !dbg !14283

129:                                              ; preds = %128, %119
  %130 = phi %struct.k_thread.203* [ %127, %119 ], [ null, %128 ], !dbg !14283
  br label %132, !dbg !14283

131:                                              ; preds = %108
  br label %132, !dbg !14283

132:                                              ; preds = %131, %129
  %133 = phi %struct.k_thread.203* [ %130, %129 ], [ null, %131 ], !dbg !14283
  store %struct.k_thread.203* %133, %struct.k_thread.203** %5, align 4, !dbg !14283
  br label %91, !dbg !14283, !llvm.loop !14297

134:                                              ; preds = %91
  %135 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !14299
  %136 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14300
  %137 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %136, i32 0, i32 0, !dbg !14301
  %138 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %137, i32 0, i32 0, !dbg !14302
  %139 = bitcast %union.anon.192* %138 to %struct._dnode.191*, !dbg !14302
  call void @sys_dlist_append(%struct._dnode.191* noundef %135, %struct._dnode.191* noundef %139) #13, !dbg !14303
  br label %140, !dbg !14304

140:                                              ; preds = %99, %134
  br label %141, !dbg !14305

141:                                              ; preds = %58, %140
  call void @update_cache(i32 noundef 1) #10, !dbg !14306
  br label %150, !dbg !14307

142:                                              ; preds = %36
  %143 = load i32, i32* %19, align 4, !dbg !14308
  %144 = trunc i32 %143 to i8, !dbg !14308
  %145 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !14310
  %146 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %145, i32 0, i32 0, !dbg !14311
  %147 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %146, i32 0, i32 4, !dbg !14312
  %148 = bitcast %union.anon.2.7* %147 to %struct.device_state.72*, !dbg !14312
  %149 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %148, i32 0, i32 0, !dbg !14312
  store i8 %144, i8* %149, align 2, !dbg !14313
  br label %150

150:                                              ; preds = %142, %141
  br label %151, !dbg !14314

151:                                              ; preds = %150
  %152 = getelementptr inbounds %union.anon.68, %union.anon.68* %22, i32 0, i32 0, !dbg !14224
  %153 = bitcast i32* %152 to [1 x i32]*, !dbg !14224
  %154 = load [1 x i32], [1 x i32]* %153, align 4, !dbg !14224
  %155 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0
  %156 = bitcast i32* %155 to [1 x i32]*
  store [1 x i32] %154, [1 x i32]* %156, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !12280, metadata !DIExpression()) #9, !dbg !14315
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !12286, metadata !DIExpression()) #9, !dbg !14317
  %157 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !14318
  %158 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !14319
  %159 = load i32, i32* %158, align 4, !dbg !14319
  store i32 %159, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12290, metadata !DIExpression()) #9, !dbg !14320
  %160 = load i32, i32* %11, align 4, !dbg !14322
  %161 = icmp ne i32 %160, 0, !dbg !14323
  br i1 %161, label %162, label %163, !dbg !14324

162:                                              ; preds = %151
  br label %164, !dbg !14325

163:                                              ; preds = %151
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14326, !srcloc !12301
  br label %164, !dbg !14327

164:                                              ; preds = %162, %163
  %165 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !14224
  store i32 1, i32* %165, align 4, !dbg !14224
  br label %31, !dbg !14224, !llvm.loop !14328

166:                                              ; preds = %31
  br label %167, !dbg !14330

167:                                              ; preds = %166
  br label %168, !dbg !14331

168:                                              ; preds = %167
  %169 = load i8, i8* %20, align 1, !dbg !14333
  %170 = trunc i8 %169 to i1, !dbg !14333
  ret i1 %170, !dbg !14334
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_priority_set(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !14335 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !14338, metadata !DIExpression()), !dbg !14339
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14340, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.declare(metadata i8* %5, metadata !14342, metadata !DIExpression()), !dbg !14343
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14344
  %7 = load i32, i32* %4, align 4, !dbg !14345
  %8 = call zeroext i1 @z_set_prio(%struct.k_thread.203* noundef %6, i32 noundef %7) #10, !dbg !14346
  %9 = zext i1 %8 to i8, !dbg !14343
  store i8 %9, i8* %5, align 1, !dbg !14343
  call void @flag_ipi() #10, !dbg !14347
  %10 = load i8, i8* %5, align 1, !dbg !14348
  %11 = trunc i8 %10 to i1, !dbg !14348
  br i1 %11, label %12, label %22, !dbg !14350

12:                                               ; preds = %2
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14351
  %14 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %13, i32 0, i32 0, !dbg !14352
  %15 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %14, i32 0, i32 4, !dbg !14353
  %16 = bitcast %union.anon.2.7* %15 to %struct.device_state.72*, !dbg !14353
  %17 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %16, i32 0, i32 1, !dbg !14353
  %18 = load i8, i8* %17, align 1, !dbg !14353
  %19 = zext i8 %18 to i32, !dbg !14351
  %20 = icmp eq i32 %19, 0, !dbg !14354
  br i1 %20, label %21, label %22, !dbg !14355

21:                                               ; preds = %12
  call void @z_reschedule_unlocked() #10, !dbg !14356
  br label %22, !dbg !14358

22:                                               ; preds = %21, %12, %2
  ret void, !dbg !14359
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_lock() #1 !dbg !14360 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %union.anon.68, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !14361, metadata !DIExpression()), !dbg !14363
  %9 = bitcast %union.anon.68* %7 to i8*, !dbg !14363
  call void @llvm.memset.p0i8.i32(i8* align 4 %9, i8 0, i32 4, i1 false), !dbg !14363
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !14364, metadata !DIExpression()), !dbg !14363
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12240, metadata !DIExpression()) #9, !dbg !14365
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14367
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12248, metadata !DIExpression()) #9, !dbg !14368
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12250, metadata !DIExpression()) #9, !dbg !14369
  %11 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14371, !srcloc !12255
  store i32 %11, i32* %1, align 4, !dbg !14371
  %12 = load i32, i32* %1, align 4, !dbg !14372
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14373
  store i32 %12, i32* %13, align 4, !dbg !14374
  %14 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14375
  %15 = load i32, i32* %14, align 4, !dbg !14375
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14363
  store i32 %15, i32* %16, align 4, !dbg !14363
  br label %17, !dbg !14363

17:                                               ; preds = %38, %0
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14376
  %19 = load i32, i32* %18, align 4, !dbg !14376
  %20 = icmp ne i32 %19, 0, !dbg !14376
  %21 = xor i1 %20, true, !dbg !14376
  br i1 %21, label %22, label %40, !dbg !14363

22:                                               ; preds = %17
  br label %23, !dbg !14378

23:                                               ; preds = %22
  br label %24, !dbg !14380

24:                                               ; preds = %23
  call void @z_sched_lock() #10, !dbg !14382
  br label %25, !dbg !14383

25:                                               ; preds = %24
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14376
  %27 = bitcast i32* %26 to [1 x i32]*, !dbg !14376
  %28 = load [1 x i32], [1 x i32]* %27, align 4, !dbg !14376
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %30 = bitcast i32* %29 to [1 x i32]*
  store [1 x i32] %28, [1 x i32]* %30, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !12280, metadata !DIExpression()) #9, !dbg !14384
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !12286, metadata !DIExpression()) #9, !dbg !14386
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !14387
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !14388
  %33 = load i32, i32* %32, align 4, !dbg !14388
  store i32 %33, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12290, metadata !DIExpression()) #9, !dbg !14389
  %34 = load i32, i32* %2, align 4, !dbg !14391
  %35 = icmp ne i32 %34, 0, !dbg !14392
  br i1 %35, label %36, label %37, !dbg !14393

36:                                               ; preds = %25
  br label %38, !dbg !14394

37:                                               ; preds = %25
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14395, !srcloc !12301
  br label %38, !dbg !14396

38:                                               ; preds = %36, %37
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14376
  store i32 1, i32* %39, align 4, !dbg !14376
  br label %17, !dbg !14376, !llvm.loop !14397

40:                                               ; preds = %17
  ret void, !dbg !14399
}

; Function Attrs: noinline nounwind optnone
define internal void @z_sched_lock() #1 !dbg !14400 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14401
  %2 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %1, i32 0, i32 0, !dbg !14402
  %3 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %2, i32 0, i32 4, !dbg !14403
  %4 = bitcast %union.anon.2.7* %3 to %struct.device_state.72*, !dbg !14403
  %5 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %4, i32 0, i32 1, !dbg !14403
  %6 = load i8, i8* %5, align 1, !dbg !14404
  %7 = add i8 %6, -1, !dbg !14404
  store i8 %7, i8* %5, align 1, !dbg !14404
  br label %8, !dbg !14405

8:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !14406, !srcloc !14408
  br label %9, !dbg !14406

9:                                                ; preds = %8
  ret void, !dbg !14409
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_unlock() #1 !dbg !14410 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !14411, metadata !DIExpression()), !dbg !14413
  %13 = bitcast %union.anon.68* %7 to i8*, !dbg !14413
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !14413
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !14414, metadata !DIExpression()), !dbg !14413
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12240, metadata !DIExpression()) #9, !dbg !14415
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14417
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12248, metadata !DIExpression()) #9, !dbg !14418
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12250, metadata !DIExpression()) #9, !dbg !14419
  %15 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14421, !srcloc !12255
  store i32 %15, i32* %1, align 4, !dbg !14421
  %16 = load i32, i32* %1, align 4, !dbg !14422
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14423
  store i32 %16, i32* %17, align 4, !dbg !14424
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14425
  %19 = load i32, i32* %18, align 4, !dbg !14425
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14413
  store i32 %19, i32* %20, align 4, !dbg !14413
  br label %21, !dbg !14413

21:                                               ; preds = %47, %0
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14426
  %23 = load i32, i32* %22, align 4, !dbg !14426
  %24 = icmp ne i32 %23, 0, !dbg !14426
  %25 = xor i1 %24, true, !dbg !14426
  br i1 %25, label %26, label %49, !dbg !14413

26:                                               ; preds = %21
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14428
  %28 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %27, i32 0, i32 0, !dbg !14430
  %29 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %28, i32 0, i32 4, !dbg !14431
  %30 = bitcast %union.anon.2.7* %29 to %struct.device_state.72*, !dbg !14431
  %31 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %30, i32 0, i32 1, !dbg !14431
  %32 = load i8, i8* %31, align 1, !dbg !14432
  %33 = add i8 %32, 1, !dbg !14432
  store i8 %33, i8* %31, align 1, !dbg !14432
  call void @update_cache(i32 noundef 0) #10, !dbg !14433
  br label %34, !dbg !14434

34:                                               ; preds = %26
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14426
  %36 = bitcast i32* %35 to [1 x i32]*, !dbg !14426
  %37 = load [1 x i32], [1 x i32]* %36, align 4, !dbg !14426
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %39 = bitcast i32* %38 to [1 x i32]*
  store [1 x i32] %37, [1 x i32]* %39, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !12280, metadata !DIExpression()) #9, !dbg !14435
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !12286, metadata !DIExpression()) #9, !dbg !14437
  %40 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !14438
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !14439
  %42 = load i32, i32* %41, align 4, !dbg !14439
  store i32 %42, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12290, metadata !DIExpression()) #9, !dbg !14440
  %43 = load i32, i32* %2, align 4, !dbg !14442
  %44 = icmp ne i32 %43, 0, !dbg !14443
  br i1 %44, label %45, label %46, !dbg !14444

45:                                               ; preds = %34
  br label %47, !dbg !14445

46:                                               ; preds = %34
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !14446, !srcloc !12301
  br label %47, !dbg !14447

47:                                               ; preds = %45, %46
  %48 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14426
  store i32 1, i32* %48, align 4, !dbg !14426
  br label %21, !dbg !14426, !llvm.loop !14448

49:                                               ; preds = %21
  br label %50, !dbg !14450

50:                                               ; preds = %49
  br label %51, !dbg !14451

51:                                               ; preds = %50
  br label %52, !dbg !14455

52:                                               ; preds = %51
  br label %53, !dbg !14456

53:                                               ; preds = %52
  call void @z_reschedule_unlocked() #10, !dbg !14458
  ret void, !dbg !14459
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_swap_next_thread() #1 !dbg !14460 {
  %1 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14461
  ret %struct.k_thread.203* %1, !dbg !14462
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* noundef %0, %struct.rbnode* noundef %1) #1 !dbg !14463 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.rbnode*, align 4
  %5 = alloca %struct.rbnode*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca i32, align 4
  store %struct.rbnode* %0, %struct.rbnode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.rbnode** %4, metadata !14466, metadata !DIExpression()), !dbg !14467
  store %struct.rbnode* %1, %struct.rbnode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.rbnode** %5, metadata !14468, metadata !DIExpression()), !dbg !14469
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !14470, metadata !DIExpression()), !dbg !14471
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !14472, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.declare(metadata i32* %8, metadata !14474, metadata !DIExpression()), !dbg !14475
  %9 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !14476
  %10 = bitcast %struct.rbnode* %9 to i8*, !dbg !14476
  %11 = getelementptr inbounds i8, i8* %10, i32 0, !dbg !14476
  %12 = bitcast i8* %11 to %struct.k_thread.203*, !dbg !14476
  store %struct.k_thread.203* %12, %struct.k_thread.203** %6, align 4, !dbg !14477
  %13 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14478
  %14 = bitcast %struct.rbnode* %13 to i8*, !dbg !14478
  %15 = getelementptr inbounds i8, i8* %14, i32 0, !dbg !14478
  %16 = bitcast i8* %15 to %struct.k_thread.203*, !dbg !14478
  store %struct.k_thread.203* %16, %struct.k_thread.203** %7, align 4, !dbg !14479
  %17 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !14480
  %18 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14481
  %19 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %17, %struct.k_thread.203* noundef %18) #10, !dbg !14482
  store i32 %19, i32* %8, align 4, !dbg !14483
  %20 = load i32, i32* %8, align 4, !dbg !14484
  %21 = icmp sgt i32 %20, 0, !dbg !14486
  br i1 %21, label %22, label %23, !dbg !14487

22:                                               ; preds = %2
  store i1 true, i1* %3, align 1, !dbg !14488
  br label %40, !dbg !14488

23:                                               ; preds = %2
  %24 = load i32, i32* %8, align 4, !dbg !14490
  %25 = icmp slt i32 %24, 0, !dbg !14492
  br i1 %25, label %26, label %27, !dbg !14493

26:                                               ; preds = %23
  store i1 false, i1* %3, align 1, !dbg !14494
  br label %40, !dbg !14494

27:                                               ; preds = %23
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %6, align 4, !dbg !14496
  %29 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %28, i32 0, i32 0, !dbg !14498
  %30 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %29, i32 0, i32 5, !dbg !14499
  %31 = load i32, i32* %30, align 8, !dbg !14499
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14500
  %33 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %32, i32 0, i32 0, !dbg !14501
  %34 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %33, i32 0, i32 5, !dbg !14502
  %35 = load i32, i32* %34, align 8, !dbg !14502
  %36 = icmp ult i32 %31, %35, !dbg !14503
  %37 = zext i1 %36 to i64, !dbg !14496
  %38 = select i1 %36, i32 1, i32 0, !dbg !14496
  %39 = icmp ne i32 %38, 0, !dbg !14496
  store i1 %39, i1* %3, align 1, !dbg !14504
  br label %40, !dbg !14504

40:                                               ; preds = %27, %26, %22
  %41 = load i1, i1* %3, align 1, !dbg !14505
  ret i1 %41, !dbg !14505
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread.203* noundef %1) #1 !dbg !14506 {
  %3 = alloca %struct._priq_rb*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct._rb_foreach, align 4
  %7 = alloca %struct.rbnode*, align 4
  %8 = alloca %struct.k_thread.203*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %3, metadata !14522, metadata !DIExpression()), !dbg !14523
  store %struct.k_thread.203* %1, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !14524, metadata !DIExpression()), !dbg !14525
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !14526, metadata !DIExpression()), !dbg !14527
  %9 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14528
  %10 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %9, i32 0, i32 1, !dbg !14529
  %11 = load i32, i32* %10, align 4, !dbg !14530
  %12 = add nsw i32 %11, 1, !dbg !14530
  store i32 %12, i32* %10, align 4, !dbg !14530
  %13 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14531
  %14 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %13, i32 0, i32 0, !dbg !14532
  %15 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %14, i32 0, i32 5, !dbg !14533
  store i32 %11, i32* %15, align 8, !dbg !14534
  %16 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14535
  %17 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %16, i32 0, i32 1, !dbg !14537
  %18 = load i32, i32* %17, align 4, !dbg !14537
  %19 = icmp ne i32 %18, 0, !dbg !14535
  br i1 %19, label %62, label %20, !dbg !14538

20:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %6, metadata !14539, metadata !DIExpression()), !dbg !14547
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 0, !dbg !14547
  %22 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14547
  %23 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %22, i32 0, i32 0, !dbg !14547
  %24 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %23, i32 0, i32 2, !dbg !14547
  %25 = load i32, i32* %24, align 4, !dbg !14547
  %26 = mul i32 %25, 4, !dbg !14547
  %27 = alloca i8, i32 %26, align 8, !dbg !14547
  %28 = bitcast i8* %27 to %struct.rbnode**, !dbg !14547
  store %struct.rbnode** %28, %struct.rbnode*** %21, align 4, !dbg !14547
  %29 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 1, !dbg !14547
  %30 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14547
  %31 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %30, i32 0, i32 0, !dbg !14547
  %32 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %31, i32 0, i32 2, !dbg !14547
  %33 = load i32, i32* %32, align 4, !dbg !14547
  %34 = mul i32 %33, 1, !dbg !14547
  %35 = alloca i8, i32 %34, align 8, !dbg !14547
  store i8* %35, i8** %29, align 4, !dbg !14547
  %36 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 2, !dbg !14547
  store i32 -1, i32* %36, align 4, !dbg !14547
  br label %37, !dbg !14547

37:                                               ; preds = %53, %20
  call void @llvm.dbg.declare(metadata %struct.rbnode** %7, metadata !14548, metadata !DIExpression()), !dbg !14551
  %38 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14551
  %39 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %38, i32 0, i32 0, !dbg !14551
  %40 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef %39, %struct._rb_foreach* noundef %6) #10, !dbg !14551
  store %struct.rbnode* %40, %struct.rbnode** %7, align 4, !dbg !14551
  %41 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !14551
  %42 = icmp ne %struct.rbnode* %41, null, !dbg !14551
  br i1 %42, label %43, label %48, !dbg !14551

43:                                               ; preds = %37
  %44 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !14551
  %45 = bitcast %struct.rbnode* %44 to i8*, !dbg !14551
  %46 = getelementptr inbounds i8, i8* %45, i32 0, !dbg !14551
  %47 = bitcast i8* %46 to %struct.k_thread.203*, !dbg !14551
  br label %49, !dbg !14551

48:                                               ; preds = %37
  br label %49, !dbg !14551

49:                                               ; preds = %48, %43
  %50 = phi %struct.k_thread.203* [ %47, %43 ], [ null, %48 ], !dbg !14551
  store %struct.k_thread.203* %50, %struct.k_thread.203** %5, align 4, !dbg !14551
  store %struct.k_thread.203* %50, %struct.k_thread.203** %8, align 4, !dbg !14551
  %51 = load %struct.k_thread.203*, %struct.k_thread.203** %8, align 4, !dbg !14551
  %52 = icmp ne %struct.k_thread.203* %51, null, !dbg !14552
  br i1 %52, label %53, label %61, !dbg !14547

53:                                               ; preds = %49
  %54 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14553
  %55 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %54, i32 0, i32 1, !dbg !14555
  %56 = load i32, i32* %55, align 4, !dbg !14556
  %57 = add nsw i32 %56, 1, !dbg !14556
  store i32 %57, i32* %55, align 4, !dbg !14556
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14557
  %59 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %58, i32 0, i32 0, !dbg !14558
  %60 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %59, i32 0, i32 5, !dbg !14559
  store i32 %56, i32* %60, align 8, !dbg !14560
  br label %37, !dbg !14552, !llvm.loop !14561

61:                                               ; preds = %49
  br label %62, !dbg !14563

62:                                               ; preds = %61, %2
  %63 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14564
  %64 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %63, i32 0, i32 0, !dbg !14565
  %65 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14566
  %66 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %65, i32 0, i32 0, !dbg !14567
  %67 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %66, i32 0, i32 0, !dbg !14568
  %68 = bitcast %union.anon.192* %67 to %struct.rbnode*, !dbg !14568
  call void @rb_insert(%struct.rbtree* noundef %64, %struct.rbnode* noundef %68) #10, !dbg !14569
  ret void, !dbg !14570
}

declare dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) #0

declare dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) #0

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread.203* noundef %1) #1 !dbg !14571 {
  %3 = alloca %struct._priq_rb*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %3, metadata !14572, metadata !DIExpression()), !dbg !14573
  store %struct.k_thread.203* %1, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !14574, metadata !DIExpression()), !dbg !14575
  %5 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14576
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %5, i32 0, i32 0, !dbg !14577
  %7 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14578
  %8 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %7, i32 0, i32 0, !dbg !14579
  %9 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %8, i32 0, i32 0, !dbg !14580
  %10 = bitcast %union.anon.192* %9 to %struct.rbnode*, !dbg !14580
  call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %10) #10, !dbg !14581
  %11 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14582
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %11, i32 0, i32 0, !dbg !14584
  %13 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %12, i32 0, i32 0, !dbg !14585
  %14 = load %struct.rbnode*, %struct.rbnode** %13, align 4, !dbg !14585
  %15 = icmp ne %struct.rbnode* %14, null, !dbg !14582
  br i1 %15, label %19, label %16, !dbg !14586

16:                                               ; preds = %2
  %17 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !14587
  %18 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %17, i32 0, i32 1, !dbg !14589
  store i32 0, i32* %18, align 4, !dbg !14590
  br label %19, !dbg !14591

19:                                               ; preds = %16, %2
  ret void, !dbg !14592
}

declare dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) #0

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_priq_rb_best(%struct._priq_rb* noundef %0) #1 !dbg !14593 {
  %2 = alloca %struct._priq_rb*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.rbnode*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %2, metadata !14596, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !14598, metadata !DIExpression()), !dbg !14599
  store %struct.k_thread.203* null, %struct.k_thread.203** %3, align 4, !dbg !14599
  call void @llvm.dbg.declare(metadata %struct.rbnode** %4, metadata !14600, metadata !DIExpression()), !dbg !14601
  %5 = load %struct._priq_rb*, %struct._priq_rb** %2, align 4, !dbg !14602
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %5, i32 0, i32 0, !dbg !14603
  %7 = call %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %6) #10, !dbg !14604
  store %struct.rbnode* %7, %struct.rbnode** %4, align 4, !dbg !14601
  %8 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !14605
  %9 = icmp ne %struct.rbnode* %8, null, !dbg !14607
  br i1 %9, label %10, label %15, !dbg !14608

10:                                               ; preds = %1
  %11 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !14609
  %12 = bitcast %struct.rbnode* %11 to i8*, !dbg !14609
  %13 = getelementptr inbounds i8, i8* %12, i32 0, !dbg !14609
  %14 = bitcast i8* %13 to %struct.k_thread.203*, !dbg !14609
  store %struct.k_thread.203* %14, %struct.k_thread.203** %3, align 4, !dbg !14611
  br label %15, !dbg !14612

15:                                               ; preds = %10, %1
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14613
  ret %struct.k_thread.203* %16, !dbg !14614
}

; Function Attrs: noinline nounwind optnone
define internal %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) #1 !dbg !14615 {
  %2 = alloca %struct.rbtree*, align 4
  store %struct.rbtree* %0, %struct.rbtree** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.rbtree** %2, metadata !14619, metadata !DIExpression()), !dbg !14620
  %3 = load %struct.rbtree*, %struct.rbtree** %2, align 4, !dbg !14621
  %4 = call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %3, i8 noundef zeroext 0) #10, !dbg !14622
  ret %struct.rbnode* %4, !dbg !14623
}

declare dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) #0

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_priq_mq_best(%struct._priq_mq* noundef %0) #1 !dbg !14624 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct._priq_mq*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  %6 = alloca %struct._dnode.191*, align 4
  store %struct._priq_mq* %0, %struct._priq_mq** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_mq** %3, metadata !14633, metadata !DIExpression()), !dbg !14634
  %7 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !14635
  %8 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %7, i32 0, i32 1, !dbg !14637
  %9 = load i32, i32* %8, align 4, !dbg !14637
  %10 = icmp ne i32 %9, 0, !dbg !14635
  br i1 %10, label %12, label %11, !dbg !14638

11:                                               ; preds = %1
  store %struct.k_thread.203* null, %struct.k_thread.203** %2, align 4, !dbg !14639
  br label %31, !dbg !14639

12:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !14641, metadata !DIExpression()), !dbg !14642
  store %struct.k_thread.203* null, %struct.k_thread.203** %4, align 4, !dbg !14642
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !14643, metadata !DIExpression()), !dbg !14644
  %13 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !14645
  %14 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %13, i32 0, i32 0, !dbg !14646
  %15 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !14647
  %16 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %15, i32 0, i32 1, !dbg !14648
  %17 = load i32, i32* %16, align 4, !dbg !14648
  %18 = call i32 @llvm.cttz.i32(i32 %17, i1 false), !dbg !14649
  %19 = getelementptr inbounds [32 x %struct._dnode.191], [32 x %struct._dnode.191]* %14, i32 0, i32 %18, !dbg !14645
  store %struct._dnode.191* %19, %struct._dnode.191** %5, align 4, !dbg !14644
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %6, metadata !14650, metadata !DIExpression()), !dbg !14651
  %20 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !14652
  %21 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %20) #10, !dbg !14653
  store %struct._dnode.191* %21, %struct._dnode.191** %6, align 4, !dbg !14651
  %22 = load %struct._dnode.191*, %struct._dnode.191** %6, align 4, !dbg !14654
  %23 = icmp ne %struct._dnode.191* %22, null, !dbg !14656
  br i1 %23, label %24, label %29, !dbg !14657

24:                                               ; preds = %12
  %25 = load %struct._dnode.191*, %struct._dnode.191** %6, align 4, !dbg !14658
  %26 = bitcast %struct._dnode.191* %25 to i8*, !dbg !14658
  %27 = getelementptr inbounds i8, i8* %26, i32 0, !dbg !14658
  %28 = bitcast i8* %27 to %struct.k_thread.203*, !dbg !14658
  store %struct.k_thread.203* %28, %struct.k_thread.203** %4, align 4, !dbg !14660
  br label %29, !dbg !14661

29:                                               ; preds = %24, %12
  %30 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14662
  store %struct.k_thread.203* %30, %struct.k_thread.203** %2, align 4, !dbg !14663
  br label %31, !dbg !14663

31:                                               ; preds = %29, %11
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14664
  ret %struct.k_thread.203* %32, !dbg !14664
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_unpend_all(%union.anon.192* noundef %0) #1 !dbg !14665 {
  %2 = alloca %union.anon.192*, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  store %union.anon.192* %0, %union.anon.192** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %2, metadata !14668, metadata !DIExpression()), !dbg !14669
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14670, metadata !DIExpression()), !dbg !14671
  store i32 0, i32* %3, align 4, !dbg !14671
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !14672, metadata !DIExpression()), !dbg !14673
  br label %5, !dbg !14674

5:                                                ; preds = %9, %1
  %6 = load %union.anon.192*, %union.anon.192** %2, align 4, !dbg !14675
  %7 = call %struct.k_thread.203* @z_waitq_head(%union.anon.192* noundef %6) #10, !dbg !14676
  store %struct.k_thread.203* %7, %struct.k_thread.203** %4, align 4, !dbg !14677
  %8 = icmp ne %struct.k_thread.203* %7, null, !dbg !14678
  br i1 %8, label %9, label %12, !dbg !14674

9:                                                ; preds = %5
  %10 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14679
  call void @z_unpend_thread(%struct.k_thread.203* noundef %10) #10, !dbg !14681
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !14682
  call void @z_ready_thread(%struct.k_thread.203* noundef %11) #10, !dbg !14683
  store i32 1, i32* %3, align 4, !dbg !14684
  br label %5, !dbg !14674, !llvm.loop !14685

12:                                               ; preds = %5
  %13 = load i32, i32* %3, align 4, !dbg !14687
  ret i32 %13, !dbg !14688
}

; Function Attrs: noinline nounwind optnone
define internal %struct.k_thread.203* @z_waitq_head(%union.anon.192* noundef %0) #1 !dbg !14689 {
  %2 = alloca %union.anon.192*, align 4
  store %union.anon.192* %0, %union.anon.192** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %2, metadata !14690, metadata !DIExpression()), !dbg !14691
  %3 = load %union.anon.192*, %union.anon.192** %2, align 4, !dbg !14692
  %4 = getelementptr inbounds %union.anon.192, %union.anon.192* %3, i32 0, i32 0, !dbg !14693
  %5 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %4) #10, !dbg !14694
  %6 = bitcast %struct._dnode.191* %5 to %struct.k_thread.203*, !dbg !14695
  ret %struct.k_thread.203* %6, !dbg !14696
}

; Function Attrs: noinline nounwind optnone
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) #1 !dbg !14697 {
  %2 = alloca %struct._ready_q*, align 4
  store %struct._ready_q* %0, %struct._ready_q** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._ready_q** %2, metadata !14705, metadata !DIExpression()), !dbg !14706
  %3 = load %struct._ready_q*, %struct._ready_q** %2, align 4, !dbg !14707
  %4 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %3, i32 0, i32 1, !dbg !14708
  call void @sys_dlist_init.76(%struct._dnode.191* noundef %4) #10, !dbg !14709
  ret void, !dbg !14710
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_init.76(%struct._dnode.191* noundef %0) #1 !dbg !14711 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !14714, metadata !DIExpression()), !dbg !14715
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !14716
  %4 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !14717
  %5 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %4, i32 0, i32 0, !dbg !14718
  %6 = bitcast %union.anon.0.189* %5 to %struct._dnode.191**, !dbg !14718
  store %struct._dnode.191* %3, %struct._dnode.191** %6, align 4, !dbg !14719
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !14720
  %8 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !14721
  %9 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %8, i32 0, i32 1, !dbg !14722
  %10 = bitcast %union.anon.0.189* %9 to %struct._dnode.191**, !dbg !14722
  store %struct._dnode.191* %7, %struct._dnode.191** %10, align 4, !dbg !14723
  ret void, !dbg !14724
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_sched_init() #1 !dbg !14725 {
  call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #10, !dbg !14726
  call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #10, !dbg !14727
  ret void, !dbg !14728
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread.203* noundef %0) #1 !dbg !14729 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14733, metadata !DIExpression()), !dbg !14734
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14735
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !14736
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 4, !dbg !14737
  %6 = bitcast %union.anon.2.7* %5 to %struct.device_state.72*, !dbg !14737
  %7 = getelementptr inbounds %struct.device_state.72, %struct.device_state.72* %6, i32 0, i32 0, !dbg !14737
  %8 = load i8, i8* %7, align 2, !dbg !14737
  %9 = sext i8 %8 to i32, !dbg !14735
  ret i32 %9, !dbg !14738
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread.203* noundef %0, i32 noundef %1) #1 !dbg !14739 {
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !14742, metadata !DIExpression()), !dbg !14743
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14744, metadata !DIExpression()), !dbg !14745
  br label %6, !dbg !14746

6:                                                ; preds = %2
  br label %7, !dbg !14747

7:                                                ; preds = %6
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !14749, metadata !DIExpression()), !dbg !14750
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14751
  store %struct.k_thread.203* %8, %struct.k_thread.203** %5, align 4, !dbg !14750
  %9 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14752
  %10 = load i32, i32* %4, align 4, !dbg !14753
  call void @z_thread_priority_set(%struct.k_thread.203* noundef %9, i32 noundef %10) #10, !dbg !14754
  ret void, !dbg !14755
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @k_can_yield() #1 !dbg !14756 {
  %1 = call zeroext i1 @k_is_pre_kernel() #10, !dbg !14757
  br i1 %1, label %7, label %2, !dbg !14758

2:                                                ; preds = %0
  %3 = call zeroext i1 @k_is_in_isr() #10, !dbg !14759
  br i1 %3, label %7, label %4, !dbg !14760

4:                                                ; preds = %2
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14761
  %6 = call zeroext i1 @z_is_idle_thread_object(%struct.k_thread.203* noundef %5) #10, !dbg !14762
  br label %7, !dbg !14760

7:                                                ; preds = %4, %2, %0
  %8 = phi i1 [ true, %2 ], [ true, %0 ], [ %6, %4 ]
  %9 = xor i1 %8, true, !dbg !14763
  ret i1 %9, !dbg !14764
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @k_is_pre_kernel() #1 !dbg !14765 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !14766
  %2 = trunc i8 %1 to i1, !dbg !14766
  %3 = xor i1 %2, true, !dbg !14767
  ret i1 %3, !dbg !14768
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_yield() #1 !dbg !14769 {
  %1 = alloca %struct._dnode.191*, align 4
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  %6 = alloca %struct.k_thread.203*, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.k_thread.203*, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %struct.k_spinlock.13*, align 4
  %13 = alloca %struct.k_thread.203*, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %union.anon.68, align 4
  br label %17, !dbg !14770

17:                                               ; preds = %0
  br label %18, !dbg !14771

18:                                               ; preds = %17
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !14773, metadata !DIExpression()), !dbg !14774
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !12240, metadata !DIExpression()) #9, !dbg !14775
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !14777
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !12248, metadata !DIExpression()) #9, !dbg !14778
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12250, metadata !DIExpression()) #9, !dbg !14779
  %20 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14781, !srcloc !12255
  store i32 %20, i32* %8, align 4, !dbg !14781
  %21 = load i32, i32* %8, align 4, !dbg !14782
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !14783
  store i32 %21, i32* %22, align 4, !dbg !14784
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !14785
  %24 = load i32, i32* %23, align 4, !dbg !14785
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14786
  store i32 %24, i32* %25, align 4, !dbg !14786
  %26 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14787
  store %struct.k_thread.203* %26, %struct.k_thread.203** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %13, metadata !12640, metadata !DIExpression()) #9, !dbg !14790
  %27 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !14792
  %28 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %27, i32 0, i32 0, !dbg !14793
  %29 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %28, i32 0, i32 3, !dbg !14794
  %30 = load i8, i8* %29, align 1, !dbg !14795
  %31 = zext i8 %30 to i32, !dbg !14795
  %32 = and i32 %31, -129, !dbg !14795
  %33 = trunc i32 %32 to i8, !dbg !14795
  store i8 %33, i8* %29, align 1, !dbg !14795
  %34 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !14796
  %35 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %34) #13, !dbg !14797
  br i1 %35, label %36, label %41, !dbg !14798

36:                                               ; preds = %18
  %37 = load %struct.k_thread.203*, %struct.k_thread.203** %13, align 4, !dbg !14799
  store %struct.k_thread.203* %37, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !12654, metadata !DIExpression()) #9, !dbg !14800
  %38 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14802
  store %struct.k_thread.203* %38, %struct.k_thread.203** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %6, metadata !12659, metadata !DIExpression()), !dbg !14803
  %39 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !14805
  %40 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !14806
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %39, %struct.k_thread.203* noundef %40) #13, !dbg !14807
  br label %41, !dbg !14808

41:                                               ; preds = %18, %36
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14809
  store %struct.k_thread.203* %42, %struct.k_thread.203** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %9, metadata !12671, metadata !DIExpression()) #9, !dbg !14810
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14812
  %44 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %43, i32 0, i32 0, !dbg !14813
  %45 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %44, i32 0, i32 3, !dbg !14814
  %46 = load i8, i8* %45, align 1, !dbg !14815
  %47 = zext i8 %46 to i32, !dbg !14815
  %48 = or i32 %47, 128, !dbg !14815
  %49 = trunc i32 %48 to i8, !dbg !14815
  store i8 %49, i8* %45, align 1, !dbg !14815
  %50 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14816
  %51 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %50) #13, !dbg !14817
  br i1 %51, label %52, label %117, !dbg !14818

52:                                               ; preds = %41
  %53 = load %struct.k_thread.203*, %struct.k_thread.203** %9, align 4, !dbg !14819
  store %struct.k_thread.203* %53, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !12685, metadata !DIExpression()) #9, !dbg !14820
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14822
  store %struct.k_thread.203* %54, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12659, metadata !DIExpression()) #9, !dbg !14823
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !14825
  store %struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.191** %1, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %1, metadata !12693, metadata !DIExpression()) #9, !dbg !14826
  store %struct.k_thread.203* %55, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12700, metadata !DIExpression()) #9, !dbg !14828
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12702, metadata !DIExpression()) #9, !dbg !14829
  %56 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !14830
  %57 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %56) #13, !dbg !14830
  %58 = icmp ne %struct._dnode.191* %57, null, !dbg !14830
  br i1 %58, label %59, label %64, !dbg !14830

59:                                               ; preds = %52
  %60 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !14830
  %61 = call %struct._dnode.191* @sys_dlist_peek_head(%struct._dnode.191* noundef %60) #13, !dbg !14830
  %62 = bitcast %struct._dnode.191* %61 to i8*, !dbg !14830
  %63 = bitcast i8* %62 to %struct.k_thread.203*, !dbg !14830
  br label %65, !dbg !14830

64:                                               ; preds = %52
  br label %65, !dbg !14830

65:                                               ; preds = %64, %59
  %66 = phi %struct.k_thread.203* [ %63, %59 ], [ null, %64 ], !dbg !14830
  store %struct.k_thread.203* %66, %struct.k_thread.203** %3, align 4, !dbg !14830
  br label %67, !dbg !14830

67:                                               ; preds = %108, %65
  %68 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14831
  %69 = icmp ne %struct.k_thread.203* %68, null, !dbg !14831
  br i1 %69, label %70, label %110, !dbg !14830

70:                                               ; preds = %67
  %71 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14832
  %72 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14833
  %73 = call i32 @z_sched_prio_cmp(%struct.k_thread.203* noundef %71, %struct.k_thread.203* noundef %72) #13, !dbg !14834
  %74 = icmp sgt i32 %73, 0, !dbg !14835
  br i1 %74, label %75, label %84, !dbg !14836

75:                                               ; preds = %70
  %76 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14837
  %77 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %76, i32 0, i32 0, !dbg !14838
  %78 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %77, i32 0, i32 0, !dbg !14839
  %79 = bitcast %union.anon.192* %78 to %struct._dnode.191*, !dbg !14839
  %80 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14840
  %81 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %80, i32 0, i32 0, !dbg !14841
  %82 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %81, i32 0, i32 0, !dbg !14842
  %83 = bitcast %union.anon.192* %82 to %struct._dnode.191*, !dbg !14842
  call void @sys_dlist_insert(%struct._dnode.191* noundef %79, %struct._dnode.191* noundef %83) #13, !dbg !14843
  br label %116, !dbg !14844

84:                                               ; preds = %70
  %85 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14831
  %86 = icmp ne %struct.k_thread.203* %85, null, !dbg !14831
  br i1 %86, label %87, label %107, !dbg !14831

87:                                               ; preds = %84
  %88 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !14831
  %89 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14831
  %90 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %89, i32 0, i32 0, !dbg !14831
  %91 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %90, i32 0, i32 0, !dbg !14831
  %92 = bitcast %union.anon.192* %91 to %struct._dnode.191*, !dbg !14831
  %93 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %88, %struct._dnode.191* noundef %92) #13, !dbg !14831
  %94 = icmp ne %struct._dnode.191* %93, null, !dbg !14831
  br i1 %94, label %95, label %104, !dbg !14831

95:                                               ; preds = %87
  %96 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !14831
  %97 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !14831
  %98 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %97, i32 0, i32 0, !dbg !14831
  %99 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %98, i32 0, i32 0, !dbg !14831
  %100 = bitcast %union.anon.192* %99 to %struct._dnode.191*, !dbg !14831
  %101 = call %struct._dnode.191* @sys_dlist_peek_next(%struct._dnode.191* noundef %96, %struct._dnode.191* noundef %100) #13, !dbg !14831
  %102 = bitcast %struct._dnode.191* %101 to i8*, !dbg !14831
  %103 = bitcast i8* %102 to %struct.k_thread.203*, !dbg !14831
  br label %105, !dbg !14831

104:                                              ; preds = %87
  br label %105, !dbg !14831

105:                                              ; preds = %104, %95
  %106 = phi %struct.k_thread.203* [ %103, %95 ], [ null, %104 ], !dbg !14831
  br label %108, !dbg !14831

107:                                              ; preds = %84
  br label %108, !dbg !14831

108:                                              ; preds = %107, %105
  %109 = phi %struct.k_thread.203* [ %106, %105 ], [ null, %107 ], !dbg !14831
  store %struct.k_thread.203* %109, %struct.k_thread.203** %3, align 4, !dbg !14831
  br label %67, !dbg !14831, !llvm.loop !14845

110:                                              ; preds = %67
  %111 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !14847
  %112 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14848
  %113 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %112, i32 0, i32 0, !dbg !14849
  %114 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %113, i32 0, i32 0, !dbg !14850
  %115 = bitcast %union.anon.192* %114 to %struct._dnode.191*, !dbg !14850
  call void @sys_dlist_append(%struct._dnode.191* noundef %111, %struct._dnode.191* noundef %115) #13, !dbg !14851
  br label %116, !dbg !14852

116:                                              ; preds = %75, %110
  br label %117, !dbg !14853

117:                                              ; preds = %41, %116
  call void @update_cache(i32 noundef 1) #10, !dbg !14854
  %118 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14855
  %119 = bitcast i32* %118 to [1 x i32]*, !dbg !14855
  %120 = load [1 x i32], [1 x i32]* %119, align 4, !dbg !14855
  %121 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0
  %122 = bitcast i32* %121 to [1 x i32]*
  store [1 x i32] %120, [1 x i32]* %122, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %12, metadata !13326, metadata !DIExpression()) #9, !dbg !14856
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !13332, metadata !DIExpression()) #9, !dbg !14858
  %123 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %12, align 4, !dbg !14859
  store %struct.k_spinlock.13* %123, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !13335, metadata !DIExpression()) #9, !dbg !14860
  %124 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !14862
  %125 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14863
  %126 = load i32, i32* %125, align 4, !dbg !14863
  %127 = call i32 @z_swap_irqlock(i32 noundef %126) #13, !dbg !14864
  ret void, !dbg !14865
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) #1 !dbg !14866 {
  %2 = alloca i32, align 4
  %3 = alloca %union.argument_value, align 8
  %4 = alloca i64, align 8
  %5 = alloca %union.argument_value, align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %8, align 8
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !14869, metadata !DIExpression()), !dbg !14870
  call void @llvm.dbg.declare(metadata i64* %4, metadata !14871, metadata !DIExpression()), !dbg !14872
  br label %9, !dbg !14873

9:                                                ; preds = %1
  br label %10, !dbg !14874

10:                                               ; preds = %9
  %11 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !14876
  %12 = load i64, i64* %11, align 8, !dbg !14876
  %13 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !14876
  store i64 -1, i64* %13, align 8, !dbg !14876
  %14 = icmp eq i64 %12, -1, !dbg !14876
  br i1 %14, label %15, label %19, !dbg !14878

15:                                               ; preds = %10
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14879
  call void @k_thread_suspend(%struct.k_thread.203* noundef %16) #10, !dbg !14881
  br label %17, !dbg !14882

17:                                               ; preds = %15
  br label %18, !dbg !14883

18:                                               ; preds = %17
  store i32 -1, i32* %2, align 4, !dbg !14885
  br label %31, !dbg !14885

19:                                               ; preds = %10
  %20 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !14886
  %21 = load i64, i64* %20, align 8, !dbg !14886
  store i64 %21, i64* %4, align 8, !dbg !14887
  %22 = load i64, i64* %4, align 8, !dbg !14888
  %23 = call i32 @z_tick_sleep(i64 noundef %22) #10, !dbg !14889
  %24 = sext i32 %23 to i64, !dbg !14889
  store i64 %24, i64* %4, align 8, !dbg !14890
  call void @llvm.dbg.declare(metadata i32* %6, metadata !14891, metadata !DIExpression()), !dbg !14892
  %25 = load i64, i64* %4, align 8, !dbg !14893
  %26 = call i64 @k_ticks_to_ms_floor64(i64 noundef %25) #10, !dbg !14894
  %27 = trunc i64 %26 to i32, !dbg !14894
  store i32 %27, i32* %6, align 4, !dbg !14892
  br label %28, !dbg !14895

28:                                               ; preds = %19
  br label %29, !dbg !14896

29:                                               ; preds = %28
  %30 = load i32, i32* %6, align 4, !dbg !14898
  store i32 %30, i32* %2, align 4, !dbg !14899
  br label %31, !dbg !14899

31:                                               ; preds = %29, %18
  %32 = load i32, i32* %2, align 4, !dbg !14900
  ret i32 %32, !dbg !14900
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_suspend(%struct.k_thread.203* noundef %0) #1 !dbg !14901 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !14904, metadata !DIExpression()), !dbg !14905
  br label %3, !dbg !14906

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !14907, !srcloc !14909
  br label %4, !dbg !14907

4:                                                ; preds = %3
  %5 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !14910
  call void @z_impl_k_thread_suspend(%struct.k_thread.203* noundef %5) #10, !dbg !14911
  ret void, !dbg !14912
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_tick_sleep(i64 noundef %0) #1 !dbg !14913 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_spinlock.13*, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 4
  %15 = alloca %union.argument_value, align 8
  %16 = alloca %union.anon.68, align 4
  store i64 %0, i64* %9, align 8
  call void @llvm.dbg.declare(metadata i64* %9, metadata !14916, metadata !DIExpression()), !dbg !14917
  call void @llvm.dbg.declare(metadata i32* %10, metadata !14918, metadata !DIExpression()), !dbg !14919
  br label %17, !dbg !14920

17:                                               ; preds = %1
  br label %18, !dbg !14921

18:                                               ; preds = %17
  %19 = load i64, i64* %9, align 8, !dbg !14925
  %20 = icmp eq i64 %19, 0, !dbg !14927
  br i1 %20, label %21, label %22, !dbg !14928

21:                                               ; preds = %18
  call void @k_yield() #10, !dbg !14929
  store i32 0, i32* %8, align 4, !dbg !14931
  br label %74, !dbg !14931

22:                                               ; preds = %18
  call void @llvm.dbg.declare(metadata %union.argument_value* %15, metadata !14932, metadata !DIExpression()), !dbg !14933
  %23 = getelementptr inbounds %union.argument_value, %union.argument_value* %15, i32 0, i32 0, !dbg !14934
  %24 = load i64, i64* %9, align 8, !dbg !14934
  store i64 %24, i64* %23, align 8, !dbg !14934
  %25 = load i64, i64* %9, align 8, !dbg !14935
  %26 = sub nsw i64 -2, %25, !dbg !14935
  %27 = icmp sle i64 %26, 0, !dbg !14937
  br i1 %27, label %28, label %34, !dbg !14938

28:                                               ; preds = %22
  %29 = load i64, i64* %9, align 8, !dbg !14939
  %30 = call i32 @sys_clock_tick_get_32() #10, !dbg !14941
  %31 = zext i32 %30 to i64, !dbg !14941
  %32 = add nsw i64 %29, %31, !dbg !14942
  %33 = trunc i64 %32 to i32, !dbg !14939
  store i32 %33, i32* %10, align 4, !dbg !14943
  br label %38, !dbg !14944

34:                                               ; preds = %22
  %35 = load i64, i64* %9, align 8, !dbg !14945
  %36 = sub nsw i64 -2, %35, !dbg !14945
  %37 = trunc i64 %36 to i32, !dbg !14945
  store i32 %37, i32* %10, align 4, !dbg !14947
  br label %38

38:                                               ; preds = %34, %28
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !14948, metadata !DIExpression()), !dbg !14949
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12240, metadata !DIExpression()) #9, !dbg !14950
  %39 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14952
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12248, metadata !DIExpression()) #9, !dbg !14953
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12250, metadata !DIExpression()) #9, !dbg !14954
  %40 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !14956, !srcloc !12255
  store i32 %40, i32* %2, align 4, !dbg !14956
  %41 = load i32, i32* %2, align 4, !dbg !14957
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14958
  store i32 %41, i32* %42, align 4, !dbg !14959
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14960
  %44 = load i32, i32* %43, align 4, !dbg !14960
  %45 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14961
  store i32 %44, i32* %45, align 4, !dbg !14961
  %46 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14962
  store %struct.k_thread.203* %46, %struct.k_thread.203** @pending_current, align 4, !dbg !14963
  %47 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14964
  call void @unready_thread(%struct.k_thread.203* noundef %47) #10, !dbg !14965
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14966
  %49 = getelementptr inbounds %union.argument_value, %union.argument_value* %15, i32 0, i32 0, !dbg !14967
  %50 = bitcast i64* %49 to [1 x i64]*, !dbg !14967
  %51 = load [1 x i64], [1 x i64]* %50, align 8, !dbg !14967
  call void @z_add_thread_timeout.69(%struct.k_thread.203* noundef %48, [1 x i64] %51) #10, !dbg !14967
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14968
  call void @z_mark_thread_as_suspended(%struct.k_thread.203* noundef %52) #10, !dbg !14969
  %53 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14970
  %54 = bitcast i32* %53 to [1 x i32]*, !dbg !14970
  %55 = load [1 x i32], [1 x i32]* %54, align 4, !dbg !14970
  %56 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %57 = bitcast i32* %56 to [1 x i32]*
  store [1 x i32] %55, [1 x i32]* %57, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13326, metadata !DIExpression()) #9, !dbg !14971
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !13332, metadata !DIExpression()) #9, !dbg !14973
  %58 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14974
  store %struct.k_spinlock.13* %58, %struct.k_spinlock.13** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %3, metadata !13335, metadata !DIExpression()) #9, !dbg !14975
  %59 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !14977
  %60 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14978
  %61 = load i32, i32* %60, align 4, !dbg !14978
  %62 = call i32 @z_swap_irqlock(i32 noundef %61) #13, !dbg !14979
  %63 = load i32, i32* %10, align 4, !dbg !14980
  %64 = zext i32 %63 to i64, !dbg !14981
  %65 = call i32 @sys_clock_tick_get_32() #10, !dbg !14982
  %66 = zext i32 %65 to i64, !dbg !14982
  %67 = sub nsw i64 %64, %66, !dbg !14983
  store i64 %67, i64* %9, align 8, !dbg !14984
  %68 = load i64, i64* %9, align 8, !dbg !14985
  %69 = icmp sgt i64 %68, 0, !dbg !14987
  br i1 %69, label %70, label %73, !dbg !14988

70:                                               ; preds = %38
  %71 = load i64, i64* %9, align 8, !dbg !14989
  %72 = trunc i64 %71 to i32, !dbg !14989
  store i32 %72, i32* %8, align 4, !dbg !14991
  br label %74, !dbg !14991

73:                                               ; preds = %38
  store i32 0, i32* %8, align 4, !dbg !14992
  br label %74, !dbg !14992

74:                                               ; preds = %73, %70, %21
  %75 = load i32, i32* %8, align 4, !dbg !14993
  ret i32 %75, !dbg !14993
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64(i64 noundef %0) #1 !dbg !14994 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !14995, metadata !DIExpression()), !dbg !14996
  %15 = load i64, i64* %14, align 8, !dbg !14997
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12312, metadata !DIExpression()), !dbg !14998
  store i32 10000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12316, metadata !DIExpression()), !dbg !15000
  store i32 1000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12318, metadata !DIExpression()), !dbg !15001
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12320, metadata !DIExpression()), !dbg !15002
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12322, metadata !DIExpression()), !dbg !15003
  store i8 0, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12324, metadata !DIExpression()), !dbg !15004
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12326, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12328, metadata !DIExpression()), !dbg !15006
  %16 = load i8, i8* %6, align 1, !dbg !15007
  %17 = trunc i8 %16 to i1, !dbg !15007
  br i1 %17, label %18, label %27, !dbg !15008

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !15009
  %20 = load i32, i32* %4, align 4, !dbg !15010
  %21 = icmp ugt i32 %19, %20, !dbg !15011
  br i1 %21, label %22, label %27, !dbg !15012

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !15013
  %24 = load i32, i32* %4, align 4, !dbg !15014
  %25 = urem i32 %23, %24, !dbg !15015
  %26 = icmp eq i32 %25, 0, !dbg !15016
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !15017
  %29 = zext i1 %28 to i8, !dbg !15006
  store i8 %29, i8* %10, align 1, !dbg !15006
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12341, metadata !DIExpression()), !dbg !15018
  %30 = load i8, i8* %6, align 1, !dbg !15019
  %31 = trunc i8 %30 to i1, !dbg !15019
  br i1 %31, label %32, label %41, !dbg !15020

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !15021
  %34 = load i32, i32* %5, align 4, !dbg !15022
  %35 = icmp ugt i32 %33, %34, !dbg !15023
  br i1 %35, label %36, label %41, !dbg !15024

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !15025
  %38 = load i32, i32* %5, align 4, !dbg !15026
  %39 = urem i32 %37, %38, !dbg !15027
  %40 = icmp eq i32 %39, 0, !dbg !15028
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !15017
  %43 = zext i1 %42 to i8, !dbg !15018
  store i8 %43, i8* %11, align 1, !dbg !15018
  %44 = load i32, i32* %4, align 4, !dbg !15029
  %45 = load i32, i32* %5, align 4, !dbg !15030
  %46 = icmp eq i32 %44, %45, !dbg !15031
  br i1 %46, label %47, label %58, !dbg !15032

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !15033
  %49 = trunc i8 %48 to i1, !dbg !15033
  br i1 %49, label %50, label %54, !dbg !15033

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !15034
  %52 = trunc i64 %51 to i32, !dbg !15035
  %53 = zext i32 %52 to i64, !dbg !15036
  br label %56, !dbg !15033

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !15037
  br label %56, !dbg !15033

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !15033
  store i64 %57, i64* %2, align 8, !dbg !15038
  br label %195, !dbg !15038

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12365, metadata !DIExpression()), !dbg !15039
  store i64 0, i64* %12, align 8, !dbg !15039
  %59 = load i8, i8* %10, align 1, !dbg !15040
  %60 = trunc i8 %59 to i1, !dbg !15040
  br i1 %60, label %86, label %61, !dbg !15041

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12370, metadata !DIExpression()), !dbg !15042
  %62 = load i8, i8* %11, align 1, !dbg !15043
  %63 = trunc i8 %62 to i1, !dbg !15043
  br i1 %63, label %64, label %68, !dbg !15043

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !15044
  %66 = load i32, i32* %5, align 4, !dbg !15045
  %67 = udiv i32 %65, %66, !dbg !15046
  br label %70, !dbg !15043

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !15047
  br label %70, !dbg !15043

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !15043
  store i32 %71, i32* %13, align 4, !dbg !15042
  %72 = load i8, i8* %8, align 1, !dbg !15048
  %73 = trunc i8 %72 to i1, !dbg !15048
  br i1 %73, label %74, label %78, !dbg !15049

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !15050
  %76 = sub i32 %75, 1, !dbg !15051
  %77 = zext i32 %76 to i64, !dbg !15050
  store i64 %77, i64* %12, align 8, !dbg !15052
  br label %78, !dbg !15053

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !15054
  %80 = trunc i8 %79 to i1, !dbg !15054
  br i1 %80, label %81, label %85, !dbg !15055

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !15056
  %83 = udiv i32 %82, 2, !dbg !15057
  %84 = zext i32 %83 to i64, !dbg !15056
  store i64 %84, i64* %12, align 8, !dbg !15058
  br label %85, !dbg !15059

85:                                               ; preds = %81, %78
  br label %86, !dbg !15060

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !15061
  %88 = trunc i8 %87 to i1, !dbg !15061
  br i1 %88, label %89, label %114, !dbg !15062

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !15063
  %91 = load i64, i64* %3, align 8, !dbg !15064
  %92 = add i64 %91, %90, !dbg !15064
  store i64 %92, i64* %3, align 8, !dbg !15064
  %93 = load i8, i8* %7, align 1, !dbg !15065
  %94 = trunc i8 %93 to i1, !dbg !15065
  br i1 %94, label %95, label %106, !dbg !15066

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !15067
  %97 = icmp ult i64 %96, 4294967296, !dbg !15068
  br i1 %97, label %98, label %106, !dbg !15069

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !15070
  %100 = trunc i64 %99 to i32, !dbg !15071
  %101 = load i32, i32* %4, align 4, !dbg !15072
  %102 = load i32, i32* %5, align 4, !dbg !15073
  %103 = udiv i32 %101, %102, !dbg !15074
  %104 = udiv i32 %100, %103, !dbg !15075
  %105 = zext i32 %104 to i64, !dbg !15076
  store i64 %105, i64* %2, align 8, !dbg !15077
  br label %195, !dbg !15077

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !15078
  %108 = load i32, i32* %4, align 4, !dbg !15079
  %109 = zext i32 %108 to i64, !dbg !15080
  %110 = load i32, i32* %5, align 4, !dbg !15081
  %111 = zext i32 %110 to i64, !dbg !15081
  %112 = udiv i64 %109, %111, !dbg !15082
  %113 = udiv i64 %107, %112, !dbg !15083
  store i64 %113, i64* %2, align 8, !dbg !15084
  br label %195, !dbg !15084

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !15085
  %116 = trunc i8 %115 to i1, !dbg !15085
  br i1 %116, label %117, label %136, !dbg !15086

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !15087
  %119 = trunc i8 %118 to i1, !dbg !15087
  br i1 %119, label %120, label %128, !dbg !15088

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !15089
  %122 = trunc i64 %121 to i32, !dbg !15090
  %123 = load i32, i32* %5, align 4, !dbg !15091
  %124 = load i32, i32* %4, align 4, !dbg !15092
  %125 = udiv i32 %123, %124, !dbg !15093
  %126 = mul i32 %122, %125, !dbg !15094
  %127 = zext i32 %126 to i64, !dbg !15095
  store i64 %127, i64* %2, align 8, !dbg !15096
  br label %195, !dbg !15096

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !15097
  %130 = load i32, i32* %5, align 4, !dbg !15098
  %131 = zext i32 %130 to i64, !dbg !15099
  %132 = load i32, i32* %4, align 4, !dbg !15100
  %133 = zext i32 %132 to i64, !dbg !15100
  %134 = udiv i64 %131, %133, !dbg !15101
  %135 = mul i64 %129, %134, !dbg !15102
  store i64 %135, i64* %2, align 8, !dbg !15103
  br label %195, !dbg !15103

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !15104
  %138 = trunc i8 %137 to i1, !dbg !15104
  br i1 %138, label %139, label %151, !dbg !15105

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !15106
  %141 = load i32, i32* %5, align 4, !dbg !15107
  %142 = zext i32 %141 to i64, !dbg !15107
  %143 = mul i64 %140, %142, !dbg !15108
  %144 = load i64, i64* %12, align 8, !dbg !15109
  %145 = add i64 %143, %144, !dbg !15110
  %146 = load i32, i32* %4, align 4, !dbg !15111
  %147 = zext i32 %146 to i64, !dbg !15111
  %148 = udiv i64 %145, %147, !dbg !15112
  %149 = trunc i64 %148 to i32, !dbg !15113
  %150 = zext i32 %149 to i64, !dbg !15113
  store i64 %150, i64* %2, align 8, !dbg !15114
  br label %195, !dbg !15114

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !15115
  %153 = trunc i8 %152 to i1, !dbg !15115
  br i1 %153, label %154, label %174, !dbg !15116

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !15117
  %156 = zext i32 %155 to i64, !dbg !15117
  %157 = mul i64 31536000, %156, !dbg !15117
  %158 = add i64 %157, 4294967294, !dbg !15117
  %159 = udiv i64 %158, 4294967295, !dbg !15117
  %160 = load i32, i32* %5, align 4, !dbg !15117
  %161 = zext i32 %160 to i64, !dbg !15117
  %162 = mul i64 %159, %161, !dbg !15117
  %163 = icmp ule i64 %162, 4294967295, !dbg !15117
  br i1 %163, label %164, label %174, !dbg !15118

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !15119
  %166 = load i32, i32* %5, align 4, !dbg !15120
  %167 = zext i32 %166 to i64, !dbg !15120
  %168 = mul i64 %165, %167, !dbg !15121
  %169 = load i64, i64* %12, align 8, !dbg !15122
  %170 = add i64 %168, %169, !dbg !15123
  %171 = load i32, i32* %4, align 4, !dbg !15124
  %172 = zext i32 %171 to i64, !dbg !15124
  %173 = udiv i64 %170, %172, !dbg !15125
  store i64 %173, i64* %2, align 8, !dbg !15126
  br label %195, !dbg !15126

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !15127
  %176 = load i32, i32* %4, align 4, !dbg !15128
  %177 = zext i32 %176 to i64, !dbg !15128
  %178 = udiv i64 %175, %177, !dbg !15129
  %179 = load i32, i32* %5, align 4, !dbg !15130
  %180 = zext i32 %179 to i64, !dbg !15130
  %181 = mul i64 %178, %180, !dbg !15131
  %182 = load i64, i64* %3, align 8, !dbg !15132
  %183 = load i32, i32* %4, align 4, !dbg !15133
  %184 = zext i32 %183 to i64, !dbg !15133
  %185 = urem i64 %182, %184, !dbg !15134
  %186 = load i32, i32* %5, align 4, !dbg !15135
  %187 = zext i32 %186 to i64, !dbg !15135
  %188 = mul i64 %185, %187, !dbg !15136
  %189 = load i64, i64* %12, align 8, !dbg !15137
  %190 = add i64 %188, %189, !dbg !15138
  %191 = load i32, i32* %4, align 4, !dbg !15139
  %192 = zext i32 %191 to i64, !dbg !15139
  %193 = udiv i64 %190, %192, !dbg !15140
  %194 = add i64 %181, %193, !dbg !15141
  store i64 %194, i64* %2, align 8, !dbg !15142
  br label %195, !dbg !15142

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !15143
  ret i64 %196, !dbg !15144
}

; Function Attrs: noinline nounwind optnone
define internal void @k_yield() #1 !dbg !15145 {
  br label %1, !dbg !15146

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !15147, !srcloc !15149
  br label %2, !dbg !15147

2:                                                ; preds = %1
  call void @z_impl_k_yield() #10, !dbg !15150
  ret void, !dbg !15151
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) #1 !dbg !15152 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15155, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15157, metadata !DIExpression()), !dbg !15158
  br label %4, !dbg !15159

4:                                                ; preds = %1
  br label %5, !dbg !15160

5:                                                ; preds = %4
  %6 = load i32, i32* %2, align 4, !dbg !15162
  %7 = sext i32 %6 to i64, !dbg !15162
  %8 = call i64 @k_us_to_ticks_ceil64(i64 noundef %7) #10, !dbg !15163
  %9 = trunc i64 %8 to i32, !dbg !15163
  store i32 %9, i32* %3, align 4, !dbg !15164
  %10 = load i32, i32* %3, align 4, !dbg !15165
  %11 = sext i32 %10 to i64, !dbg !15165
  %12 = call i32 @z_tick_sleep(i64 noundef %11) #10, !dbg !15166
  store i32 %12, i32* %3, align 4, !dbg !15167
  br label %13, !dbg !15168

13:                                               ; preds = %5
  br label %14, !dbg !15169

14:                                               ; preds = %13
  %15 = load i32, i32* %3, align 4, !dbg !15171
  %16 = sext i32 %15 to i64, !dbg !15171
  %17 = call i64 @k_ticks_to_us_floor64(i64 noundef %16) #10, !dbg !15172
  %18 = trunc i64 %17 to i32, !dbg !15172
  ret i32 %18, !dbg !15173
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_us_to_ticks_ceil64(i64 noundef %0) #1 !dbg !15174 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !15175, metadata !DIExpression()), !dbg !15176
  %15 = load i64, i64* %14, align 8, !dbg !15177
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12312, metadata !DIExpression()), !dbg !15178
  store i32 1000000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12316, metadata !DIExpression()), !dbg !15180
  store i32 10000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12318, metadata !DIExpression()), !dbg !15181
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12320, metadata !DIExpression()), !dbg !15182
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12322, metadata !DIExpression()), !dbg !15183
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12324, metadata !DIExpression()), !dbg !15184
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12326, metadata !DIExpression()), !dbg !15185
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12328, metadata !DIExpression()), !dbg !15186
  %16 = load i8, i8* %6, align 1, !dbg !15187
  %17 = trunc i8 %16 to i1, !dbg !15187
  br i1 %17, label %18, label %27, !dbg !15188

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !15189
  %20 = load i32, i32* %4, align 4, !dbg !15190
  %21 = icmp ugt i32 %19, %20, !dbg !15191
  br i1 %21, label %22, label %27, !dbg !15192

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !15193
  %24 = load i32, i32* %4, align 4, !dbg !15194
  %25 = urem i32 %23, %24, !dbg !15195
  %26 = icmp eq i32 %25, 0, !dbg !15196
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !15197
  %29 = zext i1 %28 to i8, !dbg !15186
  store i8 %29, i8* %10, align 1, !dbg !15186
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12341, metadata !DIExpression()), !dbg !15198
  %30 = load i8, i8* %6, align 1, !dbg !15199
  %31 = trunc i8 %30 to i1, !dbg !15199
  br i1 %31, label %32, label %41, !dbg !15200

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !15201
  %34 = load i32, i32* %5, align 4, !dbg !15202
  %35 = icmp ugt i32 %33, %34, !dbg !15203
  br i1 %35, label %36, label %41, !dbg !15204

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !15205
  %38 = load i32, i32* %5, align 4, !dbg !15206
  %39 = urem i32 %37, %38, !dbg !15207
  %40 = icmp eq i32 %39, 0, !dbg !15208
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !15197
  %43 = zext i1 %42 to i8, !dbg !15198
  store i8 %43, i8* %11, align 1, !dbg !15198
  %44 = load i32, i32* %4, align 4, !dbg !15209
  %45 = load i32, i32* %5, align 4, !dbg !15210
  %46 = icmp eq i32 %44, %45, !dbg !15211
  br i1 %46, label %47, label %58, !dbg !15212

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !15213
  %49 = trunc i8 %48 to i1, !dbg !15213
  br i1 %49, label %50, label %54, !dbg !15213

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !15214
  %52 = trunc i64 %51 to i32, !dbg !15215
  %53 = zext i32 %52 to i64, !dbg !15216
  br label %56, !dbg !15213

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !15217
  br label %56, !dbg !15213

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !15213
  store i64 %57, i64* %2, align 8, !dbg !15218
  br label %195, !dbg !15218

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12365, metadata !DIExpression()), !dbg !15219
  store i64 0, i64* %12, align 8, !dbg !15219
  %59 = load i8, i8* %10, align 1, !dbg !15220
  %60 = trunc i8 %59 to i1, !dbg !15220
  br i1 %60, label %86, label %61, !dbg !15221

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12370, metadata !DIExpression()), !dbg !15222
  %62 = load i8, i8* %11, align 1, !dbg !15223
  %63 = trunc i8 %62 to i1, !dbg !15223
  br i1 %63, label %64, label %68, !dbg !15223

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !15224
  %66 = load i32, i32* %5, align 4, !dbg !15225
  %67 = udiv i32 %65, %66, !dbg !15226
  br label %70, !dbg !15223

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !15227
  br label %70, !dbg !15223

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !15223
  store i32 %71, i32* %13, align 4, !dbg !15222
  %72 = load i8, i8* %8, align 1, !dbg !15228
  %73 = trunc i8 %72 to i1, !dbg !15228
  br i1 %73, label %74, label %78, !dbg !15229

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !15230
  %76 = sub i32 %75, 1, !dbg !15231
  %77 = zext i32 %76 to i64, !dbg !15230
  store i64 %77, i64* %12, align 8, !dbg !15232
  br label %78, !dbg !15233

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !15234
  %80 = trunc i8 %79 to i1, !dbg !15234
  br i1 %80, label %81, label %85, !dbg !15235

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !15236
  %83 = udiv i32 %82, 2, !dbg !15237
  %84 = zext i32 %83 to i64, !dbg !15236
  store i64 %84, i64* %12, align 8, !dbg !15238
  br label %85, !dbg !15239

85:                                               ; preds = %81, %78
  br label %86, !dbg !15240

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !15241
  %88 = trunc i8 %87 to i1, !dbg !15241
  br i1 %88, label %89, label %114, !dbg !15242

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !15243
  %91 = load i64, i64* %3, align 8, !dbg !15244
  %92 = add i64 %91, %90, !dbg !15244
  store i64 %92, i64* %3, align 8, !dbg !15244
  %93 = load i8, i8* %7, align 1, !dbg !15245
  %94 = trunc i8 %93 to i1, !dbg !15245
  br i1 %94, label %95, label %106, !dbg !15246

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !15247
  %97 = icmp ult i64 %96, 4294967296, !dbg !15248
  br i1 %97, label %98, label %106, !dbg !15249

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !15250
  %100 = trunc i64 %99 to i32, !dbg !15251
  %101 = load i32, i32* %4, align 4, !dbg !15252
  %102 = load i32, i32* %5, align 4, !dbg !15253
  %103 = udiv i32 %101, %102, !dbg !15254
  %104 = udiv i32 %100, %103, !dbg !15255
  %105 = zext i32 %104 to i64, !dbg !15256
  store i64 %105, i64* %2, align 8, !dbg !15257
  br label %195, !dbg !15257

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !15258
  %108 = load i32, i32* %4, align 4, !dbg !15259
  %109 = zext i32 %108 to i64, !dbg !15260
  %110 = load i32, i32* %5, align 4, !dbg !15261
  %111 = zext i32 %110 to i64, !dbg !15261
  %112 = udiv i64 %109, %111, !dbg !15262
  %113 = udiv i64 %107, %112, !dbg !15263
  store i64 %113, i64* %2, align 8, !dbg !15264
  br label %195, !dbg !15264

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !15265
  %116 = trunc i8 %115 to i1, !dbg !15265
  br i1 %116, label %117, label %136, !dbg !15266

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !15267
  %119 = trunc i8 %118 to i1, !dbg !15267
  br i1 %119, label %120, label %128, !dbg !15268

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !15269
  %122 = trunc i64 %121 to i32, !dbg !15270
  %123 = load i32, i32* %5, align 4, !dbg !15271
  %124 = load i32, i32* %4, align 4, !dbg !15272
  %125 = udiv i32 %123, %124, !dbg !15273
  %126 = mul i32 %122, %125, !dbg !15274
  %127 = zext i32 %126 to i64, !dbg !15275
  store i64 %127, i64* %2, align 8, !dbg !15276
  br label %195, !dbg !15276

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !15277
  %130 = load i32, i32* %5, align 4, !dbg !15278
  %131 = zext i32 %130 to i64, !dbg !15279
  %132 = load i32, i32* %4, align 4, !dbg !15280
  %133 = zext i32 %132 to i64, !dbg !15280
  %134 = udiv i64 %131, %133, !dbg !15281
  %135 = mul i64 %129, %134, !dbg !15282
  store i64 %135, i64* %2, align 8, !dbg !15283
  br label %195, !dbg !15283

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !15284
  %138 = trunc i8 %137 to i1, !dbg !15284
  br i1 %138, label %139, label %151, !dbg !15285

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !15286
  %141 = load i32, i32* %5, align 4, !dbg !15287
  %142 = zext i32 %141 to i64, !dbg !15287
  %143 = mul i64 %140, %142, !dbg !15288
  %144 = load i64, i64* %12, align 8, !dbg !15289
  %145 = add i64 %143, %144, !dbg !15290
  %146 = load i32, i32* %4, align 4, !dbg !15291
  %147 = zext i32 %146 to i64, !dbg !15291
  %148 = udiv i64 %145, %147, !dbg !15292
  %149 = trunc i64 %148 to i32, !dbg !15293
  %150 = zext i32 %149 to i64, !dbg !15293
  store i64 %150, i64* %2, align 8, !dbg !15294
  br label %195, !dbg !15294

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !15295
  %153 = trunc i8 %152 to i1, !dbg !15295
  br i1 %153, label %154, label %174, !dbg !15296

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !15297
  %156 = zext i32 %155 to i64, !dbg !15297
  %157 = mul i64 31536000, %156, !dbg !15297
  %158 = add i64 %157, 4294967294, !dbg !15297
  %159 = udiv i64 %158, 4294967295, !dbg !15297
  %160 = load i32, i32* %5, align 4, !dbg !15297
  %161 = zext i32 %160 to i64, !dbg !15297
  %162 = mul i64 %159, %161, !dbg !15297
  %163 = icmp ule i64 %162, 4294967295, !dbg !15297
  br i1 %163, label %164, label %174, !dbg !15298

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !15299
  %166 = load i32, i32* %5, align 4, !dbg !15300
  %167 = zext i32 %166 to i64, !dbg !15300
  %168 = mul i64 %165, %167, !dbg !15301
  %169 = load i64, i64* %12, align 8, !dbg !15302
  %170 = add i64 %168, %169, !dbg !15303
  %171 = load i32, i32* %4, align 4, !dbg !15304
  %172 = zext i32 %171 to i64, !dbg !15304
  %173 = udiv i64 %170, %172, !dbg !15305
  store i64 %173, i64* %2, align 8, !dbg !15306
  br label %195, !dbg !15306

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !15307
  %176 = load i32, i32* %4, align 4, !dbg !15308
  %177 = zext i32 %176 to i64, !dbg !15308
  %178 = udiv i64 %175, %177, !dbg !15309
  %179 = load i32, i32* %5, align 4, !dbg !15310
  %180 = zext i32 %179 to i64, !dbg !15310
  %181 = mul i64 %178, %180, !dbg !15311
  %182 = load i64, i64* %3, align 8, !dbg !15312
  %183 = load i32, i32* %4, align 4, !dbg !15313
  %184 = zext i32 %183 to i64, !dbg !15313
  %185 = urem i64 %182, %184, !dbg !15314
  %186 = load i32, i32* %5, align 4, !dbg !15315
  %187 = zext i32 %186 to i64, !dbg !15315
  %188 = mul i64 %185, %187, !dbg !15316
  %189 = load i64, i64* %12, align 8, !dbg !15317
  %190 = add i64 %188, %189, !dbg !15318
  %191 = load i32, i32* %4, align 4, !dbg !15319
  %192 = zext i32 %191 to i64, !dbg !15319
  %193 = udiv i64 %190, %192, !dbg !15320
  %194 = add i64 %181, %193, !dbg !15321
  store i64 %194, i64* %2, align 8, !dbg !15322
  br label %195, !dbg !15322

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !15323
  ret i64 %196, !dbg !15324
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_us_floor64(i64 noundef %0) #1 !dbg !15325 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !15326, metadata !DIExpression()), !dbg !15327
  %15 = load i64, i64* %14, align 8, !dbg !15328
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12312, metadata !DIExpression()), !dbg !15329
  store i32 10000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12316, metadata !DIExpression()), !dbg !15331
  store i32 1000000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12318, metadata !DIExpression()), !dbg !15332
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12320, metadata !DIExpression()), !dbg !15333
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12322, metadata !DIExpression()), !dbg !15334
  store i8 0, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12324, metadata !DIExpression()), !dbg !15335
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12326, metadata !DIExpression()), !dbg !15336
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12328, metadata !DIExpression()), !dbg !15337
  %16 = load i8, i8* %6, align 1, !dbg !15338
  %17 = trunc i8 %16 to i1, !dbg !15338
  br i1 %17, label %18, label %27, !dbg !15339

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !15340
  %20 = load i32, i32* %4, align 4, !dbg !15341
  %21 = icmp ugt i32 %19, %20, !dbg !15342
  br i1 %21, label %22, label %27, !dbg !15343

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !15344
  %24 = load i32, i32* %4, align 4, !dbg !15345
  %25 = urem i32 %23, %24, !dbg !15346
  %26 = icmp eq i32 %25, 0, !dbg !15347
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !15348
  %29 = zext i1 %28 to i8, !dbg !15337
  store i8 %29, i8* %10, align 1, !dbg !15337
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12341, metadata !DIExpression()), !dbg !15349
  %30 = load i8, i8* %6, align 1, !dbg !15350
  %31 = trunc i8 %30 to i1, !dbg !15350
  br i1 %31, label %32, label %41, !dbg !15351

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !15352
  %34 = load i32, i32* %5, align 4, !dbg !15353
  %35 = icmp ugt i32 %33, %34, !dbg !15354
  br i1 %35, label %36, label %41, !dbg !15355

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !15356
  %38 = load i32, i32* %5, align 4, !dbg !15357
  %39 = urem i32 %37, %38, !dbg !15358
  %40 = icmp eq i32 %39, 0, !dbg !15359
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !15348
  %43 = zext i1 %42 to i8, !dbg !15349
  store i8 %43, i8* %11, align 1, !dbg !15349
  %44 = load i32, i32* %4, align 4, !dbg !15360
  %45 = load i32, i32* %5, align 4, !dbg !15361
  %46 = icmp eq i32 %44, %45, !dbg !15362
  br i1 %46, label %47, label %58, !dbg !15363

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !15364
  %49 = trunc i8 %48 to i1, !dbg !15364
  br i1 %49, label %50, label %54, !dbg !15364

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !15365
  %52 = trunc i64 %51 to i32, !dbg !15366
  %53 = zext i32 %52 to i64, !dbg !15367
  br label %56, !dbg !15364

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !15368
  br label %56, !dbg !15364

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !15364
  store i64 %57, i64* %2, align 8, !dbg !15369
  br label %195, !dbg !15369

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12365, metadata !DIExpression()), !dbg !15370
  store i64 0, i64* %12, align 8, !dbg !15370
  %59 = load i8, i8* %10, align 1, !dbg !15371
  %60 = trunc i8 %59 to i1, !dbg !15371
  br i1 %60, label %86, label %61, !dbg !15372

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12370, metadata !DIExpression()), !dbg !15373
  %62 = load i8, i8* %11, align 1, !dbg !15374
  %63 = trunc i8 %62 to i1, !dbg !15374
  br i1 %63, label %64, label %68, !dbg !15374

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !15375
  %66 = load i32, i32* %5, align 4, !dbg !15376
  %67 = udiv i32 %65, %66, !dbg !15377
  br label %70, !dbg !15374

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !15378
  br label %70, !dbg !15374

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !15374
  store i32 %71, i32* %13, align 4, !dbg !15373
  %72 = load i8, i8* %8, align 1, !dbg !15379
  %73 = trunc i8 %72 to i1, !dbg !15379
  br i1 %73, label %74, label %78, !dbg !15380

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !15381
  %76 = sub i32 %75, 1, !dbg !15382
  %77 = zext i32 %76 to i64, !dbg !15381
  store i64 %77, i64* %12, align 8, !dbg !15383
  br label %78, !dbg !15384

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !15385
  %80 = trunc i8 %79 to i1, !dbg !15385
  br i1 %80, label %81, label %85, !dbg !15386

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !15387
  %83 = udiv i32 %82, 2, !dbg !15388
  %84 = zext i32 %83 to i64, !dbg !15387
  store i64 %84, i64* %12, align 8, !dbg !15389
  br label %85, !dbg !15390

85:                                               ; preds = %81, %78
  br label %86, !dbg !15391

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !15392
  %88 = trunc i8 %87 to i1, !dbg !15392
  br i1 %88, label %89, label %114, !dbg !15393

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !15394
  %91 = load i64, i64* %3, align 8, !dbg !15395
  %92 = add i64 %91, %90, !dbg !15395
  store i64 %92, i64* %3, align 8, !dbg !15395
  %93 = load i8, i8* %7, align 1, !dbg !15396
  %94 = trunc i8 %93 to i1, !dbg !15396
  br i1 %94, label %95, label %106, !dbg !15397

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !15398
  %97 = icmp ult i64 %96, 4294967296, !dbg !15399
  br i1 %97, label %98, label %106, !dbg !15400

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !15401
  %100 = trunc i64 %99 to i32, !dbg !15402
  %101 = load i32, i32* %4, align 4, !dbg !15403
  %102 = load i32, i32* %5, align 4, !dbg !15404
  %103 = udiv i32 %101, %102, !dbg !15405
  %104 = udiv i32 %100, %103, !dbg !15406
  %105 = zext i32 %104 to i64, !dbg !15407
  store i64 %105, i64* %2, align 8, !dbg !15408
  br label %195, !dbg !15408

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !15409
  %108 = load i32, i32* %4, align 4, !dbg !15410
  %109 = zext i32 %108 to i64, !dbg !15411
  %110 = load i32, i32* %5, align 4, !dbg !15412
  %111 = zext i32 %110 to i64, !dbg !15412
  %112 = udiv i64 %109, %111, !dbg !15413
  %113 = udiv i64 %107, %112, !dbg !15414
  store i64 %113, i64* %2, align 8, !dbg !15415
  br label %195, !dbg !15415

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !15416
  %116 = trunc i8 %115 to i1, !dbg !15416
  br i1 %116, label %117, label %136, !dbg !15417

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !15418
  %119 = trunc i8 %118 to i1, !dbg !15418
  br i1 %119, label %120, label %128, !dbg !15419

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !15420
  %122 = trunc i64 %121 to i32, !dbg !15421
  %123 = load i32, i32* %5, align 4, !dbg !15422
  %124 = load i32, i32* %4, align 4, !dbg !15423
  %125 = udiv i32 %123, %124, !dbg !15424
  %126 = mul i32 %122, %125, !dbg !15425
  %127 = zext i32 %126 to i64, !dbg !15426
  store i64 %127, i64* %2, align 8, !dbg !15427
  br label %195, !dbg !15427

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !15428
  %130 = load i32, i32* %5, align 4, !dbg !15429
  %131 = zext i32 %130 to i64, !dbg !15430
  %132 = load i32, i32* %4, align 4, !dbg !15431
  %133 = zext i32 %132 to i64, !dbg !15431
  %134 = udiv i64 %131, %133, !dbg !15432
  %135 = mul i64 %129, %134, !dbg !15433
  store i64 %135, i64* %2, align 8, !dbg !15434
  br label %195, !dbg !15434

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !15435
  %138 = trunc i8 %137 to i1, !dbg !15435
  br i1 %138, label %139, label %151, !dbg !15436

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !15437
  %141 = load i32, i32* %5, align 4, !dbg !15438
  %142 = zext i32 %141 to i64, !dbg !15438
  %143 = mul i64 %140, %142, !dbg !15439
  %144 = load i64, i64* %12, align 8, !dbg !15440
  %145 = add i64 %143, %144, !dbg !15441
  %146 = load i32, i32* %4, align 4, !dbg !15442
  %147 = zext i32 %146 to i64, !dbg !15442
  %148 = udiv i64 %145, %147, !dbg !15443
  %149 = trunc i64 %148 to i32, !dbg !15444
  %150 = zext i32 %149 to i64, !dbg !15444
  store i64 %150, i64* %2, align 8, !dbg !15445
  br label %195, !dbg !15445

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !15446
  %153 = trunc i8 %152 to i1, !dbg !15446
  br i1 %153, label %154, label %174, !dbg !15447

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !15448
  %156 = zext i32 %155 to i64, !dbg !15448
  %157 = mul i64 31536000, %156, !dbg !15448
  %158 = add i64 %157, 4294967294, !dbg !15448
  %159 = udiv i64 %158, 4294967295, !dbg !15448
  %160 = load i32, i32* %5, align 4, !dbg !15448
  %161 = zext i32 %160 to i64, !dbg !15448
  %162 = mul i64 %159, %161, !dbg !15448
  %163 = icmp ule i64 %162, 4294967295, !dbg !15448
  br i1 %163, label %164, label %174, !dbg !15449

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !15450
  %166 = load i32, i32* %5, align 4, !dbg !15451
  %167 = zext i32 %166 to i64, !dbg !15451
  %168 = mul i64 %165, %167, !dbg !15452
  %169 = load i64, i64* %12, align 8, !dbg !15453
  %170 = add i64 %168, %169, !dbg !15454
  %171 = load i32, i32* %4, align 4, !dbg !15455
  %172 = zext i32 %171 to i64, !dbg !15455
  %173 = udiv i64 %170, %172, !dbg !15456
  store i64 %173, i64* %2, align 8, !dbg !15457
  br label %195, !dbg !15457

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !15458
  %176 = load i32, i32* %4, align 4, !dbg !15459
  %177 = zext i32 %176 to i64, !dbg !15459
  %178 = udiv i64 %175, %177, !dbg !15460
  %179 = load i32, i32* %5, align 4, !dbg !15461
  %180 = zext i32 %179 to i64, !dbg !15461
  %181 = mul i64 %178, %180, !dbg !15462
  %182 = load i64, i64* %3, align 8, !dbg !15463
  %183 = load i32, i32* %4, align 4, !dbg !15464
  %184 = zext i32 %183 to i64, !dbg !15464
  %185 = urem i64 %182, %184, !dbg !15465
  %186 = load i32, i32* %5, align 4, !dbg !15466
  %187 = zext i32 %186 to i64, !dbg !15466
  %188 = mul i64 %185, %187, !dbg !15467
  %189 = load i64, i64* %12, align 8, !dbg !15468
  %190 = add i64 %188, %189, !dbg !15469
  %191 = load i32, i32* %4, align 4, !dbg !15470
  %192 = zext i32 %191 to i64, !dbg !15470
  %193 = udiv i64 %190, %192, !dbg !15471
  %194 = add i64 %181, %193, !dbg !15472
  store i64 %194, i64* %2, align 8, !dbg !15473
  br label %195, !dbg !15473

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !15474
  ret i64 %196, !dbg !15475
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_wakeup(%struct.k_thread.203* noundef %0) #1 !dbg !15476 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !15477, metadata !DIExpression()), !dbg !15478
  br label %4, !dbg !15479

4:                                                ; preds = %1
  br label %5, !dbg !15480

5:                                                ; preds = %4
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15482
  %7 = call zeroext i1 @z_is_thread_pending(%struct.k_thread.203* noundef %6) #10, !dbg !15484
  br i1 %7, label %8, label %9, !dbg !15485

8:                                                ; preds = %5
  br label %31, !dbg !15486

9:                                                ; preds = %5
  %10 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15488
  %11 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %10) #10, !dbg !15490
  %12 = icmp slt i32 %11, 0, !dbg !15491
  br i1 %12, label %13, label %22, !dbg !15492

13:                                               ; preds = %9
  %14 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15493
  %15 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %14, i32 0, i32 0, !dbg !15496
  %16 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %15, i32 0, i32 3, !dbg !15497
  %17 = load i8, i8* %16, align 1, !dbg !15497
  %18 = zext i8 %17 to i32, !dbg !15493
  %19 = icmp ne i32 %18, 16, !dbg !15498
  br i1 %19, label %20, label %21, !dbg !15499

20:                                               ; preds = %13
  br label %31, !dbg !15500

21:                                               ; preds = %13
  br label %22, !dbg !15502

22:                                               ; preds = %21, %9
  %23 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15503
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.203* noundef %23) #10, !dbg !15504
  %24 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15505
  call void @z_ready_thread(%struct.k_thread.203* noundef %24) #10, !dbg !15506
  call void @flag_ipi() #10, !dbg !15507
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13378, metadata !DIExpression()) #9, !dbg !15508
  %25 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !15512, !srcloc !13385
  store i32 %25, i32* %2, align 4, !dbg !15512
  %26 = load i32, i32* %2, align 4, !dbg !15513
  %27 = icmp ne i32 %26, 0, !dbg !15514
  %28 = zext i1 %27 to i64, !dbg !15514
  %29 = select i1 %27, i32 1, i32 0, !dbg !15514
  br i1 %27, label %31, label %30, !dbg !15515

30:                                               ; preds = %22
  call void @z_reschedule_unlocked() #10, !dbg !15516
  br label %31, !dbg !15518

31:                                               ; preds = %8, %20, %30, %22
  ret void, !dbg !15519
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_pending(%struct.k_thread.203* noundef %0) #1 !dbg !15520 {
  %2 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !15521, metadata !DIExpression()), !dbg !15522
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !15523
  %4 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %3, i32 0, i32 0, !dbg !15524
  %5 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %4, i32 0, i32 3, !dbg !15525
  %6 = load i8, i8* %5, align 1, !dbg !15525
  %7 = zext i8 %6 to i32, !dbg !15523
  %8 = and i32 %7, 2, !dbg !15526
  %9 = icmp ne i32 %8, 0, !dbg !15527
  ret i1 %9, !dbg !15528
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.203* @z_impl_z_current_get() #1 !dbg !15529 {
  %1 = alloca %struct.k_thread.203*, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %1, metadata !15532, metadata !DIExpression()), !dbg !15533
  %2 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15534
  store %struct.k_thread.203* %2, %struct.k_thread.203** %1, align 4, !dbg !15533
  %3 = load %struct.k_thread.203*, %struct.k_thread.203** %1, align 4, !dbg !15535
  ret %struct.k_thread.203* %3, !dbg !15536
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_is_preempt_thread() #1 !dbg !15537 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !13378, metadata !DIExpression()) #9, !dbg !15538
  %2 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !15541, !srcloc !13385
  store i32 %2, i32* %1, align 4, !dbg !15541
  %3 = load i32, i32* %1, align 4, !dbg !15542
  %4 = icmp ne i32 %3, 0, !dbg !15543
  %5 = zext i1 %4 to i64, !dbg !15543
  %6 = select i1 %4, i32 1, i32 0, !dbg !15543
  br i1 %4, label %11, label %7, !dbg !15544

7:                                                ; preds = %0
  %8 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15545
  %9 = call i32 @is_preempt(%struct.k_thread.203* noundef %8) #10, !dbg !15546
  %10 = icmp ne i32 %9, 0, !dbg !15544
  br label %11

11:                                               ; preds = %7, %0
  %12 = phi i1 [ false, %0 ], [ %10, %7 ], !dbg !15547
  %13 = zext i1 %12 to i32, !dbg !15544
  ret i32 %13, !dbg !15548
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_abort(%struct.k_thread.203* noundef %0) #1 !dbg !15549 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %struct.k_spinlock.13*, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %union.anon.68, align 4
  %17 = alloca %struct.k_spinlock.13*, align 4
  %18 = alloca %struct.k_thread.203*, align 4
  %19 = alloca %union.anon.68, align 4
  %20 = alloca i32, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %18, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %18, metadata !15550, metadata !DIExpression()), !dbg !15551
  call void @llvm.dbg.declare(metadata %union.anon.68* %19, metadata !15552, metadata !DIExpression()), !dbg !15553
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %17, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %17, metadata !12240, metadata !DIExpression()) #9, !dbg !15554
  %21 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %17, align 4, !dbg !15556
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !12248, metadata !DIExpression()) #9, !dbg !15557
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12250, metadata !DIExpression()) #9, !dbg !15558
  %22 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15560, !srcloc !12255
  store i32 %22, i32* %3, align 4, !dbg !15560
  %23 = load i32, i32* %3, align 4, !dbg !15561
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !15562
  store i32 %23, i32* %24, align 4, !dbg !15563
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !15564
  %26 = load i32, i32* %25, align 4, !dbg !15564
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !15565
  store i32 %26, i32* %27, align 4, !dbg !15565
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15566
  %29 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %28, i32 0, i32 0, !dbg !15568
  %30 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %29, i32 0, i32 2, !dbg !15569
  %31 = load i8, i8* %30, align 4, !dbg !15569
  %32 = zext i8 %31 to i32, !dbg !15566
  %33 = and i32 %32, 1, !dbg !15570
  %34 = icmp ne i32 %33, 0, !dbg !15571
  br i1 %34, label %35, label %52, !dbg !15572

35:                                               ; preds = %1
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !15573
  %37 = bitcast i32* %36 to [1 x i32]*, !dbg !15573
  %38 = load [1 x i32], [1 x i32]* %37, align 4, !dbg !15573
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0
  %40 = bitcast i32* %39 to [1 x i32]*
  store [1 x i32] %38, [1 x i32]* %40, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !12280, metadata !DIExpression()) #9, !dbg !15575
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !12286, metadata !DIExpression()) #9, !dbg !15577
  %41 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !15578
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !15579
  %43 = load i32, i32* %42, align 4, !dbg !15579
  store i32 %43, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12290, metadata !DIExpression()) #9, !dbg !15580
  %44 = load i32, i32* %6, align 4, !dbg !15582
  %45 = icmp ne i32 %44, 0, !dbg !15583
  br i1 %45, label %46, label %47, !dbg !15584

46:                                               ; preds = %35
  br label %48, !dbg !15585

47:                                               ; preds = %35
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15586, !srcloc !12301
  br label %48, !dbg !15587

48:                                               ; preds = %46, %47
  call void @llvm.dbg.declare(metadata i32* %20, metadata !15588, metadata !DIExpression()), !dbg !15589
  store i32 4, i32* %20, align 4, !dbg !15589
  br label %49, !dbg !15589

49:                                               ; preds = %48
  %50 = load i32, i32* %20, align 4, !dbg !15590
  call void asm sideeffect "cpsie i\0A\09svc $1\0A\09", "{r0},i,~{memory}"(i32 %50, i32 2) #9, !dbg !15590, !srcloc !15592
  br label %51, !dbg !15590

51:                                               ; preds = %49
  br label %110, !dbg !15593

52:                                               ; preds = %1
  %53 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15594
  %54 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %53, i32 0, i32 0, !dbg !15596
  %55 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %54, i32 0, i32 3, !dbg !15597
  %56 = load i8, i8* %55, align 1, !dbg !15597
  %57 = zext i8 %56 to i32, !dbg !15594
  %58 = and i32 %57, 8, !dbg !15598
  %59 = icmp ne i32 %58, 0, !dbg !15599
  br i1 %59, label %60, label %74, !dbg !15600

60:                                               ; preds = %52
  %61 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !15601
  %62 = bitcast i32* %61 to [1 x i32]*, !dbg !15601
  %63 = load [1 x i32], [1 x i32]* %62, align 4, !dbg !15601
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0
  %65 = bitcast i32* %64 to [1 x i32]*
  store [1 x i32] %63, [1 x i32]* %65, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %13, metadata !12280, metadata !DIExpression()) #9, !dbg !15603
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !12286, metadata !DIExpression()) #9, !dbg !15605
  %66 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %13, align 4, !dbg !15606
  %67 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !15607
  %68 = load i32, i32* %67, align 4, !dbg !15607
  store i32 %68, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12290, metadata !DIExpression()) #9, !dbg !15608
  %69 = load i32, i32* %5, align 4, !dbg !15610
  %70 = icmp ne i32 %69, 0, !dbg !15611
  br i1 %70, label %71, label %72, !dbg !15612

71:                                               ; preds = %60
  br label %73, !dbg !15613

72:                                               ; preds = %60
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15614, !srcloc !12301
  br label %73, !dbg !15615

73:                                               ; preds = %71, %72
  br label %110, !dbg !15616

74:                                               ; preds = %52
  %75 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15617
  call void @end_thread(%struct.k_thread.203* noundef %75) #10, !dbg !15618
  %76 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15619
  %77 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15621
  %78 = icmp eq %struct.k_thread.203* %76, %77, !dbg !15622
  br i1 %78, label %79, label %96, !dbg !15623

79:                                               ; preds = %74
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13378, metadata !DIExpression()) #9, !dbg !15624
  %80 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !15627, !srcloc !13385
  store i32 %80, i32* %2, align 4, !dbg !15627
  %81 = load i32, i32* %2, align 4, !dbg !15628
  %82 = icmp ne i32 %81, 0, !dbg !15629
  %83 = zext i1 %82 to i64, !dbg !15629
  %84 = select i1 %82, i32 1, i32 0, !dbg !15629
  br i1 %82, label %96, label %85, !dbg !15630

85:                                               ; preds = %79
  %86 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !15631
  %87 = bitcast i32* %86 to [1 x i32]*, !dbg !15631
  %88 = load [1 x i32], [1 x i32]* %87, align 4, !dbg !15631
  %89 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0
  %90 = bitcast i32* %89 to [1 x i32]*
  store [1 x i32] %88, [1 x i32]* %90, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !13326, metadata !DIExpression()) #9, !dbg !15633
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !13332, metadata !DIExpression()) #9, !dbg !15635
  %91 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !15636
  store %struct.k_spinlock.13* %91, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13335, metadata !DIExpression()) #9, !dbg !15637
  %92 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !15639
  %93 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !15640
  %94 = load i32, i32* %93, align 4, !dbg !15640
  %95 = call i32 @z_swap_irqlock(i32 noundef %94) #13, !dbg !15641
  br label %96, !dbg !15642

96:                                               ; preds = %85, %79, %74
  %97 = getelementptr inbounds %union.anon.68, %union.anon.68* %19, i32 0, i32 0, !dbg !15643
  %98 = bitcast i32* %97 to [1 x i32]*, !dbg !15643
  %99 = load [1 x i32], [1 x i32]* %98, align 4, !dbg !15643
  %100 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0
  %101 = bitcast i32* %100 to [1 x i32]*
  store [1 x i32] %99, [1 x i32]* %101, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !12280, metadata !DIExpression()) #9, !dbg !15644
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !12286, metadata !DIExpression()) #9, !dbg !15646
  %102 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !15647
  %103 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !15648
  %104 = load i32, i32* %103, align 4, !dbg !15648
  store i32 %104, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12290, metadata !DIExpression()) #9, !dbg !15649
  %105 = load i32, i32* %4, align 4, !dbg !15651
  %106 = icmp ne i32 %105, 0, !dbg !15652
  br i1 %106, label %107, label %108, !dbg !15653

107:                                              ; preds = %96
  br label %109, !dbg !15654

108:                                              ; preds = %96
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15655, !srcloc !12301
  br label %109, !dbg !15656

109:                                              ; preds = %107, %108
  br label %110, !dbg !15657

110:                                              ; preds = %109, %73, %51
  ret void, !dbg !15657
}

; Function Attrs: noinline nounwind optnone
define internal void @end_thread(%struct.k_thread.203* noundef %0) #1 !dbg !15658 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca %struct.k_thread.203*, align 4
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  store %struct.k_thread.203* %0, %struct.k_thread.203** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !15659, metadata !DIExpression()), !dbg !15660
  %6 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15661
  %7 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %6, i32 0, i32 0, !dbg !15663
  %8 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %7, i32 0, i32 3, !dbg !15664
  %9 = load i8, i8* %8, align 1, !dbg !15664
  %10 = zext i8 %9 to i32, !dbg !15661
  %11 = and i32 %10, 8, !dbg !15665
  %12 = icmp eq i32 %11, 0, !dbg !15666
  br i1 %12, label %13, label %64, !dbg !15667

13:                                               ; preds = %1
  %14 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15668
  %15 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %14, i32 0, i32 0, !dbg !15670
  %16 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %15, i32 0, i32 3, !dbg !15671
  %17 = load i8, i8* %16, align 1, !dbg !15672
  %18 = zext i8 %17 to i32, !dbg !15672
  %19 = or i32 %18, 8, !dbg !15672
  %20 = trunc i32 %19 to i8, !dbg !15672
  store i8 %20, i8* %16, align 1, !dbg !15672
  %21 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15673
  %22 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %21, i32 0, i32 0, !dbg !15674
  %23 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %22, i32 0, i32 3, !dbg !15675
  %24 = load i8, i8* %23, align 1, !dbg !15676
  %25 = zext i8 %24 to i32, !dbg !15676
  %26 = and i32 %25, -33, !dbg !15676
  %27 = trunc i32 %26 to i8, !dbg !15676
  store i8 %27, i8* %23, align 1, !dbg !15676
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15677
  %29 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.203* noundef %28) #10, !dbg !15679
  br i1 %29, label %30, label %47, !dbg !15680

30:                                               ; preds = %13
  %31 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15681
  store %struct.k_thread.203* %31, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !12640, metadata !DIExpression()) #9, !dbg !15683
  %32 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15685
  %33 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %32, i32 0, i32 0, !dbg !15686
  %34 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %33, i32 0, i32 3, !dbg !15687
  %35 = load i8, i8* %34, align 1, !dbg !15688
  %36 = zext i8 %35 to i32, !dbg !15688
  %37 = and i32 %36, -129, !dbg !15688
  %38 = trunc i32 %37 to i8, !dbg !15688
  store i8 %38, i8* %34, align 1, !dbg !15688
  %39 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15689
  %40 = call zeroext i1 @should_queue_thread(%struct.k_thread.203* noundef %39) #13, !dbg !15690
  br i1 %40, label %41, label %46, !dbg !15691

41:                                               ; preds = %30
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15692
  store %struct.k_thread.203* %42, %struct.k_thread.203** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %3, metadata !12654, metadata !DIExpression()) #9, !dbg !15693
  %43 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15695
  store %struct.k_thread.203* %43, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !12659, metadata !DIExpression()), !dbg !15696
  %44 = bitcast i8* bitcast (%struct._dnode.191* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.191*, !dbg !15698
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** %3, align 4, !dbg !15699
  call void @z_priq_dumb_remove(%struct._dnode.191* noundef %44, %struct.k_thread.203* noundef %45) #13, !dbg !15700
  br label %46, !dbg !15701

46:                                               ; preds = %30, %41
  br label %47, !dbg !15702

47:                                               ; preds = %46, %13
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15703
  %49 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %48, i32 0, i32 0, !dbg !15705
  %50 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %49, i32 0, i32 1, !dbg !15706
  %51 = load %union.anon.192*, %union.anon.192** %50, align 8, !dbg !15706
  %52 = icmp ne %union.anon.192* %51, null, !dbg !15707
  br i1 %52, label %53, label %55, !dbg !15708

53:                                               ; preds = %47
  %54 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15709
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %54) #10, !dbg !15711
  br label %55, !dbg !15712

55:                                               ; preds = %53, %47
  %56 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15713
  %57 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %56) #10, !dbg !15714
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15715
  %59 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %58, i32 0, i32 3, !dbg !15716
  call void @unpend_all(%union.anon.192* noundef %59) #10, !dbg !15717
  call void @update_cache(i32 noundef 1) #10, !dbg !15718
  br label %60, !dbg !15719

60:                                               ; preds = %55
  br label %61, !dbg !15720

61:                                               ; preds = %60
  br label %62, !dbg !15722

62:                                               ; preds = %61
  br label %63, !dbg !15723

63:                                               ; preds = %62
  br label %64, !dbg !15725

64:                                               ; preds = %63, %1
  ret void, !dbg !15726
}

; Function Attrs: noinline nounwind optnone
define internal void @unpend_all(%union.anon.192* noundef %0) #1 !dbg !15727 {
  %2 = alloca %struct.k_thread.203*, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.192*, align 4
  %5 = alloca %struct.k_thread.203*, align 4
  store %union.anon.192* %0, %union.anon.192** %4, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %4, metadata !15730, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %5, metadata !15732, metadata !DIExpression()), !dbg !15733
  br label %6, !dbg !15734

6:                                                ; preds = %10, %1
  %7 = load %union.anon.192*, %union.anon.192** %4, align 4, !dbg !15735
  %8 = call %struct.k_thread.203* @z_waitq_head(%union.anon.192* noundef %7) #10, !dbg !15736
  store %struct.k_thread.203* %8, %struct.k_thread.203** %5, align 4, !dbg !15737
  %9 = icmp ne %struct.k_thread.203* %8, null, !dbg !15738
  br i1 %9, label %10, label %20, !dbg !15734

10:                                               ; preds = %6
  %11 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15739
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %11) #10, !dbg !15741
  %12 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15742
  %13 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %12) #10, !dbg !15743
  %14 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15744
  store %struct.k_thread.203* %14, %struct.k_thread.203** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %2, metadata !15745, metadata !DIExpression()), !dbg !15749
  store i32 0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15751, metadata !DIExpression()), !dbg !15752
  %15 = load i32, i32* %3, align 4, !dbg !15753
  %16 = load %struct.k_thread.203*, %struct.k_thread.203** %2, align 4, !dbg !15754
  %17 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %16, i32 0, i32 6, !dbg !15755
  %18 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %17, i32 0, i32 1, !dbg !15756
  store i32 %15, i32* %18, align 4, !dbg !15757
  %19 = load %struct.k_thread.203*, %struct.k_thread.203** %5, align 4, !dbg !15758
  call void @ready_thread(%struct.k_thread.203* noundef %19) #10, !dbg !15759
  br label %6, !dbg !15734, !llvm.loop !15760

20:                                               ; preds = %6
  ret void, !dbg !15762
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread.203* noundef %0, [1 x i64] %1) #1 !dbg !15763 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca i32, align 4
  %13 = alloca %union.argument_value, align 8
  %14 = alloca %struct.k_thread.203*, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca i32, align 4
  %17 = alloca %union.argument_value, align 8
  %18 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0
  %19 = bitcast i64* %18 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %19, align 8
  store %struct.k_thread.203* %0, %struct.k_thread.203** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %14, metadata !15766, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.declare(metadata %union.argument_value* %13, metadata !15768, metadata !DIExpression()), !dbg !15769
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !15770, metadata !DIExpression()), !dbg !15771
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !12240, metadata !DIExpression()) #9, !dbg !15772
  %20 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !15774
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !12248, metadata !DIExpression()) #9, !dbg !15775
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12250, metadata !DIExpression()) #9, !dbg !15776
  %21 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15778, !srcloc !12255
  store i32 %21, i32* %3, align 4, !dbg !15778
  %22 = load i32, i32* %3, align 4, !dbg !15779
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !15780
  store i32 %22, i32* %23, align 4, !dbg !15781
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !15782
  %25 = load i32, i32* %24, align 4, !dbg !15782
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !15783
  store i32 %25, i32* %26, align 4, !dbg !15783
  call void @llvm.dbg.declare(metadata i32* %16, metadata !15784, metadata !DIExpression()), !dbg !15785
  store i32 0, i32* %16, align 4, !dbg !15785
  br label %27, !dbg !15786

27:                                               ; preds = %2
  br label %28, !dbg !15787

28:                                               ; preds = %27
  %29 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !15789
  %30 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %29, i32 0, i32 0, !dbg !15791
  %31 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %30, i32 0, i32 3, !dbg !15792
  %32 = load i8, i8* %31, align 1, !dbg !15792
  %33 = zext i8 %32 to i32, !dbg !15789
  %34 = and i32 %33, 8, !dbg !15793
  %35 = icmp ne i32 %34, 0, !dbg !15794
  br i1 %35, label %36, label %37, !dbg !15795

36:                                               ; preds = %28
  store i32 0, i32* %16, align 4, !dbg !15796
  br label %81, !dbg !15798

37:                                               ; preds = %28
  %38 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !15799
  %39 = load i64, i64* %38, align 8, !dbg !15799
  %40 = getelementptr inbounds %union.argument_value, %union.argument_value* %17, i32 0, i32 0, !dbg !15799
  store i64 0, i64* %40, align 8, !dbg !15799
  %41 = icmp eq i64 %39, 0, !dbg !15799
  br i1 %41, label %42, label %43, !dbg !15801

42:                                               ; preds = %37
  store i32 -16, i32* %16, align 4, !dbg !15802
  br label %80, !dbg !15804

43:                                               ; preds = %37
  %44 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !15805
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15807
  %46 = icmp eq %struct.k_thread.203* %44, %45, !dbg !15808
  br i1 %46, label %55, label %47, !dbg !15809

47:                                               ; preds = %43
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !15810
  %49 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %48, i32 0, i32 0, !dbg !15811
  %50 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %49, i32 0, i32 1, !dbg !15812
  %51 = load %union.anon.192*, %union.anon.192** %50, align 8, !dbg !15812
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15813
  %53 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %52, i32 0, i32 3, !dbg !15814
  %54 = icmp eq %union.anon.192* %51, %53, !dbg !15815
  br i1 %54, label %55, label %56, !dbg !15816

55:                                               ; preds = %47, %43
  store i32 -45, i32* %16, align 4, !dbg !15817
  br label %79, !dbg !15819

56:                                               ; preds = %47
  %57 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15820
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %14, align 4, !dbg !15822
  %59 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %58, i32 0, i32 3, !dbg !15823
  call void @add_to_waitq_locked(%struct.k_thread.203* noundef %57, %union.anon.192* noundef %59) #10, !dbg !15824
  %60 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15825
  %61 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !15826
  %62 = bitcast i64* %61 to [1 x i64]*, !dbg !15826
  %63 = load [1 x i64], [1 x i64]* %62, align 8, !dbg !15826
  call void @add_thread_timeout(%struct.k_thread.203* noundef %60, [1 x i64] %63) #10, !dbg !15826
  br label %64, !dbg !15827

64:                                               ; preds = %56
  br label %65, !dbg !15828

65:                                               ; preds = %64
  %66 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !15830
  %67 = bitcast i32* %66 to [1 x i32]*, !dbg !15830
  %68 = load [1 x i32], [1 x i32]* %67, align 4, !dbg !15830
  %69 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %70 = bitcast i32* %69 to [1 x i32]*
  store [1 x i32] %68, [1 x i32]* %70, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13326, metadata !DIExpression()) #9, !dbg !15831
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !13332, metadata !DIExpression()) #9, !dbg !15833
  %71 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !15834
  store %struct.k_spinlock.13* %71, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !13335, metadata !DIExpression()) #9, !dbg !15835
  %72 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !15837
  %73 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !15838
  %74 = load i32, i32* %73, align 4, !dbg !15838
  %75 = call i32 @z_swap_irqlock(i32 noundef %74) #13, !dbg !15839
  store i32 %75, i32* %16, align 4, !dbg !15840
  br label %76, !dbg !15841

76:                                               ; preds = %65
  br label %77, !dbg !15842

77:                                               ; preds = %76
  %78 = load i32, i32* %16, align 4, !dbg !15844
  store i32 %78, i32* %12, align 4, !dbg !15845
  br label %98, !dbg !15845

79:                                               ; preds = %55
  br label %80

80:                                               ; preds = %79, %42
  br label %81

81:                                               ; preds = %80, %36
  br label %82, !dbg !15846

82:                                               ; preds = %81
  br label %83, !dbg !15847

83:                                               ; preds = %82
  %84 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !15849
  %85 = bitcast i32* %84 to [1 x i32]*, !dbg !15849
  %86 = load [1 x i32], [1 x i32]* %85, align 4, !dbg !15849
  %87 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0
  %88 = bitcast i32* %87 to [1 x i32]*
  store [1 x i32] %86, [1 x i32]* %88, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !12280, metadata !DIExpression()) #9, !dbg !15850
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !12286, metadata !DIExpression()) #9, !dbg !15852
  %89 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !15853
  %90 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !15854
  %91 = load i32, i32* %90, align 4, !dbg !15854
  store i32 %91, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12290, metadata !DIExpression()) #9, !dbg !15855
  %92 = load i32, i32* %4, align 4, !dbg !15857
  %93 = icmp ne i32 %92, 0, !dbg !15858
  br i1 %93, label %94, label %95, !dbg !15859

94:                                               ; preds = %83
  br label %96, !dbg !15860

95:                                               ; preds = %83
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15861, !srcloc !12301
  br label %96, !dbg !15862

96:                                               ; preds = %94, %95
  %97 = load i32, i32* %16, align 4, !dbg !15863
  store i32 %97, i32* %12, align 4, !dbg !15864
  br label %98, !dbg !15864

98:                                               ; preds = %96, %77
  %99 = load i32, i32* %12, align 4, !dbg !15865
  ret i32 %99, !dbg !15865
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_sched_wake(%union.anon.192* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !15866 {
  %4 = alloca %struct.k_thread.203*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_thread.203*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %struct.k_spinlock.13*, align 4
  %13 = alloca %union.anon.68, align 4
  %14 = alloca %struct.k_spinlock.13*, align 4
  %15 = alloca %union.anon.192*, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 4
  %18 = alloca %struct.k_thread.203*, align 4
  %19 = alloca i8, align 1
  %20 = alloca %union.anon.68, align 4
  %21 = alloca %union.anon.68, align 4
  store %union.anon.192* %0, %union.anon.192** %15, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %15, metadata !15869, metadata !DIExpression()), !dbg !15870
  store i32 %1, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !15871, metadata !DIExpression()), !dbg !15872
  store i8* %2, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !15873, metadata !DIExpression()), !dbg !15874
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %18, metadata !15875, metadata !DIExpression()), !dbg !15876
  call void @llvm.dbg.declare(metadata i8* %19, metadata !15877, metadata !DIExpression()), !dbg !15878
  store i8 0, i8* %19, align 1, !dbg !15878
  call void @llvm.dbg.declare(metadata %union.anon.68* %20, metadata !15879, metadata !DIExpression()), !dbg !15881
  %22 = bitcast %union.anon.68* %20 to i8*, !dbg !15881
  call void @llvm.memset.p0i8.i32(i8* align 4 %22, i8 0, i32 4, i1 false), !dbg !15881
  call void @llvm.dbg.declare(metadata %union.anon.68* %21, metadata !15882, metadata !DIExpression()), !dbg !15881
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %14, metadata !12240, metadata !DIExpression()) #9, !dbg !15883
  %23 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %14, align 4, !dbg !15885
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !12248, metadata !DIExpression()) #9, !dbg !15886
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12250, metadata !DIExpression()) #9, !dbg !15887
  %24 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !15889, !srcloc !12255
  store i32 %24, i32* %6, align 4, !dbg !15889
  %25 = load i32, i32* %6, align 4, !dbg !15890
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !15891
  store i32 %25, i32* %26, align 4, !dbg !15892
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !15893
  %28 = load i32, i32* %27, align 4, !dbg !15893
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !15881
  store i32 %28, i32* %29, align 4, !dbg !15881
  br label %30, !dbg !15881

30:                                               ; preds = %73, %3
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %20, i32 0, i32 0, !dbg !15894
  %32 = load i32, i32* %31, align 4, !dbg !15894
  %33 = icmp ne i32 %32, 0, !dbg !15894
  %34 = xor i1 %33, true, !dbg !15894
  br i1 %34, label %35, label %75, !dbg !15881

35:                                               ; preds = %30
  %36 = load %union.anon.192*, %union.anon.192** %15, align 4, !dbg !15896
  %37 = getelementptr inbounds %union.anon.192, %union.anon.192* %36, i32 0, i32 0, !dbg !15898
  %38 = call %struct.k_thread.203* @z_priq_dumb_best(%struct._dnode.191* noundef %37) #10, !dbg !15899
  store %struct.k_thread.203* %38, %struct.k_thread.203** %18, align 4, !dbg !15900
  %39 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15901
  %40 = icmp ne %struct.k_thread.203* %39, null, !dbg !15903
  br i1 %40, label %41, label %59, !dbg !15904

41:                                               ; preds = %35
  %42 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15905
  %43 = load i32, i32* %16, align 4, !dbg !15907
  %44 = load i8*, i8** %17, align 4, !dbg !15908
  store %struct.k_thread.203* %42, %struct.k_thread.203** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %7, metadata !15909, metadata !DIExpression()) #9, !dbg !15914
  store i32 %43, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !15916, metadata !DIExpression()) #9, !dbg !15917
  store i8* %44, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !15918, metadata !DIExpression()) #9, !dbg !15919
  %45 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !15920
  %46 = load i32, i32* %8, align 4, !dbg !15921
  store %struct.k_thread.203* %45, %struct.k_thread.203** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.203** %4, metadata !15745, metadata !DIExpression()), !dbg !15922
  store i32 %46, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !15751, metadata !DIExpression()), !dbg !15924
  %47 = load i32, i32* %5, align 4, !dbg !15925
  %48 = load %struct.k_thread.203*, %struct.k_thread.203** %4, align 4, !dbg !15926
  %49 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %48, i32 0, i32 6, !dbg !15927
  %50 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %49, i32 0, i32 1, !dbg !15928
  store i32 %47, i32* %50, align 4, !dbg !15929
  %51 = load i8*, i8** %9, align 4, !dbg !15930
  %52 = load %struct.k_thread.203*, %struct.k_thread.203** %7, align 4, !dbg !15931
  %53 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %52, i32 0, i32 0, !dbg !15932
  %54 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %53, i32 0, i32 6, !dbg !15933
  store i8* %51, i8** %54, align 4, !dbg !15934
  %55 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15935
  call void @unpend_thread_no_timeout(%struct.k_thread.203* noundef %55) #10, !dbg !15936
  %56 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15937
  %57 = call i32 @z_abort_thread_timeout(%struct.k_thread.203* noundef %56) #10, !dbg !15938
  %58 = load %struct.k_thread.203*, %struct.k_thread.203** %18, align 4, !dbg !15939
  call void @ready_thread(%struct.k_thread.203* noundef %58) #10, !dbg !15940
  store i8 1, i8* %19, align 1, !dbg !15941
  br label %59, !dbg !15942

59:                                               ; preds = %41, %35
  br label %60, !dbg !15943

60:                                               ; preds = %59
  %61 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !15894
  %62 = bitcast i32* %61 to [1 x i32]*, !dbg !15894
  %63 = load [1 x i32], [1 x i32]* %62, align 4, !dbg !15894
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0
  %65 = bitcast i32* %64 to [1 x i32]*
  store [1 x i32] %63, [1 x i32]* %65, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %12, metadata !12280, metadata !DIExpression()) #9, !dbg !15944
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !12286, metadata !DIExpression()) #9, !dbg !15946
  %66 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %12, align 4, !dbg !15947
  %67 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !15948
  %68 = load i32, i32* %67, align 4, !dbg !15948
  store i32 %68, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12290, metadata !DIExpression()) #9, !dbg !15949
  %69 = load i32, i32* %10, align 4, !dbg !15951
  %70 = icmp ne i32 %69, 0, !dbg !15952
  br i1 %70, label %71, label %72, !dbg !15953

71:                                               ; preds = %60
  br label %73, !dbg !15954

72:                                               ; preds = %60
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !15955, !srcloc !12301
  br label %73, !dbg !15956

73:                                               ; preds = %71, %72
  %74 = getelementptr inbounds %union.anon.68, %union.anon.68* %20, i32 0, i32 0, !dbg !15894
  store i32 1, i32* %74, align 4, !dbg !15894
  br label %30, !dbg !15894, !llvm.loop !15957

75:                                               ; preds = %30
  %76 = load i8, i8* %19, align 1, !dbg !15959
  %77 = trunc i8 %76 to i1, !dbg !15959
  ret i1 %77, !dbg !15960
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_sched_wait(%struct.k_spinlock.13* noundef %0, [1 x i32] %1, %union.anon.192* noundef %2, [1 x i64] %3, i8** noundef %4) #1 !dbg !15961 {
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %union.argument_value, align 8
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.192*, align 4
  %10 = alloca i8**, align 4
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %13 = bitcast i32* %12 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %13, align 4
  %14 = getelementptr inbounds %union.argument_value, %union.argument_value* %7, i32 0, i32 0
  %15 = bitcast i64* %14 to [1 x i64]*
  store [1 x i64] %3, [1 x i64]* %15, align 8
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !15965, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !15967, metadata !DIExpression()), !dbg !15968
  store %union.anon.192* %2, %union.anon.192** %9, align 4
  call void @llvm.dbg.declare(metadata %union.anon.192** %9, metadata !15969, metadata !DIExpression()), !dbg !15970
  call void @llvm.dbg.declare(metadata %union.argument_value* %7, metadata !15971, metadata !DIExpression()), !dbg !15972
  store i8** %4, i8*** %10, align 4
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !15973, metadata !DIExpression()), !dbg !15974
  call void @llvm.dbg.declare(metadata i32* %11, metadata !15975, metadata !DIExpression()), !dbg !15976
  %16 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !15977
  %17 = load %union.anon.192*, %union.anon.192** %9, align 4, !dbg !15978
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !15979
  %19 = bitcast i32* %18 to [1 x i32]*, !dbg !15979
  %20 = load [1 x i32], [1 x i32]* %19, align 4, !dbg !15979
  %21 = getelementptr inbounds %union.argument_value, %union.argument_value* %7, i32 0, i32 0, !dbg !15979
  %22 = bitcast i64* %21 to [1 x i64]*, !dbg !15979
  %23 = load [1 x i64], [1 x i64]* %22, align 8, !dbg !15979
  %24 = call i32 @z_pend_curr(%struct.k_spinlock.13* noundef %16, [1 x i32] %20, %union.anon.192* noundef %17, [1 x i64] %23) #10, !dbg !15979
  store i32 %24, i32* %11, align 4, !dbg !15976
  %25 = load i8**, i8*** %10, align 4, !dbg !15980
  %26 = icmp ne i8** %25, null, !dbg !15982
  br i1 %26, label %27, label %33, !dbg !15983

27:                                               ; preds = %5
  %28 = load %struct.k_thread.203*, %struct.k_thread.203** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15984
  %29 = getelementptr inbounds %struct.k_thread.203, %struct.k_thread.203* %28, i32 0, i32 0, !dbg !15986
  %30 = getelementptr inbounds %struct._thread_base.196, %struct._thread_base.196* %29, i32 0, i32 6, !dbg !15987
  %31 = load i8*, i8** %30, align 4, !dbg !15987
  %32 = load i8**, i8*** %10, align 4, !dbg !15988
  store i8* %31, i8** %32, align 4, !dbg !15989
  br label %33, !dbg !15990

33:                                               ; preds = %27, %5
  %34 = load i32, i32* %11, align 4, !dbg !15991
  ret i32 %34, !dbg !15992
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_data_copy() #1 !dbg !15993 {
  call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #10, !dbg !15995
  call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #10, !dbg !15996
  ret void, !dbg !15997
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_add_timeout(%struct._timeout.195* noundef %0, void (%struct._timeout.195*)* noundef %1, [1 x i64] %2) #1 !dbg !15998 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.argument_value, align 8
  %11 = alloca %struct._timeout.195*, align 4
  %12 = alloca void (%struct._timeout.195*)*, align 4
  %13 = alloca %union.argument_value, align 8
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca %struct._timeout.195*, align 4
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0
  %20 = bitcast i64* %19 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %20, align 8
  store %struct._timeout.195* %0, %struct._timeout.195** %11, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %11, metadata !16005, metadata !DIExpression()), !dbg !16006
  store void (%struct._timeout.195*)* %1, void (%struct._timeout.195*)** %12, align 4
  call void @llvm.dbg.declare(metadata void (%struct._timeout.195*)** %12, metadata !16007, metadata !DIExpression()), !dbg !16008
  call void @llvm.dbg.declare(metadata %union.argument_value* %10, metadata !16009, metadata !DIExpression()), !dbg !16010
  %21 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !16011
  %22 = load i64, i64* %21, align 8, !dbg !16011
  %23 = getelementptr inbounds %union.argument_value, %union.argument_value* %13, i32 0, i32 0, !dbg !16011
  store i64 -1, i64* %23, align 8, !dbg !16011
  %24 = icmp eq i64 %22, -1, !dbg !16011
  br i1 %24, label %25, label %26, !dbg !16013

25:                                               ; preds = %3
  br label %145, !dbg !16014

26:                                               ; preds = %3
  %27 = load void (%struct._timeout.195*)*, void (%struct._timeout.195*)** %12, align 4, !dbg !16016
  %28 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16017
  %29 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %28, i32 0, i32 1, !dbg !16018
  store void (%struct._timeout.195*)* %27, void (%struct._timeout.195*)** %29, align 8, !dbg !16019
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !16020, metadata !DIExpression()), !dbg !16026
  %30 = bitcast %union.anon.68* %14 to i8*, !dbg !16026
  call void @llvm.memset.p0i8.i32(i8* align 4 %30, i8 0, i32 4, i1 false), !dbg !16026
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !16027, metadata !DIExpression()), !dbg !16026
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !16028, metadata !DIExpression()) #9, !dbg !16033
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !16035
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !16036, metadata !DIExpression()) #9, !dbg !16037
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16038, metadata !DIExpression()) #9, !dbg !16040
  %32 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16042, !srcloc !16043
  store i32 %32, i32* %5, align 4, !dbg !16042
  %33 = load i32, i32* %5, align 4, !dbg !16044
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16045
  store i32 %33, i32* %34, align 4, !dbg !16046
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16047
  %36 = load i32, i32* %35, align 4, !dbg !16047
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16026
  store i32 %36, i32* %37, align 4, !dbg !16026
  br label %38, !dbg !16026

38:                                               ; preds = %143, %26
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !16048
  %40 = load i32, i32* %39, align 4, !dbg !16048
  %41 = icmp ne i32 %40, 0, !dbg !16048
  %42 = xor i1 %41, true, !dbg !16048
  br i1 %42, label %43, label %145, !dbg !16026

43:                                               ; preds = %38
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %16, metadata !16050, metadata !DIExpression()), !dbg !16052
  %44 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !16053
  %45 = load i64, i64* %44, align 8, !dbg !16053
  %46 = sub nsw i64 -2, %45, !dbg !16053
  %47 = icmp sge i64 %46, 0, !dbg !16055
  br i1 %47, label %48, label %63, !dbg !16056

48:                                               ; preds = %43
  call void @llvm.dbg.declare(metadata i64* %17, metadata !16057, metadata !DIExpression()), !dbg !16059
  %49 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !16060
  %50 = load i64, i64* %49, align 8, !dbg !16060
  %51 = sub nsw i64 -2, %50, !dbg !16060
  %52 = load i64, i64* @curr_tick, align 8, !dbg !16061
  %53 = sub i64 %51, %52, !dbg !16062
  store i64 %53, i64* %17, align 8, !dbg !16059
  %54 = load i64, i64* %17, align 8, !dbg !16063
  %55 = icmp sgt i64 1, %54, !dbg !16063
  br i1 %55, label %56, label %57, !dbg !16063

56:                                               ; preds = %48
  br label %59, !dbg !16063

57:                                               ; preds = %48
  %58 = load i64, i64* %17, align 8, !dbg !16063
  br label %59, !dbg !16063

59:                                               ; preds = %57, %56
  %60 = phi i64 [ 1, %56 ], [ %58, %57 ], !dbg !16063
  %61 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16064
  %62 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %61, i32 0, i32 2, !dbg !16065
  store i64 %60, i64* %62, align 8, !dbg !16066
  br label %72, !dbg !16067

63:                                               ; preds = %43
  %64 = getelementptr inbounds %union.argument_value, %union.argument_value* %10, i32 0, i32 0, !dbg !16068
  %65 = load i64, i64* %64, align 8, !dbg !16068
  %66 = add nsw i64 %65, 1, !dbg !16070
  %67 = call i32 @elapsed.87() #10, !dbg !16071
  %68 = sext i32 %67 to i64, !dbg !16071
  %69 = add nsw i64 %66, %68, !dbg !16072
  %70 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16073
  %71 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %70, i32 0, i32 2, !dbg !16074
  store i64 %69, i64* %71, align 8, !dbg !16075
  br label %72

72:                                               ; preds = %63, %59
  %73 = call %struct._timeout.195* @first() #10, !dbg !16076
  store %struct._timeout.195* %73, %struct._timeout.195** %16, align 4, !dbg !16078
  br label %74, !dbg !16079

74:                                               ; preds = %105, %72
  %75 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16080
  %76 = icmp ne %struct._timeout.195* %75, null, !dbg !16082
  br i1 %76, label %77, label %108, !dbg !16083

77:                                               ; preds = %74
  %78 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16084
  %79 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %78, i32 0, i32 2, !dbg !16087
  %80 = load i64, i64* %79, align 8, !dbg !16087
  %81 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16088
  %82 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %81, i32 0, i32 2, !dbg !16089
  %83 = load i64, i64* %82, align 8, !dbg !16089
  %84 = icmp sgt i64 %80, %83, !dbg !16090
  br i1 %84, label %85, label %97, !dbg !16091

85:                                               ; preds = %77
  %86 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16092
  %87 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %86, i32 0, i32 2, !dbg !16094
  %88 = load i64, i64* %87, align 8, !dbg !16094
  %89 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16095
  %90 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %89, i32 0, i32 2, !dbg !16096
  %91 = load i64, i64* %90, align 8, !dbg !16097
  %92 = sub nsw i64 %91, %88, !dbg !16097
  store i64 %92, i64* %90, align 8, !dbg !16097
  %93 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16098
  %94 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %93, i32 0, i32 0, !dbg !16099
  %95 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16100
  %96 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %95, i32 0, i32 0, !dbg !16101
  call void @sys_dlist_insert.88(%struct._dnode.191* noundef %94, %struct._dnode.191* noundef %96) #10, !dbg !16102
  br label %108, !dbg !16103

97:                                               ; preds = %77
  %98 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16104
  %99 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %98, i32 0, i32 2, !dbg !16105
  %100 = load i64, i64* %99, align 8, !dbg !16105
  %101 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16106
  %102 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %101, i32 0, i32 2, !dbg !16107
  %103 = load i64, i64* %102, align 8, !dbg !16108
  %104 = sub nsw i64 %103, %100, !dbg !16108
  store i64 %104, i64* %102, align 8, !dbg !16108
  br label %105, !dbg !16109

105:                                              ; preds = %97
  %106 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16110
  %107 = call %struct._timeout.195* @next(%struct._timeout.195* noundef %106) #10, !dbg !16111
  store %struct._timeout.195* %107, %struct._timeout.195** %16, align 4, !dbg !16112
  br label %74, !dbg !16113, !llvm.loop !16114

108:                                              ; preds = %85, %74
  %109 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16116
  %110 = icmp eq %struct._timeout.195* %109, null, !dbg !16118
  br i1 %110, label %111, label %114, !dbg !16119

111:                                              ; preds = %108
  %112 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16120
  %113 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %112, i32 0, i32 0, !dbg !16122
  call void @sys_dlist_append.89(%struct._dnode.191* noundef @timeout_list, %struct._dnode.191* noundef %113) #10, !dbg !16123
  br label %114, !dbg !16124

114:                                              ; preds = %111, %108
  %115 = load %struct._timeout.195*, %struct._timeout.195** %11, align 4, !dbg !16125
  %116 = call %struct._timeout.195* @first() #10, !dbg !16127
  %117 = icmp eq %struct._timeout.195* %115, %116, !dbg !16128
  br i1 %117, label %118, label %129, !dbg !16129

118:                                              ; preds = %114
  call void @llvm.dbg.declare(metadata i32* %18, metadata !16130, metadata !DIExpression()), !dbg !16132
  %119 = call i32 @next_timeout() #10, !dbg !16133
  store i32 %119, i32* %18, align 4, !dbg !16132
  %120 = load i32, i32* %18, align 4, !dbg !16134
  %121 = icmp eq i32 %120, 0, !dbg !16136
  br i1 %121, label %126, label %122, !dbg !16137

122:                                              ; preds = %118
  %123 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16138
  %124 = load i32, i32* %18, align 4, !dbg !16139
  %125 = icmp ne i32 %123, %124, !dbg !16140
  br i1 %125, label %126, label %128, !dbg !16141

126:                                              ; preds = %122, %118
  %127 = load i32, i32* %18, align 4, !dbg !16142
  call void @sys_clock_set_timeout(i32 noundef %127, i1 noundef zeroext false) #10, !dbg !16144
  br label %128, !dbg !16145

128:                                              ; preds = %126, %122
  br label %129, !dbg !16146

129:                                              ; preds = %128, %114
  br label %130, !dbg !16147

130:                                              ; preds = %129
  %131 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16048
  %132 = bitcast i32* %131 to [1 x i32]*, !dbg !16048
  %133 = load [1 x i32], [1 x i32]* %132, align 4, !dbg !16048
  %134 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %135 = bitcast i32* %134 to [1 x i32]*
  store [1 x i32] %133, [1 x i32]* %135, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16148, metadata !DIExpression()) #9, !dbg !16152
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16154, metadata !DIExpression()) #9, !dbg !16155
  %136 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !16156
  %137 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16157
  %138 = load i32, i32* %137, align 4, !dbg !16157
  store i32 %138, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16158, metadata !DIExpression()) #9, !dbg !16160
  %139 = load i32, i32* %4, align 4, !dbg !16162
  %140 = icmp ne i32 %139, 0, !dbg !16164
  br i1 %140, label %141, label %142, !dbg !16165

141:                                              ; preds = %130
  br label %143, !dbg !16166

142:                                              ; preds = %130
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16168, !srcloc !16169
  br label %143, !dbg !16170

143:                                              ; preds = %141, %142
  %144 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !16048
  store i32 1, i32* %144, align 4, !dbg !16048
  br label %38, !dbg !16048, !llvm.loop !16171

145:                                              ; preds = %25, %38
  ret void, !dbg !16173
}

; Function Attrs: noinline nounwind optnone
define internal i32 @elapsed.87() #1 !dbg !16174 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16177
  %2 = icmp eq i32 %1, 0, !dbg !16178
  br i1 %2, label %3, label %5, !dbg !16177

3:                                                ; preds = %0
  %4 = call i32 @sys_clock_elapsed() #10, !dbg !16179
  br label %6, !dbg !16177

5:                                                ; preds = %0
  br label %6, !dbg !16177

6:                                                ; preds = %5, %3
  %7 = phi i32 [ %4, %3 ], [ 0, %5 ], !dbg !16177
  ret i32 %7, !dbg !16180
}

; Function Attrs: noinline nounwind optnone
define internal %struct._timeout.195* @first() #1 !dbg !16181 {
  %1 = alloca %struct._dnode.191*, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %1, metadata !16184, metadata !DIExpression()), !dbg !16186
  %2 = call %struct._dnode.191* @sys_dlist_peek_head.92(%struct._dnode.191* noundef @timeout_list) #10, !dbg !16187
  store %struct._dnode.191* %2, %struct._dnode.191** %1, align 4, !dbg !16186
  %3 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !16188
  %4 = icmp eq %struct._dnode.191* %3, null, !dbg !16189
  br i1 %4, label %5, label %6, !dbg !16188

5:                                                ; preds = %0
  br label %11, !dbg !16188

6:                                                ; preds = %0
  %7 = load %struct._dnode.191*, %struct._dnode.191** %1, align 4, !dbg !16190
  %8 = bitcast %struct._dnode.191* %7 to i8*, !dbg !16190
  %9 = getelementptr inbounds i8, i8* %8, i32 0, !dbg !16190
  %10 = bitcast i8* %9 to %struct._timeout.195*, !dbg !16190
  br label %11, !dbg !16188

11:                                               ; preds = %6, %5
  %12 = phi %struct._timeout.195* [ null, %5 ], [ %10, %6 ], !dbg !16188
  ret %struct._timeout.195* %12, !dbg !16191
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_insert.88(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !16192 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !16195, metadata !DIExpression()), !dbg !16196
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !16197, metadata !DIExpression()), !dbg !16198
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !16199, metadata !DIExpression()), !dbg !16201
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16202
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !16203
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !16203
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !16203
  store %struct._dnode.191* %9, %struct._dnode.191** %5, align 4, !dbg !16201
  %10 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !16204
  %11 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16205
  %12 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %11, i32 0, i32 1, !dbg !16206
  %13 = bitcast %union.anon.0.189* %12 to %struct._dnode.191**, !dbg !16206
  store %struct._dnode.191* %10, %struct._dnode.191** %13, align 4, !dbg !16207
  %14 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16208
  %15 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16209
  %16 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %15, i32 0, i32 0, !dbg !16210
  %17 = bitcast %union.anon.0.189* %16 to %struct._dnode.191**, !dbg !16210
  store %struct._dnode.191* %14, %struct._dnode.191** %17, align 4, !dbg !16211
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16212
  %19 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !16213
  %20 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %19, i32 0, i32 0, !dbg !16214
  %21 = bitcast %union.anon.0.189* %20 to %struct._dnode.191**, !dbg !16214
  store %struct._dnode.191* %18, %struct._dnode.191** %21, align 4, !dbg !16215
  %22 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16216
  %23 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16217
  %24 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %23, i32 0, i32 1, !dbg !16218
  %25 = bitcast %union.anon.0.189* %24 to %struct._dnode.191**, !dbg !16218
  store %struct._dnode.191* %22, %struct._dnode.191** %25, align 4, !dbg !16219
  ret void, !dbg !16220
}

; Function Attrs: noinline nounwind optnone
define internal %struct._timeout.195* @next(%struct._timeout.195* noundef %0) #1 !dbg !16221 {
  %2 = alloca %struct._timeout.195*, align 4
  %3 = alloca %struct._dnode.191*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !16224, metadata !DIExpression()), !dbg !16225
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !16226, metadata !DIExpression()), !dbg !16227
  %4 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !16228
  %5 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %4, i32 0, i32 0, !dbg !16229
  %6 = call %struct._dnode.191* @sys_dlist_peek_next.90(%struct._dnode.191* noundef @timeout_list, %struct._dnode.191* noundef %5) #10, !dbg !16230
  store %struct._dnode.191* %6, %struct._dnode.191** %3, align 4, !dbg !16227
  %7 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16231
  %8 = icmp eq %struct._dnode.191* %7, null, !dbg !16232
  br i1 %8, label %9, label %10, !dbg !16231

9:                                                ; preds = %1
  br label %15, !dbg !16231

10:                                               ; preds = %1
  %11 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16233
  %12 = bitcast %struct._dnode.191* %11 to i8*, !dbg !16233
  %13 = getelementptr inbounds i8, i8* %12, i32 0, !dbg !16233
  %14 = bitcast i8* %13 to %struct._timeout.195*, !dbg !16233
  br label %15, !dbg !16231

15:                                               ; preds = %10, %9
  %16 = phi %struct._timeout.195* [ null, %9 ], [ %14, %10 ], !dbg !16231
  ret %struct._timeout.195* %16, !dbg !16234
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_append.89(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !16235 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  %5 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !16239, metadata !DIExpression()), !dbg !16240
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !16241, metadata !DIExpression()), !dbg !16242
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %5, metadata !16243, metadata !DIExpression()), !dbg !16244
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16245
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !16246
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !16246
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !16246
  store %struct._dnode.191* %9, %struct._dnode.191** %5, align 4, !dbg !16244
  %10 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16247
  %11 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16248
  %12 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %11, i32 0, i32 0, !dbg !16249
  %13 = bitcast %union.anon.0.189* %12 to %struct._dnode.191**, !dbg !16249
  store %struct._dnode.191* %10, %struct._dnode.191** %13, align 4, !dbg !16250
  %14 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !16251
  %15 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16252
  %16 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %15, i32 0, i32 1, !dbg !16253
  %17 = bitcast %union.anon.0.189* %16 to %struct._dnode.191**, !dbg !16253
  store %struct._dnode.191* %14, %struct._dnode.191** %17, align 4, !dbg !16254
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16255
  %19 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !16256
  %20 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %19, i32 0, i32 0, !dbg !16257
  %21 = bitcast %union.anon.0.189* %20 to %struct._dnode.191**, !dbg !16257
  store %struct._dnode.191* %18, %struct._dnode.191** %21, align 4, !dbg !16258
  %22 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16259
  %23 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16260
  %24 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %23, i32 0, i32 1, !dbg !16261
  %25 = bitcast %union.anon.0.189* %24 to %struct._dnode.191**, !dbg !16261
  store %struct._dnode.191* %22, %struct._dnode.191** %25, align 4, !dbg !16262
  ret void, !dbg !16263
}

; Function Attrs: noinline nounwind optnone
define internal i32 @next_timeout() #1 !dbg !16264 {
  %1 = alloca %struct._timeout.195*, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %1, metadata !16265, metadata !DIExpression()), !dbg !16266
  %4 = call %struct._timeout.195* @first() #10, !dbg !16267
  store %struct._timeout.195* %4, %struct._timeout.195** %1, align 4, !dbg !16266
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16268, metadata !DIExpression()), !dbg !16269
  %5 = call i32 @elapsed.87() #10, !dbg !16270
  store i32 %5, i32* %2, align 4, !dbg !16269
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16271, metadata !DIExpression()), !dbg !16272
  %6 = load %struct._timeout.195*, %struct._timeout.195** %1, align 4, !dbg !16273
  %7 = icmp eq %struct._timeout.195* %6, null, !dbg !16275
  br i1 %7, label %16, label %8, !dbg !16276

8:                                                ; preds = %0
  %9 = load %struct._timeout.195*, %struct._timeout.195** %1, align 4, !dbg !16277
  %10 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %9, i32 0, i32 2, !dbg !16278
  %11 = load i64, i64* %10, align 8, !dbg !16278
  %12 = load i32, i32* %2, align 4, !dbg !16279
  %13 = sext i32 %12 to i64, !dbg !16279
  %14 = sub nsw i64 %11, %13, !dbg !16280
  %15 = icmp sgt i64 %14, 2147483647, !dbg !16281
  br i1 %15, label %16, label %17, !dbg !16282

16:                                               ; preds = %8, %0
  store i32 2147483647, i32* %3, align 4, !dbg !16283
  br label %36, !dbg !16285

17:                                               ; preds = %8
  %18 = load %struct._timeout.195*, %struct._timeout.195** %1, align 4, !dbg !16286
  %19 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %18, i32 0, i32 2, !dbg !16286
  %20 = load i64, i64* %19, align 8, !dbg !16286
  %21 = load i32, i32* %2, align 4, !dbg !16286
  %22 = sext i32 %21 to i64, !dbg !16286
  %23 = sub nsw i64 %20, %22, !dbg !16286
  %24 = icmp sgt i64 0, %23, !dbg !16286
  br i1 %24, label %25, label %26, !dbg !16286

25:                                               ; preds = %17
  br label %33, !dbg !16286

26:                                               ; preds = %17
  %27 = load %struct._timeout.195*, %struct._timeout.195** %1, align 4, !dbg !16286
  %28 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %27, i32 0, i32 2, !dbg !16286
  %29 = load i64, i64* %28, align 8, !dbg !16286
  %30 = load i32, i32* %2, align 4, !dbg !16286
  %31 = sext i32 %30 to i64, !dbg !16286
  %32 = sub nsw i64 %29, %31, !dbg !16286
  br label %33, !dbg !16286

33:                                               ; preds = %26, %25
  %34 = phi i64 [ 0, %25 ], [ %32, %26 ], !dbg !16286
  %35 = trunc i64 %34 to i32, !dbg !16286
  store i32 %35, i32* %3, align 4, !dbg !16288
  br label %36

36:                                               ; preds = %33, %16
  %37 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16289
  %38 = icmp ne i32 %37, 0, !dbg !16291
  br i1 %38, label %39, label %45, !dbg !16292

39:                                               ; preds = %36
  %40 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16293
  %41 = load i32, i32* %3, align 4, !dbg !16294
  %42 = icmp slt i32 %40, %41, !dbg !16295
  br i1 %42, label %43, label %45, !dbg !16296

43:                                               ; preds = %39
  %44 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16297
  store i32 %44, i32* %3, align 4, !dbg !16299
  br label %45, !dbg !16300

45:                                               ; preds = %43, %39, %36
  %46 = load i32, i32* %3, align 4, !dbg !16301
  ret i32 %46, !dbg !16302
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_next.90(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !16303 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !16306, metadata !DIExpression()), !dbg !16307
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !16308, metadata !DIExpression()), !dbg !16309
  %5 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16310
  %6 = icmp ne %struct._dnode.191* %5, null, !dbg !16311
  br i1 %6, label %7, label %11, !dbg !16312

7:                                                ; preds = %2
  %8 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16313
  %9 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16314
  %10 = call %struct._dnode.191* @sys_dlist_peek_next_no_check.91(%struct._dnode.191* noundef %8, %struct._dnode.191* noundef %9) #10, !dbg !16315
  br label %12, !dbg !16312

11:                                               ; preds = %2
  br label %12, !dbg !16312

12:                                               ; preds = %11, %7
  %13 = phi %struct._dnode.191* [ %10, %7 ], [ null, %11 ], !dbg !16312
  ret %struct._dnode.191* %13, !dbg !16316
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_next_no_check.91(%struct._dnode.191* noundef %0, %struct._dnode.191* noundef %1) #1 !dbg !16317 {
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !16318, metadata !DIExpression()), !dbg !16319
  store %struct._dnode.191* %1, %struct._dnode.191** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !16320, metadata !DIExpression()), !dbg !16321
  %5 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16322
  %6 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16323
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !16324
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !16324
  %9 = load %struct._dnode.191*, %struct._dnode.191** %8, align 4, !dbg !16324
  %10 = icmp eq %struct._dnode.191* %5, %9, !dbg !16325
  br i1 %10, label %11, label %12, !dbg !16326

11:                                               ; preds = %2
  br label %17, !dbg !16326

12:                                               ; preds = %2
  %13 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16327
  %14 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %13, i32 0, i32 0, !dbg !16328
  %15 = bitcast %union.anon.0.189* %14 to %struct._dnode.191**, !dbg !16328
  %16 = load %struct._dnode.191*, %struct._dnode.191** %15, align 4, !dbg !16328
  br label %17, !dbg !16326

17:                                               ; preds = %12, %11
  %18 = phi %struct._dnode.191* [ null, %11 ], [ %16, %12 ], !dbg !16326
  ret %struct._dnode.191* %18, !dbg !16329
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.191* @sys_dlist_peek_head.92(%struct._dnode.191* noundef %0) #1 !dbg !16330 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !16333, metadata !DIExpression()), !dbg !16334
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16335
  %4 = call zeroext i1 @sys_dlist_is_empty.93(%struct._dnode.191* noundef %3) #10, !dbg !16336
  br i1 %4, label %5, label %6, !dbg !16336

5:                                                ; preds = %1
  br label %11, !dbg !16336

6:                                                ; preds = %1
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16337
  %8 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %7, i32 0, i32 0, !dbg !16338
  %9 = bitcast %union.anon.0.189* %8 to %struct._dnode.191**, !dbg !16338
  %10 = load %struct._dnode.191*, %struct._dnode.191** %9, align 4, !dbg !16338
  br label %11, !dbg !16336

11:                                               ; preds = %6, %5
  %12 = phi %struct._dnode.191* [ null, %5 ], [ %10, %6 ], !dbg !16336
  ret %struct._dnode.191* %12, !dbg !16339
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dlist_is_empty.93(%struct._dnode.191* noundef %0) #1 !dbg !16340 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !16343, metadata !DIExpression()), !dbg !16344
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16345
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !16346
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !16346
  %6 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !16346
  %7 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16347
  %8 = icmp eq %struct._dnode.191* %6, %7, !dbg !16348
  ret i1 %8, !dbg !16349
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_abort_timeout(%struct._timeout.195* noundef %0) #1 !dbg !16350 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.195*, align 4
  %9 = alloca i32, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %8, metadata !16353, metadata !DIExpression()), !dbg !16354
  call void @llvm.dbg.declare(metadata i32* %9, metadata !16355, metadata !DIExpression()), !dbg !16356
  store i32 -22, i32* %9, align 4, !dbg !16356
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !16357, metadata !DIExpression()), !dbg !16359
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !16359
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !16359
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !16360, metadata !DIExpression()), !dbg !16359
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16028, metadata !DIExpression()) #9, !dbg !16361
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !16363
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16036, metadata !DIExpression()) #9, !dbg !16364
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16038, metadata !DIExpression()) #9, !dbg !16365
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16367, !srcloc !16043
  store i32 %14, i32* %3, align 4, !dbg !16367
  %15 = load i32, i32* %3, align 4, !dbg !16368
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16369
  store i32 %15, i32* %16, align 4, !dbg !16370
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16371
  %18 = load i32, i32* %17, align 4, !dbg !16371
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16359
  store i32 %18, i32* %19, align 4, !dbg !16359
  br label %20, !dbg !16359

20:                                               ; preds = %45, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16372
  %22 = load i32, i32* %21, align 4, !dbg !16372
  %23 = icmp ne i32 %22, 0, !dbg !16372
  %24 = xor i1 %23, true, !dbg !16372
  br i1 %24, label %25, label %47, !dbg !16359

25:                                               ; preds = %20
  %26 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !16374
  %27 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %26, i32 0, i32 0, !dbg !16377
  %28 = call zeroext i1 @sys_dnode_is_linked.96(%struct._dnode.191* noundef %27) #10, !dbg !16378
  br i1 %28, label %29, label %31, !dbg !16379

29:                                               ; preds = %25
  %30 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !16380
  call void @remove_timeout(%struct._timeout.195* noundef %30) #10, !dbg !16382
  store i32 0, i32* %9, align 4, !dbg !16383
  br label %31, !dbg !16384

31:                                               ; preds = %29, %25
  br label %32, !dbg !16385

32:                                               ; preds = %31
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16372
  %34 = bitcast i32* %33 to [1 x i32]*, !dbg !16372
  %35 = load [1 x i32], [1 x i32]* %34, align 4, !dbg !16372
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %37 = bitcast i32* %36 to [1 x i32]*
  store [1 x i32] %35, [1 x i32]* %37, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !16148, metadata !DIExpression()) #9, !dbg !16386
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !16154, metadata !DIExpression()) #9, !dbg !16388
  %38 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !16389
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !16390
  %40 = load i32, i32* %39, align 4, !dbg !16390
  store i32 %40, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16158, metadata !DIExpression()) #9, !dbg !16391
  %41 = load i32, i32* %2, align 4, !dbg !16393
  %42 = icmp ne i32 %41, 0, !dbg !16394
  br i1 %42, label %43, label %44, !dbg !16395

43:                                               ; preds = %32
  br label %45, !dbg !16396

44:                                               ; preds = %32
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16397, !srcloc !16169
  br label %45, !dbg !16398

45:                                               ; preds = %43, %44
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16372
  store i32 1, i32* %46, align 4, !dbg !16372
  br label %20, !dbg !16372, !llvm.loop !16399

47:                                               ; preds = %20
  %48 = load i32, i32* %9, align 4, !dbg !16401
  ret i32 %48, !dbg !16402
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dnode_is_linked.96(%struct._dnode.191* noundef %0) #1 !dbg !16403 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !16408, metadata !DIExpression()), !dbg !16409
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16410
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !16411
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !16411
  %6 = load %struct._dnode.191*, %struct._dnode.191** %5, align 4, !dbg !16411
  %7 = icmp ne %struct._dnode.191* %6, null, !dbg !16412
  ret i1 %7, !dbg !16413
}

; Function Attrs: noinline nounwind optnone
define internal void @remove_timeout(%struct._timeout.195* noundef %0) #1 !dbg !16414 {
  %2 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !16415, metadata !DIExpression()), !dbg !16416
  %3 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !16417
  %4 = call %struct._timeout.195* @next(%struct._timeout.195* noundef %3) #10, !dbg !16419
  %5 = icmp ne %struct._timeout.195* %4, null, !dbg !16420
  br i1 %5, label %6, label %15, !dbg !16421

6:                                                ; preds = %1
  %7 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !16422
  %8 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %7, i32 0, i32 2, !dbg !16424
  %9 = load i64, i64* %8, align 8, !dbg !16424
  %10 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !16425
  %11 = call %struct._timeout.195* @next(%struct._timeout.195* noundef %10) #10, !dbg !16426
  %12 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %11, i32 0, i32 2, !dbg !16427
  %13 = load i64, i64* %12, align 8, !dbg !16428
  %14 = add nsw i64 %13, %9, !dbg !16428
  store i64 %14, i64* %12, align 8, !dbg !16428
  br label %15, !dbg !16429

15:                                               ; preds = %6, %1
  %16 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !16430
  %17 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %16, i32 0, i32 0, !dbg !16431
  call void @sys_dlist_remove.97(%struct._dnode.191* noundef %17) #10, !dbg !16432
  ret void, !dbg !16433
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_remove.97(%struct._dnode.191* noundef %0) #1 !dbg !16434 {
  %2 = alloca %struct._dnode.191*, align 4
  %3 = alloca %struct._dnode.191*, align 4
  %4 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !16437, metadata !DIExpression()), !dbg !16438
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %3, metadata !16439, metadata !DIExpression()), !dbg !16440
  %5 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16441
  %6 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %5, i32 0, i32 1, !dbg !16442
  %7 = bitcast %union.anon.0.189* %6 to %struct._dnode.191**, !dbg !16442
  %8 = load %struct._dnode.191*, %struct._dnode.191** %7, align 4, !dbg !16442
  store %struct._dnode.191* %8, %struct._dnode.191** %3, align 4, !dbg !16440
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %4, metadata !16443, metadata !DIExpression()), !dbg !16444
  %9 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16445
  %10 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %9, i32 0, i32 0, !dbg !16446
  %11 = bitcast %union.anon.0.189* %10 to %struct._dnode.191**, !dbg !16446
  %12 = load %struct._dnode.191*, %struct._dnode.191** %11, align 4, !dbg !16446
  store %struct._dnode.191* %12, %struct._dnode.191** %4, align 4, !dbg !16444
  %13 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16447
  %14 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16448
  %15 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %14, i32 0, i32 0, !dbg !16449
  %16 = bitcast %union.anon.0.189* %15 to %struct._dnode.191**, !dbg !16449
  store %struct._dnode.191* %13, %struct._dnode.191** %16, align 4, !dbg !16450
  %17 = load %struct._dnode.191*, %struct._dnode.191** %3, align 4, !dbg !16451
  %18 = load %struct._dnode.191*, %struct._dnode.191** %4, align 4, !dbg !16452
  %19 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %18, i32 0, i32 1, !dbg !16453
  %20 = bitcast %union.anon.0.189* %19 to %struct._dnode.191**, !dbg !16453
  store %struct._dnode.191* %17, %struct._dnode.191** %20, align 4, !dbg !16454
  %21 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16455
  call void @sys_dnode_init.98(%struct._dnode.191* noundef %21) #10, !dbg !16456
  ret void, !dbg !16457
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init.98(%struct._dnode.191* noundef %0) #1 !dbg !16458 {
  %2 = alloca %struct._dnode.191*, align 4
  store %struct._dnode.191* %0, %struct._dnode.191** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.191** %2, metadata !16459, metadata !DIExpression()), !dbg !16460
  %3 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16461
  %4 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %3, i32 0, i32 0, !dbg !16462
  %5 = bitcast %union.anon.0.189* %4 to %struct._dnode.191**, !dbg !16462
  store %struct._dnode.191* null, %struct._dnode.191** %5, align 4, !dbg !16463
  %6 = load %struct._dnode.191*, %struct._dnode.191** %2, align 4, !dbg !16464
  %7 = getelementptr inbounds %struct._dnode.191, %struct._dnode.191* %6, i32 0, i32 1, !dbg !16465
  %8 = bitcast %union.anon.0.189* %7 to %struct._dnode.191**, !dbg !16465
  store %struct._dnode.191* null, %struct._dnode.191** %8, align 4, !dbg !16466
  ret void, !dbg !16467
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_timeout_remaining(%struct._timeout.195* noundef %0) #1 !dbg !16468 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.195*, align 4
  %9 = alloca i64, align 8
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %8, metadata !16473, metadata !DIExpression()), !dbg !16474
  call void @llvm.dbg.declare(metadata i64* %9, metadata !16475, metadata !DIExpression()), !dbg !16476
  store i64 0, i64* %9, align 8, !dbg !16476
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !16477, metadata !DIExpression()), !dbg !16479
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !16479
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !16479
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !16480, metadata !DIExpression()), !dbg !16479
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16028, metadata !DIExpression()) #9, !dbg !16481
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !16483
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16036, metadata !DIExpression()) #9, !dbg !16484
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16038, metadata !DIExpression()) #9, !dbg !16485
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16487, !srcloc !16043
  store i32 %14, i32* %3, align 4, !dbg !16487
  %15 = load i32, i32* %3, align 4, !dbg !16488
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16489
  store i32 %15, i32* %16, align 4, !dbg !16490
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16491
  %18 = load i32, i32* %17, align 4, !dbg !16491
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16479
  store i32 %18, i32* %19, align 4, !dbg !16479
  br label %20, !dbg !16479

20:                                               ; preds = %41, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16492
  %22 = load i32, i32* %21, align 4, !dbg !16492
  %23 = icmp ne i32 %22, 0, !dbg !16492
  %24 = xor i1 %23, true, !dbg !16492
  br i1 %24, label %25, label %43, !dbg !16479

25:                                               ; preds = %20
  %26 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !16494
  %27 = call i64 @timeout_rem(%struct._timeout.195* noundef %26) #10, !dbg !16496
  store i64 %27, i64* %9, align 8, !dbg !16497
  br label %28, !dbg !16498

28:                                               ; preds = %25
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16492
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !16492
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !16492
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !16148, metadata !DIExpression()) #9, !dbg !16499
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !16154, metadata !DIExpression()) #9, !dbg !16501
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !16502
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !16503
  %36 = load i32, i32* %35, align 4, !dbg !16503
  store i32 %36, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16158, metadata !DIExpression()) #9, !dbg !16504
  %37 = load i32, i32* %2, align 4, !dbg !16506
  %38 = icmp ne i32 %37, 0, !dbg !16507
  br i1 %38, label %39, label %40, !dbg !16508

39:                                               ; preds = %28
  br label %41, !dbg !16509

40:                                               ; preds = %28
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16510, !srcloc !16169
  br label %41, !dbg !16511

41:                                               ; preds = %39, %40
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16492
  store i32 1, i32* %42, align 4, !dbg !16492
  br label %20, !dbg !16492, !llvm.loop !16512

43:                                               ; preds = %20
  %44 = load i64, i64* %9, align 8, !dbg !16514
  ret i64 %44, !dbg !16515
}

; Function Attrs: noinline nounwind optnone
define internal i64 @timeout_rem(%struct._timeout.195* noundef %0) #1 !dbg !16516 {
  %2 = alloca i64, align 8
  %3 = alloca %struct._timeout.195*, align 4
  %4 = alloca i64, align 8
  %5 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %3, metadata !16517, metadata !DIExpression()), !dbg !16518
  call void @llvm.dbg.declare(metadata i64* %4, metadata !16519, metadata !DIExpression()), !dbg !16520
  store i64 0, i64* %4, align 8, !dbg !16520
  %6 = load %struct._timeout.195*, %struct._timeout.195** %3, align 4, !dbg !16521
  %7 = call zeroext i1 @z_is_inactive_timeout.99(%struct._timeout.195* noundef %6) #10, !dbg !16523
  br i1 %7, label %8, label %9, !dbg !16524

8:                                                ; preds = %1
  store i64 0, i64* %2, align 8, !dbg !16525
  br label %33, !dbg !16525

9:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %5, metadata !16527, metadata !DIExpression()), !dbg !16529
  %10 = call %struct._timeout.195* @first() #10, !dbg !16530
  store %struct._timeout.195* %10, %struct._timeout.195** %5, align 4, !dbg !16529
  br label %11, !dbg !16531

11:                                               ; preds = %25, %9
  %12 = load %struct._timeout.195*, %struct._timeout.195** %5, align 4, !dbg !16532
  %13 = icmp ne %struct._timeout.195* %12, null, !dbg !16534
  br i1 %13, label %14, label %28, !dbg !16535

14:                                               ; preds = %11
  %15 = load %struct._timeout.195*, %struct._timeout.195** %5, align 4, !dbg !16536
  %16 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %15, i32 0, i32 2, !dbg !16538
  %17 = load i64, i64* %16, align 8, !dbg !16538
  %18 = load i64, i64* %4, align 8, !dbg !16539
  %19 = add nsw i64 %18, %17, !dbg !16539
  store i64 %19, i64* %4, align 8, !dbg !16539
  %20 = load %struct._timeout.195*, %struct._timeout.195** %3, align 4, !dbg !16540
  %21 = load %struct._timeout.195*, %struct._timeout.195** %5, align 4, !dbg !16542
  %22 = icmp eq %struct._timeout.195* %20, %21, !dbg !16543
  br i1 %22, label %23, label %24, !dbg !16544

23:                                               ; preds = %14
  br label %28, !dbg !16545

24:                                               ; preds = %14
  br label %25, !dbg !16547

25:                                               ; preds = %24
  %26 = load %struct._timeout.195*, %struct._timeout.195** %5, align 4, !dbg !16548
  %27 = call %struct._timeout.195* @next(%struct._timeout.195* noundef %26) #10, !dbg !16549
  store %struct._timeout.195* %27, %struct._timeout.195** %5, align 4, !dbg !16550
  br label %11, !dbg !16551, !llvm.loop !16552

28:                                               ; preds = %23, %11
  %29 = load i64, i64* %4, align 8, !dbg !16554
  %30 = call i32 @elapsed.87() #10, !dbg !16555
  %31 = sext i32 %30 to i64, !dbg !16555
  %32 = sub nsw i64 %29, %31, !dbg !16556
  store i64 %32, i64* %2, align 8, !dbg !16557
  br label %33, !dbg !16557

33:                                               ; preds = %28, %8
  %34 = load i64, i64* %2, align 8, !dbg !16558
  ret i64 %34, !dbg !16558
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_inactive_timeout.99(%struct._timeout.195* noundef %0) #1 !dbg !16559 {
  %2 = alloca %struct._timeout.195*, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %2, metadata !16562, metadata !DIExpression()), !dbg !16563
  %3 = load %struct._timeout.195*, %struct._timeout.195** %2, align 4, !dbg !16564
  %4 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %3, i32 0, i32 0, !dbg !16565
  %5 = call zeroext i1 @sys_dnode_is_linked.96(%struct._dnode.191* noundef %4) #10, !dbg !16566
  %6 = xor i1 %5, true, !dbg !16567
  ret i1 %6, !dbg !16568
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_timeout_expires(%struct._timeout.195* noundef %0) #1 !dbg !16569 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %struct._timeout.195*, align 4
  %9 = alloca i64, align 8
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %struct._timeout.195* %0, %struct._timeout.195** %8, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %8, metadata !16570, metadata !DIExpression()), !dbg !16571
  call void @llvm.dbg.declare(metadata i64* %9, metadata !16572, metadata !DIExpression()), !dbg !16573
  store i64 0, i64* %9, align 8, !dbg !16573
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !16574, metadata !DIExpression()), !dbg !16576
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !16576
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !16576
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !16577, metadata !DIExpression()), !dbg !16576
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16028, metadata !DIExpression()) #9, !dbg !16578
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !16580
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16036, metadata !DIExpression()) #9, !dbg !16581
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16038, metadata !DIExpression()) #9, !dbg !16582
  %14 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16584, !srcloc !16043
  store i32 %14, i32* %3, align 4, !dbg !16584
  %15 = load i32, i32* %3, align 4, !dbg !16585
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16586
  store i32 %15, i32* %16, align 4, !dbg !16587
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16588
  %18 = load i32, i32* %17, align 4, !dbg !16588
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16576
  store i32 %18, i32* %19, align 4, !dbg !16576
  br label %20, !dbg !16576

20:                                               ; preds = %43, %1
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16589
  %22 = load i32, i32* %21, align 4, !dbg !16589
  %23 = icmp ne i32 %22, 0, !dbg !16589
  %24 = xor i1 %23, true, !dbg !16589
  br i1 %24, label %25, label %45, !dbg !16576

25:                                               ; preds = %20
  %26 = load i64, i64* @curr_tick, align 8, !dbg !16591
  %27 = load %struct._timeout.195*, %struct._timeout.195** %8, align 4, !dbg !16593
  %28 = call i64 @timeout_rem(%struct._timeout.195* noundef %27) #10, !dbg !16594
  %29 = add i64 %26, %28, !dbg !16595
  store i64 %29, i64* %9, align 8, !dbg !16596
  br label %30, !dbg !16597

30:                                               ; preds = %25
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16589
  %32 = bitcast i32* %31 to [1 x i32]*, !dbg !16589
  %33 = load [1 x i32], [1 x i32]* %32, align 4, !dbg !16589
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %35 = bitcast i32* %34 to [1 x i32]*
  store [1 x i32] %33, [1 x i32]* %35, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !16148, metadata !DIExpression()) #9, !dbg !16598
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !16154, metadata !DIExpression()) #9, !dbg !16600
  %36 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !16601
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !16602
  %38 = load i32, i32* %37, align 4, !dbg !16602
  store i32 %38, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16158, metadata !DIExpression()) #9, !dbg !16603
  %39 = load i32, i32* %2, align 4, !dbg !16605
  %40 = icmp ne i32 %39, 0, !dbg !16606
  br i1 %40, label %41, label %42, !dbg !16607

41:                                               ; preds = %30
  br label %43, !dbg !16608

42:                                               ; preds = %30
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16609, !srcloc !16169
  br label %43, !dbg !16610

43:                                               ; preds = %41, %42
  %44 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16589
  store i32 1, i32* %44, align 4, !dbg !16589
  br label %20, !dbg !16589, !llvm.loop !16611

45:                                               ; preds = %20
  %46 = load i64, i64* %9, align 8, !dbg !16613
  ret i64 %46, !dbg !16614
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_get_next_timeout_expiry() #1 !dbg !16615 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca i32, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %union.anon.68, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16616, metadata !DIExpression()), !dbg !16617
  store i32 -1, i32* %7, align 4, !dbg !16617
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !16618, metadata !DIExpression()), !dbg !16620
  %10 = bitcast %union.anon.68* %8 to i8*, !dbg !16620
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !16620
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !16621, metadata !DIExpression()), !dbg !16620
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !16028, metadata !DIExpression()) #9, !dbg !16622
  %11 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !16624
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !16036, metadata !DIExpression()) #9, !dbg !16625
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16038, metadata !DIExpression()) #9, !dbg !16626
  %12 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16628, !srcloc !16043
  store i32 %12, i32* %2, align 4, !dbg !16628
  %13 = load i32, i32* %2, align 4, !dbg !16629
  %14 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !16630
  store i32 %13, i32* %14, align 4, !dbg !16631
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !16632
  %16 = load i32, i32* %15, align 4, !dbg !16632
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !16620
  store i32 %16, i32* %17, align 4, !dbg !16620
  br label %18, !dbg !16620

18:                                               ; preds = %38, %0
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16633
  %20 = load i32, i32* %19, align 4, !dbg !16633
  %21 = icmp ne i32 %20, 0, !dbg !16633
  %22 = xor i1 %21, true, !dbg !16633
  br i1 %22, label %23, label %40, !dbg !16620

23:                                               ; preds = %18
  %24 = call i32 @next_timeout() #10, !dbg !16635
  store i32 %24, i32* %7, align 4, !dbg !16637
  br label %25, !dbg !16638

25:                                               ; preds = %23
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !16633
  %27 = bitcast i32* %26 to [1 x i32]*, !dbg !16633
  %28 = load [1 x i32], [1 x i32]* %27, align 4, !dbg !16633
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %30 = bitcast i32* %29 to [1 x i32]*
  store [1 x i32] %28, [1 x i32]* %30, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !16148, metadata !DIExpression()) #9, !dbg !16639
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !16154, metadata !DIExpression()) #9, !dbg !16641
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !16642
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !16643
  %33 = load i32, i32* %32, align 4, !dbg !16643
  store i32 %33, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !16158, metadata !DIExpression()) #9, !dbg !16644
  %34 = load i32, i32* %1, align 4, !dbg !16646
  %35 = icmp ne i32 %34, 0, !dbg !16647
  br i1 %35, label %36, label %37, !dbg !16648

36:                                               ; preds = %25
  br label %38, !dbg !16649

37:                                               ; preds = %25
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16650, !srcloc !16169
  br label %38, !dbg !16651

38:                                               ; preds = %36, %37
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16633
  store i32 1, i32* %39, align 4, !dbg !16633
  br label %18, !dbg !16633, !llvm.loop !16652

40:                                               ; preds = %18
  %41 = load i32, i32* %7, align 4, !dbg !16654
  ret i32 %41, !dbg !16655
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) #1 !dbg !16656 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  store i32 %0, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !16657, metadata !DIExpression()), !dbg !16658
  %16 = zext i1 %1 to i8
  store i8 %16, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !16659, metadata !DIExpression()), !dbg !16660
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !16661, metadata !DIExpression()), !dbg !16663
  %17 = bitcast %union.anon.68* %11 to i8*, !dbg !16663
  call void @llvm.memset.p0i8.i32(i8* align 4 %17, i8 0, i32 4, i1 false), !dbg !16663
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !16664, metadata !DIExpression()), !dbg !16663
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !16028, metadata !DIExpression()) #9, !dbg !16665
  %18 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !16667
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !16036, metadata !DIExpression()) #9, !dbg !16668
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16038, metadata !DIExpression()) #9, !dbg !16669
  %19 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16671, !srcloc !16043
  store i32 %19, i32* %4, align 4, !dbg !16671
  %20 = load i32, i32* %4, align 4, !dbg !16672
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !16673
  store i32 %20, i32* %21, align 4, !dbg !16674
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !16675
  %23 = load i32, i32* %22, align 4, !dbg !16675
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16663
  store i32 %23, i32* %24, align 4, !dbg !16663
  br label %25, !dbg !16663

25:                                               ; preds = %76, %2
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16676
  %27 = load i32, i32* %26, align 4, !dbg !16676
  %28 = icmp ne i32 %27, 0, !dbg !16676
  %29 = xor i1 %28, true, !dbg !16676
  br i1 %29, label %30, label %78, !dbg !16663

30:                                               ; preds = %25
  call void @llvm.dbg.declare(metadata i32* %13, metadata !16678, metadata !DIExpression()), !dbg !16680
  %31 = call i32 @next_timeout() #10, !dbg !16681
  store i32 %31, i32* %13, align 4, !dbg !16680
  call void @llvm.dbg.declare(metadata i8* %14, metadata !16682, metadata !DIExpression()), !dbg !16683
  %32 = load i32, i32* %13, align 4, !dbg !16684
  %33 = sext i32 %32 to i64, !dbg !16684
  %34 = icmp eq i64 %33, -1, !dbg !16685
  br i1 %34, label %39, label %35, !dbg !16686

35:                                               ; preds = %30
  %36 = load i32, i32* %9, align 4, !dbg !16687
  %37 = load i32, i32* %13, align 4, !dbg !16688
  %38 = icmp sle i32 %36, %37, !dbg !16689
  br label %39, !dbg !16686

39:                                               ; preds = %35, %30
  %40 = phi i1 [ true, %30 ], [ %38, %35 ]
  %41 = zext i1 %40 to i8, !dbg !16683
  store i8 %41, i8* %14, align 1, !dbg !16683
  call void @llvm.dbg.declare(metadata i8* %15, metadata !16690, metadata !DIExpression()), !dbg !16691
  %42 = load i32, i32* %13, align 4, !dbg !16692
  %43 = icmp sle i32 %42, 1, !dbg !16693
  %44 = zext i1 %43 to i8, !dbg !16691
  store i8 %44, i8* %15, align 1, !dbg !16691
  %45 = load i8, i8* %15, align 1, !dbg !16694
  %46 = trunc i8 %45 to i1, !dbg !16694
  br i1 %46, label %62, label %47, !dbg !16696

47:                                               ; preds = %39
  %48 = load i8, i8* %14, align 1, !dbg !16697
  %49 = trunc i8 %48 to i1, !dbg !16697
  br i1 %49, label %50, label %62, !dbg !16698

50:                                               ; preds = %47
  %51 = load i32, i32* %9, align 4, !dbg !16699
  %52 = load i32, i32* %13, align 4, !dbg !16699
  %53 = icmp slt i32 %51, %52, !dbg !16699
  br i1 %53, label %54, label %56, !dbg !16699

54:                                               ; preds = %50
  %55 = load i32, i32* %9, align 4, !dbg !16699
  br label %58, !dbg !16699

56:                                               ; preds = %50
  %57 = load i32, i32* %13, align 4, !dbg !16699
  br label %58, !dbg !16699

58:                                               ; preds = %56, %54
  %59 = phi i32 [ %55, %54 ], [ %57, %56 ], !dbg !16699
  %60 = load i8, i8* %10, align 1, !dbg !16701
  %61 = trunc i8 %60 to i1, !dbg !16701
  call void @sys_clock_set_timeout(i32 noundef %59, i1 noundef zeroext %61) #10, !dbg !16702
  br label %62, !dbg !16703

62:                                               ; preds = %58, %47, %39
  br label %63, !dbg !16704

63:                                               ; preds = %62
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16676
  %65 = bitcast i32* %64 to [1 x i32]*, !dbg !16676
  %66 = load [1 x i32], [1 x i32]* %65, align 4, !dbg !16676
  %67 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %68 = bitcast i32* %67 to [1 x i32]*
  store [1 x i32] %66, [1 x i32]* %68, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !16148, metadata !DIExpression()) #9, !dbg !16705
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !16154, metadata !DIExpression()) #9, !dbg !16707
  %69 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !16708
  %70 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !16709
  %71 = load i32, i32* %70, align 4, !dbg !16709
  store i32 %71, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16158, metadata !DIExpression()) #9, !dbg !16710
  %72 = load i32, i32* %3, align 4, !dbg !16712
  %73 = icmp ne i32 %72, 0, !dbg !16713
  br i1 %73, label %74, label %75, !dbg !16714

74:                                               ; preds = %63
  br label %76, !dbg !16715

75:                                               ; preds = %63
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16716, !srcloc !16169
  br label %76, !dbg !16717

76:                                               ; preds = %74, %75
  %77 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16676
  store i32 1, i32* %77, align 4, !dbg !16676
  br label %25, !dbg !16676, !llvm.loop !16718

78:                                               ; preds = %25
  ret void, !dbg !16720
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_announce(i32 noundef %0) #1 !dbg !16721 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %struct.k_spinlock.13*, align 4
  %14 = alloca i32, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca %struct._timeout.195*, align 4
  %17 = alloca i32, align 4
  %18 = alloca %union.anon.68, align 4
  store i32 %0, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !16724, metadata !DIExpression()), !dbg !16725
  %19 = load i32, i32* %14, align 4, !dbg !16726
  call void @z_time_slice(i32 noundef %19) #10, !dbg !16727
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !16728, metadata !DIExpression()), !dbg !16729
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !16028, metadata !DIExpression()) #9, !dbg !16730
  %20 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !16732
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !16036, metadata !DIExpression()) #9, !dbg !16733
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16038, metadata !DIExpression()) #9, !dbg !16734
  %21 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16736, !srcloc !16043
  store i32 %21, i32* %5, align 4, !dbg !16736
  %22 = load i32, i32* %5, align 4, !dbg !16737
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16738
  store i32 %22, i32* %23, align 4, !dbg !16739
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !16740
  %25 = load i32, i32* %24, align 4, !dbg !16740
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16741
  store i32 %25, i32* %26, align 4, !dbg !16741
  %27 = load i32, i32* %14, align 4, !dbg !16742
  store i32 %27, i32* @announce_remaining, align 4, !dbg !16743
  br label %28, !dbg !16744

28:                                               ; preds = %65, %1
  %29 = call %struct._timeout.195* @first() #10, !dbg !16745
  %30 = icmp ne %struct._timeout.195* %29, null, !dbg !16746
  br i1 %30, label %31, label %38, !dbg !16747

31:                                               ; preds = %28
  %32 = call %struct._timeout.195* @first() #10, !dbg !16748
  %33 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %32, i32 0, i32 2, !dbg !16749
  %34 = load i64, i64* %33, align 8, !dbg !16749
  %35 = load i32, i32* @announce_remaining, align 4, !dbg !16750
  %36 = sext i32 %35 to i64, !dbg !16750
  %37 = icmp sle i64 %34, %36, !dbg !16751
  br label %38

38:                                               ; preds = %31, %28
  %39 = phi i1 [ false, %28 ], [ %37, %31 ], !dbg !16752
  br i1 %39, label %40, label %82, !dbg !16744

40:                                               ; preds = %38
  call void @llvm.dbg.declare(metadata %struct._timeout.195** %16, metadata !16753, metadata !DIExpression()), !dbg !16755
  %41 = call %struct._timeout.195* @first() #10, !dbg !16756
  store %struct._timeout.195* %41, %struct._timeout.195** %16, align 4, !dbg !16755
  call void @llvm.dbg.declare(metadata i32* %17, metadata !16757, metadata !DIExpression()), !dbg !16758
  %42 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16759
  %43 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %42, i32 0, i32 2, !dbg !16760
  %44 = load i64, i64* %43, align 8, !dbg !16760
  %45 = trunc i64 %44 to i32, !dbg !16759
  store i32 %45, i32* %17, align 4, !dbg !16758
  %46 = load i32, i32* %17, align 4, !dbg !16761
  %47 = sext i32 %46 to i64, !dbg !16761
  %48 = load i64, i64* @curr_tick, align 8, !dbg !16762
  %49 = add i64 %48, %47, !dbg !16762
  store i64 %49, i64* @curr_tick, align 8, !dbg !16762
  %50 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16763
  %51 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %50, i32 0, i32 2, !dbg !16764
  store i64 0, i64* %51, align 8, !dbg !16765
  %52 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16766
  call void @remove_timeout(%struct._timeout.195* noundef %52) #10, !dbg !16767
  %53 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16768
  %54 = bitcast i32* %53 to [1 x i32]*, !dbg !16768
  %55 = load [1 x i32], [1 x i32]* %54, align 4, !dbg !16768
  %56 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %57 = bitcast i32* %56 to [1 x i32]*
  store [1 x i32] %55, [1 x i32]* %57, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16148, metadata !DIExpression()) #9, !dbg !16769
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16154, metadata !DIExpression()) #9, !dbg !16771
  %58 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !16772
  %59 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16773
  %60 = load i32, i32* %59, align 4, !dbg !16773
  store i32 %60, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16158, metadata !DIExpression()) #9, !dbg !16774
  %61 = load i32, i32* %3, align 4, !dbg !16776
  %62 = icmp ne i32 %61, 0, !dbg !16777
  br i1 %62, label %63, label %64, !dbg !16778

63:                                               ; preds = %40
  br label %65, !dbg !16779

64:                                               ; preds = %40
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16780, !srcloc !16169
  br label %65, !dbg !16781

65:                                               ; preds = %63, %64
  %66 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16782
  %67 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %66, i32 0, i32 1, !dbg !16783
  %68 = load void (%struct._timeout.195*)*, void (%struct._timeout.195*)** %67, align 8, !dbg !16783
  %69 = load %struct._timeout.195*, %struct._timeout.195** %16, align 4, !dbg !16784
  call void %68(%struct._timeout.195* noundef %69) #10, !dbg !16782
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %13, metadata !16028, metadata !DIExpression()) #9, !dbg !16785
  %70 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %13, align 4, !dbg !16787
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !16036, metadata !DIExpression()) #9, !dbg !16788
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16038, metadata !DIExpression()) #9, !dbg !16789
  %71 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16791, !srcloc !16043
  store i32 %71, i32* %4, align 4, !dbg !16791
  %72 = load i32, i32* %4, align 4, !dbg !16792
  %73 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16793
  store i32 %72, i32* %73, align 4, !dbg !16794
  %74 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16795
  %75 = load i32, i32* %74, align 4, !dbg !16795
  %76 = getelementptr inbounds %union.anon.68, %union.anon.68* %18, i32 0, i32 0, !dbg !16796
  store i32 %75, i32* %76, align 4, !dbg !16796
  %77 = bitcast %union.anon.68* %15 to i8*, !dbg !16796
  %78 = bitcast %union.anon.68* %18 to i8*, !dbg !16796
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %77, i8* align 4 %78, i32 4, i1 false), !dbg !16796
  %79 = load i32, i32* %17, align 4, !dbg !16797
  %80 = load i32, i32* @announce_remaining, align 4, !dbg !16798
  %81 = sub nsw i32 %80, %79, !dbg !16798
  store i32 %81, i32* @announce_remaining, align 4, !dbg !16798
  br label %28, !dbg !16744, !llvm.loop !16799

82:                                               ; preds = %38
  %83 = call %struct._timeout.195* @first() #10, !dbg !16801
  %84 = icmp ne %struct._timeout.195* %83, null, !dbg !16803
  br i1 %84, label %85, label %92, !dbg !16804

85:                                               ; preds = %82
  %86 = load i32, i32* @announce_remaining, align 4, !dbg !16805
  %87 = sext i32 %86 to i64, !dbg !16805
  %88 = call %struct._timeout.195* @first() #10, !dbg !16807
  %89 = getelementptr inbounds %struct._timeout.195, %struct._timeout.195* %88, i32 0, i32 2, !dbg !16808
  %90 = load i64, i64* %89, align 8, !dbg !16809
  %91 = sub nsw i64 %90, %87, !dbg !16809
  store i64 %91, i64* %89, align 8, !dbg !16809
  br label %92, !dbg !16810

92:                                               ; preds = %85, %82
  %93 = load i32, i32* @announce_remaining, align 4, !dbg !16811
  %94 = sext i32 %93 to i64, !dbg !16811
  %95 = load i64, i64* @curr_tick, align 8, !dbg !16812
  %96 = add i64 %95, %94, !dbg !16812
  store i64 %96, i64* @curr_tick, align 8, !dbg !16812
  store i32 0, i32* @announce_remaining, align 4, !dbg !16813
  %97 = call i32 @next_timeout() #10, !dbg !16814
  call void @sys_clock_set_timeout(i32 noundef %97, i1 noundef zeroext false) #10, !dbg !16815
  %98 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16816
  %99 = bitcast i32* %98 to [1 x i32]*, !dbg !16816
  %100 = load [1 x i32], [1 x i32]* %99, align 4, !dbg !16816
  %101 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0
  %102 = bitcast i32* %101 to [1 x i32]*
  store [1 x i32] %100, [1 x i32]* %102, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !16148, metadata !DIExpression()) #9, !dbg !16817
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !16154, metadata !DIExpression()) #9, !dbg !16819
  %103 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !16820
  %104 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16821
  %105 = load i32, i32* %104, align 4, !dbg !16821
  store i32 %105, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16158, metadata !DIExpression()) #9, !dbg !16822
  %106 = load i32, i32* %2, align 4, !dbg !16824
  %107 = icmp ne i32 %106, 0, !dbg !16825
  br i1 %107, label %108, label %109, !dbg !16826

108:                                              ; preds = %92
  br label %110, !dbg !16827

109:                                              ; preds = %92
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16828, !srcloc !16169
  br label %110, !dbg !16829

110:                                              ; preds = %108, %109
  ret void, !dbg !16830
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @sys_clock_tick_get() #1 !dbg !16831 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca i64, align 8
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %union.anon.68, align 4
  call void @llvm.dbg.declare(metadata i64* %7, metadata !16834, metadata !DIExpression()), !dbg !16835
  store i64 0, i64* %7, align 8, !dbg !16835
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !16836, metadata !DIExpression()), !dbg !16838
  %10 = bitcast %union.anon.68* %8 to i8*, !dbg !16838
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !16838
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !16839, metadata !DIExpression()), !dbg !16838
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !16028, metadata !DIExpression()) #9, !dbg !16840
  %11 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !16842
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !16036, metadata !DIExpression()) #9, !dbg !16843
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16038, metadata !DIExpression()) #9, !dbg !16844
  %12 = call i32 asm sideeffect "mrs $0, PRIMASK;cpsid i", "=r,~{memory}"() #9, !dbg !16846, !srcloc !16043
  store i32 %12, i32* %2, align 4, !dbg !16846
  %13 = load i32, i32* %2, align 4, !dbg !16847
  %14 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !16848
  store i32 %13, i32* %14, align 4, !dbg !16849
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !16850
  %16 = load i32, i32* %15, align 4, !dbg !16850
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !16838
  store i32 %16, i32* %17, align 4, !dbg !16838
  br label %18, !dbg !16838

18:                                               ; preds = %41, %0
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16851
  %20 = load i32, i32* %19, align 4, !dbg !16851
  %21 = icmp ne i32 %20, 0, !dbg !16851
  %22 = xor i1 %21, true, !dbg !16851
  br i1 %22, label %23, label %43, !dbg !16838

23:                                               ; preds = %18
  %24 = load i64, i64* @curr_tick, align 8, !dbg !16853
  %25 = call i32 @elapsed.87() #10, !dbg !16855
  %26 = sext i32 %25 to i64, !dbg !16855
  %27 = add i64 %24, %26, !dbg !16856
  store i64 %27, i64* %7, align 8, !dbg !16857
  br label %28, !dbg !16858

28:                                               ; preds = %23
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !16851
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !16851
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !16851
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !16148, metadata !DIExpression()) #9, !dbg !16859
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !16154, metadata !DIExpression()) #9, !dbg !16861
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !16862
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0, !dbg !16863
  %36 = load i32, i32* %35, align 4, !dbg !16863
  store i32 %36, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !16158, metadata !DIExpression()) #9, !dbg !16864
  %37 = load i32, i32* %1, align 4, !dbg !16866
  %38 = icmp ne i32 %37, 0, !dbg !16867
  br i1 %38, label %39, label %40, !dbg !16868

39:                                               ; preds = %28
  br label %41, !dbg !16869

40:                                               ; preds = %28
  call void asm sideeffect "cpsie i;isb", "~{memory}"() #9, !dbg !16870, !srcloc !16169
  br label %41, !dbg !16871

41:                                               ; preds = %39, %40
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !16851
  store i32 1, i32* %42, align 4, !dbg !16851
  br label %18, !dbg !16851, !llvm.loop !16872

43:                                               ; preds = %18
  %44 = load i64, i64* %7, align 8, !dbg !16874
  ret i64 %44, !dbg !16875
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_tick_get_32() #1 !dbg !16876 {
  %1 = call i64 @sys_clock_tick_get() #10, !dbg !16877
  %2 = trunc i64 %1 to i32, !dbg !16878
  ret i32 %2, !dbg !16879
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_impl_k_uptime_ticks() #1 !dbg !16880 {
  %1 = call i64 @sys_clock_tick_get() #10, !dbg !16881
  ret i64 %1, !dbg !16882
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) #1 !dbg !16883 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16884, metadata !DIExpression()), !dbg !16885
  br label %6, !dbg !16886

6:                                                ; preds = %1
  br label %7, !dbg !16887

7:                                                ; preds = %6
  %8 = load i32, i32* %2, align 4, !dbg !16889
  %9 = icmp eq i32 %8, 0, !dbg !16891
  br i1 %9, label %10, label %13, !dbg !16892

10:                                               ; preds = %7
  br label %11, !dbg !16893

11:                                               ; preds = %10
  br label %12, !dbg !16895

12:                                               ; preds = %11
  br label %33, !dbg !16897

13:                                               ; preds = %7
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16898, metadata !DIExpression()), !dbg !16899
  %14 = call i32 @k_cycle_get_32() #10, !dbg !16900
  store i32 %14, i32* %3, align 4, !dbg !16899
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16901, metadata !DIExpression()), !dbg !16902
  %15 = load i32, i32* %2, align 4, !dbg !16903
  %16 = zext i32 %15 to i64, !dbg !16904
  %17 = call i32 @sys_clock_hw_cycles_per_sec.106() #10, !dbg !16905
  %18 = sext i32 %17 to i64, !dbg !16906
  %19 = mul i64 %16, %18, !dbg !16907
  %20 = udiv i64 %19, 1000000, !dbg !16908
  %21 = trunc i64 %20 to i32, !dbg !16909
  store i32 %21, i32* %4, align 4, !dbg !16902
  br label %22, !dbg !16910

22:                                               ; preds = %30, %13
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16911, metadata !DIExpression()), !dbg !16915
  %23 = call i32 @k_cycle_get_32() #10, !dbg !16916
  store i32 %23, i32* %5, align 4, !dbg !16915
  %24 = load i32, i32* %5, align 4, !dbg !16917
  %25 = load i32, i32* %3, align 4, !dbg !16919
  %26 = sub i32 %24, %25, !dbg !16920
  %27 = load i32, i32* %4, align 4, !dbg !16921
  %28 = icmp uge i32 %26, %27, !dbg !16922
  br i1 %28, label %29, label %30, !dbg !16923

29:                                               ; preds = %22
  br label %31, !dbg !16924

30:                                               ; preds = %22
  br label %22, !dbg !16926, !llvm.loop !16927

31:                                               ; preds = %29
  br label %32, !dbg !16930

32:                                               ; preds = %31
  br label %33, !dbg !16931

33:                                               ; preds = %12, %32
  ret void, !dbg !16933
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32() #1 !dbg !16934 {
  %1 = call i32 @arch_k_cycle_get_32() #10, !dbg !16935
  ret i32 %1, !dbg !16936
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec.106() #1 !dbg !16937 {
  ret i32 48000000, !dbg !16938
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32() #1 !dbg !16939 {
  %1 = call i32 @sys_clock_cycle_get_32() #10, !dbg !16941
  ret i32 %1, !dbg !16942
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) #1 !dbg !16943 {
  %2 = alloca i64, align 8
  %3 = alloca %union.argument_value, align 8
  %4 = alloca i64, align 8
  %5 = alloca %union.argument_value, align 8
  %6 = alloca %union.argument_value, align 8
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %8, align 8
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !16946, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.declare(metadata i64* %4, metadata !16948, metadata !DIExpression()), !dbg !16949
  %9 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !16950
  %10 = load i64, i64* %9, align 8, !dbg !16950
  %11 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !16950
  store i64 -1, i64* %11, align 8, !dbg !16950
  %12 = icmp eq i64 %10, -1, !dbg !16950
  br i1 %12, label %13, label %14, !dbg !16952

13:                                               ; preds = %1
  store i64 -1, i64* %2, align 8, !dbg !16953
  br label %40, !dbg !16953

14:                                               ; preds = %1
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !16955
  %16 = load i64, i64* %15, align 8, !dbg !16955
  %17 = getelementptr inbounds %union.argument_value, %union.argument_value* %6, i32 0, i32 0, !dbg !16955
  store i64 0, i64* %17, align 8, !dbg !16955
  %18 = icmp eq i64 %16, 0, !dbg !16955
  br i1 %18, label %19, label %21, !dbg !16957

19:                                               ; preds = %14
  %20 = call i64 @sys_clock_tick_get() #10, !dbg !16958
  store i64 %20, i64* %2, align 8, !dbg !16960
  br label %40, !dbg !16960

21:                                               ; preds = %14
  %22 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !16961
  %23 = load i64, i64* %22, align 8, !dbg !16961
  store i64 %23, i64* %4, align 8, !dbg !16963
  %24 = load i64, i64* %4, align 8, !dbg !16964
  %25 = sub nsw i64 -2, %24, !dbg !16964
  %26 = icmp sge i64 %25, 0, !dbg !16966
  br i1 %26, label %27, label %30, !dbg !16967

27:                                               ; preds = %21
  %28 = load i64, i64* %4, align 8, !dbg !16968
  %29 = sub nsw i64 -2, %28, !dbg !16968
  store i64 %29, i64* %2, align 8, !dbg !16970
  br label %40, !dbg !16970

30:                                               ; preds = %21
  %31 = call i64 @sys_clock_tick_get() #10, !dbg !16971
  %32 = load i64, i64* %4, align 8, !dbg !16972
  %33 = icmp sgt i64 1, %32, !dbg !16972
  br i1 %33, label %34, label %35, !dbg !16972

34:                                               ; preds = %30
  br label %37, !dbg !16972

35:                                               ; preds = %30
  %36 = load i64, i64* %4, align 8, !dbg !16972
  br label %37, !dbg !16972

37:                                               ; preds = %35, %34
  %38 = phi i64 [ 1, %34 ], [ %36, %35 ], !dbg !16972
  %39 = add nsw i64 %31, %38, !dbg !16973
  store i64 %39, i64* %2, align 8, !dbg !16974
  br label %40, !dbg !16974

40:                                               ; preds = %37, %27, %19, %13
  %41 = load i64, i64* %2, align 8, !dbg !16975
  ret i64 %41, !dbg !16975
}

; Function Attrs: noinline nounwind optnone
define dso_local void @boot_banner() #1 !dbg !16976 {
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.109, i32 0, i32 0)) #10, !dbg !16978
  ret void, !dbg !16979
}

attributes #0 = { "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nounwind willreturn writeonly }
attributes #4 = { nofree nosync nounwind willreturn }
attributes #5 = { noinline noreturn nounwind optnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { noinline nounwind optnone readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nounwind willreturn }
attributes #8 = { alwaysinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m0plus" "target-features"="+armv6-m,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nounwind }
attributes #10 = { nobuiltin "no-builtins" }
attributes #11 = { nobuiltin nounwind readnone willreturn "no-builtins" }
attributes #12 = { nobuiltin noreturn "no-builtins" }
attributes #13 = { nobuiltin nounwind "no-builtins" }

!llvm.dbg.cu = !{!1614, !2, !3273, !27, !269, !3275, !3277, !3314, !3316, !278, !3318, !3320, !3352, !3354, !3370, !3386, !3429, !3489, !3519, !3535, !1046, !1056, !1625, !1724, !2490, !3545, !2611, !3547, !2774, !3550, !2780, !3106, !3568, !3118, !3570, !3236, !3573}
!llvm.ident = !{!3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575, !3575}
!llvm.module.flags = !{!3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 40, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 1792, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 28)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 896, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_k_thread_obj_thread", scope: !27, file: !107, line: 36, type: !113, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/debug/gdbstub/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !258, !262, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "_k_thread_data_thread", scope: !27, file: !107, line: 36, type: !108, isLocal: false, isDefinition: true, align: 32)
!107 = !DIFile(filename: "zephyr/samples/subsys/debug/gdbstub/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !109, line: 620, size: 384, elements: !110)
!109 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!110 = !{!111, !229, !238, !239, !244, !245, !246, !247, !248, !249, !251, !255}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !108, file: !109, line: 621, baseType: !112, size: 32)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !115)
!114 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !188, !201, !202, !203, !204, !224}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !113, file: !114, line: 247, baseType: !117, size: 384)
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !118)
!118 = !{!119, !147, !155, !158, !159, !172, !174, !175}
!119 = !DIDerivedType(tag: DW_TAG_member, scope: !117, file: !114, line: 60, baseType: !120, size: 64)
!120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !117, file: !114, line: 60, size: 64, elements: !121)
!121 = !{!122, !138}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !120, file: !114, line: 61, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !125)
!124 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !126)
!126 = !{!127, !133}
!127 = !DIDerivedType(tag: DW_TAG_member, scope: !125, file: !124, line: 38, baseType: !128, size: 32)
!128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !125, file: !124, line: 38, size: 32, elements: !129)
!129 = !{!130, !132}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !128, file: !124, line: 39, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !128, file: !124, line: 40, baseType: !131, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_member, scope: !125, file: !124, line: 42, baseType: !134, size: 32, offset: 32)
!134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !125, file: !124, line: 42, size: 32, elements: !135)
!135 = !{!136, !137}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !134, file: !124, line: 43, baseType: !131, size: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !134, file: !124, line: 44, baseType: !131, size: 32)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !120, file: !114, line: 62, baseType: !139, size: 64)
!139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !141)
!140 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!141 = !{!142}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !139, file: !140, line: 50, baseType: !143, size: 64)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 64, elements: !145)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!145 = !{!146}
!146 = !DISubrange(count: 2)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !117, file: !114, line: 68, baseType: !148, size: 32, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !151)
!150 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !152)
!152 = !{!153}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !151, file: !150, line: 232, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !125)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !117, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !157)
!157 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !117, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!159 = !DIDerivedType(tag: DW_TAG_member, scope: !117, file: !114, line: 90, baseType: !160, size: 16, offset: 112)
!160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !117, file: !114, line: 90, size: 16, elements: !161)
!161 = !{!162, !169}
!162 = !DIDerivedType(tag: DW_TAG_member, scope: !160, file: !114, line: 91, baseType: !163, size: 16)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !160, file: !114, line: 91, size: 16, elements: !164)
!164 = !{!165, !168}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !163, file: !114, line: 96, baseType: !166, size: 8)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !167)
!167 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !163, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !160, file: !114, line: 100, baseType: !170, size: 16)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !171)
!171 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !117, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !117, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !117, file: !114, line: 131, baseType: !176, size: 192, offset: 192)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !177)
!177 = !{!178, !179, !185}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !176, file: !150, line: 245, baseType: !123, size: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !176, file: !150, line: 246, baseType: !180, size: 32, offset: 64)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !181)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !184}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !176, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !187)
!187 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !113, file: !114, line: 250, baseType: !189, size: 288, offset: 384)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !191)
!190 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !189, file: !190, line: 26, baseType: !173, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !189, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !189, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !189, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !189, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !189, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !189, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !189, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !189, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !113, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !113, file: !114, line: 256, baseType: !149, size: 64, offset: 704)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !113, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !113, file: !114, line: 325, baseType: !205, size: 32, offset: 800)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 32)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !207)
!207 = !{!208, !219, !220}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !206, file: !109, line: 5074, baseType: !209, size: 96)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !211)
!210 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!211 = !{!212, !215, !216}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !209, file: !210, line: 57, baseType: !213, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !210, line: 57, flags: DIFlagFwdDecl)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !209, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !209, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !218, line: 214, baseType: !32)
!218 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!219 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !206, file: !109, line: 5075, baseType: !149, size: 64, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !206, file: !109, line: 5076, baseType: !221, offset: 160)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!222 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!223 = !{}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !113, file: !114, line: 343, baseType: !225, size: 64, offset: 832)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !226)
!226 = !{!227, !228}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !225, file: !190, line: 63, baseType: !173, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !225, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !108, file: !109, line: 622, baseType: !230, size: 32, offset: 32)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !233)
!232 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !235)
!234 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!235 = !{!236}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !233, file: !234, line: 48, baseType: !237, size: 8)
!237 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !108, file: !109, line: 623, baseType: !32, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !108, file: !109, line: 624, baseType: !240, size: 32, offset: 96)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !232, line: 46, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{null, !102, !102, !102}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !108, file: !109, line: 625, baseType: !102, size: 32, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !108, file: !109, line: 626, baseType: !102, size: 32, offset: 160)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !108, file: !109, line: 627, baseType: !102, size: 32, offset: 192)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !108, file: !109, line: 628, baseType: !103, size: 32, offset: 224)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !108, file: !109, line: 629, baseType: !173, size: 32, offset: 256)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !108, file: !109, line: 630, baseType: !250, size: 32, offset: 288)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !108, file: !109, line: 631, baseType: !252, size: 32, offset: 320)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DISubroutineType(types: !254)
!254 = !{null}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !108, file: !109, line: 632, baseType: !256, size: 32, offset: 352)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "thread", scope: !27, file: !107, line: 36, type: !260, isLocal: false, isDefinition: true)
!260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !112)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "_k_thread_stack_thread", scope: !27, file: !107, line: 36, type: !264, isLocal: false, isDefinition: true, align: 64)
!264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 4096, elements: !265)
!265 = !{!266}
!266 = !DISubrange(count: 512)
!267 = !DIGlobalVariableExpression(var: !268, expr: !DIExpression())
!268 = distinct !DIGlobalVariable(name: "_char_out", scope: !269, file: !272, line: 54, type: !273, isLocal: false, isDefinition: true)
!269 = distinct !DICompileUnit(language: DW_LANG_C99, file: !270, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !271, splitDebugInlining: false, nameTableKind: None)
!270 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!271 = !{!267}
!272 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DISubroutineType(types: !275)
!275 = !{!103, !103}
!276 = !DIGlobalVariableExpression(var: !277, expr: !DIExpression())
!277 = distinct !DIGlobalVariable(name: "__init_atmel_samd_init", scope: !278, file: !1012, line: 202, type: !1013, isLocal: true, isDefinition: true, align: 32)
!278 = distinct !DICompileUnit(language: DW_LANG_C99, file: !279, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !280, globals: !1011, splitDebugInlining: false, nameTableKind: None)
!279 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam0/common/./soc_samd2x.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!280 = !{!102, !103, !281, !403, !742, !743, !810}
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nvmctrl", file: !283, line: 335, baseType: !284)
!283 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/nvmctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !283, line: 320, size: 288, elements: !285)
!285 = !{!286, !297, !303, !317, !328, !339, !343, !354, !355, !366, !367, !382, !383, !393}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !284, file: !283, line: 321, baseType: !287, size: 16)
!287 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_CTRLA_Type", file: !283, line: 50, baseType: !289)
!289 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 43, size: 16, elements: !290)
!290 = !{!291, !296}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !289, file: !283, line: 48, baseType: !292, size: 16)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !289, file: !283, line: 44, size: 16, elements: !293)
!293 = !{!294, !295}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !292, file: !283, line: 45, baseType: !170, size: 7, flags: DIFlagBitField, extraData: i64 0)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "CMDEX", scope: !292, file: !283, line: 47, baseType: !170, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !289, file: !283, line: 49, baseType: !170, size: 16)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !284, file: !283, line: 322, baseType: !298, size: 16, offset: 16)
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 16, elements: !145)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "RoReg8", file: !300, line: 52, baseType: !301)
!300 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/samd21e18a.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !302)
!302 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !156)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLB", scope: !284, file: !283, line: 323, baseType: !304, size: 32, offset: 32)
!304 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !305)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_CTRLB_Type", file: !283, line: 107, baseType: !306)
!306 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 94, size: 32, elements: !307)
!307 = !{!308, !316}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !306, file: !283, line: 105, baseType: !309, size: 32)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !306, file: !283, line: 95, size: 32, elements: !310)
!310 = !{!311, !312, !313, !314, !315}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "RWS", scope: !309, file: !283, line: 97, baseType: !173, size: 4, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "MANW", scope: !309, file: !283, line: 99, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPPRM", scope: !309, file: !283, line: 100, baseType: !173, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "READMODE", scope: !309, file: !283, line: 102, baseType: !173, size: 2, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "CACHEDIS", scope: !309, file: !283, line: 103, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !306, file: !283, line: 106, baseType: !173, size: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "PARAM", scope: !284, file: !283, line: 324, baseType: !318, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !319)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_PARAM_Type", file: !283, line: 155, baseType: !320)
!320 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 148, size: 32, elements: !321)
!321 = !{!322, !327}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !320, file: !283, line: 153, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !320, file: !283, line: 149, size: 32, elements: !324)
!324 = !{!325, !326}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "NVMP", scope: !323, file: !283, line: 150, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "PSZ", scope: !323, file: !283, line: 151, baseType: !173, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !320, file: !283, line: 154, baseType: !173, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !284, file: !283, line: 325, baseType: !329, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !330)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_INTENCLR_Type", file: !283, line: 194, baseType: !331)
!331 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 187, size: 8, elements: !332)
!332 = !{!333, !338}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !331, file: !283, line: 192, baseType: !334, size: 8)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !331, file: !283, line: 188, size: 8, elements: !335)
!335 = !{!336, !337}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "READY", scope: !334, file: !283, line: 189, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !334, file: !283, line: 190, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !331, file: !283, line: 193, baseType: !156, size: 8)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !284, file: !283, line: 326, baseType: !340, size: 24, offset: 104)
!340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 24, elements: !341)
!341 = !{!342}
!342 = !DISubrange(count: 3)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !284, file: !283, line: 327, baseType: !344, size: 8, offset: 128)
!344 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !345)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_INTENSET_Type", file: !283, line: 215, baseType: !346)
!346 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 208, size: 8, elements: !347)
!347 = !{!348, !353}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !346, file: !283, line: 213, baseType: !349, size: 8)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !346, file: !283, line: 209, size: 8, elements: !350)
!350 = !{!351, !352}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "READY", scope: !349, file: !283, line: 210, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !349, file: !283, line: 211, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !346, file: !283, line: 214, baseType: !156, size: 8)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !284, file: !283, line: 328, baseType: !340, size: 24, offset: 136)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !284, file: !283, line: 329, baseType: !356, size: 8, offset: 160)
!356 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !357)
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_INTFLAG_Type", file: !283, line: 236, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 229, size: 8, elements: !359)
!359 = !{!360, !365}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !358, file: !283, line: 234, baseType: !361, size: 8)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !358, file: !283, line: 230, size: 8, elements: !362)
!362 = !{!363, !364}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "READY", scope: !361, file: !283, line: 231, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !361, file: !283, line: 232, baseType: !301, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !358, file: !283, line: 235, baseType: !156, size: 8)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !284, file: !283, line: 330, baseType: !340, size: 24, offset: 168)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !284, file: !283, line: 331, baseType: !368, size: 16, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !369)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_STATUS_Type", file: !283, line: 262, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 250, size: 16, elements: !371)
!371 = !{!372, !381}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !370, file: !283, line: 260, baseType: !373, size: 16)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !283, line: 251, size: 16, elements: !374)
!374 = !{!375, !376, !377, !378, !379, !380}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "PRM", scope: !373, file: !283, line: 252, baseType: !170, size: 1, flags: DIFlagBitField, extraData: i64 0)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !373, file: !283, line: 253, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "PROGE", scope: !373, file: !283, line: 254, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "LOCKE", scope: !373, file: !283, line: 255, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "NVME", scope: !373, file: !283, line: 256, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "SB", scope: !373, file: !283, line: 258, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !370, file: !283, line: 261, baseType: !170, size: 16)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !284, file: !283, line: 332, baseType: !298, size: 16, offset: 208)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "ADDR", scope: !284, file: !283, line: 333, baseType: !384, size: 32, offset: 224)
!384 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !385)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_ADDR_Type", file: !283, line: 290, baseType: !386)
!386 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 284, size: 32, elements: !387)
!387 = !{!388, !392}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !386, file: !283, line: 288, baseType: !389, size: 32)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !386, file: !283, line: 285, size: 32, elements: !390)
!390 = !{!391}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "ADDR", scope: !389, file: !283, line: 286, baseType: !173, size: 22, flags: DIFlagBitField, extraData: i64 0)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !386, file: !283, line: 289, baseType: !173, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "LOCK", scope: !284, file: !283, line: 334, baseType: !394, size: 16, offset: 256)
!394 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !395)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVMCTRL_LOCK_Type", file: !283, line: 308, baseType: !396)
!396 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !283, line: 303, size: 16, elements: !397)
!397 = !{!398, !402}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !396, file: !283, line: 306, baseType: !399, size: 16)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !396, file: !283, line: 304, size: 16, elements: !400)
!400 = !{!401}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "LOCK", scope: !399, file: !283, line: 305, baseType: !170, size: 16, flags: DIFlagBitField, extraData: i64 0)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !396, file: !283, line: 307, baseType: !170, size: 16)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sysctrl", file: !405, line: 928, baseType: !406)
!405 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/sysctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 899, size: 672, elements: !407)
!407 = !{!408, !432, !456, !482, !507, !523, !524, !542, !543, !560, !571, !572, !587, !607, !608, !620, !632, !642, !643, !660, !664, !675, !676, !688, !700, !701, !712, !728}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !406, file: !405, line: 900, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !410)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_INTENCLR_Type", file: !405, line: 64, baseType: !411)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 43, size: 32, elements: !412)
!412 = !{!413, !431}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !411, file: !405, line: 62, baseType: !414, size: 32)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !411, file: !405, line: 44, size: 32, elements: !415)
!415 = !{!416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !414, file: !405, line: 45, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32KRDY", scope: !414, file: !405, line: 46, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KRDY", scope: !414, file: !405, line: 47, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8MRDY", scope: !414, file: !405, line: 48, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !414, file: !405, line: 49, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !414, file: !405, line: 50, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !414, file: !405, line: 51, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !414, file: !405, line: 52, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !414, file: !405, line: 53, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33RDY", scope: !414, file: !405, line: 54, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33DET", scope: !414, file: !405, line: 55, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "B33SRDY", scope: !414, file: !405, line: 56, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKR", scope: !414, file: !405, line: 58, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKF", scope: !414, file: !405, line: 59, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLTO", scope: !414, file: !405, line: 60, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !411, file: !405, line: 63, baseType: !173, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !406, file: !405, line: 901, baseType: !433, size: 32, offset: 32)
!433 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !434)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_INTENSET_Type", file: !405, line: 125, baseType: !435)
!435 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 104, size: 32, elements: !436)
!436 = !{!437, !455}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !435, file: !405, line: 123, baseType: !438, size: 32)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !405, line: 105, size: 32, elements: !439)
!439 = !{!440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !438, file: !405, line: 106, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32KRDY", scope: !438, file: !405, line: 107, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KRDY", scope: !438, file: !405, line: 108, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8MRDY", scope: !438, file: !405, line: 109, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !438, file: !405, line: 110, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !438, file: !405, line: 111, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !438, file: !405, line: 112, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !438, file: !405, line: 113, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !438, file: !405, line: 114, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33RDY", scope: !438, file: !405, line: 115, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33DET", scope: !438, file: !405, line: 116, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "B33SRDY", scope: !438, file: !405, line: 117, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKR", scope: !438, file: !405, line: 119, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKF", scope: !438, file: !405, line: 120, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLTO", scope: !438, file: !405, line: 121, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !435, file: !405, line: 124, baseType: !173, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !406, file: !405, line: 902, baseType: !457, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !458)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_INTFLAG_Type", file: !405, line: 186, baseType: !459)
!459 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 165, size: 32, elements: !460)
!460 = !{!461, !481}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !459, file: !405, line: 184, baseType: !462, size: 32)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !459, file: !405, line: 166, size: 32, elements: !463)
!463 = !{!464, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !462, file: !405, line: 167, baseType: !465, size: 1, flags: DIFlagBitField, extraData: i64 0)
!465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !173)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32KRDY", scope: !462, file: !405, line: 168, baseType: !465, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KRDY", scope: !462, file: !405, line: 169, baseType: !465, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8MRDY", scope: !462, file: !405, line: 170, baseType: !465, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !462, file: !405, line: 171, baseType: !465, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !462, file: !405, line: 172, baseType: !465, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !462, file: !405, line: 173, baseType: !465, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !462, file: !405, line: 174, baseType: !465, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !462, file: !405, line: 175, baseType: !465, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33RDY", scope: !462, file: !405, line: 176, baseType: !465, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33DET", scope: !462, file: !405, line: 177, baseType: !465, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "B33SRDY", scope: !462, file: !405, line: 178, baseType: !465, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKR", scope: !462, file: !405, line: 180, baseType: !465, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKF", scope: !462, file: !405, line: 181, baseType: !465, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLTO", scope: !462, file: !405, line: 182, baseType: !465, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !459, file: !405, line: 185, baseType: !173, size: 32)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "PCLKSR", scope: !406, file: !405, line: 903, baseType: !483, size: 32, offset: 96)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !485)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_PCLKSR_Type", file: !405, line: 247, baseType: !486)
!486 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 226, size: 32, elements: !487)
!487 = !{!488, !506}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !486, file: !405, line: 245, baseType: !489, size: 32)
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !486, file: !405, line: 227, size: 32, elements: !490)
!490 = !{!491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "XOSCRDY", scope: !489, file: !405, line: 228, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32KRDY", scope: !489, file: !405, line: 229, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32KRDY", scope: !489, file: !405, line: 230, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8MRDY", scope: !489, file: !405, line: 231, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRDY", scope: !489, file: !405, line: 232, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLOOB", scope: !489, file: !405, line: 233, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKF", scope: !489, file: !405, line: 234, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLLCKC", scope: !489, file: !405, line: 235, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLRCS", scope: !489, file: !405, line: 236, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33RDY", scope: !489, file: !405, line: 237, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33DET", scope: !489, file: !405, line: 238, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "B33SRDY", scope: !489, file: !405, line: 239, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKR", scope: !489, file: !405, line: 241, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLCKF", scope: !489, file: !405, line: 242, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLLTO", scope: !489, file: !405, line: 243, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !486, file: !405, line: 246, baseType: !173, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC", scope: !406, file: !405, line: 904, baseType: !508, size: 16, offset: 128)
!508 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !509)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_XOSC_Type", file: !405, line: 300, baseType: !510)
!510 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 287, size: 16, elements: !511)
!511 = !{!512, !522}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !510, file: !405, line: 298, baseType: !513, size: 16)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !510, file: !405, line: 288, size: 16, elements: !514)
!514 = !{!515, !516, !517, !518, !519, !520, !521}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !513, file: !405, line: 290, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "XTALEN", scope: !513, file: !405, line: 291, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !513, file: !405, line: 293, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !513, file: !405, line: 294, baseType: !170, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GAIN", scope: !513, file: !405, line: 295, baseType: !170, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "AMPGC", scope: !513, file: !405, line: 296, baseType: !170, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "STARTUP", scope: !513, file: !405, line: 297, baseType: !170, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !510, file: !405, line: 299, baseType: !170, size: 16)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !406, file: !405, line: 905, baseType: !298, size: 16, offset: 144)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "XOSC32K", scope: !406, file: !405, line: 906, baseType: !525, size: 16, offset: 160)
!525 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !526)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_XOSC32K_Type", file: !405, line: 352, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 336, size: 16, elements: !528)
!528 = !{!529, !541}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !527, file: !405, line: 350, baseType: !530, size: 16)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !527, file: !405, line: 337, size: 16, elements: !531)
!531 = !{!532, !533, !534, !535, !536, !537, !538, !539, !540}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !530, file: !405, line: 339, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "XTALEN", scope: !530, file: !405, line: 340, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "EN32K", scope: !530, file: !405, line: 341, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "EN1K", scope: !530, file: !405, line: 342, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "AAMPEN", scope: !530, file: !405, line: 343, baseType: !170, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !530, file: !405, line: 344, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !530, file: !405, line: 345, baseType: !170, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "STARTUP", scope: !530, file: !405, line: 346, baseType: !170, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !530, file: !405, line: 348, baseType: !170, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !527, file: !405, line: 351, baseType: !170, size: 16)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !406, file: !405, line: 907, baseType: !298, size: 16, offset: 176)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "OSC32K", scope: !406, file: !405, line: 908, baseType: !544, size: 32, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !545)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_OSC32K_Type", file: !405, line: 398, baseType: !546)
!546 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 381, size: 32, elements: !547)
!547 = !{!548, !559}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !546, file: !405, line: 396, baseType: !549, size: 32)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !546, file: !405, line: 382, size: 32, elements: !550)
!550 = !{!551, !552, !553, !554, !555, !556, !557, !558}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !549, file: !405, line: 384, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "EN32K", scope: !549, file: !405, line: 385, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "EN1K", scope: !549, file: !405, line: 386, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !549, file: !405, line: 388, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !549, file: !405, line: 389, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "STARTUP", scope: !549, file: !405, line: 390, baseType: !173, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !549, file: !405, line: 392, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !549, file: !405, line: 394, baseType: !173, size: 7, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !546, file: !405, line: 397, baseType: !173, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "OSCULP32K", scope: !406, file: !405, line: 909, baseType: !561, size: 8, offset: 224)
!561 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !562)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_OSCULP32K_Type", file: !405, line: 433, baseType: !563)
!563 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 426, size: 8, elements: !564)
!564 = !{!565, !570}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !563, file: !405, line: 431, baseType: !566, size: 8)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !563, file: !405, line: 427, size: 8, elements: !567)
!567 = !{!568, !569}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !566, file: !405, line: 428, baseType: !156, size: 5, flags: DIFlagBitField, extraData: i64 0)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !566, file: !405, line: 430, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !563, file: !405, line: 432, baseType: !156, size: 8)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !406, file: !405, line: 910, baseType: !340, size: 24, offset: 232)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "OSC8M", scope: !406, file: !405, line: 911, baseType: !573, size: 32, offset: 256)
!573 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !574)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_OSC8M_Type", file: !405, line: 462, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 448, size: 32, elements: !576)
!576 = !{!577, !586}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !575, file: !405, line: 460, baseType: !578, size: 32)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !575, file: !405, line: 449, size: 32, elements: !579)
!579 = !{!580, !581, !582, !583, !584, !585}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !578, file: !405, line: 451, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !578, file: !405, line: 453, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !578, file: !405, line: 454, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "PRESC", scope: !578, file: !405, line: 455, baseType: !173, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !578, file: !405, line: 457, baseType: !173, size: 12, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "FRANGE", scope: !578, file: !405, line: 459, baseType: !173, size: 2, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !575, file: !405, line: 461, baseType: !173, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLCTRL", scope: !406, file: !405, line: 912, baseType: !588, size: 16, offset: 288)
!588 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !589)
!589 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DFLLCTRL_Type", file: !405, line: 520, baseType: !590)
!590 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 503, size: 16, elements: !591)
!591 = !{!592, !606}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !590, file: !405, line: 518, baseType: !593, size: 16)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !590, file: !405, line: 504, size: 16, elements: !594)
!594 = !{!595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !593, file: !405, line: 506, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !593, file: !405, line: 507, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "STABLE", scope: !593, file: !405, line: 508, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "LLAW", scope: !593, file: !405, line: 509, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "USBCRM", scope: !593, file: !405, line: 510, baseType: !170, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !593, file: !405, line: 511, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !593, file: !405, line: 512, baseType: !170, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "CCDIS", scope: !593, file: !405, line: 513, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "QLDIS", scope: !593, file: !405, line: 514, baseType: !170, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "BPLCKC", scope: !593, file: !405, line: 515, baseType: !170, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "WAITLOCK", scope: !593, file: !405, line: 516, baseType: !170, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !590, file: !405, line: 519, baseType: !170, size: 16)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !406, file: !405, line: 913, baseType: !298, size: 16, offset: 304)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLVAL", scope: !406, file: !405, line: 914, baseType: !609, size: 32, offset: 320)
!609 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !610)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DFLLVAL_Type", file: !405, line: 559, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 552, size: 32, elements: !612)
!612 = !{!613, !619}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !611, file: !405, line: 557, baseType: !614, size: 32)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !611, file: !405, line: 553, size: 32, elements: !615)
!615 = !{!616, !617, !618}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "FINE", scope: !614, file: !405, line: 554, baseType: !173, size: 10, flags: DIFlagBitField, extraData: i64 0)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "COARSE", scope: !614, file: !405, line: 555, baseType: !173, size: 6, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "DIFF", scope: !614, file: !405, line: 556, baseType: !173, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !611, file: !405, line: 558, baseType: !173, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLMUL", scope: !406, file: !405, line: 915, baseType: !621, size: 32, offset: 352)
!621 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !622)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DFLLMUL_Type", file: !405, line: 585, baseType: !623)
!623 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 578, size: 32, elements: !624)
!624 = !{!625, !631}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !623, file: !405, line: 583, baseType: !626, size: 32)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !623, file: !405, line: 579, size: 32, elements: !627)
!627 = !{!628, !629, !630}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "MUL", scope: !626, file: !405, line: 580, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "FSTEP", scope: !626, file: !405, line: 581, baseType: !173, size: 10, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "CSTEP", scope: !626, file: !405, line: 582, baseType: !173, size: 6, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !623, file: !405, line: 584, baseType: !173, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "DFLLSYNC", scope: !406, file: !405, line: 916, baseType: !633, size: 8, offset: 384)
!633 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !634)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DFLLSYNC_Type", file: !405, line: 610, baseType: !635)
!635 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 604, size: 8, elements: !636)
!636 = !{!637, !641}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !635, file: !405, line: 608, baseType: !638, size: 8)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !635, file: !405, line: 605, size: 8, elements: !639)
!639 = !{!640}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "READREQ", scope: !638, file: !405, line: 607, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !635, file: !405, line: 609, baseType: !156, size: 8)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !406, file: !405, line: 917, baseType: !340, size: 24, offset: 392)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33", scope: !406, file: !405, line: 918, baseType: !644, size: 32, offset: 416)
!644 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !645)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_BOD33_Type", file: !405, line: 639, baseType: !646)
!646 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 622, size: 32, elements: !647)
!647 = !{!648, !659}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !646, file: !405, line: 637, baseType: !649, size: 32)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !646, file: !405, line: 623, size: 32, elements: !650)
!650 = !{!651, !652, !653, !654, !655, !656, !657, !658}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !649, file: !405, line: 625, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "HYST", scope: !649, file: !405, line: 626, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "ACTION", scope: !649, file: !405, line: 627, baseType: !173, size: 2, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !649, file: !405, line: 629, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !649, file: !405, line: 631, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "CEN", scope: !649, file: !405, line: 632, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "PSEL", scope: !649, file: !405, line: 634, baseType: !173, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "LEVEL", scope: !649, file: !405, line: 635, baseType: !173, size: 6, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !646, file: !405, line: 638, baseType: !173, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !406, file: !405, line: 919, baseType: !661, size: 32, offset: 448)
!661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 32, elements: !662)
!662 = !{!663}
!663 = !DISubrange(count: 4)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "VREG", scope: !406, file: !405, line: 920, baseType: !665, size: 16, offset: 480)
!665 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !666)
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_VREG_Type", file: !405, line: 715, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 706, size: 16, elements: !668)
!668 = !{!669, !674}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !667, file: !405, line: 713, baseType: !670, size: 16)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !667, file: !405, line: 707, size: 16, elements: !671)
!671 = !{!672, !673}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !670, file: !405, line: 709, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "FORCELDO", scope: !670, file: !405, line: 711, baseType: !170, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !667, file: !405, line: 714, baseType: !170, size: 16)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !406, file: !405, line: 921, baseType: !298, size: 16, offset: 496)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "VREF", scope: !406, file: !405, line: 922, baseType: !677, size: 32, offset: 512)
!677 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !678)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_VREF_Type", file: !405, line: 739, baseType: !679)
!679 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 729, size: 32, elements: !680)
!680 = !{!681, !687}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !679, file: !405, line: 737, baseType: !682, size: 32)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !679, file: !405, line: 730, size: 32, elements: !683)
!683 = !{!684, !685, !686}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "TSEN", scope: !682, file: !405, line: 732, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "BGOUTEN", scope: !682, file: !405, line: 733, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !682, file: !405, line: 735, baseType: !173, size: 11, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !679, file: !405, line: 738, baseType: !173, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLCTRLA", scope: !406, file: !405, line: 923, baseType: !689, size: 8, offset: 544)
!689 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !690)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DPLLCTRLA_Type", file: !405, line: 765, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 756, size: 8, elements: !692)
!692 = !{!693, !699}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !691, file: !405, line: 763, baseType: !694, size: 8)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !691, file: !405, line: 757, size: 8, elements: !695)
!695 = !{!696, !697, !698}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !694, file: !405, line: 759, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !694, file: !405, line: 761, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "ONDEMAND", scope: !694, file: !405, line: 762, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !691, file: !405, line: 764, baseType: !156, size: 8)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved8", scope: !406, file: !405, line: 924, baseType: !340, size: 24, offset: 552)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLRATIO", scope: !406, file: !405, line: 925, baseType: !702, size: 32, offset: 576)
!702 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !703)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DPLLRATIO_Type", file: !405, line: 789, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 781, size: 32, elements: !705)
!705 = !{!706, !711}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !704, file: !405, line: 787, baseType: !707, size: 32)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !704, file: !405, line: 782, size: 32, elements: !708)
!708 = !{!709, !710}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "LDR", scope: !707, file: !405, line: 783, baseType: !173, size: 12, flags: DIFlagBitField, extraData: i64 0)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "LDRFRAC", scope: !707, file: !405, line: 785, baseType: !173, size: 4, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !704, file: !405, line: 788, baseType: !173, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLCTRLB", scope: !406, file: !405, line: 926, baseType: !713, size: 32, offset: 608)
!713 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !714)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DPLLCTRLB_Type", file: !405, line: 820, baseType: !715)
!715 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 805, size: 32, elements: !716)
!716 = !{!717, !727}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !715, file: !405, line: 818, baseType: !718, size: 32)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !715, file: !405, line: 806, size: 32, elements: !719)
!719 = !{!720, !721, !722, !723, !724, !725, !726}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "FILTER", scope: !718, file: !405, line: 807, baseType: !173, size: 2, flags: DIFlagBitField, extraData: i64 0)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "LPEN", scope: !718, file: !405, line: 808, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "WUF", scope: !718, file: !405, line: 809, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "REFCLK", scope: !718, file: !405, line: 810, baseType: !173, size: 2, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "LTIME", scope: !718, file: !405, line: 812, baseType: !173, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "LBYPASS", scope: !718, file: !405, line: 814, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !718, file: !405, line: 816, baseType: !173, size: 11, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !715, file: !405, line: 819, baseType: !173, size: 32)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "DPLLSTATUS", scope: !406, file: !405, line: 927, baseType: !729, size: 8, offset: 640)
!729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !730)
!730 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !731)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCTRL_DPLLSTATUS_Type", file: !405, line: 881, baseType: !732)
!732 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !405, line: 872, size: 8, elements: !733)
!733 = !{!734, !741}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !732, file: !405, line: 879, baseType: !735, size: 8)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !732, file: !405, line: 873, size: 8, elements: !736)
!736 = !{!737, !738, !739, !740}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "LOCK", scope: !735, file: !405, line: 874, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "CLKRDY", scope: !735, file: !405, line: 875, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !735, file: !405, line: 876, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !735, file: !405, line: 877, baseType: !156, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !732, file: !405, line: 880, baseType: !156, size: 8)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !745, line: 290, baseType: !746)
!745 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/gclk.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !745, line: 284, size: 96, elements: !747)
!747 = !{!748, !758, !769, !782, !799}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !746, file: !745, line: 285, baseType: !749, size: 8)
!749 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !750)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRL_Type", file: !745, line: 49, baseType: !751)
!751 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 43, size: 8, elements: !752)
!752 = !{!753, !757}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !751, file: !745, line: 47, baseType: !754, size: 8)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !751, file: !745, line: 44, size: 8, elements: !755)
!755 = !{!756}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !754, file: !745, line: 45, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !751, file: !745, line: 48, baseType: !156, size: 8)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !746, file: !745, line: 286, baseType: !759, size: 8, offset: 8)
!759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !760)
!760 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !761)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_STATUS_Type", file: !745, line: 67, baseType: !762)
!762 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 61, size: 8, elements: !763)
!763 = !{!764, !768}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !762, file: !745, line: 65, baseType: !765, size: 8)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !762, file: !745, line: 62, size: 8, elements: !766)
!766 = !{!767}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !765, file: !745, line: 64, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !762, file: !745, line: 66, baseType: !156, size: 8)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "CLKCTRL", scope: !746, file: !745, line: 287, baseType: !770, size: 16, offset: 16)
!770 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !771)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CLKCTRL_Type", file: !745, line: 89, baseType: !772)
!772 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 79, size: 16, elements: !773)
!773 = !{!774, !781}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !772, file: !745, line: 87, baseType: !775, size: 16)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !772, file: !745, line: 80, size: 16, elements: !776)
!776 = !{!777, !778, !779, !780}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !775, file: !745, line: 81, baseType: !170, size: 6, flags: DIFlagBitField, extraData: i64 0)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !775, file: !745, line: 83, baseType: !170, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "CLKEN", scope: !775, file: !745, line: 85, baseType: !170, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !775, file: !745, line: 86, baseType: !170, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !772, file: !745, line: 88, baseType: !170, size: 16)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !746, file: !745, line: 288, baseType: !783, size: 32, offset: 32)
!783 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !784)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !745, line: 214, baseType: !785)
!785 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 199, size: 32, elements: !786)
!786 = !{!787, !798}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !785, file: !745, line: 212, baseType: !788, size: 32)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !785, file: !745, line: 200, size: 32, elements: !789)
!789 = !{!790, !791, !792, !793, !794, !795, !796, !797}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !788, file: !745, line: 201, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !788, file: !745, line: 203, baseType: !173, size: 5, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !788, file: !745, line: 205, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !788, file: !745, line: 206, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !788, file: !745, line: 207, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !788, file: !745, line: 208, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !788, file: !745, line: 209, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !788, file: !745, line: 210, baseType: !173, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !785, file: !745, line: 213, baseType: !173, size: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "GENDIV", scope: !746, file: !745, line: 289, baseType: !800, size: 32, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !801)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENDIV_Type", file: !745, line: 268, baseType: !802)
!802 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 260, size: 32, elements: !803)
!803 = !{!804, !809}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !802, file: !745, line: 266, baseType: !805, size: 32)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !802, file: !745, line: 261, size: 32, elements: !806)
!806 = !{!807, !808}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !805, file: !745, line: 262, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !805, file: !745, line: 264, baseType: !173, size: 16, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !802, file: !745, line: 267, baseType: !173, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pm", file: !812, line: 513, baseType: !813)
!812 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/pm.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 494, size: 480, elements: !814)
!814 = !{!815, !821, !831, !835, !845, !855, !865, !875, !879, !895, !911, !927, !957, !961, !971, !981, !991, !995}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !813, file: !812, line: 495, baseType: !816, size: 8)
!816 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CTRL_Type", file: !812, line: 45, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 43, size: 8, elements: !819)
!819 = !{!820}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !818, file: !812, line: 44, baseType: !156, size: 8)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP", scope: !813, file: !812, line: 496, baseType: !822, size: 8, offset: 8)
!822 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !823)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_SLEEP_Type", file: !812, line: 61, baseType: !824)
!824 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 55, size: 8, elements: !825)
!825 = !{!826, !830}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !824, file: !812, line: 59, baseType: !827, size: 8)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !824, file: !812, line: 56, size: 8, elements: !828)
!828 = !{!829}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "IDLE", scope: !827, file: !812, line: 57, baseType: !156, size: 2, flags: DIFlagBitField, extraData: i64 0)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !824, file: !812, line: 60, baseType: !156, size: 8)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !813, file: !812, line: 497, baseType: !832, size: 48, offset: 16)
!832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 48, elements: !833)
!833 = !{!834}
!834 = !DISubrange(count: 6)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "CPUSEL", scope: !813, file: !812, line: 498, baseType: !836, size: 8, offset: 64)
!836 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !837)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CPUSEL_Type", file: !812, line: 86, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 80, size: 8, elements: !839)
!839 = !{!840, !844}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !838, file: !812, line: 84, baseType: !841, size: 8)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !838, file: !812, line: 81, size: 8, elements: !842)
!842 = !{!843}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "CPUDIV", scope: !841, file: !812, line: 82, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !838, file: !812, line: 85, baseType: !156, size: 8)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "APBASEL", scope: !813, file: !812, line: 499, baseType: !846, size: 8, offset: 72)
!846 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !847)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBASEL_Type", file: !812, line: 121, baseType: !848)
!848 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 115, size: 8, elements: !849)
!849 = !{!850, !854}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !848, file: !812, line: 119, baseType: !851, size: 8)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !848, file: !812, line: 116, size: 8, elements: !852)
!852 = !{!853}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "APBADIV", scope: !851, file: !812, line: 117, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !848, file: !812, line: 120, baseType: !156, size: 8)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "APBBSEL", scope: !813, file: !812, line: 500, baseType: !856, size: 8, offset: 80)
!856 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBSEL_Type", file: !812, line: 156, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 150, size: 8, elements: !859)
!859 = !{!860, !864}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !858, file: !812, line: 154, baseType: !861, size: 8)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !812, line: 151, size: 8, elements: !862)
!862 = !{!863}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "APBBDIV", scope: !861, file: !812, line: 152, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !858, file: !812, line: 155, baseType: !156, size: 8)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "APBCSEL", scope: !813, file: !812, line: 501, baseType: !866, size: 8, offset: 88)
!866 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !867)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCSEL_Type", file: !812, line: 191, baseType: !868)
!868 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 185, size: 8, elements: !869)
!869 = !{!870, !874}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !868, file: !812, line: 189, baseType: !871, size: 8)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !868, file: !812, line: 186, size: 8, elements: !872)
!872 = !{!873}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "APBCDIV", scope: !871, file: !812, line: 187, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !868, file: !812, line: 190, baseType: !156, size: 8)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !813, file: !812, line: 502, baseType: !876, size: 64, offset: 96)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 64, elements: !877)
!877 = !{!878}
!878 = !DISubrange(count: 8)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "AHBMASK", scope: !813, file: !812, line: 503, baseType: !880, size: 32, offset: 160)
!880 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !881)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_AHBMASK_Type", file: !812, line: 232, baseType: !882)
!882 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 220, size: 32, elements: !883)
!883 = !{!884, !894}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !882, file: !812, line: 230, baseType: !885, size: 32)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !882, file: !812, line: 221, size: 32, elements: !886)
!886 = !{!887, !888, !889, !890, !891, !892, !893}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "HPB0_", scope: !885, file: !812, line: 222, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "HPB1_", scope: !885, file: !812, line: 223, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "HPB2_", scope: !885, file: !812, line: 224, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !885, file: !812, line: 225, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !885, file: !812, line: 226, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !885, file: !812, line: 227, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !885, file: !812, line: 228, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !882, file: !812, line: 231, baseType: !173, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "APBAMASK", scope: !813, file: !812, line: 504, baseType: !896, size: 32, offset: 192)
!896 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !897)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBAMASK_Type", file: !812, line: 268, baseType: !898)
!898 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 256, size: 32, elements: !899)
!899 = !{!900, !910}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !898, file: !812, line: 266, baseType: !901, size: 32)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !898, file: !812, line: 257, size: 32, elements: !902)
!902 = !{!903, !904, !905, !906, !907, !908, !909}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "PAC0_", scope: !901, file: !812, line: 258, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "PM_", scope: !901, file: !812, line: 259, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCTRL_", scope: !901, file: !812, line: 260, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "GCLK_", scope: !901, file: !812, line: 261, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_", scope: !901, file: !812, line: 262, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_", scope: !901, file: !812, line: 263, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "EIC_", scope: !901, file: !812, line: 264, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !898, file: !812, line: 267, baseType: !173, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "APBBMASK", scope: !813, file: !812, line: 505, baseType: !912, size: 32, offset: 224)
!912 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !913)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBMASK_Type", file: !812, line: 304, baseType: !914)
!914 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 292, size: 32, elements: !915)
!915 = !{!916, !926}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !914, file: !812, line: 302, baseType: !917, size: 32)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !914, file: !812, line: 293, size: 32, elements: !918)
!918 = !{!919, !920, !921, !922, !923, !924, !925}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "PAC1_", scope: !917, file: !812, line: 294, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !917, file: !812, line: 295, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !917, file: !812, line: 296, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "PORT_", scope: !917, file: !812, line: 297, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !917, file: !812, line: 298, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !917, file: !812, line: 299, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "HMATRIX_", scope: !917, file: !812, line: 300, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !914, file: !812, line: 303, baseType: !173, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "APBCMASK", scope: !813, file: !812, line: 506, baseType: !928, size: 32, offset: 256)
!928 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !929)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCMASK_Type", file: !812, line: 354, baseType: !930)
!930 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 328, size: 32, elements: !931)
!931 = !{!932, !956}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !930, file: !812, line: 352, baseType: !933, size: 32)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !930, file: !812, line: 329, size: 32, elements: !934)
!934 = !{!935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "PAC2_", scope: !933, file: !812, line: 330, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "EVSYS_", scope: !933, file: !812, line: 331, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM0_", scope: !933, file: !812, line: 332, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM1_", scope: !933, file: !812, line: 333, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM2_", scope: !933, file: !812, line: 334, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM3_", scope: !933, file: !812, line: 335, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM4_", scope: !933, file: !812, line: 336, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM5_", scope: !933, file: !812, line: 337, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "TCC0_", scope: !933, file: !812, line: 338, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "TCC1_", scope: !933, file: !812, line: 339, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "TCC2_", scope: !933, file: !812, line: 340, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "TC3_", scope: !933, file: !812, line: 341, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "TC4_", scope: !933, file: !812, line: 342, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "TC5_", scope: !933, file: !812, line: 343, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "TC6_", scope: !933, file: !812, line: 344, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "TC7_", scope: !933, file: !812, line: 345, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_", scope: !933, file: !812, line: 346, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "AC_", scope: !933, file: !812, line: 347, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_", scope: !933, file: !812, line: 348, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "PTC_", scope: !933, file: !812, line: 349, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_", scope: !933, file: !812, line: 350, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !930, file: !812, line: 353, baseType: !173, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !813, file: !812, line: 507, baseType: !958, size: 128, offset: 288)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 128, elements: !959)
!959 = !{!960}
!960 = !DISubrange(count: 16)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !813, file: !812, line: 508, baseType: !962, size: 8, offset: 416)
!962 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !963)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENCLR_Type", file: !812, line: 412, baseType: !964)
!964 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 406, size: 8, elements: !965)
!965 = !{!966, !970}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !964, file: !812, line: 410, baseType: !967, size: 8)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !964, file: !812, line: 407, size: 8, elements: !968)
!968 = !{!969}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !967, file: !812, line: 408, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !964, file: !812, line: 411, baseType: !156, size: 8)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !813, file: !812, line: 509, baseType: !972, size: 8, offset: 424)
!972 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !973)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENSET_Type", file: !812, line: 430, baseType: !974)
!974 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 424, size: 8, elements: !975)
!975 = !{!976, !980}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !974, file: !812, line: 428, baseType: !977, size: 8)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !974, file: !812, line: 425, size: 8, elements: !978)
!978 = !{!979}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !977, file: !812, line: 426, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !974, file: !812, line: 429, baseType: !156, size: 8)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !813, file: !812, line: 510, baseType: !982, size: 8, offset: 432)
!982 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !983)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTFLAG_Type", file: !812, line: 448, baseType: !984)
!984 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 442, size: 8, elements: !985)
!985 = !{!986, !990}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !984, file: !812, line: 446, baseType: !987, size: 8)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !984, file: !812, line: 443, size: 8, elements: !988)
!988 = !{!989}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !987, file: !812, line: 444, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !984, file: !812, line: 447, baseType: !156, size: 8)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !813, file: !812, line: 511, baseType: !992, size: 8, offset: 440)
!992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 8, elements: !993)
!993 = !{!994}
!994 = !DISubrange(count: 1)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "RCAUSE", scope: !813, file: !812, line: 512, baseType: !996, size: 8, offset: 448)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!997 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !998)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_RCAUSE_Type", file: !812, line: 472, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 460, size: 8, elements: !1000)
!1000 = !{!1001, !1010}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !999, file: !812, line: 470, baseType: !1002, size: 8)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !999, file: !812, line: 461, size: 8, elements: !1003)
!1003 = !{!1004, !1005, !1006, !1007, !1008, !1009}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "POR", scope: !1002, file: !812, line: 462, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "BOD12", scope: !1002, file: !812, line: 463, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33", scope: !1002, file: !812, line: 464, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "EXT", scope: !1002, file: !812, line: 466, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "WDT", scope: !1002, file: !812, line: 467, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "SYST", scope: !1002, file: !812, line: 468, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !999, file: !812, line: 471, baseType: !156, size: 8)
!1011 = !{!276}
!1012 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/common/soc_samd2x.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !1016)
!1015 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1016 = !{!1017, !1043}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1014, file: !1015, line: 60, baseType: !1018, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!103, !1021}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !1025)
!1024 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1025 = !{!1026, !1027, !1028, !1029, !1036, !1037}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1023, file: !1024, line: 380, baseType: !256, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1023, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1023, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1023, file: !1024, line: 386, baseType: !1030, size: 32, offset: 96)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !1032)
!1032 = !{!1033, !1034}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1031, file: !1024, line: 359, baseType: !156, size: 8)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1031, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1035 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1023, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1023, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !1024, line: 43, baseType: !1041)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !1042)
!1042 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1014, file: !1015, line: 65, baseType: !1021, size: 32, offset: 32)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !1046, file: !1053, line: 21, type: !273, isLocal: true, isDefinition: true)
!1046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1047, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1048, globals: !1052, splitDebugInlining: false, nameTableKind: None)
!1047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!1048 = !{!1049, !103, !102}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1051, line: 22, baseType: !103)
!1051 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1052 = !{!1044}
!1053 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1054 = !DIGlobalVariableExpression(var: !1055, expr: !DIExpression())
!1055 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1056, file: !1544, line: 411, type: !1558, isLocal: false, isDefinition: true, align: 32)
!1056 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1057, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1058, retainedTypes: !1067, globals: !1541, splitDebugInlining: false, nameTableKind: None)
!1057 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_sam0_eic.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!1058 = !{!1059}
!1059 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sam0_eic_trigger", file: !1060, line: 19, baseType: !32, size: 32, elements: !1061)
!1060 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/sam0_eic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1061 = !{!1062, !1063, !1064, !1065, !1066}
!1062 = !DIEnumerator(name: "SAM0_EIC_RISING", value: 0)
!1063 = !DIEnumerator(name: "SAM0_EIC_FALLING", value: 1)
!1064 = !DIEnumerator(name: "SAM0_EIC_BOTH", value: 2)
!1065 = !DIEnumerator(name: "SAM0_EIC_HIGH", value: 3)
!1066 = !DIEnumerator(name: "SAM0_EIC_LOW", value: 4)
!1067 = !{!1068, !1287, !1475}
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "Eic", file: !1070, line: 661, baseType: !1071)
!1070 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/eic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1070, line: 650, size: 256, elements: !1072)
!1072 = !{!1073, !1084, !1095, !1106, !1116, !1145, !1174, !1203, !1232, !1261}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1071, file: !1070, line: 651, baseType: !1074, size: 8)
!1074 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_CTRL_Type", file: !1070, line: 50, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 43, size: 8, elements: !1077)
!1077 = !{!1078, !1083}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1076, file: !1070, line: 48, baseType: !1079, size: 8)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1076, file: !1070, line: 44, size: 8, elements: !1080)
!1080 = !{!1081, !1082}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1079, file: !1070, line: 45, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !1079, file: !1070, line: 46, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1076, file: !1070, line: 49, baseType: !156, size: 8)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !1071, file: !1070, line: 652, baseType: !1085, size: 8, offset: 8)
!1085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!1086 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_STATUS_Type", file: !1070, line: 70, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 64, size: 8, elements: !1089)
!1089 = !{!1090, !1094}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1088, file: !1070, line: 68, baseType: !1091, size: 8)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1088, file: !1070, line: 65, size: 8, elements: !1092)
!1092 = !{!1093}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !1091, file: !1070, line: 67, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1088, file: !1070, line: 69, baseType: !156, size: 8)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "NMICTRL", scope: !1071, file: !1070, line: 653, baseType: !1096, size: 8, offset: 16)
!1096 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1097)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_NMICTRL_Type", file: !1070, line: 89, baseType: !1098)
!1098 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 82, size: 8, elements: !1099)
!1099 = !{!1100, !1105}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1098, file: !1070, line: 87, baseType: !1101, size: 8)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1098, file: !1070, line: 83, size: 8, elements: !1102)
!1102 = !{!1103, !1104}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "NMISENSE", scope: !1101, file: !1070, line: 84, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "NMIFILTEN", scope: !1101, file: !1070, line: 85, baseType: !156, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1098, file: !1070, line: 88, baseType: !156, size: 8)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "NMIFLAG", scope: !1071, file: !1070, line: 654, baseType: !1107, size: 8, offset: 24)
!1107 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1108)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_NMIFLAG_Type", file: !1070, line: 122, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 116, size: 8, elements: !1110)
!1110 = !{!1111, !1115}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1109, file: !1070, line: 120, baseType: !1112, size: 8)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1109, file: !1070, line: 117, size: 8, elements: !1113)
!1113 = !{!1114}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "NMI", scope: !1112, file: !1070, line: 118, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1109, file: !1070, line: 121, baseType: !156, size: 8)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "EVCTRL", scope: !1071, file: !1070, line: 655, baseType: !1117, size: 32, offset: 32)
!1117 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1118)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_EVCTRL_Type", file: !1070, line: 159, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 134, size: 32, elements: !1120)
!1120 = !{!1121, !1140, !1144}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1119, file: !1070, line: 153, baseType: !1122, size: 32)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1119, file: !1070, line: 135, size: 32, elements: !1123)
!1123 = !{!1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO0", scope: !1122, file: !1070, line: 136, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO1", scope: !1122, file: !1070, line: 137, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO2", scope: !1122, file: !1070, line: 138, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO3", scope: !1122, file: !1070, line: 139, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO4", scope: !1122, file: !1070, line: 140, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO5", scope: !1122, file: !1070, line: 141, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO6", scope: !1122, file: !1070, line: 142, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO7", scope: !1122, file: !1070, line: 143, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO8", scope: !1122, file: !1070, line: 144, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO9", scope: !1122, file: !1070, line: 145, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO10", scope: !1122, file: !1070, line: 146, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO11", scope: !1122, file: !1070, line: 147, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO12", scope: !1122, file: !1070, line: 148, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO13", scope: !1122, file: !1070, line: 149, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO14", scope: !1122, file: !1070, line: 150, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO15", scope: !1122, file: !1070, line: 151, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1119, file: !1070, line: 157, baseType: !1141, size: 32)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1119, file: !1070, line: 154, size: 32, elements: !1142)
!1142 = !{!1143}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINTEO", scope: !1141, file: !1070, line: 155, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1119, file: !1070, line: 158, baseType: !173, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1071, file: !1070, line: 656, baseType: !1146, size: 32, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1147)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTENCLR_Type", file: !1070, line: 229, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 204, size: 32, elements: !1149)
!1149 = !{!1150, !1169, !1173}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1148, file: !1070, line: 223, baseType: !1151, size: 32)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1148, file: !1070, line: 205, size: 32, elements: !1152)
!1152 = !{!1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT0", scope: !1151, file: !1070, line: 206, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT1", scope: !1151, file: !1070, line: 207, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT2", scope: !1151, file: !1070, line: 208, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT3", scope: !1151, file: !1070, line: 209, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT4", scope: !1151, file: !1070, line: 210, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT5", scope: !1151, file: !1070, line: 211, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT6", scope: !1151, file: !1070, line: 212, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT7", scope: !1151, file: !1070, line: 213, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT8", scope: !1151, file: !1070, line: 214, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT9", scope: !1151, file: !1070, line: 215, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT10", scope: !1151, file: !1070, line: 216, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT11", scope: !1151, file: !1070, line: 217, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT12", scope: !1151, file: !1070, line: 218, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT13", scope: !1151, file: !1070, line: 219, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT14", scope: !1151, file: !1070, line: 220, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT15", scope: !1151, file: !1070, line: 221, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1148, file: !1070, line: 227, baseType: !1170, size: 32)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1148, file: !1070, line: 224, size: 32, elements: !1171)
!1171 = !{!1172}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1170, file: !1070, line: 225, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1148, file: !1070, line: 228, baseType: !173, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1071, file: !1070, line: 657, baseType: !1175, size: 32, offset: 96)
!1175 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1176)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTENSET_Type", file: !1070, line: 299, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 274, size: 32, elements: !1178)
!1178 = !{!1179, !1198, !1202}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1177, file: !1070, line: 293, baseType: !1180, size: 32)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1177, file: !1070, line: 275, size: 32, elements: !1181)
!1181 = !{!1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT0", scope: !1180, file: !1070, line: 276, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT1", scope: !1180, file: !1070, line: 277, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT2", scope: !1180, file: !1070, line: 278, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT3", scope: !1180, file: !1070, line: 279, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT4", scope: !1180, file: !1070, line: 280, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT5", scope: !1180, file: !1070, line: 281, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT6", scope: !1180, file: !1070, line: 282, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT7", scope: !1180, file: !1070, line: 283, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT8", scope: !1180, file: !1070, line: 284, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT9", scope: !1180, file: !1070, line: 285, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT10", scope: !1180, file: !1070, line: 286, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT11", scope: !1180, file: !1070, line: 287, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT12", scope: !1180, file: !1070, line: 288, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT13", scope: !1180, file: !1070, line: 289, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT14", scope: !1180, file: !1070, line: 290, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT15", scope: !1180, file: !1070, line: 291, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1177, file: !1070, line: 297, baseType: !1199, size: 32)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1177, file: !1070, line: 294, size: 32, elements: !1200)
!1200 = !{!1201}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1199, file: !1070, line: 295, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1177, file: !1070, line: 298, baseType: !173, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !1071, file: !1070, line: 658, baseType: !1204, size: 32, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1205)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_INTFLAG_Type", file: !1070, line: 369, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 344, size: 32, elements: !1207)
!1207 = !{!1208, !1227, !1231}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1206, file: !1070, line: 363, baseType: !1209, size: 32)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1206, file: !1070, line: 345, size: 32, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT0", scope: !1209, file: !1070, line: 346, baseType: !465, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT1", scope: !1209, file: !1070, line: 347, baseType: !465, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT2", scope: !1209, file: !1070, line: 348, baseType: !465, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT3", scope: !1209, file: !1070, line: 349, baseType: !465, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT4", scope: !1209, file: !1070, line: 350, baseType: !465, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT5", scope: !1209, file: !1070, line: 351, baseType: !465, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT6", scope: !1209, file: !1070, line: 352, baseType: !465, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT7", scope: !1209, file: !1070, line: 353, baseType: !465, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT8", scope: !1209, file: !1070, line: 354, baseType: !465, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT9", scope: !1209, file: !1070, line: 355, baseType: !465, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT10", scope: !1209, file: !1070, line: 356, baseType: !465, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT11", scope: !1209, file: !1070, line: 357, baseType: !465, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT12", scope: !1209, file: !1070, line: 358, baseType: !465, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT13", scope: !1209, file: !1070, line: 359, baseType: !465, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT14", scope: !1209, file: !1070, line: 360, baseType: !465, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT15", scope: !1209, file: !1070, line: 361, baseType: !465, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1206, file: !1070, line: 367, baseType: !1228, size: 32)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1206, file: !1070, line: 364, size: 32, elements: !1229)
!1229 = !{!1230}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "EXTINT", scope: !1228, file: !1070, line: 365, baseType: !465, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1206, file: !1070, line: 368, baseType: !173, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUP", scope: !1071, file: !1070, line: 659, baseType: !1233, size: 32, offset: 160)
!1233 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1234)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_WAKEUP_Type", file: !1070, line: 439, baseType: !1235)
!1235 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 414, size: 32, elements: !1236)
!1236 = !{!1237, !1256, !1260}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1235, file: !1070, line: 433, baseType: !1238, size: 32)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1235, file: !1070, line: 415, size: 32, elements: !1239)
!1239 = !{!1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN0", scope: !1238, file: !1070, line: 416, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN1", scope: !1238, file: !1070, line: 417, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN2", scope: !1238, file: !1070, line: 418, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN3", scope: !1238, file: !1070, line: 419, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN4", scope: !1238, file: !1070, line: 420, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN5", scope: !1238, file: !1070, line: 421, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN6", scope: !1238, file: !1070, line: 422, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN7", scope: !1238, file: !1070, line: 423, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN8", scope: !1238, file: !1070, line: 424, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN9", scope: !1238, file: !1070, line: 425, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN10", scope: !1238, file: !1070, line: 426, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN11", scope: !1238, file: !1070, line: 427, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN12", scope: !1238, file: !1070, line: 428, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN13", scope: !1238, file: !1070, line: 429, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN14", scope: !1238, file: !1070, line: 430, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN15", scope: !1238, file: !1070, line: 431, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1235, file: !1070, line: 437, baseType: !1257, size: 32)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1235, file: !1070, line: 434, size: 32, elements: !1258)
!1258 = !{!1259}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "WAKEUPEN", scope: !1257, file: !1070, line: 435, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1235, file: !1070, line: 438, baseType: !173, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIG", scope: !1071, file: !1070, line: 660, baseType: !1262, size: 64, offset: 192)
!1262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1263, size: 64, elements: !145)
!1263 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1264)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "EIC_CONFIG_Type", file: !1070, line: 504, baseType: !1265)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1070, line: 484, size: 32, elements: !1266)
!1266 = !{!1267, !1286}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1265, file: !1070, line: 502, baseType: !1268, size: 32)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1265, file: !1070, line: 485, size: 32, elements: !1269)
!1269 = !{!1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE0", scope: !1268, file: !1070, line: 486, baseType: !173, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN0", scope: !1268, file: !1070, line: 487, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE1", scope: !1268, file: !1070, line: 488, baseType: !173, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN1", scope: !1268, file: !1070, line: 489, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE2", scope: !1268, file: !1070, line: 490, baseType: !173, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN2", scope: !1268, file: !1070, line: 491, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE3", scope: !1268, file: !1070, line: 492, baseType: !173, size: 3, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN3", scope: !1268, file: !1070, line: 493, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE4", scope: !1268, file: !1070, line: 494, baseType: !173, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN4", scope: !1268, file: !1070, line: 495, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE5", scope: !1268, file: !1070, line: 496, baseType: !173, size: 3, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN5", scope: !1268, file: !1070, line: 497, baseType: !173, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE6", scope: !1268, file: !1070, line: 498, baseType: !173, size: 3, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN6", scope: !1268, file: !1070, line: 499, baseType: !173, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "SENSE7", scope: !1268, file: !1070, line: 500, baseType: !173, size: 3, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "FILTEN7", scope: !1268, file: !1070, line: 501, baseType: !173, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1265, file: !1070, line: 503, baseType: !173, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pm", file: !812, line: 513, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 494, size: 480, elements: !1290)
!1290 = !{!1291, !1297, !1307, !1308, !1318, !1328, !1338, !1348, !1349, !1365, !1381, !1397, !1427, !1428, !1438, !1448, !1458, !1459}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1289, file: !812, line: 495, baseType: !1292, size: 8)
!1292 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CTRL_Type", file: !812, line: 45, baseType: !1294)
!1294 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 43, size: 8, elements: !1295)
!1295 = !{!1296}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1294, file: !812, line: 44, baseType: !156, size: 8)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP", scope: !1289, file: !812, line: 496, baseType: !1298, size: 8, offset: 8)
!1298 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_SLEEP_Type", file: !812, line: 61, baseType: !1300)
!1300 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 55, size: 8, elements: !1301)
!1301 = !{!1302, !1306}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1300, file: !812, line: 59, baseType: !1303, size: 8)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1300, file: !812, line: 56, size: 8, elements: !1304)
!1304 = !{!1305}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "IDLE", scope: !1303, file: !812, line: 57, baseType: !156, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1300, file: !812, line: 60, baseType: !156, size: 8)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1289, file: !812, line: 497, baseType: !832, size: 48, offset: 16)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "CPUSEL", scope: !1289, file: !812, line: 498, baseType: !1309, size: 8, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1310)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CPUSEL_Type", file: !812, line: 86, baseType: !1311)
!1311 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 80, size: 8, elements: !1312)
!1312 = !{!1313, !1317}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1311, file: !812, line: 84, baseType: !1314, size: 8)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1311, file: !812, line: 81, size: 8, elements: !1315)
!1315 = !{!1316}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "CPUDIV", scope: !1314, file: !812, line: 82, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1311, file: !812, line: 85, baseType: !156, size: 8)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "APBASEL", scope: !1289, file: !812, line: 499, baseType: !1319, size: 8, offset: 72)
!1319 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1320)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBASEL_Type", file: !812, line: 121, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 115, size: 8, elements: !1322)
!1322 = !{!1323, !1327}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1321, file: !812, line: 119, baseType: !1324, size: 8)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1321, file: !812, line: 116, size: 8, elements: !1325)
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "APBADIV", scope: !1324, file: !812, line: 117, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1321, file: !812, line: 120, baseType: !156, size: 8)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "APBBSEL", scope: !1289, file: !812, line: 500, baseType: !1329, size: 8, offset: 80)
!1329 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBSEL_Type", file: !812, line: 156, baseType: !1331)
!1331 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 150, size: 8, elements: !1332)
!1332 = !{!1333, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1331, file: !812, line: 154, baseType: !1334, size: 8)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1331, file: !812, line: 151, size: 8, elements: !1335)
!1335 = !{!1336}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "APBBDIV", scope: !1334, file: !812, line: 152, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1331, file: !812, line: 155, baseType: !156, size: 8)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "APBCSEL", scope: !1289, file: !812, line: 501, baseType: !1339, size: 8, offset: 88)
!1339 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1340)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCSEL_Type", file: !812, line: 191, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 185, size: 8, elements: !1342)
!1342 = !{!1343, !1347}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1341, file: !812, line: 189, baseType: !1344, size: 8)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1341, file: !812, line: 186, size: 8, elements: !1345)
!1345 = !{!1346}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "APBCDIV", scope: !1344, file: !812, line: 187, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1341, file: !812, line: 190, baseType: !156, size: 8)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1289, file: !812, line: 502, baseType: !876, size: 64, offset: 96)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "AHBMASK", scope: !1289, file: !812, line: 503, baseType: !1350, size: 32, offset: 160)
!1350 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1351)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_AHBMASK_Type", file: !812, line: 232, baseType: !1352)
!1352 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 220, size: 32, elements: !1353)
!1353 = !{!1354, !1364}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1352, file: !812, line: 230, baseType: !1355, size: 32)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1352, file: !812, line: 221, size: 32, elements: !1356)
!1356 = !{!1357, !1358, !1359, !1360, !1361, !1362, !1363}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "HPB0_", scope: !1355, file: !812, line: 222, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "HPB1_", scope: !1355, file: !812, line: 223, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "HPB2_", scope: !1355, file: !812, line: 224, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !1355, file: !812, line: 225, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !1355, file: !812, line: 226, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !1355, file: !812, line: 227, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !1355, file: !812, line: 228, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1352, file: !812, line: 231, baseType: !173, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "APBAMASK", scope: !1289, file: !812, line: 504, baseType: !1366, size: 32, offset: 192)
!1366 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1367)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBAMASK_Type", file: !812, line: 268, baseType: !1368)
!1368 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 256, size: 32, elements: !1369)
!1369 = !{!1370, !1380}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1368, file: !812, line: 266, baseType: !1371, size: 32)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1368, file: !812, line: 257, size: 32, elements: !1372)
!1372 = !{!1373, !1374, !1375, !1376, !1377, !1378, !1379}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "PAC0_", scope: !1371, file: !812, line: 258, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "PM_", scope: !1371, file: !812, line: 259, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCTRL_", scope: !1371, file: !812, line: 260, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "GCLK_", scope: !1371, file: !812, line: 261, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_", scope: !1371, file: !812, line: 262, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_", scope: !1371, file: !812, line: 263, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "EIC_", scope: !1371, file: !812, line: 264, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1368, file: !812, line: 267, baseType: !173, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "APBBMASK", scope: !1289, file: !812, line: 505, baseType: !1382, size: 32, offset: 224)
!1382 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1383)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBMASK_Type", file: !812, line: 304, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 292, size: 32, elements: !1385)
!1385 = !{!1386, !1396}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1384, file: !812, line: 302, baseType: !1387, size: 32)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1384, file: !812, line: 293, size: 32, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1393, !1394, !1395}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "PAC1_", scope: !1387, file: !812, line: 294, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !1387, file: !812, line: 295, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !1387, file: !812, line: 296, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "PORT_", scope: !1387, file: !812, line: 297, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !1387, file: !812, line: 298, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !1387, file: !812, line: 299, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "HMATRIX_", scope: !1387, file: !812, line: 300, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1384, file: !812, line: 303, baseType: !173, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "APBCMASK", scope: !1289, file: !812, line: 506, baseType: !1398, size: 32, offset: 256)
!1398 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1399)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCMASK_Type", file: !812, line: 354, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 328, size: 32, elements: !1401)
!1401 = !{!1402, !1426}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1400, file: !812, line: 352, baseType: !1403, size: 32)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1400, file: !812, line: 329, size: 32, elements: !1404)
!1404 = !{!1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "PAC2_", scope: !1403, file: !812, line: 330, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "EVSYS_", scope: !1403, file: !812, line: 331, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM0_", scope: !1403, file: !812, line: 332, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM1_", scope: !1403, file: !812, line: 333, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM2_", scope: !1403, file: !812, line: 334, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM3_", scope: !1403, file: !812, line: 335, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM4_", scope: !1403, file: !812, line: 336, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM5_", scope: !1403, file: !812, line: 337, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "TCC0_", scope: !1403, file: !812, line: 338, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "TCC1_", scope: !1403, file: !812, line: 339, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "TCC2_", scope: !1403, file: !812, line: 340, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "TC3_", scope: !1403, file: !812, line: 341, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "TC4_", scope: !1403, file: !812, line: 342, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "TC5_", scope: !1403, file: !812, line: 343, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "TC6_", scope: !1403, file: !812, line: 344, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "TC7_", scope: !1403, file: !812, line: 345, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_", scope: !1403, file: !812, line: 346, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "AC_", scope: !1403, file: !812, line: 347, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_", scope: !1403, file: !812, line: 348, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "PTC_", scope: !1403, file: !812, line: 349, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_", scope: !1403, file: !812, line: 350, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1400, file: !812, line: 353, baseType: !173, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !1289, file: !812, line: 507, baseType: !958, size: 128, offset: 288)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !1289, file: !812, line: 508, baseType: !1429, size: 8, offset: 416)
!1429 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1430)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENCLR_Type", file: !812, line: 412, baseType: !1431)
!1431 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 406, size: 8, elements: !1432)
!1432 = !{!1433, !1437}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1431, file: !812, line: 410, baseType: !1434, size: 8)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1431, file: !812, line: 407, size: 8, elements: !1435)
!1435 = !{!1436}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1434, file: !812, line: 408, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1431, file: !812, line: 411, baseType: !156, size: 8)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !1289, file: !812, line: 509, baseType: !1439, size: 8, offset: 424)
!1439 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1440)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENSET_Type", file: !812, line: 430, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 424, size: 8, elements: !1442)
!1442 = !{!1443, !1447}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1441, file: !812, line: 428, baseType: !1444, size: 8)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1441, file: !812, line: 425, size: 8, elements: !1445)
!1445 = !{!1446}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1444, file: !812, line: 426, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1441, file: !812, line: 429, baseType: !156, size: 8)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !1289, file: !812, line: 510, baseType: !1449, size: 8, offset: 432)
!1449 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1450)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTFLAG_Type", file: !812, line: 448, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 442, size: 8, elements: !1452)
!1452 = !{!1453, !1457}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1451, file: !812, line: 446, baseType: !1454, size: 8)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1451, file: !812, line: 443, size: 8, elements: !1455)
!1455 = !{!1456}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !1454, file: !812, line: 444, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1451, file: !812, line: 447, baseType: !156, size: 8)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !1289, file: !812, line: 511, baseType: !992, size: 8, offset: 440)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "RCAUSE", scope: !1289, file: !812, line: 512, baseType: !1460, size: 8, offset: 448)
!1460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1461)
!1461 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_RCAUSE_Type", file: !812, line: 472, baseType: !1463)
!1463 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 460, size: 8, elements: !1464)
!1464 = !{!1465, !1474}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1463, file: !812, line: 470, baseType: !1466, size: 8)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1463, file: !812, line: 461, size: 8, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472, !1473}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "POR", scope: !1466, file: !812, line: 462, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "BOD12", scope: !1466, file: !812, line: 463, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33", scope: !1466, file: !812, line: 464, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "EXT", scope: !1466, file: !812, line: 466, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "WDT", scope: !1466, file: !812, line: 467, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "SYST", scope: !1466, file: !812, line: 468, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1463, file: !812, line: 471, baseType: !156, size: 8)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !745, line: 290, baseType: !1477)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !745, line: 284, size: 96, elements: !1478)
!1478 = !{!1479, !1489, !1500, !1513, !1530}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1477, file: !745, line: 285, baseType: !1480, size: 8)
!1480 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1481)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRL_Type", file: !745, line: 49, baseType: !1482)
!1482 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 43, size: 8, elements: !1483)
!1483 = !{!1484, !1488}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1482, file: !745, line: 47, baseType: !1485, size: 8)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1482, file: !745, line: 44, size: 8, elements: !1486)
!1486 = !{!1487}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1485, file: !745, line: 45, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1482, file: !745, line: 48, baseType: !156, size: 8)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !1477, file: !745, line: 286, baseType: !1490, size: 8, offset: 8)
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1491 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1492)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_STATUS_Type", file: !745, line: 67, baseType: !1493)
!1493 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 61, size: 8, elements: !1494)
!1494 = !{!1495, !1499}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1493, file: !745, line: 65, baseType: !1496, size: 8)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1493, file: !745, line: 62, size: 8, elements: !1497)
!1497 = !{!1498}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !1496, file: !745, line: 64, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1493, file: !745, line: 66, baseType: !156, size: 8)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "CLKCTRL", scope: !1477, file: !745, line: 287, baseType: !1501, size: 16, offset: 16)
!1501 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1502)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CLKCTRL_Type", file: !745, line: 89, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 79, size: 16, elements: !1504)
!1504 = !{!1505, !1512}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1503, file: !745, line: 87, baseType: !1506, size: 16)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1503, file: !745, line: 80, size: 16, elements: !1507)
!1507 = !{!1508, !1509, !1510, !1511}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1506, file: !745, line: 81, baseType: !170, size: 6, flags: DIFlagBitField, extraData: i64 0)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !1506, file: !745, line: 83, baseType: !170, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "CLKEN", scope: !1506, file: !745, line: 85, baseType: !170, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !1506, file: !745, line: 86, baseType: !170, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1503, file: !745, line: 88, baseType: !170, size: 16)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !1477, file: !745, line: 288, baseType: !1514, size: 32, offset: 32)
!1514 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1515)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !745, line: 214, baseType: !1516)
!1516 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 199, size: 32, elements: !1517)
!1517 = !{!1518, !1529}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1516, file: !745, line: 212, baseType: !1519, size: 32)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1516, file: !745, line: 200, size: 32, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1519, file: !745, line: 201, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !1519, file: !745, line: 203, baseType: !173, size: 5, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !1519, file: !745, line: 205, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !1519, file: !745, line: 206, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !1519, file: !745, line: 207, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !1519, file: !745, line: 208, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !1519, file: !745, line: 209, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !1519, file: !745, line: 210, baseType: !173, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1516, file: !745, line: 213, baseType: !173, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "GENDIV", scope: !1477, file: !745, line: 289, baseType: !1531, size: 32, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1532)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENDIV_Type", file: !745, line: 268, baseType: !1533)
!1533 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 260, size: 32, elements: !1534)
!1534 = !{!1535, !1540}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1533, file: !745, line: 266, baseType: !1536, size: 32)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1533, file: !745, line: 261, size: 32, elements: !1537)
!1537 = !{!1538, !1539}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1536, file: !745, line: 262, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !1536, file: !745, line: 264, baseType: !173, size: 16, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1533, file: !745, line: 267, baseType: !173, size: 32)
!1541 = !{!1542, !1054, !1548, !1573, !1594, !1596, !1603}
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1056, file: !1544, line: 411, type: !1545, isLocal: false, isDefinition: true, align: 16)
!1544 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_sam0_eic.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 80, elements: !1546)
!1546 = !{!1547}
!1547 = !DISubrange(count: 5)
!1548 = !DIGlobalVariableExpression(var: !1549, expr: !DIExpression())
!1549 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1056, file: !1544, line: 411, type: !1550, isLocal: true, isDefinition: true, align: 32)
!1550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1551)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !1552)
!1552 = !{!1553, !1572}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1551, file: !1015, line: 60, baseType: !1554, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!103, !1557}
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !1560)
!1560 = !{!1561, !1562, !1563, !1564, !1570, !1571}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1559, file: !1024, line: 380, baseType: !256, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1559, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1559, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1559, file: !1024, line: 386, baseType: !1565, size: 32, offset: 96)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !1567)
!1567 = !{!1568, !1569}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1566, file: !1024, line: 359, baseType: !156, size: 8)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1566, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1559, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1559, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1551, file: !1015, line: 65, baseType: !1557, size: 32, offset: 32)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "eic_data", scope: !1056, file: !1544, line: 410, type: !1575, isLocal: true, isDefinition: true)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_data", file: !1544, line: 26, size: 192, elements: !1576)
!1576 = !{!1577, !1587}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !1575, file: !1544, line: 27, baseType: !1578, size: 64)
!1578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1579, size: 64, elements: !993)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_port_data", file: !1544, line: 21, size: 64, elements: !1580)
!1580 = !{!1581, !1586}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1579, file: !1544, line: 22, baseType: !1582, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "sam0_eic_callback_t", file: !1060, line: 14, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{null, !173, !102}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1579, file: !1544, line: 23, baseType: !102, size: 32, offset: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !1575, file: !1544, line: 28, baseType: !1588, size: 128, offset: 64)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1589, size: 128, elements: !959)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sam0_eic_line_assignment", file: !1544, line: 15, size: 8, elements: !1590)
!1590 = !{!1591, !1592, !1593}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !1589, file: !1544, line: 16, baseType: !156, size: 5, flags: DIFlagBitField, extraData: i64 0)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1589, file: !1544, line: 17, baseType: !156, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !1589, file: !1544, line: 18, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1056, file: !1544, line: 411, type: !1566, isLocal: true, isDefinition: true, align: 8)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "sam0_eic_channels", scope: !1056, file: !1598, line: 29, type: !1599, isLocal: true, isDefinition: true)
!1598 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_sam0_eic_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1600, size: 256, elements: !1601)
!1600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!1601 = !{!994, !1602}
!1602 = !DISubrange(count: 32)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "__isr_sam0_eic_isr_irq_0", scope: !1605, file: !1544, line: 356, type: !1606, isLocal: true, isDefinition: true, align: 32)
!1605 = distinct !DISubprogram(name: "sam0_eic_init", scope: !1544, file: !1544, line: 335, type: !1555, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1607)
!1607 = !{!1608, !1609, !1610, !1611}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1606, file: !10, line: 55, baseType: !250, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1606, file: !10, line: 57, baseType: !250, size: 32, offset: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1606, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1606, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1614, file: !1619, line: 7, type: !1620, isLocal: false, isDefinition: true, align: 16)
!1614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1615, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !1616, splitDebugInlining: false, nameTableKind: None)
!1615 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!1616 = !{!1612, !1617, !1621}
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_27", scope: !1614, file: !1619, line: 12, type: !1620, isLocal: false, isDefinition: true, align: 16)
!1619 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 48, elements: !341)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_29", scope: !1614, file: !1619, line: 17, type: !1620, isLocal: false, isDefinition: true, align: 16)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1625, file: !1715, line: 603, type: !1717, isLocal: true, isDefinition: true, align: 32)
!1625 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1626, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1627, globals: !1712, splitDebugInlining: false, nameTableKind: None)
!1626 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!1627 = !{!102, !103, !1628}
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1631, line: 336, size: 608, elements: !1632)
!1631 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1632 = !{!1633, !1653, !1657, !1661, !1674, !1679, !1684, !1690, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1630, file: !1631, line: 365, baseType: !1634, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 32)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{!103, !1637, !1652}
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1639)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !1640)
!1640 = !{!1641, !1642, !1643, !1644, !1650, !1651}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1639, file: !1024, line: 380, baseType: !256, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1639, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1639, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1639, file: !1024, line: 386, baseType: !1645, size: 32, offset: 96)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 32)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !1647)
!1647 = !{!1648, !1649}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1646, file: !1024, line: 359, baseType: !156, size: 8)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1646, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1639, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1639, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1630, file: !1631, line: 366, baseType: !1654, size: 32, offset: 32)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 32)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{null, !1637, !157}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1630, file: !1631, line: 374, baseType: !1658, size: 32, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 32)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!103, !1637}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1630, file: !1631, line: 377, baseType: !1662, size: 32, offset: 96)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{!103, !1637, !1665}
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1667)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1631, line: 122, size: 64, elements: !1668)
!1668 = !{!1669, !1670, !1671, !1672, !1673}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1667, file: !1631, line: 123, baseType: !173, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1667, file: !1631, line: 124, baseType: !156, size: 8, offset: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1667, file: !1631, line: 125, baseType: !156, size: 8, offset: 40)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1667, file: !1631, line: 126, baseType: !156, size: 8, offset: 48)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1667, file: !1631, line: 127, baseType: !156, size: 8, offset: 56)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1630, file: !1631, line: 379, baseType: !1675, size: 32, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{!103, !1637, !1678}
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1630, file: !1631, line: 384, baseType: !1680, size: 32, offset: 160)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{!103, !1637, !1683, !103}
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1630, file: !1631, line: 393, baseType: !1685, size: 32, offset: 192)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 32)
!1686 = !DISubroutineType(types: !1687)
!1687 = !{!103, !1637, !1688, !1689}
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1630, file: !1631, line: 402, baseType: !1691, size: 32, offset: 224)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{null, !1637}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1630, file: !1631, line: 405, baseType: !1691, size: 32, offset: 256)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1630, file: !1631, line: 408, baseType: !1658, size: 32, offset: 288)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1630, file: !1631, line: 411, baseType: !1691, size: 32, offset: 320)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1630, file: !1631, line: 414, baseType: !1691, size: 32, offset: 352)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1630, file: !1631, line: 417, baseType: !1658, size: 32, offset: 384)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1630, file: !1631, line: 420, baseType: !1658, size: 32, offset: 416)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1630, file: !1631, line: 423, baseType: !1691, size: 32, offset: 448)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1630, file: !1631, line: 426, baseType: !1691, size: 32, offset: 480)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1630, file: !1631, line: 429, baseType: !1658, size: 32, offset: 512)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1630, file: !1631, line: 432, baseType: !1658, size: 32, offset: 544)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1630, file: !1631, line: 435, baseType: !1705, size: 32, offset: 576)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{null, !1637, !1708, !102}
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1631, line: 142, baseType: !1709)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{null, !1637, !102}
!1712 = !{!1623, !1713}
!1713 = !DIGlobalVariableExpression(var: !1714, expr: !DIExpression())
!1714 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1625, file: !1715, line: 38, type: !1716, isLocal: true, isDefinition: true)
!1715 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1637)
!1717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !1719)
!1719 = !{!1720, !1721}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1718, file: !1015, line: 60, baseType: !1658, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1718, file: !1015, line: 65, baseType: !1637, size: 32, offset: 32)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "uart_sam0_config_0", scope: !1724, file: !2217, line: 1293, type: !2285, isLocal: true, isDefinition: true)
!1724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1725, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1726, retainedTypes: !1771, globals: !2214, splitDebugInlining: false, nameTableKind: None)
!1725 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!1726 = !{!30, !1727, !1739, !1746, !1751, !1758, !1764}
!1727 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_channel_direction", file: !1728, line: 31, baseType: !32, size: 32, elements: !1729)
!1728 = !DIFile(filename: "zephyr/include/zephyr/drivers/dma.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1729 = !{!1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738}
!1730 = !DIEnumerator(name: "MEMORY_TO_MEMORY", value: 0)
!1731 = !DIEnumerator(name: "MEMORY_TO_PERIPHERAL", value: 1)
!1732 = !DIEnumerator(name: "PERIPHERAL_TO_MEMORY", value: 2)
!1733 = !DIEnumerator(name: "PERIPHERAL_TO_PERIPHERAL", value: 3)
!1734 = !DIEnumerator(name: "HOST_TO_MEMORY", value: 4)
!1735 = !DIEnumerator(name: "MEMORY_TO_HOST", value: 5)
!1736 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_COMMON_COUNT", value: 6)
!1737 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_PRIV_START", value: 6)
!1738 = !DIEnumerator(name: "DMA_CHANNEL_DIRECTION_MAX", value: 7)
!1739 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1631, line: 47, baseType: !32, size: 32, elements: !1740)
!1740 = !{!1741, !1742, !1743, !1744, !1745}
!1741 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1742 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1743 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1744 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1745 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1746 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1631, line: 107, baseType: !32, size: 32, elements: !1747)
!1747 = !{!1748, !1749, !1750}
!1748 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1749 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1750 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1631, line: 75, baseType: !32, size: 32, elements: !1752)
!1752 = !{!1753, !1754, !1755, !1756, !1757}
!1753 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1754 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1755 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1756 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1757 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1758 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1631, line: 84, baseType: !32, size: 32, elements: !1759)
!1759 = !{!1760, !1761, !1762, !1763}
!1760 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1761 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1762 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1763 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1764 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1631, line: 92, baseType: !32, size: 32, elements: !1765)
!1765 = !{!1766, !1767, !1768, !1769, !1770}
!1766 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1767 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1768 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1769 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1770 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1771 = !{!1772, !102, !103, !1851, !1950, !24, !157, !1938, !170, !1960, !2026}
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1774)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1631, line: 336, size: 608, elements: !1775)
!1775 = !{!1776, !1795, !1799, !1803, !1816, !1821, !1825, !1829, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1774, file: !1631, line: 365, baseType: !1777, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{!103, !1780, !1652}
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1782)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !1783)
!1783 = !{!1784, !1785, !1786, !1787, !1793, !1794}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1782, file: !1024, line: 380, baseType: !256, size: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1782, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1782, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1782, file: !1024, line: 386, baseType: !1788, size: 32, offset: 96)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 32)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !1790)
!1790 = !{!1791, !1792}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1789, file: !1024, line: 359, baseType: !156, size: 8)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1789, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1782, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1782, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1774, file: !1631, line: 366, baseType: !1796, size: 32, offset: 32)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{null, !1780, !157}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1774, file: !1631, line: 374, baseType: !1800, size: 32, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!103, !1780}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1774, file: !1631, line: 377, baseType: !1804, size: 32, offset: 96)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 32)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!103, !1780, !1807}
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1809)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1631, line: 122, size: 64, elements: !1810)
!1810 = !{!1811, !1812, !1813, !1814, !1815}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1809, file: !1631, line: 123, baseType: !173, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1809, file: !1631, line: 124, baseType: !156, size: 8, offset: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1809, file: !1631, line: 125, baseType: !156, size: 8, offset: 40)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1809, file: !1631, line: 126, baseType: !156, size: 8, offset: 48)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1809, file: !1631, line: 127, baseType: !156, size: 8, offset: 56)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1774, file: !1631, line: 379, baseType: !1817, size: 32, offset: 128)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!103, !1780, !1820}
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1774, file: !1631, line: 384, baseType: !1822, size: 32, offset: 160)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 32)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{!103, !1780, !1683, !103}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1774, file: !1631, line: 393, baseType: !1826, size: 32, offset: 192)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!103, !1780, !1688, !1689}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1774, file: !1631, line: 402, baseType: !1830, size: 32, offset: 224)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 32)
!1831 = !DISubroutineType(types: !1832)
!1832 = !{null, !1780}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1774, file: !1631, line: 405, baseType: !1830, size: 32, offset: 256)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1774, file: !1631, line: 408, baseType: !1800, size: 32, offset: 288)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1774, file: !1631, line: 411, baseType: !1830, size: 32, offset: 320)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1774, file: !1631, line: 414, baseType: !1830, size: 32, offset: 352)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1774, file: !1631, line: 417, baseType: !1800, size: 32, offset: 384)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1774, file: !1631, line: 420, baseType: !1800, size: 32, offset: 416)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1774, file: !1631, line: 423, baseType: !1830, size: 32, offset: 448)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1774, file: !1631, line: 426, baseType: !1830, size: 32, offset: 480)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1774, file: !1631, line: 429, baseType: !1800, size: 32, offset: 512)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1774, file: !1631, line: 432, baseType: !1800, size: 32, offset: 544)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1774, file: !1631, line: 435, baseType: !1844, size: 32, offset: 576)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{null, !1780, !1847, !102}
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !1631, line: 142, baseType: !1848)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{null, !1780, !102}
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1853)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_driver_api", file: !1728, line: 304, size: 288, elements: !1854)
!1854 = !{!1855, !1907, !1912, !1917, !1919, !1921, !1923, !1940, !1945}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1853, file: !1728, line: 305, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_config", file: !1728, line: 264, baseType: !1857)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{!103, !1780, !173, !1860}
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_config", file: !1728, line: 194, size: 224, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1901, !1902}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "dma_slot", scope: !1861, file: !1728, line: 195, baseType: !173, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "channel_direction", scope: !1861, file: !1728, line: 196, baseType: !173, size: 3, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "complete_callback_en", scope: !1861, file: !1728, line: 197, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "error_callback_en", scope: !1861, file: !1728, line: 198, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "source_handshake", scope: !1861, file: !1728, line: 199, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "dest_handshake", scope: !1861, file: !1728, line: 200, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "channel_priority", scope: !1861, file: !1728, line: 201, baseType: !173, size: 4, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "source_chaining_en", scope: !1861, file: !1728, line: 202, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "dest_chaining_en", scope: !1861, file: !1728, line: 203, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "linked_channel", scope: !1861, file: !1728, line: 204, baseType: !173, size: 7, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic", scope: !1861, file: !1728, line: 205, baseType: !173, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1861, file: !1728, line: 206, baseType: !173, size: 3, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "source_data_size", scope: !1861, file: !1728, line: 207, baseType: !173, size: 16, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "dest_data_size", scope: !1861, file: !1728, line: 208, baseType: !173, size: 16, offset: 48, flags: DIFlagBitField, extraData: i64 0)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "source_burst_length", scope: !1861, file: !1728, line: 209, baseType: !173, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 0)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "dest_burst_length", scope: !1861, file: !1728, line: 210, baseType: !173, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 0)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "block_count", scope: !1861, file: !1728, line: 211, baseType: !173, size: 32, offset: 96)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "head_block", scope: !1861, file: !1728, line: 212, baseType: !1881, size: 32, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_block_config", file: !1728, line: 113, size: 256, elements: !1883)
!1883 = !{!1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "source_address", scope: !1882, file: !1728, line: 118, baseType: !173, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "dest_address", scope: !1882, file: !1728, line: 119, baseType: !173, size: 32, offset: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_interval", scope: !1882, file: !1728, line: 121, baseType: !173, size: 32, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_interval", scope: !1882, file: !1728, line: 122, baseType: !173, size: 32, offset: 96)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_count", scope: !1882, file: !1728, line: 123, baseType: !170, size: 16, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_count", scope: !1882, file: !1728, line: 124, baseType: !170, size: 16, offset: 144)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !1882, file: !1728, line: 125, baseType: !173, size: 32, offset: 160)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "next_block", scope: !1882, file: !1728, line: 126, baseType: !1881, size: 32, offset: 192)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "source_gather_en", scope: !1882, file: !1728, line: 127, baseType: !170, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "dest_scatter_en", scope: !1882, file: !1728, line: 128, baseType: !170, size: 1, offset: 225, flags: DIFlagBitField, extraData: i64 224)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "source_addr_adj", scope: !1882, file: !1728, line: 129, baseType: !170, size: 2, offset: 226, flags: DIFlagBitField, extraData: i64 224)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "dest_addr_adj", scope: !1882, file: !1728, line: 130, baseType: !170, size: 2, offset: 228, flags: DIFlagBitField, extraData: i64 224)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "source_reload_en", scope: !1882, file: !1728, line: 131, baseType: !170, size: 1, offset: 230, flags: DIFlagBitField, extraData: i64 224)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "dest_reload_en", scope: !1882, file: !1728, line: 132, baseType: !170, size: 1, offset: 231, flags: DIFlagBitField, extraData: i64 224)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_mode_control", scope: !1882, file: !1728, line: 133, baseType: !170, size: 4, offset: 232, flags: DIFlagBitField, extraData: i64 224)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flow_control_mode", scope: !1882, file: !1728, line: 134, baseType: !170, size: 1, offset: 236, flags: DIFlagBitField, extraData: i64 224)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1882, file: !1728, line: 135, baseType: !170, size: 3, offset: 237, flags: DIFlagBitField, extraData: i64 224)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1861, file: !1728, line: 213, baseType: !102, size: 32, offset: 160)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "dma_callback", scope: !1861, file: !1728, line: 214, baseType: !1903, size: 32, offset: 192)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_callback_t", file: !1728, line: 150, baseType: !1904)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 32)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{null, !1780, !102, !173, !103}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "reload", scope: !1853, file: !1728, line: 306, baseType: !1908, size: 32, offset: 32)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_reload", file: !1728, line: 271, baseType: !1909)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 32)
!1910 = !DISubroutineType(types: !1911)
!1911 = !{!103, !1780, !173, !173, !173, !217}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1853, file: !1728, line: 307, baseType: !1913, size: 32, offset: 64)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_start", file: !1728, line: 275, baseType: !1914)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 32)
!1915 = !DISubroutineType(types: !1916)
!1916 = !{!103, !1780, !173}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1853, file: !1728, line: 308, baseType: !1918, size: 32, offset: 96)
!1918 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_stop", file: !1728, line: 277, baseType: !1914)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1853, file: !1728, line: 309, baseType: !1920, size: 32, offset: 128)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_suspend", file: !1728, line: 279, baseType: !1914)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1853, file: !1728, line: 310, baseType: !1922, size: 32, offset: 160)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_resume", file: !1728, line: 281, baseType: !1914)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1853, file: !1728, line: 311, baseType: !1924, size: 32, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_get_status", file: !1728, line: 283, baseType: !1925)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 32)
!1926 = !DISubroutineType(types: !1927)
!1927 = !{!103, !1780, !173, !1928}
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 32)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_status", file: !1728, line: 229, size: 256, elements: !1930)
!1930 = !{!1931, !1932, !1933, !1934, !1935, !1936, !1937}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !1929, file: !1728, line: 230, baseType: !1035, size: 8)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1929, file: !1728, line: 231, baseType: !1727, size: 32, offset: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "pending_length", scope: !1929, file: !1728, line: 232, baseType: !173, size: 32, offset: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1929, file: !1728, line: 233, baseType: !173, size: 32, offset: 96)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "write_position", scope: !1929, file: !1728, line: 234, baseType: !173, size: 32, offset: 128)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "read_position", scope: !1929, file: !1728, line: 235, baseType: !173, size: 32, offset: 160)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "total_copied", scope: !1929, file: !1728, line: 236, baseType: !1938, size: 64, offset: 192)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1939)
!1939 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "get_attribute", scope: !1853, file: !1728, line: 312, baseType: !1941, size: 32, offset: 224)
!1941 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_get_attribute", file: !1728, line: 286, baseType: !1942)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 32)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{!103, !1780, !173, !742}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "chan_filter", scope: !1853, file: !1728, line: 313, baseType: !1946, size: 32, offset: 256)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_api_chan_filter", file: !1728, line: 301, baseType: !1947)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{!1035, !1780, !103, !102}
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 32)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_context", file: !1728, line: 249, size: 96, elements: !1952)
!1952 = !{!1953, !1954, !1955}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1951, file: !1728, line: 250, baseType: !250, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "dma_channels", scope: !1951, file: !1728, line: 251, baseType: !103, size: 32, offset: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "atomic", scope: !1951, file: !1728, line: 252, baseType: !1956, size: 32, offset: 64)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1958, line: 22, baseType: !1959)
!1958 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1959 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "Gclk", file: !745, line: 290, baseType: !1962)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !745, line: 284, size: 96, elements: !1963)
!1963 = !{!1964, !1974, !1985, !1998, !2015}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1962, file: !745, line: 285, baseType: !1965, size: 8)
!1965 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1966)
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CTRL_Type", file: !745, line: 49, baseType: !1967)
!1967 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 43, size: 8, elements: !1968)
!1968 = !{!1969, !1973}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1967, file: !745, line: 47, baseType: !1970, size: 8)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1967, file: !745, line: 44, size: 8, elements: !1971)
!1971 = !{!1972}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !1970, file: !745, line: 45, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1967, file: !745, line: 48, baseType: !156, size: 8)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !1962, file: !745, line: 286, baseType: !1975, size: 8, offset: 8)
!1975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1976)
!1976 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1977)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_STATUS_Type", file: !745, line: 67, baseType: !1978)
!1978 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 61, size: 8, elements: !1979)
!1979 = !{!1980, !1984}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1978, file: !745, line: 65, baseType: !1981, size: 8)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1978, file: !745, line: 62, size: 8, elements: !1982)
!1982 = !{!1983}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !1981, file: !745, line: 64, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1978, file: !745, line: 66, baseType: !156, size: 8)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "CLKCTRL", scope: !1962, file: !745, line: 287, baseType: !1986, size: 16, offset: 16)
!1986 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1987)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_CLKCTRL_Type", file: !745, line: 89, baseType: !1988)
!1988 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 79, size: 16, elements: !1989)
!1989 = !{!1990, !1997}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1988, file: !745, line: 87, baseType: !1991, size: 16)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1988, file: !745, line: 80, size: 16, elements: !1992)
!1992 = !{!1993, !1994, !1995, !1996}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1991, file: !745, line: 81, baseType: !170, size: 6, flags: DIFlagBitField, extraData: i64 0)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "GEN", scope: !1991, file: !745, line: 83, baseType: !170, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "CLKEN", scope: !1991, file: !745, line: 85, baseType: !170, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "WRTLOCK", scope: !1991, file: !745, line: 86, baseType: !170, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1988, file: !745, line: 88, baseType: !170, size: 16)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "GENCTRL", scope: !1962, file: !745, line: 288, baseType: !1999, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2000)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENCTRL_Type", file: !745, line: 214, baseType: !2001)
!2001 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 199, size: 32, elements: !2002)
!2002 = !{!2003, !2014}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2001, file: !745, line: 212, baseType: !2004, size: 32)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2001, file: !745, line: 200, size: 32, elements: !2005)
!2005 = !{!2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !2004, file: !745, line: 201, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "SRC", scope: !2004, file: !745, line: 203, baseType: !173, size: 5, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "GENEN", scope: !2004, file: !745, line: 205, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "IDC", scope: !2004, file: !745, line: 206, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "OOV", scope: !2004, file: !745, line: 207, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "OE", scope: !2004, file: !745, line: 208, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "DIVSEL", scope: !2004, file: !745, line: 209, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !2004, file: !745, line: 210, baseType: !173, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2001, file: !745, line: 213, baseType: !173, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "GENDIV", scope: !1962, file: !745, line: 289, baseType: !2016, size: 32, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2017)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "GCLK_GENDIV_Type", file: !745, line: 268, baseType: !2018)
!2018 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !745, line: 260, size: 32, elements: !2019)
!2019 = !{!2020, !2025}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2018, file: !745, line: 266, baseType: !2021, size: 32)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2018, file: !745, line: 261, size: 32, elements: !2022)
!2022 = !{!2023, !2024}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !2021, file: !745, line: 262, baseType: !173, size: 4, flags: DIFlagBitField, extraData: i64 0)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "DIV", scope: !2021, file: !745, line: 264, baseType: !173, size: 16, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2018, file: !745, line: 267, baseType: !173, size: 32)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pm", file: !812, line: 513, baseType: !2028)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 494, size: 480, elements: !2029)
!2029 = !{!2030, !2036, !2046, !2047, !2057, !2067, !2077, !2087, !2088, !2104, !2120, !2136, !2166, !2167, !2177, !2187, !2197, !2198}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2028, file: !812, line: 495, baseType: !2031, size: 8)
!2031 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2032)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CTRL_Type", file: !812, line: 45, baseType: !2033)
!2033 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 43, size: 8, elements: !2034)
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2033, file: !812, line: 44, baseType: !156, size: 8)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP", scope: !2028, file: !812, line: 496, baseType: !2037, size: 8, offset: 8)
!2037 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2038)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_SLEEP_Type", file: !812, line: 61, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 55, size: 8, elements: !2040)
!2040 = !{!2041, !2045}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2039, file: !812, line: 59, baseType: !2042, size: 8)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2039, file: !812, line: 56, size: 8, elements: !2043)
!2043 = !{!2044}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "IDLE", scope: !2042, file: !812, line: 57, baseType: !156, size: 2, flags: DIFlagBitField, extraData: i64 0)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2039, file: !812, line: 60, baseType: !156, size: 8)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2028, file: !812, line: 497, baseType: !832, size: 48, offset: 16)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "CPUSEL", scope: !2028, file: !812, line: 498, baseType: !2048, size: 8, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2049)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_CPUSEL_Type", file: !812, line: 86, baseType: !2050)
!2050 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 80, size: 8, elements: !2051)
!2051 = !{!2052, !2056}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2050, file: !812, line: 84, baseType: !2053, size: 8)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2050, file: !812, line: 81, size: 8, elements: !2054)
!2054 = !{!2055}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "CPUDIV", scope: !2053, file: !812, line: 82, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2050, file: !812, line: 85, baseType: !156, size: 8)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "APBASEL", scope: !2028, file: !812, line: 499, baseType: !2058, size: 8, offset: 72)
!2058 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2059)
!2059 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBASEL_Type", file: !812, line: 121, baseType: !2060)
!2060 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 115, size: 8, elements: !2061)
!2061 = !{!2062, !2066}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2060, file: !812, line: 119, baseType: !2063, size: 8)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2060, file: !812, line: 116, size: 8, elements: !2064)
!2064 = !{!2065}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "APBADIV", scope: !2063, file: !812, line: 117, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2060, file: !812, line: 120, baseType: !156, size: 8)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "APBBSEL", scope: !2028, file: !812, line: 500, baseType: !2068, size: 8, offset: 80)
!2068 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2069)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBSEL_Type", file: !812, line: 156, baseType: !2070)
!2070 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 150, size: 8, elements: !2071)
!2071 = !{!2072, !2076}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2070, file: !812, line: 154, baseType: !2073, size: 8)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2070, file: !812, line: 151, size: 8, elements: !2074)
!2074 = !{!2075}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "APBBDIV", scope: !2073, file: !812, line: 152, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2070, file: !812, line: 155, baseType: !156, size: 8)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "APBCSEL", scope: !2028, file: !812, line: 501, baseType: !2078, size: 8, offset: 88)
!2078 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2079)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCSEL_Type", file: !812, line: 191, baseType: !2080)
!2080 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 185, size: 8, elements: !2081)
!2081 = !{!2082, !2086}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2080, file: !812, line: 189, baseType: !2083, size: 8)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2080, file: !812, line: 186, size: 8, elements: !2084)
!2084 = !{!2085}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "APBCDIV", scope: !2083, file: !812, line: 187, baseType: !156, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2080, file: !812, line: 190, baseType: !156, size: 8)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !2028, file: !812, line: 502, baseType: !876, size: 64, offset: 96)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "AHBMASK", scope: !2028, file: !812, line: 503, baseType: !2089, size: 32, offset: 160)
!2089 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2090)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_AHBMASK_Type", file: !812, line: 232, baseType: !2091)
!2091 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 220, size: 32, elements: !2092)
!2092 = !{!2093, !2103}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2091, file: !812, line: 230, baseType: !2094, size: 32)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2091, file: !812, line: 221, size: 32, elements: !2095)
!2095 = !{!2096, !2097, !2098, !2099, !2100, !2101, !2102}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "HPB0_", scope: !2094, file: !812, line: 222, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "HPB1_", scope: !2094, file: !812, line: 223, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "HPB2_", scope: !2094, file: !812, line: 224, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !2094, file: !812, line: 225, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !2094, file: !812, line: 226, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !2094, file: !812, line: 227, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !2094, file: !812, line: 228, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2091, file: !812, line: 231, baseType: !173, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "APBAMASK", scope: !2028, file: !812, line: 504, baseType: !2105, size: 32, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2106)
!2106 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBAMASK_Type", file: !812, line: 268, baseType: !2107)
!2107 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 256, size: 32, elements: !2108)
!2108 = !{!2109, !2119}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2107, file: !812, line: 266, baseType: !2110, size: 32)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2107, file: !812, line: 257, size: 32, elements: !2111)
!2111 = !{!2112, !2113, !2114, !2115, !2116, !2117, !2118}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "PAC0_", scope: !2110, file: !812, line: 258, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "PM_", scope: !2110, file: !812, line: 259, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCTRL_", scope: !2110, file: !812, line: 260, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "GCLK_", scope: !2110, file: !812, line: 261, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_", scope: !2110, file: !812, line: 262, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "RTC_", scope: !2110, file: !812, line: 263, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "EIC_", scope: !2110, file: !812, line: 264, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2107, file: !812, line: 267, baseType: !173, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "APBBMASK", scope: !2028, file: !812, line: 505, baseType: !2121, size: 32, offset: 224)
!2121 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2122)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBBMASK_Type", file: !812, line: 304, baseType: !2123)
!2123 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 292, size: 32, elements: !2124)
!2124 = !{!2125, !2135}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2123, file: !812, line: 302, baseType: !2126, size: 32)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2123, file: !812, line: 293, size: 32, elements: !2127)
!2127 = !{!2128, !2129, !2130, !2131, !2132, !2133, !2134}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "PAC1_", scope: !2126, file: !812, line: 294, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "DSU_", scope: !2126, file: !812, line: 295, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "NVMCTRL_", scope: !2126, file: !812, line: 296, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "PORT_", scope: !2126, file: !812, line: 297, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "DMAC_", scope: !2126, file: !812, line: 298, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "USB_", scope: !2126, file: !812, line: 299, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "HMATRIX_", scope: !2126, file: !812, line: 300, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2123, file: !812, line: 303, baseType: !173, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "APBCMASK", scope: !2028, file: !812, line: 506, baseType: !2137, size: 32, offset: 256)
!2137 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2138)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_APBCMASK_Type", file: !812, line: 354, baseType: !2139)
!2139 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 328, size: 32, elements: !2140)
!2140 = !{!2141, !2165}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2139, file: !812, line: 352, baseType: !2142, size: 32)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2139, file: !812, line: 329, size: 32, elements: !2143)
!2143 = !{!2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "PAC2_", scope: !2142, file: !812, line: 330, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "EVSYS_", scope: !2142, file: !812, line: 331, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM0_", scope: !2142, file: !812, line: 332, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM1_", scope: !2142, file: !812, line: 333, baseType: !173, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM2_", scope: !2142, file: !812, line: 334, baseType: !173, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM3_", scope: !2142, file: !812, line: 335, baseType: !173, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM4_", scope: !2142, file: !812, line: 336, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "SERCOM5_", scope: !2142, file: !812, line: 337, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "TCC0_", scope: !2142, file: !812, line: 338, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "TCC1_", scope: !2142, file: !812, line: 339, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "TCC2_", scope: !2142, file: !812, line: 340, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "TC3_", scope: !2142, file: !812, line: 341, baseType: !173, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "TC4_", scope: !2142, file: !812, line: 342, baseType: !173, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "TC5_", scope: !2142, file: !812, line: 343, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "TC6_", scope: !2142, file: !812, line: 344, baseType: !173, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "TC7_", scope: !2142, file: !812, line: 345, baseType: !173, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "ADC_", scope: !2142, file: !812, line: 346, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "AC_", scope: !2142, file: !812, line: 347, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "DAC_", scope: !2142, file: !812, line: 348, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "PTC_", scope: !2142, file: !812, line: 349, baseType: !173, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "I2S_", scope: !2142, file: !812, line: 350, baseType: !173, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2139, file: !812, line: 353, baseType: !173, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !2028, file: !812, line: 507, baseType: !958, size: 128, offset: 288)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !2028, file: !812, line: 508, baseType: !2168, size: 8, offset: 416)
!2168 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2169)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENCLR_Type", file: !812, line: 412, baseType: !2170)
!2170 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 406, size: 8, elements: !2171)
!2171 = !{!2172, !2176}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2170, file: !812, line: 410, baseType: !2173, size: 8)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2170, file: !812, line: 407, size: 8, elements: !2174)
!2174 = !{!2175}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !2173, file: !812, line: 408, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2170, file: !812, line: 411, baseType: !156, size: 8)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !2028, file: !812, line: 509, baseType: !2178, size: 8, offset: 424)
!2178 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2179)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTENSET_Type", file: !812, line: 430, baseType: !2180)
!2180 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 424, size: 8, elements: !2181)
!2181 = !{!2182, !2186}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2180, file: !812, line: 428, baseType: !2183, size: 8)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2180, file: !812, line: 425, size: 8, elements: !2184)
!2184 = !{!2185}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !2183, file: !812, line: 426, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2180, file: !812, line: 429, baseType: !156, size: 8)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !2028, file: !812, line: 510, baseType: !2188, size: 8, offset: 432)
!2188 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2189)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_INTFLAG_Type", file: !812, line: 448, baseType: !2190)
!2190 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 442, size: 8, elements: !2191)
!2191 = !{!2192, !2196}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2190, file: !812, line: 446, baseType: !2193, size: 8)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2190, file: !812, line: 443, size: 8, elements: !2194)
!2194 = !{!2195}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "CKRDY", scope: !2193, file: !812, line: 444, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2190, file: !812, line: 447, baseType: !156, size: 8)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !2028, file: !812, line: 511, baseType: !992, size: 8, offset: 440)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "RCAUSE", scope: !2028, file: !812, line: 512, baseType: !2199, size: 8, offset: 448)
!2199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2200)
!2200 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2201)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "PM_RCAUSE_Type", file: !812, line: 472, baseType: !2202)
!2202 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !812, line: 460, size: 8, elements: !2203)
!2203 = !{!2204, !2213}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2202, file: !812, line: 470, baseType: !2205, size: 8)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2202, file: !812, line: 461, size: 8, elements: !2206)
!2206 = !{!2207, !2208, !2209, !2210, !2211, !2212}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "POR", scope: !2205, file: !812, line: 462, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "BOD12", scope: !2205, file: !812, line: 463, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "BOD33", scope: !2205, file: !812, line: 464, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "EXT", scope: !2205, file: !812, line: 466, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "WDT", scope: !2205, file: !812, line: 467, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "SYST", scope: !2205, file: !812, line: 468, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2202, file: !812, line: 471, baseType: !156, size: 8)
!2214 = !{!2215, !2219, !2221, !2228, !2230, !2232, !2234, !2241, !2243, !2245, !1722, !2247, !2256, !2275, !2278, !2281, !2283, !2479, !2482, !2484, !2486}
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_27", scope: !1724, file: !2217, line: 1293, type: !2218, isLocal: false, isDefinition: true, align: 16)
!2217 = !DIFile(filename: "zephyr/drivers/serial/uart_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 128, elements: !877)
!2219 = !DIGlobalVariableExpression(var: !2220, expr: !DIExpression())
!2220 = distinct !DIGlobalVariable(name: "__device_dts_ord_27", scope: !1724, file: !2217, line: 1293, type: !1781, isLocal: false, isDefinition: true, align: 32)
!2221 = !DIGlobalVariableExpression(var: !2222, expr: !DIExpression())
!2222 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_27", scope: !1724, file: !2217, line: 1293, type: !2223, isLocal: true, isDefinition: true, align: 32)
!2223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2224)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !2225)
!2225 = !{!2226, !2227}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2224, file: !1015, line: 60, baseType: !1800, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2224, file: !1015, line: 65, baseType: !1780, size: 32, offset: 32)
!2228 = !DIGlobalVariableExpression(var: !2229, expr: !DIExpression())
!2229 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_29", scope: !1724, file: !2217, line: 1293, type: !2218, isLocal: false, isDefinition: true, align: 16)
!2230 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression())
!2231 = distinct !DIGlobalVariable(name: "__device_dts_ord_29", scope: !1724, file: !2217, line: 1293, type: !1781, isLocal: false, isDefinition: true, align: 32)
!2232 = !DIGlobalVariableExpression(var: !2233, expr: !DIExpression())
!2233 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_29", scope: !1724, file: !2217, line: 1293, type: !2223, isLocal: true, isDefinition: true, align: 32)
!2234 = !DIGlobalVariableExpression(var: !2235, expr: !DIExpression())
!2235 = distinct !DIGlobalVariable(name: "uart_sam0_data_0", scope: !1724, file: !2217, line: 1293, type: !2236, isLocal: true, isDefinition: true)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam0_dev_data", file: !2217, line: 60, size: 128, elements: !2237)
!2237 = !{!2238, !2239, !2240}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "config_cache", scope: !2236, file: !2217, line: 61, baseType: !1809, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2236, file: !2217, line: 63, baseType: !1847, size: 32, offset: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !2236, file: !2217, line: 64, baseType: !102, size: 32, offset: 96)
!2241 = !DIGlobalVariableExpression(var: !2242, expr: !DIExpression())
!2242 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_27", scope: !1724, file: !2217, line: 1293, type: !1789, isLocal: true, isDefinition: true, align: 8)
!2243 = !DIGlobalVariableExpression(var: !2244, expr: !DIExpression())
!2244 = distinct !DIGlobalVariable(name: "uart_sam0_data_1", scope: !1724, file: !2217, line: 1293, type: !2236, isLocal: true, isDefinition: true)
!2245 = !DIGlobalVariableExpression(var: !2246, expr: !DIExpression())
!2246 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_29", scope: !1724, file: !2217, line: 1293, type: !1789, isLocal: true, isDefinition: true, align: 8)
!2247 = !DIGlobalVariableExpression(var: !2248, expr: !DIExpression())
!2248 = distinct !DIGlobalVariable(name: "__isr_uart_sam0_isr_irq_0", scope: !2249, file: !2217, line: 1293, type: !2250, isLocal: true, isDefinition: true, align: 32)
!2249 = distinct !DISubprogram(name: "uart_sam0_irq_config_0", scope: !2217, file: !2217, line: 1293, type: !1831, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !2251)
!2251 = !{!2252, !2253, !2254, !2255}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !2250, file: !10, line: 55, baseType: !250, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2250, file: !10, line: 57, baseType: !250, size: 32, offset: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2250, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !2250, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!2256 = !DIGlobalVariableExpression(var: !2257, expr: !DIExpression())
!2257 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_27", scope: !1724, file: !2217, line: 1293, type: !2258, isLocal: true, isDefinition: true)
!2258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2259)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2260, line: 60, size: 64, elements: !2261)
!2260 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2261 = !{!2262, !2274}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !2259, file: !2260, line: 69, baseType: !2263, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2265)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2260, line: 50, size: 64, elements: !2266)
!2266 = !{!2267, !2272, !2273}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !2265, file: !2260, line: 52, baseType: !2268, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2270)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2271, line: 32, baseType: !173)
!2271 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl/pinctrl_soc_sam_common.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !2265, file: !2260, line: 54, baseType: !156, size: 8, offset: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2265, file: !2260, line: 56, baseType: !156, size: 8, offset: 40)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !2259, file: !2260, line: 71, baseType: !156, size: 8, offset: 32)
!2275 = !DIGlobalVariableExpression(var: !2276, expr: !DIExpression())
!2276 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_27", scope: !1724, file: !2217, line: 1293, type: !2277, isLocal: true, isDefinition: true)
!2277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2264, size: 64, elements: !993)
!2278 = !DIGlobalVariableExpression(var: !2279, expr: !DIExpression())
!2279 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_27", scope: !1724, file: !2217, line: 1293, type: !2280, isLocal: true, isDefinition: true)
!2280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2269, size: 64, elements: !145)
!2281 = !DIGlobalVariableExpression(var: !2282, expr: !DIExpression())
!2282 = distinct !DIGlobalVariable(name: "uart_sam0_driver_api", scope: !1724, file: !2217, line: 1160, type: !1773, isLocal: true, isDefinition: true)
!2283 = !DIGlobalVariableExpression(var: !2284, expr: !DIExpression())
!2284 = distinct !DIGlobalVariable(name: "uart_sam0_config_1", scope: !1724, file: !2217, line: 1293, type: !2285, isLocal: true, isDefinition: true)
!2285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2286)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam0_dev_cfg", file: !2217, line: 33, size: 256, elements: !2287)
!2287 = !{!2288, !2471, !2472, !2473, !2474, !2475, !2476, !2477}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2286, file: !2217, line: 34, baseType: !2289, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_typedef, name: "SercomUsart", file: !2291, line: 1479, baseType: !2292)
!2291 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/sercom.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2291, line: 1460, size: 416, elements: !2293)
!2293 = !{!2294, !2316, !2333, !2334, !2358, !2368, !2370, !2386, !2387, !2403, !2404, !2420, !2421, !2436, !2449, !2450, !2460, !2461}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLA", scope: !2292, file: !2291, line: 1461, baseType: !2295, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2296)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_CTRLA_Type", file: !2291, line: 269, baseType: !2297)
!2297 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2291, line: 248, size: 32, elements: !2298)
!2298 = !{!2299, !2315}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2297, file: !2291, line: 267, baseType: !2300, size: 32)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2297, file: !2291, line: 249, size: 32, elements: !2301)
!2301 = !{!2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !2300, file: !2291, line: 250, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !2300, file: !2291, line: 251, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "MODE", scope: !2300, file: !2291, line: 252, baseType: !173, size: 3, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "RUNSTDBY", scope: !2300, file: !2291, line: 254, baseType: !173, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "IBON", scope: !2300, file: !2291, line: 255, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPR", scope: !2300, file: !2291, line: 257, baseType: !173, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "TXPO", scope: !2300, file: !2291, line: 258, baseType: !173, size: 2, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "RXPO", scope: !2300, file: !2291, line: 260, baseType: !173, size: 2, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPA", scope: !2300, file: !2291, line: 261, baseType: !173, size: 2, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "FORM", scope: !2300, file: !2291, line: 262, baseType: !173, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "CMODE", scope: !2300, file: !2291, line: 263, baseType: !173, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "CPOL", scope: !2300, file: !2291, line: 264, baseType: !173, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "DORD", scope: !2300, file: !2291, line: 265, baseType: !173, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2297, file: !2291, line: 268, baseType: !173, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLB", scope: !2292, file: !2291, line: 1462, baseType: !2317, size: 32, offset: 32)
!2317 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2318)
!2318 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_CTRLB_Type", file: !2291, line: 446, baseType: !2319)
!2319 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2291, line: 429, size: 32, elements: !2320)
!2320 = !{!2321, !2332}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2319, file: !2291, line: 444, baseType: !2322, size: 32)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2319, file: !2291, line: 430, size: 32, elements: !2323)
!2323 = !{!2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "CHSIZE", scope: !2322, file: !2291, line: 431, baseType: !173, size: 3, flags: DIFlagBitField, extraData: i64 0)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "SBMODE", scope: !2322, file: !2291, line: 433, baseType: !173, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "COLDEN", scope: !2322, file: !2291, line: 435, baseType: !173, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "SFDE", scope: !2322, file: !2291, line: 436, baseType: !173, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "ENC", scope: !2322, file: !2291, line: 437, baseType: !173, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "PMODE", scope: !2322, file: !2291, line: 439, baseType: !173, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "TXEN", scope: !2322, file: !2291, line: 441, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "RXEN", scope: !2322, file: !2291, line: 442, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2319, file: !2291, line: 445, baseType: !173, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2292, file: !2291, line: 1463, baseType: !661, size: 32, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2292, file: !2291, line: 1464, baseType: !2335, size: 16, offset: 96)
!2335 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2336)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_BAUD_Type", file: !2291, line: 537, baseType: !2337)
!2337 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2291, line: 521, size: 16, elements: !2338)
!2338 = !{!2339, !2343, !2348, !2353, !2357}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2337, file: !2291, line: 524, baseType: !2340, size: 16)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2337, file: !2291, line: 522, size: 16, elements: !2341)
!2341 = !{!2342}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2340, file: !2291, line: 523, baseType: !170, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "FRAC", scope: !2337, file: !2291, line: 528, baseType: !2344, size: 16)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2337, file: !2291, line: 525, size: 16, elements: !2345)
!2345 = !{!2346, !2347}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2344, file: !2291, line: 526, baseType: !170, size: 13, flags: DIFlagBitField, extraData: i64 0)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "FP", scope: !2344, file: !2291, line: 527, baseType: !170, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "FRACFP", scope: !2337, file: !2291, line: 532, baseType: !2349, size: 16)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2337, file: !2291, line: 529, size: 16, elements: !2350)
!2350 = !{!2351, !2352}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2349, file: !2291, line: 530, baseType: !170, size: 13, flags: DIFlagBitField, extraData: i64 0)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "FP", scope: !2349, file: !2291, line: 531, baseType: !170, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "USARTFP", scope: !2337, file: !2291, line: 535, baseType: !2354, size: 16)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2337, file: !2291, line: 533, size: 16, elements: !2355)
!2355 = !{!2356}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "BAUD", scope: !2354, file: !2291, line: 534, baseType: !170, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2337, file: !2291, line: 536, baseType: !170, size: 16)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "RXPL", scope: !2292, file: !2291, line: 1465, baseType: !2359, size: 8, offset: 112)
!2359 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2360)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_RXPL_Type", file: !2291, line: 579, baseType: !2361)
!2361 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2291, line: 574, size: 8, elements: !2362)
!2362 = !{!2363, !2367}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2361, file: !2291, line: 577, baseType: !2364, size: 8)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2361, file: !2291, line: 575, size: 8, elements: !2365)
!2365 = !{!2366}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "RXPL", scope: !2364, file: !2291, line: 576, baseType: !156, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2361, file: !2291, line: 578, baseType: !156, size: 8)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !2292, file: !2291, line: 1466, baseType: !2369, size: 40, offset: 120)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 40, elements: !1546)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "INTENCLR", scope: !2292, file: !2291, line: 1467, baseType: !2371, size: 8, offset: 160)
!2371 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2372)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTENCLR_Type", file: !2291, line: 685, baseType: !2373)
!2373 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2291, line: 673, size: 8, elements: !2374)
!2374 = !{!2375, !2385}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2373, file: !2291, line: 683, baseType: !2376, size: 8)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2373, file: !2291, line: 674, size: 8, elements: !2377)
!2377 = !{!2378, !2379, !2380, !2381, !2382, !2383, !2384}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2376, file: !2291, line: 675, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2376, file: !2291, line: 676, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2376, file: !2291, line: 677, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2376, file: !2291, line: 678, baseType: !156, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2376, file: !2291, line: 679, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2376, file: !2291, line: 680, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2376, file: !2291, line: 682, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2373, file: !2291, line: 684, baseType: !156, size: 8)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !2292, file: !2291, line: 1468, baseType: !992, size: 8, offset: 168)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "INTENSET", scope: !2292, file: !2291, line: 1469, baseType: !2388, size: 8, offset: 176)
!2388 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2389)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTENSET_Type", file: !2291, line: 802, baseType: !2390)
!2390 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2291, line: 790, size: 8, elements: !2391)
!2391 = !{!2392, !2402}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2390, file: !2291, line: 800, baseType: !2393, size: 8)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2390, file: !2291, line: 791, size: 8, elements: !2394)
!2394 = !{!2395, !2396, !2397, !2398, !2399, !2400, !2401}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2393, file: !2291, line: 792, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2393, file: !2291, line: 793, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2393, file: !2291, line: 794, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2393, file: !2291, line: 795, baseType: !156, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2393, file: !2291, line: 796, baseType: !156, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2393, file: !2291, line: 797, baseType: !156, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2393, file: !2291, line: 799, baseType: !156, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2390, file: !2291, line: 801, baseType: !156, size: 8)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !2292, file: !2291, line: 1470, baseType: !992, size: 8, offset: 184)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "INTFLAG", scope: !2292, file: !2291, line: 1471, baseType: !2405, size: 8, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2406)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_INTFLAG_Type", file: !2291, line: 919, baseType: !2407)
!2407 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2291, line: 907, size: 8, elements: !2408)
!2408 = !{!2409, !2419}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2407, file: !2291, line: 917, baseType: !2410, size: 8)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2407, file: !2291, line: 908, size: 8, elements: !2411)
!2411 = !{!2412, !2413, !2414, !2415, !2416, !2417, !2418}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "DRE", scope: !2410, file: !2291, line: 909, baseType: !301, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "TXC", scope: !2410, file: !2291, line: 910, baseType: !301, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "RXC", scope: !2410, file: !2291, line: 911, baseType: !301, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "RXS", scope: !2410, file: !2291, line: 912, baseType: !301, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "CTSIC", scope: !2410, file: !2291, line: 913, baseType: !301, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "RXBRK", scope: !2410, file: !2291, line: 914, baseType: !301, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "ERROR", scope: !2410, file: !2291, line: 916, baseType: !301, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2407, file: !2291, line: 918, baseType: !156, size: 8)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !2292, file: !2291, line: 1472, baseType: !992, size: 8, offset: 200)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "STATUS", scope: !2292, file: !2291, line: 1473, baseType: !2422, size: 16, offset: 208)
!2422 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2423)
!2423 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_STATUS_Type", file: !2291, line: 1061, baseType: !2424)
!2424 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2291, line: 1050, size: 16, elements: !2425)
!2425 = !{!2426, !2435}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2424, file: !2291, line: 1059, baseType: !2427, size: 16)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2424, file: !2291, line: 1051, size: 16, elements: !2428)
!2428 = !{!2429, !2430, !2431, !2432, !2433, !2434}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "PERR", scope: !2427, file: !2291, line: 1052, baseType: !170, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "FERR", scope: !2427, file: !2291, line: 1053, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "BUFOVF", scope: !2427, file: !2291, line: 1054, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "CTS", scope: !2427, file: !2291, line: 1055, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "ISF", scope: !2427, file: !2291, line: 1056, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "COLL", scope: !2427, file: !2291, line: 1057, baseType: !170, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2424, file: !2291, line: 1060, baseType: !170, size: 16)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "SYNCBUSY", scope: !2292, file: !2291, line: 1474, baseType: !2437, size: 32, offset: 224)
!2437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2438)
!2438 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2439)
!2439 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_SYNCBUSY_Type", file: !2291, line: 1160, baseType: !2440)
!2440 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2291, line: 1152, size: 32, elements: !2441)
!2441 = !{!2442, !2448}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2440, file: !2291, line: 1158, baseType: !2443, size: 32)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2440, file: !2291, line: 1153, size: 32, elements: !2444)
!2444 = !{!2445, !2446, !2447}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "SWRST", scope: !2443, file: !2291, line: 1154, baseType: !173, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "ENABLE", scope: !2443, file: !2291, line: 1155, baseType: !173, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "CTRLB", scope: !2443, file: !2291, line: 1156, baseType: !173, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2440, file: !2291, line: 1159, baseType: !173, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !2292, file: !2291, line: 1475, baseType: !876, size: 64, offset: 256)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "DATA", scope: !2292, file: !2291, line: 1476, baseType: !2451, size: 16, offset: 320)
!2451 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2452)
!2452 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_DATA_Type", file: !2291, line: 1325, baseType: !2453)
!2453 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2291, line: 1319, size: 16, elements: !2454)
!2454 = !{!2455, !2459}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2453, file: !2291, line: 1323, baseType: !2456, size: 16)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2453, file: !2291, line: 1320, size: 16, elements: !2457)
!2457 = !{!2458}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "DATA", scope: !2456, file: !2291, line: 1321, baseType: !170, size: 9, flags: DIFlagBitField, extraData: i64 0)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2453, file: !2291, line: 1324, baseType: !170, size: 16)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !2292, file: !2291, line: 1477, baseType: !832, size: 48, offset: 336)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "DBGCTRL", scope: !2292, file: !2291, line: 1478, baseType: !2462, size: 8, offset: 384)
!2462 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2463)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "SERCOM_USART_DBGCTRL_Type", file: !2291, line: 1380, baseType: !2464)
!2464 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2291, line: 1374, size: 8, elements: !2465)
!2465 = !{!2466, !2470}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2464, file: !2291, line: 1378, baseType: !2467, size: 8)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2464, file: !2291, line: 1375, size: 8, elements: !2468)
!2468 = !{!2469}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "DBGSTOP", scope: !2467, file: !2291, line: 1376, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2464, file: !2291, line: 1379, baseType: !156, size: 8)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2286, file: !2217, line: 35, baseType: !173, size: 32, offset: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "pads", scope: !2286, file: !2217, line: 36, baseType: !173, size: 32, offset: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "collision_detect", scope: !2286, file: !2217, line: 37, baseType: !1035, size: 8, offset: 96)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "pm_apbcmask", scope: !2286, file: !2217, line: 43, baseType: !173, size: 32, offset: 128)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "gclk_clkctrl_id", scope: !2286, file: !2217, line: 44, baseType: !170, size: 16, offset: 160)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !2286, file: !2217, line: 47, baseType: !1830, size: 32, offset: 192)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !2286, file: !2217, line: 56, baseType: !2478, size: 32, offset: 224)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2479 = !DIGlobalVariableExpression(var: !2480, expr: !DIExpression())
!2480 = distinct !DIGlobalVariable(name: "__isr_uart_sam0_isr_irq_1", scope: !2481, file: !2217, line: 1293, type: !2250, isLocal: true, isDefinition: true, align: 32)
!2481 = distinct !DISubprogram(name: "uart_sam0_irq_config_1", scope: !2217, file: !2217, line: 1293, type: !1831, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!2482 = !DIGlobalVariableExpression(var: !2483, expr: !DIExpression())
!2483 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_29", scope: !1724, file: !2217, line: 1293, type: !2258, isLocal: true, isDefinition: true)
!2484 = !DIGlobalVariableExpression(var: !2485, expr: !DIExpression())
!2485 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_29", scope: !1724, file: !2217, line: 1293, type: !2277, isLocal: true, isDefinition: true)
!2486 = !DIGlobalVariableExpression(var: !2487, expr: !DIExpression())
!2487 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_29", scope: !1724, file: !2217, line: 1293, type: !2280, isLocal: true, isDefinition: true)
!2488 = !DIGlobalVariableExpression(var: !2489, expr: !DIExpression())
!2489 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !2490, file: !2576, line: 65, type: !466, isLocal: true, isDefinition: true)
!2490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2491, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2492, retainedTypes: !2525, globals: !2573, splitDebugInlining: false, nameTableKind: None)
!2491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!2492 = !{!2493}
!2493 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !300, line: 90, baseType: !103, size: 32, elements: !2494)
!2494 = !{!2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524}
!2495 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!2496 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!2497 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!2498 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!2499 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!2500 = !DIEnumerator(name: "PM_IRQn", value: 0)
!2501 = !DIEnumerator(name: "SYSCTRL_IRQn", value: 1)
!2502 = !DIEnumerator(name: "WDT_IRQn", value: 2)
!2503 = !DIEnumerator(name: "RTC_IRQn", value: 3)
!2504 = !DIEnumerator(name: "EIC_IRQn", value: 4)
!2505 = !DIEnumerator(name: "NVMCTRL_IRQn", value: 5)
!2506 = !DIEnumerator(name: "DMAC_IRQn", value: 6)
!2507 = !DIEnumerator(name: "USB_IRQn", value: 7)
!2508 = !DIEnumerator(name: "EVSYS_IRQn", value: 8)
!2509 = !DIEnumerator(name: "SERCOM0_IRQn", value: 9)
!2510 = !DIEnumerator(name: "SERCOM1_IRQn", value: 10)
!2511 = !DIEnumerator(name: "SERCOM2_IRQn", value: 11)
!2512 = !DIEnumerator(name: "SERCOM3_IRQn", value: 12)
!2513 = !DIEnumerator(name: "TCC0_IRQn", value: 15)
!2514 = !DIEnumerator(name: "TCC1_IRQn", value: 16)
!2515 = !DIEnumerator(name: "TCC2_IRQn", value: 17)
!2516 = !DIEnumerator(name: "TC3_IRQn", value: 18)
!2517 = !DIEnumerator(name: "TC4_IRQn", value: 19)
!2518 = !DIEnumerator(name: "TC5_IRQn", value: 20)
!2519 = !DIEnumerator(name: "ADC_IRQn", value: 23)
!2520 = !DIEnumerator(name: "AC_IRQn", value: 24)
!2521 = !DIEnumerator(name: "DAC_IRQn", value: 25)
!2522 = !DIEnumerator(name: "PTC_IRQn", value: 26)
!2523 = !DIEnumerator(name: "I2S_IRQn", value: 27)
!2524 = !DIEnumerator(name: "PERIPH_COUNT_IRQn", value: 28)
!2525 = !{!2526, !2528, !250, !173, !2537, !2559}
!2526 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !2527, line: 46, baseType: !186)
!2527 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !2530, line: 478, baseType: !2531)
!2530 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm0plus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2530, line: 472, size: 128, elements: !2532)
!2532 = !{!2533, !2534, !2535, !2536}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2531, file: !2530, line: 474, baseType: !466, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2531, file: !2530, line: 475, baseType: !466, size: 32, offset: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2531, file: !2530, line: 476, baseType: !466, size: 32, offset: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2531, file: !2530, line: 477, baseType: !465, size: 32, offset: 96)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2530, line: 340, baseType: !2539)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2530, line: 328, size: 6400, elements: !2540)
!2540 = !{!2541, !2543, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2557}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2539, file: !2530, line: 330, baseType: !2542, size: 32)
!2542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 32, elements: !993)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2539, file: !2530, line: 331, baseType: !2544, size: 992, offset: 32)
!2544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 992, elements: !2545)
!2545 = !{!2546}
!2546 = !DISubrange(count: 31)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2539, file: !2530, line: 332, baseType: !2542, size: 32, offset: 1024)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2539, file: !2530, line: 333, baseType: !2544, size: 992, offset: 1056)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2539, file: !2530, line: 334, baseType: !2542, size: 32, offset: 2048)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2539, file: !2530, line: 335, baseType: !2544, size: 992, offset: 2080)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2539, file: !2530, line: 336, baseType: !2542, size: 32, offset: 3072)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2539, file: !2530, line: 337, baseType: !2544, size: 992, offset: 3104)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2539, file: !2530, line: 338, baseType: !2554, size: 2048, offset: 4096)
!2554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 2048, elements: !2555)
!2555 = !{!2556}
!2556 = !DISubrange(count: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2539, file: !2530, line: 339, baseType: !2558, size: 256, offset: 6144)
!2558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 256, elements: !877)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2530, line: 370, baseType: !2561)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2530, line: 355, size: 320, elements: !2562)
!2562 = !{!2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2572}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2561, file: !2530, line: 357, baseType: !465, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2561, file: !2530, line: 358, baseType: !466, size: 32, offset: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2561, file: !2530, line: 360, baseType: !466, size: 32, offset: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2561, file: !2530, line: 364, baseType: !466, size: 32, offset: 96)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2561, file: !2530, line: 365, baseType: !466, size: 32, offset: 128)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2561, file: !2530, line: 366, baseType: !466, size: 32, offset: 160)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2561, file: !2530, line: 367, baseType: !173, size: 32, offset: 192)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2561, file: !2530, line: 368, baseType: !2571, size: 64, offset: 224)
!2571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 64, elements: !145)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2561, file: !2530, line: 369, baseType: !466, size: 32, offset: 288)
!2573 = !{!2574, !2600, !2603, !2605, !2607, !2488}
!2574 = !DIGlobalVariableExpression(var: !2575, expr: !DIExpression())
!2575 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !2490, file: !2576, line: 285, type: !2577, isLocal: true, isDefinition: true, align: 32)
!2576 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2578)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !2579)
!2579 = !{!2580, !2599}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2578, file: !1015, line: 60, baseType: !2581, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 32)
!2582 = !DISubroutineType(types: !2583)
!2583 = !{!103, !2584}
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2586)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !2587)
!2587 = !{!2588, !2589, !2590, !2591, !2597, !2598}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2586, file: !1024, line: 380, baseType: !256, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2586, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2586, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2586, file: !1024, line: 386, baseType: !2592, size: 32, offset: 96)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 32)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !2594)
!2594 = !{!2595, !2596}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2593, file: !1024, line: 359, baseType: !156, size: 8)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2593, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2586, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2586, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2578, file: !1015, line: 65, baseType: !2584, size: 32, offset: 32)
!2600 = !DIGlobalVariableExpression(var: !2601, expr: !DIExpression())
!2601 = distinct !DIGlobalVariable(name: "lock", scope: !2490, file: !2576, line: 34, type: !2602, isLocal: true, isDefinition: true)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2603 = !DIGlobalVariableExpression(var: !2604, expr: !DIExpression())
!2604 = distinct !DIGlobalVariable(name: "last_load", scope: !2490, file: !2576, line: 36, type: !173, isLocal: true, isDefinition: true)
!2605 = !DIGlobalVariableExpression(var: !2606, expr: !DIExpression())
!2606 = distinct !DIGlobalVariable(name: "cycle_count", scope: !2490, file: !2576, line: 48, type: !173, isLocal: true, isDefinition: true)
!2607 = !DIGlobalVariableExpression(var: !2608, expr: !DIExpression())
!2608 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !2490, file: !2576, line: 54, type: !173, isLocal: true, isDefinition: true)
!2609 = !DIGlobalVariableExpression(var: !2610, expr: !DIExpression())
!2610 = distinct !DIGlobalVariable(name: "sam_port_addrs", scope: !2611, file: !2769, line: 16, type: !2770, isLocal: true, isDefinition: true)
!2611 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2612, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2613, globals: !2768, splitDebugInlining: false, nameTableKind: None)
!2612 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!2613 = !{!2614}
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "PortGroup", file: !2616, line: 367, baseType: !2617)
!2616 = !DIFile(filename: "modules/hal/atmel/asf/sam0/include/samd21/component/port.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2616, line: 351, size: 1024, elements: !2618)
!2618 = !{!2619, !2629, !2639, !2649, !2659, !2669, !2679, !2689, !2699, !2710, !2720, !2738, !2739, !2751, !2766}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !2617, file: !2616, line: 352, baseType: !2620, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2621)
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIR_Type", file: !2616, line: 48, baseType: !2622)
!2622 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 43, size: 32, elements: !2623)
!2623 = !{!2624, !2628}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2622, file: !2616, line: 46, baseType: !2625, size: 32)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2622, file: !2616, line: 44, size: 32, elements: !2626)
!2626 = !{!2627}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !2625, file: !2616, line: 45, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2622, file: !2616, line: 47, baseType: !173, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !2617, file: !2616, line: 353, baseType: !2630, size: 32, offset: 32)
!2630 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2631)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRCLR_Type", file: !2616, line: 66, baseType: !2632)
!2632 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 61, size: 32, elements: !2633)
!2633 = !{!2634, !2638}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2632, file: !2616, line: 64, baseType: !2635, size: 32)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2632, file: !2616, line: 62, size: 32, elements: !2636)
!2636 = !{!2637}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !2635, file: !2616, line: 63, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2632, file: !2616, line: 65, baseType: !173, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !2617, file: !2616, line: 354, baseType: !2640, size: 32, offset: 64)
!2640 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2641)
!2641 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRSET_Type", file: !2616, line: 84, baseType: !2642)
!2642 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 79, size: 32, elements: !2643)
!2643 = !{!2644, !2648}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2642, file: !2616, line: 82, baseType: !2645, size: 32)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2642, file: !2616, line: 80, size: 32, elements: !2646)
!2646 = !{!2647}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !2645, file: !2616, line: 81, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2642, file: !2616, line: 83, baseType: !173, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !2617, file: !2616, line: 355, baseType: !2650, size: 32, offset: 96)
!2650 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2651)
!2651 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRTGL_Type", file: !2616, line: 102, baseType: !2652)
!2652 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 97, size: 32, elements: !2653)
!2653 = !{!2654, !2658}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2652, file: !2616, line: 100, baseType: !2655, size: 32)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2652, file: !2616, line: 98, size: 32, elements: !2656)
!2656 = !{!2657}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !2655, file: !2616, line: 99, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2652, file: !2616, line: 101, baseType: !173, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !2617, file: !2616, line: 356, baseType: !2660, size: 32, offset: 128)
!2660 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2661)
!2661 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUT_Type", file: !2616, line: 120, baseType: !2662)
!2662 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 115, size: 32, elements: !2663)
!2663 = !{!2664, !2668}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2662, file: !2616, line: 118, baseType: !2665, size: 32)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2662, file: !2616, line: 116, size: 32, elements: !2666)
!2666 = !{!2667}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !2665, file: !2616, line: 117, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2662, file: !2616, line: 119, baseType: !173, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !2617, file: !2616, line: 357, baseType: !2670, size: 32, offset: 160)
!2670 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2671)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTCLR_Type", file: !2616, line: 138, baseType: !2672)
!2672 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 133, size: 32, elements: !2673)
!2673 = !{!2674, !2678}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2672, file: !2616, line: 136, baseType: !2675, size: 32)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2672, file: !2616, line: 134, size: 32, elements: !2676)
!2676 = !{!2677}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !2675, file: !2616, line: 135, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2672, file: !2616, line: 137, baseType: !173, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !2617, file: !2616, line: 358, baseType: !2680, size: 32, offset: 192)
!2680 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2681)
!2681 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTSET_Type", file: !2616, line: 156, baseType: !2682)
!2682 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 151, size: 32, elements: !2683)
!2683 = !{!2684, !2688}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2682, file: !2616, line: 154, baseType: !2685, size: 32)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2682, file: !2616, line: 152, size: 32, elements: !2686)
!2686 = !{!2687}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !2685, file: !2616, line: 153, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2682, file: !2616, line: 155, baseType: !173, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !2617, file: !2616, line: 359, baseType: !2690, size: 32, offset: 224)
!2690 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2691)
!2691 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTTGL_Type", file: !2616, line: 174, baseType: !2692)
!2692 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 169, size: 32, elements: !2693)
!2693 = !{!2694, !2698}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2692, file: !2616, line: 172, baseType: !2695, size: 32)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2692, file: !2616, line: 170, size: 32, elements: !2696)
!2696 = !{!2697}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !2695, file: !2616, line: 171, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2692, file: !2616, line: 173, baseType: !173, size: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !2617, file: !2616, line: 360, baseType: !2700, size: 32, offset: 256)
!2700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2701)
!2701 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2702)
!2702 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_IN_Type", file: !2616, line: 192, baseType: !2703)
!2703 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 187, size: 32, elements: !2704)
!2704 = !{!2705, !2709}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2703, file: !2616, line: 190, baseType: !2706, size: 32)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2703, file: !2616, line: 188, size: 32, elements: !2707)
!2707 = !{!2708}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !2706, file: !2616, line: 189, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2703, file: !2616, line: 191, baseType: !173, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2617, file: !2616, line: 361, baseType: !2711, size: 32, offset: 288)
!2711 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2712)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_CTRL_Type", file: !2616, line: 210, baseType: !2713)
!2713 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 205, size: 32, elements: !2714)
!2714 = !{!2715, !2719}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2713, file: !2616, line: 208, baseType: !2716, size: 32)
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2713, file: !2616, line: 206, size: 32, elements: !2717)
!2717 = !{!2718}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLING", scope: !2716, file: !2616, line: 207, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2713, file: !2616, line: 209, baseType: !173, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "WRCONFIG", scope: !2617, file: !2616, line: 362, baseType: !2721, size: 32, offset: 320)
!2721 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2722)
!2722 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_WRCONFIG_Type", file: !2616, line: 239, baseType: !2723)
!2723 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 223, size: 32, elements: !2724)
!2724 = !{!2725, !2737}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2723, file: !2616, line: 237, baseType: !2726, size: 32)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2723, file: !2616, line: 224, size: 32, elements: !2727)
!2727 = !{!2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "PINMASK", scope: !2726, file: !2616, line: 225, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !2726, file: !2616, line: 226, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !2726, file: !2616, line: 227, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !2726, file: !2616, line: 228, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !2726, file: !2616, line: 230, baseType: !173, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !2726, file: !2616, line: 232, baseType: !173, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "WRPMUX", scope: !2726, file: !2616, line: 233, baseType: !173, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "WRPINCFG", scope: !2726, file: !2616, line: 235, baseType: !173, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "HWSEL", scope: !2726, file: !2616, line: 236, baseType: !173, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2723, file: !2616, line: 238, baseType: !173, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2617, file: !2616, line: 363, baseType: !661, size: 32, offset: 352)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !2617, file: !2616, line: 364, baseType: !2740, size: 128, offset: 384)
!2740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2741, size: 128, elements: !959)
!2741 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2742)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PMUX_Type", file: !2616, line: 275, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 269, size: 8, elements: !2744)
!2744 = !{!2745, !2750}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2743, file: !2616, line: 273, baseType: !2746, size: 8)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2743, file: !2616, line: 270, size: 8, elements: !2747)
!2747 = !{!2748, !2749}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXE", scope: !2746, file: !2616, line: 271, baseType: !156, size: 4, flags: DIFlagBitField, extraData: i64 0)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXO", scope: !2746, file: !2616, line: 272, baseType: !156, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2743, file: !2616, line: 274, baseType: !156, size: 8)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "PINCFG", scope: !2617, file: !2616, line: 365, baseType: !2752, size: 256, offset: 512)
!2752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2753, size: 256, elements: !2765)
!2753 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !2754)
!2754 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PINCFG_Type", file: !2616, line: 333, baseType: !2755)
!2755 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 323, size: 8, elements: !2756)
!2756 = !{!2757, !2764}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !2755, file: !2616, line: 331, baseType: !2758, size: 8)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2755, file: !2616, line: 324, size: 8, elements: !2759)
!2759 = !{!2760, !2761, !2762, !2763}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !2758, file: !2616, line: 325, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !2758, file: !2616, line: 326, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !2758, file: !2616, line: 327, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !2758, file: !2616, line: 329, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2755, file: !2616, line: 332, baseType: !156, size: 8)
!2765 = !{!1602}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !2617, file: !2616, line: 366, baseType: !2767, size: 256, offset: 768)
!2767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 256, elements: !2765)
!2768 = !{!2609}
!2769 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_sam0.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2771, size: 64, elements: !145)
!2771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!2772 = !DIGlobalVariableExpression(var: !2773, expr: !DIExpression())
!2773 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2774, file: !2777, line: 23, type: !1689, isLocal: false, isDefinition: true)
!2774 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2775, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !2776, splitDebugInlining: false, nameTableKind: None)
!2775 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!2776 = !{!2772}
!2777 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2778 = !DIGlobalVariableExpression(var: !2779, expr: !DIExpression())
!2779 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2780, file: !2784, line: 86, type: !3002, isLocal: false, isDefinition: true, align: 64)
!2780 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2781, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2782, retainedTypes: !2791, globals: !2850, splitDebugInlining: false, nameTableKind: None)
!2781 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!2782 = !{!2783, !30, !2493}
!2783 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2784, line: 63, baseType: !32, size: 32, elements: !2785)
!2784 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2785 = !{!2786, !2787, !2788, !2789, !2790}
!2786 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2787 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2788 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2789 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2790 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2791 = !{!217, !102, !103, !2792, !2822, !173, !250, !2823, !2837}
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2794)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2795, line: 51, size: 64, elements: !2796)
!2795 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2796 = !{!2797, !2817}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2794, file: !2795, line: 52, baseType: !2798, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2795, line: 38, baseType: !2799)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 32)
!2800 = !DISubroutineType(types: !2801)
!2801 = !{!103, !2802, !1688, !170}
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2804)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !2805)
!2805 = !{!2806, !2807, !2808, !2809, !2815, !2816}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2804, file: !1024, line: 380, baseType: !256, size: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2804, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2804, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2804, file: !1024, line: 386, baseType: !2810, size: 32, offset: 96)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 32)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !2812)
!2812 = !{!2813, !2814}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2811, file: !1024, line: 359, baseType: !156, size: 8)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2811, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2804, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2804, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2794, file: !2795, line: 53, baseType: !2818, size: 32, offset: 32)
!2818 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2795, line: 47, baseType: !2819)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 32)
!2820 = !DISubroutineType(types: !2821)
!2821 = !{!103, !2802, !1688, !170, !173}
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2530, line: 340, baseType: !2825)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2530, line: 328, size: 6400, elements: !2826)
!2826 = !{!2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2825, file: !2530, line: 330, baseType: !2542, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2825, file: !2530, line: 331, baseType: !2544, size: 992, offset: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2825, file: !2530, line: 332, baseType: !2542, size: 32, offset: 1024)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2825, file: !2530, line: 333, baseType: !2544, size: 992, offset: 1056)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2825, file: !2530, line: 334, baseType: !2542, size: 32, offset: 2048)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2825, file: !2530, line: 335, baseType: !2544, size: 992, offset: 2080)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2825, file: !2530, line: 336, baseType: !2542, size: 32, offset: 3072)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2825, file: !2530, line: 337, baseType: !2544, size: 992, offset: 3104)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2825, file: !2530, line: 338, baseType: !2554, size: 2048, offset: 4096)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2825, file: !2530, line: 339, baseType: !2558, size: 256, offset: 6144)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2530, line: 370, baseType: !2839)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2530, line: 355, size: 320, elements: !2840)
!2840 = !{!2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2839, file: !2530, line: 357, baseType: !465, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2839, file: !2530, line: 358, baseType: !466, size: 32, offset: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2839, file: !2530, line: 360, baseType: !466, size: 32, offset: 64)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2839, file: !2530, line: 364, baseType: !466, size: 32, offset: 96)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2839, file: !2530, line: 365, baseType: !466, size: 32, offset: 128)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2839, file: !2530, line: 366, baseType: !466, size: 32, offset: 160)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2839, file: !2530, line: 367, baseType: !173, size: 32, offset: 192)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2839, file: !2530, line: 368, baseType: !2571, size: 64, offset: 224)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2839, file: !2530, line: 369, baseType: !466, size: 32, offset: 288)
!2850 = !{!2851, !2967, !2975, !2977, !2778, !2980, !2982, !2987}
!2851 = !DIGlobalVariableExpression(var: !2852, expr: !DIExpression())
!2852 = distinct !DIGlobalVariable(name: "_kernel", scope: !2780, file: !2784, line: 40, type: !2853, isLocal: false, isDefinition: true)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !150, line: 158, size: 288, elements: !2854)
!2854 = !{!2855, !2962}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2853, file: !150, line: 159, baseType: !2856, size: 192)
!2856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2857, size: 192, elements: !993)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !150, line: 100, size: 192, elements: !2858)
!2858 = !{!2859, !2860, !2861, !2956, !2957, !2958, !2959}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2857, file: !150, line: 102, baseType: !173, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2857, file: !150, line: 105, baseType: !2822, size: 32, offset: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2857, file: !150, line: 108, baseType: !2862, size: 32, offset: 64)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 32)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !2864)
!2864 = !{!2865, !2923, !2935, !2936, !2937, !2938, !2951}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2863, file: !114, line: 247, baseType: !2866, size: 384)
!2866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !2867)
!2867 = !{!2868, !2892, !2899, !2900, !2901, !2910, !2911, !2912}
!2868 = !DIDerivedType(tag: DW_TAG_member, scope: !2866, file: !114, line: 60, baseType: !2869, size: 64)
!2869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2866, file: !114, line: 60, size: 64, elements: !2870)
!2870 = !{!2871, !2886}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2869, file: !114, line: 61, baseType: !2872, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !2873)
!2873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !2874)
!2874 = !{!2875, !2881}
!2875 = !DIDerivedType(tag: DW_TAG_member, scope: !2873, file: !124, line: 38, baseType: !2876, size: 32)
!2876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2873, file: !124, line: 38, size: 32, elements: !2877)
!2877 = !{!2878, !2880}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2876, file: !124, line: 39, baseType: !2879, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2876, file: !124, line: 40, baseType: !2879, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, scope: !2873, file: !124, line: 42, baseType: !2882, size: 32, offset: 32)
!2882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2873, file: !124, line: 42, size: 32, elements: !2883)
!2883 = !{!2884, !2885}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2882, file: !124, line: 43, baseType: !2879, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2882, file: !124, line: 44, baseType: !2879, size: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2869, file: !114, line: 62, baseType: !2887, size: 64)
!2887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !2888)
!2888 = !{!2889}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2887, file: !140, line: 50, baseType: !2890, size: 64)
!2890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2891, size: 64, elements: !145)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 32)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2866, file: !114, line: 68, baseType: !2893, size: 32, offset: 64)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !2895)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !2896)
!2896 = !{!2897}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2895, file: !150, line: 232, baseType: !2898, size: 64)
!2898 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !2873)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2866, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2866, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!2901 = !DIDerivedType(tag: DW_TAG_member, scope: !2866, file: !114, line: 90, baseType: !2902, size: 16, offset: 112)
!2902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2866, file: !114, line: 90, size: 16, elements: !2903)
!2903 = !{!2904, !2909}
!2904 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !114, line: 91, baseType: !2905, size: 16)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2902, file: !114, line: 91, size: 16, elements: !2906)
!2906 = !{!2907, !2908}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2905, file: !114, line: 96, baseType: !166, size: 8)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2905, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2902, file: !114, line: 100, baseType: !170, size: 16)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2866, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2866, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2866, file: !114, line: 131, baseType: !2913, size: 192, offset: 192)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !2914)
!2914 = !{!2915, !2916, !2922}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2913, file: !150, line: 245, baseType: !2872, size: 64)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2913, file: !150, line: 246, baseType: !2917, size: 32, offset: 64)
!2917 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !2918)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 32)
!2919 = !DISubroutineType(types: !2920)
!2920 = !{null, !2921}
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 32)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2913, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2863, file: !114, line: 250, baseType: !2924, size: 288, offset: 384)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !2925)
!2925 = !{!2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2924, file: !190, line: 26, baseType: !173, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2924, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2924, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2924, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2924, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2924, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2924, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2924, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2924, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2863, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2863, file: !114, line: 256, baseType: !2894, size: 64, offset: 704)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2863, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2863, file: !114, line: 325, baseType: !2939, size: 32, offset: 800)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 32)
!2940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !2941)
!2941 = !{!2942, !2948, !2949}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2940, file: !109, line: 5074, baseType: !2943, size: 96)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !2944)
!2944 = !{!2945, !2946, !2947}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2943, file: !210, line: 57, baseType: !213, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2943, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2943, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2940, file: !109, line: 5075, baseType: !2894, size: 64, offset: 96)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2940, file: !109, line: 5076, baseType: !2950, offset: 160)
!2950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2863, file: !114, line: 343, baseType: !2952, size: 64, offset: 832)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !2953)
!2953 = !{!2954, !2955}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2952, file: !190, line: 63, baseType: !173, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2952, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2857, file: !150, line: 111, baseType: !2862, size: 32, offset: 96)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2857, file: !150, line: 124, baseType: !103, size: 32, offset: 128)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2857, file: !150, line: 127, baseType: !156, size: 8, offset: 160)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2857, file: !150, line: 153, baseType: !2960, offset: 168)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2961, line: 33, elements: !223)
!2961 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2853, file: !150, line: 170, baseType: !2963, size: 96, offset: 192)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !150, line: 83, size: 96, elements: !2964)
!2964 = !{!2965, !2966}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2963, file: !150, line: 86, baseType: !2862, size: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2963, file: !150, line: 90, baseType: !2898, size: 64, offset: 32)
!2967 = !DIGlobalVariableExpression(var: !2968, expr: !DIExpression())
!2968 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2780, file: !2784, line: 43, type: !2969, isLocal: false, isDefinition: true, align: 64)
!2969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2970, size: 8192, elements: !2973)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !2971)
!2971 = !{!2972}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2970, file: !234, line: 48, baseType: !237, size: 8)
!2973 = !{!2974}
!2974 = !DISubrange(count: 1024)
!2975 = !DIGlobalVariableExpression(var: !2976, expr: !DIExpression())
!2976 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2780, file: !2784, line: 44, type: !2863, isLocal: false, isDefinition: true)
!2977 = !DIGlobalVariableExpression(var: !2978, expr: !DIExpression())
!2978 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2780, file: !2784, line: 48, type: !2979, isLocal: false, isDefinition: true)
!2979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2863, size: 896, elements: !993)
!2980 = !DIGlobalVariableExpression(var: !2981, expr: !DIExpression())
!2981 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2780, file: !2784, line: 217, type: !1035, isLocal: false, isDefinition: true)
!2982 = !DIGlobalVariableExpression(var: !2983, expr: !DIExpression())
!2983 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2780, file: !2784, line: 50, type: !2984, isLocal: true, isDefinition: true, align: 64)
!2984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2970, size: 2048, elements: !2985)
!2985 = !{!994, !2986}
!2986 = !DISubrange(count: 256)
!2987 = !DIGlobalVariableExpression(var: !2988, expr: !DIExpression())
!2988 = distinct !DIGlobalVariable(name: "levels", scope: !2989, file: !2784, line: 232, type: !2992, isLocal: true, isDefinition: true)
!2989 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2784, file: !2784, line: 230, type: !2990, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!2990 = !DISubroutineType(types: !2991)
!2991 = !{null, !2783}
!2992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2993, size: 192, elements: !833)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2995)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !1015, line: 51, size: 64, elements: !2996)
!2996 = !{!2997, !3001}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2995, file: !1015, line: 60, baseType: !2998, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 32)
!2999 = !DISubroutineType(types: !3000)
!3000 = !{!103, !2802}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2995, file: !1015, line: 65, baseType: !2802, size: 32, offset: 32)
!3002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2970, size: 16384, elements: !3003)
!3003 = !{!994, !3004}
!3004 = !DISubrange(count: 2048)
!3005 = !DIGlobalVariableExpression(var: !3006, expr: !DIExpression())
!3006 = distinct !DIGlobalVariable(name: "states_str", scope: !3007, file: !3008, line: 276, type: !3115, isLocal: true, isDefinition: true)
!3007 = distinct !DISubprogram(name: "k_thread_state_str", scope: !3008, file: !3008, line: 271, type: !3009, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!3008 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3009 = !DISubroutineType(types: !3010)
!3010 = !{!256, !3011, !2822, !217}
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !3012)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 32)
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !3014)
!3014 = !{!3015, !3073, !3085, !3086, !3087, !3088, !3101}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3013, file: !114, line: 247, baseType: !3016, size: 384)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !3017)
!3017 = !{!3018, !3042, !3049, !3050, !3051, !3060, !3061, !3062}
!3018 = !DIDerivedType(tag: DW_TAG_member, scope: !3016, file: !114, line: 60, baseType: !3019, size: 64)
!3019 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3016, file: !114, line: 60, size: 64, elements: !3020)
!3020 = !{!3021, !3036}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3019, file: !114, line: 61, baseType: !3022, size: 64)
!3022 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !3023)
!3023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !3024)
!3024 = !{!3025, !3031}
!3025 = !DIDerivedType(tag: DW_TAG_member, scope: !3023, file: !124, line: 38, baseType: !3026, size: 32)
!3026 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3023, file: !124, line: 38, size: 32, elements: !3027)
!3027 = !{!3028, !3030}
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3026, file: !124, line: 39, baseType: !3029, size: 32)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 32)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3026, file: !124, line: 40, baseType: !3029, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, scope: !3023, file: !124, line: 42, baseType: !3032, size: 32, offset: 32)
!3032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3023, file: !124, line: 42, size: 32, elements: !3033)
!3033 = !{!3034, !3035}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3032, file: !124, line: 43, baseType: !3029, size: 32)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3032, file: !124, line: 44, baseType: !3029, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3019, file: !114, line: 62, baseType: !3037, size: 64)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !3038)
!3038 = !{!3039}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3037, file: !140, line: 50, baseType: !3040, size: 64)
!3040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3041, size: 64, elements: !145)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 32)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3016, file: !114, line: 68, baseType: !3043, size: 32, offset: 64)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 32)
!3044 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !3045)
!3045 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !3046)
!3046 = !{!3047}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3045, file: !150, line: 232, baseType: !3048, size: 64)
!3048 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !3023)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3016, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3016, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!3051 = !DIDerivedType(tag: DW_TAG_member, scope: !3016, file: !114, line: 90, baseType: !3052, size: 16, offset: 112)
!3052 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3016, file: !114, line: 90, size: 16, elements: !3053)
!3053 = !{!3054, !3059}
!3054 = !DIDerivedType(tag: DW_TAG_member, scope: !3052, file: !114, line: 91, baseType: !3055, size: 16)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3052, file: !114, line: 91, size: 16, elements: !3056)
!3056 = !{!3057, !3058}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3055, file: !114, line: 96, baseType: !166, size: 8)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3055, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3052, file: !114, line: 100, baseType: !170, size: 16)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3016, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3016, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3016, file: !114, line: 131, baseType: !3063, size: 192, offset: 192)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !3064)
!3064 = !{!3065, !3066, !3072}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3063, file: !150, line: 245, baseType: !3022, size: 64)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3063, file: !150, line: 246, baseType: !3067, size: 32, offset: 64)
!3067 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !3068)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 32)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{null, !3071}
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 32)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3063, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3013, file: !114, line: 250, baseType: !3074, size: 288, offset: 384)
!3074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !3075)
!3075 = !{!3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3074, file: !190, line: 26, baseType: !173, size: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3074, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3074, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3074, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3074, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3074, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3074, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3074, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3074, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3013, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3013, file: !114, line: 256, baseType: !3044, size: 64, offset: 704)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3013, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3013, file: !114, line: 325, baseType: !3089, size: 32, offset: 800)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 32)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !3091)
!3091 = !{!3092, !3098, !3099}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3090, file: !109, line: 5074, baseType: !3093, size: 96)
!3093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !3094)
!3094 = !{!3095, !3096, !3097}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3093, file: !210, line: 57, baseType: !213, size: 32)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3093, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3093, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3090, file: !109, line: 5075, baseType: !3044, size: 64, offset: 96)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3090, file: !109, line: 5076, baseType: !3100, offset: 160)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3013, file: !114, line: 343, baseType: !3102, size: 64, offset: 832)
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !3103)
!3103 = !{!3104, !3105}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3102, file: !190, line: 63, baseType: !173, size: 32)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3102, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!3106 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3107, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3108, globals: !3110, splitDebugInlining: false, nameTableKind: None)
!3107 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3108 = !{!102, !256, !2526, !156, !103, !3109, !24, !217, !2822, !173, !1938}
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 32)
!3110 = !{!3005, !3111}
!3111 = !DIGlobalVariableExpression(var: !3112, expr: !DIExpression())
!3112 = distinct !DIGlobalVariable(name: "states_sz", scope: !3007, file: !3008, line: 279, type: !3113, isLocal: true, isDefinition: true)
!3113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3114, size: 256, elements: !877)
!3114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!3115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 256, elements: !877)
!3116 = !DIGlobalVariableExpression(var: !3117, expr: !DIExpression())
!3117 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !3118, file: !3229, line: 56, type: !3218, isLocal: false, isDefinition: true)
!3118 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3119, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3120, retainedTypes: !3129, globals: !3226, splitDebugInlining: false, nameTableKind: None)
!3119 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3120 = !{!3121, !30}
!3121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !3122, line: 27, baseType: !32, size: 32, elements: !3123)
!3122 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3123 = !{!3124, !3125, !3126, !3127, !3128}
!3124 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!3125 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!3126 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!3127 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!3128 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!3129 = !{!3130, !2822, !102, !3224, !1688, !2526, !250, !103, !173, !1938, !3225}
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 32)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !3132)
!3132 = !{!3133, !3191, !3203, !3204, !3205, !3206, !3219}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3131, file: !114, line: 247, baseType: !3134, size: 384)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !3135)
!3135 = !{!3136, !3160, !3167, !3168, !3169, !3178, !3179, !3180}
!3136 = !DIDerivedType(tag: DW_TAG_member, scope: !3134, file: !114, line: 60, baseType: !3137, size: 64)
!3137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3134, file: !114, line: 60, size: 64, elements: !3138)
!3138 = !{!3139, !3154}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3137, file: !114, line: 61, baseType: !3140, size: 64)
!3140 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !3141)
!3141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !3142)
!3142 = !{!3143, !3149}
!3143 = !DIDerivedType(tag: DW_TAG_member, scope: !3141, file: !124, line: 38, baseType: !3144, size: 32)
!3144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3141, file: !124, line: 38, size: 32, elements: !3145)
!3145 = !{!3146, !3148}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3144, file: !124, line: 39, baseType: !3147, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3144, file: !124, line: 40, baseType: !3147, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_member, scope: !3141, file: !124, line: 42, baseType: !3150, size: 32, offset: 32)
!3150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3141, file: !124, line: 42, size: 32, elements: !3151)
!3151 = !{!3152, !3153}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3150, file: !124, line: 43, baseType: !3147, size: 32)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3150, file: !124, line: 44, baseType: !3147, size: 32)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3137, file: !114, line: 62, baseType: !3155, size: 64)
!3155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !3156)
!3156 = !{!3157}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3155, file: !140, line: 50, baseType: !3158, size: 64)
!3158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3159, size: 64, elements: !145)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 32)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3134, file: !114, line: 68, baseType: !3161, size: 32, offset: 64)
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !3163)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !3164)
!3164 = !{!3165}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3163, file: !150, line: 232, baseType: !3166, size: 64)
!3166 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !3141)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3134, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3134, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!3169 = !DIDerivedType(tag: DW_TAG_member, scope: !3134, file: !114, line: 90, baseType: !3170, size: 16, offset: 112)
!3170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3134, file: !114, line: 90, size: 16, elements: !3171)
!3171 = !{!3172, !3177}
!3172 = !DIDerivedType(tag: DW_TAG_member, scope: !3170, file: !114, line: 91, baseType: !3173, size: 16)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3170, file: !114, line: 91, size: 16, elements: !3174)
!3174 = !{!3175, !3176}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3173, file: !114, line: 96, baseType: !166, size: 8)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3173, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3170, file: !114, line: 100, baseType: !170, size: 16)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3134, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3134, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3134, file: !114, line: 131, baseType: !3181, size: 192, offset: 192)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !3182)
!3182 = !{!3183, !3184, !3190}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3181, file: !150, line: 245, baseType: !3140, size: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3181, file: !150, line: 246, baseType: !3185, size: 32, offset: 64)
!3185 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !3186)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 32)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{null, !3189}
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 32)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3181, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3131, file: !114, line: 250, baseType: !3192, size: 288, offset: 384)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !3193)
!3193 = !{!3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3192, file: !190, line: 26, baseType: !173, size: 32)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3192, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3192, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3192, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3192, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3192, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3192, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3192, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3192, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3131, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3131, file: !114, line: 256, baseType: !3162, size: 64, offset: 704)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3131, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3131, file: !114, line: 325, baseType: !3207, size: 32, offset: 800)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 32)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !3209)
!3209 = !{!3210, !3216, !3217}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3208, file: !109, line: 5074, baseType: !3211, size: 96)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !3212)
!3212 = !{!3213, !3214, !3215}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3211, file: !210, line: 57, baseType: !213, size: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3211, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3211, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3208, file: !109, line: 5075, baseType: !3162, size: 64, offset: 96)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3208, file: !109, line: 5076, baseType: !3218, offset: 160)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3131, file: !114, line: 343, baseType: !3220, size: 64, offset: 832)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !3221)
!3221 = !{!3222, !3223}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3220, file: !190, line: 63, baseType: !173, size: 32)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3220, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 32)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 32)
!3226 = !{!3116, !3227, !3230, !3232}
!3227 = !DIGlobalVariableExpression(var: !3228, expr: !DIExpression())
!3228 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !3118, file: !3229, line: 404, type: !103, isLocal: true, isDefinition: true)
!3229 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3230 = !DIGlobalVariableExpression(var: !3231, expr: !DIExpression())
!3231 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !3118, file: !3229, line: 405, type: !103, isLocal: true, isDefinition: true)
!3232 = !DIGlobalVariableExpression(var: !3233, expr: !DIExpression())
!3233 = distinct !DIGlobalVariable(name: "pending_current", scope: !3118, file: !3229, line: 425, type: !3130, isLocal: true, isDefinition: true)
!3234 = !DIGlobalVariableExpression(var: !3235, expr: !DIExpression())
!3235 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !3236, file: !3266, line: 19, type: !3272, isLocal: true, isDefinition: true)
!3236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3237, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3238, globals: !3263, splitDebugInlining: false, nameTableKind: None)
!3237 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3238 = !{!2526, !102, !250, !173, !1938, !103, !3239, !2822, !186}
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 32)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !3241)
!3241 = !{!3242, !3257, !3262}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3240, file: !150, line: 245, baseType: !3243, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !3244)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !3245)
!3245 = !{!3246, !3252}
!3246 = !DIDerivedType(tag: DW_TAG_member, scope: !3244, file: !124, line: 38, baseType: !3247, size: 32)
!3247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3244, file: !124, line: 38, size: 32, elements: !3248)
!3248 = !{!3249, !3251}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3247, file: !124, line: 39, baseType: !3250, size: 32)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3247, file: !124, line: 40, baseType: !3250, size: 32)
!3252 = !DIDerivedType(tag: DW_TAG_member, scope: !3244, file: !124, line: 42, baseType: !3253, size: 32, offset: 32)
!3253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3244, file: !124, line: 42, size: 32, elements: !3254)
!3254 = !{!3255, !3256}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3253, file: !124, line: 43, baseType: !3250, size: 32)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3253, file: !124, line: 44, baseType: !3250, size: 32)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3240, file: !150, line: 246, baseType: !3258, size: 32, offset: 64)
!3258 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !3259)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 32)
!3260 = !DISubroutineType(types: !3261)
!3261 = !{null, !3239}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3240, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!3263 = !{!3264, !3234, !3267, !3269}
!3264 = !DIGlobalVariableExpression(var: !3265, expr: !DIExpression())
!3265 = distinct !DIGlobalVariable(name: "curr_tick", scope: !3236, file: !3266, line: 15, type: !1938, isLocal: true, isDefinition: true)
!3266 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3267 = !DIGlobalVariableExpression(var: !3268, expr: !DIExpression())
!3268 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !3236, file: !3266, line: 25, type: !103, isLocal: true, isDefinition: true)
!3269 = !DIGlobalVariableExpression(var: !3270, expr: !DIExpression())
!3270 = distinct !DIGlobalVariable(name: "timeout_list", scope: !3236, file: !3266, line: 17, type: !3271, isLocal: true, isDefinition: true)
!3271 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !3244)
!3272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!3273 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3274, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3274 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3275 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3276, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3276 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3277 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3278, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3279, retainedTypes: !3299, splitDebugInlining: false, nameTableKind: None)
!3278 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3279 = !{!3280, !3288}
!3280 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !3281, line: 69, baseType: !32, size: 32, elements: !3282)
!3281 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3282 = !{!3283, !3284, !3285, !3286, !3287}
!3283 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!3284 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!3285 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!3286 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!3287 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!3288 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !3281, line: 56, baseType: !32, size: 32, elements: !3289)
!3289 = !{!3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298}
!3290 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!3291 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!3292 = !DIEnumerator(name: "LENGTH_H", value: 2)
!3293 = !DIEnumerator(name: "LENGTH_L", value: 3)
!3294 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!3295 = !DIEnumerator(name: "LENGTH_J", value: 5)
!3296 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!3297 = !DIEnumerator(name: "LENGTH_T", value: 7)
!3298 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!3299 = !{!103, !3280, !3288, !3300, !167, !1042, !3302, !3303, !157, !171, !256, !217, !102, !22, !32, !3305, !3306, !3307, !1959, !3308, !187, !3309, !3301, !3310, !3311, !3312, !3313}
!3300 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !3281, line: 31, baseType: !3301)
!3301 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !187)
!3302 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !218, line: 329, baseType: !32)
!3303 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !3281, line: 32, baseType: !3304)
!3304 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1939)
!3305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!3308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 32)
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 32)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3301, size: 32)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!3312 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !218, line: 145, baseType: !103)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 32)
!3314 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3315, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3315 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3316 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3317, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3317 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam0/common/./soc_port.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3319, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3120, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3319 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3321, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3322, retainedTypes: !3323, splitDebugInlining: false, nameTableKind: None)
!3321 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3322 = !{!2493, !3121, !30}
!3323 = !{!3324, !3325, !102, !103, !250, !173, !3339}
!3324 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !300, line: 125, baseType: !2493)
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 32)
!3326 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2530, line: 340, baseType: !3327)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2530, line: 328, size: 6400, elements: !3328)
!3328 = !{!3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3327, file: !2530, line: 330, baseType: !2542, size: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3327, file: !2530, line: 331, baseType: !2544, size: 992, offset: 32)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3327, file: !2530, line: 332, baseType: !2542, size: 32, offset: 1024)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3327, file: !2530, line: 333, baseType: !2544, size: 992, offset: 1056)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3327, file: !2530, line: 334, baseType: !2542, size: 32, offset: 2048)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3327, file: !2530, line: 335, baseType: !2544, size: 992, offset: 2080)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3327, file: !2530, line: 336, baseType: !2542, size: 32, offset: 3072)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3327, file: !2530, line: 337, baseType: !2544, size: 992, offset: 3104)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3327, file: !2530, line: 338, baseType: !2554, size: 2048, offset: 4096)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3327, file: !2530, line: 339, baseType: !2558, size: 256, offset: 6144)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 32)
!3340 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2530, line: 370, baseType: !3341)
!3341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2530, line: 355, size: 320, elements: !3342)
!3342 = !{!3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3341, file: !2530, line: 357, baseType: !465, size: 32)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3341, file: !2530, line: 358, baseType: !466, size: 32, offset: 32)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3341, file: !2530, line: 360, baseType: !466, size: 32, offset: 64)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3341, file: !2530, line: 364, baseType: !466, size: 32, offset: 96)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3341, file: !2530, line: 365, baseType: !466, size: 32, offset: 128)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3341, file: !2530, line: 366, baseType: !466, size: 32, offset: 160)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3341, file: !2530, line: 367, baseType: !173, size: 32, offset: 192)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3341, file: !2530, line: 368, baseType: !2571, size: 64, offset: 224)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3341, file: !2530, line: 369, baseType: !466, size: 32, offset: 288)
!3352 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3353, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3353 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3355, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3356, splitDebugInlining: false, nameTableKind: None)
!3355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3356 = !{!102, !103, !22, !3357}
!3357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3358, size: 32)
!3358 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2530, line: 370, baseType: !3359)
!3359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2530, line: 355, size: 320, elements: !3360)
!3360 = !{!3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3359, file: !2530, line: 357, baseType: !465, size: 32)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3359, file: !2530, line: 358, baseType: !466, size: 32, offset: 32)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3359, file: !2530, line: 360, baseType: !466, size: 32, offset: 64)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3359, file: !2530, line: 364, baseType: !466, size: 32, offset: 96)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3359, file: !2530, line: 365, baseType: !466, size: 32, offset: 128)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3359, file: !2530, line: 366, baseType: !466, size: 32, offset: 160)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3359, file: !2530, line: 367, baseType: !173, size: 32, offset: 192)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3359, file: !2530, line: 368, baseType: !2571, size: 64, offset: 224)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3359, file: !2530, line: 369, baseType: !466, size: 32, offset: 288)
!3370 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3371, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3372, splitDebugInlining: false, nameTableKind: None)
!3371 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3372 = !{!3373, !102, !103}
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 32)
!3374 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2530, line: 370, baseType: !3375)
!3375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2530, line: 355, size: 320, elements: !3376)
!3376 = !{!3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3375, file: !2530, line: 357, baseType: !465, size: 32)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3375, file: !2530, line: 358, baseType: !466, size: 32, offset: 32)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3375, file: !2530, line: 360, baseType: !466, size: 32, offset: 64)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3375, file: !2530, line: 364, baseType: !466, size: 32, offset: 96)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3375, file: !2530, line: 365, baseType: !466, size: 32, offset: 128)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3375, file: !2530, line: 366, baseType: !466, size: 32, offset: 160)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3375, file: !2530, line: 367, baseType: !173, size: 32, offset: 192)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3375, file: !2530, line: 368, baseType: !2571, size: 64, offset: 224)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3375, file: !2530, line: 369, baseType: !466, size: 32, offset: 288)
!3386 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3387, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3388, splitDebugInlining: false, nameTableKind: None)
!3387 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3388 = !{!3389, !173, !102, !103}
!3389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3390, size: 32)
!3390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3391, line: 98, size: 256, elements: !3392)
!3391 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3392 = !{!3393, !3398, !3403, !3408, !3413, !3418, !3423, !3428}
!3393 = !DIDerivedType(tag: DW_TAG_member, scope: !3390, file: !3391, line: 99, baseType: !3394, size: 32)
!3394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3390, file: !3391, line: 99, size: 32, elements: !3395)
!3395 = !{!3396, !3397}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3394, file: !3391, line: 99, baseType: !173, size: 32)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3394, file: !3391, line: 99, baseType: !173, size: 32)
!3398 = !DIDerivedType(tag: DW_TAG_member, scope: !3390, file: !3391, line: 100, baseType: !3399, size: 32, offset: 32)
!3399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3390, file: !3391, line: 100, size: 32, elements: !3400)
!3400 = !{!3401, !3402}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3399, file: !3391, line: 100, baseType: !173, size: 32)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3399, file: !3391, line: 100, baseType: !173, size: 32)
!3403 = !DIDerivedType(tag: DW_TAG_member, scope: !3390, file: !3391, line: 101, baseType: !3404, size: 32, offset: 64)
!3404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3390, file: !3391, line: 101, size: 32, elements: !3405)
!3405 = !{!3406, !3407}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3404, file: !3391, line: 101, baseType: !173, size: 32)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3404, file: !3391, line: 101, baseType: !173, size: 32)
!3408 = !DIDerivedType(tag: DW_TAG_member, scope: !3390, file: !3391, line: 102, baseType: !3409, size: 32, offset: 96)
!3409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3390, file: !3391, line: 102, size: 32, elements: !3410)
!3410 = !{!3411, !3412}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3409, file: !3391, line: 102, baseType: !173, size: 32)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3409, file: !3391, line: 102, baseType: !173, size: 32)
!3413 = !DIDerivedType(tag: DW_TAG_member, scope: !3390, file: !3391, line: 103, baseType: !3414, size: 32, offset: 128)
!3414 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3390, file: !3391, line: 103, size: 32, elements: !3415)
!3415 = !{!3416, !3417}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3414, file: !3391, line: 103, baseType: !173, size: 32)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3414, file: !3391, line: 103, baseType: !173, size: 32)
!3418 = !DIDerivedType(tag: DW_TAG_member, scope: !3390, file: !3391, line: 104, baseType: !3419, size: 32, offset: 160)
!3419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3390, file: !3391, line: 104, size: 32, elements: !3420)
!3420 = !{!3421, !3422}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3419, file: !3391, line: 104, baseType: !173, size: 32)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3419, file: !3391, line: 104, baseType: !173, size: 32)
!3423 = !DIDerivedType(tag: DW_TAG_member, scope: !3390, file: !3391, line: 105, baseType: !3424, size: 32, offset: 192)
!3424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3390, file: !3391, line: 105, size: 32, elements: !3425)
!3425 = !{!3426, !3427}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3424, file: !3391, line: 105, baseType: !173, size: 32)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3424, file: !3391, line: 105, baseType: !173, size: 32)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3390, file: !3391, line: 106, baseType: !173, size: 32, offset: 224)
!3429 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3430, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3120, retainedTypes: !3431, splitDebugInlining: false, nameTableKind: None)
!3430 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3431 = !{!3432, !102, !103, !3445, !3488}
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 32)
!3433 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2530, line: 370, baseType: !3434)
!3434 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2530, line: 355, size: 320, elements: !3435)
!3435 = !{!3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3434, file: !2530, line: 357, baseType: !465, size: 32)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3434, file: !2530, line: 358, baseType: !466, size: 32, offset: 32)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3434, file: !2530, line: 360, baseType: !466, size: 32, offset: 64)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3434, file: !2530, line: 364, baseType: !466, size: 32, offset: 96)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3434, file: !2530, line: 365, baseType: !466, size: 32, offset: 128)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3434, file: !2530, line: 366, baseType: !466, size: 32, offset: 160)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3434, file: !2530, line: 367, baseType: !173, size: 32, offset: 192)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3434, file: !2530, line: 368, baseType: !2571, size: 64, offset: 224)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3434, file: !2530, line: 369, baseType: !466, size: 32, offset: 288)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 32)
!3446 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3391, line: 141, baseType: !3447)
!3447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3391, line: 97, size: 256, elements: !3448)
!3448 = !{!3449}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3447, file: !3391, line: 107, baseType: !3450, size: 256)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3391, line: 98, size: 256, elements: !3451)
!3451 = !{!3452, !3457, !3462, !3467, !3472, !3477, !3482, !3487}
!3452 = !DIDerivedType(tag: DW_TAG_member, scope: !3450, file: !3391, line: 99, baseType: !3453, size: 32)
!3453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3450, file: !3391, line: 99, size: 32, elements: !3454)
!3454 = !{!3455, !3456}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3453, file: !3391, line: 99, baseType: !173, size: 32)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3453, file: !3391, line: 99, baseType: !173, size: 32)
!3457 = !DIDerivedType(tag: DW_TAG_member, scope: !3450, file: !3391, line: 100, baseType: !3458, size: 32, offset: 32)
!3458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3450, file: !3391, line: 100, size: 32, elements: !3459)
!3459 = !{!3460, !3461}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3458, file: !3391, line: 100, baseType: !173, size: 32)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3458, file: !3391, line: 100, baseType: !173, size: 32)
!3462 = !DIDerivedType(tag: DW_TAG_member, scope: !3450, file: !3391, line: 101, baseType: !3463, size: 32, offset: 64)
!3463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3450, file: !3391, line: 101, size: 32, elements: !3464)
!3464 = !{!3465, !3466}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3463, file: !3391, line: 101, baseType: !173, size: 32)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3463, file: !3391, line: 101, baseType: !173, size: 32)
!3467 = !DIDerivedType(tag: DW_TAG_member, scope: !3450, file: !3391, line: 102, baseType: !3468, size: 32, offset: 96)
!3468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3450, file: !3391, line: 102, size: 32, elements: !3469)
!3469 = !{!3470, !3471}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3468, file: !3391, line: 102, baseType: !173, size: 32)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3468, file: !3391, line: 102, baseType: !173, size: 32)
!3472 = !DIDerivedType(tag: DW_TAG_member, scope: !3450, file: !3391, line: 103, baseType: !3473, size: 32, offset: 128)
!3473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3450, file: !3391, line: 103, size: 32, elements: !3474)
!3474 = !{!3475, !3476}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3473, file: !3391, line: 103, baseType: !173, size: 32)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3473, file: !3391, line: 103, baseType: !173, size: 32)
!3477 = !DIDerivedType(tag: DW_TAG_member, scope: !3450, file: !3391, line: 104, baseType: !3478, size: 32, offset: 160)
!3478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3450, file: !3391, line: 104, size: 32, elements: !3479)
!3479 = !{!3480, !3481}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3478, file: !3391, line: 104, baseType: !173, size: 32)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3478, file: !3391, line: 104, baseType: !173, size: 32)
!3482 = !DIDerivedType(tag: DW_TAG_member, scope: !3450, file: !3391, line: 105, baseType: !3483, size: 32, offset: 192)
!3483 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3450, file: !3391, line: 105, size: 32, elements: !3484)
!3484 = !{!3485, !3486}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3483, file: !3391, line: 105, baseType: !173, size: 32)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3483, file: !3391, line: 105, baseType: !173, size: 32)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3450, file: !3391, line: 106, baseType: !173, size: 32, offset: 224)
!3488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!3489 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3490, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2492, retainedTypes: !3491, splitDebugInlining: false, nameTableKind: None)
!3490 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3491 = !{!3324, !250, !173, !3492, !3506}
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 32)
!3493 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !2530, line: 340, baseType: !3494)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2530, line: 328, size: 6400, elements: !3495)
!3495 = !{!3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3494, file: !2530, line: 330, baseType: !2542, size: 32)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3494, file: !2530, line: 331, baseType: !2544, size: 992, offset: 32)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3494, file: !2530, line: 332, baseType: !2542, size: 32, offset: 1024)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3494, file: !2530, line: 333, baseType: !2544, size: 992, offset: 1056)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3494, file: !2530, line: 334, baseType: !2542, size: 32, offset: 2048)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3494, file: !2530, line: 335, baseType: !2544, size: 992, offset: 2080)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3494, file: !2530, line: 336, baseType: !2542, size: 32, offset: 3072)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3494, file: !2530, line: 337, baseType: !2544, size: 992, offset: 3104)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3494, file: !2530, line: 338, baseType: !2554, size: 2048, offset: 4096)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3494, file: !2530, line: 339, baseType: !2558, size: 256, offset: 6144)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 32)
!3507 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2530, line: 370, baseType: !3508)
!3508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2530, line: 355, size: 320, elements: !3509)
!3509 = !{!3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518}
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3508, file: !2530, line: 357, baseType: !465, size: 32)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3508, file: !2530, line: 358, baseType: !466, size: 32, offset: 32)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3508, file: !2530, line: 360, baseType: !466, size: 32, offset: 64)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3508, file: !2530, line: 364, baseType: !466, size: 32, offset: 96)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3508, file: !2530, line: 365, baseType: !466, size: 32, offset: 128)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3508, file: !2530, line: 366, baseType: !466, size: 32, offset: 160)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3508, file: !2530, line: 367, baseType: !173, size: 32, offset: 192)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3508, file: !2530, line: 368, baseType: !2571, size: 64, offset: 224)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3508, file: !2530, line: 369, baseType: !466, size: 32, offset: 288)
!3519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3520, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3521, splitDebugInlining: false, nameTableKind: None)
!3520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3521 = !{!3522, !102, !103}
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3523, size: 32)
!3523 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !2530, line: 370, baseType: !3524)
!3524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2530, line: 355, size: 320, elements: !3525)
!3525 = !{!3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534}
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3524, file: !2530, line: 357, baseType: !465, size: 32)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3524, file: !2530, line: 358, baseType: !466, size: 32, offset: 32)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3524, file: !2530, line: 360, baseType: !466, size: 32, offset: 64)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3524, file: !2530, line: 364, baseType: !466, size: 32, offset: 96)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3524, file: !2530, line: 365, baseType: !466, size: 32, offset: 128)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3524, file: !2530, line: 366, baseType: !466, size: 32, offset: 160)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3524, file: !2530, line: 367, baseType: !173, size: 32, offset: 192)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3524, file: !2530, line: 368, baseType: !2571, size: 64, offset: 224)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3524, file: !2530, line: 369, baseType: !466, size: 32, offset: 288)
!3535 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3536, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3537, splitDebugInlining: false, nameTableKind: None)
!3536 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3537 = !{!237, !2822, !217, !1652, !3538, !22, !3540, !3543, !157, !3541, !102}
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 32)
!3539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3541, size: 32)
!3541 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_word_t", file: !3542, line: 57, baseType: !22)
!3542 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 32)
!3544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3541)
!3545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3546, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3546 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3548, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3549, splitDebugInlining: false, nameTableKind: None)
!3548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3549 = !{!102, !217}
!3550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3551, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3552, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3551 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3552 = !{!3553, !3560, !30}
!3553 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3554, line: 14, baseType: !32, size: 32, elements: !3555)
!3554 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3555 = !{!3556, !3557, !3558, !3559}
!3556 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3557 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3558 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3559 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3560 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3554, line: 42, baseType: !32, size: 32, elements: !3561)
!3561 = !{!3562, !3563, !3564, !3565, !3566, !3567}
!3562 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3563 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3564 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3565 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3566 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3567 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3568 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3569, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3569 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3570 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3571, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3572, splitDebugInlining: false, nameTableKind: None)
!3571 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3572 = !{!22, !102, !103}
!3573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3574, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3574 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3575 = !{!"Ubuntu clang version 14.0.6"}
!3576 = !{i32 7, !"Dwarf Version", i32 4}
!3577 = !{i32 2, !"Debug Info Version", i32 3}
!3578 = !{i32 1, !"wchar_size", i32 4}
!3579 = !{i32 1, !"min_enum_size", i32 4}
!3580 = !{i32 1, !"branch-target-enforcement", i32 0}
!3581 = !{i32 1, !"sign-return-address", i32 0}
!3582 = !{i32 1, !"sign-return-address-all", i32 0}
!3583 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3584 = !{i32 7, !"frame-pointer", i32 2}
!3585 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3586, file: !3586, line: 26, type: !253, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3273, retainedNodes: !223)
!3586 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3587 = !DILocation(line: 28, column: 1, scope: !3585)
!3588 = !{i64 2151541395, i64 2151541415, i64 2151541478}
!3589 = !DILocation(line: 29, column: 1, scope: !3585)
!3590 = !{i64 2151541810, i64 2151541830, i64 2151541893}
!3591 = !DILocation(line: 30, column: 1, scope: !3585)
!3592 = !{i64 2151542229, i64 2151542249, i64 2151542312}
!3593 = !DILocation(line: 31, column: 1, scope: !3585)
!3594 = !{i64 2151542648, i64 2151542668, i64 2151542731}
!3595 = !DILocation(line: 33, column: 1, scope: !3585)
!3596 = !{i64 2151542940, i64 2151542960, i64 2151543023}
!3597 = !DILocation(line: 35, column: 1, scope: !3585)
!3598 = !{i64 2151543265, i64 2151543285, i64 2151543348}
!3599 = !DILocation(line: 50, column: 1, scope: !3585)
!3600 = !{i64 2151543692, i64 2151543712, i64 2151543775}
!3601 = !DILocation(line: 54, column: 1, scope: !3585)
!3602 = !{i64 2151544131, i64 2151544151, i64 2151544214}
!3603 = !DILocation(line: 61, column: 1, scope: !3585)
!3604 = !{i64 2151544448, i64 2151544468, i64 2151544531}
!3605 = !DILocation(line: 63, column: 1, scope: !3585)
!3606 = !{i64 2151544828, i64 2151544848, i64 2151544911}
!3607 = !DILocation(line: 64, column: 1, scope: !3585)
!3608 = !{i64 2151545350, i64 2151545370, i64 2151545433}
!3609 = !DILocation(line: 65, column: 1, scope: !3585)
!3610 = !{i64 2151545848, i64 2151545868, i64 2151545931}
!3611 = !DILocation(line: 66, column: 1, scope: !3585)
!3612 = !{i64 2151546330, i64 2151546350, i64 2151546413}
!3613 = !DILocation(line: 67, column: 1, scope: !3585)
!3614 = !{i64 2151546837, i64 2151546857, i64 2151546920}
!3615 = !DILocation(line: 68, column: 1, scope: !3585)
!3616 = !{i64 2151547325, i64 2151547345, i64 2151547408}
!3617 = !DILocation(line: 70, column: 1, scope: !3585)
!3618 = !{i64 2151547793, i64 2151547813, i64 2151547876}
!3619 = !DILocation(line: 71, column: 1, scope: !3585)
!3620 = !{i64 2151548235, i64 2151548255, i64 2151548318}
!3621 = !DILocation(line: 72, column: 1, scope: !3585)
!3622 = !{i64 2151548693, i64 2151548713, i64 2151548776}
!3623 = !DILocation(line: 97, column: 1, scope: !3585)
!3624 = !{i64 2151549000, i64 2151549020, i64 2151549083}
!3625 = !DILocation(line: 99, column: 1, scope: !3585)
!3626 = !{i64 2151549218, i64 2151549238, i64 2151549301}
!3627 = !DILocation(line: 102, column: 1, scope: !3585)
!3628 = !{i64 2151549475, i64 2151549495, i64 2151549558}
!3629 = !DILocation(line: 105, column: 1, scope: !3585)
!3630 = !{i64 2151549715, i64 2151549735, i64 2151549798}
!3631 = !DILocation(line: 115, column: 1, scope: !3585)
!3632 = !{i64 2151550054, i64 2151550074, i64 2151550137}
!3633 = !DILocation(line: 118, column: 1, scope: !3585)
!3634 = !{i64 2151550398, i64 2151550418, i64 2151550481}
!3635 = !DILocation(line: 32, column: 1, scope: !3636)
!3636 = !DILexicalBlockFile(scope: !3585, file: !3637, discriminator: 0)
!3637 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3638 = !{i64 2151550754, i64 2151550774, i64 2151550837}
!3639 = !DILocation(line: 33, column: 1, scope: !3636)
!3640 = !{i64 2151555327, i64 2151555347, i64 2151555410}
!3641 = !DILocation(line: 53, column: 1, scope: !3636)
!3642 = !{i64 2151555835, i64 2151555855, i64 2151555918}
!3643 = !DILocation(line: 54, column: 1, scope: !3636)
!3644 = !{i64 2151556253, i64 2151556273, i64 2151556336}
!3645 = !DILocation(line: 55, column: 1, scope: !3636)
!3646 = !{i64 2151556671, i64 2151556691, i64 2151556754}
!3647 = !DILocation(line: 56, column: 1, scope: !3636)
!3648 = !{i64 2151557089, i64 2151557109, i64 2151557172}
!3649 = !DILocation(line: 57, column: 1, scope: !3636)
!3650 = !{i64 2151557507, i64 2151557527, i64 2151557590}
!3651 = !DILocation(line: 58, column: 1, scope: !3636)
!3652 = !{i64 2151557925, i64 2151557945, i64 2151558008}
!3653 = !DILocation(line: 59, column: 1, scope: !3636)
!3654 = !{i64 2151558343, i64 2151558363, i64 2151558426}
!3655 = !DILocation(line: 60, column: 1, scope: !3636)
!3656 = !{i64 2151558767, i64 2151558787, i64 2151558850}
!3657 = !DILocation(line: 61, column: 1, scope: !3636)
!3658 = !{i64 2151559084, i64 2151559104, i64 2151559167}
!3659 = !DILocation(line: 70, column: 1, scope: !3636)
!3660 = !{i64 2151559313, i64 2151559333, i64 2151559396}
!3661 = !DILocation(line: 72, column: 1, scope: !3636)
!3662 = !{i64 2151559645, i64 2151559665, i64 2151559728}
!3663 = !DILocation(line: 73, column: 1, scope: !3636)
!3664 = !{i64 2151560095, i64 2151560115, i64 2151560178}
!3665 = !DILocation(line: 74, column: 1, scope: !3636)
!3666 = !{i64 2151560545, i64 2151560565, i64 2151560628}
!3667 = !DILocation(line: 75, column: 1, scope: !3636)
!3668 = !{i64 2151560995, i64 2151561015, i64 2151561078}
!3669 = !DILocation(line: 76, column: 1, scope: !3636)
!3670 = !{i64 2151561445, i64 2151561465, i64 2151561528}
!3671 = !DILocation(line: 77, column: 1, scope: !3636)
!3672 = !{i64 2151561895, i64 2151561915, i64 2151561978}
!3673 = !DILocation(line: 78, column: 1, scope: !3636)
!3674 = !{i64 2151562345, i64 2151562365, i64 2151562428}
!3675 = !DILocation(line: 79, column: 1, scope: !3636)
!3676 = !{i64 2151562795, i64 2151562815, i64 2151562878}
!3677 = !DILocation(line: 80, column: 1, scope: !3636)
!3678 = !{i64 2151563248, i64 2151563268, i64 2151563331}
!3679 = !DILocation(line: 84, column: 1, scope: !3636)
!3680 = !{i64 2151563580, i64 2151563600, i64 2151563663}
!3681 = !DILocation(line: 106, column: 1, scope: !3636)
!3682 = !{i64 2151563830, i64 2151563850, i64 2151563913}
!3683 = !DILocation(line: 11, column: 1, scope: !3684)
!3684 = !DILexicalBlockFile(scope: !3585, file: !3685, discriminator: 0)
!3685 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3686 = distinct !DISubprogram(name: "thread_entry", scope: !107, file: !107, line: 23, type: !242, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !27, retainedNodes: !223)
!3687 = !DILocalVariable(name: "p1", arg: 1, scope: !3686, file: !107, line: 23, type: !102)
!3688 = !DILocation(line: 23, column: 32, scope: !3686)
!3689 = !DILocalVariable(name: "p2", arg: 2, scope: !3686, file: !107, line: 23, type: !102)
!3690 = !DILocation(line: 23, column: 42, scope: !3686)
!3691 = !DILocalVariable(name: "p3", arg: 3, scope: !3686, file: !107, line: 23, type: !102)
!3692 = !DILocation(line: 23, column: 52, scope: !3686)
!3693 = !DILocation(line: 25, column: 2, scope: !3686)
!3694 = !DILocation(line: 26, column: 1, scope: !3686)
!3695 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 28, type: !253, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !223)
!3696 = !DILocalVariable(name: "ret", scope: !3695, file: !107, line: 30, type: !103)
!3697 = !DILocation(line: 30, column: 6, scope: !3695)
!3698 = !DILocation(line: 32, column: 8, scope: !3695)
!3699 = !DILocation(line: 32, column: 6, scope: !3695)
!3700 = !DILocation(line: 33, column: 17, scope: !3695)
!3701 = !DILocation(line: 33, column: 2, scope: !3695)
!3702 = !DILocation(line: 34, column: 1, scope: !3695)
!3703 = distinct !DISubprogram(name: "test", scope: !107, file: !107, line: 12, type: !3704, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !27, retainedNodes: !223)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{!103}
!3706 = !DILocalVariable(name: "a", scope: !3703, file: !107, line: 14, type: !103)
!3707 = !DILocation(line: 14, column: 6, scope: !3703)
!3708 = !DILocalVariable(name: "b", scope: !3703, file: !107, line: 15, type: !103)
!3709 = !DILocation(line: 15, column: 6, scope: !3703)
!3710 = !DILocation(line: 17, column: 4, scope: !3703)
!3711 = !DILocation(line: 18, column: 6, scope: !3703)
!3712 = !DILocation(line: 18, column: 8, scope: !3703)
!3713 = !DILocation(line: 18, column: 4, scope: !3703)
!3714 = !DILocation(line: 20, column: 9, scope: !3703)
!3715 = !DILocation(line: 20, column: 13, scope: !3703)
!3716 = !DILocation(line: 20, column: 11, scope: !3703)
!3717 = !DILocation(line: 20, column: 2, scope: !3703)
!3718 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !272, file: !272, line: 45, type: !274, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3719 = !DILocalVariable(name: "c", arg: 1, scope: !3718, file: !272, line: 45, type: !103)
!3720 = !DILocation(line: 45, column: 52, scope: !3718)
!3721 = !DILocation(line: 47, column: 2, scope: !3718)
!3722 = !DILocation(line: 50, column: 2, scope: !3718)
!3723 = distinct !DISubprogram(name: "__printk_hook_install", scope: !272, file: !272, line: 63, type: !3724, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{null, !273}
!3726 = !DILocalVariable(name: "fn", arg: 1, scope: !3723, file: !272, line: 63, type: !273)
!3727 = !DILocation(line: 63, column: 34, scope: !3723)
!3728 = !DILocation(line: 65, column: 14, scope: !3723)
!3729 = !DILocation(line: 65, column: 12, scope: !3723)
!3730 = !DILocation(line: 66, column: 1, scope: !3723)
!3731 = distinct !DISubprogram(name: "__printk_get_hook", scope: !272, file: !272, line: 76, type: !3732, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{!102}
!3734 = !DILocation(line: 78, column: 9, scope: !3731)
!3735 = !DILocation(line: 78, column: 2, scope: !3731)
!3736 = distinct !DISubprogram(name: "vprintk", scope: !272, file: !272, line: 113, type: !3737, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3737 = !DISubroutineType(types: !3738)
!3738 = !{null, !256, !3739}
!3739 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3740, line: 99, baseType: !3741)
!3740 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3741 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3740, line: 40, baseType: !3742)
!3742 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !272, baseType: !3743)
!3743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3744)
!3744 = !{!3745}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3743, file: !272, line: 79, baseType: !102, size: 32)
!3746 = !DILocalVariable(name: "fmt", arg: 1, scope: !3736, file: !272, line: 113, type: !256)
!3747 = !DILocation(line: 113, column: 26, scope: !3736)
!3748 = !DILocalVariable(name: "ap", arg: 2, scope: !3736, file: !272, line: 113, type: !3739)
!3749 = !DILocation(line: 113, column: 39, scope: !3736)
!3750 = !DILocation(line: 120, column: 6, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3736, file: !272, line: 120, column: 6)
!3752 = !DILocation(line: 120, column: 6, scope: !3736)
!3753 = !DILocalVariable(name: "ctx", scope: !3754, file: !272, line: 121, type: !3755)
!3754 = distinct !DILexicalBlock(scope: !3751, file: !272, line: 120, column: 27)
!3755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !272, line: 81, size: 32, elements: !3756)
!3756 = !{!3757, !3758}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3755, file: !272, line: 85, baseType: !32, size: 32)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3755, file: !272, line: 86, baseType: !3759, offset: 32)
!3759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, elements: !3760)
!3760 = !{!3761}
!3761 = !DISubrange(count: 0)
!3762 = !DILocation(line: 121, column: 26, scope: !3754)
!3763 = !DILocation(line: 133, column: 27, scope: !3754)
!3764 = !DILocation(line: 133, column: 33, scope: !3754)
!3765 = !DILocation(line: 133, column: 3, scope: !3754)
!3766 = !DILocation(line: 135, column: 11, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3754, file: !272, line: 135, column: 7)
!3768 = !DILocation(line: 135, column: 7, scope: !3767)
!3769 = !DILocation(line: 135, column: 7, scope: !3754)
!3770 = !DILocation(line: 136, column: 4, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3767, file: !272, line: 135, column: 22)
!3772 = !DILocation(line: 137, column: 3, scope: !3771)
!3773 = !DILocation(line: 138, column: 2, scope: !3754)
!3774 = !DILocation(line: 148, column: 29, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3751, file: !272, line: 138, column: 9)
!3776 = !DILocation(line: 148, column: 3, scope: !3775)
!3777 = !DILocation(line: 155, column: 1, scope: !3736)
!3778 = distinct !DISubprogram(name: "k_is_user_context", scope: !3779, file: !3779, line: 115, type: !3780, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3779 = !DIFile(filename: "zephyr/include/zephyr/syscall.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!1035}
!3782 = !DILocation(line: 120, column: 2, scope: !3778)
!3783 = distinct !DISubprogram(name: "buf_char_out", scope: !272, file: !272, line: 95, type: !3784, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3784 = !DISubroutineType(types: !3785)
!3785 = !{!103, !103, !102}
!3786 = !DILocalVariable(name: "c", arg: 1, scope: !3783, file: !272, line: 95, type: !103)
!3787 = !DILocation(line: 95, column: 29, scope: !3783)
!3788 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3783, file: !272, line: 95, type: !102)
!3789 = !DILocation(line: 95, column: 38, scope: !3783)
!3790 = !DILocalVariable(name: "ctx", scope: !3783, file: !272, line: 97, type: !3791)
!3791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 32)
!3792 = !DILocation(line: 97, column: 26, scope: !3783)
!3793 = !DILocation(line: 97, column: 32, scope: !3783)
!3794 = !DILocation(line: 99, column: 31, scope: !3783)
!3795 = !DILocation(line: 99, column: 2, scope: !3783)
!3796 = !DILocation(line: 99, column: 7, scope: !3783)
!3797 = !DILocation(line: 99, column: 11, scope: !3783)
!3798 = !DILocation(line: 99, column: 16, scope: !3783)
!3799 = !DILocation(line: 99, column: 25, scope: !3783)
!3800 = !DILocation(line: 99, column: 29, scope: !3783)
!3801 = !DILocation(line: 100, column: 6, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3783, file: !272, line: 100, column: 6)
!3803 = !DILocation(line: 100, column: 11, scope: !3802)
!3804 = !DILocation(line: 100, column: 21, scope: !3802)
!3805 = !DILocation(line: 100, column: 6, scope: !3783)
!3806 = !DILocation(line: 101, column: 13, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3802, file: !272, line: 100, column: 51)
!3808 = !DILocation(line: 101, column: 3, scope: !3807)
!3809 = !DILocation(line: 102, column: 2, scope: !3807)
!3810 = !DILocation(line: 104, column: 9, scope: !3783)
!3811 = !DILocation(line: 104, column: 2, scope: !3783)
!3812 = distinct !DISubprogram(name: "cbvprintf", scope: !3813, file: !3813, line: 739, type: !3814, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3813 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3814 = !DISubroutineType(types: !3815)
!3815 = !{!103, !3816, !102, !256, !3739}
!3816 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3813, line: 297, baseType: !3817)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 32)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{!103, null}
!3820 = !DILocalVariable(name: "out", arg: 1, scope: !3812, file: !3813, line: 739, type: !3816)
!3821 = !DILocation(line: 739, column: 27, scope: !3812)
!3822 = !DILocalVariable(name: "ctx", arg: 2, scope: !3812, file: !3813, line: 739, type: !102)
!3823 = !DILocation(line: 739, column: 38, scope: !3812)
!3824 = !DILocalVariable(name: "format", arg: 3, scope: !3812, file: !3813, line: 739, type: !256)
!3825 = !DILocation(line: 739, column: 55, scope: !3812)
!3826 = !DILocalVariable(name: "ap", arg: 4, scope: !3812, file: !3813, line: 739, type: !3739)
!3827 = !DILocation(line: 739, column: 71, scope: !3812)
!3828 = !DILocation(line: 741, column: 26, scope: !3812)
!3829 = !DILocation(line: 741, column: 31, scope: !3812)
!3830 = !DILocation(line: 741, column: 36, scope: !3812)
!3831 = !DILocation(line: 741, column: 9, scope: !3812)
!3832 = !DILocation(line: 741, column: 2, scope: !3812)
!3833 = distinct !DISubprogram(name: "buf_flush", scope: !272, file: !272, line: 89, type: !3834, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{null, !3791}
!3836 = !DILocalVariable(name: "ctx", arg: 1, scope: !3833, file: !272, line: 89, type: !3791)
!3837 = !DILocation(line: 89, column: 47, scope: !3833)
!3838 = !DILocation(line: 91, column: 12, scope: !3833)
!3839 = !DILocation(line: 91, column: 17, scope: !3833)
!3840 = !DILocation(line: 91, column: 22, scope: !3833)
!3841 = !DILocation(line: 91, column: 27, scope: !3833)
!3842 = !DILocation(line: 91, column: 2, scope: !3833)
!3843 = !DILocation(line: 92, column: 2, scope: !3833)
!3844 = !DILocation(line: 92, column: 7, scope: !3833)
!3845 = !DILocation(line: 92, column: 17, scope: !3833)
!3846 = !DILocation(line: 93, column: 1, scope: !3833)
!3847 = distinct !DISubprogram(name: "char_out", scope: !272, file: !272, line: 107, type: !3784, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3848 = !DILocalVariable(name: "c", arg: 1, scope: !3847, file: !272, line: 107, type: !103)
!3849 = !DILocation(line: 107, column: 25, scope: !3847)
!3850 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3847, file: !272, line: 107, type: !102)
!3851 = !DILocation(line: 107, column: 34, scope: !3847)
!3852 = !DILocation(line: 109, column: 9, scope: !3847)
!3853 = !DILocation(line: 110, column: 9, scope: !3847)
!3854 = !DILocation(line: 110, column: 19, scope: !3847)
!3855 = !DILocation(line: 110, column: 2, scope: !3847)
!3856 = distinct !DISubprogram(name: "k_str_out", scope: !3857, file: !3857, line: 1470, type: !3858, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3857 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!3858 = !DISubroutineType(types: !3859)
!3859 = !{null, !2822, !217}
!3860 = !DILocalVariable(name: "c", arg: 1, scope: !3856, file: !3857, line: 1470, type: !2822)
!3861 = !DILocation(line: 1470, column: 37, scope: !3856)
!3862 = !DILocalVariable(name: "n", arg: 2, scope: !3856, file: !3857, line: 1470, type: !217)
!3863 = !DILocation(line: 1470, column: 47, scope: !3856)
!3864 = !DILocation(line: 1480, column: 2, scope: !3856)
!3865 = !DILocation(line: 1480, column: 2, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3856, file: !3857, line: 1480, column: 2)
!3867 = !{i64 2149644768}
!3868 = !DILocation(line: 1481, column: 19, scope: !3856)
!3869 = !DILocation(line: 1481, column: 22, scope: !3856)
!3870 = !DILocation(line: 1481, column: 2, scope: !3856)
!3871 = !DILocation(line: 1482, column: 1, scope: !3856)
!3872 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !272, file: !272, line: 157, type: !3858, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3873 = !DILocalVariable(name: "c", arg: 1, scope: !3872, file: !272, line: 157, type: !2822)
!3874 = !DILocation(line: 157, column: 29, scope: !3872)
!3875 = !DILocalVariable(name: "n", arg: 2, scope: !3872, file: !272, line: 157, type: !217)
!3876 = !DILocation(line: 157, column: 39, scope: !3872)
!3877 = !DILocalVariable(name: "i", scope: !3872, file: !272, line: 159, type: !217)
!3878 = !DILocation(line: 159, column: 9, scope: !3872)
!3879 = !DILocation(line: 164, column: 9, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3872, file: !272, line: 164, column: 2)
!3881 = !DILocation(line: 164, column: 7, scope: !3880)
!3882 = !DILocation(line: 164, column: 14, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3880, file: !272, line: 164, column: 2)
!3884 = !DILocation(line: 164, column: 18, scope: !3883)
!3885 = !DILocation(line: 164, column: 16, scope: !3883)
!3886 = !DILocation(line: 164, column: 2, scope: !3880)
!3887 = !DILocation(line: 165, column: 3, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3883, file: !272, line: 164, column: 26)
!3889 = !DILocation(line: 165, column: 13, scope: !3888)
!3890 = !DILocation(line: 165, column: 15, scope: !3888)
!3891 = !DILocation(line: 166, column: 2, scope: !3888)
!3892 = !DILocation(line: 164, column: 22, scope: !3883)
!3893 = !DILocation(line: 164, column: 2, scope: !3883)
!3894 = distinct !{!3894, !3886, !3895}
!3895 = !DILocation(line: 166, column: 2, scope: !3880)
!3896 = !DILocation(line: 171, column: 1, scope: !3872)
!3897 = distinct !DISubprogram(name: "printk", scope: !272, file: !272, line: 203, type: !3898, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{null, !256, null}
!3900 = !DILocalVariable(name: "fmt", arg: 1, scope: !3897, file: !272, line: 203, type: !256)
!3901 = !DILocation(line: 203, column: 25, scope: !3897)
!3902 = !DILocalVariable(name: "ap", scope: !3897, file: !272, line: 205, type: !3739)
!3903 = !DILocation(line: 205, column: 10, scope: !3897)
!3904 = !DILocation(line: 207, column: 2, scope: !3897)
!3905 = !DILocation(line: 209, column: 10, scope: !3897)
!3906 = !DILocation(line: 209, column: 2, scope: !3897)
!3907 = !DILocation(line: 211, column: 2, scope: !3897)
!3908 = !DILocation(line: 212, column: 1, scope: !3897)
!3909 = distinct !DISubprogram(name: "snprintk", scope: !272, file: !272, line: 239, type: !3910, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3910 = !DISubroutineType(types: !3911)
!3911 = !{!103, !2822, !217, !256, null}
!3912 = !DILocalVariable(name: "str", arg: 1, scope: !3909, file: !272, line: 239, type: !2822)
!3913 = !DILocation(line: 239, column: 20, scope: !3909)
!3914 = !DILocalVariable(name: "size", arg: 2, scope: !3909, file: !272, line: 239, type: !217)
!3915 = !DILocation(line: 239, column: 32, scope: !3909)
!3916 = !DILocalVariable(name: "fmt", arg: 3, scope: !3909, file: !272, line: 239, type: !256)
!3917 = !DILocation(line: 239, column: 50, scope: !3909)
!3918 = !DILocalVariable(name: "ap", scope: !3909, file: !272, line: 241, type: !3739)
!3919 = !DILocation(line: 241, column: 10, scope: !3909)
!3920 = !DILocalVariable(name: "ret", scope: !3909, file: !272, line: 242, type: !103)
!3921 = !DILocation(line: 242, column: 6, scope: !3909)
!3922 = !DILocation(line: 244, column: 2, scope: !3909)
!3923 = !DILocation(line: 245, column: 18, scope: !3909)
!3924 = !DILocation(line: 245, column: 23, scope: !3909)
!3925 = !DILocation(line: 245, column: 29, scope: !3909)
!3926 = !DILocation(line: 245, column: 8, scope: !3909)
!3927 = !DILocation(line: 245, column: 6, scope: !3909)
!3928 = !DILocation(line: 246, column: 2, scope: !3909)
!3929 = !DILocation(line: 248, column: 9, scope: !3909)
!3930 = !DILocation(line: 248, column: 2, scope: !3909)
!3931 = distinct !DISubprogram(name: "vsnprintk", scope: !272, file: !272, line: 251, type: !3932, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3932 = !DISubroutineType(types: !3933)
!3933 = !{!103, !2822, !217, !256, !3739}
!3934 = !DILocalVariable(name: "str", arg: 1, scope: !3931, file: !272, line: 251, type: !2822)
!3935 = !DILocation(line: 251, column: 21, scope: !3931)
!3936 = !DILocalVariable(name: "size", arg: 2, scope: !3931, file: !272, line: 251, type: !217)
!3937 = !DILocation(line: 251, column: 33, scope: !3931)
!3938 = !DILocalVariable(name: "fmt", arg: 3, scope: !3931, file: !272, line: 251, type: !256)
!3939 = !DILocation(line: 251, column: 51, scope: !3931)
!3940 = !DILocalVariable(name: "ap", arg: 4, scope: !3931, file: !272, line: 251, type: !3739)
!3941 = !DILocation(line: 251, column: 64, scope: !3931)
!3942 = !DILocalVariable(name: "ctx", scope: !3931, file: !272, line: 253, type: !3943)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !272, line: 217, size: 96, elements: !3944)
!3944 = !{!3945, !3946, !3947}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3943, file: !272, line: 218, baseType: !2822, size: 32)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3943, file: !272, line: 219, baseType: !103, size: 32, offset: 32)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3943, file: !272, line: 220, baseType: !103, size: 32, offset: 64)
!3948 = !DILocation(line: 253, column: 21, scope: !3931)
!3949 = !DILocation(line: 253, column: 27, scope: !3931)
!3950 = !DILocation(line: 253, column: 29, scope: !3931)
!3951 = !DILocation(line: 253, column: 34, scope: !3931)
!3952 = !DILocation(line: 255, column: 21, scope: !3931)
!3953 = !DILocation(line: 255, column: 27, scope: !3931)
!3954 = !DILocation(line: 255, column: 2, scope: !3931)
!3955 = !DILocation(line: 257, column: 10, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3931, file: !272, line: 257, column: 6)
!3957 = !DILocation(line: 257, column: 22, scope: !3956)
!3958 = !DILocation(line: 257, column: 16, scope: !3956)
!3959 = !DILocation(line: 257, column: 6, scope: !3931)
!3960 = !DILocation(line: 258, column: 3, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3956, file: !272, line: 257, column: 27)
!3962 = !DILocation(line: 258, column: 11, scope: !3961)
!3963 = !DILocation(line: 258, column: 18, scope: !3961)
!3964 = !DILocation(line: 259, column: 2, scope: !3961)
!3965 = !DILocation(line: 261, column: 13, scope: !3931)
!3966 = !DILocation(line: 261, column: 2, scope: !3931)
!3967 = distinct !DISubprogram(name: "str_out", scope: !272, file: !272, line: 223, type: !3968, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{!103, !103, !3970}
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 32)
!3971 = !DILocalVariable(name: "c", arg: 1, scope: !3967, file: !272, line: 223, type: !103)
!3972 = !DILocation(line: 223, column: 24, scope: !3967)
!3973 = !DILocalVariable(name: "ctx", arg: 2, scope: !3967, file: !272, line: 223, type: !3970)
!3974 = !DILocation(line: 223, column: 47, scope: !3967)
!3975 = !DILocation(line: 225, column: 6, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3967, file: !272, line: 225, column: 6)
!3977 = !DILocation(line: 225, column: 11, scope: !3976)
!3978 = !DILocation(line: 225, column: 15, scope: !3976)
!3979 = !DILocation(line: 225, column: 23, scope: !3976)
!3980 = !DILocation(line: 225, column: 26, scope: !3976)
!3981 = !DILocation(line: 225, column: 31, scope: !3976)
!3982 = !DILocation(line: 225, column: 40, scope: !3976)
!3983 = !DILocation(line: 225, column: 45, scope: !3976)
!3984 = !DILocation(line: 225, column: 37, scope: !3976)
!3985 = !DILocation(line: 225, column: 6, scope: !3967)
!3986 = !DILocation(line: 226, column: 3, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3976, file: !272, line: 225, column: 50)
!3988 = !DILocation(line: 226, column: 8, scope: !3987)
!3989 = !DILocation(line: 226, column: 13, scope: !3987)
!3990 = !DILocation(line: 227, column: 10, scope: !3987)
!3991 = !DILocation(line: 227, column: 3, scope: !3987)
!3992 = !DILocation(line: 230, column: 6, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3967, file: !272, line: 230, column: 6)
!3994 = !DILocation(line: 230, column: 11, scope: !3993)
!3995 = !DILocation(line: 230, column: 20, scope: !3993)
!3996 = !DILocation(line: 230, column: 25, scope: !3993)
!3997 = !DILocation(line: 230, column: 29, scope: !3993)
!3998 = !DILocation(line: 230, column: 17, scope: !3993)
!3999 = !DILocation(line: 230, column: 6, scope: !3967)
!4000 = !DILocation(line: 231, column: 3, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3993, file: !272, line: 230, column: 34)
!4002 = !DILocation(line: 231, column: 8, scope: !4001)
!4003 = !DILocation(line: 231, column: 12, scope: !4001)
!4004 = !DILocation(line: 231, column: 17, scope: !4001)
!4005 = !DILocation(line: 231, column: 22, scope: !4001)
!4006 = !DILocation(line: 231, column: 26, scope: !4001)
!4007 = !DILocation(line: 232, column: 2, scope: !4001)
!4008 = !DILocation(line: 233, column: 28, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !3993, file: !272, line: 232, column: 9)
!4010 = !DILocation(line: 233, column: 3, scope: !4009)
!4011 = !DILocation(line: 233, column: 8, scope: !4009)
!4012 = !DILocation(line: 233, column: 12, scope: !4009)
!4013 = !DILocation(line: 233, column: 17, scope: !4009)
!4014 = !DILocation(line: 233, column: 22, scope: !4009)
!4015 = !DILocation(line: 233, column: 26, scope: !4009)
!4016 = !DILocation(line: 236, column: 9, scope: !3967)
!4017 = !DILocation(line: 236, column: 2, scope: !3967)
!4018 = !DILocation(line: 237, column: 1, scope: !3967)
!4019 = distinct !DISubprogram(name: "z_thread_entry", scope: !4020, file: !4020, line: 30, type: !4021, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3275, retainedNodes: !223)
!4020 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4021 = !DISubroutineType(types: !4022)
!4022 = !{null, !240, !102, !102, !102}
!4023 = !DILocalVariable(name: "entry", arg: 1, scope: !4019, file: !4020, line: 30, type: !240)
!4024 = !DILocation(line: 30, column: 52, scope: !4019)
!4025 = !DILocalVariable(name: "p1", arg: 2, scope: !4019, file: !4020, line: 31, type: !102)
!4026 = !DILocation(line: 31, column: 12, scope: !4019)
!4027 = !DILocalVariable(name: "p2", arg: 3, scope: !4019, file: !4020, line: 31, type: !102)
!4028 = !DILocation(line: 31, column: 22, scope: !4019)
!4029 = !DILocalVariable(name: "p3", arg: 4, scope: !4019, file: !4020, line: 31, type: !102)
!4030 = !DILocation(line: 31, column: 32, scope: !4019)
!4031 = !DILocation(line: 36, column: 2, scope: !4019)
!4032 = !DILocation(line: 36, column: 8, scope: !4019)
!4033 = !DILocation(line: 36, column: 12, scope: !4019)
!4034 = !DILocation(line: 36, column: 16, scope: !4019)
!4035 = !DILocation(line: 38, column: 17, scope: !4019)
!4036 = !DILocation(line: 38, column: 2, scope: !4019)
!4037 = !DILocation(line: 45, column: 2, scope: !4019)
!4038 = distinct !DISubprogram(name: "k_current_get", scope: !109, file: !109, line: 530, type: !4039, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3275, retainedNodes: !223)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!4041}
!4041 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !4042)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 32)
!4043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !4044)
!4044 = !{!4045, !4103, !4115, !4116, !4117, !4118, !4131}
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4043, file: !114, line: 247, baseType: !4046, size: 384)
!4046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !4047)
!4047 = !{!4048, !4072, !4079, !4080, !4081, !4090, !4091, !4092}
!4048 = !DIDerivedType(tag: DW_TAG_member, scope: !4046, file: !114, line: 60, baseType: !4049, size: 64)
!4049 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4046, file: !114, line: 60, size: 64, elements: !4050)
!4050 = !{!4051, !4066}
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4049, file: !114, line: 61, baseType: !4052, size: 64)
!4052 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !4053)
!4053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !4054)
!4054 = !{!4055, !4061}
!4055 = !DIDerivedType(tag: DW_TAG_member, scope: !4053, file: !124, line: 38, baseType: !4056, size: 32)
!4056 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4053, file: !124, line: 38, size: 32, elements: !4057)
!4057 = !{!4058, !4060}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4056, file: !124, line: 39, baseType: !4059, size: 32)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 32)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4056, file: !124, line: 40, baseType: !4059, size: 32)
!4061 = !DIDerivedType(tag: DW_TAG_member, scope: !4053, file: !124, line: 42, baseType: !4062, size: 32, offset: 32)
!4062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4053, file: !124, line: 42, size: 32, elements: !4063)
!4063 = !{!4064, !4065}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4062, file: !124, line: 43, baseType: !4059, size: 32)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4062, file: !124, line: 44, baseType: !4059, size: 32)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4049, file: !114, line: 62, baseType: !4067, size: 64)
!4067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !4068)
!4068 = !{!4069}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4067, file: !140, line: 50, baseType: !4070, size: 64)
!4070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4071, size: 64, elements: !145)
!4071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 32)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4046, file: !114, line: 68, baseType: !4073, size: 32, offset: 64)
!4073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4074, size: 32)
!4074 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !4075)
!4075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !4076)
!4076 = !{!4077}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4075, file: !150, line: 232, baseType: !4078, size: 64)
!4078 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !4053)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4046, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4046, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!4081 = !DIDerivedType(tag: DW_TAG_member, scope: !4046, file: !114, line: 90, baseType: !4082, size: 16, offset: 112)
!4082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4046, file: !114, line: 90, size: 16, elements: !4083)
!4083 = !{!4084, !4089}
!4084 = !DIDerivedType(tag: DW_TAG_member, scope: !4082, file: !114, line: 91, baseType: !4085, size: 16)
!4085 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4082, file: !114, line: 91, size: 16, elements: !4086)
!4086 = !{!4087, !4088}
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4085, file: !114, line: 96, baseType: !166, size: 8)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4085, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4082, file: !114, line: 100, baseType: !170, size: 16)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4046, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4046, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4046, file: !114, line: 131, baseType: !4093, size: 192, offset: 192)
!4093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !4094)
!4094 = !{!4095, !4096, !4102}
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4093, file: !150, line: 245, baseType: !4052, size: 64)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4093, file: !150, line: 246, baseType: !4097, size: 32, offset: 64)
!4097 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !4098)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 32)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{null, !4101}
!4101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4093, size: 32)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4093, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4043, file: !114, line: 250, baseType: !4104, size: 288, offset: 384)
!4104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !4105)
!4105 = !{!4106, !4107, !4108, !4109, !4110, !4111, !4112, !4113, !4114}
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4104, file: !190, line: 26, baseType: !173, size: 32)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4104, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4104, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4104, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4104, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4104, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4104, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4104, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4104, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4043, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4043, file: !114, line: 256, baseType: !4074, size: 64, offset: 704)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4043, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4043, file: !114, line: 325, baseType: !4119, size: 32, offset: 800)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 32)
!4120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !4121)
!4121 = !{!4122, !4128, !4129}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4120, file: !109, line: 5074, baseType: !4123, size: 96)
!4123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !4124)
!4124 = !{!4125, !4126, !4127}
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4123, file: !210, line: 57, baseType: !213, size: 32)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4123, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4123, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4120, file: !109, line: 5075, baseType: !4074, size: 64, offset: 96)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4120, file: !109, line: 5076, baseType: !4130, offset: 160)
!4130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4043, file: !114, line: 343, baseType: !4132, size: 64, offset: 832)
!4132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !4133)
!4133 = !{!4134, !4135}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4132, file: !190, line: 63, baseType: !173, size: 32)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4132, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!4136 = !DILocation(line: 535, column: 9, scope: !4038)
!4137 = !DILocation(line: 535, column: 2, scope: !4038)
!4138 = distinct !DISubprogram(name: "k_thread_abort", scope: !3857, file: !3857, line: 188, type: !4139, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3275, retainedNodes: !223)
!4139 = !DISubroutineType(types: !4140)
!4140 = !{null, !4041}
!4141 = !DILocalVariable(name: "thread", arg: 1, scope: !4138, file: !3857, line: 188, type: !4041)
!4142 = !DILocation(line: 188, column: 43, scope: !4138)
!4143 = !DILocation(line: 197, column: 2, scope: !4138)
!4144 = !DILocation(line: 197, column: 2, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4138, file: !3857, line: 197, column: 2)
!4146 = !{i64 2149635429}
!4147 = !DILocation(line: 198, column: 24, scope: !4138)
!4148 = !DILocation(line: 198, column: 2, scope: !4138)
!4149 = !DILocation(line: 199, column: 1, scope: !4138)
!4150 = distinct !DISubprogram(name: "z_current_get", scope: !3857, file: !3857, line: 173, type: !4039, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3275, retainedNodes: !223)
!4151 = !DILocation(line: 180, column: 2, scope: !4150)
!4152 = !DILocation(line: 180, column: 2, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4150, file: !3857, line: 180, column: 2)
!4154 = !{i64 2149635361}
!4155 = !DILocation(line: 181, column: 9, scope: !4150)
!4156 = !DILocation(line: 181, column: 2, scope: !4150)
!4157 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !3281, file: !3281, line: 1338, type: !4158, scopeLine: 1340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{!103, !3816, !102, !256, !4160, !173}
!4160 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3740, line: 99, baseType: !4161)
!4161 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3740, line: 40, baseType: !4162)
!4162 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3281, baseType: !4163)
!4163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4164)
!4164 = !{!4165}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4163, file: !3281, baseType: !102, size: 32)
!4166 = !DILocalVariable(name: "out", arg: 1, scope: !4157, file: !3281, line: 1338, type: !3816)
!4167 = !DILocation(line: 1338, column: 34, scope: !4157)
!4168 = !DILocalVariable(name: "ctx", arg: 2, scope: !4157, file: !3281, line: 1338, type: !102)
!4169 = !DILocation(line: 1338, column: 45, scope: !4157)
!4170 = !DILocalVariable(name: "fp", arg: 3, scope: !4157, file: !3281, line: 1338, type: !256)
!4171 = !DILocation(line: 1338, column: 62, scope: !4157)
!4172 = !DILocalVariable(name: "ap", arg: 4, scope: !4157, file: !3281, line: 1339, type: !4160)
!4173 = !DILocation(line: 1339, column: 16, scope: !4157)
!4174 = !DILocalVariable(name: "flags", arg: 5, scope: !4157, file: !3281, line: 1339, type: !173)
!4175 = !DILocation(line: 1339, column: 29, scope: !4157)
!4176 = !DILocalVariable(name: "buf", scope: !4157, file: !3281, line: 1341, type: !4177)
!4177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 176, elements: !4178)
!4178 = !{!4179}
!4179 = !DISubrange(count: 22)
!4180 = !DILocation(line: 1341, column: 7, scope: !4157)
!4181 = !DILocalVariable(name: "count", scope: !4157, file: !3281, line: 1342, type: !217)
!4182 = !DILocation(line: 1342, column: 9, scope: !4157)
!4183 = !DILocalVariable(name: "sint", scope: !4157, file: !3281, line: 1343, type: !3300)
!4184 = !DILocation(line: 1343, column: 18, scope: !4157)
!4185 = !DILocalVariable(name: "tagged_ap", scope: !4157, file: !3281, line: 1345, type: !4186)
!4186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1035)
!4187 = !DILocation(line: 1345, column: 13, scope: !4157)
!4188 = !DILocation(line: 1345, column: 26, scope: !4157)
!4189 = !DILocation(line: 1345, column: 32, scope: !4157)
!4190 = !DILocation(line: 1346, column: 11, scope: !4157)
!4191 = !DILocation(line: 1375, column: 2, scope: !4157)
!4192 = !DILocation(line: 1375, column: 10, scope: !4157)
!4193 = !DILocation(line: 1375, column: 9, scope: !4157)
!4194 = !DILocation(line: 1375, column: 13, scope: !4157)
!4195 = !DILocation(line: 1376, column: 8, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1376, column: 7)
!4197 = distinct !DILexicalBlock(scope: !4157, file: !3281, line: 1375, column: 19)
!4198 = !DILocation(line: 1376, column: 7, scope: !4196)
!4199 = !DILocation(line: 1376, column: 11, scope: !4196)
!4200 = !DILocation(line: 1376, column: 7, scope: !4197)
!4201 = !DILocation(line: 1377, column: 4, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4196, file: !3281, line: 1376, column: 19)
!4203 = !DILocalVariable(name: "rc", scope: !4204, file: !3281, line: 1377, type: !103)
!4204 = distinct !DILexicalBlock(scope: !4202, file: !3281, line: 1377, column: 4)
!4205 = !DILocation(line: 1377, column: 4, scope: !4204)
!4206 = !DILocation(line: 1377, column: 4, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4204, file: !3281, line: 1377, column: 4)
!4208 = !DILocation(line: 1377, column: 4, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4207, file: !3281, line: 1377, column: 4)
!4210 = !DILocation(line: 1378, column: 4, scope: !4202)
!4211 = distinct !{!4211, !4191, !4212}
!4212 = !DILocation(line: 1839, column: 2, scope: !4157)
!4213 = !DILocalVariable(name: "state", scope: !4197, file: !3281, line: 1395, type: !4214)
!4214 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4157, file: !3281, line: 1392, size: 192, elements: !4215)
!4215 = !{!4216, !4226}
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4214, file: !3281, line: 1393, baseType: !4217, size: 64)
!4217 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !3281, line: 166, size: 64, elements: !4218)
!4218 = !{!4219, !4220, !4221, !4223, !4225}
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4217, file: !3281, line: 168, baseType: !3300, size: 64)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4217, file: !3281, line: 171, baseType: !3303, size: 64)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4217, file: !3281, line: 174, baseType: !4222, size: 64)
!4222 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4217, file: !3281, line: 177, baseType: !4224, size: 64)
!4224 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4217, file: !3281, line: 180, baseType: !102, size: 32)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4214, file: !3281, line: 1394, baseType: !4227, size: 96, offset: 64)
!4227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !3281, line: 189, size: 96, elements: !4228)
!4228 = !{!4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4253}
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4227, file: !3281, line: 191, baseType: !1035, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4227, file: !3281, line: 194, baseType: !1035, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4227, file: !3281, line: 197, baseType: !1035, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4227, file: !3281, line: 200, baseType: !1035, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4227, file: !3281, line: 203, baseType: !1035, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4227, file: !3281, line: 206, baseType: !1035, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4227, file: !3281, line: 209, baseType: !1035, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4227, file: !3281, line: 212, baseType: !1035, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4227, file: !3281, line: 219, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4227, file: !3281, line: 222, baseType: !1035, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4227, file: !3281, line: 229, baseType: !1035, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4227, file: !3281, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4227, file: !3281, line: 238, baseType: !1035, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4227, file: !3281, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4227, file: !3281, line: 244, baseType: !1035, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4227, file: !3281, line: 247, baseType: !1035, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4227, file: !3281, line: 252, baseType: !1035, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4227, file: !3281, line: 257, baseType: !1035, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4227, file: !3281, line: 260, baseType: !157, size: 8, offset: 24)
!4248 = !DIDerivedType(tag: DW_TAG_member, scope: !4227, file: !3281, line: 262, baseType: !4249, size: 32, offset: 32)
!4249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4227, file: !3281, line: 262, size: 32, elements: !4250)
!4250 = !{!4251, !4252}
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4249, file: !3281, line: 267, baseType: !103, size: 32)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4249, file: !3281, line: 289, baseType: !103, size: 32)
!4253 = !DIDerivedType(tag: DW_TAG_member, scope: !4227, file: !3281, line: 292, baseType: !4254, size: 32, offset: 64)
!4254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4227, file: !3281, line: 292, size: 32, elements: !4255)
!4255 = !{!4256, !4257}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4254, file: !3281, line: 297, baseType: !103, size: 32)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4254, file: !3281, line: 306, baseType: !103, size: 32)
!4258 = !DILocation(line: 1395, column: 5, scope: !4197)
!4259 = !DILocalVariable(name: "conv", scope: !4197, file: !3281, line: 1400, type: !4260)
!4260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4261)
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4227, size: 32)
!4262 = !DILocation(line: 1400, column: 28, scope: !4197)
!4263 = !DILocation(line: 1400, column: 42, scope: !4197)
!4264 = !DILocalVariable(name: "value", scope: !4197, file: !3281, line: 1401, type: !4265)
!4265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4266)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4217, size: 32)
!4267 = !DILocation(line: 1401, column: 31, scope: !4197)
!4268 = !DILocation(line: 1401, column: 46, scope: !4197)
!4269 = !DILocalVariable(name: "sp", scope: !4197, file: !3281, line: 1402, type: !256)
!4270 = !DILocation(line: 1402, column: 15, scope: !4197)
!4271 = !DILocation(line: 1402, column: 20, scope: !4197)
!4272 = !DILocalVariable(name: "width", scope: !4197, file: !3281, line: 1403, type: !103)
!4273 = !DILocation(line: 1403, column: 7, scope: !4197)
!4274 = !DILocalVariable(name: "precision", scope: !4197, file: !3281, line: 1404, type: !103)
!4275 = !DILocation(line: 1404, column: 7, scope: !4197)
!4276 = !DILocalVariable(name: "bps", scope: !4197, file: !3281, line: 1405, type: !256)
!4277 = !DILocation(line: 1405, column: 15, scope: !4197)
!4278 = !DILocalVariable(name: "bpe", scope: !4197, file: !3281, line: 1406, type: !256)
!4279 = !DILocation(line: 1406, column: 15, scope: !4197)
!4280 = !DILocation(line: 1406, column: 21, scope: !4197)
!4281 = !DILocation(line: 1406, column: 25, scope: !4197)
!4282 = !DILocalVariable(name: "sign", scope: !4197, file: !3281, line: 1407, type: !237)
!4283 = !DILocation(line: 1407, column: 8, scope: !4197)
!4284 = !DILocation(line: 1409, column: 27, scope: !4197)
!4285 = !DILocation(line: 1409, column: 33, scope: !4197)
!4286 = !DILocation(line: 1409, column: 8, scope: !4197)
!4287 = !DILocation(line: 1409, column: 6, scope: !4197)
!4288 = !DILocation(line: 1414, column: 7, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1414, column: 7)
!4290 = !DILocation(line: 1414, column: 13, scope: !4289)
!4291 = !DILocation(line: 1414, column: 7, scope: !4197)
!4292 = !DILocation(line: 1415, column: 12, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4289, file: !3281, line: 1414, column: 25)
!4294 = !DILocation(line: 1415, column: 10, scope: !4293)
!4295 = !DILocation(line: 1417, column: 8, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4293, file: !3281, line: 1417, column: 8)
!4297 = !DILocation(line: 1417, column: 14, scope: !4296)
!4298 = !DILocation(line: 1417, column: 8, scope: !4293)
!4299 = !DILocation(line: 1418, column: 5, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4296, file: !3281, line: 1417, column: 19)
!4301 = !DILocation(line: 1418, column: 11, scope: !4300)
!4302 = !DILocation(line: 1418, column: 21, scope: !4300)
!4303 = !DILocation(line: 1419, column: 14, scope: !4300)
!4304 = !DILocation(line: 1419, column: 13, scope: !4300)
!4305 = !DILocation(line: 1419, column: 11, scope: !4300)
!4306 = !DILocation(line: 1420, column: 4, scope: !4300)
!4307 = !DILocation(line: 1421, column: 3, scope: !4293)
!4308 = !DILocation(line: 1421, column: 14, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4289, file: !3281, line: 1421, column: 14)
!4310 = !DILocation(line: 1421, column: 20, scope: !4309)
!4311 = !DILocation(line: 1421, column: 14, scope: !4289)
!4312 = !DILocation(line: 1422, column: 12, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4309, file: !3281, line: 1421, column: 35)
!4314 = !DILocation(line: 1422, column: 18, scope: !4313)
!4315 = !DILocation(line: 1422, column: 10, scope: !4313)
!4316 = !DILocation(line: 1423, column: 3, scope: !4313)
!4317 = !DILocation(line: 1431, column: 7, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1431, column: 7)
!4319 = !DILocation(line: 1431, column: 13, scope: !4318)
!4320 = !DILocation(line: 1431, column: 7, scope: !4197)
!4321 = !DILocalVariable(name: "arg", scope: !4322, file: !3281, line: 1432, type: !103)
!4322 = distinct !DILexicalBlock(scope: !4318, file: !3281, line: 1431, column: 24)
!4323 = !DILocation(line: 1432, column: 8, scope: !4322)
!4324 = !DILocation(line: 1432, column: 14, scope: !4322)
!4325 = !DILocation(line: 1434, column: 8, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4322, file: !3281, line: 1434, column: 8)
!4327 = !DILocation(line: 1434, column: 12, scope: !4326)
!4328 = !DILocation(line: 1434, column: 8, scope: !4322)
!4329 = !DILocation(line: 1435, column: 5, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4326, file: !3281, line: 1434, column: 17)
!4331 = !DILocation(line: 1435, column: 11, scope: !4330)
!4332 = !DILocation(line: 1435, column: 24, scope: !4330)
!4333 = !DILocation(line: 1436, column: 4, scope: !4330)
!4334 = !DILocation(line: 1437, column: 17, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4326, file: !3281, line: 1436, column: 11)
!4336 = !DILocation(line: 1437, column: 15, scope: !4335)
!4337 = !DILocation(line: 1439, column: 3, scope: !4322)
!4338 = !DILocation(line: 1439, column: 14, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4318, file: !3281, line: 1439, column: 14)
!4340 = !DILocation(line: 1439, column: 20, scope: !4339)
!4341 = !DILocation(line: 1439, column: 14, scope: !4318)
!4342 = !DILocation(line: 1440, column: 16, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4339, file: !3281, line: 1439, column: 34)
!4344 = !DILocation(line: 1440, column: 22, scope: !4343)
!4345 = !DILocation(line: 1440, column: 14, scope: !4343)
!4346 = !DILocation(line: 1441, column: 3, scope: !4343)
!4347 = !DILocation(line: 1448, column: 3, scope: !4197)
!4348 = !DILocation(line: 1448, column: 9, scope: !4197)
!4349 = !DILocation(line: 1448, column: 20, scope: !4197)
!4350 = !DILocation(line: 1449, column: 3, scope: !4197)
!4351 = !DILocation(line: 1449, column: 9, scope: !4197)
!4352 = !DILocation(line: 1449, column: 22, scope: !4197)
!4353 = !DILocalVariable(name: "specifier_cat", scope: !4197, file: !3281, line: 1468, type: !3280)
!4354 = !DILocation(line: 1468, column: 27, scope: !4197)
!4355 = !DILocation(line: 1469, column: 31, scope: !4197)
!4356 = !DILocation(line: 1469, column: 37, scope: !4197)
!4357 = !DILocalVariable(name: "length_mod", scope: !4197, file: !3281, line: 1470, type: !3288)
!4358 = !DILocation(line: 1470, column: 24, scope: !4197)
!4359 = !DILocation(line: 1471, column: 28, scope: !4197)
!4360 = !DILocation(line: 1471, column: 34, scope: !4197)
!4361 = !DILocation(line: 1478, column: 7, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1478, column: 7)
!4363 = !DILocation(line: 1478, column: 21, scope: !4362)
!4364 = !DILocation(line: 1478, column: 7, scope: !4197)
!4365 = !DILocation(line: 1479, column: 12, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4362, file: !3281, line: 1478, column: 40)
!4367 = !DILocation(line: 1479, column: 4, scope: !4366)
!4368 = !DILocation(line: 1479, column: 24, scope: !4366)
!4369 = !DILocation(line: 1484, column: 19, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4366, file: !3281, line: 1479, column: 24)
!4371 = !DILocation(line: 1484, column: 5, scope: !4370)
!4372 = !DILocation(line: 1484, column: 12, scope: !4370)
!4373 = !DILocation(line: 1484, column: 17, scope: !4370)
!4374 = !DILocation(line: 1485, column: 5, scope: !4370)
!4375 = !DILocation(line: 1492, column: 20, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4377, file: !3281, line: 1491, column: 12)
!4377 = distinct !DILexicalBlock(scope: !4370, file: !3281, line: 1487, column: 9)
!4378 = !DILocation(line: 1492, column: 6, scope: !4376)
!4379 = !DILocation(line: 1492, column: 13, scope: !4376)
!4380 = !DILocation(line: 1492, column: 18, scope: !4376)
!4381 = !DILocation(line: 1494, column: 5, scope: !4370)
!4382 = !DILocation(line: 1497, column: 23, scope: !4370)
!4383 = !DILocation(line: 1496, column: 5, scope: !4370)
!4384 = !DILocation(line: 1496, column: 12, scope: !4370)
!4385 = !DILocation(line: 1496, column: 17, scope: !4370)
!4386 = !DILocation(line: 1498, column: 5, scope: !4370)
!4387 = !DILocation(line: 1501, column: 23, scope: !4370)
!4388 = !DILocation(line: 1500, column: 5, scope: !4370)
!4389 = !DILocation(line: 1500, column: 12, scope: !4370)
!4390 = !DILocation(line: 1500, column: 17, scope: !4370)
!4391 = !DILocation(line: 1502, column: 5, scope: !4370)
!4392 = !DILocation(line: 1513, column: 23, scope: !4370)
!4393 = !DILocation(line: 1513, column: 6, scope: !4370)
!4394 = !DILocation(line: 1512, column: 5, scope: !4370)
!4395 = !DILocation(line: 1512, column: 12, scope: !4370)
!4396 = !DILocation(line: 1512, column: 17, scope: !4370)
!4397 = !DILocation(line: 1514, column: 5, scope: !4370)
!4398 = !DILocation(line: 1516, column: 8, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4366, file: !3281, line: 1516, column: 8)
!4400 = !DILocation(line: 1516, column: 19, scope: !4399)
!4401 = !DILocation(line: 1516, column: 8, scope: !4366)
!4402 = !DILocation(line: 1517, column: 32, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4399, file: !3281, line: 1516, column: 33)
!4404 = !DILocation(line: 1517, column: 39, scope: !4403)
!4405 = !DILocation(line: 1517, column: 19, scope: !4403)
!4406 = !DILocation(line: 1517, column: 5, scope: !4403)
!4407 = !DILocation(line: 1517, column: 12, scope: !4403)
!4408 = !DILocation(line: 1517, column: 17, scope: !4403)
!4409 = !DILocation(line: 1518, column: 4, scope: !4403)
!4410 = !DILocation(line: 1518, column: 15, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4399, file: !3281, line: 1518, column: 15)
!4412 = !DILocation(line: 1518, column: 26, scope: !4411)
!4413 = !DILocation(line: 1518, column: 15, scope: !4399)
!4414 = !DILocation(line: 1519, column: 26, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4411, file: !3281, line: 1518, column: 39)
!4416 = !DILocation(line: 1519, column: 33, scope: !4415)
!4417 = !DILocation(line: 1519, column: 19, scope: !4415)
!4418 = !DILocation(line: 1519, column: 5, scope: !4415)
!4419 = !DILocation(line: 1519, column: 12, scope: !4415)
!4420 = !DILocation(line: 1519, column: 17, scope: !4415)
!4421 = !DILocation(line: 1520, column: 4, scope: !4415)
!4422 = !DILocation(line: 1521, column: 3, scope: !4366)
!4423 = !DILocation(line: 1521, column: 14, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4362, file: !3281, line: 1521, column: 14)
!4425 = !DILocation(line: 1521, column: 28, scope: !4424)
!4426 = !DILocation(line: 1521, column: 14, scope: !4362)
!4427 = !DILocation(line: 1522, column: 12, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4424, file: !3281, line: 1521, column: 47)
!4429 = !DILocation(line: 1522, column: 4, scope: !4428)
!4430 = !DILocation(line: 1522, column: 24, scope: !4428)
!4431 = !DILocation(line: 1527, column: 19, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4428, file: !3281, line: 1522, column: 24)
!4433 = !DILocation(line: 1527, column: 5, scope: !4432)
!4434 = !DILocation(line: 1527, column: 12, scope: !4432)
!4435 = !DILocation(line: 1527, column: 17, scope: !4432)
!4436 = !DILocation(line: 1528, column: 5, scope: !4432)
!4437 = !DILocation(line: 1531, column: 13, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4432, file: !3281, line: 1530, column: 9)
!4439 = !DILocation(line: 1531, column: 19, scope: !4438)
!4440 = !DILocation(line: 1531, column: 29, scope: !4438)
!4441 = !DILocation(line: 1530, column: 9, scope: !4432)
!4442 = !DILocation(line: 1532, column: 29, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4438, file: !3281, line: 1531, column: 38)
!4444 = !DILocation(line: 1532, column: 20, scope: !4443)
!4445 = !DILocation(line: 1532, column: 6, scope: !4443)
!4446 = !DILocation(line: 1532, column: 13, scope: !4443)
!4447 = !DILocation(line: 1532, column: 18, scope: !4443)
!4448 = !DILocation(line: 1534, column: 5, scope: !4443)
!4449 = !DILocation(line: 1535, column: 20, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4438, file: !3281, line: 1534, column: 12)
!4451 = !DILocation(line: 1535, column: 6, scope: !4450)
!4452 = !DILocation(line: 1535, column: 13, scope: !4450)
!4453 = !DILocation(line: 1535, column: 18, scope: !4450)
!4454 = !DILocation(line: 1537, column: 5, scope: !4432)
!4455 = !DILocation(line: 1540, column: 23, scope: !4432)
!4456 = !DILocation(line: 1539, column: 5, scope: !4432)
!4457 = !DILocation(line: 1539, column: 12, scope: !4432)
!4458 = !DILocation(line: 1539, column: 17, scope: !4432)
!4459 = !DILocation(line: 1542, column: 5, scope: !4432)
!4460 = !DILocation(line: 1545, column: 23, scope: !4432)
!4461 = !DILocation(line: 1544, column: 5, scope: !4432)
!4462 = !DILocation(line: 1544, column: 12, scope: !4432)
!4463 = !DILocation(line: 1544, column: 17, scope: !4432)
!4464 = !DILocation(line: 1547, column: 5, scope: !4432)
!4465 = !DILocation(line: 1551, column: 23, scope: !4432)
!4466 = !DILocation(line: 1551, column: 6, scope: !4432)
!4467 = !DILocation(line: 1550, column: 5, scope: !4432)
!4468 = !DILocation(line: 1550, column: 12, scope: !4432)
!4469 = !DILocation(line: 1550, column: 17, scope: !4432)
!4470 = !DILocation(line: 1552, column: 5, scope: !4432)
!4471 = !DILocation(line: 1554, column: 8, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4428, file: !3281, line: 1554, column: 8)
!4473 = !DILocation(line: 1554, column: 19, scope: !4472)
!4474 = !DILocation(line: 1554, column: 8, scope: !4428)
!4475 = !DILocation(line: 1555, column: 34, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4472, file: !3281, line: 1554, column: 33)
!4477 = !DILocation(line: 1555, column: 41, scope: !4476)
!4478 = !DILocation(line: 1555, column: 19, scope: !4476)
!4479 = !DILocation(line: 1555, column: 5, scope: !4476)
!4480 = !DILocation(line: 1555, column: 12, scope: !4476)
!4481 = !DILocation(line: 1555, column: 17, scope: !4476)
!4482 = !DILocation(line: 1556, column: 4, scope: !4476)
!4483 = !DILocation(line: 1556, column: 15, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4472, file: !3281, line: 1556, column: 15)
!4485 = !DILocation(line: 1556, column: 26, scope: !4484)
!4486 = !DILocation(line: 1556, column: 15, scope: !4472)
!4487 = !DILocation(line: 1557, column: 35, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4484, file: !3281, line: 1556, column: 39)
!4489 = !DILocation(line: 1557, column: 42, scope: !4488)
!4490 = !DILocation(line: 1557, column: 19, scope: !4488)
!4491 = !DILocation(line: 1557, column: 5, scope: !4488)
!4492 = !DILocation(line: 1557, column: 12, scope: !4488)
!4493 = !DILocation(line: 1557, column: 17, scope: !4488)
!4494 = !DILocation(line: 1558, column: 4, scope: !4488)
!4495 = !DILocation(line: 1559, column: 3, scope: !4428)
!4496 = !DILocation(line: 1559, column: 14, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4424, file: !3281, line: 1559, column: 14)
!4498 = !DILocation(line: 1559, column: 28, scope: !4497)
!4499 = !DILocation(line: 1559, column: 14, scope: !4424)
!4500 = !DILocation(line: 1560, column: 8, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4502, file: !3281, line: 1560, column: 8)
!4502 = distinct !DILexicalBlock(scope: !4497, file: !3281, line: 1559, column: 45)
!4503 = !DILocation(line: 1560, column: 19, scope: !4501)
!4504 = !DILocation(line: 1560, column: 8, scope: !4502)
!4505 = !DILocation(line: 1561, column: 19, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4501, file: !3281, line: 1560, column: 38)
!4507 = !DILocation(line: 1561, column: 5, scope: !4506)
!4508 = !DILocation(line: 1561, column: 12, scope: !4506)
!4509 = !DILocation(line: 1561, column: 17, scope: !4506)
!4510 = !DILocation(line: 1562, column: 4, scope: !4506)
!4511 = !DILocation(line: 1563, column: 18, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4501, file: !3281, line: 1562, column: 11)
!4513 = !DILocation(line: 1563, column: 5, scope: !4512)
!4514 = !DILocation(line: 1563, column: 12, scope: !4512)
!4515 = !DILocation(line: 1563, column: 16, scope: !4512)
!4516 = !DILocation(line: 1565, column: 3, scope: !4502)
!4517 = !DILocation(line: 1565, column: 14, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4497, file: !3281, line: 1565, column: 14)
!4519 = !DILocation(line: 1565, column: 28, scope: !4518)
!4520 = !DILocation(line: 1565, column: 14, scope: !4497)
!4521 = !DILocation(line: 1566, column: 17, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4518, file: !3281, line: 1565, column: 46)
!4523 = !DILocation(line: 1566, column: 4, scope: !4522)
!4524 = !DILocation(line: 1566, column: 11, scope: !4522)
!4525 = !DILocation(line: 1566, column: 15, scope: !4522)
!4526 = !DILocation(line: 1567, column: 3, scope: !4522)
!4527 = !DILocation(line: 1574, column: 7, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1574, column: 7)
!4529 = !DILocation(line: 1574, column: 13, scope: !4528)
!4530 = !DILocation(line: 1574, column: 21, scope: !4528)
!4531 = !DILocation(line: 1574, column: 24, scope: !4528)
!4532 = !DILocation(line: 1574, column: 30, scope: !4528)
!4533 = !DILocation(line: 1574, column: 7, scope: !4197)
!4534 = !DILocation(line: 1575, column: 4, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4528, file: !3281, line: 1574, column: 43)
!4536 = !DILocalVariable(name: "rc", scope: !4537, file: !3281, line: 1575, type: !103)
!4537 = distinct !DILexicalBlock(scope: !4535, file: !3281, line: 1575, column: 4)
!4538 = !DILocation(line: 1575, column: 4, scope: !4537)
!4539 = !DILocation(line: 1575, column: 4, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4537, file: !3281, line: 1575, column: 4)
!4541 = !DILocation(line: 1575, column: 4, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4540, file: !3281, line: 1575, column: 4)
!4543 = !DILocation(line: 1576, column: 4, scope: !4535)
!4544 = !DILocation(line: 1582, column: 11, scope: !4197)
!4545 = !DILocation(line: 1582, column: 17, scope: !4197)
!4546 = !DILocation(line: 1582, column: 3, scope: !4197)
!4547 = !DILocation(line: 1584, column: 4, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1582, column: 28)
!4549 = !DILocalVariable(name: "rc", scope: !4550, file: !3281, line: 1584, type: !103)
!4550 = distinct !DILexicalBlock(scope: !4548, file: !3281, line: 1584, column: 4)
!4551 = !DILocation(line: 1584, column: 4, scope: !4550)
!4552 = !DILocation(line: 1584, column: 4, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4550, file: !3281, line: 1584, column: 4)
!4554 = !DILocation(line: 1584, column: 4, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4553, file: !3281, line: 1584, column: 4)
!4556 = !DILocation(line: 1585, column: 4, scope: !4548)
!4557 = !DILocation(line: 1587, column: 24, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4548, file: !3281, line: 1586, column: 13)
!4559 = !DILocation(line: 1587, column: 31, scope: !4558)
!4560 = !DILocation(line: 1587, column: 8, scope: !4558)
!4561 = !DILocalVariable(name: "len", scope: !4558, file: !3281, line: 1589, type: !217)
!4562 = !DILocation(line: 1589, column: 11, scope: !4558)
!4563 = !DILocation(line: 1591, column: 8, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4558, file: !3281, line: 1591, column: 8)
!4565 = !DILocation(line: 1591, column: 18, scope: !4564)
!4566 = !DILocation(line: 1591, column: 8, scope: !4558)
!4567 = !DILocation(line: 1592, column: 19, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4564, file: !3281, line: 1591, column: 24)
!4569 = !DILocation(line: 1592, column: 24, scope: !4568)
!4570 = !DILocation(line: 1592, column: 11, scope: !4568)
!4571 = !DILocation(line: 1592, column: 9, scope: !4568)
!4572 = !DILocation(line: 1593, column: 4, scope: !4568)
!4573 = !DILocation(line: 1594, column: 18, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4564, file: !3281, line: 1593, column: 11)
!4575 = !DILocation(line: 1594, column: 11, scope: !4574)
!4576 = !DILocation(line: 1594, column: 9, scope: !4574)
!4577 = !DILocation(line: 1597, column: 10, scope: !4558)
!4578 = !DILocation(line: 1597, column: 16, scope: !4558)
!4579 = !DILocation(line: 1597, column: 14, scope: !4558)
!4580 = !DILocation(line: 1597, column: 8, scope: !4558)
!4581 = !DILocation(line: 1598, column: 14, scope: !4558)
!4582 = !DILocation(line: 1600, column: 4, scope: !4558)
!4583 = !DILocation(line: 1603, column: 10, scope: !4548)
!4584 = !DILocation(line: 1603, column: 8, scope: !4548)
!4585 = !DILocation(line: 1604, column: 44, scope: !4548)
!4586 = !DILocation(line: 1604, column: 51, scope: !4548)
!4587 = !DILocation(line: 1604, column: 13, scope: !4548)
!4588 = !DILocation(line: 1604, column: 4, scope: !4548)
!4589 = !DILocation(line: 1604, column: 11, scope: !4548)
!4590 = !DILocation(line: 1605, column: 10, scope: !4548)
!4591 = !DILocation(line: 1605, column: 14, scope: !4548)
!4592 = !DILocation(line: 1605, column: 8, scope: !4548)
!4593 = !DILocation(line: 1606, column: 4, scope: !4548)
!4594 = !DILocation(line: 1609, column: 8, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4548, file: !3281, line: 1609, column: 8)
!4596 = !DILocation(line: 1609, column: 14, scope: !4595)
!4597 = !DILocation(line: 1609, column: 8, scope: !4548)
!4598 = !DILocation(line: 1610, column: 10, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4595, file: !3281, line: 1609, column: 25)
!4600 = !DILocation(line: 1611, column: 4, scope: !4599)
!4601 = !DILocation(line: 1611, column: 15, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4595, file: !3281, line: 1611, column: 15)
!4603 = !DILocation(line: 1611, column: 21, scope: !4602)
!4604 = !DILocation(line: 1611, column: 15, scope: !4595)
!4605 = !DILocation(line: 1612, column: 10, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4602, file: !3281, line: 1611, column: 33)
!4607 = !DILocation(line: 1613, column: 4, scope: !4606)
!4608 = !DILocation(line: 1619, column: 11, scope: !4548)
!4609 = !DILocation(line: 1619, column: 18, scope: !4548)
!4610 = !DILocation(line: 1619, column: 9, scope: !4548)
!4611 = !DILocation(line: 1620, column: 8, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4548, file: !3281, line: 1620, column: 8)
!4613 = !DILocation(line: 1620, column: 13, scope: !4612)
!4614 = !DILocation(line: 1620, column: 8, scope: !4548)
!4615 = !DILocation(line: 1621, column: 10, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4612, file: !3281, line: 1620, column: 18)
!4617 = !DILocation(line: 1622, column: 37, scope: !4616)
!4618 = !DILocation(line: 1622, column: 36, scope: !4616)
!4619 = !DILocation(line: 1622, column: 5, scope: !4616)
!4620 = !DILocation(line: 1622, column: 12, scope: !4616)
!4621 = !DILocation(line: 1622, column: 17, scope: !4616)
!4622 = !DILocation(line: 1623, column: 4, scope: !4616)
!4623 = !DILocation(line: 1624, column: 36, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4612, file: !3281, line: 1623, column: 11)
!4625 = !DILocation(line: 1624, column: 5, scope: !4624)
!4626 = !DILocation(line: 1624, column: 12, scope: !4624)
!4627 = !DILocation(line: 1624, column: 17, scope: !4624)
!4628 = !DILocation(line: 1620, column: 15, scope: !4612)
!4629 = !DILocation(line: 1632, column: 22, scope: !4548)
!4630 = !DILocation(line: 1632, column: 29, scope: !4548)
!4631 = !DILocation(line: 1632, column: 35, scope: !4548)
!4632 = !DILocation(line: 1632, column: 41, scope: !4548)
!4633 = !DILocation(line: 1632, column: 46, scope: !4548)
!4634 = !DILocation(line: 1632, column: 10, scope: !4548)
!4635 = !DILocation(line: 1632, column: 8, scope: !4548)
!4636 = !DILocation(line: 1632, column: 4, scope: !4548)
!4637 = !DILabel(scope: !4548, name: "prec_int_pad0", file: !3281, line: 1634)
!4638 = !DILocation(line: 1634, column: 3, scope: !4548)
!4639 = !DILocation(line: 1640, column: 8, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4548, file: !3281, line: 1640, column: 8)
!4641 = !DILocation(line: 1640, column: 18, scope: !4640)
!4642 = !DILocation(line: 1640, column: 8, scope: !4548)
!4643 = !DILocalVariable(name: "len", scope: !4644, file: !3281, line: 1641, type: !217)
!4644 = distinct !DILexicalBlock(scope: !4640, file: !3281, line: 1640, column: 24)
!4645 = !DILocation(line: 1641, column: 12, scope: !4644)
!4646 = !DILocation(line: 1641, column: 18, scope: !4644)
!4647 = !DILocation(line: 1641, column: 24, scope: !4644)
!4648 = !DILocation(line: 1641, column: 22, scope: !4644)
!4649 = !DILocation(line: 1646, column: 5, scope: !4644)
!4650 = !DILocation(line: 1646, column: 11, scope: !4644)
!4651 = !DILocation(line: 1646, column: 21, scope: !4644)
!4652 = !DILocation(line: 1649, column: 9, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4644, file: !3281, line: 1649, column: 9)
!4654 = !DILocation(line: 1649, column: 23, scope: !4653)
!4655 = !DILocation(line: 1649, column: 13, scope: !4653)
!4656 = !DILocation(line: 1649, column: 9, scope: !4644)
!4657 = !DILocation(line: 1650, column: 25, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4653, file: !3281, line: 1649, column: 34)
!4659 = !DILocation(line: 1650, column: 42, scope: !4658)
!4660 = !DILocation(line: 1650, column: 35, scope: !4658)
!4661 = !DILocation(line: 1650, column: 6, scope: !4658)
!4662 = !DILocation(line: 1650, column: 12, scope: !4658)
!4663 = !DILocation(line: 1650, column: 23, scope: !4658)
!4664 = !DILocation(line: 1651, column: 5, scope: !4658)
!4665 = !DILocation(line: 1652, column: 4, scope: !4644)
!4666 = !DILocation(line: 1654, column: 4, scope: !4548)
!4667 = !DILocation(line: 1660, column: 8, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4548, file: !3281, line: 1660, column: 8)
!4669 = !DILocation(line: 1660, column: 15, scope: !4668)
!4670 = !DILocation(line: 1660, column: 19, scope: !4668)
!4671 = !DILocation(line: 1660, column: 8, scope: !4548)
!4672 = !DILocation(line: 1661, column: 34, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4668, file: !3281, line: 1660, column: 28)
!4674 = !DILocation(line: 1661, column: 41, scope: !4673)
!4675 = !DILocation(line: 1661, column: 23, scope: !4673)
!4676 = !DILocation(line: 1661, column: 46, scope: !4673)
!4677 = !DILocation(line: 1662, column: 9, scope: !4673)
!4678 = !DILocation(line: 1662, column: 14, scope: !4673)
!4679 = !DILocation(line: 1661, column: 11, scope: !4673)
!4680 = !DILocation(line: 1661, column: 9, scope: !4673)
!4681 = !DILocation(line: 1665, column: 5, scope: !4673)
!4682 = !DILocation(line: 1665, column: 11, scope: !4673)
!4683 = !DILocation(line: 1665, column: 22, scope: !4673)
!4684 = !DILocation(line: 1666, column: 5, scope: !4673)
!4685 = !DILocation(line: 1666, column: 11, scope: !4673)
!4686 = !DILocation(line: 1666, column: 21, scope: !4673)
!4687 = !DILocation(line: 1668, column: 5, scope: !4673)
!4688 = !DILocation(line: 1671, column: 8, scope: !4548)
!4689 = !DILocation(line: 1672, column: 10, scope: !4548)
!4690 = !DILocation(line: 1672, column: 14, scope: !4548)
!4691 = !DILocation(line: 1672, column: 8, scope: !4548)
!4692 = !DILocation(line: 1674, column: 4, scope: !4548)
!4693 = !DILocation(line: 1677, column: 17, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !3281, line: 1676, column: 49)
!4695 = distinct !DILexicalBlock(scope: !4548, file: !3281, line: 1676, column: 8)
!4696 = !DILocation(line: 1677, column: 23, scope: !4694)
!4697 = !DILocation(line: 1677, column: 30, scope: !4694)
!4698 = !DILocation(line: 1677, column: 35, scope: !4694)
!4699 = !DILocation(line: 1677, column: 5, scope: !4694)
!4700 = !DILocation(line: 1680, column: 4, scope: !4548)
!4701 = !DILocation(line: 1687, column: 4, scope: !4548)
!4702 = !DILocation(line: 1693, column: 4, scope: !4548)
!4703 = !DILocation(line: 1699, column: 7, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1699, column: 7)
!4705 = !DILocation(line: 1699, column: 11, scope: !4704)
!4706 = !DILocation(line: 1699, column: 7, scope: !4197)
!4707 = !DILocation(line: 1700, column: 4, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4704, file: !3281, line: 1699, column: 20)
!4709 = !DILocalVariable(name: "nj_len", scope: !4197, file: !3281, line: 1722, type: !217)
!4710 = !DILocation(line: 1722, column: 10, scope: !4197)
!4711 = !DILocation(line: 1722, column: 20, scope: !4197)
!4712 = !DILocation(line: 1722, column: 26, scope: !4197)
!4713 = !DILocation(line: 1722, column: 24, scope: !4197)
!4714 = !DILocalVariable(name: "pad_len", scope: !4197, file: !3281, line: 1723, type: !103)
!4715 = !DILocation(line: 1723, column: 7, scope: !4197)
!4716 = !DILocation(line: 1725, column: 7, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1725, column: 7)
!4718 = !DILocation(line: 1725, column: 12, scope: !4717)
!4719 = !DILocation(line: 1725, column: 7, scope: !4197)
!4720 = !DILocation(line: 1726, column: 11, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4717, file: !3281, line: 1725, column: 18)
!4722 = !DILocation(line: 1727, column: 3, scope: !4721)
!4723 = !DILocation(line: 1729, column: 7, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1729, column: 7)
!4725 = !DILocation(line: 1729, column: 13, scope: !4724)
!4726 = !DILocation(line: 1729, column: 7, scope: !4197)
!4727 = !DILocation(line: 1730, column: 11, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4724, file: !3281, line: 1729, column: 25)
!4729 = !DILocation(line: 1731, column: 3, scope: !4728)
!4730 = !DILocation(line: 1731, column: 14, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4724, file: !3281, line: 1731, column: 14)
!4732 = !DILocation(line: 1731, column: 20, scope: !4731)
!4733 = !DILocation(line: 1731, column: 14, scope: !4724)
!4734 = !DILocation(line: 1732, column: 11, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4731, file: !3281, line: 1731, column: 31)
!4736 = !DILocation(line: 1733, column: 3, scope: !4735)
!4737 = !DILocation(line: 1735, column: 13, scope: !4197)
!4738 = !DILocation(line: 1735, column: 19, scope: !4197)
!4739 = !DILocation(line: 1735, column: 10, scope: !4197)
!4740 = !DILocation(line: 1736, column: 7, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1736, column: 7)
!4742 = !DILocation(line: 1736, column: 13, scope: !4741)
!4743 = !DILocation(line: 1736, column: 7, scope: !4197)
!4744 = !DILocation(line: 1737, column: 14, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4741, file: !3281, line: 1736, column: 21)
!4746 = !DILocation(line: 1737, column: 20, scope: !4745)
!4747 = !DILocation(line: 1737, column: 11, scope: !4745)
!4748 = !DILocation(line: 1738, column: 3, scope: !4745)
!4749 = !DILocation(line: 1747, column: 7, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1747, column: 7)
!4751 = !DILocation(line: 1747, column: 13, scope: !4750)
!4752 = !DILocation(line: 1747, column: 7, scope: !4197)
!4753 = !DILocation(line: 1748, column: 18, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4750, file: !3281, line: 1747, column: 18)
!4755 = !DILocation(line: 1748, column: 10, scope: !4754)
!4756 = !DILocation(line: 1750, column: 9, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4754, file: !3281, line: 1750, column: 8)
!4758 = !DILocation(line: 1750, column: 15, scope: !4757)
!4759 = !DILocation(line: 1750, column: 8, scope: !4754)
!4760 = !DILocalVariable(name: "pad", scope: !4761, file: !3281, line: 1751, type: !237)
!4761 = distinct !DILexicalBlock(scope: !4757, file: !3281, line: 1750, column: 26)
!4762 = !DILocation(line: 1751, column: 10, scope: !4761)
!4763 = !DILocation(line: 1756, column: 9, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4761, file: !3281, line: 1756, column: 9)
!4765 = !DILocation(line: 1756, column: 15, scope: !4764)
!4766 = !DILocation(line: 1756, column: 9, scope: !4761)
!4767 = !DILocation(line: 1757, column: 10, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !3281, line: 1757, column: 10)
!4769 = distinct !DILexicalBlock(scope: !4764, file: !3281, line: 1756, column: 26)
!4770 = !DILocation(line: 1757, column: 15, scope: !4768)
!4771 = !DILocation(line: 1757, column: 10, scope: !4769)
!4772 = !DILocation(line: 1758, column: 7, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4768, file: !3281, line: 1757, column: 21)
!4774 = !DILocalVariable(name: "rc", scope: !4775, file: !3281, line: 1758, type: !103)
!4775 = distinct !DILexicalBlock(scope: !4773, file: !3281, line: 1758, column: 7)
!4776 = !DILocation(line: 1758, column: 7, scope: !4775)
!4777 = !DILocation(line: 1758, column: 7, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4775, file: !3281, line: 1758, column: 7)
!4779 = !DILocation(line: 1758, column: 7, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4778, file: !3281, line: 1758, column: 7)
!4781 = !DILocation(line: 1759, column: 12, scope: !4773)
!4782 = !DILocation(line: 1760, column: 6, scope: !4773)
!4783 = !DILocation(line: 1761, column: 10, scope: !4769)
!4784 = !DILocation(line: 1762, column: 5, scope: !4769)
!4785 = !DILocation(line: 1764, column: 5, scope: !4761)
!4786 = !DILocation(line: 1764, column: 17, scope: !4761)
!4787 = !DILocation(line: 1764, column: 20, scope: !4761)
!4788 = !DILocation(line: 1765, column: 6, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4761, file: !3281, line: 1764, column: 25)
!4790 = !DILocalVariable(name: "rc", scope: !4791, file: !3281, line: 1765, type: !103)
!4791 = distinct !DILexicalBlock(scope: !4789, file: !3281, line: 1765, column: 6)
!4792 = !DILocation(line: 1765, column: 6, scope: !4791)
!4793 = !DILocation(line: 1765, column: 6, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4791, file: !3281, line: 1765, column: 6)
!4795 = !DILocation(line: 1765, column: 6, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4794, file: !3281, line: 1765, column: 6)
!4797 = distinct !{!4797, !4785, !4798}
!4798 = !DILocation(line: 1766, column: 5, scope: !4761)
!4799 = !DILocation(line: 1767, column: 4, scope: !4761)
!4800 = !DILocation(line: 1768, column: 3, scope: !4754)
!4801 = !DILocation(line: 1773, column: 7, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1773, column: 7)
!4803 = !DILocation(line: 1773, column: 12, scope: !4802)
!4804 = !DILocation(line: 1773, column: 7, scope: !4197)
!4805 = !DILocation(line: 1774, column: 4, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4802, file: !3281, line: 1773, column: 18)
!4807 = !DILocalVariable(name: "rc", scope: !4808, file: !3281, line: 1774, type: !103)
!4808 = distinct !DILexicalBlock(scope: !4806, file: !3281, line: 1774, column: 4)
!4809 = !DILocation(line: 1774, column: 4, scope: !4808)
!4810 = !DILocation(line: 1774, column: 4, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4808, file: !3281, line: 1774, column: 4)
!4812 = !DILocation(line: 1774, column: 4, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4811, file: !3281, line: 1774, column: 4)
!4814 = !DILocation(line: 1775, column: 3, scope: !4806)
!4815 = !DILocation(line: 1818, column: 8, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4817, file: !3281, line: 1818, column: 8)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !3281, line: 1817, column: 10)
!4818 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1777, column: 7)
!4819 = !DILocation(line: 1818, column: 14, scope: !4816)
!4820 = !DILocation(line: 1818, column: 27, scope: !4816)
!4821 = !DILocation(line: 1818, column: 33, scope: !4816)
!4822 = !DILocation(line: 1818, column: 25, scope: !4816)
!4823 = !DILocation(line: 1818, column: 8, scope: !4817)
!4824 = !DILocation(line: 1819, column: 5, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4816, file: !3281, line: 1818, column: 44)
!4826 = !DILocalVariable(name: "rc", scope: !4827, file: !3281, line: 1819, type: !103)
!4827 = distinct !DILexicalBlock(scope: !4825, file: !3281, line: 1819, column: 5)
!4828 = !DILocation(line: 1819, column: 5, scope: !4827)
!4829 = !DILocation(line: 1819, column: 5, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4827, file: !3281, line: 1819, column: 5)
!4831 = !DILocation(line: 1819, column: 5, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4830, file: !3281, line: 1819, column: 5)
!4833 = !DILocation(line: 1820, column: 4, scope: !4825)
!4834 = !DILocation(line: 1822, column: 8, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4817, file: !3281, line: 1822, column: 8)
!4836 = !DILocation(line: 1822, column: 14, scope: !4835)
!4837 = !DILocation(line: 1822, column: 8, scope: !4817)
!4838 = !DILocation(line: 1823, column: 5, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4835, file: !3281, line: 1822, column: 26)
!4840 = !DILocalVariable(name: "rc", scope: !4841, file: !3281, line: 1823, type: !103)
!4841 = distinct !DILexicalBlock(scope: !4839, file: !3281, line: 1823, column: 5)
!4842 = !DILocation(line: 1823, column: 5, scope: !4841)
!4843 = !DILocation(line: 1823, column: 5, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4841, file: !3281, line: 1823, column: 5)
!4845 = !DILocation(line: 1823, column: 5, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4844, file: !3281, line: 1823, column: 5)
!4847 = !DILocation(line: 1824, column: 4, scope: !4839)
!4848 = !DILocation(line: 1826, column: 14, scope: !4817)
!4849 = !DILocation(line: 1826, column: 20, scope: !4817)
!4850 = !DILocation(line: 1826, column: 12, scope: !4817)
!4851 = !DILocation(line: 1827, column: 4, scope: !4817)
!4852 = !DILocation(line: 1827, column: 18, scope: !4817)
!4853 = !DILocation(line: 1827, column: 21, scope: !4817)
!4854 = !DILocation(line: 1828, column: 5, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4817, file: !3281, line: 1827, column: 26)
!4856 = !DILocalVariable(name: "rc", scope: !4857, file: !3281, line: 1828, type: !103)
!4857 = distinct !DILexicalBlock(scope: !4855, file: !3281, line: 1828, column: 5)
!4858 = !DILocation(line: 1828, column: 5, scope: !4857)
!4859 = !DILocation(line: 1828, column: 5, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4857, file: !3281, line: 1828, column: 5)
!4861 = !DILocation(line: 1828, column: 5, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4860, file: !3281, line: 1828, column: 5)
!4863 = distinct !{!4863, !4851, !4864}
!4864 = !DILocation(line: 1829, column: 4, scope: !4817)
!4865 = !DILocation(line: 1831, column: 4, scope: !4817)
!4866 = !DILocalVariable(name: "rc", scope: !4867, file: !3281, line: 1831, type: !103)
!4867 = distinct !DILexicalBlock(scope: !4817, file: !3281, line: 1831, column: 4)
!4868 = !DILocation(line: 1831, column: 4, scope: !4867)
!4869 = !DILocation(line: 1831, column: 4, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4867, file: !3281, line: 1831, column: 4)
!4871 = !DILocation(line: 1831, column: 4, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4870, file: !3281, line: 1831, column: 4)
!4873 = !DILocation(line: 1835, column: 3, scope: !4197)
!4874 = !DILocation(line: 1835, column: 10, scope: !4197)
!4875 = !DILocation(line: 1835, column: 16, scope: !4197)
!4876 = !DILocation(line: 1836, column: 4, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4197, file: !3281, line: 1835, column: 21)
!4878 = !DILocalVariable(name: "rc", scope: !4879, file: !3281, line: 1836, type: !103)
!4879 = distinct !DILexicalBlock(scope: !4877, file: !3281, line: 1836, column: 4)
!4880 = !DILocation(line: 1836, column: 4, scope: !4879)
!4881 = !DILocation(line: 1836, column: 4, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4879, file: !3281, line: 1836, column: 4)
!4883 = !DILocation(line: 1836, column: 4, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4882, file: !3281, line: 1836, column: 4)
!4885 = !DILocation(line: 1837, column: 4, scope: !4877)
!4886 = distinct !{!4886, !4873, !4887}
!4887 = !DILocation(line: 1838, column: 3, scope: !4197)
!4888 = !DILocation(line: 1841, column: 9, scope: !4157)
!4889 = !DILocation(line: 1841, column: 2, scope: !4157)
!4890 = !DILocation(line: 1844, column: 1, scope: !4157)
!4891 = distinct !DISubprogram(name: "extract_conversion", scope: !3281, file: !3281, line: 642, type: !4892, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!4892 = !DISubroutineType(types: !4893)
!4893 = !{!256, !4261, !256}
!4894 = !DILocalVariable(name: "conv", arg: 1, scope: !4891, file: !3281, line: 642, type: !4261)
!4895 = !DILocation(line: 642, column: 65, scope: !4891)
!4896 = !DILocalVariable(name: "sp", arg: 2, scope: !4891, file: !3281, line: 643, type: !256)
!4897 = !DILocation(line: 643, column: 23, scope: !4891)
!4898 = !DILocation(line: 645, column: 3, scope: !4891)
!4899 = !DILocation(line: 645, column: 30, scope: !4891)
!4900 = !DILocation(line: 645, column: 10, scope: !4891)
!4901 = !DILocation(line: 653, column: 2, scope: !4891)
!4902 = !DILocation(line: 654, column: 7, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4891, file: !3281, line: 654, column: 6)
!4904 = !DILocation(line: 654, column: 6, scope: !4903)
!4905 = !DILocation(line: 654, column: 10, scope: !4903)
!4906 = !DILocation(line: 654, column: 6, scope: !4891)
!4907 = !DILocation(line: 655, column: 24, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4903, file: !3281, line: 654, column: 18)
!4909 = !DILocation(line: 655, column: 21, scope: !4908)
!4910 = !DILocation(line: 655, column: 3, scope: !4908)
!4911 = !DILocation(line: 655, column: 9, scope: !4908)
!4912 = !DILocation(line: 655, column: 19, scope: !4908)
!4913 = !DILocation(line: 656, column: 10, scope: !4908)
!4914 = !DILocation(line: 656, column: 3, scope: !4908)
!4915 = !DILocation(line: 659, column: 21, scope: !4891)
!4916 = !DILocation(line: 659, column: 27, scope: !4891)
!4917 = !DILocation(line: 659, column: 7, scope: !4891)
!4918 = !DILocation(line: 659, column: 5, scope: !4891)
!4919 = !DILocation(line: 660, column: 21, scope: !4891)
!4920 = !DILocation(line: 660, column: 27, scope: !4891)
!4921 = !DILocation(line: 660, column: 7, scope: !4891)
!4922 = !DILocation(line: 660, column: 5, scope: !4891)
!4923 = !DILocation(line: 661, column: 20, scope: !4891)
!4924 = !DILocation(line: 661, column: 26, scope: !4891)
!4925 = !DILocation(line: 661, column: 7, scope: !4891)
!4926 = !DILocation(line: 661, column: 5, scope: !4891)
!4927 = !DILocation(line: 662, column: 22, scope: !4891)
!4928 = !DILocation(line: 662, column: 28, scope: !4891)
!4929 = !DILocation(line: 662, column: 7, scope: !4891)
!4930 = !DILocation(line: 662, column: 5, scope: !4891)
!4931 = !DILocation(line: 663, column: 25, scope: !4891)
!4932 = !DILocation(line: 663, column: 31, scope: !4891)
!4933 = !DILocation(line: 663, column: 7, scope: !4891)
!4934 = !DILocation(line: 663, column: 5, scope: !4891)
!4935 = !DILocation(line: 665, column: 9, scope: !4891)
!4936 = !DILocation(line: 665, column: 2, scope: !4891)
!4937 = !DILocation(line: 666, column: 1, scope: !4891)
!4938 = distinct !DISubprogram(name: "outs", scope: !3281, file: !3281, line: 1319, type: !4939, scopeLine: 1323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!4939 = !DISubroutineType(types: !4940)
!4940 = !{!103, !3816, !102, !256, !256}
!4941 = !DILocalVariable(name: "out", arg: 1, scope: !4938, file: !3281, line: 1319, type: !3816)
!4942 = !DILocation(line: 1319, column: 29, scope: !4938)
!4943 = !DILocalVariable(name: "ctx", arg: 2, scope: !4938, file: !3281, line: 1320, type: !102)
!4944 = !DILocation(line: 1320, column: 9, scope: !4938)
!4945 = !DILocalVariable(name: "sp", arg: 3, scope: !4938, file: !3281, line: 1321, type: !256)
!4946 = !DILocation(line: 1321, column: 15, scope: !4938)
!4947 = !DILocalVariable(name: "ep", arg: 4, scope: !4938, file: !3281, line: 1322, type: !256)
!4948 = !DILocation(line: 1322, column: 15, scope: !4938)
!4949 = !DILocalVariable(name: "count", scope: !4938, file: !3281, line: 1324, type: !217)
!4950 = !DILocation(line: 1324, column: 9, scope: !4938)
!4951 = !DILocation(line: 1326, column: 2, scope: !4938)
!4952 = !DILocation(line: 1326, column: 10, scope: !4938)
!4953 = !DILocation(line: 1326, column: 15, scope: !4938)
!4954 = !DILocation(line: 1326, column: 13, scope: !4938)
!4955 = !DILocation(line: 1326, column: 19, scope: !4938)
!4956 = !DILocation(line: 1326, column: 24, scope: !4938)
!4957 = !DILocation(line: 1326, column: 27, scope: !4938)
!4958 = !DILocation(line: 1326, column: 36, scope: !4938)
!4959 = !DILocation(line: 1326, column: 40, scope: !4938)
!4960 = !DILocation(line: 1326, column: 39, scope: !4938)
!4961 = !DILocation(line: 0, scope: !4938)
!4962 = !DILocalVariable(name: "rc", scope: !4963, file: !3281, line: 1327, type: !103)
!4963 = distinct !DILexicalBlock(scope: !4938, file: !3281, line: 1326, column: 45)
!4964 = !DILocation(line: 1327, column: 7, scope: !4963)
!4965 = !DILocation(line: 1327, column: 12, scope: !4963)
!4966 = !DILocation(line: 1327, column: 24, scope: !4963)
!4967 = !DILocation(line: 1327, column: 21, scope: !4963)
!4968 = !DILocation(line: 1327, column: 16, scope: !4963)
!4969 = !DILocation(line: 1327, column: 28, scope: !4963)
!4970 = !DILocation(line: 1329, column: 7, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4963, file: !3281, line: 1329, column: 7)
!4972 = !DILocation(line: 1329, column: 10, scope: !4971)
!4973 = !DILocation(line: 1329, column: 7, scope: !4963)
!4974 = !DILocation(line: 1330, column: 11, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4971, file: !3281, line: 1329, column: 15)
!4976 = !DILocation(line: 1330, column: 4, scope: !4975)
!4977 = !DILocation(line: 1332, column: 3, scope: !4963)
!4978 = distinct !{!4978, !4951, !4979}
!4979 = !DILocation(line: 1333, column: 2, scope: !4938)
!4980 = !DILocation(line: 1335, column: 14, scope: !4938)
!4981 = !DILocation(line: 1335, column: 2, scope: !4938)
!4982 = !DILocation(line: 1336, column: 1, scope: !4938)
!4983 = distinct !DISubprogram(name: "encode_uint", scope: !3281, file: !3281, line: 788, type: !4984, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{!2822, !3303, !4261, !2822, !256}
!4986 = !DILocalVariable(name: "value", arg: 1, scope: !4983, file: !3281, line: 788, type: !3303)
!4987 = !DILocation(line: 788, column: 42, scope: !4983)
!4988 = !DILocalVariable(name: "conv", arg: 2, scope: !4983, file: !3281, line: 789, type: !4261)
!4989 = !DILocation(line: 789, column: 24, scope: !4983)
!4990 = !DILocalVariable(name: "bps", arg: 3, scope: !4983, file: !3281, line: 790, type: !2822)
!4991 = !DILocation(line: 790, column: 11, scope: !4983)
!4992 = !DILocalVariable(name: "bpe", arg: 4, scope: !4983, file: !3281, line: 791, type: !256)
!4993 = !DILocation(line: 791, column: 17, scope: !4983)
!4994 = !DILocalVariable(name: "upcase", scope: !4983, file: !3281, line: 793, type: !1035)
!4995 = !DILocation(line: 793, column: 7, scope: !4983)
!4996 = !DILocation(line: 793, column: 29, scope: !4983)
!4997 = !DILocation(line: 793, column: 35, scope: !4983)
!4998 = !DILocation(line: 793, column: 24, scope: !4983)
!4999 = !DILocation(line: 793, column: 16, scope: !4983)
!5000 = !DILocalVariable(name: "radix", scope: !4983, file: !3281, line: 794, type: !5001)
!5001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5002 = !DILocation(line: 794, column: 21, scope: !4983)
!5003 = !DILocation(line: 794, column: 46, scope: !4983)
!5004 = !DILocation(line: 794, column: 52, scope: !4983)
!5005 = !DILocation(line: 794, column: 29, scope: !4983)
!5006 = !DILocalVariable(name: "bp", scope: !4983, file: !3281, line: 795, type: !2822)
!5007 = !DILocation(line: 795, column: 8, scope: !4983)
!5008 = !DILocation(line: 795, column: 13, scope: !4983)
!5009 = !DILocation(line: 795, column: 20, scope: !4983)
!5010 = !DILocation(line: 795, column: 26, scope: !4983)
!5011 = !DILocation(line: 795, column: 24, scope: !4983)
!5012 = !DILocation(line: 795, column: 17, scope: !4983)
!5013 = !DILocation(line: 797, column: 2, scope: !4983)
!5014 = !DILocalVariable(name: "lsv", scope: !5015, file: !3281, line: 798, type: !32)
!5015 = distinct !DILexicalBlock(scope: !4983, file: !3281, line: 797, column: 5)
!5016 = !DILocation(line: 798, column: 16, scope: !5015)
!5017 = !DILocation(line: 798, column: 37, scope: !5015)
!5018 = !DILocation(line: 798, column: 45, scope: !5015)
!5019 = !DILocation(line: 798, column: 43, scope: !5015)
!5020 = !DILocation(line: 798, column: 22, scope: !5015)
!5021 = !DILocation(line: 800, column: 12, scope: !5015)
!5022 = !DILocation(line: 800, column: 16, scope: !5015)
!5023 = !DILocation(line: 800, column: 11, scope: !5015)
!5024 = !DILocation(line: 800, column: 31, scope: !5015)
!5025 = !DILocation(line: 800, column: 29, scope: !5015)
!5026 = !DILocation(line: 801, column: 6, scope: !5015)
!5027 = !DILocation(line: 801, column: 22, scope: !5015)
!5028 = !DILocation(line: 801, column: 20, scope: !5015)
!5029 = !DILocation(line: 801, column: 26, scope: !5015)
!5030 = !DILocation(line: 801, column: 41, scope: !5015)
!5031 = !DILocation(line: 801, column: 39, scope: !5015)
!5032 = !DILocation(line: 801, column: 45, scope: !5015)
!5033 = !DILocation(line: 800, column: 4, scope: !5015)
!5034 = !DILocation(line: 800, column: 9, scope: !5015)
!5035 = !DILocation(line: 802, column: 12, scope: !5015)
!5036 = !DILocation(line: 802, column: 9, scope: !5015)
!5037 = !DILocation(line: 803, column: 2, scope: !5015)
!5038 = !DILocation(line: 803, column: 12, scope: !4983)
!5039 = !DILocation(line: 803, column: 18, scope: !4983)
!5040 = !DILocation(line: 803, column: 24, scope: !4983)
!5041 = !DILocation(line: 803, column: 28, scope: !4983)
!5042 = !DILocation(line: 803, column: 34, scope: !4983)
!5043 = !DILocation(line: 803, column: 32, scope: !4983)
!5044 = !DILocation(line: 0, scope: !4983)
!5045 = distinct !{!5045, !5013, !5046}
!5046 = !DILocation(line: 803, column: 37, scope: !4983)
!5047 = !DILocation(line: 808, column: 6, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !4983, file: !3281, line: 808, column: 6)
!5049 = !DILocation(line: 808, column: 12, scope: !5048)
!5050 = !DILocation(line: 808, column: 6, scope: !4983)
!5051 = !DILocation(line: 809, column: 7, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5053, file: !3281, line: 809, column: 7)
!5053 = distinct !DILexicalBlock(scope: !5048, file: !3281, line: 808, column: 23)
!5054 = !DILocation(line: 809, column: 13, scope: !5052)
!5055 = !DILocation(line: 809, column: 7, scope: !5053)
!5056 = !DILocation(line: 810, column: 4, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5052, file: !3281, line: 809, column: 19)
!5058 = !DILocation(line: 810, column: 10, scope: !5057)
!5059 = !DILocation(line: 810, column: 20, scope: !5057)
!5060 = !DILocation(line: 811, column: 3, scope: !5057)
!5061 = !DILocation(line: 811, column: 14, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5052, file: !3281, line: 811, column: 14)
!5063 = !DILocation(line: 811, column: 20, scope: !5062)
!5064 = !DILocation(line: 811, column: 14, scope: !5052)
!5065 = !DILocation(line: 812, column: 4, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5062, file: !3281, line: 811, column: 27)
!5067 = !DILocation(line: 812, column: 10, scope: !5066)
!5068 = !DILocation(line: 812, column: 21, scope: !5066)
!5069 = !DILocation(line: 813, column: 3, scope: !5066)
!5070 = !DILocation(line: 816, column: 2, scope: !5053)
!5071 = !DILocation(line: 818, column: 9, scope: !4983)
!5072 = !DILocation(line: 818, column: 2, scope: !4983)
!5073 = distinct !DISubprogram(name: "store_count", scope: !3281, file: !3281, line: 1280, type: !5074, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{null, !5076, !102, !103}
!5076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5077, size: 32)
!5077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4227)
!5078 = !DILocalVariable(name: "conv", arg: 1, scope: !5073, file: !3281, line: 1280, type: !5076)
!5079 = !DILocation(line: 1280, column: 57, scope: !5073)
!5080 = !DILocalVariable(name: "dp", arg: 2, scope: !5073, file: !3281, line: 1281, type: !102)
!5081 = !DILocation(line: 1281, column: 17, scope: !5073)
!5082 = !DILocalVariable(name: "count", arg: 3, scope: !5073, file: !3281, line: 1282, type: !103)
!5083 = !DILocation(line: 1282, column: 15, scope: !5073)
!5084 = !DILocation(line: 1284, column: 32, scope: !5073)
!5085 = !DILocation(line: 1284, column: 38, scope: !5073)
!5086 = !DILocation(line: 1284, column: 2, scope: !5073)
!5087 = !DILocation(line: 1286, column: 16, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5073, file: !3281, line: 1284, column: 50)
!5089 = !DILocation(line: 1286, column: 11, scope: !5088)
!5090 = !DILocation(line: 1286, column: 4, scope: !5088)
!5091 = !DILocation(line: 1286, column: 14, scope: !5088)
!5092 = !DILocation(line: 1287, column: 3, scope: !5088)
!5093 = !DILocation(line: 1289, column: 37, scope: !5088)
!5094 = !DILocation(line: 1289, column: 24, scope: !5088)
!5095 = !DILocation(line: 1289, column: 19, scope: !5088)
!5096 = !DILocation(line: 1289, column: 22, scope: !5088)
!5097 = !DILocation(line: 1290, column: 3, scope: !5088)
!5098 = !DILocation(line: 1292, column: 25, scope: !5088)
!5099 = !DILocation(line: 1292, column: 18, scope: !5088)
!5100 = !DILocation(line: 1292, column: 13, scope: !5088)
!5101 = !DILocation(line: 1292, column: 4, scope: !5088)
!5102 = !DILocation(line: 1292, column: 16, scope: !5088)
!5103 = !DILocation(line: 1293, column: 3, scope: !5088)
!5104 = !DILocation(line: 1295, column: 23, scope: !5088)
!5105 = !DILocation(line: 1295, column: 12, scope: !5088)
!5106 = !DILocation(line: 1295, column: 4, scope: !5088)
!5107 = !DILocation(line: 1295, column: 15, scope: !5088)
!5108 = !DILocation(line: 1296, column: 3, scope: !5088)
!5109 = !DILocation(line: 1298, column: 33, scope: !5088)
!5110 = !DILocation(line: 1298, column: 22, scope: !5088)
!5111 = !DILocation(line: 1298, column: 17, scope: !5088)
!5112 = !DILocation(line: 1298, column: 4, scope: !5088)
!5113 = !DILocation(line: 1298, column: 20, scope: !5088)
!5114 = !DILocation(line: 1299, column: 3, scope: !5088)
!5115 = !DILocation(line: 1301, column: 31, scope: !5088)
!5116 = !DILocation(line: 1301, column: 21, scope: !5088)
!5117 = !DILocation(line: 1301, column: 16, scope: !5088)
!5118 = !DILocation(line: 1301, column: 4, scope: !5088)
!5119 = !DILocation(line: 1301, column: 19, scope: !5088)
!5120 = !DILocation(line: 1302, column: 3, scope: !5088)
!5121 = !DILocation(line: 1304, column: 27, scope: !5088)
!5122 = !DILocation(line: 1304, column: 14, scope: !5088)
!5123 = !DILocation(line: 1304, column: 4, scope: !5088)
!5124 = !DILocation(line: 1304, column: 17, scope: !5088)
!5125 = !DILocation(line: 1305, column: 3, scope: !5088)
!5126 = !DILocation(line: 1307, column: 33, scope: !5088)
!5127 = !DILocation(line: 1307, column: 17, scope: !5088)
!5128 = !DILocation(line: 1307, column: 4, scope: !5088)
!5129 = !DILocation(line: 1307, column: 20, scope: !5088)
!5130 = !DILocation(line: 1308, column: 3, scope: !5088)
!5131 = !DILocation(line: 1314, column: 3, scope: !5088)
!5132 = !DILocation(line: 1316, column: 1, scope: !5073)
!5133 = distinct !DISubprogram(name: "isupper", scope: !5134, file: !5134, line: 16, type: !274, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!5134 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5135 = !DILocalVariable(name: "a", arg: 1, scope: !5133, file: !5134, line: 16, type: !103)
!5136 = !DILocation(line: 16, column: 31, scope: !5133)
!5137 = !DILocation(line: 18, column: 27, scope: !5133)
!5138 = !DILocation(line: 18, column: 29, scope: !5133)
!5139 = !DILocation(line: 18, column: 45, scope: !5133)
!5140 = !DILocation(line: 18, column: 2, scope: !5133)
!5141 = distinct !DISubprogram(name: "conversion_radix", scope: !3281, file: !3281, line: 761, type: !5142, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!5142 = !DISubroutineType(types: !5143)
!5143 = !{!217, !237}
!5144 = !DILocalVariable(name: "specifier", arg: 1, scope: !5141, file: !3281, line: 761, type: !237)
!5145 = !DILocation(line: 761, column: 44, scope: !5141)
!5146 = !DILocation(line: 763, column: 10, scope: !5141)
!5147 = !DILocation(line: 763, column: 2, scope: !5141)
!5148 = !DILocation(line: 763, column: 21, scope: !5141)
!5149 = !DILocation(line: 768, column: 3, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5141, file: !3281, line: 763, column: 21)
!5151 = !DILocation(line: 770, column: 3, scope: !5150)
!5152 = !DILocation(line: 774, column: 3, scope: !5150)
!5153 = !DILocation(line: 776, column: 1, scope: !5141)
!5154 = distinct !DISubprogram(name: "extract_flags", scope: !3281, file: !3281, line: 339, type: !4892, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!5155 = !DILocalVariable(name: "conv", arg: 1, scope: !5154, file: !3281, line: 339, type: !4261)
!5156 = !DILocation(line: 339, column: 60, scope: !5154)
!5157 = !DILocalVariable(name: "sp", arg: 2, scope: !5154, file: !3281, line: 340, type: !256)
!5158 = !DILocation(line: 340, column: 18, scope: !5154)
!5159 = !DILocalVariable(name: "loop", scope: !5154, file: !3281, line: 342, type: !1035)
!5160 = !DILocation(line: 342, column: 7, scope: !5154)
!5161 = !DILocation(line: 344, column: 2, scope: !5154)
!5162 = !DILocation(line: 345, column: 12, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5154, file: !3281, line: 344, column: 5)
!5164 = !DILocation(line: 345, column: 11, scope: !5163)
!5165 = !DILocation(line: 345, column: 3, scope: !5163)
!5166 = !DILocation(line: 347, column: 4, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5163, file: !3281, line: 345, column: 16)
!5168 = !DILocation(line: 347, column: 10, scope: !5167)
!5169 = !DILocation(line: 347, column: 20, scope: !5167)
!5170 = !DILocation(line: 348, column: 4, scope: !5167)
!5171 = !DILocation(line: 350, column: 4, scope: !5167)
!5172 = !DILocation(line: 350, column: 10, scope: !5167)
!5173 = !DILocation(line: 350, column: 20, scope: !5167)
!5174 = !DILocation(line: 351, column: 4, scope: !5167)
!5175 = !DILocation(line: 353, column: 4, scope: !5167)
!5176 = !DILocation(line: 353, column: 10, scope: !5167)
!5177 = !DILocation(line: 353, column: 21, scope: !5167)
!5178 = !DILocation(line: 354, column: 4, scope: !5167)
!5179 = !DILocation(line: 356, column: 4, scope: !5167)
!5180 = !DILocation(line: 356, column: 10, scope: !5167)
!5181 = !DILocation(line: 356, column: 20, scope: !5167)
!5182 = !DILocation(line: 357, column: 4, scope: !5167)
!5183 = !DILocation(line: 359, column: 4, scope: !5167)
!5184 = !DILocation(line: 359, column: 10, scope: !5167)
!5185 = !DILocation(line: 359, column: 20, scope: !5167)
!5186 = !DILocation(line: 360, column: 4, scope: !5167)
!5187 = !DILocation(line: 362, column: 9, scope: !5167)
!5188 = !DILocation(line: 363, column: 3, scope: !5167)
!5189 = !DILocation(line: 364, column: 7, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5163, file: !3281, line: 364, column: 7)
!5191 = !DILocation(line: 364, column: 7, scope: !5163)
!5192 = !DILocation(line: 365, column: 4, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5190, file: !3281, line: 364, column: 13)
!5194 = !DILocation(line: 366, column: 3, scope: !5193)
!5195 = !DILocation(line: 367, column: 2, scope: !5163)
!5196 = !DILocation(line: 367, column: 11, scope: !5154)
!5197 = distinct !{!5197, !5161, !5198}
!5198 = !DILocation(line: 367, column: 15, scope: !5154)
!5199 = !DILocation(line: 370, column: 6, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5154, file: !3281, line: 370, column: 6)
!5201 = !DILocation(line: 370, column: 12, scope: !5200)
!5202 = !DILocation(line: 370, column: 22, scope: !5200)
!5203 = !DILocation(line: 370, column: 25, scope: !5200)
!5204 = !DILocation(line: 370, column: 31, scope: !5200)
!5205 = !DILocation(line: 370, column: 6, scope: !5154)
!5206 = !DILocation(line: 371, column: 3, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5200, file: !3281, line: 370, column: 42)
!5208 = !DILocation(line: 371, column: 9, scope: !5207)
!5209 = !DILocation(line: 371, column: 19, scope: !5207)
!5210 = !DILocation(line: 372, column: 2, scope: !5207)
!5211 = !DILocation(line: 376, column: 9, scope: !5154)
!5212 = !DILocation(line: 376, column: 2, scope: !5154)
!5213 = distinct !DISubprogram(name: "extract_width", scope: !3281, file: !3281, line: 388, type: !4892, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!5214 = !DILocalVariable(name: "conv", arg: 1, scope: !5213, file: !3281, line: 388, type: !4261)
!5215 = !DILocation(line: 388, column: 60, scope: !5213)
!5216 = !DILocalVariable(name: "sp", arg: 2, scope: !5213, file: !3281, line: 389, type: !256)
!5217 = !DILocation(line: 389, column: 18, scope: !5213)
!5218 = !DILocation(line: 391, column: 2, scope: !5213)
!5219 = !DILocation(line: 391, column: 8, scope: !5213)
!5220 = !DILocation(line: 391, column: 22, scope: !5213)
!5221 = !DILocation(line: 393, column: 7, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5213, file: !3281, line: 393, column: 6)
!5223 = !DILocation(line: 393, column: 6, scope: !5222)
!5224 = !DILocation(line: 393, column: 10, scope: !5222)
!5225 = !DILocation(line: 393, column: 6, scope: !5213)
!5226 = !DILocation(line: 394, column: 3, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5222, file: !3281, line: 393, column: 18)
!5228 = !DILocation(line: 394, column: 9, scope: !5227)
!5229 = !DILocation(line: 394, column: 20, scope: !5227)
!5230 = !DILocation(line: 395, column: 10, scope: !5227)
!5231 = !DILocation(line: 395, column: 3, scope: !5227)
!5232 = !DILocalVariable(name: "wp", scope: !5213, file: !3281, line: 398, type: !256)
!5233 = !DILocation(line: 398, column: 14, scope: !5213)
!5234 = !DILocation(line: 398, column: 19, scope: !5213)
!5235 = !DILocalVariable(name: "width", scope: !5213, file: !3281, line: 399, type: !217)
!5236 = !DILocation(line: 399, column: 9, scope: !5213)
!5237 = !DILocation(line: 399, column: 17, scope: !5213)
!5238 = !DILocation(line: 401, column: 6, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5213, file: !3281, line: 401, column: 6)
!5240 = !DILocation(line: 401, column: 12, scope: !5239)
!5241 = !DILocation(line: 401, column: 9, scope: !5239)
!5242 = !DILocation(line: 401, column: 6, scope: !5213)
!5243 = !DILocation(line: 402, column: 3, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5239, file: !3281, line: 401, column: 16)
!5245 = !DILocation(line: 402, column: 9, scope: !5244)
!5246 = !DILocation(line: 402, column: 23, scope: !5244)
!5247 = !DILocation(line: 403, column: 23, scope: !5244)
!5248 = !DILocation(line: 403, column: 3, scope: !5244)
!5249 = !DILocation(line: 403, column: 9, scope: !5244)
!5250 = !DILocation(line: 403, column: 21, scope: !5244)
!5251 = !DILocation(line: 404, column: 26, scope: !5244)
!5252 = !DILocation(line: 404, column: 32, scope: !5244)
!5253 = !DILocation(line: 404, column: 44, scope: !5244)
!5254 = !DILocation(line: 405, column: 11, scope: !5244)
!5255 = !DILocation(line: 405, column: 15, scope: !5244)
!5256 = !DILocation(line: 405, column: 32, scope: !5244)
!5257 = !DILocation(line: 405, column: 38, scope: !5244)
!5258 = !DILocation(line: 405, column: 21, scope: !5244)
!5259 = !DILocation(line: 404, column: 3, scope: !5244)
!5260 = !DILocation(line: 404, column: 9, scope: !5244)
!5261 = !DILocation(line: 404, column: 21, scope: !5244)
!5262 = !DILocation(line: 406, column: 2, scope: !5244)
!5263 = !DILocation(line: 408, column: 9, scope: !5213)
!5264 = !DILocation(line: 408, column: 2, scope: !5213)
!5265 = !DILocation(line: 409, column: 1, scope: !5213)
!5266 = distinct !DISubprogram(name: "extract_prec", scope: !3281, file: !3281, line: 420, type: !4892, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!5267 = !DILocalVariable(name: "conv", arg: 1, scope: !5266, file: !3281, line: 420, type: !4261)
!5268 = !DILocation(line: 420, column: 59, scope: !5266)
!5269 = !DILocalVariable(name: "sp", arg: 2, scope: !5266, file: !3281, line: 421, type: !256)
!5270 = !DILocation(line: 421, column: 24, scope: !5266)
!5271 = !DILocation(line: 423, column: 25, scope: !5266)
!5272 = !DILocation(line: 423, column: 24, scope: !5266)
!5273 = !DILocation(line: 423, column: 28, scope: !5266)
!5274 = !DILocation(line: 423, column: 2, scope: !5266)
!5275 = !DILocation(line: 423, column: 8, scope: !5266)
!5276 = !DILocation(line: 423, column: 21, scope: !5266)
!5277 = !DILocation(line: 425, column: 7, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5266, file: !3281, line: 425, column: 6)
!5279 = !DILocation(line: 425, column: 13, scope: !5278)
!5280 = !DILocation(line: 425, column: 6, scope: !5266)
!5281 = !DILocation(line: 426, column: 10, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5278, file: !3281, line: 425, column: 27)
!5283 = !DILocation(line: 426, column: 3, scope: !5282)
!5284 = !DILocation(line: 428, column: 2, scope: !5266)
!5285 = !DILocation(line: 430, column: 7, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5266, file: !3281, line: 430, column: 6)
!5287 = !DILocation(line: 430, column: 6, scope: !5286)
!5288 = !DILocation(line: 430, column: 10, scope: !5286)
!5289 = !DILocation(line: 430, column: 6, scope: !5266)
!5290 = !DILocation(line: 431, column: 3, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5286, file: !3281, line: 430, column: 18)
!5292 = !DILocation(line: 431, column: 9, scope: !5291)
!5293 = !DILocation(line: 431, column: 19, scope: !5291)
!5294 = !DILocation(line: 432, column: 10, scope: !5291)
!5295 = !DILocation(line: 432, column: 3, scope: !5291)
!5296 = !DILocalVariable(name: "prec", scope: !5266, file: !3281, line: 435, type: !217)
!5297 = !DILocation(line: 435, column: 9, scope: !5266)
!5298 = !DILocation(line: 435, column: 16, scope: !5266)
!5299 = !DILocation(line: 437, column: 21, scope: !5266)
!5300 = !DILocation(line: 437, column: 2, scope: !5266)
!5301 = !DILocation(line: 437, column: 8, scope: !5266)
!5302 = !DILocation(line: 437, column: 19, scope: !5266)
!5303 = !DILocation(line: 438, column: 25, scope: !5266)
!5304 = !DILocation(line: 438, column: 31, scope: !5266)
!5305 = !DILocation(line: 438, column: 42, scope: !5266)
!5306 = !DILocation(line: 439, column: 10, scope: !5266)
!5307 = !DILocation(line: 439, column: 14, scope: !5266)
!5308 = !DILocation(line: 439, column: 30, scope: !5266)
!5309 = !DILocation(line: 439, column: 36, scope: !5266)
!5310 = !DILocation(line: 439, column: 19, scope: !5266)
!5311 = !DILocation(line: 438, column: 2, scope: !5266)
!5312 = !DILocation(line: 438, column: 8, scope: !5266)
!5313 = !DILocation(line: 438, column: 20, scope: !5266)
!5314 = !DILocation(line: 441, column: 9, scope: !5266)
!5315 = !DILocation(line: 441, column: 2, scope: !5266)
!5316 = !DILocation(line: 442, column: 1, scope: !5266)
!5317 = distinct !DISubprogram(name: "extract_length", scope: !3281, file: !3281, line: 453, type: !4892, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!5318 = !DILocalVariable(name: "conv", arg: 1, scope: !5317, file: !3281, line: 453, type: !4261)
!5319 = !DILocation(line: 453, column: 61, scope: !5317)
!5320 = !DILocalVariable(name: "sp", arg: 2, scope: !5317, file: !3281, line: 454, type: !256)
!5321 = !DILocation(line: 454, column: 19, scope: !5317)
!5322 = !DILocation(line: 456, column: 11, scope: !5317)
!5323 = !DILocation(line: 456, column: 10, scope: !5317)
!5324 = !DILocation(line: 456, column: 2, scope: !5317)
!5325 = !DILocation(line: 458, column: 8, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5327, file: !3281, line: 458, column: 7)
!5327 = distinct !DILexicalBlock(scope: !5317, file: !3281, line: 456, column: 15)
!5328 = !DILocation(line: 458, column: 7, scope: !5326)
!5329 = !DILocation(line: 458, column: 13, scope: !5326)
!5330 = !DILocation(line: 458, column: 7, scope: !5327)
!5331 = !DILocation(line: 459, column: 4, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5326, file: !3281, line: 458, column: 21)
!5333 = !DILocation(line: 459, column: 10, scope: !5332)
!5334 = !DILocation(line: 459, column: 21, scope: !5332)
!5335 = !DILocation(line: 460, column: 4, scope: !5332)
!5336 = !DILocation(line: 461, column: 3, scope: !5332)
!5337 = !DILocation(line: 462, column: 4, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5326, file: !3281, line: 461, column: 10)
!5339 = !DILocation(line: 462, column: 10, scope: !5338)
!5340 = !DILocation(line: 462, column: 21, scope: !5338)
!5341 = !DILocation(line: 464, column: 3, scope: !5327)
!5342 = !DILocation(line: 466, column: 8, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5327, file: !3281, line: 466, column: 7)
!5344 = !DILocation(line: 466, column: 7, scope: !5343)
!5345 = !DILocation(line: 466, column: 13, scope: !5343)
!5346 = !DILocation(line: 466, column: 7, scope: !5327)
!5347 = !DILocation(line: 467, column: 4, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5343, file: !3281, line: 466, column: 21)
!5349 = !DILocation(line: 467, column: 10, scope: !5348)
!5350 = !DILocation(line: 467, column: 21, scope: !5348)
!5351 = !DILocation(line: 468, column: 4, scope: !5348)
!5352 = !DILocation(line: 469, column: 3, scope: !5348)
!5353 = !DILocation(line: 470, column: 4, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5343, file: !3281, line: 469, column: 10)
!5355 = !DILocation(line: 470, column: 10, scope: !5354)
!5356 = !DILocation(line: 470, column: 21, scope: !5354)
!5357 = !DILocation(line: 472, column: 3, scope: !5327)
!5358 = !DILocation(line: 474, column: 3, scope: !5327)
!5359 = !DILocation(line: 474, column: 9, scope: !5327)
!5360 = !DILocation(line: 474, column: 20, scope: !5327)
!5361 = !DILocation(line: 475, column: 3, scope: !5327)
!5362 = !DILocation(line: 476, column: 3, scope: !5327)
!5363 = !DILocation(line: 478, column: 3, scope: !5327)
!5364 = !DILocation(line: 478, column: 9, scope: !5327)
!5365 = !DILocation(line: 478, column: 20, scope: !5327)
!5366 = !DILocation(line: 479, column: 3, scope: !5327)
!5367 = !DILocation(line: 480, column: 3, scope: !5327)
!5368 = !DILocation(line: 482, column: 3, scope: !5327)
!5369 = !DILocation(line: 482, column: 9, scope: !5327)
!5370 = !DILocation(line: 482, column: 20, scope: !5327)
!5371 = !DILocation(line: 483, column: 3, scope: !5327)
!5372 = !DILocation(line: 484, column: 3, scope: !5327)
!5373 = !DILocation(line: 486, column: 3, scope: !5327)
!5374 = !DILocation(line: 486, column: 9, scope: !5327)
!5375 = !DILocation(line: 486, column: 20, scope: !5327)
!5376 = !DILocation(line: 487, column: 3, scope: !5327)
!5377 = !DILocation(line: 492, column: 3, scope: !5327)
!5378 = !DILocation(line: 492, column: 9, scope: !5327)
!5379 = !DILocation(line: 492, column: 21, scope: !5327)
!5380 = !DILocation(line: 493, column: 3, scope: !5327)
!5381 = !DILocation(line: 495, column: 3, scope: !5327)
!5382 = !DILocation(line: 495, column: 9, scope: !5327)
!5383 = !DILocation(line: 495, column: 20, scope: !5327)
!5384 = !DILocation(line: 496, column: 3, scope: !5327)
!5385 = !DILocation(line: 498, column: 9, scope: !5317)
!5386 = !DILocation(line: 498, column: 2, scope: !5317)
!5387 = distinct !DISubprogram(name: "extract_specifier", scope: !3281, file: !3281, line: 513, type: !4892, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!5388 = !DILocalVariable(name: "conv", arg: 1, scope: !5387, file: !3281, line: 513, type: !4261)
!5389 = !DILocation(line: 513, column: 64, scope: !5387)
!5390 = !DILocalVariable(name: "sp", arg: 2, scope: !5387, file: !3281, line: 514, type: !256)
!5391 = !DILocation(line: 514, column: 22, scope: !5387)
!5392 = !DILocalVariable(name: "unsupported", scope: !5387, file: !3281, line: 516, type: !1035)
!5393 = !DILocation(line: 516, column: 7, scope: !5387)
!5394 = !DILocation(line: 518, column: 23, scope: !5387)
!5395 = !DILocation(line: 518, column: 20, scope: !5387)
!5396 = !DILocation(line: 518, column: 2, scope: !5387)
!5397 = !DILocation(line: 518, column: 8, scope: !5387)
!5398 = !DILocation(line: 518, column: 18, scope: !5387)
!5399 = !DILocation(line: 520, column: 10, scope: !5387)
!5400 = !DILocation(line: 520, column: 16, scope: !5387)
!5401 = !DILocation(line: 520, column: 2, scope: !5387)
!5402 = !DILocation(line: 522, column: 3, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5387, file: !3281, line: 520, column: 27)
!5404 = !DILocation(line: 522, column: 9, scope: !5403)
!5405 = !DILocation(line: 522, column: 23, scope: !5403)
!5406 = !DILocation(line: 523, column: 3, scope: !5403)
!5407 = !DILocation(line: 525, column: 3, scope: !5403)
!5408 = !DILocation(line: 525, column: 9, scope: !5403)
!5409 = !DILocation(line: 525, column: 23, scope: !5403)
!5410 = !DILabel(scope: !5403, name: "int_conv", file: !3281, line: 526)
!5411 = !DILocation(line: 526, column: 1, scope: !5403)
!5412 = !DILocation(line: 528, column: 7, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5403, file: !3281, line: 528, column: 7)
!5414 = !DILocation(line: 528, column: 13, scope: !5413)
!5415 = !DILocation(line: 528, column: 24, scope: !5413)
!5416 = !DILocation(line: 528, column: 7, scope: !5403)
!5417 = !DILocation(line: 529, column: 4, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5413, file: !3281, line: 528, column: 43)
!5419 = !DILocation(line: 529, column: 10, scope: !5418)
!5420 = !DILocation(line: 529, column: 18, scope: !5418)
!5421 = !DILocation(line: 530, column: 3, scope: !5418)
!5422 = !DILocation(line: 535, column: 7, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5403, file: !3281, line: 535, column: 7)
!5424 = !DILocation(line: 535, column: 13, scope: !5423)
!5425 = !DILocation(line: 535, column: 23, scope: !5423)
!5426 = !DILocation(line: 535, column: 7, scope: !5403)
!5427 = !DILocation(line: 536, column: 19, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5423, file: !3281, line: 535, column: 31)
!5429 = !DILocation(line: 536, column: 25, scope: !5428)
!5430 = !DILocation(line: 536, column: 36, scope: !5428)
!5431 = !DILocation(line: 536, column: 16, scope: !5428)
!5432 = !DILocation(line: 537, column: 3, scope: !5428)
!5433 = !DILocation(line: 567, column: 3, scope: !5403)
!5434 = !DILocation(line: 570, column: 3, scope: !5403)
!5435 = !DILocation(line: 570, column: 9, scope: !5403)
!5436 = !DILocation(line: 570, column: 23, scope: !5403)
!5437 = !DILocation(line: 574, column: 16, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !3281, line: 573, column: 48)
!5439 = distinct !DILexicalBlock(scope: !5403, file: !3281, line: 573, column: 7)
!5440 = !DILocation(line: 575, column: 4, scope: !5438)
!5441 = !DILocation(line: 603, column: 3, scope: !5403)
!5442 = !DILocation(line: 603, column: 9, scope: !5403)
!5443 = !DILocation(line: 603, column: 23, scope: !5403)
!5444 = !DILocation(line: 605, column: 7, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5403, file: !3281, line: 605, column: 7)
!5446 = !DILocation(line: 605, column: 13, scope: !5445)
!5447 = !DILocation(line: 605, column: 24, scope: !5445)
!5448 = !DILocation(line: 605, column: 7, scope: !5403)
!5449 = !DILocation(line: 606, column: 16, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5445, file: !3281, line: 605, column: 43)
!5451 = !DILocation(line: 607, column: 3, scope: !5450)
!5452 = !DILocation(line: 608, column: 3, scope: !5403)
!5453 = !DILocation(line: 612, column: 3, scope: !5403)
!5454 = !DILocation(line: 612, column: 9, scope: !5403)
!5455 = !DILocation(line: 612, column: 23, scope: !5403)
!5456 = !DILocation(line: 619, column: 7, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5403, file: !3281, line: 619, column: 7)
!5458 = !DILocation(line: 619, column: 13, scope: !5457)
!5459 = !DILocation(line: 619, column: 24, scope: !5457)
!5460 = !DILocation(line: 619, column: 7, scope: !5403)
!5461 = !DILocation(line: 620, column: 16, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5457, file: !3281, line: 619, column: 40)
!5463 = !DILocation(line: 621, column: 3, scope: !5462)
!5464 = !DILocation(line: 622, column: 3, scope: !5403)
!5465 = !DILocation(line: 625, column: 3, scope: !5403)
!5466 = !DILocation(line: 625, column: 9, scope: !5403)
!5467 = !DILocation(line: 625, column: 17, scope: !5403)
!5468 = !DILocation(line: 626, column: 3, scope: !5403)
!5469 = !DILocation(line: 629, column: 23, scope: !5387)
!5470 = !DILocation(line: 629, column: 2, scope: !5387)
!5471 = !DILocation(line: 629, column: 8, scope: !5387)
!5472 = !DILocation(line: 629, column: 20, scope: !5387)
!5473 = !DILocation(line: 631, column: 9, scope: !5387)
!5474 = !DILocation(line: 631, column: 2, scope: !5387)
!5475 = distinct !DISubprogram(name: "extract_decimal", scope: !3281, file: !3281, line: 318, type: !5476, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!5476 = !DISubroutineType(types: !5477)
!5477 = !{!217, !5478}
!5478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!5479 = !DILocalVariable(name: "str", arg: 1, scope: !5475, file: !3281, line: 318, type: !5478)
!5480 = !DILocation(line: 318, column: 44, scope: !5475)
!5481 = !DILocalVariable(name: "sp", scope: !5475, file: !3281, line: 320, type: !256)
!5482 = !DILocation(line: 320, column: 14, scope: !5475)
!5483 = !DILocation(line: 320, column: 20, scope: !5475)
!5484 = !DILocation(line: 320, column: 19, scope: !5475)
!5485 = !DILocalVariable(name: "val", scope: !5475, file: !3281, line: 321, type: !217)
!5486 = !DILocation(line: 321, column: 9, scope: !5475)
!5487 = !DILocation(line: 323, column: 2, scope: !5475)
!5488 = !DILocation(line: 323, column: 38, scope: !5475)
!5489 = !DILocation(line: 323, column: 37, scope: !5475)
!5490 = !DILocation(line: 323, column: 17, scope: !5475)
!5491 = !DILocation(line: 323, column: 9, scope: !5475)
!5492 = !DILocation(line: 324, column: 15, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5475, file: !3281, line: 323, column: 43)
!5494 = !DILocation(line: 324, column: 13, scope: !5493)
!5495 = !DILocation(line: 324, column: 24, scope: !5493)
!5496 = !DILocation(line: 324, column: 21, scope: !5493)
!5497 = !DILocation(line: 324, column: 19, scope: !5493)
!5498 = !DILocation(line: 324, column: 27, scope: !5493)
!5499 = !DILocation(line: 324, column: 7, scope: !5493)
!5500 = distinct !{!5500, !5487, !5501}
!5501 = !DILocation(line: 325, column: 2, scope: !5475)
!5502 = !DILocation(line: 326, column: 9, scope: !5475)
!5503 = !DILocation(line: 326, column: 3, scope: !5475)
!5504 = !DILocation(line: 326, column: 7, scope: !5475)
!5505 = !DILocation(line: 327, column: 9, scope: !5475)
!5506 = !DILocation(line: 327, column: 2, scope: !5475)
!5507 = distinct !DISubprogram(name: "isdigit", scope: !5134, file: !5134, line: 43, type: !274, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3277, retainedNodes: !223)
!5508 = !DILocalVariable(name: "a", arg: 1, scope: !5507, file: !5134, line: 43, type: !103)
!5509 = !DILocation(line: 43, column: 31, scope: !5507)
!5510 = !DILocation(line: 45, column: 27, scope: !5507)
!5511 = !DILocation(line: 45, column: 29, scope: !5507)
!5512 = !DILocation(line: 45, column: 45, scope: !5507)
!5513 = !DILocation(line: 45, column: 2, scope: !5507)
!5514 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5515, file: !5515, line: 9, type: !253, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3314, retainedNodes: !223)
!5515 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!5516 = !DILocation(line: 11, column: 1, scope: !5514)
!5517 = !{i64 2147555959, i64 2147556002, i64 2147556042}
!5518 = !DILocation(line: 12, column: 1, scope: !5514)
!5519 = !{i64 2147560237, i64 2147560280, i64 2147560320}
!5520 = !DILocation(line: 13, column: 1, scope: !5514)
!5521 = !{i64 2147560406, i64 2147560449, i64 2147560489}
!5522 = !DILocation(line: 14, column: 1, scope: !5514)
!5523 = !{i64 2147560590, i64 2147560633, i64 2147560673}
!5524 = !DILocation(line: 15, column: 1, scope: !5514)
!5525 = !{i64 2147560769, i64 2147560812, i64 2147560852}
!5526 = !DILocation(line: 16, column: 1, scope: !5514)
!5527 = !{i64 2147561011, i64 2147561054, i64 2147561094}
!5528 = !DILocation(line: 17, column: 1, scope: !5514)
!5529 = !{i64 2147561197, i64 2147561240, i64 2147561280}
!5530 = !DILocation(line: 18, column: 1, scope: !5514)
!5531 = !{i64 2147561407, i64 2147561450, i64 2147561490}
!5532 = !DILocation(line: 19, column: 1, scope: !5514)
!5533 = !{i64 2147561610, i64 2147561653, i64 2147561693}
!5534 = !DILocation(line: 20, column: 1, scope: !5514)
!5535 = !{i64 2147561813, i64 2147561856, i64 2147561896}
!5536 = !DILocation(line: 21, column: 1, scope: !5514)
!5537 = !{i64 2147562012, i64 2147562055, i64 2147562095}
!5538 = !DILocation(line: 22, column: 1, scope: !5514)
!5539 = !{i64 2147562187, i64 2147562230, i64 2147562270}
!5540 = !DILocation(line: 23, column: 1, scope: !5514)
!5541 = !{i64 2147562395, i64 2147562438, i64 2147562478}
!5542 = !DILocation(line: 24, column: 1, scope: !5514)
!5543 = !{i64 2147562599, i64 2147562642, i64 2147562682}
!5544 = !DILocation(line: 25, column: 1, scope: !5514)
!5545 = !{i64 2147562801, i64 2147562844, i64 2147562884}
!5546 = !DILocation(line: 26, column: 1, scope: !5514)
!5547 = !{i64 2147563028, i64 2147563071, i64 2147563111}
!5548 = !DILocation(line: 27, column: 1, scope: !5514)
!5549 = !{i64 2147563243, i64 2147563286, i64 2147563326}
!5550 = !DILocation(line: 28, column: 1, scope: !5514)
!5551 = !{i64 2147563415, i64 2147563458, i64 2147563498}
!5552 = !DILocation(line: 29, column: 1, scope: !5514)
!5553 = !{i64 2147563617, i64 2147563660, i64 2147563700}
!5554 = !DILocation(line: 30, column: 1, scope: !5514)
!5555 = !{i64 2147563816, i64 2147563859, i64 2147563899}
!5556 = !DILocation(line: 31, column: 1, scope: !5514)
!5557 = !{i64 2147563991, i64 2147564034, i64 2147564074}
!5558 = !DILocation(line: 32, column: 1, scope: !5514)
!5559 = !{i64 2147564220, i64 2147564263, i64 2147564303}
!5560 = !DILocation(line: 33, column: 1, scope: !5514)
!5561 = !{i64 2147564473, i64 2147564516, i64 2147564556}
!5562 = !DILocation(line: 34, column: 1, scope: !5514)
!5563 = !{i64 2147564714, i64 2147564757, i64 2147564797}
!5564 = !DILocation(line: 35, column: 1, scope: !5514)
!5565 = !{i64 2147564949, i64 2147564992, i64 2147565032}
!5566 = !DILocation(line: 36, column: 1, scope: !5514)
!5567 = !{i64 2147565190, i64 2147565233, i64 2147565273}
!5568 = !DILocation(line: 37, column: 1, scope: !5514)
!5569 = !{i64 2147565434, i64 2147565477, i64 2147565517}
!5570 = !DILocation(line: 38, column: 1, scope: !5514)
!5571 = !{i64 2147565675, i64 2147565718, i64 2147565758}
!5572 = !DILocation(line: 39, column: 1, scope: !5514)
!5573 = !{i64 2147565919, i64 2147565962, i64 2147566002}
!5574 = !DILocation(line: 40, column: 1, scope: !5514)
!5575 = !{i64 2147566157, i64 2147566200, i64 2147566240}
!5576 = !DILocation(line: 41, column: 1, scope: !5514)
!5577 = !{i64 2147566410, i64 2147566453, i64 2147566493}
!5578 = !DILocation(line: 42, column: 1, scope: !5514)
!5579 = !{i64 2147566663, i64 2147566706, i64 2147566746}
!5580 = !DILocation(line: 43, column: 1, scope: !5514)
!5581 = !{i64 2147566913, i64 2147566956, i64 2147566996}
!5582 = !DILocation(line: 44, column: 1, scope: !5514)
!5583 = !{i64 2147567154, i64 2147567197, i64 2147567237}
!5584 = !DILocation(line: 45, column: 1, scope: !5514)
!5585 = !{i64 2147567398, i64 2147567441, i64 2147567481}
!5586 = !DILocation(line: 46, column: 1, scope: !5514)
!5587 = !{i64 2147567651, i64 2147567694, i64 2147567734}
!5588 = !DILocation(line: 47, column: 1, scope: !5514)
!5589 = !{i64 2147567895, i64 2147567938, i64 2147567978}
!5590 = !DILocation(line: 48, column: 1, scope: !5514)
!5591 = !{i64 2147568136, i64 2147568179, i64 2147568219}
!5592 = !DILocation(line: 49, column: 1, scope: !5514)
!5593 = !{i64 2147568392, i64 2147568435, i64 2147568475}
!5594 = !DILocation(line: 50, column: 1, scope: !5514)
!5595 = !{i64 2147572703, i64 2147572746, i64 2147572786}
!5596 = !DILocation(line: 51, column: 1, scope: !5514)
!5597 = !{i64 2147572947, i64 2147572990, i64 2147573030}
!5598 = !DILocation(line: 52, column: 1, scope: !5514)
!5599 = !{i64 2147573194, i64 2147573237, i64 2147573277}
!5600 = !DILocation(line: 53, column: 1, scope: !5514)
!5601 = !{i64 2147573420, i64 2147573463, i64 2147573503}
!5602 = !DILocation(line: 54, column: 1, scope: !5514)
!5603 = !{i64 2147573646, i64 2147573689, i64 2147573729}
!5604 = !DILocation(line: 55, column: 1, scope: !5514)
!5605 = !{i64 2147573869, i64 2147573912, i64 2147573952}
!5606 = !DILocation(line: 56, column: 1, scope: !5514)
!5607 = !{i64 2147574104, i64 2147574147, i64 2147574187}
!5608 = !DILocation(line: 57, column: 1, scope: !5514)
!5609 = !{i64 2147574333, i64 2147574376, i64 2147574416}
!5610 = !DILocation(line: 58, column: 1, scope: !5514)
!5611 = !{i64 2147574541, i64 2147574584, i64 2147574624}
!5612 = !DILocation(line: 59, column: 1, scope: !5514)
!5613 = !{i64 2147574752, i64 2147574795, i64 2147574835}
!5614 = !DILocation(line: 60, column: 1, scope: !5514)
!5615 = !{i64 2147574987, i64 2147575030, i64 2147575070}
!5616 = !DILocation(line: 61, column: 1, scope: !5514)
!5617 = !{i64 2147575216, i64 2147575259, i64 2147575299}
!5618 = !DILocation(line: 62, column: 1, scope: !5514)
!5619 = !{i64 2147575454, i64 2147575497, i64 2147575537}
!5620 = !DILocation(line: 63, column: 1, scope: !5514)
!5621 = !{i64 2147575686, i64 2147575729, i64 2147575769}
!5622 = !DILocation(line: 64, column: 1, scope: !5514)
!5623 = !{i64 2147575912, i64 2147575955, i64 2147575995}
!5624 = !DILocation(line: 65, column: 1, scope: !5514)
!5625 = !{i64 2147576129, i64 2147576172, i64 2147576212}
!5626 = !DILocation(line: 66, column: 1, scope: !5514)
!5627 = !{i64 2147576361, i64 2147576404, i64 2147576444}
!5628 = !DILocation(line: 67, column: 1, scope: !5514)
!5629 = !{i64 2147576587, i64 2147576630, i64 2147576670}
!5630 = !DILocation(line: 68, column: 1, scope: !5514)
!5631 = !{i64 2147576801, i64 2147576844, i64 2147576884}
!5632 = !DILocation(line: 69, column: 1, scope: !5514)
!5633 = !{i64 2147577021, i64 2147577064, i64 2147577104}
!5634 = !DILocation(line: 70, column: 1, scope: !5514)
!5635 = !{i64 2147577253, i64 2147577296, i64 2147577336}
!5636 = !DILocation(line: 71, column: 1, scope: !5514)
!5637 = !{i64 2147577461, i64 2147577504, i64 2147577544}
!5638 = !DILocation(line: 72, column: 1, scope: !5514)
!5639 = !{i64 2147577666, i64 2147577709, i64 2147577749}
!5640 = !DILocation(line: 73, column: 1, scope: !5514)
!5641 = !{i64 2147577883, i64 2147577926, i64 2147577966}
!5642 = !DILocation(line: 74, column: 1, scope: !5514)
!5643 = !{i64 2147578097, i64 2147578140, i64 2147578180}
!5644 = !DILocation(line: 75, column: 1, scope: !5514)
!5645 = !{i64 2147578323, i64 2147578366, i64 2147578406}
!5646 = !DILocation(line: 76, column: 1, scope: !5514)
!5647 = !{i64 2147578543, i64 2147578586, i64 2147578626}
!5648 = !DILocation(line: 77, column: 1, scope: !5514)
!5649 = !{i64 2147578748, i64 2147578791, i64 2147578831}
!5650 = !DILocation(line: 78, column: 1, scope: !5514)
!5651 = !{i64 2147578980, i64 2147579023, i64 2147579063}
!5652 = !DILocation(line: 79, column: 1, scope: !5514)
!5653 = !{i64 2147579215, i64 2147579258, i64 2147579298}
!5654 = !DILocation(line: 80, column: 1, scope: !5514)
!5655 = !{i64 2147579465, i64 2147579508, i64 2147579548}
!5656 = !DILocation(line: 81, column: 1, scope: !5514)
!5657 = !{i64 2147579715, i64 2147579758, i64 2147579798}
!5658 = !DILocation(line: 82, column: 1, scope: !5514)
!5659 = !{i64 2147579953, i64 2147579996, i64 2147580036}
!5660 = !DILocation(line: 83, column: 1, scope: !5514)
!5661 = !{i64 2147580164, i64 2147580207, i64 2147580247}
!5662 = !DILocation(line: 84, column: 1, scope: !5514)
!5663 = !{i64 2147580381, i64 2147580424, i64 2147580464}
!5664 = !DILocation(line: 85, column: 1, scope: !5514)
!5665 = !{i64 2147580544, i64 2147580587, i64 2147580627}
!5666 = !DILocation(line: 86, column: 1, scope: !5514)
!5667 = !{i64 2147580740, i64 2147580783, i64 2147580823}
!5668 = !DILocation(line: 87, column: 1, scope: !5514)
!5669 = !{i64 2147580942, i64 2147580985, i64 2147581025}
!5670 = !DILocation(line: 88, column: 1, scope: !5514)
!5671 = !{i64 2147585199, i64 2147585242, i64 2147585282}
!5672 = !DILocation(line: 89, column: 1, scope: !5514)
!5673 = !{i64 2147585428, i64 2147585471, i64 2147585511}
!5674 = !DILocation(line: 90, column: 1, scope: !5514)
!5675 = !{i64 2147585633, i64 2147585676, i64 2147585716}
!5676 = !DILocation(line: 91, column: 1, scope: !5514)
!5677 = !{i64 2147585817, i64 2147585860, i64 2147585900}
!5678 = !DILocation(line: 92, column: 1, scope: !5514)
!5679 = !{i64 2147586016, i64 2147586059, i64 2147586099}
!5680 = !DILocation(line: 93, column: 1, scope: !5514)
!5681 = !{i64 2147586254, i64 2147586297, i64 2147586337}
!5682 = !DILocation(line: 94, column: 1, scope: !5514)
!5683 = !{i64 2147586486, i64 2147586529, i64 2147586569}
!5684 = !DILocation(line: 95, column: 1, scope: !5514)
!5685 = !{i64 2147586697, i64 2147586740, i64 2147586780}
!5686 = !DILocation(line: 96, column: 1, scope: !5514)
!5687 = !{i64 2147586863, i64 2147586906, i64 2147586946}
!5688 = !DILocation(line: 97, column: 1, scope: !5514)
!5689 = !{i64 2147587047, i64 2147587090, i64 2147587130}
!5690 = !DILocation(line: 98, column: 1, scope: !5514)
!5691 = !{i64 2147587237, i64 2147587280, i64 2147587320}
!5692 = !DILocation(line: 99, column: 1, scope: !5514)
!5693 = !{i64 2147587421, i64 2147587464, i64 2147587504}
!5694 = !DILocation(line: 100, column: 1, scope: !5514)
!5695 = !{i64 2147587635, i64 2147587678, i64 2147587718}
!5696 = !DILocation(line: 101, column: 1, scope: !5514)
!5697 = !{i64 2147587846, i64 2147587889, i64 2147587929}
!5698 = !DILocation(line: 102, column: 1, scope: !5514)
!5699 = !{i64 2147588069, i64 2147588112, i64 2147588152}
!5700 = !DILocation(line: 103, column: 1, scope: !5514)
!5701 = !{i64 2147588253, i64 2147588296, i64 2147588336}
!5702 = !DILocation(line: 104, column: 1, scope: !5514)
!5703 = !{i64 2147588419, i64 2147588462, i64 2147588502}
!5704 = !DILocation(line: 105, column: 1, scope: !5514)
!5705 = !{i64 2147588600, i64 2147588643, i64 2147588683}
!5706 = !DILocation(line: 106, column: 1, scope: !5514)
!5707 = !{i64 2147588805, i64 2147588848, i64 2147588888}
!5708 = !DILocation(line: 107, column: 1, scope: !5514)
!5709 = !{i64 2147589031, i64 2147589074, i64 2147589114}
!5710 = !DILocation(line: 108, column: 1, scope: !5514)
!5711 = !{i64 2147589248, i64 2147589291, i64 2147589331}
!5712 = !DILocation(line: 109, column: 1, scope: !5514)
!5713 = !{i64 2147589474, i64 2147589517, i64 2147589557}
!5714 = !DILocation(line: 110, column: 1, scope: !5514)
!5715 = !{i64 2147589670, i64 2147589713, i64 2147589753}
!5716 = !DILocation(line: 111, column: 1, scope: !5514)
!5717 = !{i64 2147589935, i64 2147589978, i64 2147590018}
!5718 = !DILocation(line: 112, column: 1, scope: !5514)
!5719 = !{i64 2147590149, i64 2147590192, i64 2147590232}
!5720 = !DILocation(line: 113, column: 1, scope: !5514)
!5721 = !{i64 2147590312, i64 2147590355, i64 2147590395}
!5722 = !DILocation(line: 114, column: 1, scope: !5514)
!5723 = !{i64 2147590499, i64 2147590542, i64 2147590582}
!5724 = !DILocation(line: 115, column: 1, scope: !5514)
!5725 = !{i64 2147590692, i64 2147590735, i64 2147590775}
!5726 = !DILocation(line: 116, column: 1, scope: !5514)
!5727 = !{i64 2147590874, i64 2147590917, i64 2147590957}
!5728 = !DILocation(line: 117, column: 1, scope: !5514)
!5729 = !{i64 2147591088, i64 2147591131, i64 2147591171}
!5730 = !DILocation(line: 118, column: 1, scope: !5514)
!5731 = !{i64 2147591287, i64 2147591330, i64 2147591370}
!5732 = !DILocation(line: 119, column: 1, scope: !5514)
!5733 = !{i64 2147591522, i64 2147591565, i64 2147591605}
!5734 = !DILocation(line: 120, column: 1, scope: !5514)
!5735 = !{i64 2147591772, i64 2147591815, i64 2147591855}
!5736 = !DILocation(line: 121, column: 1, scope: !5514)
!5737 = !{i64 2147591974, i64 2147592017, i64 2147592057}
!5738 = !DILocation(line: 122, column: 1, scope: !5514)
!5739 = !{i64 2147592197, i64 2147592240, i64 2147592280}
!5740 = !DILocation(line: 123, column: 1, scope: !5514)
!5741 = !{i64 2147592411, i64 2147592454, i64 2147592494}
!5742 = !DILocation(line: 124, column: 1, scope: !5514)
!5743 = !{i64 2147592655, i64 2147592698, i64 2147592738}
!5744 = !DILocation(line: 125, column: 1, scope: !5514)
!5745 = !{i64 2147592881, i64 2147592924, i64 2147592964}
!5746 = !DILocation(line: 126, column: 1, scope: !5514)
!5747 = !{i64 2147593140, i64 2147593183, i64 2147593223}
!5748 = !DILocation(line: 127, column: 1, scope: !5514)
!5749 = !{i64 2147593360, i64 2147593403, i64 2147593443}
!5750 = !DILocation(line: 128, column: 1, scope: !5514)
!5751 = !{i64 2147593592, i64 2147593635, i64 2147593675}
!5752 = !DILocation(line: 129, column: 1, scope: !5514)
!5753 = !{i64 2147593833, i64 2147593876, i64 2147593916}
!5754 = !DILocation(line: 130, column: 1, scope: !5514)
!5755 = !{i64 2147594074, i64 2147594117, i64 2147594157}
!5756 = !DILocation(line: 131, column: 1, scope: !5514)
!5757 = !{i64 2147598358, i64 2147598401, i64 2147598441}
!5758 = !DILocation(line: 132, column: 1, scope: !5514)
!5759 = !{i64 2147598575, i64 2147598618, i64 2147598658}
!5760 = !DILocation(line: 133, column: 1, scope: !5514)
!5761 = !{i64 2147598816, i64 2147598859, i64 2147598899}
!5762 = !DILocation(line: 134, column: 1, scope: !5514)
!5763 = !{i64 2147599045, i64 2147599088, i64 2147599128}
!5764 = !DILocation(line: 135, column: 1, scope: !5514)
!5765 = !{i64 2147599241, i64 2147599284, i64 2147599324}
!5766 = !DILocation(line: 136, column: 1, scope: !5514)
!5767 = !{i64 2147599453, i64 2147599496, i64 2147599536}
!5768 = !DILocation(line: 137, column: 1, scope: !5514)
!5769 = !{i64 2147599674, i64 2147599717, i64 2147599757}
!5770 = !DILocation(line: 138, column: 1, scope: !5514)
!5771 = !{i64 2147599888, i64 2147599931, i64 2147599971}
!5772 = !DILocation(line: 139, column: 1, scope: !5514)
!5773 = !{i64 2147600078, i64 2147600121, i64 2147600161}
!5774 = !DILocation(line: 140, column: 1, scope: !5514)
!5775 = !{i64 2147600277, i64 2147600320, i64 2147600360}
!5776 = !DILocation(line: 141, column: 1, scope: !5514)
!5777 = !{i64 2147600482, i64 2147600525, i64 2147600565}
!5778 = !DILocation(line: 142, column: 1, scope: !5514)
!5779 = !{i64 2147600702, i64 2147600745, i64 2147600785}
!5780 = !DILocation(line: 143, column: 1, scope: !5514)
!5781 = !{i64 2147600903, i64 2147600946, i64 2147600986}
!5782 = !DILocation(line: 144, column: 1, scope: !5514)
!5783 = !{i64 2147601102, i64 2147601145, i64 2147601185}
!5784 = !DILocation(line: 145, column: 1, scope: !5514)
!5785 = !{i64 2147601271, i64 2147601314, i64 2147601354}
!5786 = !DILocation(line: 146, column: 1, scope: !5514)
!5787 = !{i64 2147601455, i64 2147601498, i64 2147601538}
!5788 = !DILocation(line: 147, column: 1, scope: !5514)
!5789 = !{i64 2147601639, i64 2147601682, i64 2147601722}
!5790 = !DILocation(line: 148, column: 1, scope: !5514)
!5791 = !{i64 2147601826, i64 2147601869, i64 2147601909}
!5792 = !DILocation(line: 149, column: 1, scope: !5514)
!5793 = !{i64 2147602010, i64 2147602053, i64 2147602093}
!5794 = !DILocation(line: 150, column: 1, scope: !5514)
!5795 = !{i64 2147602248, i64 2147602291, i64 2147602331}
!5796 = !DILocation(line: 151, column: 1, scope: !5514)
!5797 = !{i64 2147602478, i64 2147602521, i64 2147602561}
!5798 = !DILocation(line: 152, column: 1, scope: !5514)
!5799 = !{i64 2147602689, i64 2147602732, i64 2147602772}
!5800 = !DILocation(line: 153, column: 1, scope: !5514)
!5801 = !{i64 2147602876, i64 2147602919, i64 2147602959}
!5802 = !DILocation(line: 154, column: 1, scope: !5514)
!5803 = !{i64 2147603072, i64 2147603115, i64 2147603155}
!5804 = !DILocation(line: 155, column: 1, scope: !5514)
!5805 = !{i64 2147603280, i64 2147603323, i64 2147603363}
!5806 = !DILocation(line: 156, column: 1, scope: !5514)
!5807 = !{i64 2147603492, i64 2147603535, i64 2147603575}
!5808 = !DILocation(line: 157, column: 1, scope: !5514)
!5809 = !{i64 2147603691, i64 2147603734, i64 2147603774}
!5810 = !DILocation(line: 158, column: 1, scope: !5514)
!5811 = !{i64 2147603929, i64 2147603972, i64 2147604012}
!5812 = !DILocation(line: 159, column: 1, scope: !5514)
!5813 = !{i64 2147604125, i64 2147604168, i64 2147604208}
!5814 = !DILocation(line: 160, column: 1, scope: !5514)
!5815 = !{i64 2147604327, i64 2147604370, i64 2147604410}
!5816 = !DILocation(line: 161, column: 1, scope: !5514)
!5817 = !{i64 2147604520, i64 2147604563, i64 2147604603}
!5818 = !DILocation(line: 162, column: 1, scope: !5514)
!5819 = !{i64 2147604754, i64 2147604797, i64 2147604837}
!5820 = !DILocation(line: 163, column: 1, scope: !5514)
!5821 = !{i64 2147604917, i64 2147604960, i64 2147605000}
!5822 = !DILocation(line: 164, column: 1, scope: !5514)
!5823 = !{i64 2147605156, i64 2147605199, i64 2147605239}
!5824 = !DILocation(line: 165, column: 1, scope: !5514)
!5825 = !{i64 2147605395, i64 2147605438, i64 2147605478}
!5826 = !DILocation(line: 166, column: 1, scope: !5514)
!5827 = !{i64 2147605631, i64 2147605674, i64 2147605714}
!5828 = !DILocation(line: 167, column: 1, scope: !5514)
!5829 = !{i64 2147605861, i64 2147605904, i64 2147605944}
!5830 = !DILocation(line: 168, column: 1, scope: !5514)
!5831 = !{i64 2147606048, i64 2147606091, i64 2147606131}
!5832 = !DILocation(line: 169, column: 1, scope: !5514)
!5833 = !{i64 2147606247, i64 2147606290, i64 2147606330}
!5834 = !DILocation(line: 170, column: 1, scope: !5514)
!5835 = !{i64 2147606518, i64 2147606561, i64 2147606601}
!5836 = !DILocation(line: 171, column: 1, scope: !5514)
!5837 = !{i64 2147606693, i64 2147606736, i64 2147606776}
!5838 = !DILocation(line: 172, column: 1, scope: !5514)
!5839 = !{i64 2147606927, i64 2147606970, i64 2147607010}
!5840 = !DILocation(line: 173, column: 1, scope: !5514)
!5841 = !{i64 2147607135, i64 2147607178, i64 2147607218}
!5842 = !DILocation(line: 174, column: 1, scope: !5514)
!5843 = !{i64 2147611414, i64 2147611457, i64 2147611497}
!5844 = !DILocation(line: 175, column: 1, scope: !5514)
!5845 = !{i64 2147611604, i64 2147611647, i64 2147611687}
!5846 = !DILocation(line: 176, column: 1, scope: !5514)
!5847 = !{i64 2147611800, i64 2147611843, i64 2147611883}
!5848 = !DILocation(line: 177, column: 1, scope: !5514)
!5849 = !{i64 2147612006, i64 2147612049, i64 2147612089}
!5850 = !DILocation(line: 178, column: 1, scope: !5514)
!5851 = !{i64 2147612211, i64 2147612254, i64 2147612294}
!5852 = !DILocation(line: 179, column: 1, scope: !5514)
!5853 = !{i64 2147612425, i64 2147612468, i64 2147612508}
!5854 = !DILocation(line: 180, column: 1, scope: !5514)
!5855 = !{i64 2147612651, i64 2147612694, i64 2147612734}
!5856 = !DILocation(line: 181, column: 1, scope: !5514)
!5857 = !{i64 2147612883, i64 2147612926, i64 2147612966}
!5858 = !DILocation(line: 182, column: 1, scope: !5514)
!5859 = !{i64 2147613064, i64 2147613107, i64 2147613147}
!5860 = !DILocation(line: 183, column: 1, scope: !5514)
!5861 = !{i64 2147613273, i64 2147613316, i64 2147613356}
!5862 = !DILocation(line: 184, column: 1, scope: !5514)
!5863 = !{i64 2147613451, i64 2147613494, i64 2147613534}
!5864 = !DILocation(line: 185, column: 1, scope: !5514)
!5865 = !{i64 2147613683, i64 2147613726, i64 2147613766}
!5866 = !DILocation(line: 186, column: 1, scope: !5514)
!5867 = !{i64 2147613885, i64 2147613928, i64 2147613968}
!5868 = !DILocation(line: 187, column: 1, scope: !5514)
!5869 = !{i64 2147614135, i64 2147614178, i64 2147614218}
!5870 = !DILocation(line: 188, column: 1, scope: !5514)
!5871 = !{i64 2147614373, i64 2147614416, i64 2147614456}
!5872 = !DILocation(line: 189, column: 1, scope: !5514)
!5873 = !{i64 2147614563, i64 2147614606, i64 2147614646}
!5874 = !DILocation(line: 190, column: 1, scope: !5514)
!5875 = !{i64 2147614777, i64 2147614820, i64 2147614860}
!5876 = !DILocation(line: 191, column: 1, scope: !5514)
!5877 = !{i64 2147614985, i64 2147615028, i64 2147615068}
!5878 = !DILocation(line: 192, column: 1, scope: !5514)
!5879 = !{i64 2147615175, i64 2147615218, i64 2147615258}
!5880 = !DILocation(line: 193, column: 1, scope: !5514)
!5881 = !{i64 2147615389, i64 2147615432, i64 2147615472}
!5882 = !DILocation(line: 194, column: 1, scope: !5514)
!5883 = !{i64 2147615651, i64 2147615694, i64 2147615734}
!5884 = !DILocation(line: 195, column: 1, scope: !5514)
!5885 = !{i64 2147615862, i64 2147615905, i64 2147615945}
!5886 = !DILocation(line: 196, column: 1, scope: !5514)
!5887 = !{i64 2147616106, i64 2147616149, i64 2147616189}
!5888 = !DILocation(line: 197, column: 1, scope: !5514)
!5889 = !{i64 2147616317, i64 2147616360, i64 2147616400}
!5890 = !DILocation(line: 198, column: 1, scope: !5514)
!5891 = !{i64 2147616546, i64 2147616589, i64 2147616629}
!5892 = !DILocation(line: 199, column: 1, scope: !5514)
!5893 = !{i64 2147616751, i64 2147616794, i64 2147616834}
!5894 = !DILocation(line: 200, column: 1, scope: !5514)
!5895 = !{i64 2147616947, i64 2147616990, i64 2147617030}
!5896 = !DILocation(line: 201, column: 1, scope: !5514)
!5897 = !{i64 2147617170, i64 2147617213, i64 2147617253}
!5898 = !DILocation(line: 202, column: 1, scope: !5514)
!5899 = !{i64 2147617333, i64 2147617376, i64 2147617416}
!5900 = !DILocation(line: 203, column: 1, scope: !5514)
!5901 = !{i64 2147617538, i64 2147617581, i64 2147617621}
!5902 = !DILocation(line: 204, column: 1, scope: !5514)
!5903 = !{i64 2147617758, i64 2147617801, i64 2147617841}
!5904 = !DILocation(line: 205, column: 1, scope: !5514)
!5905 = !{i64 2147617972, i64 2147618015, i64 2147618055}
!5906 = !DILocation(line: 206, column: 1, scope: !5514)
!5907 = !{i64 2147618186, i64 2147618229, i64 2147618269}
!5908 = !DILocation(line: 207, column: 1, scope: !5514)
!5909 = !{i64 2147618397, i64 2147618440, i64 2147618480}
!5910 = !DILocation(line: 208, column: 1, scope: !5514)
!5911 = !{i64 2147618590, i64 2147618633, i64 2147618673}
!5912 = !DILocation(line: 209, column: 1, scope: !5514)
!5913 = !{i64 2147618789, i64 2147618832, i64 2147618872}
!5914 = !DILocation(line: 210, column: 1, scope: !5514)
!5915 = !{i64 2147618961, i64 2147619004, i64 2147619044}
!5916 = !DILocation(line: 211, column: 1, scope: !5514)
!5917 = !{i64 2147619154, i64 2147619197, i64 2147619237}
!5918 = !DILocation(line: 212, column: 1, scope: !5514)
!5919 = !{i64 2147619350, i64 2147619393, i64 2147619433}
!5920 = !DILocation(line: 213, column: 1, scope: !5514)
!5921 = !{i64 2147619577, i64 2147619620, i64 2147619660}
!5922 = !DILocation(line: 214, column: 1, scope: !5514)
!5923 = !{i64 2147619794, i64 2147619837, i64 2147619877}
!5924 = !DILocation(line: 215, column: 1, scope: !5514)
!5925 = !{i64 2147620086, i64 2147620129, i64 2147620169}
!5926 = !DILocation(line: 216, column: 1, scope: !5514)
!5927 = !{i64 2147624379, i64 2147624422, i64 2147624462}
!5928 = !DILocation(line: 217, column: 1, scope: !5514)
!5929 = !{i64 2147624596, i64 2147624639, i64 2147624679}
!5930 = !DILocation(line: 218, column: 1, scope: !5514)
!5931 = !{i64 2147624813, i64 2147624856, i64 2147624896}
!5932 = !DILocation(line: 219, column: 1, scope: !5514)
!5933 = !{i64 2147625023, i64 2147625066, i64 2147625106}
!5934 = !DILocation(line: 220, column: 1, scope: !5514)
!5935 = !{i64 2147625228, i64 2147625271, i64 2147625311}
!5936 = !DILocation(line: 221, column: 1, scope: !5514)
!5937 = !{i64 2147625460, i64 2147625503, i64 2147625543}
!5938 = !DILocation(line: 222, column: 1, scope: !5514)
!5939 = !{i64 2147625668, i64 2147625711, i64 2147625751}
!5940 = !DILocation(line: 223, column: 1, scope: !5514)
!5941 = !{i64 2147625858, i64 2147625901, i64 2147625941}
!5942 = !DILocation(line: 224, column: 1, scope: !5514)
!5943 = !{i64 2147626084, i64 2147626127, i64 2147626167}
!5944 = !DILocation(line: 225, column: 1, scope: !5514)
!5945 = !{i64 2147626273, i64 2147626316, i64 2147626356}
!5946 = !DILocation(line: 226, column: 1, scope: !5514)
!5947 = !{i64 2147626544, i64 2147626587, i64 2147626627}
!5948 = !DILocation(line: 227, column: 1, scope: !5514)
!5949 = !{i64 2147626764, i64 2147626807, i64 2147626847}
!5950 = !DILocation(line: 228, column: 1, scope: !5514)
!5951 = !{i64 2147627017, i64 2147627060, i64 2147627100}
!5952 = !DILocation(line: 229, column: 1, scope: !5514)
!5953 = !{i64 2147627219, i64 2147627262, i64 2147627302}
!5954 = !DILocation(line: 230, column: 1, scope: !5514)
!5955 = !{i64 2147627451, i64 2147627494, i64 2147627534}
!5956 = !DILocation(line: 231, column: 1, scope: !5514)
!5957 = !{i64 2147627662, i64 2147627705, i64 2147627745}
!5958 = !DILocation(line: 232, column: 1, scope: !5514)
!5959 = !{i64 2147627852, i64 2147627895, i64 2147627935}
!5960 = !DILocation(line: 233, column: 1, scope: !5514)
!5961 = !{i64 2147628066, i64 2147628109, i64 2147628149}
!5962 = !DILocation(line: 234, column: 1, scope: !5514)
!5963 = !{i64 2147628265, i64 2147628308, i64 2147628348}
!5964 = !DILocation(line: 235, column: 1, scope: !5514)
!5965 = !{i64 2147628452, i64 2147628495, i64 2147628535}
!5966 = !DILocation(line: 236, column: 1, scope: !5514)
!5967 = !{i64 2147628660, i64 2147628703, i64 2147628743}
!5968 = !DILocation(line: 237, column: 1, scope: !5514)
!5969 = !{i64 2147628889, i64 2147628932, i64 2147628972}
!5970 = !DILocation(line: 238, column: 1, scope: !5514)
!5971 = !{i64 2147629091, i64 2147629134, i64 2147629174}
!5972 = !DILocation(line: 239, column: 1, scope: !5514)
!5973 = !{i64 2147629290, i64 2147629333, i64 2147629373}
!5974 = !DILocation(line: 240, column: 1, scope: !5514)
!5975 = !{i64 2147629507, i64 2147629550, i64 2147629590}
!5976 = !DILocation(line: 241, column: 1, scope: !5514)
!5977 = !{i64 2147629709, i64 2147629752, i64 2147629792}
!5978 = !DILocation(line: 242, column: 1, scope: !5514)
!5979 = !{i64 2147629950, i64 2147629993, i64 2147630033}
!5980 = !DILocation(line: 244, column: 1, scope: !5514)
!5981 = distinct !DISubprogram(name: "soc_port_pinmux_set", scope: !5982, file: !5982, line: 16, type: !5983, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3316, retainedNodes: !223)
!5982 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/common/soc_port.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5983 = !DISubroutineType(types: !5984)
!5984 = !{!103, !5985, !173, !173}
!5985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5986, size: 32)
!5986 = !DIDerivedType(tag: DW_TAG_typedef, name: "PortGroup", file: !2616, line: 367, baseType: !5987)
!5987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2616, line: 351, size: 1024, elements: !5988)
!5988 = !{!5989, !5999, !6009, !6019, !6029, !6039, !6049, !6059, !6069, !6080, !6090, !6108, !6109, !6121, !6135}
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !5987, file: !2616, line: 352, baseType: !5990, size: 32)
!5990 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !5991)
!5991 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIR_Type", file: !2616, line: 48, baseType: !5992)
!5992 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 43, size: 32, elements: !5993)
!5993 = !{!5994, !5998}
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !5992, file: !2616, line: 46, baseType: !5995, size: 32)
!5995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5992, file: !2616, line: 44, size: 32, elements: !5996)
!5996 = !{!5997}
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "DIR", scope: !5995, file: !2616, line: 45, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !5992, file: !2616, line: 47, baseType: !173, size: 32)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !5987, file: !2616, line: 353, baseType: !6000, size: 32, offset: 32)
!6000 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6001)
!6001 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRCLR_Type", file: !2616, line: 66, baseType: !6002)
!6002 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 61, size: 32, elements: !6003)
!6003 = !{!6004, !6008}
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6002, file: !2616, line: 64, baseType: !6005, size: 32)
!6005 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6002, file: !2616, line: 62, size: 32, elements: !6006)
!6006 = !{!6007}
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "DIRCLR", scope: !6005, file: !2616, line: 63, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6002, file: !2616, line: 65, baseType: !173, size: 32)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !5987, file: !2616, line: 354, baseType: !6010, size: 32, offset: 64)
!6010 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6011)
!6011 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRSET_Type", file: !2616, line: 84, baseType: !6012)
!6012 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 79, size: 32, elements: !6013)
!6013 = !{!6014, !6018}
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6012, file: !2616, line: 82, baseType: !6015, size: 32)
!6015 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6012, file: !2616, line: 80, size: 32, elements: !6016)
!6016 = !{!6017}
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "DIRSET", scope: !6015, file: !2616, line: 81, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6012, file: !2616, line: 83, baseType: !173, size: 32)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !5987, file: !2616, line: 355, baseType: !6020, size: 32, offset: 96)
!6020 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6021)
!6021 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_DIRTGL_Type", file: !2616, line: 102, baseType: !6022)
!6022 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 97, size: 32, elements: !6023)
!6023 = !{!6024, !6028}
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6022, file: !2616, line: 100, baseType: !6025, size: 32)
!6025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6022, file: !2616, line: 98, size: 32, elements: !6026)
!6026 = !{!6027}
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "DIRTGL", scope: !6025, file: !2616, line: 99, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6022, file: !2616, line: 101, baseType: !173, size: 32)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !5987, file: !2616, line: 356, baseType: !6030, size: 32, offset: 128)
!6030 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6031)
!6031 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUT_Type", file: !2616, line: 120, baseType: !6032)
!6032 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 115, size: 32, elements: !6033)
!6033 = !{!6034, !6038}
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6032, file: !2616, line: 118, baseType: !6035, size: 32)
!6035 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6032, file: !2616, line: 116, size: 32, elements: !6036)
!6036 = !{!6037}
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "OUT", scope: !6035, file: !2616, line: 117, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6032, file: !2616, line: 119, baseType: !173, size: 32)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !5987, file: !2616, line: 357, baseType: !6040, size: 32, offset: 160)
!6040 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6041)
!6041 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTCLR_Type", file: !2616, line: 138, baseType: !6042)
!6042 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 133, size: 32, elements: !6043)
!6043 = !{!6044, !6048}
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6042, file: !2616, line: 136, baseType: !6045, size: 32)
!6045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6042, file: !2616, line: 134, size: 32, elements: !6046)
!6046 = !{!6047}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "OUTCLR", scope: !6045, file: !2616, line: 135, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6042, file: !2616, line: 137, baseType: !173, size: 32)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !5987, file: !2616, line: 358, baseType: !6050, size: 32, offset: 192)
!6050 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6051)
!6051 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTSET_Type", file: !2616, line: 156, baseType: !6052)
!6052 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 151, size: 32, elements: !6053)
!6053 = !{!6054, !6058}
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6052, file: !2616, line: 154, baseType: !6055, size: 32)
!6055 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6052, file: !2616, line: 152, size: 32, elements: !6056)
!6056 = !{!6057}
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "OUTSET", scope: !6055, file: !2616, line: 153, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6052, file: !2616, line: 155, baseType: !173, size: 32)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !5987, file: !2616, line: 359, baseType: !6060, size: 32, offset: 224)
!6060 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6061)
!6061 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_OUTTGL_Type", file: !2616, line: 174, baseType: !6062)
!6062 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 169, size: 32, elements: !6063)
!6063 = !{!6064, !6068}
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6062, file: !2616, line: 172, baseType: !6065, size: 32)
!6065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6062, file: !2616, line: 170, size: 32, elements: !6066)
!6066 = !{!6067}
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "OUTTGL", scope: !6065, file: !2616, line: 171, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6062, file: !2616, line: 173, baseType: !173, size: 32)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !5987, file: !2616, line: 360, baseType: !6070, size: 32, offset: 256)
!6070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6071)
!6071 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6072)
!6072 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_IN_Type", file: !2616, line: 192, baseType: !6073)
!6073 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 187, size: 32, elements: !6074)
!6074 = !{!6075, !6079}
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6073, file: !2616, line: 190, baseType: !6076, size: 32)
!6076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6073, file: !2616, line: 188, size: 32, elements: !6077)
!6077 = !{!6078}
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "IN", scope: !6076, file: !2616, line: 189, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6073, file: !2616, line: 191, baseType: !173, size: 32)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !5987, file: !2616, line: 361, baseType: !6081, size: 32, offset: 288)
!6081 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6082)
!6082 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_CTRL_Type", file: !2616, line: 210, baseType: !6083)
!6083 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 205, size: 32, elements: !6084)
!6084 = !{!6085, !6089}
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6083, file: !2616, line: 208, baseType: !6086, size: 32)
!6086 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6083, file: !2616, line: 206, size: 32, elements: !6087)
!6087 = !{!6088}
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLING", scope: !6086, file: !2616, line: 207, baseType: !173, size: 32, flags: DIFlagBitField, extraData: i64 0)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6083, file: !2616, line: 209, baseType: !173, size: 32)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "WRCONFIG", scope: !5987, file: !2616, line: 362, baseType: !6091, size: 32, offset: 320)
!6091 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6092)
!6092 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_WRCONFIG_Type", file: !2616, line: 239, baseType: !6093)
!6093 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 223, size: 32, elements: !6094)
!6094 = !{!6095, !6107}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6093, file: !2616, line: 237, baseType: !6096, size: 32)
!6096 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6093, file: !2616, line: 224, size: 32, elements: !6097)
!6097 = !{!6098, !6099, !6100, !6101, !6102, !6103, !6104, !6105, !6106}
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "PINMASK", scope: !6096, file: !2616, line: 225, baseType: !173, size: 16, flags: DIFlagBitField, extraData: i64 0)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !6096, file: !2616, line: 226, baseType: !173, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !6096, file: !2616, line: 227, baseType: !173, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !6096, file: !2616, line: 228, baseType: !173, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !6096, file: !2616, line: 230, baseType: !173, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !6096, file: !2616, line: 232, baseType: !173, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "WRPMUX", scope: !6096, file: !2616, line: 233, baseType: !173, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "WRPINCFG", scope: !6096, file: !2616, line: 235, baseType: !173, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "HWSEL", scope: !6096, file: !2616, line: 236, baseType: !173, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6093, file: !2616, line: 238, baseType: !173, size: 32)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !5987, file: !2616, line: 363, baseType: !661, size: 32, offset: 352)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "PMUX", scope: !5987, file: !2616, line: 364, baseType: !6110, size: 128, offset: 384)
!6110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6111, size: 128, elements: !959)
!6111 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6112)
!6112 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PMUX_Type", file: !2616, line: 275, baseType: !6113)
!6113 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 269, size: 8, elements: !6114)
!6114 = !{!6115, !6120}
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6113, file: !2616, line: 273, baseType: !6116, size: 8)
!6116 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6113, file: !2616, line: 270, size: 8, elements: !6117)
!6117 = !{!6118, !6119}
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXE", scope: !6116, file: !2616, line: 271, baseType: !156, size: 4, flags: DIFlagBitField, extraData: i64 0)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXO", scope: !6116, file: !2616, line: 272, baseType: !156, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6113, file: !2616, line: 274, baseType: !156, size: 8)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "PINCFG", scope: !5987, file: !2616, line: 365, baseType: !6122, size: 256, offset: 512)
!6122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6123, size: 256, elements: !2765)
!6123 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6124)
!6124 = !DIDerivedType(tag: DW_TAG_typedef, name: "PORT_PINCFG_Type", file: !2616, line: 333, baseType: !6125)
!6125 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !2616, line: 323, size: 8, elements: !6126)
!6126 = !{!6127, !6134}
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !6125, file: !2616, line: 331, baseType: !6128, size: 8)
!6128 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6125, file: !2616, line: 324, size: 8, elements: !6129)
!6129 = !{!6130, !6131, !6132, !6133}
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "PMUXEN", scope: !6128, file: !2616, line: 325, baseType: !156, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "INEN", scope: !6128, file: !2616, line: 326, baseType: !156, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "PULLEN", scope: !6128, file: !2616, line: 327, baseType: !156, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "DRVSTR", scope: !6128, file: !2616, line: 329, baseType: !156, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !6125, file: !2616, line: 332, baseType: !156, size: 8)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !5987, file: !2616, line: 366, baseType: !2767, size: 256, offset: 768)
!6136 = !DILocalVariable(name: "pg", arg: 1, scope: !5981, file: !5982, line: 16, type: !5985)
!6137 = !DILocation(line: 16, column: 36, scope: !5981)
!6138 = !DILocalVariable(name: "pin", arg: 2, scope: !5981, file: !5982, line: 16, type: !173)
!6139 = !DILocation(line: 16, column: 49, scope: !5981)
!6140 = !DILocalVariable(name: "func", arg: 3, scope: !5981, file: !5982, line: 16, type: !173)
!6141 = !DILocation(line: 16, column: 63, scope: !5981)
!6142 = !DILocalVariable(name: "is_odd", scope: !5981, file: !5982, line: 18, type: !1035)
!6143 = !DILocation(line: 18, column: 7, scope: !5981)
!6144 = !DILocation(line: 18, column: 16, scope: !5981)
!6145 = !DILocation(line: 18, column: 20, scope: !5981)
!6146 = !DILocalVariable(name: "idx", scope: !5981, file: !5982, line: 19, type: !103)
!6147 = !DILocation(line: 19, column: 6, scope: !5981)
!6148 = !DILocation(line: 19, column: 12, scope: !5981)
!6149 = !DILocation(line: 19, column: 16, scope: !5981)
!6150 = !DILocation(line: 25, column: 6, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !5981, file: !5982, line: 25, column: 6)
!6152 = !DILocation(line: 25, column: 6, scope: !5981)
!6153 = !DILocation(line: 26, column: 29, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6151, file: !5982, line: 25, column: 14)
!6155 = !DILocation(line: 26, column: 3, scope: !6154)
!6156 = !DILocation(line: 26, column: 7, scope: !6154)
!6157 = !DILocation(line: 26, column: 12, scope: !6154)
!6158 = !DILocation(line: 26, column: 17, scope: !6154)
!6159 = !DILocation(line: 26, column: 21, scope: !6154)
!6160 = !DILocation(line: 26, column: 27, scope: !6154)
!6161 = !DILocation(line: 27, column: 2, scope: !6154)
!6162 = !DILocation(line: 28, column: 29, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6151, file: !5982, line: 27, column: 9)
!6164 = !DILocation(line: 28, column: 3, scope: !6163)
!6165 = !DILocation(line: 28, column: 7, scope: !6163)
!6166 = !DILocation(line: 28, column: 12, scope: !6163)
!6167 = !DILocation(line: 28, column: 17, scope: !6163)
!6168 = !DILocation(line: 28, column: 21, scope: !6163)
!6169 = !DILocation(line: 28, column: 27, scope: !6163)
!6170 = !DILocation(line: 30, column: 2, scope: !5981)
!6171 = !DILocation(line: 30, column: 6, scope: !5981)
!6172 = !DILocation(line: 30, column: 13, scope: !5981)
!6173 = !DILocation(line: 30, column: 18, scope: !5981)
!6174 = !DILocation(line: 30, column: 22, scope: !5981)
!6175 = !DILocation(line: 30, column: 29, scope: !5981)
!6176 = !DILocation(line: 32, column: 2, scope: !5981)
!6177 = distinct !DISubprogram(name: "soc_port_configure", scope: !5982, file: !5982, line: 35, type: !6178, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3316, retainedNodes: !223)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{null, !6180}
!6180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6181, size: 32)
!6181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6182)
!6182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_port_pin", file: !6183, line: 75, size: 96, elements: !6184)
!6183 = !DIFile(filename: "zephyr/soc/arm/atmel_sam0/samd21/../common/soc_port.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6184 = !{!6185, !6186, !6187}
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !6182, file: !6183, line: 76, baseType: !5985, size: 32)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "pinum", scope: !6182, file: !6183, line: 77, baseType: !173, size: 32, offset: 32)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6182, file: !6183, line: 78, baseType: !173, size: 32, offset: 64)
!6188 = !DILocalVariable(name: "pin", arg: 1, scope: !6177, file: !5982, line: 35, type: !6180)
!6189 = !DILocation(line: 35, column: 52, scope: !6177)
!6190 = !DILocalVariable(name: "pg", scope: !6177, file: !5982, line: 37, type: !5985)
!6191 = !DILocation(line: 37, column: 13, scope: !6177)
!6192 = !DILocation(line: 37, column: 18, scope: !6177)
!6193 = !DILocation(line: 37, column: 23, scope: !6177)
!6194 = !DILocalVariable(name: "flags", scope: !6177, file: !5982, line: 38, type: !173)
!6195 = !DILocation(line: 38, column: 11, scope: !6177)
!6196 = !DILocation(line: 38, column: 19, scope: !6177)
!6197 = !DILocation(line: 38, column: 24, scope: !6177)
!6198 = !DILocalVariable(name: "func", scope: !6177, file: !5982, line: 39, type: !173)
!6199 = !DILocation(line: 39, column: 11, scope: !6177)
!6200 = !DILocation(line: 39, column: 19, scope: !6177)
!6201 = !DILocation(line: 39, column: 24, scope: !6177)
!6202 = !DILocation(line: 39, column: 30, scope: !6177)
!6203 = !DILocation(line: 39, column: 52, scope: !6177)
!6204 = !DILocalVariable(name: "pincfg", scope: !6177, file: !5982, line: 40, type: !6124)
!6205 = !DILocation(line: 40, column: 19, scope: !6177)
!6206 = !DILocation(line: 43, column: 2, scope: !6177)
!6207 = !DILocation(line: 43, column: 6, scope: !6177)
!6208 = !DILocation(line: 43, column: 13, scope: !6177)
!6209 = !DILocation(line: 43, column: 18, scope: !6177)
!6210 = !DILocation(line: 43, column: 27, scope: !6177)
!6211 = !DILocation(line: 44, column: 25, scope: !6177)
!6212 = !DILocation(line: 44, column: 30, scope: !6177)
!6213 = !DILocation(line: 44, column: 22, scope: !6177)
!6214 = !DILocation(line: 44, column: 2, scope: !6177)
!6215 = !DILocation(line: 44, column: 6, scope: !6177)
!6216 = !DILocation(line: 44, column: 13, scope: !6177)
!6217 = !DILocation(line: 44, column: 17, scope: !6177)
!6218 = !DILocation(line: 45, column: 25, scope: !6177)
!6219 = !DILocation(line: 45, column: 30, scope: !6177)
!6220 = !DILocation(line: 45, column: 22, scope: !6177)
!6221 = !DILocation(line: 45, column: 2, scope: !6177)
!6222 = !DILocation(line: 45, column: 6, scope: !6177)
!6223 = !DILocation(line: 45, column: 13, scope: !6177)
!6224 = !DILocation(line: 45, column: 17, scope: !6177)
!6225 = !DILocation(line: 47, column: 6, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6177, file: !5982, line: 47, column: 6)
!6227 = !DILocation(line: 47, column: 12, scope: !6226)
!6228 = !DILocation(line: 47, column: 6, scope: !6177)
!6229 = !DILocation(line: 48, column: 23, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6226, file: !5982, line: 47, column: 38)
!6231 = !DILocation(line: 48, column: 27, scope: !6230)
!6232 = !DILocation(line: 48, column: 32, scope: !6230)
!6233 = !DILocation(line: 48, column: 39, scope: !6230)
!6234 = !DILocation(line: 48, column: 3, scope: !6230)
!6235 = !DILocation(line: 49, column: 3, scope: !6230)
!6236 = !DILocation(line: 52, column: 6, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6177, file: !5982, line: 52, column: 6)
!6238 = !DILocation(line: 52, column: 12, scope: !6237)
!6239 = !DILocation(line: 52, column: 6, scope: !6177)
!6240 = !DILocation(line: 53, column: 7, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6242, file: !5982, line: 53, column: 7)
!6242 = distinct !DILexicalBlock(scope: !6237, file: !5982, line: 52, column: 53)
!6243 = !DILocation(line: 53, column: 13, scope: !6241)
!6244 = !DILocation(line: 53, column: 7, scope: !6242)
!6245 = !DILocation(line: 54, column: 27, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6241, file: !5982, line: 53, column: 32)
!6247 = !DILocation(line: 54, column: 32, scope: !6246)
!6248 = !DILocation(line: 54, column: 24, scope: !6246)
!6249 = !DILocation(line: 54, column: 4, scope: !6246)
!6250 = !DILocation(line: 54, column: 8, scope: !6246)
!6251 = !DILocation(line: 54, column: 15, scope: !6246)
!6252 = !DILocation(line: 54, column: 19, scope: !6246)
!6253 = !DILocation(line: 55, column: 3, scope: !6246)
!6254 = !DILocation(line: 57, column: 10, scope: !6242)
!6255 = !DILocation(line: 57, column: 14, scope: !6242)
!6256 = !DILocation(line: 57, column: 21, scope: !6242)
!6257 = !DILocation(line: 58, column: 2, scope: !6242)
!6258 = !DILocation(line: 60, column: 6, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6177, file: !5982, line: 60, column: 6)
!6260 = !DILocation(line: 60, column: 12, scope: !6259)
!6261 = !DILocation(line: 60, column: 6, scope: !6177)
!6262 = !DILocation(line: 61, column: 10, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6259, file: !5982, line: 60, column: 37)
!6264 = !DILocation(line: 61, column: 14, scope: !6263)
!6265 = !DILocation(line: 61, column: 19, scope: !6263)
!6266 = !DILocation(line: 62, column: 2, scope: !6263)
!6267 = !DILocation(line: 64, column: 6, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6177, file: !5982, line: 64, column: 6)
!6269 = !DILocation(line: 64, column: 12, scope: !6268)
!6270 = !DILocation(line: 64, column: 6, scope: !6177)
!6271 = !DILocation(line: 65, column: 26, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6268, file: !5982, line: 64, column: 38)
!6273 = !DILocation(line: 65, column: 31, scope: !6272)
!6274 = !DILocation(line: 65, column: 23, scope: !6272)
!6275 = !DILocation(line: 65, column: 3, scope: !6272)
!6276 = !DILocation(line: 65, column: 7, scope: !6272)
!6277 = !DILocation(line: 65, column: 14, scope: !6272)
!6278 = !DILocation(line: 65, column: 18, scope: !6272)
!6279 = !DILocation(line: 66, column: 2, scope: !6272)
!6280 = !DILocation(line: 68, column: 6, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6177, file: !5982, line: 68, column: 6)
!6282 = !DILocation(line: 68, column: 12, scope: !6281)
!6283 = !DILocation(line: 68, column: 6, scope: !6177)
!6284 = !DILocation(line: 69, column: 10, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6281, file: !5982, line: 68, column: 42)
!6286 = !DILocation(line: 69, column: 14, scope: !6285)
!6287 = !DILocation(line: 69, column: 21, scope: !6285)
!6288 = !DILocation(line: 70, column: 2, scope: !6285)
!6289 = !DILocation(line: 72, column: 2, scope: !6177)
!6290 = !DILocation(line: 72, column: 6, scope: !6177)
!6291 = !DILocation(line: 72, column: 13, scope: !6177)
!6292 = !DILocation(line: 72, column: 18, scope: !6177)
!6293 = !DILocation(line: 72, column: 27, scope: !6177)
!6294 = !DILocation(line: 73, column: 1, scope: !6177)
!6295 = distinct !DISubprogram(name: "soc_port_list_configure", scope: !5982, file: !5982, line: 75, type: !6296, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3316, retainedNodes: !223)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{null, !6180, !32}
!6298 = !DILocalVariable(name: "pins", arg: 1, scope: !6295, file: !5982, line: 75, type: !6180)
!6299 = !DILocation(line: 75, column: 56, scope: !6295)
!6300 = !DILocalVariable(name: "size", arg: 2, scope: !6295, file: !5982, line: 76, type: !32)
!6301 = !DILocation(line: 76, column: 22, scope: !6295)
!6302 = !DILocalVariable(name: "i", scope: !6303, file: !5982, line: 78, type: !103)
!6303 = distinct !DILexicalBlock(scope: !6295, file: !5982, line: 78, column: 2)
!6304 = !DILocation(line: 78, column: 11, scope: !6303)
!6305 = !DILocation(line: 78, column: 7, scope: !6303)
!6306 = !DILocation(line: 78, column: 18, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6303, file: !5982, line: 78, column: 2)
!6308 = !DILocation(line: 78, column: 22, scope: !6307)
!6309 = !DILocation(line: 78, column: 20, scope: !6307)
!6310 = !DILocation(line: 78, column: 2, scope: !6303)
!6311 = !DILocation(line: 79, column: 23, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6307, file: !5982, line: 78, column: 33)
!6313 = !DILocation(line: 79, column: 28, scope: !6312)
!6314 = !DILocation(line: 79, column: 3, scope: !6312)
!6315 = !DILocation(line: 80, column: 2, scope: !6312)
!6316 = !DILocation(line: 78, column: 29, scope: !6307)
!6317 = !DILocation(line: 78, column: 2, scope: !6307)
!6318 = distinct !{!6318, !6310, !6319}
!6319 = !DILocation(line: 80, column: 2, scope: !6303)
!6320 = !DILocation(line: 81, column: 1, scope: !6295)
!6321 = distinct !DISubprogram(name: "atmel_samd_init", scope: !1012, file: !1012, line: 175, type: !1019, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6322 = !DILocalVariable(name: "arg", arg: 1, scope: !6321, file: !1012, line: 175, type: !1021)
!6323 = !DILocation(line: 175, column: 49, scope: !6321)
!6324 = !DILocalVariable(name: "key", scope: !6321, file: !1012, line: 177, type: !173)
!6325 = !DILocation(line: 177, column: 11, scope: !6321)
!6326 = !DILocation(line: 179, column: 2, scope: !6321)
!6327 = !DILocalVariable(name: "key", scope: !6328, file: !6329, line: 44, type: !32)
!6328 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6329, file: !6329, line: 42, type: !6330, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6329 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6330 = !DISubroutineType(types: !6331)
!6331 = !{!32}
!6332 = !DILocation(line: 44, column: 15, scope: !6328, inlinedAt: !6333)
!6333 = distinct !DILocation(line: 181, column: 8, scope: !6321)
!6334 = !DILocation(line: 47, column: 2, scope: !6328, inlinedAt: !6333)
!6335 = !{i64 1127542}
!6336 = !DILocation(line: 76, column: 9, scope: !6328, inlinedAt: !6333)
!6337 = !DILocation(line: 181, column: 6, scope: !6321)
!6338 = !DILocation(line: 183, column: 2, scope: !6321)
!6339 = !DILocation(line: 184, column: 2, scope: !6321)
!6340 = !DILocation(line: 185, column: 2, scope: !6321)
!6341 = !DILocation(line: 186, column: 2, scope: !6321)
!6342 = !DILocation(line: 187, column: 2, scope: !6321)
!6343 = !DILocation(line: 188, column: 2, scope: !6321)
!6344 = !DILocation(line: 189, column: 2, scope: !6321)
!6345 = !DILocation(line: 190, column: 2, scope: !6321)
!6346 = !DILocation(line: 197, column: 2, scope: !6321)
!6347 = !DILocalVariable(name: "key", arg: 1, scope: !6348, file: !6329, line: 84, type: !32)
!6348 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6329, file: !6329, line: 84, type: !6349, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6349 = !DISubroutineType(types: !6350)
!6350 = !{null, !32}
!6351 = !DILocation(line: 84, column: 56, scope: !6348, inlinedAt: !6352)
!6352 = distinct !DILocation(line: 197, column: 2, scope: !6321)
!6353 = !DILocation(line: 87, column: 6, scope: !6354, inlinedAt: !6352)
!6354 = distinct !DILexicalBlock(scope: !6348, file: !6329, line: 87, column: 6)
!6355 = !DILocation(line: 87, column: 10, scope: !6354, inlinedAt: !6352)
!6356 = !DILocation(line: 87, column: 6, scope: !6348, inlinedAt: !6352)
!6357 = !DILocation(line: 88, column: 3, scope: !6358, inlinedAt: !6352)
!6358 = distinct !DILexicalBlock(scope: !6354, file: !6329, line: 87, column: 17)
!6359 = !DILocation(line: 90, column: 2, scope: !6348, inlinedAt: !6352)
!6360 = !{i64 1128406}
!6361 = !DILocation(line: 110, column: 1, scope: !6348, inlinedAt: !6352)
!6362 = !DILocation(line: 199, column: 2, scope: !6321)
!6363 = distinct !DISubprogram(name: "flash_waitstates_init", scope: !1012, file: !1012, line: 19, type: !253, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6364 = !DILocation(line: 22, column: 25, scope: !6363)
!6365 = !DILocation(line: 23, column: 1, scope: !6363)
!6366 = distinct !DISubprogram(name: "osc8m_init", scope: !1012, file: !1012, line: 133, type: !253, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6367 = !DILocation(line: 136, column: 27, scope: !6366)
!6368 = !DILocation(line: 137, column: 30, scope: !6366)
!6369 = !DILocation(line: 138, column: 1, scope: !6366)
!6370 = distinct !DISubprogram(name: "osc32k_init", scope: !1012, file: !1012, line: 56, type: !253, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6371 = !DILocalVariable(name: "fuse", scope: !6370, file: !1012, line: 59, type: !173)
!6372 = !DILocation(line: 59, column: 11, scope: !6370)
!6373 = !DILocation(line: 59, column: 18, scope: !6370)
!6374 = !DILocalVariable(name: "calib", scope: !6370, file: !1012, line: 60, type: !173)
!6375 = !DILocation(line: 60, column: 11, scope: !6370)
!6376 = !DILocation(line: 60, column: 20, scope: !6370)
!6377 = !DILocation(line: 60, column: 25, scope: !6370)
!6378 = !DILocation(line: 60, column: 49, scope: !6370)
!6379 = !DILocation(line: 66, column: 24, scope: !6370)
!6380 = !DILocation(line: 66, column: 52, scope: !6370)
!6381 = !DILocation(line: 67, column: 39, scope: !6370)
!6382 = !DILocation(line: 68, column: 31, scope: !6370)
!6383 = !DILocation(line: 66, column: 22, scope: !6370)
!6384 = !DILocation(line: 71, column: 2, scope: !6370)
!6385 = !DILocation(line: 71, column: 30, scope: !6370)
!6386 = !DILocation(line: 71, column: 9, scope: !6370)
!6387 = distinct !{!6387, !6384, !6388}
!6388 = !DILocation(line: 72, column: 2, scope: !6370)
!6389 = !DILocation(line: 73, column: 1, scope: !6370)
!6390 = distinct !DISubprogram(name: "xosc_init", scope: !1012, file: !1012, line: 30, type: !253, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6391 = !DILocation(line: 35, column: 1, scope: !6390)
!6392 = distinct !DISubprogram(name: "xosc32k_init", scope: !1012, file: !1012, line: 43, type: !253, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6393 = !DILocation(line: 54, column: 1, scope: !6392)
!6394 = distinct !DISubprogram(name: "dfll_init", scope: !1012, file: !1012, line: 75, type: !253, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6395 = !DILocation(line: 78, column: 19, scope: !6394)
!6396 = !DILocation(line: 79, column: 2, scope: !6394)
!6397 = !DILocation(line: 88, column: 20, scope: !6394)
!6398 = !DILocation(line: 94, column: 2, scope: !6394)
!6399 = !DILocation(line: 97, column: 20, scope: !6394)
!6400 = !DILocation(line: 99, column: 2, scope: !6394)
!6401 = !DILocation(line: 101, column: 24, scope: !6394)
!6402 = !DILocation(line: 102, column: 2, scope: !6394)
!6403 = !DILocation(line: 102, column: 30, scope: !6394)
!6404 = !DILocation(line: 102, column: 9, scope: !6394)
!6405 = distinct !{!6405, !6402, !6406}
!6406 = !DILocation(line: 103, column: 2, scope: !6394)
!6407 = !DILocalVariable(name: "mul", scope: !6394, file: !1012, line: 105, type: !173)
!6408 = !DILocation(line: 105, column: 11, scope: !6394)
!6409 = !DILocation(line: 111, column: 11, scope: !6394)
!6410 = !DILocation(line: 110, column: 38, scope: !6394)
!6411 = !DILocation(line: 109, column: 23, scope: !6394)
!6412 = !DILocation(line: 112, column: 2, scope: !6394)
!6413 = !DILocation(line: 112, column: 30, scope: !6394)
!6414 = !DILocation(line: 112, column: 9, scope: !6394)
!6415 = distinct !{!6415, !6412, !6416}
!6416 = !DILocation(line: 113, column: 2, scope: !6394)
!6417 = !DILocation(line: 115, column: 24, scope: !6394)
!6418 = !DILocation(line: 120, column: 2, scope: !6394)
!6419 = !DILocation(line: 120, column: 30, scope: !6394)
!6420 = !DILocation(line: 120, column: 9, scope: !6394)
!6421 = distinct !{!6421, !6418, !6422}
!6422 = !DILocation(line: 121, column: 2, scope: !6394)
!6423 = !DILocation(line: 124, column: 31, scope: !6394)
!6424 = !DILocation(line: 126, column: 2, scope: !6394)
!6425 = !DILocation(line: 126, column: 30, scope: !6394)
!6426 = !DILocation(line: 126, column: 10, scope: !6394)
!6427 = !DILocation(line: 126, column: 39, scope: !6394)
!6428 = !DILocation(line: 126, column: 63, scope: !6394)
!6429 = !DILocation(line: 126, column: 42, scope: !6394)
!6430 = distinct !{!6430, !6424, !6431}
!6431 = !DILocation(line: 127, column: 2, scope: !6394)
!6432 = !DILocation(line: 129, column: 2, scope: !6394)
!6433 = !DILocation(line: 129, column: 30, scope: !6394)
!6434 = !DILocation(line: 129, column: 9, scope: !6394)
!6435 = distinct !{!6435, !6432, !6436}
!6436 = !DILocation(line: 130, column: 2, scope: !6394)
!6437 = !DILocation(line: 131, column: 1, scope: !6394)
!6438 = distinct !DISubprogram(name: "gclks_init", scope: !1012, file: !1012, line: 140, type: !253, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6439 = !DILocation(line: 143, column: 19, scope: !6438)
!6440 = !DILocation(line: 144, column: 2, scope: !6438)
!6441 = !DILocation(line: 146, column: 20, scope: !6438)
!6442 = !DILocation(line: 148, column: 2, scope: !6438)
!6443 = !DILocation(line: 151, column: 20, scope: !6438)
!6444 = !DILocation(line: 153, column: 2, scope: !6438)
!6445 = !DILocation(line: 156, column: 19, scope: !6438)
!6446 = !DILocation(line: 157, column: 2, scope: !6438)
!6447 = !DILocation(line: 159, column: 20, scope: !6438)
!6448 = !DILocation(line: 161, column: 2, scope: !6438)
!6449 = !DILocation(line: 162, column: 1, scope: !6438)
!6450 = distinct !DISubprogram(name: "dividers_init", scope: !1012, file: !1012, line: 164, type: !253, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6451 = !DILocation(line: 167, column: 17, scope: !6450)
!6452 = !DILocation(line: 168, column: 18, scope: !6450)
!6453 = !DILocation(line: 169, column: 18, scope: !6450)
!6454 = !DILocation(line: 170, column: 18, scope: !6450)
!6455 = !DILocation(line: 173, column: 1, scope: !6450)
!6456 = distinct !DISubprogram(name: "wait_gclk_synchronization", scope: !1012, file: !1012, line: 37, type: !253, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!6457 = !DILocation(line: 39, column: 2, scope: !6456)
!6458 = !DILocation(line: 39, column: 26, scope: !6456)
!6459 = distinct !{!6459, !6457, !6460}
!6460 = !DILocation(line: 40, column: 2, scope: !6456)
!6461 = !DILocation(line: 41, column: 1, scope: !6456)
!6462 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6463, file: !6463, line: 57, type: !6464, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3318, retainedNodes: !223)
!6463 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6464 = !DISubroutineType(types: !6465)
!6465 = !{null, !32, !6466}
!6466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6467, size: 32)
!6467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6468)
!6468 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3391, line: 141, baseType: !6469)
!6469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3391, line: 97, size: 256, elements: !6470)
!6470 = !{!6471}
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6469, file: !3391, line: 107, baseType: !6472, size: 256)
!6472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3391, line: 98, size: 256, elements: !6473)
!6473 = !{!6474, !6479, !6484, !6489, !6494, !6499, !6504, !6509}
!6474 = !DIDerivedType(tag: DW_TAG_member, scope: !6472, file: !3391, line: 99, baseType: !6475, size: 32)
!6475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6472, file: !3391, line: 99, size: 32, elements: !6476)
!6476 = !{!6477, !6478}
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6475, file: !3391, line: 99, baseType: !173, size: 32)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6475, file: !3391, line: 99, baseType: !173, size: 32)
!6479 = !DIDerivedType(tag: DW_TAG_member, scope: !6472, file: !3391, line: 100, baseType: !6480, size: 32, offset: 32)
!6480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6472, file: !3391, line: 100, size: 32, elements: !6481)
!6481 = !{!6482, !6483}
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6480, file: !3391, line: 100, baseType: !173, size: 32)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6480, file: !3391, line: 100, baseType: !173, size: 32)
!6484 = !DIDerivedType(tag: DW_TAG_member, scope: !6472, file: !3391, line: 101, baseType: !6485, size: 32, offset: 64)
!6485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6472, file: !3391, line: 101, size: 32, elements: !6486)
!6486 = !{!6487, !6488}
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6485, file: !3391, line: 101, baseType: !173, size: 32)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6485, file: !3391, line: 101, baseType: !173, size: 32)
!6489 = !DIDerivedType(tag: DW_TAG_member, scope: !6472, file: !3391, line: 102, baseType: !6490, size: 32, offset: 96)
!6490 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6472, file: !3391, line: 102, size: 32, elements: !6491)
!6491 = !{!6492, !6493}
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6490, file: !3391, line: 102, baseType: !173, size: 32)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6490, file: !3391, line: 102, baseType: !173, size: 32)
!6494 = !DIDerivedType(tag: DW_TAG_member, scope: !6472, file: !3391, line: 103, baseType: !6495, size: 32, offset: 128)
!6495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6472, file: !3391, line: 103, size: 32, elements: !6496)
!6496 = !{!6497, !6498}
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6495, file: !3391, line: 103, baseType: !173, size: 32)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6495, file: !3391, line: 103, baseType: !173, size: 32)
!6499 = !DIDerivedType(tag: DW_TAG_member, scope: !6472, file: !3391, line: 104, baseType: !6500, size: 32, offset: 160)
!6500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6472, file: !3391, line: 104, size: 32, elements: !6501)
!6501 = !{!6502, !6503}
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6500, file: !3391, line: 104, baseType: !173, size: 32)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6500, file: !3391, line: 104, baseType: !173, size: 32)
!6504 = !DIDerivedType(tag: DW_TAG_member, scope: !6472, file: !3391, line: 105, baseType: !6505, size: 32, offset: 192)
!6505 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6472, file: !3391, line: 105, size: 32, elements: !6506)
!6506 = !{!6507, !6508}
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6505, file: !3391, line: 105, baseType: !173, size: 32)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6505, file: !3391, line: 105, baseType: !173, size: 32)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6472, file: !3391, line: 106, baseType: !173, size: 32, offset: 224)
!6510 = !DILocalVariable(name: "reason", arg: 1, scope: !6462, file: !6463, line: 57, type: !32)
!6511 = !DILocation(line: 57, column: 37, scope: !6462)
!6512 = !DILocalVariable(name: "esf", arg: 2, scope: !6462, file: !6463, line: 57, type: !6466)
!6513 = !DILocation(line: 57, column: 65, scope: !6462)
!6514 = !DILocation(line: 60, column: 6, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6462, file: !6463, line: 60, column: 6)
!6516 = !DILocation(line: 60, column: 10, scope: !6515)
!6517 = !DILocation(line: 60, column: 6, scope: !6462)
!6518 = !DILocation(line: 61, column: 12, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6515, file: !6463, line: 60, column: 19)
!6520 = !DILocation(line: 61, column: 3, scope: !6519)
!6521 = !DILocation(line: 62, column: 2, scope: !6519)
!6522 = !DILocation(line: 63, column: 16, scope: !6462)
!6523 = !DILocation(line: 63, column: 24, scope: !6462)
!6524 = !DILocation(line: 63, column: 2, scope: !6462)
!6525 = !DILocation(line: 64, column: 1, scope: !6462)
!6526 = distinct !DISubprogram(name: "esf_dump", scope: !6463, file: !6463, line: 20, type: !6527, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3318, retainedNodes: !223)
!6527 = !DISubroutineType(types: !6528)
!6528 = !{null, !6466}
!6529 = !DILocalVariable(name: "esf", arg: 1, scope: !6526, file: !6463, line: 20, type: !6466)
!6530 = !DILocation(line: 20, column: 42, scope: !6526)
!6531 = !DILocation(line: 22, column: 2, scope: !6526)
!6532 = !DILocation(line: 22, column: 2, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6534, file: !6463, line: 22, column: 2)
!6534 = distinct !DILexicalBlock(scope: !6535, file: !6463, line: 22, column: 2)
!6535 = distinct !DILexicalBlock(scope: !6526, file: !6463, line: 22, column: 2)
!6536 = !DILocation(line: 24, column: 2, scope: !6526)
!6537 = !DILocation(line: 24, column: 2, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6539, file: !6463, line: 24, column: 2)
!6539 = distinct !DILexicalBlock(scope: !6540, file: !6463, line: 24, column: 2)
!6540 = distinct !DILexicalBlock(scope: !6526, file: !6463, line: 24, column: 2)
!6541 = !DILocation(line: 26, column: 2, scope: !6526)
!6542 = !DILocation(line: 26, column: 2, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6544, file: !6463, line: 26, column: 2)
!6544 = distinct !DILexicalBlock(scope: !6545, file: !6463, line: 26, column: 2)
!6545 = distinct !DILexicalBlock(scope: !6526, file: !6463, line: 26, column: 2)
!6546 = !DILocation(line: 53, column: 2, scope: !6526)
!6547 = !DILocation(line: 53, column: 2, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !6463, line: 53, column: 2)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !6463, line: 53, column: 2)
!6550 = distinct !DILexicalBlock(scope: !6526, file: !6463, line: 53, column: 2)
!6551 = !DILocation(line: 55, column: 1, scope: !6526)
!6552 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6463, file: !6463, line: 82, type: !6553, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3318, retainedNodes: !223)
!6553 = !DISubroutineType(types: !6554)
!6554 = !{null, !6466, !6555}
!6555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6556, size: 32)
!6556 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !190, line: 37, baseType: !6557)
!6557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !6558)
!6558 = !{!6559, !6560, !6561, !6562, !6563, !6564, !6565, !6566, !6567}
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6557, file: !190, line: 26, baseType: !173, size: 32)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6557, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6557, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6557, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6557, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6557, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6557, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6557, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6557, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!6568 = !DILocalVariable(name: "esf", arg: 1, scope: !6552, file: !6463, line: 82, type: !6466)
!6569 = !DILocation(line: 82, column: 43, scope: !6552)
!6570 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6552, file: !6463, line: 82, type: !6555)
!6571 = !DILocation(line: 82, column: 65, scope: !6552)
!6572 = !DILocation(line: 85, column: 2, scope: !6552)
!6573 = !DILocalVariable(name: "reason", scope: !6552, file: !6463, line: 88, type: !32)
!6574 = !DILocation(line: 88, column: 15, scope: !6552)
!6575 = !DILocation(line: 88, column: 24, scope: !6552)
!6576 = !DILocation(line: 88, column: 29, scope: !6552)
!6577 = !DILocation(line: 88, column: 35, scope: !6552)
!6578 = !DILocation(line: 108, column: 20, scope: !6552)
!6579 = !DILocation(line: 108, column: 28, scope: !6552)
!6580 = !DILocation(line: 108, column: 2, scope: !6552)
!6581 = !DILocation(line: 131, column: 1, scope: !6552)
!6582 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6463, file: !6463, line: 133, type: !6583, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3318, retainedNodes: !223)
!6583 = !DISubroutineType(types: !6584)
!6584 = !{null, !102}
!6585 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6582, file: !6463, line: 133, type: !102)
!6586 = !DILocation(line: 133, column: 44, scope: !6582)
!6587 = !DILocalVariable(name: "ssf_contents", scope: !6582, file: !6463, line: 135, type: !742)
!6588 = !DILocation(line: 135, column: 12, scope: !6582)
!6589 = !DILocation(line: 135, column: 27, scope: !6582)
!6590 = !DILocalVariable(name: "oops_esf", scope: !6582, file: !6463, line: 136, type: !6468)
!6591 = !DILocation(line: 136, column: 15, scope: !6582)
!6592 = !DILocation(line: 139, column: 22, scope: !6582)
!6593 = !DILocation(line: 139, column: 11, scope: !6582)
!6594 = !DILocation(line: 139, column: 17, scope: !6582)
!6595 = !DILocation(line: 139, column: 20, scope: !6582)
!6596 = !DILocation(line: 141, column: 2, scope: !6582)
!6597 = !DILocation(line: 142, column: 2, scope: !6582)
!6598 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6599, file: !6599, line: 40, type: !6349, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3320, retainedNodes: !223)
!6599 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6600 = !DILocalVariable(name: "irq", arg: 1, scope: !6598, file: !6599, line: 40, type: !32)
!6601 = !DILocation(line: 40, column: 35, scope: !6598)
!6602 = !DILocation(line: 42, column: 28, scope: !6598)
!6603 = !DILocation(line: 42, column: 2, scope: !6598)
!6604 = !DILocation(line: 43, column: 1, scope: !6598)
!6605 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !2530, file: !2530, line: 741, type: !6606, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3320, retainedNodes: !223)
!6606 = !DISubroutineType(types: !6607)
!6607 = !{null, !3324}
!6608 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6605, file: !2530, line: 741, type: !3324)
!6609 = !DILocation(line: 741, column: 49, scope: !6605)
!6610 = !DILocation(line: 743, column: 17, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6605, file: !2530, line: 743, column: 7)
!6612 = !DILocation(line: 743, column: 23, scope: !6611)
!6613 = !DILocation(line: 743, column: 7, scope: !6605)
!6614 = !DILocation(line: 745, column: 5, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6611, file: !2530, line: 744, column: 3)
!6616 = !{i64 2149810301}
!6617 = !DILocation(line: 746, column: 52, scope: !6615)
!6618 = !DILocation(line: 746, column: 58, scope: !6615)
!6619 = !DILocation(line: 746, column: 37, scope: !6615)
!6620 = !DILocation(line: 746, column: 20, scope: !6615)
!6621 = !DILocation(line: 747, column: 5, scope: !6615)
!6622 = !{i64 2149810415}
!6623 = !DILocation(line: 748, column: 3, scope: !6615)
!6624 = !DILocation(line: 749, column: 1, scope: !6605)
!6625 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6599, file: !6599, line: 45, type: !6349, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3320, retainedNodes: !223)
!6626 = !DILocalVariable(name: "irq", arg: 1, scope: !6625, file: !6599, line: 45, type: !32)
!6627 = !DILocation(line: 45, column: 36, scope: !6625)
!6628 = !DILocation(line: 47, column: 29, scope: !6625)
!6629 = !DILocation(line: 47, column: 2, scope: !6625)
!6630 = !DILocation(line: 48, column: 1, scope: !6625)
!6631 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !2530, file: !2530, line: 779, type: !6606, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3320, retainedNodes: !223)
!6632 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6631, file: !2530, line: 779, type: !3324)
!6633 = !DILocation(line: 779, column: 50, scope: !6631)
!6634 = !DILocation(line: 781, column: 17, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6631, file: !2530, line: 781, column: 7)
!6636 = !DILocation(line: 781, column: 23, scope: !6635)
!6637 = !DILocation(line: 781, column: 7, scope: !6631)
!6638 = !DILocation(line: 783, column: 52, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6635, file: !2530, line: 782, column: 3)
!6640 = !DILocation(line: 783, column: 58, scope: !6639)
!6641 = !DILocation(line: 783, column: 37, scope: !6639)
!6642 = !DILocation(line: 783, column: 20, scope: !6639)
!6643 = !DILocation(line: 271, column: 3, scope: !6644, inlinedAt: !6646)
!6644 = distinct !DISubprogram(name: "__DSB", scope: !6645, file: !6645, line: 269, type: !253, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3320, retainedNodes: !223)
!6645 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6646 = distinct !DILocation(line: 784, column: 5, scope: !6639)
!6647 = !{i64 2270240}
!6648 = !DILocation(line: 260, column: 3, scope: !6649, inlinedAt: !6650)
!6649 = distinct !DISubprogram(name: "__ISB", scope: !6645, file: !6645, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3320, retainedNodes: !223)
!6650 = distinct !DILocation(line: 785, column: 5, scope: !6639)
!6651 = !{i64 2269957}
!6652 = !DILocation(line: 786, column: 3, scope: !6639)
!6653 = !DILocation(line: 787, column: 1, scope: !6631)
!6654 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6599, file: !6599, line: 50, type: !6655, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3320, retainedNodes: !223)
!6655 = !DISubroutineType(types: !6656)
!6656 = !{!103, !32}
!6657 = !DILocalVariable(name: "irq", arg: 1, scope: !6654, file: !6599, line: 50, type: !32)
!6658 = !DILocation(line: 50, column: 38, scope: !6654)
!6659 = !DILocation(line: 52, column: 20, scope: !6654)
!6660 = !DILocation(line: 52, column: 9, scope: !6654)
!6661 = !DILocation(line: 52, column: 41, scope: !6654)
!6662 = !DILocation(line: 52, column: 39, scope: !6654)
!6663 = !DILocation(line: 52, column: 2, scope: !6654)
!6664 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6599, file: !6599, line: 64, type: !6665, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3320, retainedNodes: !223)
!6665 = !DISubroutineType(types: !6666)
!6666 = !{null, !32, !32, !173}
!6667 = !DILocalVariable(name: "irq", arg: 1, scope: !6664, file: !6599, line: 64, type: !32)
!6668 = !DILocation(line: 64, column: 42, scope: !6664)
!6669 = !DILocalVariable(name: "prio", arg: 2, scope: !6664, file: !6599, line: 64, type: !32)
!6670 = !DILocation(line: 64, column: 60, scope: !6664)
!6671 = !DILocalVariable(name: "flags", arg: 3, scope: !6664, file: !6599, line: 64, type: !173)
!6672 = !DILocation(line: 64, column: 75, scope: !6664)
!6673 = !DILocation(line: 83, column: 8, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6675, file: !6599, line: 82, column: 9)
!6675 = distinct !DILexicalBlock(scope: !6664, file: !6599, line: 76, column: 6)
!6676 = !DILocation(line: 95, column: 30, scope: !6664)
!6677 = !DILocation(line: 95, column: 35, scope: !6664)
!6678 = !DILocation(line: 95, column: 2, scope: !6664)
!6679 = !DILocation(line: 96, column: 1, scope: !6664)
!6680 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2530, file: !2530, line: 850, type: !6681, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3320, retainedNodes: !223)
!6681 = !DISubroutineType(types: !6682)
!6682 = !{null, !3324, !173}
!6683 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6680, file: !2530, line: 850, type: !3324)
!6684 = !DILocation(line: 850, column: 51, scope: !6680)
!6685 = !DILocalVariable(name: "priority", arg: 2, scope: !6680, file: !2530, line: 850, type: !173)
!6686 = !DILocation(line: 850, column: 66, scope: !6680)
!6687 = !DILocation(line: 852, column: 17, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6680, file: !2530, line: 852, column: 7)
!6689 = !DILocation(line: 852, column: 23, scope: !6688)
!6690 = !DILocation(line: 852, column: 7, scope: !6680)
!6691 = !DILocation(line: 854, column: 53, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6688, file: !2530, line: 853, column: 3)
!6693 = !DILocation(line: 854, column: 44, scope: !6692)
!6694 = !DILocation(line: 854, column: 83, scope: !6692)
!6695 = !DILocation(line: 854, column: 80, scope: !6692)
!6696 = !DILocation(line: 854, column: 71, scope: !6692)
!6697 = !DILocation(line: 854, column: 69, scope: !6692)
!6698 = !DILocation(line: 855, column: 11, scope: !6692)
!6699 = !DILocation(line: 855, column: 20, scope: !6692)
!6700 = !DILocation(line: 855, column: 48, scope: !6692)
!6701 = !DILocation(line: 855, column: 71, scope: !6692)
!6702 = !DILocation(line: 855, column: 68, scope: !6692)
!6703 = !DILocation(line: 854, column: 102, scope: !6692)
!6704 = !DILocation(line: 854, column: 14, scope: !6692)
!6705 = !DILocation(line: 854, column: 5, scope: !6692)
!6706 = !DILocation(line: 854, column: 30, scope: !6692)
!6707 = !DILocation(line: 856, column: 3, scope: !6692)
!6708 = !DILocation(line: 859, column: 53, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6688, file: !2530, line: 858, column: 3)
!6710 = !DILocation(line: 859, column: 44, scope: !6709)
!6711 = !DILocation(line: 859, column: 83, scope: !6709)
!6712 = !DILocation(line: 859, column: 80, scope: !6709)
!6713 = !DILocation(line: 859, column: 71, scope: !6709)
!6714 = !DILocation(line: 859, column: 69, scope: !6709)
!6715 = !DILocation(line: 860, column: 11, scope: !6709)
!6716 = !DILocation(line: 860, column: 20, scope: !6709)
!6717 = !DILocation(line: 860, column: 48, scope: !6709)
!6718 = !DILocation(line: 860, column: 71, scope: !6709)
!6719 = !DILocation(line: 860, column: 68, scope: !6709)
!6720 = !DILocation(line: 859, column: 102, scope: !6709)
!6721 = !DILocation(line: 859, column: 14, scope: !6709)
!6722 = !DILocation(line: 859, column: 5, scope: !6709)
!6723 = !DILocation(line: 859, column: 30, scope: !6709)
!6724 = !DILocation(line: 862, column: 1, scope: !6680)
!6725 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6599, file: !6599, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3320, retainedNodes: !223)
!6726 = !DILocalVariable(name: "unused", arg: 1, scope: !6725, file: !6599, line: 155, type: !13)
!6727 = !DILocation(line: 155, column: 33, scope: !6725)
!6728 = !DILocation(line: 157, column: 2, scope: !6725)
!6729 = !DILocation(line: 159, column: 2, scope: !6725)
!6730 = !DILocation(line: 160, column: 1, scope: !6725)
!6731 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6732, file: !6732, line: 87, type: !253, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3352, retainedNodes: !223)
!6732 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6733 = !DILocation(line: 89, column: 2, scope: !6731)
!6734 = !DILocation(line: 90, column: 2, scope: !6731)
!6735 = !DILocation(line: 91, column: 1, scope: !6731)
!6736 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6737, file: !6737, line: 256, type: !253, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3354, retainedNodes: !223)
!6737 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6738 = !DILocation(line: 258, column: 2, scope: !6736)
!6739 = !DILocation(line: 262, column: 2, scope: !6736)
!6740 = !DILocation(line: 263, column: 2, scope: !6736)
!6741 = !DILocation(line: 267, column: 2, scope: !6736)
!6742 = !DILocation(line: 268, column: 2, scope: !6736)
!6743 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6737, file: !6737, line: 53, type: !253, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3354, retainedNodes: !223)
!6744 = !DILocation(line: 55, column: 12, scope: !6743)
!6745 = !DILocation(line: 271, column: 3, scope: !6746, inlinedAt: !6747)
!6746 = distinct !DISubprogram(name: "__DSB", scope: !6645, file: !6645, line: 269, type: !253, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3354, retainedNodes: !223)
!6747 = distinct !DILocation(line: 56, column: 2, scope: !6743)
!6748 = !{i64 2306014}
!6749 = !DILocation(line: 260, column: 3, scope: !6750, inlinedAt: !6751)
!6750 = distinct !DISubprogram(name: "__ISB", scope: !6645, file: !6645, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3354, retainedNodes: !223)
!6751 = distinct !DILocation(line: 57, column: 2, scope: !6743)
!6752 = !{i64 2305731}
!6753 = !DILocation(line: 58, column: 1, scope: !6743)
!6754 = distinct !DISubprogram(name: "arch_swap", scope: !6755, file: !6755, line: 33, type: !6655, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3370, retainedNodes: !223)
!6755 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6756 = !DILocalVariable(name: "key", arg: 1, scope: !6754, file: !6755, line: 33, type: !32)
!6757 = !DILocation(line: 33, column: 28, scope: !6754)
!6758 = !DILocation(line: 36, column: 27, scope: !6754)
!6759 = !DILocation(line: 36, column: 2, scope: !6754)
!6760 = !DILocation(line: 36, column: 12, scope: !6754)
!6761 = !DILocation(line: 36, column: 17, scope: !6754)
!6762 = !DILocation(line: 36, column: 25, scope: !6754)
!6763 = !DILocation(line: 37, column: 37, scope: !6754)
!6764 = !DILocation(line: 37, column: 2, scope: !6754)
!6765 = !DILocation(line: 37, column: 12, scope: !6754)
!6766 = !DILocation(line: 37, column: 17, scope: !6754)
!6767 = !DILocation(line: 37, column: 35, scope: !6754)
!6768 = !DILocation(line: 41, column: 12, scope: !6754)
!6769 = !DILocalVariable(name: "key", arg: 1, scope: !6770, file: !6329, line: 84, type: !32)
!6770 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6329, file: !6329, line: 84, type: !6349, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3370, retainedNodes: !223)
!6771 = !DILocation(line: 84, column: 56, scope: !6770, inlinedAt: !6772)
!6772 = distinct !DILocation(line: 44, column: 2, scope: !6754)
!6773 = !DILocation(line: 87, column: 6, scope: !6774, inlinedAt: !6772)
!6774 = distinct !DILexicalBlock(scope: !6770, file: !6329, line: 87, column: 6)
!6775 = !DILocation(line: 87, column: 10, scope: !6774, inlinedAt: !6772)
!6776 = !DILocation(line: 87, column: 6, scope: !6770, inlinedAt: !6772)
!6777 = !DILocation(line: 88, column: 3, scope: !6778, inlinedAt: !6772)
!6778 = distinct !DILexicalBlock(scope: !6774, file: !6329, line: 87, column: 17)
!6779 = !DILocation(line: 90, column: 2, scope: !6770, inlinedAt: !6772)
!6780 = !{i64 1449857}
!6781 = !DILocation(line: 110, column: 1, scope: !6770, inlinedAt: !6772)
!6782 = !DILocation(line: 53, column: 9, scope: !6754)
!6783 = !DILocation(line: 53, column: 19, scope: !6754)
!6784 = !DILocation(line: 53, column: 24, scope: !6754)
!6785 = !DILocation(line: 53, column: 2, scope: !6754)
!6786 = distinct !DISubprogram(name: "arch_new_thread", scope: !6787, file: !6787, line: 56, type: !6788, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3386, retainedNodes: !223)
!6787 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6788 = !DISubroutineType(types: !6789)
!6789 = !{null, !6790, !6884, !2822, !240, !102, !102, !102}
!6790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6791, size: 32)
!6791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !6792)
!6792 = !{!6793, !6851, !6863, !6864, !6865, !6866, !6879}
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6791, file: !114, line: 247, baseType: !6794, size: 384)
!6794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !6795)
!6795 = !{!6796, !6820, !6827, !6828, !6829, !6838, !6839, !6840}
!6796 = !DIDerivedType(tag: DW_TAG_member, scope: !6794, file: !114, line: 60, baseType: !6797, size: 64)
!6797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6794, file: !114, line: 60, size: 64, elements: !6798)
!6798 = !{!6799, !6814}
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6797, file: !114, line: 61, baseType: !6800, size: 64)
!6800 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !6801)
!6801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !6802)
!6802 = !{!6803, !6809}
!6803 = !DIDerivedType(tag: DW_TAG_member, scope: !6801, file: !124, line: 38, baseType: !6804, size: 32)
!6804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6801, file: !124, line: 38, size: 32, elements: !6805)
!6805 = !{!6806, !6808}
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6804, file: !124, line: 39, baseType: !6807, size: 32)
!6807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6801, size: 32)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6804, file: !124, line: 40, baseType: !6807, size: 32)
!6809 = !DIDerivedType(tag: DW_TAG_member, scope: !6801, file: !124, line: 42, baseType: !6810, size: 32, offset: 32)
!6810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6801, file: !124, line: 42, size: 32, elements: !6811)
!6811 = !{!6812, !6813}
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6810, file: !124, line: 43, baseType: !6807, size: 32)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6810, file: !124, line: 44, baseType: !6807, size: 32)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6797, file: !114, line: 62, baseType: !6815, size: 64)
!6815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !6816)
!6816 = !{!6817}
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6815, file: !140, line: 50, baseType: !6818, size: 64)
!6818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6819, size: 64, elements: !145)
!6819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6815, size: 32)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6794, file: !114, line: 68, baseType: !6821, size: 32, offset: 64)
!6821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6822, size: 32)
!6822 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !6823)
!6823 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !6824)
!6824 = !{!6825}
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6823, file: !150, line: 232, baseType: !6826, size: 64)
!6826 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !6801)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6794, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6794, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!6829 = !DIDerivedType(tag: DW_TAG_member, scope: !6794, file: !114, line: 90, baseType: !6830, size: 16, offset: 112)
!6830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6794, file: !114, line: 90, size: 16, elements: !6831)
!6831 = !{!6832, !6837}
!6832 = !DIDerivedType(tag: DW_TAG_member, scope: !6830, file: !114, line: 91, baseType: !6833, size: 16)
!6833 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6830, file: !114, line: 91, size: 16, elements: !6834)
!6834 = !{!6835, !6836}
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6833, file: !114, line: 96, baseType: !166, size: 8)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6833, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6830, file: !114, line: 100, baseType: !170, size: 16)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6794, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6794, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6794, file: !114, line: 131, baseType: !6841, size: 192, offset: 192)
!6841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !6842)
!6842 = !{!6843, !6844, !6850}
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6841, file: !150, line: 245, baseType: !6800, size: 64)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6841, file: !150, line: 246, baseType: !6845, size: 32, offset: 64)
!6845 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !6846)
!6846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6847, size: 32)
!6847 = !DISubroutineType(types: !6848)
!6848 = !{null, !6849}
!6849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6841, size: 32)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6841, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6791, file: !114, line: 250, baseType: !6852, size: 288, offset: 384)
!6852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !6853)
!6853 = !{!6854, !6855, !6856, !6857, !6858, !6859, !6860, !6861, !6862}
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6852, file: !190, line: 26, baseType: !173, size: 32)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6852, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6852, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6852, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6852, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6852, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6852, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6852, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6852, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6791, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6791, file: !114, line: 256, baseType: !6822, size: 64, offset: 704)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6791, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6791, file: !114, line: 325, baseType: !6867, size: 32, offset: 800)
!6867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6868, size: 32)
!6868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !6869)
!6869 = !{!6870, !6876, !6877}
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6868, file: !109, line: 5074, baseType: !6871, size: 96)
!6871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !6872)
!6872 = !{!6873, !6874, !6875}
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6871, file: !210, line: 57, baseType: !213, size: 32)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6871, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6871, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6868, file: !109, line: 5075, baseType: !6822, size: 64, offset: 96)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6868, file: !109, line: 5076, baseType: !6878, offset: 160)
!6878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6791, file: !114, line: 343, baseType: !6880, size: 64, offset: 832)
!6880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !6881)
!6881 = !{!6882, !6883}
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6880, file: !190, line: 63, baseType: !173, size: 32)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6880, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!6884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6885, size: 32)
!6885 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !6886)
!6886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !6887)
!6887 = !{!6888}
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6886, file: !234, line: 48, baseType: !237, size: 8)
!6889 = !DILocalVariable(name: "thread", arg: 1, scope: !6786, file: !6787, line: 56, type: !6790)
!6890 = !DILocation(line: 56, column: 39, scope: !6786)
!6891 = !DILocalVariable(name: "stack", arg: 2, scope: !6786, file: !6787, line: 56, type: !6884)
!6892 = !DILocation(line: 56, column: 65, scope: !6786)
!6893 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6786, file: !6787, line: 57, type: !2822)
!6894 = !DILocation(line: 57, column: 14, scope: !6786)
!6895 = !DILocalVariable(name: "entry", arg: 4, scope: !6786, file: !6787, line: 57, type: !240)
!6896 = !DILocation(line: 57, column: 42, scope: !6786)
!6897 = !DILocalVariable(name: "p1", arg: 5, scope: !6786, file: !6787, line: 58, type: !102)
!6898 = !DILocation(line: 58, column: 14, scope: !6786)
!6899 = !DILocalVariable(name: "p2", arg: 6, scope: !6786, file: !6787, line: 58, type: !102)
!6900 = !DILocation(line: 58, column: 24, scope: !6786)
!6901 = !DILocalVariable(name: "p3", arg: 7, scope: !6786, file: !6787, line: 58, type: !102)
!6902 = !DILocation(line: 58, column: 34, scope: !6786)
!6903 = !DILocalVariable(name: "iframe", scope: !6786, file: !6787, line: 60, type: !3389)
!6904 = !DILocation(line: 60, column: 21, scope: !6786)
!6905 = !DILocation(line: 85, column: 11, scope: !6786)
!6906 = !DILocation(line: 85, column: 9, scope: !6786)
!6907 = !DILocation(line: 93, column: 2, scope: !6786)
!6908 = !DILocation(line: 93, column: 10, scope: !6786)
!6909 = !DILocation(line: 93, column: 13, scope: !6786)
!6910 = !DILocation(line: 98, column: 2, scope: !6786)
!6911 = !DILocation(line: 98, column: 10, scope: !6786)
!6912 = !DILocation(line: 98, column: 13, scope: !6786)
!6913 = !DILocation(line: 100, column: 25, scope: !6786)
!6914 = !DILocation(line: 100, column: 15, scope: !6786)
!6915 = !DILocation(line: 100, column: 2, scope: !6786)
!6916 = !DILocation(line: 100, column: 10, scope: !6786)
!6917 = !DILocation(line: 100, column: 13, scope: !6786)
!6918 = !DILocation(line: 101, column: 25, scope: !6786)
!6919 = !DILocation(line: 101, column: 15, scope: !6786)
!6920 = !DILocation(line: 101, column: 2, scope: !6786)
!6921 = !DILocation(line: 101, column: 10, scope: !6786)
!6922 = !DILocation(line: 101, column: 13, scope: !6786)
!6923 = !DILocation(line: 102, column: 25, scope: !6786)
!6924 = !DILocation(line: 102, column: 15, scope: !6786)
!6925 = !DILocation(line: 102, column: 2, scope: !6786)
!6926 = !DILocation(line: 102, column: 10, scope: !6786)
!6927 = !DILocation(line: 102, column: 13, scope: !6786)
!6928 = !DILocation(line: 103, column: 25, scope: !6786)
!6929 = !DILocation(line: 103, column: 15, scope: !6786)
!6930 = !DILocation(line: 103, column: 2, scope: !6786)
!6931 = !DILocation(line: 103, column: 10, scope: !6786)
!6932 = !DILocation(line: 103, column: 13, scope: !6786)
!6933 = !DILocation(line: 106, column: 2, scope: !6786)
!6934 = !DILocation(line: 106, column: 10, scope: !6786)
!6935 = !DILocation(line: 106, column: 15, scope: !6786)
!6936 = !DILocation(line: 122, column: 39, scope: !6786)
!6937 = !DILocation(line: 122, column: 29, scope: !6786)
!6938 = !DILocation(line: 122, column: 2, scope: !6786)
!6939 = !DILocation(line: 122, column: 10, scope: !6786)
!6940 = !DILocation(line: 122, column: 23, scope: !6786)
!6941 = !DILocation(line: 122, column: 27, scope: !6786)
!6942 = !DILocation(line: 123, column: 2, scope: !6786)
!6943 = !DILocation(line: 123, column: 10, scope: !6786)
!6944 = !DILocation(line: 123, column: 15, scope: !6786)
!6945 = !DILocation(line: 123, column: 23, scope: !6786)
!6946 = !DILocation(line: 143, column: 1, scope: !6786)
!6947 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6787, file: !6787, line: 530, type: !6948, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3386, retainedNodes: !223)
!6948 = !DISubroutineType(types: !6949)
!6949 = !{null, !6790, !2822, !240}
!6950 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6947, file: !6787, line: 530, type: !6790)
!6951 = !DILocation(line: 530, column: 50, scope: !6947)
!6952 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6947, file: !6787, line: 530, type: !2822)
!6953 = !DILocation(line: 530, column: 69, scope: !6947)
!6954 = !DILocalVariable(name: "_main", arg: 3, scope: !6947, file: !6787, line: 531, type: !240)
!6955 = !DILocation(line: 531, column: 22, scope: !6947)
!6956 = !DILocation(line: 533, column: 2, scope: !6947)
!6957 = !DILocation(line: 535, column: 13, scope: !6947)
!6958 = !DILocation(line: 535, column: 11, scope: !6947)
!6959 = !DILocation(line: 599, column: 9, scope: !6947)
!6960 = !DILocation(line: 599, column: 22, scope: !6947)
!6961 = !DILocation(line: 576, column: 2, scope: !6947)
!6962 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18355, i64 18626, i64 18645, i64 18664, i64 18689}
!6963 = !DILocation(line: 603, column: 2, scope: !6947)
!6964 = distinct !DISubprogram(name: "z_arm_prepare_switch_to_main", scope: !6787, file: !6787, line: 506, type: !253, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3386, retainedNodes: !223)
!6965 = !DILocation(line: 528, column: 1, scope: !6964)
!6966 = distinct !DISubprogram(name: "z_arm_fault", scope: !6967, file: !6967, line: 1036, type: !6968, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3429, retainedNodes: !223)
!6967 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6968 = !DISubroutineType(types: !6969)
!6969 = !{null, !173, !173, !173, !6970}
!6970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6971, size: 32)
!6971 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !190, line: 37, baseType: !6972)
!6972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !6973)
!6973 = !{!6974, !6975, !6976, !6977, !6978, !6979, !6980, !6981, !6982}
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6972, file: !190, line: 26, baseType: !173, size: 32)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6972, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6972, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6972, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6972, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6972, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6972, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6972, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6972, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!6983 = !DILocalVariable(name: "msp", arg: 1, scope: !6966, file: !6967, line: 1036, type: !173)
!6984 = !DILocation(line: 1036, column: 27, scope: !6966)
!6985 = !DILocalVariable(name: "psp", arg: 2, scope: !6966, file: !6967, line: 1036, type: !173)
!6986 = !DILocation(line: 1036, column: 41, scope: !6966)
!6987 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6966, file: !6967, line: 1036, type: !173)
!6988 = !DILocation(line: 1036, column: 55, scope: !6966)
!6989 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6966, file: !6967, line: 1037, type: !6970)
!6990 = !DILocation(line: 1037, column: 19, scope: !6966)
!6991 = !DILocalVariable(name: "reason", scope: !6966, file: !6967, line: 1039, type: !173)
!6992 = !DILocation(line: 1039, column: 11, scope: !6966)
!6993 = !DILocalVariable(name: "fault", scope: !6966, file: !6967, line: 1040, type: !103)
!6994 = !DILocation(line: 1040, column: 6, scope: !6966)
!6995 = !DILocation(line: 1040, column: 19, scope: !6966)
!6996 = !DILocation(line: 1040, column: 24, scope: !6966)
!6997 = !DILocalVariable(name: "recoverable", scope: !6966, file: !6967, line: 1041, type: !1035)
!6998 = !DILocation(line: 1041, column: 7, scope: !6966)
!6999 = !DILocalVariable(name: "nested_exc", scope: !6966, file: !6967, line: 1041, type: !1035)
!7000 = !DILocation(line: 1041, column: 20, scope: !6966)
!7001 = !DILocalVariable(name: "esf", scope: !6966, file: !6967, line: 1042, type: !3445)
!7002 = !DILocation(line: 1042, column: 16, scope: !6966)
!7003 = !DILocalVariable(name: "esf_copy", scope: !6966, file: !6967, line: 1047, type: !3446)
!7004 = !DILocation(line: 1047, column: 15, scope: !6966)
!7005 = !DILocalVariable(name: "key", arg: 1, scope: !7006, file: !6329, line: 84, type: !32)
!7006 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6329, file: !6329, line: 84, type: !6349, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3429, retainedNodes: !223)
!7007 = !DILocation(line: 84, column: 56, scope: !7006, inlinedAt: !7008)
!7008 = distinct !DILocation(line: 1050, column: 2, scope: !6966)
!7009 = !DILocation(line: 87, column: 6, scope: !7010, inlinedAt: !7008)
!7010 = distinct !DILexicalBlock(scope: !7006, file: !6329, line: 87, column: 6)
!7011 = !DILocation(line: 87, column: 10, scope: !7010, inlinedAt: !7008)
!7012 = !DILocation(line: 87, column: 6, scope: !7006, inlinedAt: !7008)
!7013 = !DILocation(line: 88, column: 3, scope: !7014, inlinedAt: !7008)
!7014 = distinct !DILexicalBlock(scope: !7010, file: !6329, line: 87, column: 17)
!7015 = !DILocation(line: 90, column: 2, scope: !7006, inlinedAt: !7008)
!7016 = !{i64 1483101}
!7017 = !DILocation(line: 110, column: 1, scope: !7006, inlinedAt: !7008)
!7018 = !DILocation(line: 1055, column: 17, scope: !6966)
!7019 = !DILocation(line: 1055, column: 22, scope: !6966)
!7020 = !DILocation(line: 1055, column: 27, scope: !6966)
!7021 = !DILocation(line: 1055, column: 9, scope: !6966)
!7022 = !DILocation(line: 1055, column: 7, scope: !6966)
!7023 = !DILocation(line: 1063, column: 24, scope: !6966)
!7024 = !DILocation(line: 1063, column: 29, scope: !6966)
!7025 = !DILocation(line: 1063, column: 11, scope: !6966)
!7026 = !DILocation(line: 1063, column: 9, scope: !6966)
!7027 = !DILocation(line: 1064, column: 6, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !6966, file: !6967, line: 1064, column: 6)
!7029 = !DILocation(line: 1064, column: 6, scope: !6966)
!7030 = !DILocation(line: 1065, column: 3, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7028, file: !6967, line: 1064, column: 19)
!7032 = !DILocation(line: 1070, column: 9, scope: !6966)
!7033 = !DILocation(line: 1070, column: 20, scope: !6966)
!7034 = !DILocation(line: 1070, column: 2, scope: !6966)
!7035 = !DILocation(line: 1071, column: 2, scope: !6966)
!7036 = !DILocation(line: 1089, column: 6, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !6966, file: !6967, line: 1089, column: 6)
!7038 = !DILocation(line: 1089, column: 6, scope: !6966)
!7039 = !DILocation(line: 1090, column: 17, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !6967, line: 1090, column: 7)
!7041 = distinct !DILexicalBlock(scope: !7037, file: !6967, line: 1089, column: 18)
!7042 = !DILocation(line: 1090, column: 23, scope: !7040)
!7043 = !DILocation(line: 1090, column: 28, scope: !7040)
!7044 = !DILocation(line: 1090, column: 44, scope: !7040)
!7045 = !DILocation(line: 1090, column: 7, scope: !7041)
!7046 = !DILocation(line: 1091, column: 13, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7040, file: !6967, line: 1090, column: 50)
!7048 = !DILocation(line: 1091, column: 19, scope: !7047)
!7049 = !DILocation(line: 1091, column: 24, scope: !7047)
!7050 = !DILocation(line: 1092, column: 3, scope: !7047)
!7051 = !DILocation(line: 1093, column: 2, scope: !7041)
!7052 = !DILocation(line: 1094, column: 12, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7037, file: !6967, line: 1093, column: 9)
!7054 = !DILocation(line: 1094, column: 18, scope: !7053)
!7055 = !DILocation(line: 1094, column: 23, scope: !7053)
!7056 = !DILocation(line: 1097, column: 20, scope: !6966)
!7057 = !DILocation(line: 1097, column: 2, scope: !6966)
!7058 = !DILocation(line: 1098, column: 1, scope: !6966)
!7059 = distinct !DISubprogram(name: "get_esf", scope: !6967, file: !6967, line: 894, type: !7060, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3429, retainedNodes: !223)
!7060 = !DISubroutineType(types: !7061)
!7061 = !{!3445, !173, !173, !173, !7062}
!7062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!7063 = !DILocalVariable(name: "msp", arg: 1, scope: !7059, file: !6967, line: 894, type: !173)
!7064 = !DILocation(line: 894, column: 46, scope: !7059)
!7065 = !DILocalVariable(name: "psp", arg: 2, scope: !7059, file: !6967, line: 894, type: !173)
!7066 = !DILocation(line: 894, column: 60, scope: !7059)
!7067 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7059, file: !6967, line: 894, type: !173)
!7068 = !DILocation(line: 894, column: 74, scope: !7059)
!7069 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7059, file: !6967, line: 895, type: !7062)
!7070 = !DILocation(line: 895, column: 8, scope: !7059)
!7071 = !DILocalVariable(name: "alternative_state_exc", scope: !7059, file: !6967, line: 897, type: !1035)
!7072 = !DILocation(line: 897, column: 7, scope: !7059)
!7073 = !DILocalVariable(name: "ptr_esf", scope: !7059, file: !6967, line: 898, type: !3445)
!7074 = !DILocation(line: 898, column: 16, scope: !7059)
!7075 = !DILocation(line: 900, column: 3, scope: !7059)
!7076 = !DILocation(line: 900, column: 14, scope: !7059)
!7077 = !DILocation(line: 902, column: 7, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7059, file: !6967, line: 902, column: 6)
!7079 = !DILocation(line: 902, column: 18, scope: !7078)
!7080 = !DILocation(line: 902, column: 49, scope: !7078)
!7081 = !DILocation(line: 902, column: 6, scope: !7059)
!7082 = !DILocation(line: 905, column: 3, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7078, file: !6967, line: 903, column: 33)
!7084 = !DILocation(line: 983, column: 7, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7059, file: !6967, line: 983, column: 6)
!7086 = !DILocation(line: 983, column: 18, scope: !7085)
!7087 = !DILocation(line: 983, column: 44, scope: !7085)
!7088 = !DILocation(line: 984, column: 6, scope: !7085)
!7089 = !DILocation(line: 984, column: 17, scope: !7085)
!7090 = !DILocation(line: 983, column: 6, scope: !7059)
!7091 = !DILocation(line: 985, column: 3, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7085, file: !6967, line: 984, column: 47)
!7093 = !DILocation(line: 985, column: 3, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !6967, line: 985, column: 3)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !6967, line: 985, column: 3)
!7096 = distinct !DILexicalBlock(scope: !7092, file: !6967, line: 985, column: 3)
!7097 = !DILocation(line: 986, column: 3, scope: !7092)
!7098 = !DILocation(line: 990, column: 7, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7059, file: !6967, line: 990, column: 6)
!7100 = !DILocation(line: 990, column: 6, scope: !7059)
!7101 = !DILocation(line: 991, column: 7, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !6967, line: 991, column: 7)
!7103 = distinct !DILexicalBlock(scope: !7099, file: !6967, line: 990, column: 30)
!7104 = !DILocation(line: 991, column: 18, scope: !7102)
!7105 = !DILocation(line: 991, column: 7, scope: !7103)
!7106 = !DILocation(line: 993, column: 31, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7102, file: !6967, line: 991, column: 44)
!7108 = !DILocation(line: 993, column: 15, scope: !7107)
!7109 = !DILocation(line: 993, column: 12, scope: !7107)
!7110 = !DILocation(line: 995, column: 3, scope: !7107)
!7111 = !DILocation(line: 997, column: 30, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7102, file: !6967, line: 995, column: 10)
!7113 = !DILocation(line: 997, column: 14, scope: !7112)
!7114 = !DILocation(line: 997, column: 12, scope: !7112)
!7115 = !DILocation(line: 998, column: 5, scope: !7112)
!7116 = !DILocation(line: 998, column: 16, scope: !7112)
!7117 = !DILocation(line: 1000, column: 2, scope: !7103)
!7118 = !DILocation(line: 1002, column: 9, scope: !7059)
!7119 = !DILocation(line: 1002, column: 2, scope: !7059)
!7120 = !DILocation(line: 1003, column: 1, scope: !7059)
!7121 = distinct !DISubprogram(name: "fault_handle", scope: !6967, file: !6967, line: 786, type: !7122, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3429, retainedNodes: !223)
!7122 = !DISubroutineType(types: !7123)
!7123 = !{!173, !3445, !103, !7062}
!7124 = !DILocalVariable(name: "esf", arg: 1, scope: !7121, file: !6967, line: 786, type: !3445)
!7125 = !DILocation(line: 786, column: 44, scope: !7121)
!7126 = !DILocalVariable(name: "fault", arg: 2, scope: !7121, file: !6967, line: 786, type: !103)
!7127 = !DILocation(line: 786, column: 53, scope: !7121)
!7128 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7121, file: !6967, line: 786, type: !7062)
!7129 = !DILocation(line: 786, column: 66, scope: !7121)
!7130 = !DILocalVariable(name: "reason", scope: !7121, file: !6967, line: 788, type: !173)
!7131 = !DILocation(line: 788, column: 11, scope: !7121)
!7132 = !DILocation(line: 790, column: 3, scope: !7121)
!7133 = !DILocation(line: 790, column: 15, scope: !7121)
!7134 = !DILocation(line: 792, column: 10, scope: !7121)
!7135 = !DILocation(line: 792, column: 2, scope: !7121)
!7136 = !DILocation(line: 794, column: 23, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7121, file: !6967, line: 792, column: 17)
!7138 = !DILocation(line: 794, column: 28, scope: !7137)
!7139 = !DILocation(line: 794, column: 12, scope: !7137)
!7140 = !DILocation(line: 794, column: 10, scope: !7137)
!7141 = !DILocation(line: 795, column: 3, scope: !7137)
!7142 = !DILocation(line: 820, column: 22, scope: !7137)
!7143 = !DILocation(line: 820, column: 27, scope: !7137)
!7144 = !DILocation(line: 820, column: 3, scope: !7137)
!7145 = !DILocation(line: 821, column: 3, scope: !7137)
!7146 = !DILocation(line: 824, column: 8, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7121, file: !6967, line: 824, column: 6)
!7148 = !DILocation(line: 824, column: 7, scope: !7147)
!7149 = !DILocation(line: 824, column: 6, scope: !7147)
!7150 = !DILocation(line: 824, column: 21, scope: !7147)
!7151 = !DILocation(line: 824, column: 6, scope: !7121)
!7152 = !DILocation(line: 826, column: 14, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7147, file: !6967, line: 824, column: 31)
!7154 = !DILocation(line: 826, column: 19, scope: !7153)
!7155 = !DILocation(line: 826, column: 3, scope: !7153)
!7156 = !DILocation(line: 827, column: 2, scope: !7153)
!7157 = !DILocation(line: 829, column: 9, scope: !7121)
!7158 = !DILocation(line: 829, column: 2, scope: !7121)
!7159 = distinct !DISubprogram(name: "hard_fault", scope: !6967, file: !6967, line: 709, type: !7160, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3429, retainedNodes: !223)
!7160 = !DISubroutineType(types: !7161)
!7161 = !{!173, !3445, !7062}
!7162 = !DILocalVariable(name: "esf", arg: 1, scope: !7159, file: !6967, line: 709, type: !3445)
!7163 = !DILocation(line: 709, column: 42, scope: !7159)
!7164 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7159, file: !6967, line: 709, type: !7062)
!7165 = !DILocation(line: 709, column: 53, scope: !7159)
!7166 = !DILocalVariable(name: "reason", scope: !7159, file: !6967, line: 711, type: !173)
!7167 = !DILocation(line: 711, column: 11, scope: !7159)
!7168 = !DILocation(line: 713, column: 2, scope: !7159)
!7169 = !DILocation(line: 713, column: 2, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !6967, line: 713, column: 2)
!7171 = distinct !DILexicalBlock(scope: !7172, file: !6967, line: 713, column: 2)
!7172 = distinct !DILexicalBlock(scope: !7159, file: !6967, line: 713, column: 2)
!7173 = !DILocation(line: 724, column: 31, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7159, file: !6967, line: 724, column: 6)
!7175 = !DILocation(line: 724, column: 6, scope: !7174)
!7176 = !DILocation(line: 724, column: 6, scope: !7159)
!7177 = !DILocation(line: 726, column: 3, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7174, file: !6967, line: 724, column: 37)
!7179 = !DILocation(line: 726, column: 3, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7181, file: !6967, line: 726, column: 3)
!7181 = distinct !DILexicalBlock(scope: !7182, file: !6967, line: 726, column: 3)
!7182 = distinct !DILexicalBlock(scope: !7178, file: !6967, line: 726, column: 3)
!7183 = !DILocation(line: 727, column: 12, scope: !7178)
!7184 = !DILocation(line: 727, column: 17, scope: !7178)
!7185 = !DILocation(line: 727, column: 23, scope: !7178)
!7186 = !DILocation(line: 727, column: 10, scope: !7178)
!7187 = !DILocation(line: 728, column: 2, scope: !7178)
!7188 = !DILocation(line: 730, column: 42, scope: !7159)
!7189 = !DILocation(line: 730, column: 17, scope: !7159)
!7190 = !DILocation(line: 730, column: 3, scope: !7159)
!7191 = !DILocation(line: 730, column: 15, scope: !7159)
!7192 = !DILocation(line: 766, column: 9, scope: !7159)
!7193 = !DILocation(line: 766, column: 2, scope: !7159)
!7194 = distinct !DISubprogram(name: "reserved_exception", scope: !6967, file: !6967, line: 776, type: !7195, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3429, retainedNodes: !223)
!7195 = !DISubroutineType(types: !7196)
!7196 = !{null, !7197, !103}
!7197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7198, size: 32)
!7198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3446)
!7199 = !DILocalVariable(name: "esf", arg: 1, scope: !7194, file: !6967, line: 776, type: !7197)
!7200 = !DILocation(line: 776, column: 52, scope: !7194)
!7201 = !DILocalVariable(name: "fault", arg: 2, scope: !7194, file: !6967, line: 776, type: !103)
!7202 = !DILocation(line: 776, column: 61, scope: !7194)
!7203 = !DILocation(line: 778, column: 2, scope: !7194)
!7204 = !DILocation(line: 780, column: 2, scope: !7194)
!7205 = !DILocation(line: 780, column: 2, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7207, file: !6967, line: 780, column: 2)
!7207 = distinct !DILexicalBlock(scope: !7208, file: !6967, line: 780, column: 2)
!7208 = distinct !DILexicalBlock(scope: !7194, file: !6967, line: 780, column: 2)
!7209 = !DILocation(line: 783, column: 1, scope: !7194)
!7210 = distinct !DISubprogram(name: "fault_show", scope: !6967, file: !6967, line: 166, type: !7195, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3429, retainedNodes: !223)
!7211 = !DILocalVariable(name: "esf", arg: 1, scope: !7210, file: !6967, line: 166, type: !7197)
!7212 = !DILocation(line: 166, column: 44, scope: !7210)
!7213 = !DILocalVariable(name: "fault", arg: 2, scope: !7210, file: !6967, line: 166, type: !103)
!7214 = !DILocation(line: 166, column: 53, scope: !7210)
!7215 = !DILocation(line: 168, column: 8, scope: !7210)
!7216 = !DILocation(line: 169, column: 8, scope: !7210)
!7217 = !DILocation(line: 170, column: 1, scope: !7210)
!7218 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6967, file: !6967, line: 658, type: !7219, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3429, retainedNodes: !223)
!7219 = !DISubroutineType(types: !7220)
!7220 = !{!1035, !3445}
!7221 = !DILocalVariable(name: "esf", arg: 1, scope: !7218, file: !6967, line: 658, type: !3445)
!7222 = !DILocation(line: 658, column: 59, scope: !7218)
!7223 = !DILocalVariable(name: "ret_addr", scope: !7218, file: !6967, line: 660, type: !3488)
!7224 = !DILocation(line: 660, column: 12, scope: !7218)
!7225 = !DILocation(line: 660, column: 35, scope: !7218)
!7226 = !DILocation(line: 660, column: 40, scope: !7218)
!7227 = !DILocation(line: 660, column: 46, scope: !7218)
!7228 = !DILocation(line: 660, column: 23, scope: !7218)
!7229 = !DILocalVariable(name: "fault_insn", scope: !7218, file: !6967, line: 680, type: !170)
!7230 = !DILocation(line: 680, column: 11, scope: !7218)
!7231 = !DILocation(line: 680, column: 26, scope: !7218)
!7232 = !DILocation(line: 680, column: 35, scope: !7218)
!7233 = !DILocation(line: 680, column: 24, scope: !7218)
!7234 = !DILocation(line: 693, column: 8, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7218, file: !6967, line: 693, column: 6)
!7236 = !DILocation(line: 693, column: 19, scope: !7235)
!7237 = !DILocation(line: 693, column: 29, scope: !7235)
!7238 = !DILocation(line: 693, column: 45, scope: !7235)
!7239 = !DILocation(line: 694, column: 5, scope: !7235)
!7240 = !DILocation(line: 694, column: 16, scope: !7235)
!7241 = !DILocation(line: 694, column: 26, scope: !7235)
!7242 = !DILocation(line: 693, column: 6, scope: !7218)
!7243 = !DILocation(line: 695, column: 3, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7235, file: !6967, line: 694, column: 56)
!7245 = !DILocation(line: 698, column: 2, scope: !7218)
!7246 = !DILocation(line: 699, column: 1, scope: !7218)
!7247 = distinct !DISubprogram(name: "memory_fault_recoverable", scope: !6967, file: !6967, line: 186, type: !7248, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3429, retainedNodes: !223)
!7248 = !DISubroutineType(types: !7249)
!7249 = !{!1035, !3445, !1035}
!7250 = !DILocalVariable(name: "esf", arg: 1, scope: !7247, file: !6967, line: 186, type: !3445)
!7251 = !DILocation(line: 186, column: 52, scope: !7247)
!7252 = !DILocalVariable(name: "synchronous", arg: 2, scope: !7247, file: !6967, line: 186, type: !1035)
!7253 = !DILocation(line: 186, column: 62, scope: !7247)
!7254 = !DILocation(line: 209, column: 2, scope: !7247)
!7255 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6967, file: !6967, line: 1107, type: !253, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3429, retainedNodes: !223)
!7256 = !DILocation(line: 1136, column: 1, scope: !7255)
!7257 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7258, file: !7258, line: 26, type: !253, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3489, retainedNodes: !223)
!7258 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7259 = !DILocalVariable(name: "irq", scope: !7257, file: !7258, line: 28, type: !103)
!7260 = !DILocation(line: 28, column: 6, scope: !7257)
!7261 = !DILocation(line: 30, column: 2, scope: !7257)
!7262 = !DILocation(line: 30, column: 9, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7264, file: !7258, line: 30, column: 2)
!7264 = distinct !DILexicalBlock(scope: !7257, file: !7258, line: 30, column: 2)
!7265 = !DILocation(line: 30, column: 13, scope: !7263)
!7266 = !DILocation(line: 30, column: 2, scope: !7264)
!7267 = !DILocation(line: 31, column: 31, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7263, file: !7258, line: 30, column: 39)
!7269 = !DILocation(line: 31, column: 3, scope: !7268)
!7270 = !DILocation(line: 32, column: 2, scope: !7268)
!7271 = !DILocation(line: 30, column: 35, scope: !7263)
!7272 = !DILocation(line: 30, column: 2, scope: !7263)
!7273 = distinct !{!7273, !7266, !7274}
!7274 = !DILocation(line: 32, column: 2, scope: !7264)
!7275 = !DILocation(line: 33, column: 1, scope: !7257)
!7276 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2530, file: !2530, line: 850, type: !6681, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3489, retainedNodes: !223)
!7277 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7276, file: !2530, line: 850, type: !3324)
!7278 = !DILocation(line: 850, column: 51, scope: !7276)
!7279 = !DILocalVariable(name: "priority", arg: 2, scope: !7276, file: !2530, line: 850, type: !173)
!7280 = !DILocation(line: 850, column: 66, scope: !7276)
!7281 = !DILocation(line: 852, column: 17, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7276, file: !2530, line: 852, column: 7)
!7283 = !DILocation(line: 852, column: 23, scope: !7282)
!7284 = !DILocation(line: 852, column: 7, scope: !7276)
!7285 = !DILocation(line: 854, column: 53, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7282, file: !2530, line: 853, column: 3)
!7287 = !DILocation(line: 854, column: 44, scope: !7286)
!7288 = !DILocation(line: 854, column: 83, scope: !7286)
!7289 = !DILocation(line: 854, column: 80, scope: !7286)
!7290 = !DILocation(line: 854, column: 71, scope: !7286)
!7291 = !DILocation(line: 854, column: 69, scope: !7286)
!7292 = !DILocation(line: 855, column: 11, scope: !7286)
!7293 = !DILocation(line: 855, column: 20, scope: !7286)
!7294 = !DILocation(line: 855, column: 48, scope: !7286)
!7295 = !DILocation(line: 855, column: 71, scope: !7286)
!7296 = !DILocation(line: 855, column: 68, scope: !7286)
!7297 = !DILocation(line: 854, column: 102, scope: !7286)
!7298 = !DILocation(line: 854, column: 14, scope: !7286)
!7299 = !DILocation(line: 854, column: 5, scope: !7286)
!7300 = !DILocation(line: 854, column: 30, scope: !7286)
!7301 = !DILocation(line: 856, column: 3, scope: !7286)
!7302 = !DILocation(line: 859, column: 53, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7282, file: !2530, line: 858, column: 3)
!7304 = !DILocation(line: 859, column: 44, scope: !7303)
!7305 = !DILocation(line: 859, column: 83, scope: !7303)
!7306 = !DILocation(line: 859, column: 80, scope: !7303)
!7307 = !DILocation(line: 859, column: 71, scope: !7303)
!7308 = !DILocation(line: 859, column: 69, scope: !7303)
!7309 = !DILocation(line: 860, column: 11, scope: !7303)
!7310 = !DILocation(line: 860, column: 20, scope: !7303)
!7311 = !DILocation(line: 860, column: 48, scope: !7303)
!7312 = !DILocation(line: 860, column: 71, scope: !7303)
!7313 = !DILocation(line: 860, column: 68, scope: !7303)
!7314 = !DILocation(line: 859, column: 102, scope: !7303)
!7315 = !DILocation(line: 859, column: 14, scope: !7303)
!7316 = !DILocation(line: 859, column: 5, scope: !7303)
!7317 = !DILocation(line: 859, column: 30, scope: !7303)
!7318 = !DILocation(line: 862, column: 1, scope: !7276)
!7319 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7320, file: !7320, line: 27, type: !7321, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3519, retainedNodes: !223)
!7320 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7321 = !DISubroutineType(types: !7322)
!7322 = !{null, !7323}
!7323 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !7324)
!7324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7325, size: 32)
!7325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !7326)
!7326 = !{!7327, !7385, !7397, !7398, !7399, !7400, !7413}
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7325, file: !114, line: 247, baseType: !7328, size: 384)
!7328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !7329)
!7329 = !{!7330, !7354, !7361, !7362, !7363, !7372, !7373, !7374}
!7330 = !DIDerivedType(tag: DW_TAG_member, scope: !7328, file: !114, line: 60, baseType: !7331, size: 64)
!7331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7328, file: !114, line: 60, size: 64, elements: !7332)
!7332 = !{!7333, !7348}
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7331, file: !114, line: 61, baseType: !7334, size: 64)
!7334 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !7335)
!7335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !7336)
!7336 = !{!7337, !7343}
!7337 = !DIDerivedType(tag: DW_TAG_member, scope: !7335, file: !124, line: 38, baseType: !7338, size: 32)
!7338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7335, file: !124, line: 38, size: 32, elements: !7339)
!7339 = !{!7340, !7342}
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7338, file: !124, line: 39, baseType: !7341, size: 32)
!7341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7335, size: 32)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7338, file: !124, line: 40, baseType: !7341, size: 32)
!7343 = !DIDerivedType(tag: DW_TAG_member, scope: !7335, file: !124, line: 42, baseType: !7344, size: 32, offset: 32)
!7344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7335, file: !124, line: 42, size: 32, elements: !7345)
!7345 = !{!7346, !7347}
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7344, file: !124, line: 43, baseType: !7341, size: 32)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7344, file: !124, line: 44, baseType: !7341, size: 32)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7331, file: !114, line: 62, baseType: !7349, size: 64)
!7349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !7350)
!7350 = !{!7351}
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7349, file: !140, line: 50, baseType: !7352, size: 64)
!7352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7353, size: 64, elements: !145)
!7353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7349, size: 32)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7328, file: !114, line: 68, baseType: !7355, size: 32, offset: 64)
!7355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7356, size: 32)
!7356 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !7357)
!7357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !7358)
!7358 = !{!7359}
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7357, file: !150, line: 232, baseType: !7360, size: 64)
!7360 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !7335)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7328, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7328, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!7363 = !DIDerivedType(tag: DW_TAG_member, scope: !7328, file: !114, line: 90, baseType: !7364, size: 16, offset: 112)
!7364 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7328, file: !114, line: 90, size: 16, elements: !7365)
!7365 = !{!7366, !7371}
!7366 = !DIDerivedType(tag: DW_TAG_member, scope: !7364, file: !114, line: 91, baseType: !7367, size: 16)
!7367 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7364, file: !114, line: 91, size: 16, elements: !7368)
!7368 = !{!7369, !7370}
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7367, file: !114, line: 96, baseType: !166, size: 8)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7367, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7364, file: !114, line: 100, baseType: !170, size: 16)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7328, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7328, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7328, file: !114, line: 131, baseType: !7375, size: 192, offset: 192)
!7375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !7376)
!7376 = !{!7377, !7378, !7384}
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7375, file: !150, line: 245, baseType: !7334, size: 64)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7375, file: !150, line: 246, baseType: !7379, size: 32, offset: 64)
!7379 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !7380)
!7380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7381, size: 32)
!7381 = !DISubroutineType(types: !7382)
!7382 = !{null, !7383}
!7383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7375, size: 32)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7375, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7325, file: !114, line: 250, baseType: !7386, size: 288, offset: 384)
!7386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !7387)
!7387 = !{!7388, !7389, !7390, !7391, !7392, !7393, !7394, !7395, !7396}
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7386, file: !190, line: 26, baseType: !173, size: 32)
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7386, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7386, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7386, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7386, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7386, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7386, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7386, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7386, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7325, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7325, file: !114, line: 256, baseType: !7356, size: 64, offset: 704)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7325, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7325, file: !114, line: 325, baseType: !7401, size: 32, offset: 800)
!7401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7402, size: 32)
!7402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !7403)
!7403 = !{!7404, !7410, !7411}
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7402, file: !109, line: 5074, baseType: !7405, size: 96)
!7405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !7406)
!7406 = !{!7407, !7408, !7409}
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7405, file: !210, line: 57, baseType: !213, size: 32)
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7405, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7405, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7402, file: !109, line: 5075, baseType: !7356, size: 64, offset: 96)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7402, file: !109, line: 5076, baseType: !7412, offset: 160)
!7412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7325, file: !114, line: 343, baseType: !7414, size: 64, offset: 832)
!7414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !7415)
!7415 = !{!7416, !7417}
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7414, file: !190, line: 63, baseType: !173, size: 32)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7414, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!7418 = !DILocalVariable(name: "thread", arg: 1, scope: !7319, file: !7320, line: 27, type: !7323)
!7419 = !DILocation(line: 27, column: 36, scope: !7319)
!7420 = !DILocation(line: 29, column: 6, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7319, file: !7320, line: 29, column: 6)
!7422 = !DILocation(line: 29, column: 18, scope: !7421)
!7423 = !DILocation(line: 29, column: 15, scope: !7421)
!7424 = !DILocation(line: 29, column: 6, scope: !7319)
!7425 = !DILocalVariable(name: "result", scope: !7426, file: !6645, line: 1029, type: !173)
!7426 = distinct !DISubprogram(name: "__get_IPSR", scope: !6645, file: !6645, line: 1027, type: !7427, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3519, retainedNodes: !223)
!7427 = !DISubroutineType(types: !7428)
!7428 = !{!173}
!7429 = !DILocation(line: 1029, column: 12, scope: !7426, inlinedAt: !7430)
!7430 = distinct !DILocation(line: 48, column: 10, scope: !7431, inlinedAt: !7433)
!7431 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7432, file: !7432, line: 46, type: !3780, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3519, retainedNodes: !223)
!7432 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7433 = distinct !DILocation(line: 30, column: 7, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7435, file: !7320, line: 30, column: 7)
!7435 = distinct !DILexicalBlock(scope: !7421, file: !7320, line: 29, column: 26)
!7436 = !DILocation(line: 1031, column: 3, scope: !7426, inlinedAt: !7430)
!7437 = !{i64 2334342}
!7438 = !DILocation(line: 1032, column: 10, scope: !7426, inlinedAt: !7430)
!7439 = !DILocation(line: 48, column: 9, scope: !7431, inlinedAt: !7433)
!7440 = !DILocation(line: 30, column: 7, scope: !7435)
!7441 = !DILocation(line: 42, column: 14, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7434, file: !7320, line: 30, column: 25)
!7443 = !DILocation(line: 48, column: 15, scope: !7442)
!7444 = !DILocation(line: 49, column: 3, scope: !7442)
!7445 = !DILocation(line: 50, column: 2, scope: !7435)
!7446 = !DILocation(line: 52, column: 17, scope: !7319)
!7447 = !DILocation(line: 52, column: 2, scope: !7319)
!7448 = !DILocation(line: 53, column: 1, scope: !7319)
!7449 = distinct !DISubprogram(name: "strcpy", scope: !7450, file: !7450, line: 20, type: !7451, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7450 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7451 = !DISubroutineType(types: !7452)
!7452 = !{!2822, !7453, !7454}
!7453 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2822)
!7454 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !256)
!7455 = !DILocalVariable(name: "d", arg: 1, scope: !7449, file: !7450, line: 20, type: !7453)
!7456 = !DILocation(line: 20, column: 30, scope: !7449)
!7457 = !DILocalVariable(name: "s", arg: 2, scope: !7449, file: !7450, line: 20, type: !7454)
!7458 = !DILocation(line: 20, column: 55, scope: !7449)
!7459 = !DILocalVariable(name: "dest", scope: !7449, file: !7450, line: 22, type: !2822)
!7460 = !DILocation(line: 22, column: 8, scope: !7449)
!7461 = !DILocation(line: 22, column: 15, scope: !7449)
!7462 = !DILocation(line: 24, column: 2, scope: !7449)
!7463 = !DILocation(line: 24, column: 10, scope: !7449)
!7464 = !DILocation(line: 24, column: 9, scope: !7449)
!7465 = !DILocation(line: 24, column: 12, scope: !7449)
!7466 = !DILocation(line: 25, column: 9, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7449, file: !7450, line: 24, column: 21)
!7468 = !DILocation(line: 25, column: 8, scope: !7467)
!7469 = !DILocation(line: 25, column: 4, scope: !7467)
!7470 = !DILocation(line: 25, column: 6, scope: !7467)
!7471 = !DILocation(line: 26, column: 4, scope: !7467)
!7472 = !DILocation(line: 27, column: 4, scope: !7467)
!7473 = distinct !{!7473, !7462, !7474}
!7474 = !DILocation(line: 28, column: 2, scope: !7449)
!7475 = !DILocation(line: 30, column: 3, scope: !7449)
!7476 = !DILocation(line: 30, column: 5, scope: !7449)
!7477 = !DILocation(line: 32, column: 9, scope: !7449)
!7478 = !DILocation(line: 32, column: 2, scope: !7449)
!7479 = distinct !DISubprogram(name: "strncpy", scope: !7450, file: !7450, line: 42, type: !7480, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7480 = !DISubroutineType(types: !7481)
!7481 = !{!2822, !7453, !7454, !217}
!7482 = !DILocalVariable(name: "d", arg: 1, scope: !7479, file: !7450, line: 42, type: !7453)
!7483 = !DILocation(line: 42, column: 31, scope: !7479)
!7484 = !DILocalVariable(name: "s", arg: 2, scope: !7479, file: !7450, line: 42, type: !7454)
!7485 = !DILocation(line: 42, column: 56, scope: !7479)
!7486 = !DILocalVariable(name: "n", arg: 3, scope: !7479, file: !7450, line: 42, type: !217)
!7487 = !DILocation(line: 42, column: 66, scope: !7479)
!7488 = !DILocalVariable(name: "dest", scope: !7479, file: !7450, line: 44, type: !2822)
!7489 = !DILocation(line: 44, column: 8, scope: !7479)
!7490 = !DILocation(line: 44, column: 15, scope: !7479)
!7491 = !DILocation(line: 46, column: 2, scope: !7479)
!7492 = !DILocation(line: 46, column: 10, scope: !7479)
!7493 = !DILocation(line: 46, column: 12, scope: !7479)
!7494 = !DILocation(line: 46, column: 17, scope: !7479)
!7495 = !DILocation(line: 46, column: 21, scope: !7479)
!7496 = !DILocation(line: 46, column: 20, scope: !7479)
!7497 = !DILocation(line: 46, column: 23, scope: !7479)
!7498 = !DILocation(line: 0, scope: !7479)
!7499 = !DILocation(line: 47, column: 9, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7479, file: !7450, line: 46, column: 32)
!7501 = !DILocation(line: 47, column: 8, scope: !7500)
!7502 = !DILocation(line: 47, column: 4, scope: !7500)
!7503 = !DILocation(line: 47, column: 6, scope: !7500)
!7504 = !DILocation(line: 48, column: 4, scope: !7500)
!7505 = !DILocation(line: 49, column: 4, scope: !7500)
!7506 = !DILocation(line: 50, column: 4, scope: !7500)
!7507 = distinct !{!7507, !7491, !7508}
!7508 = !DILocation(line: 51, column: 2, scope: !7479)
!7509 = !DILocation(line: 53, column: 2, scope: !7479)
!7510 = !DILocation(line: 53, column: 9, scope: !7479)
!7511 = !DILocation(line: 53, column: 11, scope: !7479)
!7512 = !DILocation(line: 54, column: 4, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7479, file: !7450, line: 53, column: 16)
!7514 = !DILocation(line: 54, column: 6, scope: !7513)
!7515 = !DILocation(line: 55, column: 4, scope: !7513)
!7516 = !DILocation(line: 56, column: 4, scope: !7513)
!7517 = distinct !{!7517, !7509, !7518}
!7518 = !DILocation(line: 57, column: 2, scope: !7479)
!7519 = !DILocation(line: 59, column: 9, scope: !7479)
!7520 = !DILocation(line: 59, column: 2, scope: !7479)
!7521 = distinct !DISubprogram(name: "strchr", scope: !7450, file: !7450, line: 69, type: !7522, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7522 = !DISubroutineType(types: !7523)
!7523 = !{!2822, !256, !103}
!7524 = !DILocalVariable(name: "s", arg: 1, scope: !7521, file: !7450, line: 69, type: !256)
!7525 = !DILocation(line: 69, column: 26, scope: !7521)
!7526 = !DILocalVariable(name: "c", arg: 2, scope: !7521, file: !7450, line: 69, type: !103)
!7527 = !DILocation(line: 69, column: 33, scope: !7521)
!7528 = !DILocalVariable(name: "tmp", scope: !7521, file: !7450, line: 71, type: !237)
!7529 = !DILocation(line: 71, column: 7, scope: !7521)
!7530 = !DILocation(line: 71, column: 20, scope: !7521)
!7531 = !DILocation(line: 71, column: 13, scope: !7521)
!7532 = !DILocation(line: 73, column: 2, scope: !7521)
!7533 = !DILocation(line: 73, column: 11, scope: !7521)
!7534 = !DILocation(line: 73, column: 10, scope: !7521)
!7535 = !DILocation(line: 73, column: 16, scope: !7521)
!7536 = !DILocation(line: 73, column: 13, scope: !7521)
!7537 = !DILocation(line: 73, column: 21, scope: !7521)
!7538 = !DILocation(line: 73, column: 26, scope: !7521)
!7539 = !DILocation(line: 73, column: 25, scope: !7521)
!7540 = !DILocation(line: 73, column: 28, scope: !7521)
!7541 = !DILocation(line: 0, scope: !7521)
!7542 = !DILocation(line: 74, column: 4, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7521, file: !7450, line: 73, column: 38)
!7544 = distinct !{!7544, !7532, !7545}
!7545 = !DILocation(line: 75, column: 2, scope: !7521)
!7546 = !DILocation(line: 77, column: 11, scope: !7521)
!7547 = !DILocation(line: 77, column: 10, scope: !7521)
!7548 = !DILocation(line: 77, column: 16, scope: !7521)
!7549 = !DILocation(line: 77, column: 13, scope: !7521)
!7550 = !DILocation(line: 77, column: 9, scope: !7521)
!7551 = !DILocation(line: 77, column: 32, scope: !7521)
!7552 = !DILocation(line: 77, column: 2, scope: !7521)
!7553 = distinct !DISubprogram(name: "strrchr", scope: !7450, file: !7450, line: 87, type: !7522, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7554 = !DILocalVariable(name: "s", arg: 1, scope: !7553, file: !7450, line: 87, type: !256)
!7555 = !DILocation(line: 87, column: 27, scope: !7553)
!7556 = !DILocalVariable(name: "c", arg: 2, scope: !7553, file: !7450, line: 87, type: !103)
!7557 = !DILocation(line: 87, column: 34, scope: !7553)
!7558 = !DILocalVariable(name: "match", scope: !7553, file: !7450, line: 89, type: !2822)
!7559 = !DILocation(line: 89, column: 8, scope: !7553)
!7560 = !DILocation(line: 91, column: 2, scope: !7553)
!7561 = !DILocation(line: 92, column: 8, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7563, file: !7450, line: 92, column: 7)
!7563 = distinct !DILexicalBlock(scope: !7553, file: !7450, line: 91, column: 5)
!7564 = !DILocation(line: 92, column: 7, scope: !7562)
!7565 = !DILocation(line: 92, column: 19, scope: !7562)
!7566 = !DILocation(line: 92, column: 13, scope: !7562)
!7567 = !DILocation(line: 92, column: 10, scope: !7562)
!7568 = !DILocation(line: 92, column: 7, scope: !7563)
!7569 = !DILocation(line: 93, column: 20, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7562, file: !7450, line: 92, column: 22)
!7571 = !DILocation(line: 93, column: 10, scope: !7570)
!7572 = !DILocation(line: 94, column: 3, scope: !7570)
!7573 = !DILocation(line: 95, column: 2, scope: !7563)
!7574 = !DILocation(line: 95, column: 13, scope: !7553)
!7575 = !DILocation(line: 95, column: 11, scope: !7553)
!7576 = distinct !{!7576, !7560, !7577}
!7577 = !DILocation(line: 95, column: 15, scope: !7553)
!7578 = !DILocation(line: 97, column: 9, scope: !7553)
!7579 = !DILocation(line: 97, column: 2, scope: !7553)
!7580 = distinct !DISubprogram(name: "strlen", scope: !7450, file: !7450, line: 107, type: !7581, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7581 = !DISubroutineType(types: !7582)
!7582 = !{!217, !256}
!7583 = !DILocalVariable(name: "s", arg: 1, scope: !7580, file: !7450, line: 107, type: !256)
!7584 = !DILocation(line: 107, column: 27, scope: !7580)
!7585 = !DILocalVariable(name: "n", scope: !7580, file: !7450, line: 109, type: !217)
!7586 = !DILocation(line: 109, column: 9, scope: !7580)
!7587 = !DILocation(line: 111, column: 2, scope: !7580)
!7588 = !DILocation(line: 111, column: 10, scope: !7580)
!7589 = !DILocation(line: 111, column: 9, scope: !7580)
!7590 = !DILocation(line: 111, column: 12, scope: !7580)
!7591 = !DILocation(line: 112, column: 4, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7580, file: !7450, line: 111, column: 21)
!7593 = !DILocation(line: 113, column: 4, scope: !7592)
!7594 = distinct !{!7594, !7587, !7595}
!7595 = !DILocation(line: 114, column: 2, scope: !7580)
!7596 = !DILocation(line: 116, column: 9, scope: !7580)
!7597 = !DILocation(line: 116, column: 2, scope: !7580)
!7598 = distinct !DISubprogram(name: "strnlen", scope: !7450, file: !7450, line: 126, type: !7599, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7599 = !DISubroutineType(types: !7600)
!7600 = !{!217, !256, !217}
!7601 = !DILocalVariable(name: "s", arg: 1, scope: !7598, file: !7450, line: 126, type: !256)
!7602 = !DILocation(line: 126, column: 28, scope: !7598)
!7603 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7598, file: !7450, line: 126, type: !217)
!7604 = !DILocation(line: 126, column: 38, scope: !7598)
!7605 = !DILocalVariable(name: "n", scope: !7598, file: !7450, line: 128, type: !217)
!7606 = !DILocation(line: 128, column: 9, scope: !7598)
!7607 = !DILocation(line: 130, column: 2, scope: !7598)
!7608 = !DILocation(line: 130, column: 10, scope: !7598)
!7609 = !DILocation(line: 130, column: 9, scope: !7598)
!7610 = !DILocation(line: 130, column: 12, scope: !7598)
!7611 = !DILocation(line: 130, column: 20, scope: !7598)
!7612 = !DILocation(line: 130, column: 23, scope: !7598)
!7613 = !DILocation(line: 130, column: 27, scope: !7598)
!7614 = !DILocation(line: 130, column: 25, scope: !7598)
!7615 = !DILocation(line: 0, scope: !7598)
!7616 = !DILocation(line: 131, column: 4, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7598, file: !7450, line: 130, column: 35)
!7618 = !DILocation(line: 132, column: 4, scope: !7617)
!7619 = distinct !{!7619, !7607, !7620}
!7620 = !DILocation(line: 133, column: 2, scope: !7598)
!7621 = !DILocation(line: 135, column: 9, scope: !7598)
!7622 = !DILocation(line: 135, column: 2, scope: !7598)
!7623 = distinct !DISubprogram(name: "strcmp", scope: !7450, file: !7450, line: 145, type: !7624, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7624 = !DISubroutineType(types: !7625)
!7625 = !{!103, !256, !256}
!7626 = !DILocalVariable(name: "s1", arg: 1, scope: !7623, file: !7450, line: 145, type: !256)
!7627 = !DILocation(line: 145, column: 24, scope: !7623)
!7628 = !DILocalVariable(name: "s2", arg: 2, scope: !7623, file: !7450, line: 145, type: !256)
!7629 = !DILocation(line: 145, column: 40, scope: !7623)
!7630 = !DILocation(line: 147, column: 2, scope: !7623)
!7631 = !DILocation(line: 147, column: 11, scope: !7623)
!7632 = !DILocation(line: 147, column: 10, scope: !7623)
!7633 = !DILocation(line: 147, column: 18, scope: !7623)
!7634 = !DILocation(line: 147, column: 17, scope: !7623)
!7635 = !DILocation(line: 147, column: 14, scope: !7623)
!7636 = !DILocation(line: 147, column: 22, scope: !7623)
!7637 = !DILocation(line: 147, column: 27, scope: !7623)
!7638 = !DILocation(line: 147, column: 26, scope: !7623)
!7639 = !DILocation(line: 147, column: 30, scope: !7623)
!7640 = !DILocation(line: 0, scope: !7623)
!7641 = !DILocation(line: 148, column: 5, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7623, file: !7450, line: 147, column: 40)
!7643 = !DILocation(line: 149, column: 5, scope: !7642)
!7644 = distinct !{!7644, !7630, !7645}
!7645 = !DILocation(line: 150, column: 2, scope: !7623)
!7646 = !DILocation(line: 152, column: 10, scope: !7623)
!7647 = !DILocation(line: 152, column: 9, scope: !7623)
!7648 = !DILocation(line: 152, column: 16, scope: !7623)
!7649 = !DILocation(line: 152, column: 15, scope: !7623)
!7650 = !DILocation(line: 152, column: 13, scope: !7623)
!7651 = !DILocation(line: 152, column: 2, scope: !7623)
!7652 = distinct !DISubprogram(name: "strncmp", scope: !7450, file: !7450, line: 162, type: !7653, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7653 = !DISubroutineType(types: !7654)
!7654 = !{!103, !256, !256, !217}
!7655 = !DILocalVariable(name: "s1", arg: 1, scope: !7652, file: !7450, line: 162, type: !256)
!7656 = !DILocation(line: 162, column: 25, scope: !7652)
!7657 = !DILocalVariable(name: "s2", arg: 2, scope: !7652, file: !7450, line: 162, type: !256)
!7658 = !DILocation(line: 162, column: 41, scope: !7652)
!7659 = !DILocalVariable(name: "n", arg: 3, scope: !7652, file: !7450, line: 162, type: !217)
!7660 = !DILocation(line: 162, column: 52, scope: !7652)
!7661 = !DILocation(line: 164, column: 2, scope: !7652)
!7662 = !DILocation(line: 164, column: 10, scope: !7652)
!7663 = !DILocation(line: 164, column: 12, scope: !7652)
!7664 = !DILocation(line: 164, column: 17, scope: !7652)
!7665 = !DILocation(line: 164, column: 22, scope: !7652)
!7666 = !DILocation(line: 164, column: 21, scope: !7652)
!7667 = !DILocation(line: 164, column: 29, scope: !7652)
!7668 = !DILocation(line: 164, column: 28, scope: !7652)
!7669 = !DILocation(line: 164, column: 25, scope: !7652)
!7670 = !DILocation(line: 164, column: 33, scope: !7652)
!7671 = !DILocation(line: 164, column: 38, scope: !7652)
!7672 = !DILocation(line: 164, column: 37, scope: !7652)
!7673 = !DILocation(line: 164, column: 41, scope: !7652)
!7674 = !DILocation(line: 0, scope: !7652)
!7675 = !DILocation(line: 165, column: 5, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7652, file: !7450, line: 164, column: 51)
!7677 = !DILocation(line: 166, column: 5, scope: !7676)
!7678 = !DILocation(line: 167, column: 4, scope: !7676)
!7679 = distinct !{!7679, !7661, !7680}
!7680 = !DILocation(line: 168, column: 2, scope: !7652)
!7681 = !DILocation(line: 170, column: 10, scope: !7652)
!7682 = !DILocation(line: 170, column: 12, scope: !7652)
!7683 = !DILocation(line: 170, column: 9, scope: !7652)
!7684 = !DILocation(line: 170, column: 26, scope: !7652)
!7685 = !DILocation(line: 170, column: 25, scope: !7652)
!7686 = !DILocation(line: 170, column: 32, scope: !7652)
!7687 = !DILocation(line: 170, column: 31, scope: !7652)
!7688 = !DILocation(line: 170, column: 29, scope: !7652)
!7689 = !DILocation(line: 170, column: 2, scope: !7652)
!7690 = distinct !DISubprogram(name: "strtok_r", scope: !7450, file: !7450, line: 180, type: !7691, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7691 = !DISubroutineType(types: !7692)
!7692 = !{!2822, !2822, !256, !7693}
!7693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 32)
!7694 = !DILocalVariable(name: "str", arg: 1, scope: !7690, file: !7450, line: 180, type: !2822)
!7695 = !DILocation(line: 180, column: 22, scope: !7690)
!7696 = !DILocalVariable(name: "sep", arg: 2, scope: !7690, file: !7450, line: 180, type: !256)
!7697 = !DILocation(line: 180, column: 39, scope: !7690)
!7698 = !DILocalVariable(name: "state", arg: 3, scope: !7690, file: !7450, line: 180, type: !7693)
!7699 = !DILocation(line: 180, column: 51, scope: !7690)
!7700 = !DILocalVariable(name: "start", scope: !7690, file: !7450, line: 182, type: !2822)
!7701 = !DILocation(line: 182, column: 8, scope: !7690)
!7702 = !DILocalVariable(name: "end", scope: !7690, file: !7450, line: 182, type: !2822)
!7703 = !DILocation(line: 182, column: 16, scope: !7690)
!7704 = !DILocation(line: 184, column: 10, scope: !7690)
!7705 = !DILocation(line: 184, column: 16, scope: !7690)
!7706 = !DILocation(line: 184, column: 23, scope: !7690)
!7707 = !DILocation(line: 184, column: 22, scope: !7690)
!7708 = !DILocation(line: 184, column: 8, scope: !7690)
!7709 = !DILocation(line: 187, column: 2, scope: !7690)
!7710 = !DILocation(line: 187, column: 10, scope: !7690)
!7711 = !DILocation(line: 187, column: 9, scope: !7690)
!7712 = !DILocation(line: 187, column: 16, scope: !7690)
!7713 = !DILocation(line: 187, column: 26, scope: !7690)
!7714 = !DILocation(line: 187, column: 32, scope: !7690)
!7715 = !DILocation(line: 187, column: 31, scope: !7690)
!7716 = !DILocation(line: 187, column: 19, scope: !7690)
!7717 = !DILocation(line: 0, scope: !7690)
!7718 = !DILocation(line: 188, column: 8, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7690, file: !7450, line: 187, column: 40)
!7720 = distinct !{!7720, !7709, !7721}
!7721 = !DILocation(line: 189, column: 2, scope: !7690)
!7722 = !DILocation(line: 191, column: 7, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7690, file: !7450, line: 191, column: 6)
!7724 = !DILocation(line: 191, column: 6, scope: !7723)
!7725 = !DILocation(line: 191, column: 13, scope: !7723)
!7726 = !DILocation(line: 191, column: 6, scope: !7690)
!7727 = !DILocation(line: 192, column: 12, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7723, file: !7450, line: 191, column: 22)
!7729 = !DILocation(line: 192, column: 4, scope: !7728)
!7730 = !DILocation(line: 192, column: 10, scope: !7728)
!7731 = !DILocation(line: 193, column: 3, scope: !7728)
!7732 = !DILocation(line: 197, column: 8, scope: !7690)
!7733 = !DILocation(line: 197, column: 6, scope: !7690)
!7734 = !DILocation(line: 198, column: 2, scope: !7690)
!7735 = !DILocation(line: 198, column: 10, scope: !7690)
!7736 = !DILocation(line: 198, column: 9, scope: !7690)
!7737 = !DILocation(line: 198, column: 14, scope: !7690)
!7738 = !DILocation(line: 198, column: 25, scope: !7690)
!7739 = !DILocation(line: 198, column: 31, scope: !7690)
!7740 = !DILocation(line: 198, column: 30, scope: !7690)
!7741 = !DILocation(line: 198, column: 18, scope: !7690)
!7742 = !DILocation(line: 198, column: 17, scope: !7690)
!7743 = !DILocation(line: 199, column: 6, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7690, file: !7450, line: 198, column: 37)
!7745 = distinct !{!7745, !7734, !7746}
!7746 = !DILocation(line: 200, column: 2, scope: !7690)
!7747 = !DILocation(line: 202, column: 7, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7690, file: !7450, line: 202, column: 6)
!7749 = !DILocation(line: 202, column: 6, scope: !7748)
!7750 = !DILocation(line: 202, column: 11, scope: !7748)
!7751 = !DILocation(line: 202, column: 6, scope: !7690)
!7752 = !DILocation(line: 203, column: 4, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7748, file: !7450, line: 202, column: 20)
!7754 = !DILocation(line: 203, column: 8, scope: !7753)
!7755 = !DILocation(line: 204, column: 12, scope: !7753)
!7756 = !DILocation(line: 204, column: 16, scope: !7753)
!7757 = !DILocation(line: 204, column: 4, scope: !7753)
!7758 = !DILocation(line: 204, column: 10, scope: !7753)
!7759 = !DILocation(line: 205, column: 2, scope: !7753)
!7760 = !DILocation(line: 206, column: 12, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7748, file: !7450, line: 205, column: 9)
!7762 = !DILocation(line: 206, column: 4, scope: !7761)
!7763 = !DILocation(line: 206, column: 10, scope: !7761)
!7764 = !DILocation(line: 209, column: 9, scope: !7690)
!7765 = !DILocation(line: 209, column: 2, scope: !7690)
!7766 = !DILocation(line: 210, column: 1, scope: !7690)
!7767 = distinct !DISubprogram(name: "strcat", scope: !7450, file: !7450, line: 212, type: !7451, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7768 = !DILocalVariable(name: "dest", arg: 1, scope: !7767, file: !7450, line: 212, type: !7453)
!7769 = !DILocation(line: 212, column: 30, scope: !7767)
!7770 = !DILocalVariable(name: "src", arg: 2, scope: !7767, file: !7450, line: 212, type: !7454)
!7771 = !DILocation(line: 212, column: 58, scope: !7767)
!7772 = !DILocation(line: 214, column: 9, scope: !7767)
!7773 = !DILocation(line: 214, column: 23, scope: !7767)
!7774 = !DILocation(line: 214, column: 16, scope: !7767)
!7775 = !DILocation(line: 214, column: 14, scope: !7767)
!7776 = !DILocation(line: 214, column: 30, scope: !7767)
!7777 = !DILocation(line: 214, column: 2, scope: !7767)
!7778 = !DILocation(line: 215, column: 9, scope: !7767)
!7779 = !DILocation(line: 215, column: 2, scope: !7767)
!7780 = distinct !DISubprogram(name: "strncat", scope: !7450, file: !7450, line: 218, type: !7480, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7781 = !DILocalVariable(name: "dest", arg: 1, scope: !7780, file: !7450, line: 218, type: !7453)
!7782 = !DILocation(line: 218, column: 31, scope: !7780)
!7783 = !DILocalVariable(name: "src", arg: 2, scope: !7780, file: !7450, line: 218, type: !7454)
!7784 = !DILocation(line: 218, column: 59, scope: !7780)
!7785 = !DILocalVariable(name: "n", arg: 3, scope: !7780, file: !7450, line: 219, type: !217)
!7786 = !DILocation(line: 219, column: 15, scope: !7780)
!7787 = !DILocalVariable(name: "orig_dest", scope: !7780, file: !7450, line: 221, type: !2822)
!7788 = !DILocation(line: 221, column: 8, scope: !7780)
!7789 = !DILocation(line: 221, column: 20, scope: !7780)
!7790 = !DILocalVariable(name: "len", scope: !7780, file: !7450, line: 222, type: !217)
!7791 = !DILocation(line: 222, column: 9, scope: !7780)
!7792 = !DILocation(line: 222, column: 22, scope: !7780)
!7793 = !DILocation(line: 222, column: 15, scope: !7780)
!7794 = !DILocation(line: 224, column: 10, scope: !7780)
!7795 = !DILocation(line: 224, column: 7, scope: !7780)
!7796 = !DILocation(line: 225, column: 2, scope: !7780)
!7797 = !DILocation(line: 225, column: 11, scope: !7780)
!7798 = !DILocation(line: 225, column: 14, scope: !7780)
!7799 = !DILocation(line: 225, column: 19, scope: !7780)
!7800 = !DILocation(line: 225, column: 24, scope: !7780)
!7801 = !DILocation(line: 225, column: 23, scope: !7780)
!7802 = !DILocation(line: 225, column: 28, scope: !7780)
!7803 = !DILocation(line: 0, scope: !7780)
!7804 = !DILocation(line: 226, column: 17, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7780, file: !7450, line: 225, column: 38)
!7806 = !DILocation(line: 226, column: 13, scope: !7805)
!7807 = !DILocation(line: 226, column: 8, scope: !7805)
!7808 = !DILocation(line: 226, column: 11, scope: !7805)
!7809 = distinct !{!7809, !7796, !7810}
!7810 = !DILocation(line: 227, column: 2, scope: !7780)
!7811 = !DILocation(line: 228, column: 3, scope: !7780)
!7812 = !DILocation(line: 228, column: 8, scope: !7780)
!7813 = !DILocation(line: 230, column: 9, scope: !7780)
!7814 = !DILocation(line: 230, column: 2, scope: !7780)
!7815 = distinct !DISubprogram(name: "memcmp", scope: !7450, file: !7450, line: 239, type: !7816, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7816 = !DISubroutineType(types: !7817)
!7817 = !{!103, !13, !13, !217}
!7818 = !DILocalVariable(name: "m1", arg: 1, scope: !7815, file: !7450, line: 239, type: !13)
!7819 = !DILocation(line: 239, column: 24, scope: !7815)
!7820 = !DILocalVariable(name: "m2", arg: 2, scope: !7815, file: !7450, line: 239, type: !13)
!7821 = !DILocation(line: 239, column: 40, scope: !7815)
!7822 = !DILocalVariable(name: "n", arg: 3, scope: !7815, file: !7450, line: 239, type: !217)
!7823 = !DILocation(line: 239, column: 51, scope: !7815)
!7824 = !DILocalVariable(name: "c1", scope: !7815, file: !7450, line: 241, type: !256)
!7825 = !DILocation(line: 241, column: 14, scope: !7815)
!7826 = !DILocation(line: 241, column: 19, scope: !7815)
!7827 = !DILocalVariable(name: "c2", scope: !7815, file: !7450, line: 242, type: !256)
!7828 = !DILocation(line: 242, column: 14, scope: !7815)
!7829 = !DILocation(line: 242, column: 19, scope: !7815)
!7830 = !DILocation(line: 244, column: 7, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7815, file: !7450, line: 244, column: 6)
!7832 = !DILocation(line: 244, column: 6, scope: !7815)
!7833 = !DILocation(line: 245, column: 3, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7831, file: !7450, line: 244, column: 10)
!7835 = !DILocation(line: 248, column: 2, scope: !7815)
!7836 = !DILocation(line: 248, column: 10, scope: !7815)
!7837 = !DILocation(line: 248, column: 14, scope: !7815)
!7838 = !DILocation(line: 248, column: 19, scope: !7815)
!7839 = !DILocation(line: 248, column: 24, scope: !7815)
!7840 = !DILocation(line: 248, column: 23, scope: !7815)
!7841 = !DILocation(line: 248, column: 31, scope: !7815)
!7842 = !DILocation(line: 248, column: 30, scope: !7815)
!7843 = !DILocation(line: 248, column: 27, scope: !7815)
!7844 = !DILocation(line: 0, scope: !7815)
!7845 = !DILocation(line: 249, column: 5, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7815, file: !7450, line: 248, column: 36)
!7847 = !DILocation(line: 250, column: 5, scope: !7846)
!7848 = distinct !{!7848, !7835, !7849}
!7849 = !DILocation(line: 251, column: 2, scope: !7815)
!7850 = !DILocation(line: 253, column: 10, scope: !7815)
!7851 = !DILocation(line: 253, column: 9, scope: !7815)
!7852 = !DILocation(line: 253, column: 16, scope: !7815)
!7853 = !DILocation(line: 253, column: 15, scope: !7815)
!7854 = !DILocation(line: 253, column: 13, scope: !7815)
!7855 = !DILocation(line: 253, column: 2, scope: !7815)
!7856 = !DILocation(line: 254, column: 1, scope: !7815)
!7857 = distinct !DISubprogram(name: "memmove", scope: !7450, file: !7450, line: 263, type: !7858, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7858 = !DISubroutineType(types: !7859)
!7859 = !{!102, !102, !13, !217}
!7860 = !DILocalVariable(name: "d", arg: 1, scope: !7857, file: !7450, line: 263, type: !102)
!7861 = !DILocation(line: 263, column: 21, scope: !7857)
!7862 = !DILocalVariable(name: "s", arg: 2, scope: !7857, file: !7450, line: 263, type: !13)
!7863 = !DILocation(line: 263, column: 36, scope: !7857)
!7864 = !DILocalVariable(name: "n", arg: 3, scope: !7857, file: !7450, line: 263, type: !217)
!7865 = !DILocation(line: 263, column: 46, scope: !7857)
!7866 = !DILocalVariable(name: "dest", scope: !7857, file: !7450, line: 265, type: !2822)
!7867 = !DILocation(line: 265, column: 8, scope: !7857)
!7868 = !DILocation(line: 265, column: 15, scope: !7857)
!7869 = !DILocalVariable(name: "src", scope: !7857, file: !7450, line: 266, type: !256)
!7870 = !DILocation(line: 266, column: 14, scope: !7857)
!7871 = !DILocation(line: 266, column: 21, scope: !7857)
!7872 = !DILocation(line: 268, column: 16, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7857, file: !7450, line: 268, column: 6)
!7874 = !DILocation(line: 268, column: 23, scope: !7873)
!7875 = !DILocation(line: 268, column: 21, scope: !7873)
!7876 = !DILocation(line: 268, column: 30, scope: !7873)
!7877 = !DILocation(line: 268, column: 28, scope: !7873)
!7878 = !DILocation(line: 268, column: 6, scope: !7857)
!7879 = !DILocation(line: 274, column: 3, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7873, file: !7450, line: 268, column: 33)
!7881 = !DILocation(line: 274, column: 10, scope: !7880)
!7882 = !DILocation(line: 274, column: 12, scope: !7880)
!7883 = !DILocation(line: 275, column: 5, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7880, file: !7450, line: 274, column: 17)
!7885 = !DILocation(line: 276, column: 14, scope: !7884)
!7886 = !DILocation(line: 276, column: 18, scope: !7884)
!7887 = !DILocation(line: 276, column: 4, scope: !7884)
!7888 = !DILocation(line: 276, column: 9, scope: !7884)
!7889 = !DILocation(line: 276, column: 12, scope: !7884)
!7890 = distinct !{!7890, !7879, !7891}
!7891 = !DILocation(line: 277, column: 3, scope: !7880)
!7892 = !DILocation(line: 278, column: 2, scope: !7880)
!7893 = !DILocation(line: 280, column: 3, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7873, file: !7450, line: 278, column: 9)
!7895 = !DILocation(line: 280, column: 10, scope: !7894)
!7896 = !DILocation(line: 280, column: 12, scope: !7894)
!7897 = !DILocation(line: 281, column: 13, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7894, file: !7450, line: 280, column: 17)
!7899 = !DILocation(line: 281, column: 12, scope: !7898)
!7900 = !DILocation(line: 281, column: 5, scope: !7898)
!7901 = !DILocation(line: 281, column: 10, scope: !7898)
!7902 = !DILocation(line: 282, column: 8, scope: !7898)
!7903 = !DILocation(line: 283, column: 7, scope: !7898)
!7904 = !DILocation(line: 284, column: 5, scope: !7898)
!7905 = distinct !{!7905, !7893, !7906}
!7906 = !DILocation(line: 285, column: 3, scope: !7894)
!7907 = !DILocation(line: 288, column: 9, scope: !7857)
!7908 = !DILocation(line: 288, column: 2, scope: !7857)
!7909 = distinct !DISubprogram(name: "memcpy", scope: !7450, file: !7450, line: 298, type: !7910, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7910 = !DISubroutineType(types: !7911)
!7911 = !{!102, !7912, !7913, !217}
!7912 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7913 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7914 = !DILocalVariable(name: "d", arg: 1, scope: !7909, file: !7450, line: 298, type: !7912)
!7915 = !DILocation(line: 298, column: 30, scope: !7909)
!7916 = !DILocalVariable(name: "s", arg: 2, scope: !7909, file: !7450, line: 298, type: !7913)
!7917 = !DILocation(line: 298, column: 55, scope: !7909)
!7918 = !DILocalVariable(name: "n", arg: 3, scope: !7909, file: !7450, line: 298, type: !217)
!7919 = !DILocation(line: 298, column: 65, scope: !7909)
!7920 = !DILocalVariable(name: "d_byte", scope: !7909, file: !7450, line: 302, type: !1652)
!7921 = !DILocation(line: 302, column: 17, scope: !7909)
!7922 = !DILocation(line: 302, column: 43, scope: !7909)
!7923 = !DILocalVariable(name: "s_byte", scope: !7909, file: !7450, line: 303, type: !3538)
!7924 = !DILocation(line: 303, column: 23, scope: !7909)
!7925 = !DILocation(line: 303, column: 55, scope: !7909)
!7926 = !DILocalVariable(name: "mask", scope: !7909, file: !7450, line: 306, type: !7927)
!7927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!7928 = !DILocation(line: 306, column: 18, scope: !7909)
!7929 = !DILocation(line: 308, column: 19, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7909, file: !7450, line: 308, column: 6)
!7931 = !DILocation(line: 308, column: 8, scope: !7930)
!7932 = !DILocation(line: 308, column: 34, scope: !7930)
!7933 = !DILocation(line: 308, column: 23, scope: !7930)
!7934 = !DILocation(line: 308, column: 21, scope: !7930)
!7935 = !DILocation(line: 308, column: 42, scope: !7930)
!7936 = !DILocation(line: 308, column: 50, scope: !7930)
!7937 = !DILocation(line: 308, column: 6, scope: !7909)
!7938 = !DILocation(line: 312, column: 3, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7930, file: !7450, line: 308, column: 56)
!7940 = !DILocation(line: 312, column: 22, scope: !7939)
!7941 = !DILocation(line: 312, column: 11, scope: !7939)
!7942 = !DILocation(line: 312, column: 30, scope: !7939)
!7943 = !DILocation(line: 313, column: 8, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7945, file: !7450, line: 313, column: 8)
!7945 = distinct !DILexicalBlock(scope: !7939, file: !7450, line: 312, column: 38)
!7946 = !DILocation(line: 313, column: 10, scope: !7944)
!7947 = !DILocation(line: 313, column: 8, scope: !7945)
!7948 = !DILocation(line: 314, column: 12, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7944, file: !7450, line: 313, column: 16)
!7950 = !DILocation(line: 314, column: 5, scope: !7949)
!7951 = !DILocation(line: 316, column: 26, scope: !7945)
!7952 = !DILocation(line: 316, column: 18, scope: !7945)
!7953 = !DILocation(line: 316, column: 12, scope: !7945)
!7954 = !DILocation(line: 316, column: 16, scope: !7945)
!7955 = !DILocation(line: 317, column: 5, scope: !7945)
!7956 = distinct !{!7956, !7938, !7957}
!7957 = !DILocation(line: 318, column: 3, scope: !7939)
!7958 = !DILocalVariable(name: "d_word", scope: !7939, file: !7450, line: 322, type: !3540)
!7959 = !DILocation(line: 322, column: 15, scope: !7939)
!7960 = !DILocation(line: 322, column: 38, scope: !7939)
!7961 = !DILocation(line: 322, column: 24, scope: !7939)
!7962 = !DILocalVariable(name: "s_word", scope: !7939, file: !7450, line: 323, type: !3543)
!7963 = !DILocation(line: 323, column: 21, scope: !7939)
!7964 = !DILocation(line: 323, column: 50, scope: !7939)
!7965 = !DILocation(line: 323, column: 30, scope: !7939)
!7966 = !DILocation(line: 325, column: 3, scope: !7939)
!7967 = !DILocation(line: 325, column: 10, scope: !7939)
!7968 = !DILocation(line: 325, column: 12, scope: !7939)
!7969 = !DILocation(line: 326, column: 26, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7939, file: !7450, line: 325, column: 35)
!7971 = !DILocation(line: 326, column: 18, scope: !7970)
!7972 = !DILocation(line: 326, column: 12, scope: !7970)
!7973 = !DILocation(line: 326, column: 16, scope: !7970)
!7974 = !DILocation(line: 327, column: 6, scope: !7970)
!7975 = distinct !{!7975, !7966, !7976}
!7976 = !DILocation(line: 328, column: 3, scope: !7939)
!7977 = !DILocation(line: 330, column: 29, scope: !7939)
!7978 = !DILocation(line: 330, column: 12, scope: !7939)
!7979 = !DILocation(line: 330, column: 10, scope: !7939)
!7980 = !DILocation(line: 331, column: 29, scope: !7939)
!7981 = !DILocation(line: 331, column: 12, scope: !7939)
!7982 = !DILocation(line: 331, column: 10, scope: !7939)
!7983 = !DILocation(line: 332, column: 2, scope: !7939)
!7984 = !DILocation(line: 337, column: 2, scope: !7909)
!7985 = !DILocation(line: 337, column: 9, scope: !7909)
!7986 = !DILocation(line: 337, column: 11, scope: !7909)
!7987 = !DILocation(line: 338, column: 25, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7909, file: !7450, line: 337, column: 16)
!7989 = !DILocation(line: 338, column: 17, scope: !7988)
!7990 = !DILocation(line: 338, column: 11, scope: !7988)
!7991 = !DILocation(line: 338, column: 15, scope: !7988)
!7992 = !DILocation(line: 339, column: 4, scope: !7988)
!7993 = distinct !{!7993, !7984, !7994}
!7994 = !DILocation(line: 340, column: 2, scope: !7909)
!7995 = !DILocation(line: 342, column: 9, scope: !7909)
!7996 = !DILocation(line: 342, column: 2, scope: !7909)
!7997 = !DILocation(line: 343, column: 1, scope: !7909)
!7998 = distinct !DISubprogram(name: "memset", scope: !7450, file: !7450, line: 352, type: !7999, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!7999 = !DISubroutineType(types: !8000)
!8000 = !{!102, !102, !103, !217}
!8001 = !DILocalVariable(name: "buf", arg: 1, scope: !7998, file: !7450, line: 352, type: !102)
!8002 = !DILocation(line: 352, column: 20, scope: !7998)
!8003 = !DILocalVariable(name: "c", arg: 2, scope: !7998, file: !7450, line: 352, type: !103)
!8004 = !DILocation(line: 352, column: 29, scope: !7998)
!8005 = !DILocalVariable(name: "n", arg: 3, scope: !7998, file: !7450, line: 352, type: !217)
!8006 = !DILocation(line: 352, column: 39, scope: !7998)
!8007 = !DILocalVariable(name: "d_byte", scope: !7998, file: !7450, line: 356, type: !1652)
!8008 = !DILocation(line: 356, column: 17, scope: !7998)
!8009 = !DILocation(line: 356, column: 43, scope: !7998)
!8010 = !DILocalVariable(name: "c_byte", scope: !7998, file: !7450, line: 357, type: !157)
!8011 = !DILocation(line: 357, column: 16, scope: !7998)
!8012 = !DILocation(line: 357, column: 40, scope: !7998)
!8013 = !DILocation(line: 357, column: 25, scope: !7998)
!8014 = !DILocation(line: 360, column: 2, scope: !7998)
!8015 = !DILocation(line: 360, column: 21, scope: !7998)
!8016 = !DILocation(line: 360, column: 10, scope: !7998)
!8017 = !DILocation(line: 360, column: 29, scope: !7998)
!8018 = !DILocation(line: 361, column: 7, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8020, file: !7450, line: 361, column: 7)
!8020 = distinct !DILexicalBlock(scope: !7998, file: !7450, line: 360, column: 57)
!8021 = !DILocation(line: 361, column: 9, scope: !8019)
!8022 = !DILocation(line: 361, column: 7, scope: !8020)
!8023 = !DILocation(line: 362, column: 11, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8019, file: !7450, line: 361, column: 15)
!8025 = !DILocation(line: 362, column: 4, scope: !8024)
!8026 = !DILocation(line: 364, column: 17, scope: !8020)
!8027 = !DILocation(line: 364, column: 11, scope: !8020)
!8028 = !DILocation(line: 364, column: 15, scope: !8020)
!8029 = !DILocation(line: 365, column: 4, scope: !8020)
!8030 = distinct !{!8030, !8014, !8031}
!8031 = !DILocation(line: 366, column: 2, scope: !7998)
!8032 = !DILocalVariable(name: "d_word", scope: !7998, file: !7450, line: 370, type: !3540)
!8033 = !DILocation(line: 370, column: 14, scope: !7998)
!8034 = !DILocation(line: 370, column: 37, scope: !7998)
!8035 = !DILocation(line: 370, column: 23, scope: !7998)
!8036 = !DILocalVariable(name: "c_word", scope: !7998, file: !7450, line: 371, type: !3541)
!8037 = !DILocation(line: 371, column: 13, scope: !7998)
!8038 = !DILocation(line: 371, column: 34, scope: !7998)
!8039 = !DILocation(line: 371, column: 22, scope: !7998)
!8040 = !DILocation(line: 373, column: 12, scope: !7998)
!8041 = !DILocation(line: 373, column: 19, scope: !7998)
!8042 = !DILocation(line: 373, column: 9, scope: !7998)
!8043 = !DILocation(line: 374, column: 12, scope: !7998)
!8044 = !DILocation(line: 374, column: 19, scope: !7998)
!8045 = !DILocation(line: 374, column: 9, scope: !7998)
!8046 = !DILocation(line: 379, column: 2, scope: !7998)
!8047 = !DILocation(line: 379, column: 9, scope: !7998)
!8048 = !DILocation(line: 379, column: 11, scope: !7998)
!8049 = !DILocation(line: 380, column: 17, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !7998, file: !7450, line: 379, column: 34)
!8051 = !DILocation(line: 380, column: 11, scope: !8050)
!8052 = !DILocation(line: 380, column: 15, scope: !8050)
!8053 = !DILocation(line: 381, column: 5, scope: !8050)
!8054 = distinct !{!8054, !8046, !8055}
!8055 = !DILocation(line: 382, column: 2, scope: !7998)
!8056 = !DILocation(line: 386, column: 28, scope: !7998)
!8057 = !DILocation(line: 386, column: 11, scope: !7998)
!8058 = !DILocation(line: 386, column: 9, scope: !7998)
!8059 = !DILocation(line: 389, column: 2, scope: !7998)
!8060 = !DILocation(line: 389, column: 9, scope: !7998)
!8061 = !DILocation(line: 389, column: 11, scope: !7998)
!8062 = !DILocation(line: 390, column: 17, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !7998, file: !7450, line: 389, column: 16)
!8064 = !DILocation(line: 390, column: 11, scope: !8063)
!8065 = !DILocation(line: 390, column: 15, scope: !8063)
!8066 = !DILocation(line: 391, column: 4, scope: !8063)
!8067 = distinct !{!8067, !8059, !8068}
!8068 = !DILocation(line: 392, column: 2, scope: !7998)
!8069 = !DILocation(line: 394, column: 9, scope: !7998)
!8070 = !DILocation(line: 394, column: 2, scope: !7998)
!8071 = !DILocation(line: 395, column: 1, scope: !7998)
!8072 = distinct !DISubprogram(name: "memchr", scope: !7450, file: !7450, line: 404, type: !8073, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3535, retainedNodes: !223)
!8073 = !DISubroutineType(types: !8074)
!8074 = !{!102, !13, !103, !217}
!8075 = !DILocalVariable(name: "s", arg: 1, scope: !8072, file: !7450, line: 404, type: !13)
!8076 = !DILocation(line: 404, column: 26, scope: !8072)
!8077 = !DILocalVariable(name: "c", arg: 2, scope: !8072, file: !7450, line: 404, type: !103)
!8078 = !DILocation(line: 404, column: 33, scope: !8072)
!8079 = !DILocalVariable(name: "n", arg: 3, scope: !8072, file: !7450, line: 404, type: !217)
!8080 = !DILocation(line: 404, column: 43, scope: !8072)
!8081 = !DILocation(line: 406, column: 6, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8072, file: !7450, line: 406, column: 6)
!8083 = !DILocation(line: 406, column: 8, scope: !8082)
!8084 = !DILocation(line: 406, column: 6, scope: !8072)
!8085 = !DILocalVariable(name: "p", scope: !8086, file: !7450, line: 407, type: !3538)
!8086 = distinct !DILexicalBlock(scope: !8082, file: !7450, line: 406, column: 14)
!8087 = !DILocation(line: 407, column: 24, scope: !8086)
!8088 = !DILocation(line: 407, column: 28, scope: !8086)
!8089 = !DILocation(line: 409, column: 3, scope: !8086)
!8090 = !DILocation(line: 410, column: 10, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8092, file: !7450, line: 410, column: 8)
!8092 = distinct !DILexicalBlock(scope: !8086, file: !7450, line: 409, column: 6)
!8093 = !DILocation(line: 410, column: 8, scope: !8091)
!8094 = !DILocation(line: 410, column: 31, scope: !8091)
!8095 = !DILocation(line: 410, column: 16, scope: !8091)
!8096 = !DILocation(line: 410, column: 13, scope: !8091)
!8097 = !DILocation(line: 410, column: 8, scope: !8092)
!8098 = !DILocation(line: 411, column: 22, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8091, file: !7450, line: 410, column: 34)
!8100 = !DILocation(line: 411, column: 24, scope: !8099)
!8101 = !DILocation(line: 411, column: 5, scope: !8099)
!8102 = !DILocation(line: 414, column: 3, scope: !8092)
!8103 = !DILocation(line: 414, column: 12, scope: !8086)
!8104 = !DILocation(line: 414, column: 16, scope: !8086)
!8105 = distinct !{!8105, !8089, !8106}
!8106 = !DILocation(line: 414, column: 20, scope: !8086)
!8107 = !DILocation(line: 415, column: 2, scope: !8086)
!8108 = !DILocation(line: 417, column: 2, scope: !8072)
!8109 = !DILocation(line: 418, column: 1, scope: !8072)
!8110 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !1053, file: !1053, line: 23, type: !3724, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8111 = !DILocalVariable(name: "hook", arg: 1, scope: !8110, file: !1053, line: 23, type: !273)
!8112 = !DILocation(line: 23, column: 34, scope: !8110)
!8113 = !DILocation(line: 25, column: 17, scope: !8110)
!8114 = !DILocation(line: 25, column: 15, scope: !8110)
!8115 = !DILocation(line: 26, column: 1, scope: !8110)
!8116 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !1053, file: !1053, line: 14, type: !274, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8117 = !DILocalVariable(name: "c", arg: 1, scope: !8116, file: !1053, line: 14, type: !103)
!8118 = !DILocation(line: 14, column: 37, scope: !8116)
!8119 = !DILocation(line: 16, column: 9, scope: !8116)
!8120 = !DILocation(line: 18, column: 2, scope: !8116)
!8121 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !1053, file: !1053, line: 28, type: !8122, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8122 = !DISubroutineType(types: !8123)
!8123 = !{!103, !103, !1049}
!8124 = !DILocalVariable(name: "c", arg: 1, scope: !8121, file: !1053, line: 28, type: !103)
!8125 = !DILocation(line: 28, column: 29, scope: !8121)
!8126 = !DILocalVariable(name: "stream", arg: 2, scope: !8121, file: !1053, line: 28, type: !1049)
!8127 = !DILocation(line: 28, column: 38, scope: !8121)
!8128 = !DILocation(line: 30, column: 10, scope: !8121)
!8129 = !DILocation(line: 30, column: 17, scope: !8121)
!8130 = !DILocation(line: 30, column: 27, scope: !8121)
!8131 = !DILocation(line: 30, column: 30, scope: !8121)
!8132 = !DILocation(line: 30, column: 37, scope: !8121)
!8133 = !DILocation(line: 30, column: 9, scope: !8121)
!8134 = !DILocation(line: 30, column: 50, scope: !8121)
!8135 = !DILocation(line: 30, column: 63, scope: !8121)
!8136 = !DILocation(line: 30, column: 2, scope: !8121)
!8137 = distinct !DISubprogram(name: "fputc", scope: !1053, file: !1053, line: 41, type: !8122, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8138 = !DILocalVariable(name: "c", arg: 1, scope: !8137, file: !1053, line: 41, type: !103)
!8139 = !DILocation(line: 41, column: 15, scope: !8137)
!8140 = !DILocalVariable(name: "stream", arg: 2, scope: !8137, file: !1053, line: 41, type: !1049)
!8141 = !DILocation(line: 41, column: 24, scope: !8137)
!8142 = !DILocation(line: 43, column: 22, scope: !8137)
!8143 = !DILocation(line: 43, column: 25, scope: !8137)
!8144 = !DILocation(line: 43, column: 9, scope: !8137)
!8145 = !DILocation(line: 43, column: 2, scope: !8137)
!8146 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8147, file: !8147, line: 72, type: !8122, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8147 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!8148 = !DILocalVariable(name: "c", arg: 1, scope: !8146, file: !8147, line: 72, type: !103)
!8149 = !DILocation(line: 72, column: 36, scope: !8146)
!8150 = !DILocalVariable(name: "stream", arg: 2, scope: !8146, file: !8147, line: 72, type: !1049)
!8151 = !DILocation(line: 72, column: 46, scope: !8146)
!8152 = !DILocation(line: 81, column: 2, scope: !8146)
!8153 = !DILocation(line: 81, column: 2, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8146, file: !8147, line: 81, column: 2)
!8155 = !{i64 2149704859}
!8156 = !DILocation(line: 82, column: 29, scope: !8146)
!8157 = !DILocation(line: 82, column: 32, scope: !8146)
!8158 = !DILocation(line: 82, column: 9, scope: !8146)
!8159 = !DILocation(line: 82, column: 2, scope: !8146)
!8160 = distinct !DISubprogram(name: "fputs", scope: !1053, file: !1053, line: 46, type: !8161, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8161 = !DISubroutineType(types: !8162)
!8162 = !{!103, !7454, !8163}
!8163 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1049)
!8164 = !DILocalVariable(name: "s", arg: 1, scope: !8160, file: !1053, line: 46, type: !7454)
!8165 = !DILocation(line: 46, column: 33, scope: !8160)
!8166 = !DILocalVariable(name: "stream", arg: 2, scope: !8160, file: !1053, line: 46, type: !8163)
!8167 = !DILocation(line: 46, column: 52, scope: !8160)
!8168 = !DILocalVariable(name: "len", scope: !8160, file: !1053, line: 48, type: !103)
!8169 = !DILocation(line: 48, column: 6, scope: !8160)
!8170 = !DILocation(line: 48, column: 19, scope: !8160)
!8171 = !DILocation(line: 48, column: 12, scope: !8160)
!8172 = !DILocalVariable(name: "ret", scope: !8160, file: !1053, line: 49, type: !103)
!8173 = !DILocation(line: 49, column: 6, scope: !8160)
!8174 = !DILocation(line: 51, column: 15, scope: !8160)
!8175 = !DILocation(line: 51, column: 21, scope: !8160)
!8176 = !DILocation(line: 51, column: 26, scope: !8160)
!8177 = !DILocation(line: 51, column: 8, scope: !8160)
!8178 = !DILocation(line: 51, column: 6, scope: !8160)
!8179 = !DILocation(line: 53, column: 9, scope: !8160)
!8180 = !DILocation(line: 53, column: 16, scope: !8160)
!8181 = !DILocation(line: 53, column: 13, scope: !8160)
!8182 = !DILocation(line: 53, column: 2, scope: !8160)
!8183 = distinct !DISubprogram(name: "fwrite", scope: !1053, file: !1053, line: 99, type: !8184, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8184 = !DISubroutineType(types: !8185)
!8185 = !{!217, !7913, !217, !217, !8163}
!8186 = !DILocalVariable(name: "ptr", arg: 1, scope: !8183, file: !1053, line: 99, type: !7913)
!8187 = !DILocation(line: 99, column: 37, scope: !8183)
!8188 = !DILocalVariable(name: "size", arg: 2, scope: !8183, file: !1053, line: 99, type: !217)
!8189 = !DILocation(line: 99, column: 49, scope: !8183)
!8190 = !DILocalVariable(name: "nitems", arg: 3, scope: !8183, file: !1053, line: 99, type: !217)
!8191 = !DILocation(line: 99, column: 62, scope: !8183)
!8192 = !DILocalVariable(name: "stream", arg: 4, scope: !8183, file: !1053, line: 100, type: !8163)
!8193 = !DILocation(line: 100, column: 22, scope: !8183)
!8194 = !DILocation(line: 102, column: 23, scope: !8183)
!8195 = !DILocation(line: 102, column: 28, scope: !8183)
!8196 = !DILocation(line: 102, column: 34, scope: !8183)
!8197 = !DILocation(line: 102, column: 42, scope: !8183)
!8198 = !DILocation(line: 102, column: 9, scope: !8183)
!8199 = !DILocation(line: 102, column: 2, scope: !8183)
!8200 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8147, file: !8147, line: 96, type: !8184, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8201 = !DILocalVariable(name: "ptr", arg: 1, scope: !8200, file: !8147, line: 96, type: !7913)
!8202 = !DILocation(line: 96, column: 58, scope: !8200)
!8203 = !DILocalVariable(name: "size", arg: 2, scope: !8200, file: !8147, line: 96, type: !217)
!8204 = !DILocation(line: 96, column: 70, scope: !8200)
!8205 = !DILocalVariable(name: "nitems", arg: 3, scope: !8200, file: !8147, line: 96, type: !217)
!8206 = !DILocation(line: 96, column: 83, scope: !8200)
!8207 = !DILocalVariable(name: "stream", arg: 4, scope: !8200, file: !8147, line: 96, type: !8163)
!8208 = !DILocation(line: 96, column: 107, scope: !8200)
!8209 = !DILocation(line: 107, column: 2, scope: !8200)
!8210 = !DILocation(line: 107, column: 2, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8200, file: !8147, line: 107, column: 2)
!8212 = !{i64 2149704963}
!8213 = !DILocation(line: 108, column: 30, scope: !8200)
!8214 = !DILocation(line: 108, column: 35, scope: !8200)
!8215 = !DILocation(line: 108, column: 41, scope: !8200)
!8216 = !DILocation(line: 108, column: 49, scope: !8200)
!8217 = !DILocation(line: 108, column: 9, scope: !8200)
!8218 = !DILocation(line: 108, column: 2, scope: !8200)
!8219 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !1053, file: !1053, line: 56, type: !8184, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8220 = !DILocalVariable(name: "ptr", arg: 1, scope: !8219, file: !1053, line: 56, type: !7913)
!8221 = !DILocation(line: 56, column: 51, scope: !8219)
!8222 = !DILocalVariable(name: "size", arg: 2, scope: !8219, file: !1053, line: 56, type: !217)
!8223 = !DILocation(line: 56, column: 63, scope: !8219)
!8224 = !DILocalVariable(name: "nitems", arg: 3, scope: !8219, file: !1053, line: 57, type: !217)
!8225 = !DILocation(line: 57, column: 15, scope: !8219)
!8226 = !DILocalVariable(name: "stream", arg: 4, scope: !8219, file: !1053, line: 57, type: !8163)
!8227 = !DILocation(line: 57, column: 39, scope: !8219)
!8228 = !DILocalVariable(name: "i", scope: !8219, file: !1053, line: 59, type: !217)
!8229 = !DILocation(line: 59, column: 9, scope: !8219)
!8230 = !DILocalVariable(name: "j", scope: !8219, file: !1053, line: 60, type: !217)
!8231 = !DILocation(line: 60, column: 9, scope: !8219)
!8232 = !DILocalVariable(name: "p", scope: !8219, file: !1053, line: 61, type: !3538)
!8233 = !DILocation(line: 61, column: 23, scope: !8219)
!8234 = !DILocation(line: 63, column: 7, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8219, file: !1053, line: 63, column: 6)
!8236 = !DILocation(line: 63, column: 14, scope: !8235)
!8237 = !DILocation(line: 63, column: 24, scope: !8235)
!8238 = !DILocation(line: 63, column: 27, scope: !8235)
!8239 = !DILocation(line: 63, column: 34, scope: !8235)
!8240 = !DILocation(line: 63, column: 45, scope: !8235)
!8241 = !DILocation(line: 64, column: 7, scope: !8235)
!8242 = !DILocation(line: 64, column: 14, scope: !8235)
!8243 = !DILocation(line: 64, column: 20, scope: !8235)
!8244 = !DILocation(line: 64, column: 24, scope: !8235)
!8245 = !DILocation(line: 64, column: 29, scope: !8235)
!8246 = !DILocation(line: 63, column: 6, scope: !8219)
!8247 = !DILocation(line: 65, column: 3, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8235, file: !1053, line: 64, column: 36)
!8249 = !DILocation(line: 68, column: 6, scope: !8219)
!8250 = !DILocation(line: 68, column: 4, scope: !8219)
!8251 = !DILocation(line: 69, column: 6, scope: !8219)
!8252 = !DILocation(line: 69, column: 4, scope: !8219)
!8253 = !DILocation(line: 70, column: 2, scope: !8219)
!8254 = !DILocation(line: 71, column: 7, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8219, file: !1053, line: 70, column: 5)
!8256 = !DILocation(line: 71, column: 5, scope: !8255)
!8257 = !DILocation(line: 72, column: 3, scope: !8255)
!8258 = !DILocation(line: 73, column: 8, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !1053, line: 73, column: 8)
!8260 = distinct !DILexicalBlock(scope: !8255, file: !1053, line: 72, column: 6)
!8261 = !DILocation(line: 73, column: 29, scope: !8259)
!8262 = !DILocation(line: 73, column: 27, scope: !8259)
!8263 = !DILocation(line: 73, column: 21, scope: !8259)
!8264 = !DILocation(line: 73, column: 33, scope: !8259)
!8265 = !DILocation(line: 73, column: 8, scope: !8260)
!8266 = !DILocation(line: 74, column: 5, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8259, file: !1053, line: 73, column: 41)
!8268 = !DILocation(line: 76, column: 5, scope: !8260)
!8269 = !DILocation(line: 77, column: 3, scope: !8260)
!8270 = !DILocation(line: 77, column: 12, scope: !8255)
!8271 = !DILocation(line: 77, column: 14, scope: !8255)
!8272 = distinct !{!8272, !8257, !8273}
!8273 = !DILocation(line: 77, column: 17, scope: !8255)
!8274 = !DILocation(line: 79, column: 4, scope: !8255)
!8275 = !DILocation(line: 80, column: 2, scope: !8255)
!8276 = !DILocation(line: 80, column: 11, scope: !8219)
!8277 = !DILocation(line: 80, column: 13, scope: !8219)
!8278 = distinct !{!8278, !8253, !8279}
!8279 = !DILocation(line: 80, column: 16, scope: !8219)
!8280 = !DILabel(scope: !8219, name: "done", file: !1053, line: 82)
!8281 = !DILocation(line: 82, column: 1, scope: !8219)
!8282 = !DILocation(line: 83, column: 10, scope: !8219)
!8283 = !DILocation(line: 83, column: 19, scope: !8219)
!8284 = !DILocation(line: 83, column: 17, scope: !8219)
!8285 = !DILocation(line: 83, column: 2, scope: !8219)
!8286 = !DILocation(line: 84, column: 1, scope: !8219)
!8287 = distinct !DISubprogram(name: "puts", scope: !1053, file: !1053, line: 106, type: !8288, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1046, retainedNodes: !223)
!8288 = !DISubroutineType(types: !8289)
!8289 = !{!103, !256}
!8290 = !DILocalVariable(name: "s", arg: 1, scope: !8287, file: !1053, line: 106, type: !256)
!8291 = !DILocation(line: 106, column: 22, scope: !8287)
!8292 = !DILocation(line: 108, column: 12, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8287, file: !1053, line: 108, column: 6)
!8294 = !DILocation(line: 108, column: 6, scope: !8293)
!8295 = !DILocation(line: 108, column: 23, scope: !8293)
!8296 = !DILocation(line: 108, column: 6, scope: !8287)
!8297 = !DILocation(line: 109, column: 3, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8293, file: !1053, line: 108, column: 31)
!8299 = !DILocation(line: 112, column: 9, scope: !8287)
!8300 = !DILocation(line: 112, column: 29, scope: !8287)
!8301 = !DILocation(line: 112, column: 2, scope: !8287)
!8302 = !DILocation(line: 113, column: 1, scope: !8287)
!8303 = distinct !DISubprogram(name: "sam0_eic_isr", scope: !1544, file: !1544, line: 51, type: !8304, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8304 = !DISubroutineType(types: !8305)
!8305 = !{null, !1557}
!8306 = !DILocalVariable(name: "dev", arg: 1, scope: !8303, file: !1544, line: 51, type: !1557)
!8307 = !DILocation(line: 51, column: 47, scope: !8303)
!8308 = !DILocalVariable(name: "dev_data", scope: !8303, file: !1544, line: 53, type: !8309)
!8309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8310)
!8310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 32)
!8311 = !DILocation(line: 53, column: 30, scope: !8303)
!8312 = !DILocation(line: 53, column: 41, scope: !8303)
!8313 = !DILocation(line: 53, column: 46, scope: !8303)
!8314 = !DILocalVariable(name: "bits", scope: !8303, file: !1544, line: 54, type: !170)
!8315 = !DILocation(line: 54, column: 11, scope: !8303)
!8316 = !DILocation(line: 54, column: 31, scope: !8303)
!8317 = !DILocation(line: 54, column: 18, scope: !8303)
!8318 = !DILocalVariable(name: "line_index", scope: !8303, file: !1544, line: 55, type: !173)
!8319 = !DILocation(line: 55, column: 11, scope: !8303)
!8320 = !DILocation(line: 58, column: 21, scope: !8303)
!8321 = !DILocation(line: 58, column: 19, scope: !8303)
!8322 = !DILocation(line: 65, column: 6, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8303, file: !1544, line: 65, column: 6)
!8324 = !DILocation(line: 65, column: 11, scope: !8323)
!8325 = !DILocation(line: 65, column: 6, scope: !8303)
!8326 = !DILocation(line: 66, column: 14, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8323, file: !1544, line: 65, column: 19)
!8328 = !DILocation(line: 67, column: 2, scope: !8327)
!8329 = !DILocation(line: 68, column: 14, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8323, file: !1544, line: 67, column: 9)
!8331 = !DILocation(line: 69, column: 8, scope: !8330)
!8332 = !DILocation(line: 77, column: 2, scope: !8303)
!8333 = !DILocation(line: 77, column: 9, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !1544, line: 77, column: 2)
!8335 = distinct !DILexicalBlock(scope: !8303, file: !1544, line: 77, column: 2)
!8336 = !DILocation(line: 77, column: 2, scope: !8335)
!8337 = !DILocation(line: 78, column: 9, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !1544, line: 78, column: 7)
!8339 = distinct !DILexicalBlock(scope: !8334, file: !1544, line: 77, column: 41)
!8340 = !DILocation(line: 78, column: 14, scope: !8338)
!8341 = !DILocation(line: 78, column: 7, scope: !8339)
!8342 = !DILocation(line: 79, column: 4, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8338, file: !1544, line: 78, column: 20)
!8344 = !DILocalVariable(name: "line_assignment", scope: !8339, file: !1544, line: 87, type: !8345)
!8345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!8346 = !DILocation(line: 87, column: 36, scope: !8339)
!8347 = !DILocation(line: 88, column: 5, scope: !8339)
!8348 = !DILocation(line: 88, column: 15, scope: !8339)
!8349 = !DILocation(line: 88, column: 21, scope: !8339)
!8350 = !DILocalVariable(name: "port_data", scope: !8339, file: !1544, line: 89, type: !8351)
!8351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!8352 = !DILocation(line: 89, column: 30, scope: !8339)
!8353 = !DILocation(line: 90, column: 5, scope: !8339)
!8354 = !DILocation(line: 90, column: 15, scope: !8339)
!8355 = !DILocation(line: 90, column: 21, scope: !8339)
!8356 = !DILocation(line: 90, column: 38, scope: !8339)
!8357 = !DILocation(line: 92, column: 3, scope: !8339)
!8358 = !DILocation(line: 92, column: 14, scope: !8339)
!8359 = !DILocation(line: 92, column: 17, scope: !8339)
!8360 = !DILocation(line: 92, column: 44, scope: !8339)
!8361 = !DILocation(line: 92, column: 55, scope: !8339)
!8362 = !DILocation(line: 93, column: 2, scope: !8339)
!8363 = !DILocation(line: 77, column: 20, scope: !8334)
!8364 = !DILocation(line: 77, column: 37, scope: !8334)
!8365 = !DILocation(line: 77, column: 2, scope: !8334)
!8366 = distinct !{!8366, !8336, !8367}
!8367 = !DILocation(line: 93, column: 2, scope: !8335)
!8368 = !DILocation(line: 94, column: 1, scope: !8303)
!8369 = !DILocalVariable(name: "dev", arg: 1, scope: !1605, file: !1544, line: 335, type: !1557)
!8370 = !DILocation(line: 335, column: 47, scope: !1605)
!8371 = !DILocation(line: 337, column: 2, scope: !1605)
!8372 = !DILocation(line: 348, column: 24, scope: !1605)
!8373 = !DILocation(line: 351, column: 20, scope: !1605)
!8374 = !DILocation(line: 356, column: 2, scope: !1605)
!8375 = !DILocation(line: 356, column: 2, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8377, file: !1544, line: 356, column: 2)
!8377 = distinct !DILexicalBlock(scope: !1605, file: !1544, line: 356, column: 2)
!8378 = !DILocation(line: 356, column: 2, scope: !8377)
!8379 = !DILocation(line: 404, column: 2, scope: !1605)
!8380 = !DILocation(line: 405, column: 2, scope: !1605)
!8381 = !DILocation(line: 407, column: 2, scope: !1605)
!8382 = distinct !DISubprogram(name: "set_eic_enable", scope: !1544, file: !1544, line: 42, type: !8383, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8383 = !DISubroutineType(types: !8384)
!8384 = !{null, !1035}
!8385 = !DILocalVariable(name: "on", arg: 1, scope: !8382, file: !1544, line: 42, type: !1035)
!8386 = !DILocation(line: 42, column: 40, scope: !8382)
!8387 = !DILocation(line: 47, column: 25, scope: !8382)
!8388 = !DILocation(line: 47, column: 23, scope: !8382)
!8389 = !DILocation(line: 49, column: 1, scope: !8382)
!8390 = distinct !DISubprogram(name: "wait_synchronization", scope: !1544, file: !1544, line: 31, type: !253, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8391 = !DILocation(line: 37, column: 2, scope: !8390)
!8392 = !DILocation(line: 37, column: 25, scope: !8390)
!8393 = distinct !{!8393, !8391, !8394}
!8394 = !DILocation(line: 38, column: 2, scope: !8390)
!8395 = !DILocation(line: 40, column: 1, scope: !8390)
!8396 = distinct !DISubprogram(name: "sam0_eic_acquire", scope: !1544, file: !1544, line: 96, type: !8397, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8397 = !DISubroutineType(types: !8398)
!8398 = !{!103, !103, !103, !1059, !1035, !1582, !102}
!8399 = !DILocalVariable(name: "port", arg: 1, scope: !8396, file: !1544, line: 96, type: !103)
!8400 = !DILocation(line: 96, column: 26, scope: !8396)
!8401 = !DILocalVariable(name: "pin", arg: 2, scope: !8396, file: !1544, line: 96, type: !103)
!8402 = !DILocation(line: 96, column: 36, scope: !8396)
!8403 = !DILocalVariable(name: "trigger", arg: 3, scope: !8396, file: !1544, line: 96, type: !1059)
!8404 = !DILocation(line: 96, column: 63, scope: !8396)
!8405 = !DILocalVariable(name: "filter", arg: 4, scope: !8396, file: !1544, line: 97, type: !1035)
!8406 = !DILocation(line: 97, column: 13, scope: !8396)
!8407 = !DILocalVariable(name: "cb", arg: 5, scope: !8396, file: !1544, line: 97, type: !1582)
!8408 = !DILocation(line: 97, column: 41, scope: !8396)
!8409 = !DILocalVariable(name: "data", arg: 6, scope: !8396, file: !1544, line: 97, type: !102)
!8410 = !DILocation(line: 97, column: 51, scope: !8396)
!8411 = !DILocalVariable(name: "dev", scope: !8396, file: !1544, line: 99, type: !8412)
!8412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1557)
!8413 = !DILocation(line: 99, column: 29, scope: !8396)
!8414 = !DILocalVariable(name: "dev_data", scope: !8396, file: !1544, line: 100, type: !8310)
!8415 = !DILocation(line: 100, column: 24, scope: !8396)
!8416 = !DILocation(line: 100, column: 40, scope: !8396)
!8417 = !DILocation(line: 100, column: 35, scope: !8396)
!8418 = !DILocalVariable(name: "port_data", scope: !8396, file: !1544, line: 101, type: !8351)
!8419 = !DILocation(line: 101, column: 29, scope: !8396)
!8420 = !DILocalVariable(name: "line_assignment", scope: !8396, file: !1544, line: 102, type: !8345)
!8421 = !DILocation(line: 102, column: 35, scope: !8396)
!8422 = !DILocalVariable(name: "mask", scope: !8396, file: !1544, line: 103, type: !173)
!8423 = !DILocation(line: 103, column: 11, scope: !8396)
!8424 = !DILocalVariable(name: "line_index", scope: !8396, file: !1544, line: 104, type: !103)
!8425 = !DILocation(line: 104, column: 6, scope: !8396)
!8426 = !DILocalVariable(name: "config_index", scope: !8396, file: !1544, line: 105, type: !103)
!8427 = !DILocation(line: 105, column: 6, scope: !8396)
!8428 = !DILocalVariable(name: "config_shift", scope: !8396, file: !1544, line: 106, type: !103)
!8429 = !DILocation(line: 106, column: 6, scope: !8396)
!8430 = !DILocalVariable(name: "key", scope: !8396, file: !1544, line: 107, type: !32)
!8431 = !DILocation(line: 107, column: 15, scope: !8396)
!8432 = !DILocalVariable(name: "config", scope: !8396, file: !1544, line: 108, type: !173)
!8433 = !DILocation(line: 108, column: 11, scope: !8396)
!8434 = !DILocation(line: 110, column: 36, scope: !8396)
!8435 = !DILocation(line: 110, column: 42, scope: !8396)
!8436 = !DILocation(line: 110, column: 15, scope: !8396)
!8437 = !DILocation(line: 110, column: 13, scope: !8396)
!8438 = !DILocation(line: 111, column: 6, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8396, file: !1544, line: 111, column: 6)
!8440 = !DILocation(line: 111, column: 17, scope: !8439)
!8441 = !DILocation(line: 111, column: 6, scope: !8396)
!8442 = !DILocation(line: 112, column: 10, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8439, file: !1544, line: 111, column: 22)
!8444 = !DILocation(line: 112, column: 3, scope: !8443)
!8445 = !DILocation(line: 115, column: 9, scope: !8396)
!8446 = !DILocation(line: 115, column: 7, scope: !8396)
!8447 = !DILocation(line: 116, column: 17, scope: !8396)
!8448 = !DILocation(line: 116, column: 28, scope: !8396)
!8449 = !DILocation(line: 116, column: 15, scope: !8396)
!8450 = !DILocation(line: 117, column: 18, scope: !8396)
!8451 = !DILocation(line: 117, column: 29, scope: !8396)
!8452 = !DILocation(line: 117, column: 34, scope: !8396)
!8453 = !DILocation(line: 117, column: 15, scope: !8396)
!8454 = !DILocalVariable(name: "key", scope: !8455, file: !6329, line: 44, type: !32)
!8455 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6329, file: !6329, line: 42, type: !6330, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8456 = !DILocation(line: 44, column: 15, scope: !8455, inlinedAt: !8457)
!8457 = distinct !DILocation(line: 120, column: 8, scope: !8396)
!8458 = !DILocation(line: 47, column: 2, scope: !8455, inlinedAt: !8457)
!8459 = !{i64 1348633}
!8460 = !DILocation(line: 76, column: 9, scope: !8455, inlinedAt: !8457)
!8461 = !DILocation(line: 120, column: 6, scope: !8396)
!8462 = !DILocation(line: 122, column: 2, scope: !8396)
!8463 = !DILocation(line: 124, column: 21, scope: !8396)
!8464 = !DILocation(line: 124, column: 31, scope: !8396)
!8465 = !DILocation(line: 124, column: 37, scope: !8396)
!8466 = !DILocation(line: 124, column: 18, scope: !8396)
!8467 = !DILocation(line: 127, column: 6, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8396, file: !1544, line: 127, column: 6)
!8469 = !DILocation(line: 127, column: 23, scope: !8468)
!8470 = !DILocation(line: 127, column: 6, scope: !8396)
!8471 = !DILocation(line: 128, column: 7, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8473, file: !1544, line: 128, column: 7)
!8473 = distinct !DILexicalBlock(scope: !8468, file: !1544, line: 127, column: 32)
!8474 = !DILocation(line: 128, column: 24, scope: !8472)
!8475 = !DILocation(line: 128, column: 32, scope: !8472)
!8476 = !DILocation(line: 128, column: 29, scope: !8472)
!8477 = !DILocation(line: 128, column: 37, scope: !8472)
!8478 = !DILocation(line: 129, column: 7, scope: !8472)
!8479 = !DILocation(line: 129, column: 24, scope: !8472)
!8480 = !DILocation(line: 129, column: 31, scope: !8472)
!8481 = !DILocation(line: 129, column: 28, scope: !8472)
!8482 = !DILocation(line: 128, column: 7, scope: !8473)
!8483 = !DILocation(line: 130, column: 4, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8472, file: !1544, line: 129, column: 36)
!8485 = !DILocation(line: 132, column: 2, scope: !8473)
!8486 = !DILocation(line: 135, column: 15, scope: !8396)
!8487 = !DILocation(line: 135, column: 25, scope: !8396)
!8488 = !DILocation(line: 135, column: 31, scope: !8396)
!8489 = !DILocation(line: 135, column: 12, scope: !8396)
!8490 = !DILocation(line: 136, column: 18, scope: !8396)
!8491 = !DILocation(line: 136, column: 2, scope: !8396)
!8492 = !DILocation(line: 136, column: 13, scope: !8396)
!8493 = !DILocation(line: 136, column: 16, scope: !8396)
!8494 = !DILocation(line: 137, column: 20, scope: !8396)
!8495 = !DILocation(line: 137, column: 2, scope: !8396)
!8496 = !DILocation(line: 137, column: 13, scope: !8396)
!8497 = !DILocation(line: 137, column: 18, scope: !8396)
!8498 = !DILocation(line: 138, column: 25, scope: !8396)
!8499 = !DILocation(line: 138, column: 2, scope: !8396)
!8500 = !DILocation(line: 138, column: 19, scope: !8396)
!8501 = !DILocation(line: 138, column: 23, scope: !8396)
!8502 = !DILocation(line: 139, column: 26, scope: !8396)
!8503 = !DILocation(line: 139, column: 2, scope: !8396)
!8504 = !DILocation(line: 139, column: 19, scope: !8396)
!8505 = !DILocation(line: 139, column: 24, scope: !8396)
!8506 = !DILocation(line: 140, column: 2, scope: !8396)
!8507 = !DILocation(line: 140, column: 19, scope: !8396)
!8508 = !DILocation(line: 140, column: 27, scope: !8396)
!8509 = !DILocation(line: 142, column: 23, scope: !8396)
!8510 = !DILocation(line: 142, column: 11, scope: !8396)
!8511 = !DILocation(line: 142, column: 37, scope: !8396)
!8512 = !DILocation(line: 142, column: 9, scope: !8396)
!8513 = !DILocation(line: 143, column: 21, scope: !8396)
!8514 = !DILocation(line: 143, column: 18, scope: !8396)
!8515 = !DILocation(line: 143, column: 12, scope: !8396)
!8516 = !DILocation(line: 143, column: 9, scope: !8396)
!8517 = !DILocation(line: 144, column: 10, scope: !8396)
!8518 = !DILocation(line: 144, column: 2, scope: !8396)
!8519 = !DILocation(line: 146, column: 39, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8396, file: !1544, line: 144, column: 19)
!8521 = !DILocation(line: 146, column: 36, scope: !8520)
!8522 = !DILocation(line: 146, column: 10, scope: !8520)
!8523 = !DILocation(line: 147, column: 3, scope: !8520)
!8524 = !DILocation(line: 149, column: 39, scope: !8520)
!8525 = !DILocation(line: 149, column: 36, scope: !8520)
!8526 = !DILocation(line: 149, column: 10, scope: !8520)
!8527 = !DILocation(line: 150, column: 3, scope: !8520)
!8528 = !DILocation(line: 152, column: 39, scope: !8520)
!8529 = !DILocation(line: 152, column: 36, scope: !8520)
!8530 = !DILocation(line: 152, column: 10, scope: !8520)
!8531 = !DILocation(line: 153, column: 3, scope: !8520)
!8532 = !DILocation(line: 155, column: 39, scope: !8520)
!8533 = !DILocation(line: 155, column: 36, scope: !8520)
!8534 = !DILocation(line: 155, column: 10, scope: !8520)
!8535 = !DILocation(line: 156, column: 3, scope: !8520)
!8536 = !DILocation(line: 158, column: 38, scope: !8520)
!8537 = !DILocation(line: 158, column: 35, scope: !8520)
!8538 = !DILocation(line: 158, column: 10, scope: !8520)
!8539 = !DILocation(line: 159, column: 3, scope: !8520)
!8540 = !DILocation(line: 162, column: 6, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8396, file: !1544, line: 162, column: 6)
!8542 = !DILocation(line: 162, column: 6, scope: !8396)
!8543 = !DILocation(line: 163, column: 35, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8541, file: !1544, line: 162, column: 14)
!8545 = !DILocation(line: 163, column: 32, scope: !8544)
!8546 = !DILocation(line: 163, column: 10, scope: !8544)
!8547 = !DILocation(line: 164, column: 2, scope: !8544)
!8548 = !DILocation(line: 167, column: 34, scope: !8396)
!8549 = !DILocation(line: 167, column: 14, scope: !8396)
!8550 = !DILocation(line: 167, column: 2, scope: !8396)
!8551 = !DILocation(line: 167, column: 28, scope: !8396)
!8552 = !DILocation(line: 167, column: 32, scope: !8396)
!8553 = !DILocation(line: 169, column: 2, scope: !8396)
!8554 = !DILocation(line: 170, column: 2, scope: !8396)
!8555 = !DILocation(line: 176, column: 21, scope: !8396)
!8556 = !DILocation(line: 176, column: 19, scope: !8396)
!8557 = !DILocation(line: 177, column: 2, scope: !8396)
!8558 = !DILocalVariable(name: "key", arg: 1, scope: !8559, file: !6329, line: 84, type: !32)
!8559 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6329, file: !6329, line: 84, type: !6349, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8560 = !DILocation(line: 84, column: 56, scope: !8559, inlinedAt: !8561)
!8561 = distinct !DILocation(line: 177, column: 2, scope: !8396)
!8562 = !DILocation(line: 87, column: 6, scope: !8563, inlinedAt: !8561)
!8563 = distinct !DILexicalBlock(scope: !8559, file: !6329, line: 87, column: 6)
!8564 = !DILocation(line: 87, column: 10, scope: !8563, inlinedAt: !8561)
!8565 = !DILocation(line: 87, column: 6, scope: !8559, inlinedAt: !8561)
!8566 = !DILocation(line: 88, column: 3, scope: !8567, inlinedAt: !8561)
!8567 = distinct !DILexicalBlock(scope: !8563, file: !6329, line: 87, column: 17)
!8568 = !DILocation(line: 90, column: 2, scope: !8559, inlinedAt: !8561)
!8569 = !{i64 1349497}
!8570 = !DILocation(line: 110, column: 1, scope: !8559, inlinedAt: !8561)
!8571 = !DILocation(line: 178, column: 2, scope: !8396)
!8572 = !DILabel(scope: !8396, name: "err_in_use", file: !1544, line: 180)
!8573 = !DILocation(line: 180, column: 1, scope: !8396)
!8574 = !DILocation(line: 181, column: 2, scope: !8396)
!8575 = !DILocation(line: 182, column: 2, scope: !8396)
!8576 = !DILocation(line: 183, column: 2, scope: !8396)
!8577 = !DILocation(line: 84, column: 56, scope: !8559, inlinedAt: !8578)
!8578 = distinct !DILocation(line: 183, column: 2, scope: !8396)
!8579 = !DILocation(line: 87, column: 6, scope: !8563, inlinedAt: !8578)
!8580 = !DILocation(line: 87, column: 10, scope: !8563, inlinedAt: !8578)
!8581 = !DILocation(line: 87, column: 6, scope: !8559, inlinedAt: !8578)
!8582 = !DILocation(line: 88, column: 3, scope: !8567, inlinedAt: !8578)
!8583 = !DILocation(line: 90, column: 2, scope: !8559, inlinedAt: !8578)
!8584 = !DILocation(line: 110, column: 1, scope: !8559, inlinedAt: !8578)
!8585 = !DILocation(line: 184, column: 2, scope: !8396)
!8586 = !DILocation(line: 185, column: 1, scope: !8396)
!8587 = distinct !DISubprogram(name: "sam0_eic_map_to_line", scope: !1598, file: !1598, line: 691, type: !8588, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8588 = !DISubroutineType(types: !8589)
!8589 = !{!103, !103, !103}
!8590 = !DILocalVariable(name: "port", arg: 1, scope: !8587, file: !1598, line: 691, type: !103)
!8591 = !DILocation(line: 691, column: 44, scope: !8587)
!8592 = !DILocalVariable(name: "pin", arg: 2, scope: !8587, file: !1598, line: 691, type: !103)
!8593 = !DILocation(line: 691, column: 54, scope: !8587)
!8594 = !DILocalVariable(name: "ch", scope: !8587, file: !1598, line: 693, type: !156)
!8595 = !DILocation(line: 693, column: 10, scope: !8587)
!8596 = !DILocation(line: 693, column: 33, scope: !8587)
!8597 = !DILocation(line: 693, column: 15, scope: !8587)
!8598 = !DILocation(line: 693, column: 39, scope: !8587)
!8599 = !DILocation(line: 695, column: 6, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8587, file: !1598, line: 695, column: 6)
!8601 = !DILocation(line: 695, column: 9, scope: !8600)
!8602 = !DILocation(line: 695, column: 6, scope: !8587)
!8603 = !DILocation(line: 696, column: 3, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8600, file: !1598, line: 695, column: 18)
!8605 = !DILocation(line: 698, column: 9, scope: !8587)
!8606 = !DILocation(line: 698, column: 2, scope: !8587)
!8607 = !DILocation(line: 699, column: 1, scope: !8587)
!8608 = distinct !DISubprogram(name: "sam0_eic_release", scope: !1544, file: !1544, line: 206, type: !8588, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8609 = !DILocalVariable(name: "port", arg: 1, scope: !8608, file: !1544, line: 206, type: !103)
!8610 = !DILocation(line: 206, column: 26, scope: !8608)
!8611 = !DILocalVariable(name: "pin", arg: 2, scope: !8608, file: !1544, line: 206, type: !103)
!8612 = !DILocation(line: 206, column: 36, scope: !8608)
!8613 = !DILocalVariable(name: "dev", scope: !8608, file: !1544, line: 208, type: !8412)
!8614 = !DILocation(line: 208, column: 29, scope: !8608)
!8615 = !DILocalVariable(name: "dev_data", scope: !8608, file: !1544, line: 209, type: !8310)
!8616 = !DILocation(line: 209, column: 24, scope: !8608)
!8617 = !DILocation(line: 209, column: 40, scope: !8608)
!8618 = !DILocation(line: 209, column: 35, scope: !8608)
!8619 = !DILocalVariable(name: "mask", scope: !8608, file: !1544, line: 210, type: !173)
!8620 = !DILocation(line: 210, column: 11, scope: !8608)
!8621 = !DILocalVariable(name: "line_index", scope: !8608, file: !1544, line: 211, type: !103)
!8622 = !DILocation(line: 211, column: 6, scope: !8608)
!8623 = !DILocalVariable(name: "config_index", scope: !8608, file: !1544, line: 212, type: !103)
!8624 = !DILocation(line: 212, column: 6, scope: !8608)
!8625 = !DILocalVariable(name: "config_shift", scope: !8608, file: !1544, line: 213, type: !103)
!8626 = !DILocation(line: 213, column: 6, scope: !8608)
!8627 = !DILocalVariable(name: "key", scope: !8608, file: !1544, line: 214, type: !32)
!8628 = !DILocation(line: 214, column: 15, scope: !8608)
!8629 = !DILocation(line: 216, column: 36, scope: !8608)
!8630 = !DILocation(line: 216, column: 42, scope: !8608)
!8631 = !DILocation(line: 216, column: 15, scope: !8608)
!8632 = !DILocation(line: 216, column: 13, scope: !8608)
!8633 = !DILocation(line: 217, column: 6, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8608, file: !1544, line: 217, column: 6)
!8635 = !DILocation(line: 217, column: 17, scope: !8634)
!8636 = !DILocation(line: 217, column: 6, scope: !8608)
!8637 = !DILocation(line: 218, column: 10, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8634, file: !1544, line: 217, column: 22)
!8639 = !DILocation(line: 218, column: 3, scope: !8638)
!8640 = !DILocation(line: 221, column: 9, scope: !8608)
!8641 = !DILocation(line: 221, column: 7, scope: !8608)
!8642 = !DILocation(line: 222, column: 17, scope: !8608)
!8643 = !DILocation(line: 222, column: 28, scope: !8608)
!8644 = !DILocation(line: 222, column: 15, scope: !8608)
!8645 = !DILocation(line: 223, column: 18, scope: !8608)
!8646 = !DILocation(line: 223, column: 29, scope: !8608)
!8647 = !DILocation(line: 223, column: 34, scope: !8608)
!8648 = !DILocation(line: 223, column: 15, scope: !8608)
!8649 = !DILocation(line: 44, column: 15, scope: !8455, inlinedAt: !8650)
!8650 = distinct !DILocation(line: 226, column: 8, scope: !8608)
!8651 = !DILocation(line: 47, column: 2, scope: !8455, inlinedAt: !8650)
!8652 = !DILocation(line: 76, column: 9, scope: !8455, inlinedAt: !8650)
!8653 = !DILocation(line: 226, column: 6, scope: !8608)
!8654 = !DILocation(line: 228, column: 2, scope: !8608)
!8655 = !DILocation(line: 229, column: 2, scope: !8608)
!8656 = !DILocation(line: 235, column: 32, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8608, file: !1544, line: 235, column: 6)
!8658 = !DILocation(line: 235, column: 38, scope: !8657)
!8659 = !DILocation(line: 235, column: 43, scope: !8657)
!8660 = !DILocation(line: 235, column: 7, scope: !8657)
!8661 = !DILocation(line: 235, column: 6, scope: !8608)
!8662 = !DILocation(line: 236, column: 3, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8657, file: !1544, line: 235, column: 56)
!8664 = !DILocation(line: 239, column: 2, scope: !8608)
!8665 = !DILocation(line: 239, column: 12, scope: !8608)
!8666 = !DILocation(line: 239, column: 18, scope: !8608)
!8667 = !DILocation(line: 239, column: 30, scope: !8608)
!8668 = !DILocation(line: 239, column: 38, scope: !8608)
!8669 = !DILocation(line: 242, column: 44, scope: !8608)
!8670 = !DILocation(line: 242, column: 41, scope: !8608)
!8671 = !DILocation(line: 242, column: 35, scope: !8608)
!8672 = !DILocation(line: 242, column: 14, scope: !8608)
!8673 = !DILocation(line: 242, column: 2, scope: !8608)
!8674 = !DILocation(line: 242, column: 28, scope: !8608)
!8675 = !DILocation(line: 242, column: 32, scope: !8608)
!8676 = !DILocation(line: 245, column: 22, scope: !8608)
!8677 = !DILocation(line: 245, column: 20, scope: !8608)
!8678 = !DILocation(line: 246, column: 21, scope: !8608)
!8679 = !DILocation(line: 246, column: 19, scope: !8608)
!8680 = !DILocation(line: 246, column: 2, scope: !8608)
!8681 = !DILabel(scope: !8608, name: "done", file: !1544, line: 248)
!8682 = !DILocation(line: 248, column: 1, scope: !8608)
!8683 = !DILocation(line: 249, column: 2, scope: !8608)
!8684 = !DILocation(line: 250, column: 2, scope: !8608)
!8685 = !DILocation(line: 251, column: 2, scope: !8608)
!8686 = !DILocation(line: 84, column: 56, scope: !8559, inlinedAt: !8687)
!8687 = distinct !DILocation(line: 251, column: 2, scope: !8608)
!8688 = !DILocation(line: 87, column: 6, scope: !8563, inlinedAt: !8687)
!8689 = !DILocation(line: 87, column: 10, scope: !8563, inlinedAt: !8687)
!8690 = !DILocation(line: 87, column: 6, scope: !8559, inlinedAt: !8687)
!8691 = !DILocation(line: 88, column: 3, scope: !8567, inlinedAt: !8687)
!8692 = !DILocation(line: 90, column: 2, scope: !8559, inlinedAt: !8687)
!8693 = !DILocation(line: 110, column: 1, scope: !8559, inlinedAt: !8687)
!8694 = !DILocation(line: 252, column: 2, scope: !8608)
!8695 = !DILocation(line: 253, column: 1, scope: !8608)
!8696 = distinct !DISubprogram(name: "sam0_eic_check_ownership", scope: !1544, file: !1544, line: 187, type: !8697, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8697 = !DISubroutineType(types: !8698)
!8698 = !{!1035, !103, !103, !103}
!8699 = !DILocalVariable(name: "port", arg: 1, scope: !8696, file: !1544, line: 187, type: !103)
!8700 = !DILocation(line: 187, column: 42, scope: !8696)
!8701 = !DILocalVariable(name: "pin", arg: 2, scope: !8696, file: !1544, line: 187, type: !103)
!8702 = !DILocation(line: 187, column: 52, scope: !8696)
!8703 = !DILocalVariable(name: "line_index", arg: 3, scope: !8696, file: !1544, line: 187, type: !103)
!8704 = !DILocation(line: 187, column: 61, scope: !8696)
!8705 = !DILocalVariable(name: "dev", scope: !8696, file: !1544, line: 189, type: !8412)
!8706 = !DILocation(line: 189, column: 29, scope: !8696)
!8707 = !DILocalVariable(name: "dev_data", scope: !8696, file: !1544, line: 190, type: !8310)
!8708 = !DILocation(line: 190, column: 24, scope: !8696)
!8709 = !DILocation(line: 190, column: 40, scope: !8696)
!8710 = !DILocation(line: 190, column: 35, scope: !8696)
!8711 = !DILocalVariable(name: "line_assignment", scope: !8696, file: !1544, line: 191, type: !8345)
!8712 = !DILocation(line: 191, column: 35, scope: !8696)
!8713 = !DILocation(line: 192, column: 4, scope: !8696)
!8714 = !DILocation(line: 192, column: 14, scope: !8696)
!8715 = !DILocation(line: 192, column: 20, scope: !8696)
!8716 = !DILocation(line: 194, column: 7, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8696, file: !1544, line: 194, column: 6)
!8718 = !DILocation(line: 194, column: 24, scope: !8717)
!8719 = !DILocation(line: 194, column: 6, scope: !8696)
!8720 = !DILocation(line: 195, column: 3, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8717, file: !1544, line: 194, column: 33)
!8722 = !DILocation(line: 198, column: 6, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8696, file: !1544, line: 198, column: 6)
!8724 = !DILocation(line: 198, column: 23, scope: !8723)
!8725 = !DILocation(line: 198, column: 31, scope: !8723)
!8726 = !DILocation(line: 198, column: 28, scope: !8723)
!8727 = !DILocation(line: 198, column: 36, scope: !8723)
!8728 = !DILocation(line: 199, column: 6, scope: !8723)
!8729 = !DILocation(line: 199, column: 23, scope: !8723)
!8730 = !DILocation(line: 199, column: 30, scope: !8723)
!8731 = !DILocation(line: 199, column: 27, scope: !8723)
!8732 = !DILocation(line: 198, column: 6, scope: !8696)
!8733 = !DILocation(line: 200, column: 3, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8723, file: !1544, line: 199, column: 35)
!8735 = !DILocation(line: 203, column: 2, scope: !8696)
!8736 = !DILocation(line: 204, column: 1, scope: !8696)
!8737 = distinct !DISubprogram(name: "sam0_eic_enable_interrupt", scope: !1544, file: !1544, line: 255, type: !8588, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8738 = !DILocalVariable(name: "port", arg: 1, scope: !8737, file: !1544, line: 255, type: !103)
!8739 = !DILocation(line: 255, column: 35, scope: !8737)
!8740 = !DILocalVariable(name: "pin", arg: 2, scope: !8737, file: !1544, line: 255, type: !103)
!8741 = !DILocation(line: 255, column: 45, scope: !8737)
!8742 = !DILocalVariable(name: "mask", scope: !8737, file: !1544, line: 257, type: !173)
!8743 = !DILocation(line: 257, column: 11, scope: !8737)
!8744 = !DILocalVariable(name: "line_index", scope: !8737, file: !1544, line: 258, type: !103)
!8745 = !DILocation(line: 258, column: 6, scope: !8737)
!8746 = !DILocation(line: 260, column: 36, scope: !8737)
!8747 = !DILocation(line: 260, column: 42, scope: !8737)
!8748 = !DILocation(line: 260, column: 15, scope: !8737)
!8749 = !DILocation(line: 260, column: 13, scope: !8737)
!8750 = !DILocation(line: 261, column: 6, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8737, file: !1544, line: 261, column: 6)
!8752 = !DILocation(line: 261, column: 17, scope: !8751)
!8753 = !DILocation(line: 261, column: 6, scope: !8737)
!8754 = !DILocation(line: 262, column: 10, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8751, file: !1544, line: 261, column: 22)
!8756 = !DILocation(line: 262, column: 3, scope: !8755)
!8757 = !DILocation(line: 265, column: 32, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8737, file: !1544, line: 265, column: 6)
!8759 = !DILocation(line: 265, column: 38, scope: !8758)
!8760 = !DILocation(line: 265, column: 43, scope: !8758)
!8761 = !DILocation(line: 265, column: 7, scope: !8758)
!8762 = !DILocation(line: 265, column: 6, scope: !8737)
!8763 = !DILocation(line: 266, column: 3, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8758, file: !1544, line: 265, column: 56)
!8765 = !DILocation(line: 269, column: 9, scope: !8737)
!8766 = !DILocation(line: 269, column: 7, scope: !8737)
!8767 = !DILocation(line: 270, column: 21, scope: !8737)
!8768 = !DILocation(line: 270, column: 19, scope: !8737)
!8769 = !DILocation(line: 271, column: 22, scope: !8737)
!8770 = !DILocation(line: 271, column: 20, scope: !8737)
!8771 = !DILocation(line: 273, column: 2, scope: !8737)
!8772 = !DILocation(line: 274, column: 1, scope: !8737)
!8773 = distinct !DISubprogram(name: "sam0_eic_disable_interrupt", scope: !1544, file: !1544, line: 276, type: !8588, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8774 = !DILocalVariable(name: "port", arg: 1, scope: !8773, file: !1544, line: 276, type: !103)
!8775 = !DILocation(line: 276, column: 36, scope: !8773)
!8776 = !DILocalVariable(name: "pin", arg: 2, scope: !8773, file: !1544, line: 276, type: !103)
!8777 = !DILocation(line: 276, column: 46, scope: !8773)
!8778 = !DILocalVariable(name: "mask", scope: !8773, file: !1544, line: 278, type: !173)
!8779 = !DILocation(line: 278, column: 11, scope: !8773)
!8780 = !DILocalVariable(name: "line_index", scope: !8773, file: !1544, line: 279, type: !103)
!8781 = !DILocation(line: 279, column: 6, scope: !8773)
!8782 = !DILocation(line: 281, column: 36, scope: !8773)
!8783 = !DILocation(line: 281, column: 42, scope: !8773)
!8784 = !DILocation(line: 281, column: 15, scope: !8773)
!8785 = !DILocation(line: 281, column: 13, scope: !8773)
!8786 = !DILocation(line: 282, column: 6, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8773, file: !1544, line: 282, column: 6)
!8788 = !DILocation(line: 282, column: 17, scope: !8787)
!8789 = !DILocation(line: 282, column: 6, scope: !8773)
!8790 = !DILocation(line: 283, column: 10, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8787, file: !1544, line: 282, column: 22)
!8792 = !DILocation(line: 283, column: 3, scope: !8791)
!8793 = !DILocation(line: 286, column: 32, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8773, file: !1544, line: 286, column: 6)
!8795 = !DILocation(line: 286, column: 38, scope: !8794)
!8796 = !DILocation(line: 286, column: 43, scope: !8794)
!8797 = !DILocation(line: 286, column: 7, scope: !8794)
!8798 = !DILocation(line: 286, column: 6, scope: !8773)
!8799 = !DILocation(line: 287, column: 3, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8794, file: !1544, line: 286, column: 56)
!8801 = !DILocation(line: 290, column: 9, scope: !8773)
!8802 = !DILocation(line: 290, column: 7, scope: !8773)
!8803 = !DILocation(line: 291, column: 22, scope: !8773)
!8804 = !DILocation(line: 291, column: 20, scope: !8773)
!8805 = !DILocation(line: 292, column: 21, scope: !8773)
!8806 = !DILocation(line: 292, column: 19, scope: !8773)
!8807 = !DILocation(line: 294, column: 2, scope: !8773)
!8808 = !DILocation(line: 295, column: 1, scope: !8773)
!8809 = distinct !DISubprogram(name: "sam0_eic_interrupt_pending", scope: !1544, file: !1544, line: 297, type: !8810, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1056, retainedNodes: !223)
!8810 = !DISubroutineType(types: !8811)
!8811 = !{!173, !103}
!8812 = !DILocalVariable(name: "port", arg: 1, scope: !8809, file: !1544, line: 297, type: !103)
!8813 = !DILocation(line: 297, column: 41, scope: !8809)
!8814 = !DILocalVariable(name: "dev", scope: !8809, file: !1544, line: 299, type: !8412)
!8815 = !DILocation(line: 299, column: 29, scope: !8809)
!8816 = !DILocalVariable(name: "dev_data", scope: !8809, file: !1544, line: 300, type: !8310)
!8817 = !DILocation(line: 300, column: 24, scope: !8809)
!8818 = !DILocation(line: 300, column: 40, scope: !8809)
!8819 = !DILocation(line: 300, column: 35, scope: !8809)
!8820 = !DILocalVariable(name: "line_assignment", scope: !8809, file: !1544, line: 301, type: !8345)
!8821 = !DILocation(line: 301, column: 35, scope: !8809)
!8822 = !DILocalVariable(name: "set", scope: !8809, file: !1544, line: 302, type: !173)
!8823 = !DILocation(line: 302, column: 11, scope: !8809)
!8824 = !DILocation(line: 302, column: 30, scope: !8809)
!8825 = !DILocalVariable(name: "mask", scope: !8809, file: !1544, line: 303, type: !173)
!8826 = !DILocation(line: 303, column: 11, scope: !8809)
!8827 = !DILocalVariable(name: "line_index", scope: !8828, file: !1544, line: 305, type: !103)
!8828 = distinct !DILexicalBlock(scope: !8809, file: !1544, line: 305, column: 2)
!8829 = !DILocation(line: 305, column: 11, scope: !8828)
!8830 = !DILocation(line: 305, column: 7, scope: !8828)
!8831 = !DILocation(line: 305, column: 27, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8828, file: !1544, line: 305, column: 2)
!8833 = !DILocation(line: 305, column: 38, scope: !8832)
!8834 = !DILocation(line: 305, column: 2, scope: !8828)
!8835 = !DILocation(line: 306, column: 22, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8832, file: !1544, line: 305, column: 70)
!8837 = !DILocation(line: 306, column: 32, scope: !8836)
!8838 = !DILocation(line: 306, column: 38, scope: !8836)
!8839 = !DILocation(line: 306, column: 19, scope: !8836)
!8840 = !DILocation(line: 308, column: 8, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8836, file: !1544, line: 308, column: 7)
!8842 = !DILocation(line: 308, column: 25, scope: !8841)
!8843 = !DILocation(line: 308, column: 7, scope: !8836)
!8844 = !DILocation(line: 309, column: 4, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8841, file: !1544, line: 308, column: 34)
!8846 = !DILocation(line: 312, column: 7, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8836, file: !1544, line: 312, column: 7)
!8848 = !DILocation(line: 312, column: 24, scope: !8847)
!8849 = !DILocation(line: 312, column: 32, scope: !8847)
!8850 = !DILocation(line: 312, column: 29, scope: !8847)
!8851 = !DILocation(line: 312, column: 7, scope: !8836)
!8852 = !DILocation(line: 313, column: 4, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8847, file: !1544, line: 312, column: 38)
!8854 = !DILocation(line: 316, column: 9, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8836, file: !1544, line: 316, column: 7)
!8856 = !DILocation(line: 316, column: 15, scope: !8855)
!8857 = !DILocation(line: 316, column: 13, scope: !8855)
!8858 = !DILocation(line: 316, column: 7, scope: !8836)
!8859 = !DILocation(line: 317, column: 4, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8855, file: !1544, line: 316, column: 33)
!8861 = !DILocation(line: 320, column: 11, scope: !8836)
!8862 = !DILocation(line: 320, column: 8, scope: !8836)
!8863 = !DILocation(line: 321, column: 2, scope: !8836)
!8864 = !DILocation(line: 305, column: 66, scope: !8832)
!8865 = !DILocation(line: 305, column: 2, scope: !8832)
!8866 = distinct !{!8866, !8834, !8867}
!8867 = !DILocation(line: 321, column: 2, scope: !8828)
!8868 = !DILocation(line: 323, column: 9, scope: !8809)
!8869 = !DILocation(line: 323, column: 2, scope: !8809)
!8870 = distinct !DISubprogram(name: "uart_console_init", scope: !1715, file: !1715, line: 588, type: !1659, scopeLine: 589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1625, retainedNodes: !223)
!8871 = !DILocalVariable(name: "arg", arg: 1, scope: !8870, file: !1715, line: 588, type: !1637)
!8872 = !DILocation(line: 588, column: 51, scope: !8870)
!8873 = !DILocation(line: 591, column: 2, scope: !8870)
!8874 = !DILocation(line: 593, column: 7, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8870, file: !1715, line: 593, column: 6)
!8876 = !DILocation(line: 593, column: 6, scope: !8870)
!8877 = !DILocation(line: 594, column: 3, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8875, file: !1715, line: 593, column: 42)
!8879 = !DILocation(line: 597, column: 2, scope: !8870)
!8880 = !DILocation(line: 599, column: 2, scope: !8870)
!8881 = !DILocation(line: 600, column: 1, scope: !8870)
!8882 = distinct !DISubprogram(name: "device_is_ready", scope: !8883, file: !8883, line: 47, type: !8884, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1625, retainedNodes: !223)
!8883 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!8884 = !DISubroutineType(types: !8885)
!8885 = !{!1035, !1637}
!8886 = !DILocalVariable(name: "dev", arg: 1, scope: !8882, file: !8883, line: 47, type: !1637)
!8887 = !DILocation(line: 47, column: 58, scope: !8882)
!8888 = !DILocation(line: 55, column: 2, scope: !8882)
!8889 = !DILocation(line: 55, column: 2, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8882, file: !8883, line: 55, column: 2)
!8891 = !{i64 2149840516}
!8892 = !DILocation(line: 56, column: 32, scope: !8882)
!8893 = !DILocation(line: 56, column: 9, scope: !8882)
!8894 = !DILocation(line: 56, column: 2, scope: !8882)
!8895 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1715, file: !1715, line: 573, type: !253, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1625, retainedNodes: !223)
!8896 = !DILocation(line: 576, column: 2, scope: !8895)
!8897 = !DILocation(line: 579, column: 2, scope: !8895)
!8898 = !DILocation(line: 581, column: 1, scope: !8895)
!8899 = distinct !DISubprogram(name: "console_out", scope: !1715, file: !1715, line: 77, type: !274, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1625, retainedNodes: !223)
!8900 = !DILocalVariable(name: "c", arg: 1, scope: !8899, file: !1715, line: 77, type: !103)
!8901 = !DILocation(line: 77, column: 28, scope: !8899)
!8902 = !DILocation(line: 89, column: 14, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8899, file: !1715, line: 89, column: 6)
!8904 = !DILocation(line: 89, column: 11, scope: !8903)
!8905 = !DILocation(line: 89, column: 6, scope: !8899)
!8906 = !DILocation(line: 90, column: 3, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8903, file: !1715, line: 89, column: 17)
!8908 = !DILocation(line: 91, column: 2, scope: !8907)
!8909 = !DILocation(line: 92, column: 34, scope: !8899)
!8910 = !DILocation(line: 92, column: 2, scope: !8899)
!8911 = !DILocation(line: 94, column: 9, scope: !8899)
!8912 = !DILocation(line: 94, column: 2, scope: !8899)
!8913 = distinct !DISubprogram(name: "uart_poll_out", scope: !8914, file: !8914, line: 95, type: !1655, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1625, retainedNodes: !223)
!8914 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/adafruit_trinket_m0/subsys/debug/gdbstub")
!8915 = !DILocalVariable(name: "dev", arg: 1, scope: !8913, file: !8914, line: 95, type: !1637)
!8916 = !DILocation(line: 95, column: 56, scope: !8913)
!8917 = !DILocalVariable(name: "out_char", arg: 2, scope: !8913, file: !8914, line: 95, type: !157)
!8918 = !DILocation(line: 95, column: 75, scope: !8913)
!8919 = !DILocation(line: 105, column: 2, scope: !8913)
!8920 = !DILocation(line: 105, column: 2, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8913, file: !8914, line: 105, column: 2)
!8922 = !{i64 2149923761}
!8923 = !DILocation(line: 106, column: 23, scope: !8913)
!8924 = !DILocation(line: 106, column: 28, scope: !8913)
!8925 = !DILocation(line: 106, column: 2, scope: !8913)
!8926 = !DILocation(line: 107, column: 1, scope: !8913)
!8927 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1631, file: !1631, line: 574, type: !1655, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1625, retainedNodes: !223)
!8928 = !DILocalVariable(name: "dev", arg: 1, scope: !8927, file: !1631, line: 574, type: !1637)
!8929 = !DILocation(line: 574, column: 62, scope: !8927)
!8930 = !DILocalVariable(name: "out_char", arg: 2, scope: !8927, file: !1631, line: 575, type: !157)
!8931 = !DILocation(line: 575, column: 20, scope: !8927)
!8932 = !DILocalVariable(name: "api", scope: !8927, file: !1631, line: 577, type: !1628)
!8933 = !DILocation(line: 577, column: 32, scope: !8927)
!8934 = !DILocation(line: 578, column: 35, scope: !8927)
!8935 = !DILocation(line: 578, column: 40, scope: !8927)
!8936 = !DILocation(line: 578, column: 3, scope: !8927)
!8937 = !DILocation(line: 580, column: 2, scope: !8927)
!8938 = !DILocation(line: 580, column: 7, scope: !8927)
!8939 = !DILocation(line: 580, column: 16, scope: !8927)
!8940 = !DILocation(line: 580, column: 21, scope: !8927)
!8941 = !DILocation(line: 581, column: 1, scope: !8927)
!8942 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !1024, file: !1024, line: 730, type: !8884, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1625, retainedNodes: !223)
!8943 = !DILocalVariable(name: "dev", arg: 1, scope: !8942, file: !1024, line: 730, type: !1637)
!8944 = !DILocation(line: 730, column: 64, scope: !8942)
!8945 = !DILocation(line: 732, column: 27, scope: !8942)
!8946 = !DILocation(line: 732, column: 9, scope: !8942)
!8947 = !DILocation(line: 732, column: 2, scope: !8942)
!8948 = distinct !DISubprogram(name: "uart_register_input", scope: !1715, file: !1715, line: 560, type: !8949, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1625, retainedNodes: !223)
!8949 = !DISubroutineType(types: !8950)
!8950 = !{null, !8951, !8951, !8991}
!8951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8952, size: 32)
!8952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !109, line: 2208, size: 128, elements: !8953)
!8953 = !{!8954}
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8952, file: !109, line: 2209, baseType: !8955, size: 128)
!8955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !109, line: 1709, size: 128, elements: !8956)
!8956 = !{!8957, !8970, !8972}
!8957 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8955, file: !109, line: 1710, baseType: !8958, size: 64)
!8958 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8959, line: 46, baseType: !8960)
!8959 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8959, line: 41, size: 64, elements: !8961)
!8961 = !{!8962, !8969}
!8962 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8960, file: !8959, line: 42, baseType: !8963, size: 32)
!8963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8964, size: 32)
!8964 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8959, line: 39, baseType: !8965)
!8965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8959, line: 35, size: 32, elements: !8966)
!8966 = !{!8967}
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8965, file: !8959, line: 36, baseType: !8968, size: 32)
!8968 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8959, line: 32, baseType: !173)
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8960, file: !8959, line: 43, baseType: !8963, size: 32, offset: 32)
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8955, file: !109, line: 1711, baseType: !8971, offset: 64)
!8971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8955, file: !109, line: 1712, baseType: !8973, size: 64, offset: 64)
!8973 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !8974)
!8974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !8975)
!8975 = !{!8976}
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8974, file: !150, line: 232, baseType: !8977, size: 64)
!8977 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !8978)
!8978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !8979)
!8979 = !{!8980, !8986}
!8980 = !DIDerivedType(tag: DW_TAG_member, scope: !8978, file: !124, line: 38, baseType: !8981, size: 32)
!8981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8978, file: !124, line: 38, size: 32, elements: !8982)
!8982 = !{!8983, !8985}
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8981, file: !124, line: 39, baseType: !8984, size: 32)
!8984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8978, size: 32)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8981, file: !124, line: 40, baseType: !8984, size: 32)
!8986 = !DIDerivedType(tag: DW_TAG_member, scope: !8978, file: !124, line: 42, baseType: !8987, size: 32, offset: 32)
!8987 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8978, file: !124, line: 42, size: 32, elements: !8988)
!8988 = !{!8989, !8990}
!8989 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8987, file: !124, line: 43, baseType: !8984, size: 32)
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8987, file: !124, line: 44, baseType: !8984, size: 32)
!8991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8992, size: 32)
!8992 = !DISubroutineType(types: !8993)
!8993 = !{!156, !2822, !156}
!8994 = !DILocalVariable(name: "avail", arg: 1, scope: !8948, file: !1715, line: 560, type: !8951)
!8995 = !DILocation(line: 560, column: 41, scope: !8948)
!8996 = !DILocalVariable(name: "lines", arg: 2, scope: !8948, file: !1715, line: 560, type: !8951)
!8997 = !DILocation(line: 560, column: 63, scope: !8948)
!8998 = !DILocalVariable(name: "completion", arg: 3, scope: !8948, file: !1715, line: 561, type: !8991)
!8999 = !DILocation(line: 561, column: 15, scope: !8948)
!9000 = !DILocation(line: 563, column: 2, scope: !8948)
!9001 = !DILocation(line: 564, column: 2, scope: !8948)
!9002 = !DILocation(line: 565, column: 2, scope: !8948)
!9003 = !DILocation(line: 566, column: 1, scope: !8948)
!9004 = distinct !DISubprogram(name: "uart_sam0_poll_in", scope: !2217, file: !2217, line: 637, type: !1778, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9005 = !DILocalVariable(name: "dev", arg: 1, scope: !9004, file: !2217, line: 637, type: !1780)
!9006 = !DILocation(line: 637, column: 51, scope: !9004)
!9007 = !DILocalVariable(name: "c", arg: 2, scope: !9004, file: !2217, line: 637, type: !1652)
!9008 = !DILocation(line: 637, column: 71, scope: !9004)
!9009 = !DILocalVariable(name: "config", scope: !9004, file: !2217, line: 639, type: !9010)
!9010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!9011 = !DILocation(line: 639, column: 34, scope: !9004)
!9012 = !DILocation(line: 639, column: 43, scope: !9004)
!9013 = !DILocation(line: 639, column: 48, scope: !9004)
!9014 = !DILocalVariable(name: "usart", scope: !9004, file: !2217, line: 641, type: !9015)
!9015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2289)
!9016 = !DILocation(line: 641, column: 22, scope: !9004)
!9017 = !DILocation(line: 641, column: 30, scope: !9004)
!9018 = !DILocation(line: 641, column: 38, scope: !9004)
!9019 = !DILocation(line: 643, column: 7, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9004, file: !2217, line: 643, column: 6)
!9021 = !DILocation(line: 643, column: 14, scope: !9020)
!9022 = !DILocation(line: 643, column: 22, scope: !9020)
!9023 = !DILocation(line: 643, column: 26, scope: !9020)
!9024 = !DILocation(line: 643, column: 6, scope: !9004)
!9025 = !DILocation(line: 644, column: 3, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9020, file: !2217, line: 643, column: 31)
!9027 = !DILocation(line: 647, column: 22, scope: !9004)
!9028 = !DILocation(line: 647, column: 29, scope: !9004)
!9029 = !DILocation(line: 647, column: 34, scope: !9004)
!9030 = !DILocation(line: 647, column: 7, scope: !9004)
!9031 = !DILocation(line: 647, column: 3, scope: !9004)
!9032 = !DILocation(line: 647, column: 5, scope: !9004)
!9033 = !DILocation(line: 648, column: 2, scope: !9004)
!9034 = !DILocation(line: 649, column: 1, scope: !9004)
!9035 = distinct !DISubprogram(name: "uart_sam0_poll_out", scope: !2217, file: !2217, line: 651, type: !1797, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9036 = !DILocalVariable(name: "dev", arg: 1, scope: !9035, file: !2217, line: 651, type: !1780)
!9037 = !DILocation(line: 651, column: 53, scope: !9035)
!9038 = !DILocalVariable(name: "c", arg: 2, scope: !9035, file: !2217, line: 651, type: !157)
!9039 = !DILocation(line: 651, column: 72, scope: !9035)
!9040 = !DILocalVariable(name: "config", scope: !9035, file: !2217, line: 653, type: !9010)
!9041 = !DILocation(line: 653, column: 34, scope: !9035)
!9042 = !DILocation(line: 653, column: 43, scope: !9035)
!9043 = !DILocation(line: 653, column: 48, scope: !9035)
!9044 = !DILocalVariable(name: "usart", scope: !9035, file: !2217, line: 655, type: !9015)
!9045 = !DILocation(line: 655, column: 22, scope: !9035)
!9046 = !DILocation(line: 655, column: 30, scope: !9035)
!9047 = !DILocation(line: 655, column: 38, scope: !9035)
!9048 = !DILocation(line: 657, column: 2, scope: !9035)
!9049 = !DILocation(line: 657, column: 10, scope: !9035)
!9050 = !DILocation(line: 657, column: 17, scope: !9035)
!9051 = !DILocation(line: 657, column: 25, scope: !9035)
!9052 = !DILocation(line: 657, column: 29, scope: !9035)
!9053 = !DILocation(line: 657, column: 9, scope: !9035)
!9054 = distinct !{!9054, !9048, !9055}
!9055 = !DILocation(line: 658, column: 2, scope: !9035)
!9056 = !DILocation(line: 661, column: 20, scope: !9035)
!9057 = !DILocation(line: 661, column: 2, scope: !9035)
!9058 = !DILocation(line: 661, column: 9, scope: !9035)
!9059 = !DILocation(line: 661, column: 14, scope: !9035)
!9060 = !DILocation(line: 661, column: 18, scope: !9035)
!9061 = !DILocation(line: 662, column: 1, scope: !9035)
!9062 = distinct !DISubprogram(name: "uart_sam0_err_check", scope: !2217, file: !2217, line: 664, type: !1801, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9063 = !DILocalVariable(name: "dev", arg: 1, scope: !9062, file: !2217, line: 664, type: !1780)
!9064 = !DILocation(line: 664, column: 53, scope: !9062)
!9065 = !DILocalVariable(name: "config", scope: !9062, file: !2217, line: 666, type: !9010)
!9066 = !DILocation(line: 666, column: 34, scope: !9062)
!9067 = !DILocation(line: 666, column: 43, scope: !9062)
!9068 = !DILocation(line: 666, column: 48, scope: !9062)
!9069 = !DILocalVariable(name: "regs", scope: !9062, file: !2217, line: 668, type: !9015)
!9070 = !DILocation(line: 668, column: 22, scope: !9062)
!9071 = !DILocation(line: 668, column: 29, scope: !9062)
!9072 = !DILocation(line: 668, column: 37, scope: !9062)
!9073 = !DILocalVariable(name: "err", scope: !9062, file: !2217, line: 669, type: !173)
!9074 = !DILocation(line: 669, column: 11, scope: !9062)
!9075 = !DILocation(line: 671, column: 6, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9062, file: !2217, line: 671, column: 6)
!9077 = !DILocation(line: 671, column: 12, scope: !9076)
!9078 = !DILocation(line: 671, column: 19, scope: !9076)
!9079 = !DILocation(line: 671, column: 23, scope: !9076)
!9080 = !DILocation(line: 671, column: 6, scope: !9062)
!9081 = !DILocation(line: 672, column: 7, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9076, file: !2217, line: 671, column: 53)
!9083 = !DILocation(line: 673, column: 2, scope: !9082)
!9084 = !DILocation(line: 675, column: 6, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9062, file: !2217, line: 675, column: 6)
!9086 = !DILocation(line: 675, column: 12, scope: !9085)
!9087 = !DILocation(line: 675, column: 19, scope: !9085)
!9088 = !DILocation(line: 675, column: 23, scope: !9085)
!9089 = !DILocation(line: 675, column: 6, scope: !9062)
!9090 = !DILocation(line: 676, column: 7, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9085, file: !2217, line: 675, column: 51)
!9092 = !DILocation(line: 677, column: 2, scope: !9091)
!9093 = !DILocation(line: 679, column: 6, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9062, file: !2217, line: 679, column: 6)
!9095 = !DILocation(line: 679, column: 12, scope: !9094)
!9096 = !DILocation(line: 679, column: 19, scope: !9094)
!9097 = !DILocation(line: 679, column: 23, scope: !9094)
!9098 = !DILocation(line: 679, column: 6, scope: !9062)
!9099 = !DILocation(line: 680, column: 7, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9094, file: !2217, line: 679, column: 51)
!9101 = !DILocation(line: 681, column: 2, scope: !9100)
!9102 = !DILocation(line: 698, column: 2, scope: !9062)
!9103 = !DILocation(line: 698, column: 8, scope: !9062)
!9104 = !DILocation(line: 698, column: 15, scope: !9062)
!9105 = !DILocation(line: 698, column: 19, scope: !9062)
!9106 = !DILocation(line: 703, column: 23, scope: !9062)
!9107 = !DILocation(line: 703, column: 2, scope: !9062)
!9108 = !DILocation(line: 704, column: 9, scope: !9062)
!9109 = !DILocation(line: 704, column: 2, scope: !9062)
!9110 = distinct !DISubprogram(name: "uart_sam0_configure", scope: !2217, file: !2217, line: 388, type: !1805, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9111 = !DILocalVariable(name: "dev", arg: 1, scope: !9110, file: !2217, line: 388, type: !1780)
!9112 = !DILocation(line: 388, column: 53, scope: !9110)
!9113 = !DILocalVariable(name: "new_cfg", arg: 2, scope: !9110, file: !2217, line: 389, type: !1807)
!9114 = !DILocation(line: 389, column: 37, scope: !9110)
!9115 = !DILocalVariable(name: "retval", scope: !9110, file: !2217, line: 391, type: !103)
!9116 = !DILocation(line: 391, column: 6, scope: !9110)
!9117 = !DILocalVariable(name: "cfg", scope: !9110, file: !2217, line: 393, type: !9118)
!9118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9010)
!9119 = !DILocation(line: 393, column: 40, scope: !9110)
!9120 = !DILocation(line: 393, column: 46, scope: !9110)
!9121 = !DILocation(line: 393, column: 51, scope: !9110)
!9122 = !DILocalVariable(name: "dev_data", scope: !9110, file: !2217, line: 394, type: !9123)
!9123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9124)
!9124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 32)
!9125 = !DILocation(line: 394, column: 35, scope: !9110)
!9126 = !DILocation(line: 394, column: 46, scope: !9110)
!9127 = !DILocation(line: 394, column: 51, scope: !9110)
!9128 = !DILocalVariable(name: "usart", scope: !9110, file: !2217, line: 395, type: !9015)
!9129 = !DILocation(line: 395, column: 22, scope: !9110)
!9130 = !DILocation(line: 395, column: 30, scope: !9110)
!9131 = !DILocation(line: 395, column: 35, scope: !9110)
!9132 = !DILocation(line: 397, column: 23, scope: !9110)
!9133 = !DILocation(line: 397, column: 2, scope: !9110)
!9134 = !DILocation(line: 399, column: 2, scope: !9110)
!9135 = !DILocation(line: 399, column: 9, scope: !9110)
!9136 = !DILocation(line: 399, column: 15, scope: !9110)
!9137 = !DILocation(line: 399, column: 19, scope: !9110)
!9138 = !DILocation(line: 399, column: 26, scope: !9110)
!9139 = !DILocation(line: 400, column: 23, scope: !9110)
!9140 = !DILocation(line: 400, column: 2, scope: !9110)
!9141 = !DILocation(line: 402, column: 6, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9110, file: !2217, line: 402, column: 6)
!9143 = !DILocation(line: 402, column: 15, scope: !9142)
!9144 = !DILocation(line: 402, column: 25, scope: !9142)
!9145 = !DILocation(line: 402, column: 6, scope: !9110)
!9146 = !DILocation(line: 406, column: 3, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9142, file: !2217, line: 402, column: 53)
!9148 = !DILocation(line: 409, column: 37, scope: !9110)
!9149 = !DILocation(line: 409, column: 46, scope: !9110)
!9150 = !DILocation(line: 409, column: 2, scope: !9110)
!9151 = !DILocation(line: 409, column: 12, scope: !9110)
!9152 = !DILocation(line: 409, column: 25, scope: !9110)
!9153 = !DILocation(line: 409, column: 35, scope: !9110)
!9154 = !DILocalVariable(name: "CTRLA_temp", scope: !9110, file: !2217, line: 411, type: !2296)
!9155 = !DILocation(line: 411, column: 26, scope: !9110)
!9156 = !DILocation(line: 411, column: 39, scope: !9110)
!9157 = !DILocation(line: 411, column: 46, scope: !9110)
!9158 = !DILocalVariable(name: "CTRLB_temp", scope: !9110, file: !2217, line: 412, type: !2318)
!9159 = !DILocation(line: 412, column: 26, scope: !9110)
!9160 = !DILocation(line: 412, column: 39, scope: !9110)
!9161 = !DILocation(line: 412, column: 46, scope: !9110)
!9162 = !DILocation(line: 414, column: 10, scope: !9110)
!9163 = !DILocation(line: 414, column: 19, scope: !9110)
!9164 = !DILocation(line: 414, column: 2, scope: !9110)
!9165 = !DILocation(line: 416, column: 14, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9110, file: !2217, line: 414, column: 27)
!9167 = !DILocation(line: 416, column: 18, scope: !9166)
!9168 = !DILocation(line: 416, column: 23, scope: !9166)
!9169 = !DILocation(line: 417, column: 3, scope: !9166)
!9170 = !DILocation(line: 419, column: 14, scope: !9166)
!9171 = !DILocation(line: 419, column: 18, scope: !9166)
!9172 = !DILocation(line: 419, column: 23, scope: !9166)
!9173 = !DILocation(line: 420, column: 14, scope: !9166)
!9174 = !DILocation(line: 420, column: 18, scope: !9166)
!9175 = !DILocation(line: 420, column: 24, scope: !9166)
!9176 = !DILocation(line: 421, column: 3, scope: !9166)
!9177 = !DILocation(line: 423, column: 14, scope: !9166)
!9178 = !DILocation(line: 423, column: 18, scope: !9166)
!9179 = !DILocation(line: 423, column: 23, scope: !9166)
!9180 = !DILocation(line: 424, column: 14, scope: !9166)
!9181 = !DILocation(line: 424, column: 18, scope: !9166)
!9182 = !DILocation(line: 424, column: 24, scope: !9166)
!9183 = !DILocation(line: 425, column: 3, scope: !9166)
!9184 = !DILocation(line: 427, column: 3, scope: !9166)
!9185 = !DILocation(line: 430, column: 34, scope: !9110)
!9186 = !DILocation(line: 430, column: 43, scope: !9110)
!9187 = !DILocation(line: 430, column: 2, scope: !9110)
!9188 = !DILocation(line: 430, column: 12, scope: !9110)
!9189 = !DILocation(line: 430, column: 25, scope: !9110)
!9190 = !DILocation(line: 430, column: 32, scope: !9110)
!9191 = !DILocation(line: 432, column: 10, scope: !9110)
!9192 = !DILocation(line: 432, column: 19, scope: !9110)
!9193 = !DILocation(line: 432, column: 2, scope: !9110)
!9194 = !DILocation(line: 434, column: 14, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9110, file: !2217, line: 432, column: 30)
!9196 = !DILocation(line: 434, column: 18, scope: !9195)
!9197 = !DILocation(line: 434, column: 25, scope: !9195)
!9198 = !DILocation(line: 435, column: 3, scope: !9195)
!9199 = !DILocation(line: 437, column: 14, scope: !9195)
!9200 = !DILocation(line: 437, column: 18, scope: !9195)
!9201 = !DILocation(line: 437, column: 25, scope: !9195)
!9202 = !DILocation(line: 438, column: 3, scope: !9195)
!9203 = !DILocation(line: 440, column: 3, scope: !9195)
!9204 = !DILocation(line: 443, column: 37, scope: !9110)
!9205 = !DILocation(line: 443, column: 46, scope: !9110)
!9206 = !DILocation(line: 443, column: 2, scope: !9110)
!9207 = !DILocation(line: 443, column: 12, scope: !9110)
!9208 = !DILocation(line: 443, column: 25, scope: !9110)
!9209 = !DILocation(line: 443, column: 35, scope: !9110)
!9210 = !DILocation(line: 445, column: 10, scope: !9110)
!9211 = !DILocation(line: 445, column: 19, scope: !9110)
!9212 = !DILocation(line: 445, column: 2, scope: !9110)
!9213 = !DILocation(line: 447, column: 14, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9110, file: !2217, line: 445, column: 30)
!9215 = !DILocation(line: 447, column: 18, scope: !9214)
!9216 = !DILocation(line: 447, column: 25, scope: !9214)
!9217 = !DILocation(line: 448, column: 3, scope: !9214)
!9218 = !DILocation(line: 450, column: 14, scope: !9214)
!9219 = !DILocation(line: 450, column: 18, scope: !9214)
!9220 = !DILocation(line: 450, column: 25, scope: !9214)
!9221 = !DILocation(line: 451, column: 3, scope: !9214)
!9222 = !DILocation(line: 453, column: 14, scope: !9214)
!9223 = !DILocation(line: 453, column: 18, scope: !9214)
!9224 = !DILocation(line: 453, column: 25, scope: !9214)
!9225 = !DILocation(line: 454, column: 3, scope: !9214)
!9226 = !DILocation(line: 456, column: 14, scope: !9214)
!9227 = !DILocation(line: 456, column: 18, scope: !9214)
!9228 = !DILocation(line: 456, column: 25, scope: !9214)
!9229 = !DILocation(line: 457, column: 3, scope: !9214)
!9230 = !DILocation(line: 459, column: 14, scope: !9214)
!9231 = !DILocation(line: 459, column: 18, scope: !9214)
!9232 = !DILocation(line: 459, column: 25, scope: !9214)
!9233 = !DILocation(line: 460, column: 3, scope: !9214)
!9234 = !DILocation(line: 462, column: 3, scope: !9214)
!9235 = !DILocation(line: 465, column: 37, scope: !9110)
!9236 = !DILocation(line: 465, column: 46, scope: !9110)
!9237 = !DILocation(line: 465, column: 2, scope: !9110)
!9238 = !DILocation(line: 465, column: 12, scope: !9110)
!9239 = !DILocation(line: 465, column: 25, scope: !9110)
!9240 = !DILocation(line: 465, column: 35, scope: !9110)
!9241 = !DILocation(line: 471, column: 2, scope: !9110)
!9242 = !DILocation(line: 471, column: 9, scope: !9110)
!9243 = !DILocation(line: 471, column: 17, scope: !9110)
!9244 = !DILocation(line: 472, column: 23, scope: !9110)
!9245 = !DILocation(line: 472, column: 2, scope: !9110)
!9246 = !DILocation(line: 474, column: 2, scope: !9110)
!9247 = !DILocation(line: 474, column: 9, scope: !9110)
!9248 = !DILocation(line: 474, column: 17, scope: !9110)
!9249 = !DILocation(line: 475, column: 23, scope: !9110)
!9250 = !DILocation(line: 475, column: 2, scope: !9110)
!9251 = !DILocation(line: 477, column: 34, scope: !9110)
!9252 = !DILocation(line: 477, column: 41, scope: !9110)
!9253 = !DILocation(line: 477, column: 50, scope: !9110)
!9254 = !DILocation(line: 477, column: 11, scope: !9110)
!9255 = !DILocation(line: 477, column: 9, scope: !9110)
!9256 = !DILocation(line: 479, column: 6, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9110, file: !2217, line: 479, column: 6)
!9258 = !DILocation(line: 479, column: 13, scope: !9257)
!9259 = !DILocation(line: 479, column: 6, scope: !9110)
!9260 = !DILocation(line: 480, column: 10, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9257, file: !2217, line: 479, column: 19)
!9262 = !DILocation(line: 480, column: 3, scope: !9261)
!9263 = !DILocation(line: 483, column: 36, scope: !9110)
!9264 = !DILocation(line: 483, column: 45, scope: !9110)
!9265 = !DILocation(line: 483, column: 2, scope: !9110)
!9266 = !DILocation(line: 483, column: 12, scope: !9110)
!9267 = !DILocation(line: 483, column: 25, scope: !9110)
!9268 = !DILocation(line: 483, column: 34, scope: !9110)
!9269 = !DILocation(line: 485, column: 2, scope: !9110)
!9270 = !DILocation(line: 485, column: 9, scope: !9110)
!9271 = !DILocation(line: 485, column: 15, scope: !9110)
!9272 = !DILocation(line: 485, column: 19, scope: !9110)
!9273 = !DILocation(line: 485, column: 26, scope: !9110)
!9274 = !DILocation(line: 486, column: 23, scope: !9110)
!9275 = !DILocation(line: 486, column: 2, scope: !9110)
!9276 = !DILocation(line: 488, column: 2, scope: !9110)
!9277 = !DILocation(line: 489, column: 1, scope: !9110)
!9278 = distinct !DISubprogram(name: "uart_sam0_config_get", scope: !2217, file: !2217, line: 491, type: !1818, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9279 = !DILocalVariable(name: "dev", arg: 1, scope: !9278, file: !2217, line: 491, type: !1780)
!9280 = !DILocation(line: 491, column: 54, scope: !9278)
!9281 = !DILocalVariable(name: "out_cfg", arg: 2, scope: !9278, file: !2217, line: 492, type: !1820)
!9282 = !DILocation(line: 492, column: 25, scope: !9278)
!9283 = !DILocalVariable(name: "dev_data", scope: !9278, file: !2217, line: 494, type: !9123)
!9284 = !DILocation(line: 494, column: 35, scope: !9278)
!9285 = !DILocation(line: 494, column: 46, scope: !9278)
!9286 = !DILocation(line: 494, column: 51, scope: !9278)
!9287 = !DILocation(line: 496, column: 9, scope: !9278)
!9288 = !DILocation(line: 496, column: 20, scope: !9278)
!9289 = !DILocation(line: 496, column: 30, scope: !9278)
!9290 = !DILocation(line: 496, column: 18, scope: !9278)
!9291 = !DILocation(line: 496, column: 2, scope: !9278)
!9292 = !DILocation(line: 499, column: 2, scope: !9278)
!9293 = distinct !DISubprogram(name: "uart_sam0_fifo_fill", scope: !2217, file: !2217, line: 783, type: !1823, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9294 = !DILocalVariable(name: "dev", arg: 1, scope: !9293, file: !2217, line: 783, type: !1780)
!9295 = !DILocation(line: 783, column: 53, scope: !9293)
!9296 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9293, file: !2217, line: 784, type: !1683)
!9297 = !DILocation(line: 784, column: 26, scope: !9293)
!9298 = !DILocalVariable(name: "len", arg: 3, scope: !9293, file: !2217, line: 784, type: !103)
!9299 = !DILocation(line: 784, column: 39, scope: !9293)
!9300 = !DILocalVariable(name: "config", scope: !9293, file: !2217, line: 786, type: !9010)
!9301 = !DILocation(line: 786, column: 34, scope: !9293)
!9302 = !DILocation(line: 786, column: 43, scope: !9293)
!9303 = !DILocation(line: 786, column: 48, scope: !9293)
!9304 = !DILocalVariable(name: "regs", scope: !9293, file: !2217, line: 787, type: !2289)
!9305 = !DILocation(line: 787, column: 15, scope: !9293)
!9306 = !DILocation(line: 787, column: 22, scope: !9293)
!9307 = !DILocation(line: 787, column: 30, scope: !9293)
!9308 = !DILocation(line: 789, column: 6, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9293, file: !2217, line: 789, column: 6)
!9310 = !DILocation(line: 789, column: 12, scope: !9309)
!9311 = !DILocation(line: 789, column: 20, scope: !9309)
!9312 = !DILocation(line: 789, column: 24, scope: !9309)
!9313 = !DILocation(line: 789, column: 28, scope: !9309)
!9314 = !DILocation(line: 789, column: 31, scope: !9309)
!9315 = !DILocation(line: 789, column: 35, scope: !9309)
!9316 = !DILocation(line: 789, column: 6, scope: !9293)
!9317 = !DILocation(line: 790, column: 20, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9309, file: !2217, line: 789, column: 41)
!9319 = !DILocation(line: 790, column: 3, scope: !9318)
!9320 = !DILocation(line: 790, column: 9, scope: !9318)
!9321 = !DILocation(line: 790, column: 14, scope: !9318)
!9322 = !DILocation(line: 790, column: 18, scope: !9318)
!9323 = !DILocation(line: 791, column: 3, scope: !9318)
!9324 = !DILocation(line: 793, column: 3, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9309, file: !2217, line: 792, column: 9)
!9326 = !DILocation(line: 795, column: 1, scope: !9293)
!9327 = distinct !DISubprogram(name: "uart_sam0_fifo_read", scope: !2217, file: !2217, line: 855, type: !1827, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9328 = !DILocalVariable(name: "dev", arg: 1, scope: !9327, file: !2217, line: 855, type: !1780)
!9329 = !DILocation(line: 855, column: 53, scope: !9327)
!9330 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9327, file: !2217, line: 855, type: !1688)
!9331 = !DILocation(line: 855, column: 67, scope: !9327)
!9332 = !DILocalVariable(name: "size", arg: 3, scope: !9327, file: !2217, line: 856, type: !1689)
!9333 = !DILocation(line: 856, column: 21, scope: !9327)
!9334 = !DILocalVariable(name: "config", scope: !9327, file: !2217, line: 858, type: !9010)
!9335 = !DILocation(line: 858, column: 34, scope: !9327)
!9336 = !DILocation(line: 858, column: 43, scope: !9327)
!9337 = !DILocation(line: 858, column: 48, scope: !9327)
!9338 = !DILocalVariable(name: "regs", scope: !9327, file: !2217, line: 859, type: !9015)
!9339 = !DILocation(line: 859, column: 22, scope: !9327)
!9340 = !DILocation(line: 859, column: 29, scope: !9327)
!9341 = !DILocation(line: 859, column: 37, scope: !9327)
!9342 = !DILocation(line: 861, column: 6, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9327, file: !2217, line: 861, column: 6)
!9344 = !DILocation(line: 861, column: 12, scope: !9343)
!9345 = !DILocation(line: 861, column: 20, scope: !9343)
!9346 = !DILocation(line: 861, column: 24, scope: !9343)
!9347 = !DILocation(line: 861, column: 6, scope: !9327)
!9348 = !DILocalVariable(name: "ch", scope: !9349, file: !2217, line: 862, type: !156)
!9349 = distinct !DILexicalBlock(scope: !9343, file: !2217, line: 861, column: 29)
!9350 = !DILocation(line: 862, column: 11, scope: !9349)
!9351 = !DILocation(line: 862, column: 16, scope: !9349)
!9352 = !DILocation(line: 862, column: 22, scope: !9349)
!9353 = !DILocation(line: 862, column: 27, scope: !9349)
!9354 = !DILocation(line: 864, column: 7, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9349, file: !2217, line: 864, column: 7)
!9356 = !DILocation(line: 864, column: 12, scope: !9355)
!9357 = !DILocation(line: 864, column: 7, scope: !9349)
!9358 = !DILocation(line: 865, column: 15, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9355, file: !2217, line: 864, column: 18)
!9360 = !DILocation(line: 865, column: 5, scope: !9359)
!9361 = !DILocation(line: 865, column: 13, scope: !9359)
!9362 = !DILocation(line: 866, column: 4, scope: !9359)
!9363 = !DILocation(line: 868, column: 4, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9355, file: !2217, line: 867, column: 10)
!9365 = !DILocation(line: 871, column: 2, scope: !9327)
!9366 = !DILocation(line: 872, column: 1, scope: !9327)
!9367 = distinct !DISubprogram(name: "uart_sam0_irq_tx_enable", scope: !2217, file: !2217, line: 797, type: !1831, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9368 = !DILocalVariable(name: "dev", arg: 1, scope: !9367, file: !2217, line: 797, type: !1780)
!9369 = !DILocation(line: 797, column: 58, scope: !9367)
!9370 = !DILocalVariable(name: "config", scope: !9367, file: !2217, line: 799, type: !9010)
!9371 = !DILocation(line: 799, column: 34, scope: !9367)
!9372 = !DILocation(line: 799, column: 43, scope: !9367)
!9373 = !DILocation(line: 799, column: 48, scope: !9367)
!9374 = !DILocalVariable(name: "regs", scope: !9367, file: !2217, line: 800, type: !9015)
!9375 = !DILocation(line: 800, column: 22, scope: !9367)
!9376 = !DILocation(line: 800, column: 29, scope: !9367)
!9377 = !DILocation(line: 800, column: 37, scope: !9367)
!9378 = !DILocation(line: 802, column: 2, scope: !9367)
!9379 = !DILocation(line: 802, column: 8, scope: !9367)
!9380 = !DILocation(line: 802, column: 17, scope: !9367)
!9381 = !DILocation(line: 802, column: 21, scope: !9367)
!9382 = !DILocation(line: 804, column: 1, scope: !9367)
!9383 = distinct !DISubprogram(name: "uart_sam0_irq_tx_disable", scope: !2217, file: !2217, line: 806, type: !1831, scopeLine: 807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9384 = !DILocalVariable(name: "dev", arg: 1, scope: !9383, file: !2217, line: 806, type: !1780)
!9385 = !DILocation(line: 806, column: 59, scope: !9383)
!9386 = !DILocalVariable(name: "config", scope: !9383, file: !2217, line: 808, type: !9010)
!9387 = !DILocation(line: 808, column: 34, scope: !9383)
!9388 = !DILocation(line: 808, column: 43, scope: !9383)
!9389 = !DILocation(line: 808, column: 48, scope: !9383)
!9390 = !DILocalVariable(name: "regs", scope: !9383, file: !2217, line: 809, type: !9015)
!9391 = !DILocation(line: 809, column: 22, scope: !9383)
!9392 = !DILocation(line: 809, column: 29, scope: !9383)
!9393 = !DILocation(line: 809, column: 37, scope: !9383)
!9394 = !DILocation(line: 811, column: 2, scope: !9383)
!9395 = !DILocation(line: 811, column: 8, scope: !9383)
!9396 = !DILocation(line: 811, column: 17, scope: !9383)
!9397 = !DILocation(line: 811, column: 21, scope: !9383)
!9398 = !DILocation(line: 813, column: 1, scope: !9383)
!9399 = distinct !DISubprogram(name: "uart_sam0_irq_tx_ready", scope: !2217, file: !2217, line: 815, type: !1801, scopeLine: 816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9400 = !DILocalVariable(name: "dev", arg: 1, scope: !9399, file: !2217, line: 815, type: !1780)
!9401 = !DILocation(line: 815, column: 56, scope: !9399)
!9402 = !DILocalVariable(name: "config", scope: !9399, file: !2217, line: 817, type: !9010)
!9403 = !DILocation(line: 817, column: 34, scope: !9399)
!9404 = !DILocation(line: 817, column: 43, scope: !9399)
!9405 = !DILocation(line: 817, column: 48, scope: !9399)
!9406 = !DILocalVariable(name: "regs", scope: !9399, file: !2217, line: 818, type: !9015)
!9407 = !DILocation(line: 818, column: 22, scope: !9399)
!9408 = !DILocation(line: 818, column: 29, scope: !9399)
!9409 = !DILocation(line: 818, column: 37, scope: !9399)
!9410 = !DILocation(line: 820, column: 10, scope: !9399)
!9411 = !DILocation(line: 820, column: 16, scope: !9399)
!9412 = !DILocation(line: 820, column: 24, scope: !9399)
!9413 = !DILocation(line: 820, column: 28, scope: !9399)
!9414 = !DILocation(line: 820, column: 32, scope: !9399)
!9415 = !DILocation(line: 820, column: 38, scope: !9399)
!9416 = !DILocation(line: 820, column: 42, scope: !9399)
!9417 = !DILocation(line: 820, column: 48, scope: !9399)
!9418 = !DILocation(line: 820, column: 57, scope: !9399)
!9419 = !DILocation(line: 820, column: 61, scope: !9399)
!9420 = !DILocation(line: 820, column: 65, scope: !9399)
!9421 = !DILocation(line: 0, scope: !9399)
!9422 = !DILocation(line: 820, column: 2, scope: !9399)
!9423 = distinct !DISubprogram(name: "uart_sam0_irq_rx_enable", scope: !2217, file: !2217, line: 831, type: !1831, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9424 = !DILocalVariable(name: "dev", arg: 1, scope: !9423, file: !2217, line: 831, type: !1780)
!9425 = !DILocation(line: 831, column: 58, scope: !9423)
!9426 = !DILocalVariable(name: "config", scope: !9423, file: !2217, line: 833, type: !9010)
!9427 = !DILocation(line: 833, column: 34, scope: !9423)
!9428 = !DILocation(line: 833, column: 43, scope: !9423)
!9429 = !DILocation(line: 833, column: 48, scope: !9423)
!9430 = !DILocalVariable(name: "regs", scope: !9423, file: !2217, line: 834, type: !9015)
!9431 = !DILocation(line: 834, column: 22, scope: !9423)
!9432 = !DILocation(line: 834, column: 29, scope: !9423)
!9433 = !DILocation(line: 834, column: 37, scope: !9423)
!9434 = !DILocation(line: 836, column: 2, scope: !9423)
!9435 = !DILocation(line: 836, column: 8, scope: !9423)
!9436 = !DILocation(line: 836, column: 17, scope: !9423)
!9437 = !DILocation(line: 836, column: 21, scope: !9423)
!9438 = !DILocation(line: 837, column: 1, scope: !9423)
!9439 = distinct !DISubprogram(name: "uart_sam0_irq_rx_disable", scope: !2217, file: !2217, line: 839, type: !1831, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9440 = !DILocalVariable(name: "dev", arg: 1, scope: !9439, file: !2217, line: 839, type: !1780)
!9441 = !DILocation(line: 839, column: 59, scope: !9439)
!9442 = !DILocalVariable(name: "config", scope: !9439, file: !2217, line: 841, type: !9010)
!9443 = !DILocation(line: 841, column: 34, scope: !9439)
!9444 = !DILocation(line: 841, column: 43, scope: !9439)
!9445 = !DILocation(line: 841, column: 48, scope: !9439)
!9446 = !DILocalVariable(name: "regs", scope: !9439, file: !2217, line: 842, type: !9015)
!9447 = !DILocation(line: 842, column: 22, scope: !9439)
!9448 = !DILocation(line: 842, column: 29, scope: !9439)
!9449 = !DILocation(line: 842, column: 37, scope: !9439)
!9450 = !DILocation(line: 844, column: 2, scope: !9439)
!9451 = !DILocation(line: 844, column: 8, scope: !9439)
!9452 = !DILocation(line: 844, column: 17, scope: !9439)
!9453 = !DILocation(line: 844, column: 21, scope: !9439)
!9454 = !DILocation(line: 845, column: 1, scope: !9439)
!9455 = distinct !DISubprogram(name: "uart_sam0_irq_tx_complete", scope: !2217, file: !2217, line: 823, type: !1801, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9456 = !DILocalVariable(name: "dev", arg: 1, scope: !9455, file: !2217, line: 823, type: !1780)
!9457 = !DILocation(line: 823, column: 59, scope: !9455)
!9458 = !DILocalVariable(name: "config", scope: !9455, file: !2217, line: 825, type: !9010)
!9459 = !DILocation(line: 825, column: 34, scope: !9455)
!9460 = !DILocation(line: 825, column: 43, scope: !9455)
!9461 = !DILocation(line: 825, column: 48, scope: !9455)
!9462 = !DILocalVariable(name: "regs", scope: !9455, file: !2217, line: 826, type: !9015)
!9463 = !DILocation(line: 826, column: 22, scope: !9455)
!9464 = !DILocation(line: 826, column: 29, scope: !9455)
!9465 = !DILocation(line: 826, column: 37, scope: !9455)
!9466 = !DILocation(line: 828, column: 10, scope: !9455)
!9467 = !DILocation(line: 828, column: 16, scope: !9455)
!9468 = !DILocation(line: 828, column: 24, scope: !9455)
!9469 = !DILocation(line: 828, column: 28, scope: !9455)
!9470 = !DILocation(line: 828, column: 32, scope: !9455)
!9471 = !DILocation(line: 828, column: 38, scope: !9455)
!9472 = !DILocation(line: 828, column: 42, scope: !9455)
!9473 = !DILocation(line: 828, column: 48, scope: !9455)
!9474 = !DILocation(line: 828, column: 57, scope: !9455)
!9475 = !DILocation(line: 828, column: 61, scope: !9455)
!9476 = !DILocation(line: 828, column: 65, scope: !9455)
!9477 = !DILocation(line: 0, scope: !9455)
!9478 = !DILocation(line: 828, column: 2, scope: !9455)
!9479 = distinct !DISubprogram(name: "uart_sam0_irq_rx_ready", scope: !2217, file: !2217, line: 847, type: !1801, scopeLine: 848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9480 = !DILocalVariable(name: "dev", arg: 1, scope: !9479, file: !2217, line: 847, type: !1780)
!9481 = !DILocation(line: 847, column: 56, scope: !9479)
!9482 = !DILocalVariable(name: "config", scope: !9479, file: !2217, line: 849, type: !9010)
!9483 = !DILocation(line: 849, column: 34, scope: !9479)
!9484 = !DILocation(line: 849, column: 43, scope: !9479)
!9485 = !DILocation(line: 849, column: 48, scope: !9479)
!9486 = !DILocalVariable(name: "regs", scope: !9479, file: !2217, line: 850, type: !9015)
!9487 = !DILocation(line: 850, column: 22, scope: !9479)
!9488 = !DILocation(line: 850, column: 29, scope: !9479)
!9489 = !DILocation(line: 850, column: 37, scope: !9479)
!9490 = !DILocation(line: 852, column: 9, scope: !9479)
!9491 = !DILocation(line: 852, column: 15, scope: !9479)
!9492 = !DILocation(line: 852, column: 23, scope: !9479)
!9493 = !DILocation(line: 852, column: 27, scope: !9479)
!9494 = !DILocation(line: 852, column: 31, scope: !9479)
!9495 = !DILocation(line: 852, column: 2, scope: !9479)
!9496 = distinct !DISubprogram(name: "uart_sam0_irq_is_pending", scope: !2217, file: !2217, line: 874, type: !1801, scopeLine: 875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9497 = !DILocalVariable(name: "dev", arg: 1, scope: !9496, file: !2217, line: 874, type: !1780)
!9498 = !DILocation(line: 874, column: 58, scope: !9496)
!9499 = !DILocalVariable(name: "config", scope: !9496, file: !2217, line: 876, type: !9010)
!9500 = !DILocation(line: 876, column: 34, scope: !9496)
!9501 = !DILocation(line: 876, column: 43, scope: !9496)
!9502 = !DILocation(line: 876, column: 48, scope: !9496)
!9503 = !DILocalVariable(name: "regs", scope: !9496, file: !2217, line: 877, type: !9015)
!9504 = !DILocation(line: 877, column: 22, scope: !9496)
!9505 = !DILocation(line: 877, column: 29, scope: !9496)
!9506 = !DILocation(line: 877, column: 37, scope: !9496)
!9507 = !DILocation(line: 879, column: 10, scope: !9496)
!9508 = !DILocation(line: 879, column: 16, scope: !9496)
!9509 = !DILocation(line: 879, column: 25, scope: !9496)
!9510 = !DILocation(line: 879, column: 31, scope: !9496)
!9511 = !DILocation(line: 879, column: 37, scope: !9496)
!9512 = !DILocation(line: 879, column: 45, scope: !9496)
!9513 = !DILocation(line: 879, column: 29, scope: !9496)
!9514 = !DILocation(line: 879, column: 50, scope: !9496)
!9515 = !DILocation(line: 879, column: 2, scope: !9496)
!9516 = distinct !DISubprogram(name: "uart_sam0_irq_update", scope: !2217, file: !2217, line: 902, type: !1801, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9517 = !DILocalVariable(name: "dev", arg: 1, scope: !9516, file: !2217, line: 902, type: !1780)
!9518 = !DILocation(line: 902, column: 54, scope: !9516)
!9519 = !DILocalVariable(name: "config", scope: !9516, file: !2217, line: 905, type: !9010)
!9520 = !DILocation(line: 905, column: 34, scope: !9516)
!9521 = !DILocation(line: 905, column: 43, scope: !9516)
!9522 = !DILocation(line: 905, column: 48, scope: !9516)
!9523 = !DILocalVariable(name: "regs", scope: !9516, file: !2217, line: 906, type: !9015)
!9524 = !DILocation(line: 906, column: 22, scope: !9516)
!9525 = !DILocation(line: 906, column: 29, scope: !9516)
!9526 = !DILocation(line: 906, column: 37, scope: !9516)
!9527 = !DILocation(line: 913, column: 2, scope: !9516)
!9528 = !DILocation(line: 913, column: 8, scope: !9516)
!9529 = !DILocation(line: 913, column: 16, scope: !9516)
!9530 = !DILocation(line: 913, column: 20, scope: !9516)
!9531 = !DILocation(line: 915, column: 2, scope: !9516)
!9532 = distinct !DISubprogram(name: "uart_sam0_irq_callback_set", scope: !2217, file: !2217, line: 918, type: !1845, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9533 = !DILocalVariable(name: "dev", arg: 1, scope: !9532, file: !2217, line: 918, type: !1780)
!9534 = !DILocation(line: 918, column: 61, scope: !9532)
!9535 = !DILocalVariable(name: "cb", arg: 2, scope: !9532, file: !2217, line: 919, type: !1847)
!9536 = !DILocation(line: 919, column: 42, scope: !9532)
!9537 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9532, file: !2217, line: 920, type: !102)
!9538 = !DILocation(line: 920, column: 18, scope: !9532)
!9539 = !DILocalVariable(name: "dev_data", scope: !9532, file: !2217, line: 922, type: !9123)
!9540 = !DILocation(line: 922, column: 35, scope: !9532)
!9541 = !DILocation(line: 922, column: 46, scope: !9532)
!9542 = !DILocation(line: 922, column: 51, scope: !9532)
!9543 = !DILocation(line: 924, column: 17, scope: !9532)
!9544 = !DILocation(line: 924, column: 2, scope: !9532)
!9545 = !DILocation(line: 924, column: 12, scope: !9532)
!9546 = !DILocation(line: 924, column: 15, scope: !9532)
!9547 = !DILocation(line: 925, column: 22, scope: !9532)
!9548 = !DILocation(line: 925, column: 2, scope: !9532)
!9549 = !DILocation(line: 925, column: 12, scope: !9532)
!9550 = !DILocation(line: 925, column: 20, scope: !9532)
!9551 = !DILocation(line: 926, column: 1, scope: !9532)
!9552 = distinct !DISubprogram(name: "wait_synchronization", scope: !2217, file: !2217, line: 91, type: !9553, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9553 = !DISubroutineType(types: !9554)
!9554 = !{null, !9015}
!9555 = !DILocalVariable(name: "usart", arg: 1, scope: !9552, file: !2217, line: 91, type: !9015)
!9556 = !DILocation(line: 91, column: 53, scope: !9552)
!9557 = !DILocation(line: 95, column: 2, scope: !9552)
!9558 = !DILocation(line: 95, column: 10, scope: !9552)
!9559 = !DILocation(line: 95, column: 17, scope: !9552)
!9560 = !DILocation(line: 95, column: 26, scope: !9552)
!9561 = !DILocation(line: 95, column: 30, scope: !9552)
!9562 = !DILocation(line: 95, column: 60, scope: !9552)
!9563 = distinct !{!9563, !9557, !9564}
!9564 = !DILocation(line: 96, column: 2, scope: !9552)
!9565 = !DILocation(line: 104, column: 1, scope: !9552)
!9566 = distinct !DISubprogram(name: "uart_sam0_set_baudrate", scope: !2217, file: !2217, line: 106, type: !9567, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9567 = !DISubroutineType(types: !9568)
!9568 = !{!103, !9015, !173, !173}
!9569 = !DILocalVariable(name: "usart", arg: 1, scope: !9566, file: !2217, line: 106, type: !9015)
!9570 = !DILocation(line: 106, column: 54, scope: !9566)
!9571 = !DILocalVariable(name: "baudrate", arg: 2, scope: !9566, file: !2217, line: 106, type: !173)
!9572 = !DILocation(line: 106, column: 70, scope: !9566)
!9573 = !DILocalVariable(name: "clk_freq_hz", arg: 3, scope: !9566, file: !2217, line: 107, type: !173)
!9574 = !DILocation(line: 107, column: 16, scope: !9566)
!9575 = !DILocalVariable(name: "tmp", scope: !9566, file: !2217, line: 109, type: !1938)
!9576 = !DILocation(line: 109, column: 11, scope: !9566)
!9577 = !DILocalVariable(name: "baud", scope: !9566, file: !2217, line: 110, type: !170)
!9578 = !DILocation(line: 110, column: 11, scope: !9566)
!9579 = !DILocation(line: 112, column: 18, scope: !9566)
!9580 = !DILocation(line: 112, column: 8, scope: !9566)
!9581 = !DILocation(line: 112, column: 27, scope: !9566)
!9582 = !DILocation(line: 112, column: 6, scope: !9566)
!9583 = !DILocation(line: 113, column: 9, scope: !9566)
!9584 = !DILocation(line: 113, column: 16, scope: !9566)
!9585 = !DILocation(line: 113, column: 28, scope: !9566)
!9586 = !DILocation(line: 113, column: 15, scope: !9566)
!9587 = !DILocation(line: 113, column: 13, scope: !9566)
!9588 = !DILocation(line: 113, column: 37, scope: !9566)
!9589 = !DILocation(line: 113, column: 35, scope: !9566)
!9590 = !DILocation(line: 113, column: 6, scope: !9566)
!9591 = !DILocation(line: 116, column: 6, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9566, file: !2217, line: 116, column: 6)
!9593 = !DILocation(line: 116, column: 10, scope: !9592)
!9594 = !DILocation(line: 116, column: 14, scope: !9592)
!9595 = !DILocation(line: 116, column: 17, scope: !9592)
!9596 = !DILocation(line: 116, column: 21, scope: !9592)
!9597 = !DILocation(line: 116, column: 6, scope: !9566)
!9598 = !DILocation(line: 117, column: 3, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9592, file: !2217, line: 116, column: 35)
!9600 = !DILocation(line: 120, column: 27, scope: !9566)
!9601 = !DILocation(line: 120, column: 17, scope: !9566)
!9602 = !DILocation(line: 120, column: 15, scope: !9566)
!9603 = !DILocation(line: 120, column: 9, scope: !9566)
!9604 = !DILocation(line: 120, column: 7, scope: !9566)
!9605 = !DILocation(line: 121, column: 20, scope: !9566)
!9606 = !DILocation(line: 121, column: 2, scope: !9566)
!9607 = !DILocation(line: 121, column: 9, scope: !9566)
!9608 = !DILocation(line: 121, column: 14, scope: !9566)
!9609 = !DILocation(line: 121, column: 18, scope: !9566)
!9610 = !DILocation(line: 122, column: 23, scope: !9566)
!9611 = !DILocation(line: 122, column: 2, scope: !9566)
!9612 = !DILocation(line: 124, column: 2, scope: !9566)
!9613 = !DILocation(line: 125, column: 1, scope: !9566)
!9614 = !DILocalVariable(name: "dev", arg: 1, scope: !2249, file: !2217, line: 1293, type: !1780)
!9615 = !DILocation(line: 1293, column: 1, scope: !2249)
!9616 = !DILocation(line: 1293, column: 1, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9618, file: !2217, line: 1293, column: 1)
!9618 = distinct !DILexicalBlock(scope: !2249, file: !2217, line: 1293, column: 1)
!9619 = !DILocation(line: 1293, column: 1, scope: !9618)
!9620 = !DILocalVariable(name: "dev", arg: 1, scope: !2481, file: !2217, line: 1293, type: !1780)
!9621 = !DILocation(line: 1293, column: 1, scope: !2481)
!9622 = !DILocation(line: 1293, column: 1, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9624, file: !2217, line: 1293, column: 1)
!9624 = distinct !DILexicalBlock(scope: !2481, file: !2217, line: 1293, column: 1)
!9625 = !DILocation(line: 1293, column: 1, scope: !9624)
!9626 = distinct !DISubprogram(name: "uart_sam0_isr", scope: !2217, file: !2217, line: 709, type: !1831, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9627 = !DILocalVariable(name: "dev", arg: 1, scope: !9626, file: !2217, line: 709, type: !1780)
!9628 = !DILocation(line: 709, column: 48, scope: !9626)
!9629 = !DILocalVariable(name: "dev_data", scope: !9626, file: !2217, line: 711, type: !9123)
!9630 = !DILocation(line: 711, column: 35, scope: !9626)
!9631 = !DILocation(line: 711, column: 46, scope: !9626)
!9632 = !DILocation(line: 711, column: 51, scope: !9626)
!9633 = !DILocation(line: 714, column: 6, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9626, file: !2217, line: 714, column: 6)
!9635 = !DILocation(line: 714, column: 16, scope: !9634)
!9636 = !DILocation(line: 714, column: 6, scope: !9626)
!9637 = !DILocation(line: 715, column: 3, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9634, file: !2217, line: 714, column: 20)
!9639 = !DILocation(line: 715, column: 13, scope: !9638)
!9640 = !DILocation(line: 715, column: 16, scope: !9638)
!9641 = !DILocation(line: 715, column: 21, scope: !9638)
!9642 = !DILocation(line: 715, column: 31, scope: !9638)
!9643 = !DILocation(line: 716, column: 2, scope: !9638)
!9644 = !DILocation(line: 777, column: 1, scope: !9626)
!9645 = distinct !DISubprogram(name: "uart_sam0_init", scope: !2217, file: !2217, line: 503, type: !1801, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9646 = !DILocalVariable(name: "dev", arg: 1, scope: !9645, file: !2217, line: 503, type: !1780)
!9647 = !DILocation(line: 503, column: 48, scope: !9645)
!9648 = !DILocalVariable(name: "retval", scope: !9645, file: !2217, line: 505, type: !103)
!9649 = !DILocation(line: 505, column: 6, scope: !9645)
!9650 = !DILocalVariable(name: "cfg", scope: !9645, file: !2217, line: 506, type: !9118)
!9651 = !DILocation(line: 506, column: 40, scope: !9645)
!9652 = !DILocation(line: 506, column: 46, scope: !9645)
!9653 = !DILocation(line: 506, column: 51, scope: !9645)
!9654 = !DILocalVariable(name: "dev_data", scope: !9645, file: !2217, line: 507, type: !9123)
!9655 = !DILocation(line: 507, column: 35, scope: !9645)
!9656 = !DILocation(line: 507, column: 46, scope: !9645)
!9657 = !DILocation(line: 507, column: 51, scope: !9645)
!9658 = !DILocalVariable(name: "usart", scope: !9645, file: !2217, line: 509, type: !9015)
!9659 = !DILocation(line: 509, column: 22, scope: !9645)
!9660 = !DILocation(line: 509, column: 30, scope: !9645)
!9661 = !DILocation(line: 509, column: 35, scope: !9645)
!9662 = !DILocation(line: 520, column: 22, scope: !9645)
!9663 = !DILocation(line: 520, column: 27, scope: !9645)
!9664 = !DILocation(line: 520, column: 43, scope: !9645)
!9665 = !DILocation(line: 520, column: 68, scope: !9645)
!9666 = !DILocation(line: 520, column: 20, scope: !9645)
!9667 = !DILocation(line: 524, column: 22, scope: !9645)
!9668 = !DILocation(line: 524, column: 27, scope: !9645)
!9669 = !DILocation(line: 524, column: 19, scope: !9645)
!9670 = !DILocation(line: 528, column: 2, scope: !9645)
!9671 = !DILocation(line: 528, column: 9, scope: !9645)
!9672 = !DILocation(line: 528, column: 18, scope: !9645)
!9673 = !DILocation(line: 528, column: 22, scope: !9645)
!9674 = !DILocation(line: 529, column: 23, scope: !9645)
!9675 = !DILocation(line: 529, column: 2, scope: !9645)
!9676 = !DILocation(line: 533, column: 6, scope: !9645)
!9677 = !DILocation(line: 533, column: 11, scope: !9645)
!9678 = !DILocation(line: 535, column: 6, scope: !9645)
!9679 = !DILocation(line: 538, column: 6, scope: !9645)
!9680 = !DILocation(line: 540, column: 6, scope: !9645)
!9681 = !DILocation(line: 540, column: 35, scope: !9645)
!9682 = !DILocation(line: 541, column: 30, scope: !9645)
!9683 = !DILocation(line: 532, column: 2, scope: !9645)
!9684 = !DILocation(line: 532, column: 9, scope: !9645)
!9685 = !DILocation(line: 532, column: 15, scope: !9645)
!9686 = !DILocation(line: 532, column: 19, scope: !9645)
!9687 = !DILocation(line: 542, column: 23, scope: !9645)
!9688 = !DILocation(line: 542, column: 2, scope: !9645)
!9689 = !DILocation(line: 545, column: 31, scope: !9645)
!9690 = !DILocation(line: 545, column: 36, scope: !9645)
!9691 = !DILocation(line: 545, column: 11, scope: !9645)
!9692 = !DILocation(line: 545, column: 9, scope: !9645)
!9693 = !DILocation(line: 546, column: 6, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9645, file: !2217, line: 546, column: 6)
!9695 = !DILocation(line: 546, column: 13, scope: !9694)
!9696 = !DILocation(line: 546, column: 6, scope: !9645)
!9697 = !DILocation(line: 547, column: 10, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9694, file: !2217, line: 546, column: 18)
!9699 = !DILocation(line: 547, column: 3, scope: !9698)
!9700 = !DILocation(line: 550, column: 2, scope: !9645)
!9701 = !DILocation(line: 550, column: 12, scope: !9645)
!9702 = !DILocation(line: 550, column: 25, scope: !9645)
!9703 = !DILocation(line: 550, column: 35, scope: !9645)
!9704 = !DILocation(line: 551, column: 2, scope: !9645)
!9705 = !DILocation(line: 551, column: 12, scope: !9645)
!9706 = !DILocation(line: 551, column: 25, scope: !9645)
!9707 = !DILocation(line: 551, column: 32, scope: !9645)
!9708 = !DILocation(line: 552, column: 2, scope: !9645)
!9709 = !DILocation(line: 552, column: 12, scope: !9645)
!9710 = !DILocation(line: 552, column: 25, scope: !9645)
!9711 = !DILocation(line: 552, column: 35, scope: !9645)
!9712 = !DILocation(line: 553, column: 2, scope: !9645)
!9713 = !DILocation(line: 553, column: 12, scope: !9645)
!9714 = !DILocation(line: 553, column: 25, scope: !9645)
!9715 = !DILocation(line: 553, column: 35, scope: !9645)
!9716 = !DILocation(line: 556, column: 2, scope: !9645)
!9717 = !DILocation(line: 556, column: 9, scope: !9645)
!9718 = !DILocation(line: 556, column: 15, scope: !9645)
!9719 = !DILocation(line: 556, column: 19, scope: !9645)
!9720 = !DILocation(line: 558, column: 23, scope: !9645)
!9721 = !DILocation(line: 558, column: 2, scope: !9645)
!9722 = !DILocation(line: 560, column: 34, scope: !9645)
!9723 = !DILocation(line: 560, column: 41, scope: !9645)
!9724 = !DILocation(line: 560, column: 46, scope: !9645)
!9725 = !DILocation(line: 560, column: 11, scope: !9645)
!9726 = !DILocation(line: 560, column: 9, scope: !9645)
!9727 = !DILocation(line: 562, column: 6, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9645, file: !2217, line: 562, column: 6)
!9729 = !DILocation(line: 562, column: 13, scope: !9728)
!9730 = !DILocation(line: 562, column: 6, scope: !9645)
!9731 = !DILocation(line: 563, column: 10, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9728, file: !2217, line: 562, column: 19)
!9733 = !DILocation(line: 563, column: 3, scope: !9732)
!9734 = !DILocation(line: 565, column: 36, scope: !9645)
!9735 = !DILocation(line: 565, column: 41, scope: !9645)
!9736 = !DILocation(line: 565, column: 2, scope: !9645)
!9737 = !DILocation(line: 565, column: 12, scope: !9645)
!9738 = !DILocation(line: 565, column: 25, scope: !9645)
!9739 = !DILocation(line: 565, column: 34, scope: !9645)
!9740 = !DILocation(line: 568, column: 2, scope: !9645)
!9741 = !DILocation(line: 568, column: 7, scope: !9645)
!9742 = !DILocation(line: 568, column: 23, scope: !9645)
!9743 = !DILocation(line: 631, column: 2, scope: !9645)
!9744 = !DILocation(line: 631, column: 9, scope: !9645)
!9745 = !DILocation(line: 631, column: 15, scope: !9645)
!9746 = !DILocation(line: 631, column: 19, scope: !9645)
!9747 = !DILocation(line: 631, column: 26, scope: !9645)
!9748 = !DILocation(line: 632, column: 23, scope: !9645)
!9749 = !DILocation(line: 632, column: 2, scope: !9645)
!9750 = !DILocation(line: 634, column: 2, scope: !9645)
!9751 = !DILocation(line: 635, column: 1, scope: !9645)
!9752 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !2260, file: !2260, line: 342, type: !9753, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9753 = !DISubroutineType(types: !9754)
!9754 = !{!103, !2478, !156}
!9755 = !DILocalVariable(name: "config", arg: 1, scope: !9752, file: !2260, line: 342, type: !2478)
!9756 = !DILocation(line: 342, column: 72, scope: !9752)
!9757 = !DILocalVariable(name: "id", arg: 2, scope: !9752, file: !2260, line: 343, type: !156)
!9758 = !DILocation(line: 343, column: 19, scope: !9752)
!9759 = !DILocalVariable(name: "ret", scope: !9752, file: !2260, line: 345, type: !103)
!9760 = !DILocation(line: 345, column: 6, scope: !9752)
!9761 = !DILocalVariable(name: "state", scope: !9752, file: !2260, line: 346, type: !2263)
!9762 = !DILocation(line: 346, column: 30, scope: !9752)
!9763 = !DILocation(line: 348, column: 29, scope: !9752)
!9764 = !DILocation(line: 348, column: 37, scope: !9752)
!9765 = !DILocation(line: 348, column: 8, scope: !9752)
!9766 = !DILocation(line: 348, column: 6, scope: !9752)
!9767 = !DILocation(line: 349, column: 6, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9752, file: !2260, line: 349, column: 6)
!9769 = !DILocation(line: 349, column: 10, scope: !9768)
!9770 = !DILocation(line: 349, column: 6, scope: !9752)
!9771 = !DILocation(line: 350, column: 10, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9768, file: !2260, line: 349, column: 15)
!9773 = !DILocation(line: 350, column: 3, scope: !9772)
!9774 = !DILocation(line: 353, column: 36, scope: !9752)
!9775 = !DILocation(line: 353, column: 44, scope: !9752)
!9776 = !DILocation(line: 353, column: 9, scope: !9752)
!9777 = !DILocation(line: 353, column: 2, scope: !9752)
!9778 = !DILocation(line: 354, column: 1, scope: !9752)
!9779 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !2260, file: !2260, line: 316, type: !9780, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1724, retainedNodes: !223)
!9780 = !DISubroutineType(types: !9781)
!9781 = !{!103, !2478, !2263}
!9782 = !DILocalVariable(name: "config", arg: 1, scope: !9779, file: !2260, line: 317, type: !2478)
!9783 = !DILocation(line: 317, column: 35, scope: !9779)
!9784 = !DILocalVariable(name: "state", arg: 2, scope: !9779, file: !2260, line: 318, type: !2263)
!9785 = !DILocation(line: 318, column: 30, scope: !9779)
!9786 = !DILocalVariable(name: "reg", scope: !9779, file: !2260, line: 320, type: !22)
!9787 = !DILocation(line: 320, column: 12, scope: !9779)
!9788 = !DILocation(line: 325, column: 2, scope: !9779)
!9789 = !DILocation(line: 326, column: 6, scope: !9779)
!9790 = !DILocation(line: 329, column: 32, scope: !9779)
!9791 = !DILocation(line: 329, column: 39, scope: !9779)
!9792 = !DILocation(line: 329, column: 45, scope: !9779)
!9793 = !DILocation(line: 329, column: 52, scope: !9779)
!9794 = !DILocation(line: 329, column: 61, scope: !9779)
!9795 = !DILocation(line: 329, column: 9, scope: !9779)
!9796 = !DILocation(line: 329, column: 2, scope: !9779)
!9797 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2576, file: !2576, line: 270, type: !2582, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!9798 = !DILocalVariable(name: "dev", arg: 1, scope: !9797, file: !2576, line: 270, type: !2584)
!9799 = !DILocation(line: 270, column: 55, scope: !9797)
!9800 = !DILocation(line: 272, column: 2, scope: !9797)
!9801 = !DILocation(line: 274, column: 2, scope: !9797)
!9802 = !DILocation(line: 275, column: 14, scope: !9797)
!9803 = !DILocation(line: 275, column: 27, scope: !9797)
!9804 = !DILocation(line: 275, column: 12, scope: !9797)
!9805 = !DILocation(line: 276, column: 15, scope: !9797)
!9806 = !DILocation(line: 277, column: 18, scope: !9797)
!9807 = !DILocation(line: 277, column: 16, scope: !9797)
!9808 = !DILocation(line: 278, column: 15, scope: !9797)
!9809 = !DILocation(line: 279, column: 16, scope: !9797)
!9810 = !DILocation(line: 282, column: 2, scope: !9797)
!9811 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2530, file: !2530, line: 850, type: !6681, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!9812 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9811, file: !2530, line: 850, type: !3324)
!9813 = !DILocation(line: 850, column: 51, scope: !9811)
!9814 = !DILocalVariable(name: "priority", arg: 2, scope: !9811, file: !2530, line: 850, type: !173)
!9815 = !DILocation(line: 850, column: 66, scope: !9811)
!9816 = !DILocation(line: 852, column: 17, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9811, file: !2530, line: 852, column: 7)
!9818 = !DILocation(line: 852, column: 23, scope: !9817)
!9819 = !DILocation(line: 852, column: 7, scope: !9811)
!9820 = !DILocation(line: 854, column: 53, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9817, file: !2530, line: 853, column: 3)
!9822 = !DILocation(line: 854, column: 44, scope: !9821)
!9823 = !DILocation(line: 854, column: 83, scope: !9821)
!9824 = !DILocation(line: 854, column: 80, scope: !9821)
!9825 = !DILocation(line: 854, column: 71, scope: !9821)
!9826 = !DILocation(line: 854, column: 69, scope: !9821)
!9827 = !DILocation(line: 855, column: 11, scope: !9821)
!9828 = !DILocation(line: 855, column: 20, scope: !9821)
!9829 = !DILocation(line: 855, column: 48, scope: !9821)
!9830 = !DILocation(line: 855, column: 71, scope: !9821)
!9831 = !DILocation(line: 855, column: 68, scope: !9821)
!9832 = !DILocation(line: 854, column: 102, scope: !9821)
!9833 = !DILocation(line: 854, column: 14, scope: !9821)
!9834 = !DILocation(line: 854, column: 5, scope: !9821)
!9835 = !DILocation(line: 854, column: 30, scope: !9821)
!9836 = !DILocation(line: 856, column: 3, scope: !9821)
!9837 = !DILocation(line: 859, column: 53, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9817, file: !2530, line: 858, column: 3)
!9839 = !DILocation(line: 859, column: 44, scope: !9838)
!9840 = !DILocation(line: 859, column: 83, scope: !9838)
!9841 = !DILocation(line: 859, column: 80, scope: !9838)
!9842 = !DILocation(line: 859, column: 71, scope: !9838)
!9843 = !DILocation(line: 859, column: 69, scope: !9838)
!9844 = !DILocation(line: 860, column: 11, scope: !9838)
!9845 = !DILocation(line: 860, column: 20, scope: !9838)
!9846 = !DILocation(line: 860, column: 48, scope: !9838)
!9847 = !DILocation(line: 860, column: 71, scope: !9838)
!9848 = !DILocation(line: 860, column: 68, scope: !9838)
!9849 = !DILocation(line: 859, column: 102, scope: !9838)
!9850 = !DILocation(line: 859, column: 14, scope: !9838)
!9851 = !DILocation(line: 859, column: 5, scope: !9838)
!9852 = !DILocation(line: 859, column: 30, scope: !9838)
!9853 = !DILocation(line: 862, column: 1, scope: !9811)
!9854 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !9855, file: !9855, line: 59, type: !3704, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!9855 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9856 = !DILocation(line: 64, column: 2, scope: !9854)
!9857 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2576, file: !2576, line: 118, type: !6583, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!9858 = !DILocalVariable(name: "arg", arg: 1, scope: !9857, file: !2576, line: 118, type: !102)
!9859 = !DILocation(line: 118, column: 26, scope: !9857)
!9860 = !DILocation(line: 120, column: 2, scope: !9857)
!9861 = !DILocalVariable(name: "dticks", scope: !9857, file: !2576, line: 121, type: !173)
!9862 = !DILocation(line: 121, column: 11, scope: !9857)
!9863 = !DILocation(line: 124, column: 2, scope: !9857)
!9864 = !DILocation(line: 129, column: 17, scope: !9857)
!9865 = !DILocation(line: 129, column: 14, scope: !9857)
!9866 = !DILocation(line: 130, column: 15, scope: !9857)
!9867 = !DILocation(line: 145, column: 13, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9869, file: !2576, line: 132, column: 16)
!9869 = distinct !DILexicalBlock(scope: !9857, file: !2576, line: 132, column: 6)
!9870 = !DILocation(line: 145, column: 27, scope: !9868)
!9871 = !DILocation(line: 145, column: 25, scope: !9868)
!9872 = !DILocation(line: 145, column: 47, scope: !9868)
!9873 = !DILocation(line: 145, column: 45, scope: !9868)
!9874 = !DILocation(line: 145, column: 10, scope: !9868)
!9875 = !DILocation(line: 146, column: 23, scope: !9868)
!9876 = !DILocation(line: 146, column: 32, scope: !9868)
!9877 = !DILocation(line: 146, column: 30, scope: !9868)
!9878 = !DILocation(line: 146, column: 20, scope: !9868)
!9879 = !DILocation(line: 147, column: 22, scope: !9868)
!9880 = !DILocation(line: 147, column: 3, scope: !9868)
!9881 = !DILocation(line: 151, column: 2, scope: !9857)
!9882 = !DILocation(line: 152, column: 1, scope: !9857)
!9883 = distinct !DISubprogram(name: "elapsed", scope: !2576, file: !2576, line: 85, type: !7427, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!9884 = !DILocalVariable(name: "val1", scope: !9883, file: !2576, line: 87, type: !173)
!9885 = !DILocation(line: 87, column: 11, scope: !9883)
!9886 = !DILocation(line: 87, column: 27, scope: !9883)
!9887 = !DILocalVariable(name: "ctrl", scope: !9883, file: !2576, line: 88, type: !173)
!9888 = !DILocation(line: 88, column: 11, scope: !9883)
!9889 = !DILocation(line: 88, column: 27, scope: !9883)
!9890 = !DILocalVariable(name: "val2", scope: !9883, file: !2576, line: 89, type: !173)
!9891 = !DILocation(line: 89, column: 11, scope: !9883)
!9892 = !DILocation(line: 89, column: 27, scope: !9883)
!9893 = !DILocation(line: 105, column: 7, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9883, file: !2576, line: 105, column: 6)
!9895 = !DILocation(line: 105, column: 12, scope: !9894)
!9896 = !DILocation(line: 106, column: 6, scope: !9894)
!9897 = !DILocation(line: 106, column: 10, scope: !9894)
!9898 = !DILocation(line: 106, column: 17, scope: !9894)
!9899 = !DILocation(line: 106, column: 15, scope: !9894)
!9900 = !DILocation(line: 105, column: 6, scope: !9883)
!9901 = !DILocation(line: 107, column: 19, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9894, file: !2576, line: 106, column: 24)
!9903 = !DILocation(line: 107, column: 16, scope: !9902)
!9904 = !DILocation(line: 111, column: 18, scope: !9902)
!9905 = !DILocation(line: 112, column: 2, scope: !9902)
!9906 = !DILocation(line: 114, column: 10, scope: !9883)
!9907 = !DILocation(line: 114, column: 22, scope: !9883)
!9908 = !DILocation(line: 114, column: 20, scope: !9883)
!9909 = !DILocation(line: 114, column: 30, scope: !9883)
!9910 = !DILocation(line: 114, column: 28, scope: !9883)
!9911 = !DILocation(line: 114, column: 2, scope: !9883)
!9912 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2576, file: !2576, line: 154, type: !9913, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!9913 = !DISubroutineType(types: !9914)
!9914 = !{null, !250, !1035}
!9915 = !DILocalVariable(name: "ticks", arg: 1, scope: !9912, file: !2576, line: 154, type: !250)
!9916 = !DILocation(line: 154, column: 36, scope: !9912)
!9917 = !DILocalVariable(name: "idle", arg: 2, scope: !9912, file: !2576, line: 154, type: !1035)
!9918 = !DILocation(line: 154, column: 48, scope: !9912)
!9919 = !DILocation(line: 162, column: 44, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9912, file: !2576, line: 162, column: 6)
!9921 = !DILocation(line: 162, column: 49, scope: !9920)
!9922 = !DILocation(line: 162, column: 52, scope: !9920)
!9923 = !DILocation(line: 162, column: 58, scope: !9920)
!9924 = !DILocation(line: 162, column: 6, scope: !9912)
!9925 = !DILocation(line: 163, column: 17, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9920, file: !2576, line: 162, column: 78)
!9927 = !DILocation(line: 164, column: 13, scope: !9926)
!9928 = !DILocation(line: 165, column: 3, scope: !9926)
!9929 = !DILocalVariable(name: "delay", scope: !9912, file: !2576, line: 169, type: !173)
!9930 = !DILocation(line: 169, column: 11, scope: !9912)
!9931 = !DILocalVariable(name: "val1", scope: !9912, file: !2576, line: 170, type: !173)
!9932 = !DILocation(line: 170, column: 11, scope: !9912)
!9933 = !DILocalVariable(name: "val2", scope: !9912, file: !2576, line: 170, type: !173)
!9934 = !DILocation(line: 170, column: 17, scope: !9912)
!9935 = !DILocalVariable(name: "last_load_", scope: !9912, file: !2576, line: 171, type: !173)
!9936 = !DILocation(line: 171, column: 11, scope: !9912)
!9937 = !DILocation(line: 171, column: 24, scope: !9912)
!9938 = !DILocation(line: 173, column: 11, scope: !9912)
!9939 = !DILocation(line: 173, column: 17, scope: !9912)
!9940 = !DILocation(line: 173, column: 10, scope: !9912)
!9941 = !DILocation(line: 173, column: 39, scope: !9912)
!9942 = !DILocation(line: 173, column: 51, scope: !9912)
!9943 = !DILocation(line: 173, column: 8, scope: !9912)
!9944 = !DILocation(line: 174, column: 10, scope: !9912)
!9945 = !DILocation(line: 174, column: 8, scope: !9912)
!9946 = !DILocalVariable(name: "key", scope: !9912, file: !2576, line: 176, type: !9947)
!9947 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !9948)
!9948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !9949)
!9949 = !{!9950}
!9950 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9948, file: !222, line: 33, baseType: !103, size: 32)
!9951 = !DILocation(line: 176, column: 19, scope: !9912)
!9952 = !DILocalVariable(name: "l", arg: 1, scope: !9953, file: !222, line: 136, type: !9956)
!9953 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !9954, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!9954 = !DISubroutineType(types: !9955)
!9955 = !{!9947, !9956}
!9956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 32)
!9957 = !DILocation(line: 136, column: 70, scope: !9953, inlinedAt: !9958)
!9958 = distinct !DILocation(line: 176, column: 25, scope: !9912)
!9959 = !DILocation(line: 138, column: 2, scope: !9953, inlinedAt: !9958)
!9960 = !DILocalVariable(name: "k", scope: !9953, file: !222, line: 139, type: !9947)
!9961 = !DILocation(line: 139, column: 19, scope: !9953, inlinedAt: !9958)
!9962 = !DILocalVariable(name: "key", scope: !9963, file: !6329, line: 44, type: !32)
!9963 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6329, file: !6329, line: 42, type: !6330, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!9964 = !DILocation(line: 44, column: 15, scope: !9963, inlinedAt: !9965)
!9965 = distinct !DILocation(line: 145, column: 10, scope: !9953, inlinedAt: !9958)
!9966 = !DILocation(line: 47, column: 2, scope: !9963, inlinedAt: !9965)
!9967 = !{i64 1422191}
!9968 = !DILocation(line: 76, column: 9, scope: !9963, inlinedAt: !9965)
!9969 = !DILocation(line: 145, column: 4, scope: !9953, inlinedAt: !9958)
!9970 = !DILocation(line: 145, column: 8, scope: !9953, inlinedAt: !9958)
!9971 = !DILocation(line: 165, column: 2, scope: !9953, inlinedAt: !9958)
!9972 = !DILocation(line: 176, column: 25, scope: !9912)
!9973 = !DILocalVariable(name: "pending", scope: !9912, file: !2576, line: 178, type: !173)
!9974 = !DILocation(line: 178, column: 11, scope: !9912)
!9975 = !DILocation(line: 178, column: 21, scope: !9912)
!9976 = !DILocation(line: 180, column: 18, scope: !9912)
!9977 = !DILocation(line: 180, column: 7, scope: !9912)
!9978 = !DILocation(line: 182, column: 17, scope: !9912)
!9979 = !DILocation(line: 182, column: 14, scope: !9912)
!9980 = !DILocation(line: 183, column: 15, scope: !9912)
!9981 = !DILocalVariable(name: "unannounced", scope: !9912, file: !2576, line: 185, type: !173)
!9982 = !DILocation(line: 185, column: 11, scope: !9912)
!9983 = !DILocation(line: 185, column: 25, scope: !9912)
!9984 = !DILocation(line: 185, column: 39, scope: !9912)
!9985 = !DILocation(line: 185, column: 37, scope: !9912)
!9986 = !DILocation(line: 187, column: 15, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9912, file: !2576, line: 187, column: 6)
!9988 = !DILocation(line: 187, column: 27, scope: !9987)
!9989 = !DILocation(line: 187, column: 6, scope: !9912)
!9990 = !DILocation(line: 194, column: 15, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9987, file: !2576, line: 187, column: 32)
!9992 = !DILocation(line: 194, column: 13, scope: !9991)
!9993 = !DILocation(line: 195, column: 2, scope: !9991)
!9994 = !DILocation(line: 197, column: 11, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9987, file: !2576, line: 195, column: 9)
!9996 = !DILocation(line: 197, column: 19, scope: !9995)
!9997 = !DILocation(line: 197, column: 17, scope: !9995)
!9998 = !DILocation(line: 197, column: 9, scope: !9995)
!9999 = !DILocation(line: 200, column: 12, scope: !9995)
!10000 = !DILocation(line: 200, column: 9, scope: !9995)
!10001 = !DILocation(line: 202, column: 6, scope: !9995)
!10002 = !DILocation(line: 202, column: 14, scope: !9995)
!10003 = !DILocation(line: 202, column: 12, scope: !9995)
!10004 = !DILocation(line: 202, column: 27, scope: !9995)
!10005 = !DILocation(line: 202, column: 34, scope: !9995)
!10006 = !DILocation(line: 202, column: 32, scope: !9995)
!10007 = !DILocation(line: 202, column: 50, scope: !9995)
!10008 = !DILocation(line: 202, column: 48, scope: !9995)
!10009 = !DILocation(line: 201, column: 9, scope: !9995)
!10010 = !DILocation(line: 203, column: 12, scope: !9995)
!10011 = !DILocation(line: 203, column: 9, scope: !9995)
!10012 = !DILocation(line: 204, column: 11, scope: !9995)
!10013 = !DILocation(line: 204, column: 9, scope: !9995)
!10014 = !DILocation(line: 205, column: 7, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !9995, file: !2576, line: 205, column: 7)
!10016 = !DILocation(line: 205, column: 15, scope: !10015)
!10017 = !DILocation(line: 205, column: 13, scope: !10015)
!10018 = !DILocation(line: 205, column: 7, scope: !9995)
!10019 = !DILocation(line: 206, column: 16, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10015, file: !2576, line: 205, column: 27)
!10021 = !DILocation(line: 206, column: 14, scope: !10020)
!10022 = !DILocation(line: 207, column: 3, scope: !10020)
!10023 = !DILocation(line: 208, column: 16, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10015, file: !2576, line: 207, column: 10)
!10025 = !DILocation(line: 208, column: 14, scope: !10024)
!10026 = !DILocation(line: 212, column: 18, scope: !9912)
!10027 = !DILocation(line: 212, column: 7, scope: !9912)
!10028 = !DILocation(line: 214, column: 18, scope: !9912)
!10029 = !DILocation(line: 214, column: 28, scope: !9912)
!10030 = !DILocation(line: 214, column: 16, scope: !9912)
!10031 = !DILocation(line: 215, column: 15, scope: !9912)
!10032 = !DILocation(line: 227, column: 6, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !9912, file: !2576, line: 227, column: 6)
!10034 = !DILocation(line: 227, column: 13, scope: !10033)
!10035 = !DILocation(line: 227, column: 11, scope: !10033)
!10036 = !DILocation(line: 227, column: 6, scope: !9912)
!10037 = !DILocation(line: 228, column: 19, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10033, file: !2576, line: 227, column: 19)
!10039 = !DILocation(line: 228, column: 27, scope: !10038)
!10040 = !DILocation(line: 228, column: 40, scope: !10038)
!10041 = !DILocation(line: 228, column: 38, scope: !10038)
!10042 = !DILocation(line: 228, column: 24, scope: !10038)
!10043 = !DILocation(line: 228, column: 15, scope: !10038)
!10044 = !DILocation(line: 229, column: 2, scope: !10038)
!10045 = !DILocation(line: 230, column: 19, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10033, file: !2576, line: 229, column: 9)
!10047 = !DILocation(line: 230, column: 26, scope: !10046)
!10048 = !DILocation(line: 230, column: 24, scope: !10046)
!10049 = !DILocation(line: 230, column: 15, scope: !10046)
!10050 = !DILocation(line: 232, column: 2, scope: !9912)
!10051 = !DILocalVariable(name: "l", arg: 1, scope: !10052, file: !222, line: 189, type: !9956)
!10052 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !10053, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!10053 = !DISubroutineType(types: !10054)
!10054 = !{null, !9956, !9947}
!10055 = !DILocation(line: 189, column: 60, scope: !10052, inlinedAt: !10056)
!10056 = distinct !DILocation(line: 232, column: 2, scope: !9912)
!10057 = !DILocalVariable(name: "key", arg: 2, scope: !10052, file: !222, line: 190, type: !9947)
!10058 = !DILocation(line: 190, column: 23, scope: !10052, inlinedAt: !10056)
!10059 = !DILocation(line: 192, column: 2, scope: !10052, inlinedAt: !10056)
!10060 = !DILocation(line: 215, column: 22, scope: !10052, inlinedAt: !10056)
!10061 = !DILocalVariable(name: "key", arg: 1, scope: !10062, file: !6329, line: 84, type: !32)
!10062 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6329, file: !6329, line: 84, type: !6349, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!10063 = !DILocation(line: 84, column: 56, scope: !10062, inlinedAt: !10064)
!10064 = distinct !DILocation(line: 215, column: 2, scope: !10052, inlinedAt: !10056)
!10065 = !DILocation(line: 87, column: 6, scope: !10066, inlinedAt: !10064)
!10066 = distinct !DILexicalBlock(scope: !10062, file: !6329, line: 87, column: 6)
!10067 = !DILocation(line: 87, column: 10, scope: !10066, inlinedAt: !10064)
!10068 = !DILocation(line: 87, column: 6, scope: !10062, inlinedAt: !10064)
!10069 = !DILocation(line: 88, column: 3, scope: !10070, inlinedAt: !10064)
!10070 = distinct !DILexicalBlock(scope: !10066, file: !6329, line: 87, column: 17)
!10071 = !DILocation(line: 90, column: 2, scope: !10062, inlinedAt: !10064)
!10072 = !{i64 1423055}
!10073 = !DILocation(line: 110, column: 1, scope: !10062, inlinedAt: !10064)
!10074 = !DILocation(line: 234, column: 1, scope: !9912)
!10075 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2576, file: !2576, line: 236, type: !7427, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!10076 = !DILocalVariable(name: "key", scope: !10075, file: !2576, line: 242, type: !9947)
!10077 = !DILocation(line: 242, column: 19, scope: !10075)
!10078 = !DILocation(line: 136, column: 70, scope: !9953, inlinedAt: !10079)
!10079 = distinct !DILocation(line: 242, column: 25, scope: !10075)
!10080 = !DILocation(line: 138, column: 2, scope: !9953, inlinedAt: !10079)
!10081 = !DILocation(line: 139, column: 19, scope: !9953, inlinedAt: !10079)
!10082 = !DILocation(line: 44, column: 15, scope: !9963, inlinedAt: !10083)
!10083 = distinct !DILocation(line: 145, column: 10, scope: !9953, inlinedAt: !10079)
!10084 = !DILocation(line: 47, column: 2, scope: !9963, inlinedAt: !10083)
!10085 = !DILocation(line: 76, column: 9, scope: !9963, inlinedAt: !10083)
!10086 = !DILocation(line: 145, column: 4, scope: !9953, inlinedAt: !10079)
!10087 = !DILocation(line: 145, column: 8, scope: !9953, inlinedAt: !10079)
!10088 = !DILocation(line: 165, column: 2, scope: !9953, inlinedAt: !10079)
!10089 = !DILocation(line: 242, column: 25, scope: !10075)
!10090 = !DILocalVariable(name: "cyc", scope: !10075, file: !2576, line: 243, type: !173)
!10091 = !DILocation(line: 243, column: 11, scope: !10075)
!10092 = !DILocation(line: 243, column: 17, scope: !10075)
!10093 = !DILocation(line: 243, column: 29, scope: !10075)
!10094 = !DILocation(line: 243, column: 27, scope: !10075)
!10095 = !DILocation(line: 243, column: 43, scope: !10075)
!10096 = !DILocation(line: 243, column: 41, scope: !10075)
!10097 = !DILocation(line: 245, column: 2, scope: !10075)
!10098 = !DILocation(line: 189, column: 60, scope: !10052, inlinedAt: !10099)
!10099 = distinct !DILocation(line: 245, column: 2, scope: !10075)
!10100 = !DILocation(line: 190, column: 23, scope: !10052, inlinedAt: !10099)
!10101 = !DILocation(line: 192, column: 2, scope: !10052, inlinedAt: !10099)
!10102 = !DILocation(line: 215, column: 22, scope: !10052, inlinedAt: !10099)
!10103 = !DILocation(line: 84, column: 56, scope: !10062, inlinedAt: !10104)
!10104 = distinct !DILocation(line: 215, column: 2, scope: !10052, inlinedAt: !10099)
!10105 = !DILocation(line: 87, column: 6, scope: !10066, inlinedAt: !10104)
!10106 = !DILocation(line: 87, column: 10, scope: !10066, inlinedAt: !10104)
!10107 = !DILocation(line: 87, column: 6, scope: !10062, inlinedAt: !10104)
!10108 = !DILocation(line: 88, column: 3, scope: !10070, inlinedAt: !10104)
!10109 = !DILocation(line: 90, column: 2, scope: !10062, inlinedAt: !10104)
!10110 = !DILocation(line: 110, column: 1, scope: !10062, inlinedAt: !10104)
!10111 = !DILocation(line: 246, column: 9, scope: !10075)
!10112 = !DILocation(line: 246, column: 15, scope: !10075)
!10113 = !DILocation(line: 246, column: 13, scope: !10075)
!10114 = !DILocation(line: 246, column: 2, scope: !10075)
!10115 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2576, file: !2576, line: 249, type: !7427, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!10116 = !DILocalVariable(name: "key", scope: !10115, file: !2576, line: 251, type: !9947)
!10117 = !DILocation(line: 251, column: 19, scope: !10115)
!10118 = !DILocation(line: 136, column: 70, scope: !9953, inlinedAt: !10119)
!10119 = distinct !DILocation(line: 251, column: 25, scope: !10115)
!10120 = !DILocation(line: 138, column: 2, scope: !9953, inlinedAt: !10119)
!10121 = !DILocation(line: 139, column: 19, scope: !9953, inlinedAt: !10119)
!10122 = !DILocation(line: 44, column: 15, scope: !9963, inlinedAt: !10123)
!10123 = distinct !DILocation(line: 145, column: 10, scope: !9953, inlinedAt: !10119)
!10124 = !DILocation(line: 47, column: 2, scope: !9963, inlinedAt: !10123)
!10125 = !DILocation(line: 76, column: 9, scope: !9963, inlinedAt: !10123)
!10126 = !DILocation(line: 145, column: 4, scope: !9953, inlinedAt: !10119)
!10127 = !DILocation(line: 145, column: 8, scope: !9953, inlinedAt: !10119)
!10128 = !DILocation(line: 165, column: 2, scope: !9953, inlinedAt: !10119)
!10129 = !DILocation(line: 251, column: 25, scope: !10115)
!10130 = !DILocalVariable(name: "ret", scope: !10115, file: !2576, line: 252, type: !173)
!10131 = !DILocation(line: 252, column: 11, scope: !10115)
!10132 = !DILocation(line: 252, column: 17, scope: !10115)
!10133 = !DILocation(line: 252, column: 29, scope: !10115)
!10134 = !DILocation(line: 252, column: 27, scope: !10115)
!10135 = !DILocation(line: 254, column: 2, scope: !10115)
!10136 = !DILocation(line: 189, column: 60, scope: !10052, inlinedAt: !10137)
!10137 = distinct !DILocation(line: 254, column: 2, scope: !10115)
!10138 = !DILocation(line: 190, column: 23, scope: !10052, inlinedAt: !10137)
!10139 = !DILocation(line: 192, column: 2, scope: !10052, inlinedAt: !10137)
!10140 = !DILocation(line: 215, column: 22, scope: !10052, inlinedAt: !10137)
!10141 = !DILocation(line: 84, column: 56, scope: !10062, inlinedAt: !10142)
!10142 = distinct !DILocation(line: 215, column: 2, scope: !10052, inlinedAt: !10137)
!10143 = !DILocation(line: 87, column: 6, scope: !10066, inlinedAt: !10142)
!10144 = !DILocation(line: 87, column: 10, scope: !10066, inlinedAt: !10142)
!10145 = !DILocation(line: 87, column: 6, scope: !10062, inlinedAt: !10142)
!10146 = !DILocation(line: 88, column: 3, scope: !10070, inlinedAt: !10142)
!10147 = !DILocation(line: 90, column: 2, scope: !10062, inlinedAt: !10142)
!10148 = !DILocation(line: 110, column: 1, scope: !10062, inlinedAt: !10142)
!10149 = !DILocation(line: 255, column: 9, scope: !10115)
!10150 = !DILocation(line: 255, column: 2, scope: !10115)
!10151 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2576, file: !2576, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!10152 = !DILocation(line: 260, column: 6, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10151, file: !2576, line: 260, column: 6)
!10154 = !DILocation(line: 260, column: 16, scope: !10153)
!10155 = !DILocation(line: 260, column: 6, scope: !10151)
!10156 = !DILocation(line: 261, column: 17, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10153, file: !2576, line: 260, column: 34)
!10158 = !DILocation(line: 262, column: 2, scope: !10157)
!10159 = !DILocation(line: 263, column: 1, scope: !10151)
!10160 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2576, file: !2576, line: 265, type: !253, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2490, retainedNodes: !223)
!10161 = !DILocation(line: 267, column: 16, scope: !10160)
!10162 = !DILocation(line: 268, column: 1, scope: !10160)
!10163 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10164, file: !10164, line: 9, type: !10165, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3545, retainedNodes: !223)
!10164 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10165 = !DISubroutineType(types: !10166)
!10166 = !{!103, !10167, !156, !10180}
!10167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10168, size: 32)
!10168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10169)
!10169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2260, line: 60, size: 64, elements: !10170)
!10170 = !{!10171, !10179}
!10171 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10169, file: !2260, line: 69, baseType: !10172, size: 32)
!10172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10173, size: 32)
!10173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10174)
!10174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2260, line: 50, size: 64, elements: !10175)
!10175 = !{!10176, !10177, !10178}
!10176 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10174, file: !2260, line: 52, baseType: !2268, size: 32)
!10177 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10174, file: !2260, line: 54, baseType: !156, size: 8, offset: 32)
!10178 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10174, file: !2260, line: 56, baseType: !156, size: 8, offset: 40)
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10169, file: !2260, line: 71, baseType: !156, size: 8, offset: 32)
!10180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10172, size: 32)
!10181 = !DILocalVariable(name: "config", arg: 1, scope: !10163, file: !10164, line: 9, type: !10167)
!10182 = !DILocation(line: 9, column: 59, scope: !10163)
!10183 = !DILocalVariable(name: "id", arg: 2, scope: !10163, file: !10164, line: 9, type: !156)
!10184 = !DILocation(line: 9, column: 75, scope: !10163)
!10185 = !DILocalVariable(name: "state", arg: 3, scope: !10163, file: !10164, line: 10, type: !10180)
!10186 = !DILocation(line: 10, column: 34, scope: !10163)
!10187 = !DILocation(line: 12, column: 12, scope: !10163)
!10188 = !DILocation(line: 12, column: 20, scope: !10163)
!10189 = !DILocation(line: 12, column: 3, scope: !10163)
!10190 = !DILocation(line: 12, column: 9, scope: !10163)
!10191 = !DILocation(line: 13, column: 2, scope: !10163)
!10192 = !DILocation(line: 13, column: 10, scope: !10163)
!10193 = !DILocation(line: 13, column: 9, scope: !10163)
!10194 = !DILocation(line: 13, column: 19, scope: !10163)
!10195 = !DILocation(line: 13, column: 27, scope: !10163)
!10196 = !DILocation(line: 13, column: 34, scope: !10163)
!10197 = !DILocation(line: 13, column: 42, scope: !10163)
!10198 = !DILocation(line: 13, column: 16, scope: !10163)
!10199 = !DILocation(line: 14, column: 7, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10201, file: !10164, line: 14, column: 7)
!10201 = distinct !DILexicalBlock(scope: !10163, file: !10164, line: 13, column: 54)
!10202 = !DILocation(line: 14, column: 15, scope: !10200)
!10203 = !DILocation(line: 14, column: 14, scope: !10200)
!10204 = !DILocation(line: 14, column: 23, scope: !10200)
!10205 = !DILocation(line: 14, column: 13, scope: !10200)
!10206 = !DILocation(line: 14, column: 10, scope: !10200)
!10207 = !DILocation(line: 14, column: 7, scope: !10201)
!10208 = !DILocation(line: 15, column: 4, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10200, file: !10164, line: 14, column: 27)
!10210 = !DILocation(line: 18, column: 5, scope: !10201)
!10211 = !DILocation(line: 18, column: 11, scope: !10201)
!10212 = distinct !{!10212, !10191, !10213}
!10213 = !DILocation(line: 19, column: 2, scope: !10163)
!10214 = !DILocation(line: 21, column: 2, scope: !10163)
!10215 = !DILocation(line: 22, column: 1, scope: !10163)
!10216 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2769, file: !2769, line: 47, type: !10217, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2611, retainedNodes: !223)
!10217 = !DISubroutineType(types: !10218)
!10218 = !{!103, !2268, !156, !22}
!10219 = !DILocalVariable(name: "pins", arg: 1, scope: !10216, file: !2769, line: 47, type: !2268)
!10220 = !DILocation(line: 47, column: 53, scope: !10216)
!10221 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10216, file: !2769, line: 47, type: !156)
!10222 = !DILocation(line: 47, column: 67, scope: !10216)
!10223 = !DILocalVariable(name: "reg", arg: 3, scope: !10216, file: !2769, line: 48, type: !22)
!10224 = !DILocation(line: 48, column: 17, scope: !10216)
!10225 = !DILocation(line: 50, column: 2, scope: !10216)
!10226 = !DILocalVariable(name: "i", scope: !10227, file: !2769, line: 52, type: !156)
!10227 = distinct !DILexicalBlock(scope: !10216, file: !2769, line: 52, column: 2)
!10228 = !DILocation(line: 52, column: 15, scope: !10227)
!10229 = !DILocation(line: 52, column: 7, scope: !10227)
!10230 = !DILocation(line: 52, column: 23, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10227, file: !2769, line: 52, column: 2)
!10232 = !DILocation(line: 52, column: 27, scope: !10231)
!10233 = !DILocation(line: 52, column: 25, scope: !10231)
!10234 = !DILocation(line: 52, column: 2, scope: !10227)
!10235 = !DILocation(line: 53, column: 30, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10231, file: !2769, line: 52, column: 41)
!10237 = !DILocation(line: 53, column: 25, scope: !10236)
!10238 = !DILocation(line: 53, column: 3, scope: !10236)
!10239 = !DILocation(line: 54, column: 2, scope: !10236)
!10240 = !DILocation(line: 52, column: 37, scope: !10231)
!10241 = !DILocation(line: 52, column: 2, scope: !10231)
!10242 = distinct !{!10242, !10234, !10243}
!10243 = !DILocation(line: 54, column: 2, scope: !10227)
!10244 = !DILocation(line: 56, column: 2, scope: !10216)
!10245 = distinct !DISubprogram(name: "pinctrl_configure_pin", scope: !2769, file: !2769, line: 25, type: !10246, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2611, retainedNodes: !223)
!10246 = !DISubroutineType(types: !10247)
!10247 = !{null, !2270}
!10248 = !DILocalVariable(name: "pin", arg: 1, scope: !10245, file: !2769, line: 25, type: !2270)
!10249 = !DILocation(line: 25, column: 53, scope: !10245)
!10250 = !DILocalVariable(name: "soc_pin", scope: !10245, file: !2769, line: 27, type: !10251)
!10251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_port_pin", file: !6183, line: 75, size: 96, elements: !10252)
!10252 = !{!10253, !10254, !10255}
!10253 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !10251, file: !6183, line: 76, baseType: !2614, size: 32)
!10254 = !DIDerivedType(tag: DW_TAG_member, name: "pinum", scope: !10251, file: !6183, line: 77, baseType: !173, size: 32, offset: 32)
!10255 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10251, file: !6183, line: 78, baseType: !173, size: 32, offset: 64)
!10256 = !DILocation(line: 27, column: 22, scope: !10245)
!10257 = !DILocalVariable(name: "port_idx", scope: !10245, file: !2769, line: 28, type: !156)
!10258 = !DILocation(line: 28, column: 11, scope: !10245)
!10259 = !DILocalVariable(name: "port_func", scope: !10245, file: !2769, line: 28, type: !156)
!10260 = !DILocation(line: 28, column: 21, scope: !10245)
!10261 = !DILocation(line: 30, column: 13, scope: !10245)
!10262 = !DILocation(line: 30, column: 11, scope: !10245)
!10263 = !DILocation(line: 32, column: 14, scope: !10245)
!10264 = !DILocation(line: 32, column: 12, scope: !10245)
!10265 = !DILocation(line: 34, column: 46, scope: !10245)
!10266 = !DILocation(line: 34, column: 31, scope: !10245)
!10267 = !DILocation(line: 34, column: 17, scope: !10245)
!10268 = !DILocation(line: 34, column: 10, scope: !10245)
!10269 = !DILocation(line: 34, column: 15, scope: !10245)
!10270 = !DILocation(line: 35, column: 18, scope: !10245)
!10271 = !DILocation(line: 35, column: 10, scope: !10245)
!10272 = !DILocation(line: 35, column: 16, scope: !10245)
!10273 = !DILocation(line: 36, column: 18, scope: !10245)
!10274 = !DILocation(line: 36, column: 45, scope: !10245)
!10275 = !DILocation(line: 36, column: 10, scope: !10245)
!10276 = !DILocation(line: 36, column: 16, scope: !10245)
!10277 = !DILocation(line: 38, column: 6, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10245, file: !2769, line: 38, column: 6)
!10279 = !DILocation(line: 38, column: 16, scope: !10278)
!10280 = !DILocation(line: 38, column: 6, scope: !10245)
!10281 = !DILocation(line: 39, column: 21, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10278, file: !2769, line: 38, column: 43)
!10283 = !DILocation(line: 40, column: 7, scope: !10282)
!10284 = !DILocation(line: 41, column: 10, scope: !10282)
!10285 = !DILocation(line: 39, column: 11, scope: !10282)
!10286 = !DILocation(line: 39, column: 17, scope: !10282)
!10287 = !DILocation(line: 42, column: 2, scope: !10282)
!10288 = !DILocation(line: 44, column: 2, scope: !10245)
!10289 = !DILocation(line: 45, column: 1, scope: !10245)
!10290 = distinct !DISubprogram(name: "z_device_state_init", scope: !10291, file: !10291, line: 23, type: !253, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!10291 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10292 = !DILocalVariable(name: "dev", scope: !10290, file: !10291, line: 25, type: !10293)
!10293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10294, size: 32)
!10294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10295)
!10295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !1024, line: 378, size: 192, elements: !10296)
!10296 = !{!10297, !10298, !10299, !10300, !10306, !10307}
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10295, file: !1024, line: 380, baseType: !256, size: 32)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10295, file: !1024, line: 382, baseType: !13, size: 32, offset: 32)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10295, file: !1024, line: 384, baseType: !13, size: 32, offset: 64)
!10300 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10295, file: !1024, line: 386, baseType: !10301, size: 32, offset: 96)
!10301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10302, size: 32)
!10302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !1024, line: 351, size: 16, elements: !10303)
!10303 = !{!10304, !10305}
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10302, file: !1024, line: 359, baseType: !156, size: 8)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10302, file: !1024, line: 364, baseType: !1035, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10295, file: !1024, line: 388, baseType: !102, size: 32, offset: 128)
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10295, file: !1024, line: 396, baseType: !1038, size: 32, offset: 160)
!10308 = !DILocation(line: 25, column: 23, scope: !10290)
!10309 = !DILocation(line: 27, column: 2, scope: !10290)
!10310 = !DILocation(line: 27, column: 9, scope: !10290)
!10311 = !DILocation(line: 27, column: 13, scope: !10290)
!10312 = !DILocation(line: 28, column: 17, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10290, file: !10291, line: 27, column: 29)
!10314 = !DILocation(line: 28, column: 3, scope: !10313)
!10315 = !DILocation(line: 29, column: 3, scope: !10313)
!10316 = distinct !{!10316, !10309, !10317}
!10317 = !DILocation(line: 30, column: 2, scope: !10290)
!10318 = !DILocation(line: 31, column: 1, scope: !10290)
!10319 = distinct !DISubprogram(name: "z_object_init", scope: !31, file: !31, line: 200, type: !17, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!10320 = !DILocalVariable(name: "obj", arg: 1, scope: !10319, file: !31, line: 200, type: !13)
!10321 = !DILocation(line: 200, column: 46, scope: !10319)
!10322 = !DILocation(line: 202, column: 2, scope: !10319)
!10323 = !DILocation(line: 203, column: 1, scope: !10319)
!10324 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10291, file: !10291, line: 33, type: !10325, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!10325 = !DISubroutineType(types: !10326)
!10326 = !{!10293, !256}
!10327 = !DILocalVariable(name: "name", arg: 1, scope: !10324, file: !10291, line: 33, type: !256)
!10328 = !DILocation(line: 33, column: 60, scope: !10324)
!10329 = !DILocalVariable(name: "dev", scope: !10324, file: !10291, line: 35, type: !10293)
!10330 = !DILocation(line: 35, column: 23, scope: !10324)
!10331 = !DILocation(line: 40, column: 7, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10324, file: !10291, line: 40, column: 6)
!10333 = !DILocation(line: 40, column: 12, scope: !10332)
!10334 = !DILocation(line: 40, column: 21, scope: !10332)
!10335 = !DILocation(line: 40, column: 25, scope: !10332)
!10336 = !DILocation(line: 40, column: 33, scope: !10332)
!10337 = !DILocation(line: 40, column: 6, scope: !10324)
!10338 = !DILocation(line: 41, column: 3, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10332, file: !10291, line: 40, column: 43)
!10340 = !DILocation(line: 49, column: 11, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10324, file: !10291, line: 49, column: 2)
!10342 = !DILocation(line: 49, column: 7, scope: !10341)
!10343 = !DILocation(line: 49, column: 29, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10341, file: !10291, line: 49, column: 2)
!10345 = !DILocation(line: 49, column: 33, scope: !10344)
!10346 = !DILocation(line: 49, column: 2, scope: !10341)
!10347 = !DILocation(line: 50, column: 25, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10349, file: !10291, line: 50, column: 7)
!10349 = distinct !DILexicalBlock(scope: !10344, file: !10291, line: 49, column: 57)
!10350 = !DILocation(line: 50, column: 7, scope: !10348)
!10351 = !DILocation(line: 50, column: 30, scope: !10348)
!10352 = !DILocation(line: 50, column: 34, scope: !10348)
!10353 = !DILocation(line: 50, column: 39, scope: !10348)
!10354 = !DILocation(line: 50, column: 47, scope: !10348)
!10355 = !DILocation(line: 50, column: 44, scope: !10348)
!10356 = !DILocation(line: 50, column: 7, scope: !10349)
!10357 = !DILocation(line: 51, column: 11, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10348, file: !10291, line: 50, column: 54)
!10359 = !DILocation(line: 51, column: 4, scope: !10358)
!10360 = !DILocation(line: 53, column: 2, scope: !10349)
!10361 = !DILocation(line: 49, column: 53, scope: !10344)
!10362 = !DILocation(line: 49, column: 2, scope: !10344)
!10363 = distinct !{!10363, !10346, !10364}
!10364 = !DILocation(line: 53, column: 2, scope: !10341)
!10365 = !DILocation(line: 55, column: 11, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10324, file: !10291, line: 55, column: 2)
!10367 = !DILocation(line: 55, column: 7, scope: !10366)
!10368 = !DILocation(line: 55, column: 29, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10366, file: !10291, line: 55, column: 2)
!10370 = !DILocation(line: 55, column: 33, scope: !10369)
!10371 = !DILocation(line: 55, column: 2, scope: !10366)
!10372 = !DILocation(line: 56, column: 25, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10374, file: !10291, line: 56, column: 7)
!10374 = distinct !DILexicalBlock(scope: !10369, file: !10291, line: 55, column: 57)
!10375 = !DILocation(line: 56, column: 7, scope: !10373)
!10376 = !DILocation(line: 56, column: 30, scope: !10373)
!10377 = !DILocation(line: 56, column: 41, scope: !10373)
!10378 = !DILocation(line: 56, column: 47, scope: !10373)
!10379 = !DILocation(line: 56, column: 52, scope: !10373)
!10380 = !DILocation(line: 56, column: 34, scope: !10373)
!10381 = !DILocation(line: 56, column: 58, scope: !10373)
!10382 = !DILocation(line: 56, column: 7, scope: !10374)
!10383 = !DILocation(line: 57, column: 11, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10373, file: !10291, line: 56, column: 65)
!10385 = !DILocation(line: 57, column: 4, scope: !10384)
!10386 = !DILocation(line: 59, column: 2, scope: !10374)
!10387 = !DILocation(line: 55, column: 53, scope: !10369)
!10388 = !DILocation(line: 55, column: 2, scope: !10369)
!10389 = distinct !{!10389, !10371, !10390}
!10390 = !DILocation(line: 59, column: 2, scope: !10366)
!10391 = !DILocation(line: 61, column: 2, scope: !10324)
!10392 = !DILocation(line: 62, column: 1, scope: !10324)
!10393 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10291, file: !10291, line: 93, type: !10394, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!10394 = !DISubroutineType(types: !10395)
!10395 = !{!1035, !10293}
!10396 = !DILocalVariable(name: "dev", arg: 1, scope: !10393, file: !10291, line: 93, type: !10293)
!10397 = !DILocation(line: 93, column: 45, scope: !10393)
!10398 = !DILocation(line: 99, column: 6, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10393, file: !10291, line: 99, column: 6)
!10400 = !DILocation(line: 99, column: 10, scope: !10399)
!10401 = !DILocation(line: 99, column: 6, scope: !10393)
!10402 = !DILocation(line: 100, column: 3, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10399, file: !10291, line: 99, column: 19)
!10404 = !DILocation(line: 103, column: 9, scope: !10393)
!10405 = !DILocation(line: 103, column: 14, scope: !10393)
!10406 = !DILocation(line: 103, column: 21, scope: !10393)
!10407 = !DILocation(line: 103, column: 33, scope: !10393)
!10408 = !DILocation(line: 103, column: 37, scope: !10393)
!10409 = !DILocation(line: 103, column: 42, scope: !10393)
!10410 = !DILocation(line: 103, column: 49, scope: !10393)
!10411 = !DILocation(line: 103, column: 58, scope: !10393)
!10412 = !DILocation(line: 0, scope: !10393)
!10413 = !DILocation(line: 103, column: 2, scope: !10393)
!10414 = !DILocation(line: 104, column: 1, scope: !10393)
!10415 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10291, file: !10291, line: 87, type: !10416, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!10416 = !DISubroutineType(types: !10417)
!10417 = !{!217, !10418}
!10418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10293, size: 32)
!10419 = !DILocalVariable(name: "devices", arg: 1, scope: !10415, file: !10291, line: 87, type: !10418)
!10420 = !DILocation(line: 87, column: 54, scope: !10415)
!10421 = !DILocation(line: 89, column: 3, scope: !10415)
!10422 = !DILocation(line: 89, column: 11, scope: !10415)
!10423 = !DILocation(line: 90, column: 2, scope: !10415)
!10424 = distinct !DISubprogram(name: "device_required_foreach", scope: !10291, file: !10291, line: 125, type: !10425, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!10425 = !DISubroutineType(types: !10426)
!10426 = !{!103, !10293, !10427, !102}
!10427 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !1024, line: 471, baseType: !10428)
!10428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10429, size: 32)
!10429 = !DISubroutineType(types: !10430)
!10430 = !{!103, !10293, !102}
!10431 = !DILocalVariable(name: "dev", arg: 1, scope: !10424, file: !10291, line: 125, type: !10293)
!10432 = !DILocation(line: 125, column: 50, scope: !10424)
!10433 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10424, file: !10291, line: 126, type: !10427)
!10434 = !DILocation(line: 126, column: 34, scope: !10424)
!10435 = !DILocalVariable(name: "context", arg: 3, scope: !10424, file: !10291, line: 127, type: !102)
!10436 = !DILocation(line: 127, column: 14, scope: !10424)
!10437 = !DILocalVariable(name: "handle_count", scope: !10424, file: !10291, line: 129, type: !217)
!10438 = !DILocation(line: 129, column: 9, scope: !10424)
!10439 = !DILocalVariable(name: "handles", scope: !10424, file: !10291, line: 130, type: !1038)
!10440 = !DILocation(line: 130, column: 25, scope: !10424)
!10441 = !DILocation(line: 130, column: 63, scope: !10424)
!10442 = !DILocation(line: 130, column: 35, scope: !10424)
!10443 = !DILocation(line: 132, column: 24, scope: !10424)
!10444 = !DILocation(line: 132, column: 33, scope: !10424)
!10445 = !DILocation(line: 132, column: 47, scope: !10424)
!10446 = !DILocation(line: 132, column: 59, scope: !10424)
!10447 = !DILocation(line: 132, column: 9, scope: !10424)
!10448 = !DILocation(line: 132, column: 2, scope: !10424)
!10449 = distinct !DISubprogram(name: "device_required_handles_get", scope: !1024, file: !1024, line: 493, type: !10450, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!10450 = !DISubroutineType(types: !10451)
!10451 = !{!1038, !10293, !3311}
!10452 = !DILocalVariable(name: "dev", arg: 1, scope: !10449, file: !1024, line: 493, type: !10293)
!10453 = !DILocation(line: 493, column: 50, scope: !10449)
!10454 = !DILocalVariable(name: "count", arg: 2, scope: !10449, file: !1024, line: 493, type: !3311)
!10455 = !DILocation(line: 493, column: 63, scope: !10449)
!10456 = !DILocalVariable(name: "rv", scope: !10449, file: !1024, line: 495, type: !1038)
!10457 = !DILocation(line: 495, column: 25, scope: !10449)
!10458 = !DILocation(line: 495, column: 30, scope: !10449)
!10459 = !DILocation(line: 495, column: 35, scope: !10449)
!10460 = !DILocation(line: 497, column: 6, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10449, file: !1024, line: 497, column: 6)
!10462 = !DILocation(line: 497, column: 9, scope: !10461)
!10463 = !DILocation(line: 497, column: 6, scope: !10449)
!10464 = !DILocalVariable(name: "i", scope: !10465, file: !1024, line: 498, type: !217)
!10465 = distinct !DILexicalBlock(scope: !10461, file: !1024, line: 497, column: 18)
!10466 = !DILocation(line: 498, column: 10, scope: !10465)
!10467 = !DILocation(line: 500, column: 3, scope: !10465)
!10468 = !DILocation(line: 500, column: 11, scope: !10465)
!10469 = !DILocation(line: 500, column: 14, scope: !10465)
!10470 = !DILocation(line: 500, column: 17, scope: !10465)
!10471 = !DILocation(line: 500, column: 40, scope: !10465)
!10472 = !DILocation(line: 501, column: 11, scope: !10465)
!10473 = !DILocation(line: 501, column: 14, scope: !10465)
!10474 = !DILocation(line: 501, column: 17, scope: !10465)
!10475 = !DILocation(line: 0, scope: !10465)
!10476 = !DILocation(line: 502, column: 4, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10465, file: !1024, line: 501, column: 40)
!10478 = distinct !{!10478, !10467, !10479}
!10479 = !DILocation(line: 503, column: 3, scope: !10465)
!10480 = !DILocation(line: 504, column: 12, scope: !10465)
!10481 = !DILocation(line: 504, column: 4, scope: !10465)
!10482 = !DILocation(line: 504, column: 10, scope: !10465)
!10483 = !DILocation(line: 505, column: 2, scope: !10465)
!10484 = !DILocation(line: 507, column: 9, scope: !10449)
!10485 = !DILocation(line: 507, column: 2, scope: !10449)
!10486 = distinct !DISubprogram(name: "device_visitor", scope: !10291, file: !10291, line: 106, type: !10487, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!10487 = !DISubroutineType(types: !10488)
!10488 = !{!103, !1038, !217, !10427, !102}
!10489 = !DILocalVariable(name: "handles", arg: 1, scope: !10486, file: !10291, line: 106, type: !1038)
!10490 = !DILocation(line: 106, column: 50, scope: !10486)
!10491 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10486, file: !10291, line: 107, type: !217)
!10492 = !DILocation(line: 107, column: 14, scope: !10486)
!10493 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10486, file: !10291, line: 108, type: !10427)
!10494 = !DILocation(line: 108, column: 33, scope: !10486)
!10495 = !DILocalVariable(name: "context", arg: 4, scope: !10486, file: !10291, line: 109, type: !102)
!10496 = !DILocation(line: 109, column: 13, scope: !10486)
!10497 = !DILocalVariable(name: "i", scope: !10498, file: !10291, line: 112, type: !217)
!10498 = distinct !DILexicalBlock(scope: !10486, file: !10291, line: 112, column: 2)
!10499 = !DILocation(line: 112, column: 14, scope: !10498)
!10500 = !DILocation(line: 112, column: 7, scope: !10498)
!10501 = !DILocation(line: 112, column: 21, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10498, file: !10291, line: 112, column: 2)
!10503 = !DILocation(line: 112, column: 25, scope: !10502)
!10504 = !DILocation(line: 112, column: 23, scope: !10502)
!10505 = !DILocation(line: 112, column: 2, scope: !10498)
!10506 = !DILocalVariable(name: "dh", scope: !10507, file: !10291, line: 113, type: !1040)
!10507 = distinct !DILexicalBlock(scope: !10502, file: !10291, line: 112, column: 44)
!10508 = !DILocation(line: 113, column: 19, scope: !10507)
!10509 = !DILocation(line: 113, column: 24, scope: !10507)
!10510 = !DILocation(line: 113, column: 32, scope: !10507)
!10511 = !DILocalVariable(name: "rdev", scope: !10507, file: !10291, line: 114, type: !10293)
!10512 = !DILocation(line: 114, column: 24, scope: !10507)
!10513 = !DILocation(line: 114, column: 50, scope: !10507)
!10514 = !DILocation(line: 114, column: 31, scope: !10507)
!10515 = !DILocalVariable(name: "rc", scope: !10507, file: !10291, line: 115, type: !103)
!10516 = !DILocation(line: 115, column: 7, scope: !10507)
!10517 = !DILocation(line: 115, column: 12, scope: !10507)
!10518 = !DILocation(line: 115, column: 23, scope: !10507)
!10519 = !DILocation(line: 115, column: 29, scope: !10507)
!10520 = !DILocation(line: 117, column: 7, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10507, file: !10291, line: 117, column: 7)
!10522 = !DILocation(line: 117, column: 10, scope: !10521)
!10523 = !DILocation(line: 117, column: 7, scope: !10507)
!10524 = !DILocation(line: 118, column: 11, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10521, file: !10291, line: 117, column: 15)
!10526 = !DILocation(line: 118, column: 4, scope: !10525)
!10527 = !DILocation(line: 120, column: 2, scope: !10507)
!10528 = !DILocation(line: 112, column: 39, scope: !10502)
!10529 = !DILocation(line: 112, column: 2, scope: !10502)
!10530 = distinct !{!10530, !10505, !10531}
!10531 = !DILocation(line: 120, column: 2, scope: !10498)
!10532 = !DILocation(line: 122, column: 9, scope: !10486)
!10533 = !DILocation(line: 122, column: 2, scope: !10486)
!10534 = !DILocation(line: 123, column: 1, scope: !10486)
!10535 = distinct !DISubprogram(name: "device_from_handle", scope: !1024, file: !1024, line: 439, type: !10536, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!10536 = !DISubroutineType(types: !10537)
!10537 = !{!10293, !1040}
!10538 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10535, file: !1024, line: 439, type: !1040)
!10539 = !DILocation(line: 439, column: 36, scope: !10535)
!10540 = !DILocalVariable(name: "dev", scope: !10535, file: !1024, line: 443, type: !10293)
!10541 = !DILocation(line: 443, column: 23, scope: !10535)
!10542 = !DILocalVariable(name: "numdev", scope: !10535, file: !1024, line: 444, type: !217)
!10543 = !DILocation(line: 444, column: 9, scope: !10535)
!10544 = !DILocation(line: 446, column: 7, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10535, file: !1024, line: 446, column: 6)
!10546 = !DILocation(line: 446, column: 18, scope: !10545)
!10547 = !DILocation(line: 446, column: 23, scope: !10545)
!10548 = !DILocation(line: 446, column: 35, scope: !10545)
!10549 = !DILocation(line: 446, column: 27, scope: !10545)
!10550 = !DILocation(line: 446, column: 49, scope: !10545)
!10551 = !DILocation(line: 446, column: 46, scope: !10545)
!10552 = !DILocation(line: 446, column: 6, scope: !10535)
!10553 = !DILocation(line: 447, column: 25, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10545, file: !1024, line: 446, column: 58)
!10555 = !DILocation(line: 447, column: 36, scope: !10554)
!10556 = !DILocation(line: 447, column: 10, scope: !10554)
!10557 = !DILocation(line: 447, column: 7, scope: !10554)
!10558 = !DILocation(line: 448, column: 2, scope: !10554)
!10559 = !DILocation(line: 450, column: 9, scope: !10535)
!10560 = !DILocation(line: 450, column: 2, scope: !10535)
!10561 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10291, file: !10291, line: 135, type: !10425, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!10562 = !DILocalVariable(name: "dev", arg: 1, scope: !10561, file: !10291, line: 135, type: !10293)
!10563 = !DILocation(line: 135, column: 51, scope: !10561)
!10564 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10561, file: !10291, line: 136, type: !10427)
!10565 = !DILocation(line: 136, column: 35, scope: !10561)
!10566 = !DILocalVariable(name: "context", arg: 3, scope: !10561, file: !10291, line: 137, type: !102)
!10567 = !DILocation(line: 137, column: 15, scope: !10561)
!10568 = !DILocalVariable(name: "handle_count", scope: !10561, file: !10291, line: 139, type: !217)
!10569 = !DILocation(line: 139, column: 9, scope: !10561)
!10570 = !DILocalVariable(name: "handles", scope: !10561, file: !10291, line: 140, type: !1038)
!10571 = !DILocation(line: 140, column: 25, scope: !10561)
!10572 = !DILocation(line: 140, column: 64, scope: !10561)
!10573 = !DILocation(line: 140, column: 35, scope: !10561)
!10574 = !DILocation(line: 142, column: 24, scope: !10561)
!10575 = !DILocation(line: 142, column: 33, scope: !10561)
!10576 = !DILocation(line: 142, column: 47, scope: !10561)
!10577 = !DILocation(line: 142, column: 59, scope: !10561)
!10578 = !DILocation(line: 142, column: 9, scope: !10561)
!10579 = !DILocation(line: 142, column: 2, scope: !10561)
!10580 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !1024, file: !1024, line: 573, type: !10450, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3547, retainedNodes: !223)
!10581 = !DILocalVariable(name: "dev", arg: 1, scope: !10580, file: !1024, line: 573, type: !10293)
!10582 = !DILocation(line: 573, column: 51, scope: !10580)
!10583 = !DILocalVariable(name: "count", arg: 2, scope: !10580, file: !1024, line: 573, type: !3311)
!10584 = !DILocation(line: 573, column: 64, scope: !10580)
!10585 = !DILocalVariable(name: "rv", scope: !10580, file: !1024, line: 575, type: !1038)
!10586 = !DILocation(line: 575, column: 25, scope: !10580)
!10587 = !DILocation(line: 575, column: 30, scope: !10580)
!10588 = !DILocation(line: 575, column: 35, scope: !10580)
!10589 = !DILocalVariable(name: "region", scope: !10580, file: !1024, line: 576, type: !217)
!10590 = !DILocation(line: 576, column: 9, scope: !10580)
!10591 = !DILocalVariable(name: "i", scope: !10580, file: !1024, line: 577, type: !217)
!10592 = !DILocation(line: 577, column: 9, scope: !10580)
!10593 = !DILocation(line: 579, column: 6, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10580, file: !1024, line: 579, column: 6)
!10595 = !DILocation(line: 579, column: 9, scope: !10594)
!10596 = !DILocation(line: 579, column: 6, scope: !10580)
!10597 = !DILocation(line: 581, column: 3, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10594, file: !1024, line: 579, column: 18)
!10599 = !DILocation(line: 581, column: 10, scope: !10598)
!10600 = !DILocation(line: 581, column: 17, scope: !10598)
!10601 = !DILocation(line: 582, column: 9, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10603, file: !1024, line: 582, column: 8)
!10603 = distinct !DILexicalBlock(scope: !10598, file: !1024, line: 581, column: 23)
!10604 = !DILocation(line: 582, column: 8, scope: !10602)
!10605 = !DILocation(line: 582, column: 12, scope: !10602)
!10606 = !DILocation(line: 582, column: 8, scope: !10603)
!10607 = !DILocation(line: 583, column: 11, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10602, file: !1024, line: 582, column: 34)
!10609 = !DILocation(line: 584, column: 4, scope: !10608)
!10610 = !DILocation(line: 585, column: 6, scope: !10603)
!10611 = distinct !{!10611, !10597, !10612}
!10612 = !DILocation(line: 586, column: 3, scope: !10598)
!10613 = !DILocation(line: 588, column: 3, scope: !10598)
!10614 = !DILocation(line: 588, column: 10, scope: !10598)
!10615 = !DILocation(line: 588, column: 13, scope: !10598)
!10616 = !DILocation(line: 588, column: 16, scope: !10598)
!10617 = !DILocation(line: 589, column: 4, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10598, file: !1024, line: 588, column: 39)
!10619 = distinct !{!10619, !10613, !10620}
!10620 = !DILocation(line: 590, column: 3, scope: !10598)
!10621 = !DILocation(line: 591, column: 12, scope: !10598)
!10622 = !DILocation(line: 591, column: 4, scope: !10598)
!10623 = !DILocation(line: 591, column: 10, scope: !10598)
!10624 = !DILocation(line: 592, column: 2, scope: !10598)
!10625 = !DILocation(line: 594, column: 9, scope: !10580)
!10626 = !DILocation(line: 594, column: 2, scope: !10580)
!10627 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2777, file: !2777, line: 49, type: !10628, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2774, retainedNodes: !223)
!10628 = !DISubroutineType(types: !10629)
!10629 = !{!3305}
!10630 = !DILocation(line: 51, column: 10, scope: !10627)
!10631 = !DILocation(line: 51, column: 20, scope: !10627)
!10632 = !DILocation(line: 51, column: 2, scope: !10627)
!10633 = distinct !DISubprogram(name: "coredump", scope: !3554, file: !3554, line: 209, type: !10634, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10634 = !DISubroutineType(types: !10635)
!10635 = !{null, !32, !10636, !10680}
!10636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10637, size: 32)
!10637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10638)
!10638 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3391, line: 141, baseType: !10639)
!10639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3391, line: 97, size: 256, elements: !10640)
!10640 = !{!10641}
!10641 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10639, file: !3391, line: 107, baseType: !10642, size: 256)
!10642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3391, line: 98, size: 256, elements: !10643)
!10643 = !{!10644, !10649, !10654, !10659, !10664, !10669, !10674, !10679}
!10644 = !DIDerivedType(tag: DW_TAG_member, scope: !10642, file: !3391, line: 99, baseType: !10645, size: 32)
!10645 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10642, file: !3391, line: 99, size: 32, elements: !10646)
!10646 = !{!10647, !10648}
!10647 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !10645, file: !3391, line: 99, baseType: !173, size: 32)
!10648 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !10645, file: !3391, line: 99, baseType: !173, size: 32)
!10649 = !DIDerivedType(tag: DW_TAG_member, scope: !10642, file: !3391, line: 100, baseType: !10650, size: 32, offset: 32)
!10650 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10642, file: !3391, line: 100, size: 32, elements: !10651)
!10651 = !{!10652, !10653}
!10652 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !10650, file: !3391, line: 100, baseType: !173, size: 32)
!10653 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !10650, file: !3391, line: 100, baseType: !173, size: 32)
!10654 = !DIDerivedType(tag: DW_TAG_member, scope: !10642, file: !3391, line: 101, baseType: !10655, size: 32, offset: 64)
!10655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10642, file: !3391, line: 101, size: 32, elements: !10656)
!10656 = !{!10657, !10658}
!10657 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !10655, file: !3391, line: 101, baseType: !173, size: 32)
!10658 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !10655, file: !3391, line: 101, baseType: !173, size: 32)
!10659 = !DIDerivedType(tag: DW_TAG_member, scope: !10642, file: !3391, line: 102, baseType: !10660, size: 32, offset: 96)
!10660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10642, file: !3391, line: 102, size: 32, elements: !10661)
!10661 = !{!10662, !10663}
!10662 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !10660, file: !3391, line: 102, baseType: !173, size: 32)
!10663 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !10660, file: !3391, line: 102, baseType: !173, size: 32)
!10664 = !DIDerivedType(tag: DW_TAG_member, scope: !10642, file: !3391, line: 103, baseType: !10665, size: 32, offset: 128)
!10665 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10642, file: !3391, line: 103, size: 32, elements: !10666)
!10666 = !{!10667, !10668}
!10667 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !10665, file: !3391, line: 103, baseType: !173, size: 32)
!10668 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !10665, file: !3391, line: 103, baseType: !173, size: 32)
!10669 = !DIDerivedType(tag: DW_TAG_member, scope: !10642, file: !3391, line: 104, baseType: !10670, size: 32, offset: 160)
!10670 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10642, file: !3391, line: 104, size: 32, elements: !10671)
!10671 = !{!10672, !10673}
!10672 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !10670, file: !3391, line: 104, baseType: !173, size: 32)
!10673 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !10670, file: !3391, line: 104, baseType: !173, size: 32)
!10674 = !DIDerivedType(tag: DW_TAG_member, scope: !10642, file: !3391, line: 105, baseType: !10675, size: 32, offset: 192)
!10675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10642, file: !3391, line: 105, size: 32, elements: !10676)
!10676 = !{!10677, !10678}
!10677 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !10675, file: !3391, line: 105, baseType: !173, size: 32)
!10678 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !10675, file: !3391, line: 105, baseType: !173, size: 32)
!10679 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !10642, file: !3391, line: 106, baseType: !173, size: 32, offset: 224)
!10680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10681, size: 32)
!10681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !10682)
!10682 = !{!10683, !10741, !10753, !10754, !10755, !10756, !10769}
!10683 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10681, file: !114, line: 247, baseType: !10684, size: 384)
!10684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !10685)
!10685 = !{!10686, !10710, !10717, !10718, !10719, !10728, !10729, !10730}
!10686 = !DIDerivedType(tag: DW_TAG_member, scope: !10684, file: !114, line: 60, baseType: !10687, size: 64)
!10687 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10684, file: !114, line: 60, size: 64, elements: !10688)
!10688 = !{!10689, !10704}
!10689 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !10687, file: !114, line: 61, baseType: !10690, size: 64)
!10690 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !10691)
!10691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !10692)
!10692 = !{!10693, !10699}
!10693 = !DIDerivedType(tag: DW_TAG_member, scope: !10691, file: !124, line: 38, baseType: !10694, size: 32)
!10694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10691, file: !124, line: 38, size: 32, elements: !10695)
!10695 = !{!10696, !10698}
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10694, file: !124, line: 39, baseType: !10697, size: 32)
!10697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10691, size: 32)
!10698 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10694, file: !124, line: 40, baseType: !10697, size: 32)
!10699 = !DIDerivedType(tag: DW_TAG_member, scope: !10691, file: !124, line: 42, baseType: !10700, size: 32, offset: 32)
!10700 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10691, file: !124, line: 42, size: 32, elements: !10701)
!10701 = !{!10702, !10703}
!10702 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10700, file: !124, line: 43, baseType: !10697, size: 32)
!10703 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10700, file: !124, line: 44, baseType: !10697, size: 32)
!10704 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !10687, file: !114, line: 62, baseType: !10705, size: 64)
!10705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !10706)
!10706 = !{!10707}
!10707 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10705, file: !140, line: 50, baseType: !10708, size: 64)
!10708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10709, size: 64, elements: !145)
!10709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10705, size: 32)
!10710 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !10684, file: !114, line: 68, baseType: !10711, size: 32, offset: 64)
!10711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10712, size: 32)
!10712 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !10713)
!10713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !10714)
!10714 = !{!10715}
!10715 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10713, file: !150, line: 232, baseType: !10716, size: 64)
!10716 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !10691)
!10717 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !10684, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!10718 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !10684, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!10719 = !DIDerivedType(tag: DW_TAG_member, scope: !10684, file: !114, line: 90, baseType: !10720, size: 16, offset: 112)
!10720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10684, file: !114, line: 90, size: 16, elements: !10721)
!10721 = !{!10722, !10727}
!10722 = !DIDerivedType(tag: DW_TAG_member, scope: !10720, file: !114, line: 91, baseType: !10723, size: 16)
!10723 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10720, file: !114, line: 91, size: 16, elements: !10724)
!10724 = !{!10725, !10726}
!10725 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !10723, file: !114, line: 96, baseType: !166, size: 8)
!10726 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !10723, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!10727 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !10720, file: !114, line: 100, baseType: !170, size: 16)
!10728 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !10684, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!10729 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !10684, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!10730 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10684, file: !114, line: 131, baseType: !10731, size: 192, offset: 192)
!10731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !10732)
!10732 = !{!10733, !10734, !10740}
!10733 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10731, file: !150, line: 245, baseType: !10690, size: 64)
!10734 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !10731, file: !150, line: 246, baseType: !10735, size: 32, offset: 64)
!10735 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !10736)
!10736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10737, size: 32)
!10737 = !DISubroutineType(types: !10738)
!10738 = !{null, !10739}
!10739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10731, size: 32)
!10740 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !10731, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!10741 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !10681, file: !114, line: 250, baseType: !10742, size: 288, offset: 384)
!10742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !10743)
!10743 = !{!10744, !10745, !10746, !10747, !10748, !10749, !10750, !10751, !10752}
!10744 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10742, file: !190, line: 26, baseType: !173, size: 32)
!10745 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10742, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!10746 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10742, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!10747 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10742, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!10748 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !10742, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!10749 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !10742, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!10750 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !10742, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!10751 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !10742, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!10752 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !10742, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!10753 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !10681, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!10754 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !10681, file: !114, line: 256, baseType: !10712, size: 64, offset: 704)
!10755 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !10681, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!10756 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !10681, file: !114, line: 325, baseType: !10757, size: 32, offset: 800)
!10757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10758, size: 32)
!10758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !10759)
!10759 = !{!10760, !10766, !10767}
!10760 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10758, file: !109, line: 5074, baseType: !10761, size: 96)
!10761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !10762)
!10762 = !{!10763, !10764, !10765}
!10763 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10761, file: !210, line: 57, baseType: !213, size: 32)
!10764 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !10761, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!10765 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !10761, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!10766 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10758, file: !109, line: 5075, baseType: !10712, size: 64, offset: 96)
!10767 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10758, file: !109, line: 5076, baseType: !10768, offset: 160)
!10768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!10769 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !10681, file: !114, line: 343, baseType: !10770, size: 64, offset: 832)
!10770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !10771)
!10771 = !{!10772, !10773}
!10772 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !10770, file: !190, line: 63, baseType: !173, size: 32)
!10773 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !10770, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!10774 = !DILocalVariable(name: "reason", arg: 1, scope: !10633, file: !3554, line: 209, type: !32)
!10775 = !DILocation(line: 209, column: 28, scope: !10633)
!10776 = !DILocalVariable(name: "esf", arg: 2, scope: !10633, file: !3554, line: 209, type: !10636)
!10777 = !DILocation(line: 209, column: 56, scope: !10633)
!10778 = !DILocalVariable(name: "thread", arg: 3, scope: !10633, file: !3554, line: 210, type: !10680)
!10779 = !DILocation(line: 210, column: 25, scope: !10633)
!10780 = !DILocation(line: 212, column: 1, scope: !10633)
!10781 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3554, file: !3554, line: 214, type: !10782, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10782 = !DISubroutineType(types: !10783)
!10783 = !{null, !22, !22}
!10784 = !DILocalVariable(name: "start_addr", arg: 1, scope: !10781, file: !3554, line: 214, type: !22)
!10785 = !DILocation(line: 214, column: 37, scope: !10781)
!10786 = !DILocalVariable(name: "end_addr", arg: 2, scope: !10781, file: !3554, line: 214, type: !22)
!10787 = !DILocation(line: 214, column: 59, scope: !10781)
!10788 = !DILocation(line: 216, column: 1, scope: !10781)
!10789 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3554, file: !3554, line: 218, type: !10790, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10790 = !DISubroutineType(types: !10791)
!10791 = !{null, !1688, !217}
!10792 = !DILocalVariable(name: "buf", arg: 1, scope: !10789, file: !3554, line: 218, type: !1688)
!10793 = !DILocation(line: 218, column: 38, scope: !10789)
!10794 = !DILocalVariable(name: "buflen", arg: 2, scope: !10789, file: !3554, line: 218, type: !217)
!10795 = !DILocation(line: 218, column: 50, scope: !10789)
!10796 = !DILocation(line: 220, column: 1, scope: !10789)
!10797 = distinct !DISubprogram(name: "coredump_query", scope: !3554, file: !3554, line: 222, type: !10798, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10798 = !DISubroutineType(types: !10799)
!10799 = !{!103, !3553, !102}
!10800 = !DILocalVariable(name: "query_id", arg: 1, scope: !10797, file: !3554, line: 222, type: !3553)
!10801 = !DILocation(line: 222, column: 43, scope: !10797)
!10802 = !DILocalVariable(name: "arg", arg: 2, scope: !10797, file: !3554, line: 222, type: !102)
!10803 = !DILocation(line: 222, column: 59, scope: !10797)
!10804 = !DILocation(line: 224, column: 2, scope: !10797)
!10805 = distinct !DISubprogram(name: "coredump_cmd", scope: !3554, file: !3554, line: 227, type: !10806, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10806 = !DISubroutineType(types: !10807)
!10807 = !{!103, !3560, !102}
!10808 = !DILocalVariable(name: "query_id", arg: 1, scope: !10805, file: !3554, line: 227, type: !3560)
!10809 = !DILocation(line: 227, column: 39, scope: !10805)
!10810 = !DILocalVariable(name: "arg", arg: 2, scope: !10805, file: !3554, line: 227, type: !102)
!10811 = !DILocation(line: 227, column: 55, scope: !10805)
!10812 = !DILocation(line: 229, column: 2, scope: !10805)
!10813 = distinct !DISubprogram(name: "arch_system_halt", scope: !10814, file: !10814, line: 23, type: !6349, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10814 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10815 = !DILocalVariable(name: "reason", arg: 1, scope: !10813, file: !10814, line: 23, type: !32)
!10816 = !DILocation(line: 23, column: 57, scope: !10813)
!10817 = !DILocation(line: 25, column: 2, scope: !10813)
!10818 = !DILocalVariable(name: "key", scope: !10819, file: !6329, line: 44, type: !32)
!10819 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6329, file: !6329, line: 42, type: !6330, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10820 = !DILocation(line: 44, column: 15, scope: !10819, inlinedAt: !10821)
!10821 = distinct !DILocation(line: 31, column: 8, scope: !10813)
!10822 = !DILocation(line: 47, column: 2, scope: !10819, inlinedAt: !10821)
!10823 = !{i64 1451971}
!10824 = !DILocation(line: 76, column: 9, scope: !10819, inlinedAt: !10821)
!10825 = !DILocation(line: 32, column: 2, scope: !10813)
!10826 = !DILocation(line: 32, column: 2, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10828, file: !10814, line: 32, column: 2)
!10828 = distinct !DILexicalBlock(scope: !10813, file: !10814, line: 32, column: 2)
!10829 = distinct !{!10829, !10830, !10831}
!10830 = !DILocation(line: 32, column: 2, scope: !10828)
!10831 = !DILocation(line: 34, column: 2, scope: !10828)
!10832 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !10814, file: !10814, line: 39, type: !10833, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10833 = !DISubroutineType(types: !10834)
!10834 = !{null, !32, !10636}
!10835 = !DILocalVariable(name: "reason", arg: 1, scope: !10832, file: !10814, line: 39, type: !32)
!10836 = !DILocation(line: 39, column: 52, scope: !10832)
!10837 = !DILocalVariable(name: "esf", arg: 2, scope: !10832, file: !10814, line: 40, type: !10636)
!10838 = !DILocation(line: 40, column: 31, scope: !10832)
!10839 = !DILocation(line: 42, column: 2, scope: !10832)
!10840 = !DILocation(line: 45, column: 2, scope: !10832)
!10841 = !DILocation(line: 45, column: 2, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !10814, line: 45, column: 2)
!10843 = distinct !DILexicalBlock(scope: !10844, file: !10814, line: 45, column: 2)
!10844 = distinct !DILexicalBlock(scope: !10832, file: !10814, line: 45, column: 2)
!10845 = !DILocation(line: 46, column: 19, scope: !10832)
!10846 = !DILocation(line: 46, column: 2, scope: !10832)
!10847 = distinct !DISubprogram(name: "k_fatal_halt", scope: !10814, file: !10814, line: 81, type: !6349, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10848 = !DILocalVariable(name: "reason", arg: 1, scope: !10847, file: !10814, line: 81, type: !32)
!10849 = !DILocation(line: 81, column: 46, scope: !10847)
!10850 = !DILocation(line: 83, column: 19, scope: !10847)
!10851 = !DILocation(line: 83, column: 2, scope: !10847)
!10852 = distinct !DISubprogram(name: "z_fatal_error", scope: !10814, file: !10814, line: 96, type: !10833, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10853 = !DILocalVariable(name: "reason", arg: 1, scope: !10852, file: !10814, line: 96, type: !32)
!10854 = !DILocation(line: 96, column: 33, scope: !10852)
!10855 = !DILocalVariable(name: "esf", arg: 2, scope: !10852, file: !10814, line: 96, type: !10636)
!10856 = !DILocation(line: 96, column: 61, scope: !10852)
!10857 = !DILocalVariable(name: "key", scope: !10852, file: !10814, line: 102, type: !32)
!10858 = !DILocation(line: 102, column: 15, scope: !10852)
!10859 = !DILocation(line: 44, column: 15, scope: !10819, inlinedAt: !10860)
!10860 = distinct !DILocation(line: 102, column: 21, scope: !10852)
!10861 = !DILocation(line: 47, column: 2, scope: !10819, inlinedAt: !10860)
!10862 = !DILocation(line: 76, column: 9, scope: !10819, inlinedAt: !10860)
!10863 = !DILocalVariable(name: "thread", scope: !10852, file: !10814, line: 103, type: !10680)
!10864 = !DILocation(line: 103, column: 19, scope: !10852)
!10865 = !DILocation(line: 104, column: 4, scope: !10852)
!10866 = !DILocation(line: 109, column: 2, scope: !10852)
!10867 = !DILocation(line: 109, column: 2, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10869, file: !10814, line: 109, column: 2)
!10869 = distinct !DILexicalBlock(scope: !10870, file: !10814, line: 109, column: 2)
!10870 = distinct !DILexicalBlock(scope: !10852, file: !10814, line: 109, column: 2)
!10871 = !DILocation(line: 119, column: 7, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10852, file: !10814, line: 119, column: 6)
!10873 = !DILocation(line: 119, column: 11, scope: !10872)
!10874 = !DILocation(line: 119, column: 20, scope: !10872)
!10875 = !DILocation(line: 119, column: 51, scope: !10872)
!10876 = !DILocalVariable(name: "esf", arg: 1, scope: !10877, file: !7432, line: 71, type: !10636)
!10877 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7432, file: !7432, line: 71, type: !10878, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10878 = !DISubroutineType(types: !10879)
!10879 = !{!1035, !10636}
!10880 = !DILocation(line: 71, column: 75, scope: !10877, inlinedAt: !10881)
!10881 = distinct !DILocation(line: 119, column: 23, scope: !10872)
!10882 = !DILocation(line: 73, column: 10, scope: !10877, inlinedAt: !10881)
!10883 = !DILocation(line: 73, column: 15, scope: !10877, inlinedAt: !10881)
!10884 = !DILocation(line: 73, column: 21, scope: !10877, inlinedAt: !10881)
!10885 = !DILocation(line: 73, column: 26, scope: !10877, inlinedAt: !10881)
!10886 = !DILocation(line: 73, column: 9, scope: !10877, inlinedAt: !10881)
!10887 = !DILocation(line: 119, column: 6, scope: !10852)
!10888 = !DILocation(line: 120, column: 3, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10872, file: !10814, line: 119, column: 57)
!10890 = !DILocation(line: 120, column: 3, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10892, file: !10814, line: 120, column: 3)
!10892 = distinct !DILexicalBlock(scope: !10893, file: !10814, line: 120, column: 3)
!10893 = distinct !DILexicalBlock(scope: !10889, file: !10814, line: 120, column: 3)
!10894 = !DILocation(line: 121, column: 2, scope: !10889)
!10895 = !DILocation(line: 124, column: 2, scope: !10852)
!10896 = !DILocation(line: 124, column: 2, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10898, file: !10814, line: 124, column: 2)
!10898 = distinct !DILexicalBlock(scope: !10899, file: !10814, line: 124, column: 2)
!10899 = distinct !DILexicalBlock(scope: !10852, file: !10814, line: 124, column: 2)
!10900 = !DILocation(line: 128, column: 11, scope: !10852)
!10901 = !DILocation(line: 128, column: 19, scope: !10852)
!10902 = !DILocation(line: 128, column: 24, scope: !10852)
!10903 = !DILocation(line: 128, column: 2, scope: !10852)
!10904 = !DILocation(line: 131, column: 28, scope: !10852)
!10905 = !DILocation(line: 131, column: 36, scope: !10852)
!10906 = !DILocation(line: 131, column: 2, scope: !10852)
!10907 = !DILocation(line: 151, column: 8, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10909, file: !10814, line: 151, column: 7)
!10909 = distinct !DILexicalBlock(scope: !10910, file: !10814, line: 146, column: 32)
!10910 = distinct !DILexicalBlock(scope: !10852, file: !10814, line: 146, column: 6)
!10911 = !DILocation(line: 151, column: 12, scope: !10908)
!10912 = !DILocation(line: 151, column: 21, scope: !10908)
!10913 = !DILocation(line: 151, column: 52, scope: !10908)
!10914 = !DILocation(line: 71, column: 75, scope: !10877, inlinedAt: !10915)
!10915 = distinct !DILocation(line: 151, column: 24, scope: !10908)
!10916 = !DILocation(line: 73, column: 10, scope: !10877, inlinedAt: !10915)
!10917 = !DILocation(line: 73, column: 15, scope: !10877, inlinedAt: !10915)
!10918 = !DILocation(line: 73, column: 21, scope: !10877, inlinedAt: !10915)
!10919 = !DILocation(line: 73, column: 26, scope: !10877, inlinedAt: !10915)
!10920 = !DILocation(line: 73, column: 9, scope: !10877, inlinedAt: !10915)
!10921 = !DILocation(line: 151, column: 7, scope: !10909)
!10922 = !DILocation(line: 158, column: 3, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10908, file: !10814, line: 151, column: 58)
!10924 = !DILocation(line: 186, column: 18, scope: !10852)
!10925 = !DILocalVariable(name: "key", arg: 1, scope: !10926, file: !6329, line: 84, type: !32)
!10926 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6329, file: !6329, line: 84, type: !6349, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10927 = !DILocation(line: 84, column: 56, scope: !10926, inlinedAt: !10928)
!10928 = distinct !DILocation(line: 186, column: 2, scope: !10852)
!10929 = !DILocation(line: 87, column: 6, scope: !10930, inlinedAt: !10928)
!10930 = distinct !DILexicalBlock(scope: !10926, file: !6329, line: 87, column: 6)
!10931 = !DILocation(line: 87, column: 10, scope: !10930, inlinedAt: !10928)
!10932 = !DILocation(line: 87, column: 6, scope: !10926, inlinedAt: !10928)
!10933 = !DILocation(line: 88, column: 3, scope: !10934, inlinedAt: !10928)
!10934 = distinct !DILexicalBlock(scope: !10930, file: !6329, line: 87, column: 17)
!10935 = !DILocation(line: 90, column: 2, scope: !10926, inlinedAt: !10928)
!10936 = !{i64 1452835}
!10937 = !DILocation(line: 110, column: 1, scope: !10926, inlinedAt: !10928)
!10938 = !DILocation(line: 189, column: 18, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !10814, line: 188, column: 41)
!10940 = distinct !DILexicalBlock(scope: !10852, file: !10814, line: 188, column: 6)
!10941 = !DILocation(line: 189, column: 3, scope: !10939)
!10942 = !DILocation(line: 191, column: 1, scope: !10852)
!10943 = distinct !DISubprogram(name: "k_current_get", scope: !109, file: !109, line: 530, type: !10944, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10944 = !DISubroutineType(types: !10945)
!10945 = !{!10946}
!10946 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !10680)
!10947 = !DILocation(line: 535, column: 9, scope: !10943)
!10948 = !DILocation(line: 535, column: 2, scope: !10943)
!10949 = distinct !DISubprogram(name: "k_thread_abort", scope: !3857, file: !3857, line: 188, type: !10950, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10950 = !DISubroutineType(types: !10951)
!10951 = !{null, !10946}
!10952 = !DILocalVariable(name: "thread", arg: 1, scope: !10949, file: !3857, line: 188, type: !10946)
!10953 = !DILocation(line: 188, column: 43, scope: !10949)
!10954 = !DILocation(line: 197, column: 2, scope: !10949)
!10955 = !DILocation(line: 197, column: 2, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10949, file: !3857, line: 197, column: 2)
!10957 = !{i64 2149639134}
!10958 = !DILocation(line: 198, column: 24, scope: !10949)
!10959 = !DILocation(line: 198, column: 2, scope: !10949)
!10960 = !DILocation(line: 199, column: 1, scope: !10949)
!10961 = distinct !DISubprogram(name: "z_current_get", scope: !3857, file: !3857, line: 173, type: !10944, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3550, retainedNodes: !223)
!10962 = !DILocation(line: 180, column: 2, scope: !10961)
!10963 = !DILocation(line: 180, column: 2, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10961, file: !3857, line: 180, column: 2)
!10965 = !{i64 2149639066}
!10966 = !DILocation(line: 181, column: 9, scope: !10961)
!10967 = !DILocation(line: 181, column: 2, scope: !10961)
!10968 = distinct !DISubprogram(name: "z_early_memset", scope: !2784, file: !2784, line: 108, type: !10969, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!10969 = !DISubroutineType(types: !10970)
!10970 = !{null, !102, !103, !217}
!10971 = !DILocalVariable(name: "dst", arg: 1, scope: !10968, file: !2784, line: 108, type: !102)
!10972 = !DILocation(line: 108, column: 34, scope: !10968)
!10973 = !DILocalVariable(name: "c", arg: 2, scope: !10968, file: !2784, line: 108, type: !103)
!10974 = !DILocation(line: 108, column: 43, scope: !10968)
!10975 = !DILocalVariable(name: "n", arg: 3, scope: !10968, file: !2784, line: 108, type: !217)
!10976 = !DILocation(line: 108, column: 53, scope: !10968)
!10977 = !DILocation(line: 110, column: 16, scope: !10968)
!10978 = !DILocation(line: 110, column: 21, scope: !10968)
!10979 = !DILocation(line: 110, column: 24, scope: !10968)
!10980 = !DILocation(line: 110, column: 9, scope: !10968)
!10981 = !DILocation(line: 111, column: 1, scope: !10968)
!10982 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2784, file: !2784, line: 121, type: !10983, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!10983 = !DISubroutineType(types: !10984)
!10984 = !{null, !102, !13, !217}
!10985 = !DILocalVariable(name: "dst", arg: 1, scope: !10982, file: !2784, line: 121, type: !102)
!10986 = !DILocation(line: 121, column: 34, scope: !10982)
!10987 = !DILocalVariable(name: "src", arg: 2, scope: !10982, file: !2784, line: 121, type: !13)
!10988 = !DILocation(line: 121, column: 51, scope: !10982)
!10989 = !DILocalVariable(name: "n", arg: 3, scope: !10982, file: !2784, line: 121, type: !217)
!10990 = !DILocation(line: 121, column: 63, scope: !10982)
!10991 = !DILocation(line: 123, column: 16, scope: !10982)
!10992 = !DILocation(line: 123, column: 21, scope: !10982)
!10993 = !DILocation(line: 123, column: 26, scope: !10982)
!10994 = !DILocation(line: 123, column: 9, scope: !10982)
!10995 = !DILocation(line: 124, column: 1, scope: !10982)
!10996 = distinct !DISubprogram(name: "z_bss_zero", scope: !2784, file: !2784, line: 132, type: !253, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!10997 = !DILocation(line: 143, column: 2, scope: !10996)
!10998 = !DILocation(line: 168, column: 1, scope: !10996)
!10999 = distinct !DISubprogram(name: "z_init_cpu", scope: !2784, file: !2784, line: 372, type: !11000, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11000 = !DISubroutineType(types: !11001)
!11001 = !{null, !103}
!11002 = !DILocalVariable(name: "id", arg: 1, scope: !10999, file: !2784, line: 372, type: !103)
!11003 = !DILocation(line: 372, column: 21, scope: !10999)
!11004 = !DILocation(line: 374, column: 19, scope: !10999)
!11005 = !DILocation(line: 374, column: 2, scope: !10999)
!11006 = !DILocation(line: 375, column: 49, scope: !10999)
!11007 = !DILocation(line: 375, column: 34, scope: !10999)
!11008 = !DILocation(line: 375, column: 15, scope: !10999)
!11009 = !DILocation(line: 375, column: 2, scope: !10999)
!11010 = !DILocation(line: 375, column: 19, scope: !10999)
!11011 = !DILocation(line: 375, column: 31, scope: !10999)
!11012 = !DILocation(line: 376, column: 24, scope: !10999)
!11013 = !DILocation(line: 376, column: 15, scope: !10999)
!11014 = !DILocation(line: 376, column: 2, scope: !10999)
!11015 = !DILocation(line: 376, column: 19, scope: !10999)
!11016 = !DILocation(line: 376, column: 22, scope: !10999)
!11017 = !DILocation(line: 378, column: 45, scope: !10999)
!11018 = !DILocation(line: 378, column: 26, scope: !10999)
!11019 = !DILocation(line: 378, column: 4, scope: !10999)
!11020 = !DILocation(line: 378, column: 50, scope: !10999)
!11021 = !DILocation(line: 377, column: 15, scope: !10999)
!11022 = !DILocation(line: 377, column: 2, scope: !10999)
!11023 = !DILocation(line: 377, column: 19, scope: !10999)
!11024 = !DILocation(line: 377, column: 29, scope: !10999)
!11025 = !DILocation(line: 384, column: 1, scope: !10999)
!11026 = distinct !DISubprogram(name: "init_idle_thread", scope: !2784, file: !2784, line: 343, type: !11000, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11027 = !DILocalVariable(name: "i", arg: 1, scope: !11026, file: !2784, line: 343, type: !103)
!11028 = !DILocation(line: 343, column: 34, scope: !11026)
!11029 = !DILocalVariable(name: "thread", scope: !11026, file: !2784, line: 345, type: !2862)
!11030 = !DILocation(line: 345, column: 19, scope: !11026)
!11031 = !DILocation(line: 345, column: 44, scope: !11026)
!11032 = !DILocation(line: 345, column: 29, scope: !11026)
!11033 = !DILocalVariable(name: "stack", scope: !11026, file: !2784, line: 346, type: !11034)
!11034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11035, size: 32)
!11035 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !2970)
!11036 = !DILocation(line: 346, column: 20, scope: !11026)
!11037 = !DILocation(line: 346, column: 42, scope: !11026)
!11038 = !DILocation(line: 346, column: 28, scope: !11026)
!11039 = !DILocalVariable(name: "tname", scope: !11026, file: !2784, line: 358, type: !2822)
!11040 = !DILocation(line: 358, column: 8, scope: !11026)
!11041 = !DILocation(line: 361, column: 21, scope: !11026)
!11042 = !DILocation(line: 361, column: 29, scope: !11026)
!11043 = !DILocation(line: 362, column: 50, scope: !11026)
!11044 = !DILocation(line: 362, column: 37, scope: !11026)
!11045 = !DILocation(line: 362, column: 36, scope: !11026)
!11046 = !DILocation(line: 364, column: 6, scope: !11026)
!11047 = !DILocation(line: 361, column: 2, scope: !11026)
!11048 = !DILocation(line: 365, column: 27, scope: !11026)
!11049 = !DILocation(line: 365, column: 2, scope: !11026)
!11050 = !DILocation(line: 370, column: 1, scope: !11026)
!11051 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !234, file: !234, line: 331, type: !11052, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11052 = !DISubroutineType(types: !11053)
!11053 = !{!2822, !11034}
!11054 = !DILocalVariable(name: "sym", arg: 1, scope: !11051, file: !234, line: 331, type: !11034)
!11055 = !DILocation(line: 331, column: 61, scope: !11051)
!11056 = !DILocation(line: 333, column: 17, scope: !11051)
!11057 = !DILocation(line: 333, column: 9, scope: !11051)
!11058 = !DILocation(line: 333, column: 21, scope: !11051)
!11059 = !DILocation(line: 333, column: 2, scope: !11051)
!11060 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11061, file: !11061, line: 155, type: !11062, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11061 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11062 = !DISubroutineType(types: !11063)
!11063 = !{null, !2862}
!11064 = !DILocalVariable(name: "thread", arg: 1, scope: !11060, file: !11061, line: 155, type: !2862)
!11065 = !DILocation(line: 155, column: 62, scope: !11060)
!11066 = !DILocation(line: 157, column: 2, scope: !11060)
!11067 = !DILocation(line: 157, column: 10, scope: !11060)
!11068 = !DILocation(line: 157, column: 15, scope: !11060)
!11069 = !DILocation(line: 157, column: 28, scope: !11060)
!11070 = !DILocation(line: 158, column: 1, scope: !11060)
!11071 = distinct !DISubprogram(name: "z_cstart", scope: !2784, file: !2784, line: 501, type: !253, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11072 = !DILocation(line: 504, column: 2, scope: !11071)
!11073 = !DILocation(line: 507, column: 2, scope: !11071)
!11074 = !DILocalVariable(name: "msp", scope: !11075, file: !11076, line: 42, type: !173)
!11075 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11076, file: !11076, line: 40, type: !253, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11076 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11077 = !DILocation(line: 42, column: 11, scope: !11075, inlinedAt: !11078)
!11078 = distinct !DILocation(line: 44, column: 2, scope: !11079, inlinedAt: !11081)
!11079 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11080, file: !11080, line: 42, type: !253, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11080 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11081 = distinct !DILocation(line: 510, column: 2, scope: !11071)
!11082 = !DILocation(line: 43, column: 14, scope: !11075, inlinedAt: !11078)
!11083 = !DILocation(line: 43, column: 3, scope: !11075, inlinedAt: !11078)
!11084 = !DILocation(line: 43, column: 60, scope: !11075, inlinedAt: !11078)
!11085 = !DILocation(line: 46, column: 12, scope: !11075, inlinedAt: !11078)
!11086 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11087, file: !6645, line: 1153, type: !173)
!11087 = distinct !DISubprogram(name: "__set_MSP", scope: !6645, file: !6645, line: 1153, type: !11088, scopeLine: 1154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11088 = !DISubroutineType(types: !11089)
!11089 = !{null, !173}
!11090 = !DILocation(line: 1153, column: 46, scope: !11087, inlinedAt: !11091)
!11091 = distinct !DILocation(line: 46, column: 2, scope: !11075, inlinedAt: !11078)
!11092 = !DILocation(line: 1155, column: 42, scope: !11087, inlinedAt: !11091)
!11093 = !DILocation(line: 1155, column: 3, scope: !11087, inlinedAt: !11091)
!11094 = !{i64 2743968}
!11095 = !DILocation(line: 102, column: 2, scope: !11096, inlinedAt: !11097)
!11096 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7432, file: !7432, line: 97, type: !253, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11097 = distinct !DILocation(line: 45, column: 2, scope: !11079, inlinedAt: !11081)
!11098 = !DILocation(line: 46, column: 2, scope: !11079, inlinedAt: !11081)
!11099 = !DILocation(line: 47, column: 2, scope: !11079, inlinedAt: !11081)
!11100 = !DILocation(line: 512, column: 2, scope: !11071)
!11101 = !DILocation(line: 512, column: 2, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11071, file: !2784, line: 512, column: 2)
!11103 = !DILocalVariable(name: "dummy_thread", scope: !11071, file: !2784, line: 518, type: !2863)
!11104 = !DILocation(line: 518, column: 18, scope: !11071)
!11105 = !DILocation(line: 520, column: 2, scope: !11071)
!11106 = !DILocation(line: 523, column: 2, scope: !11071)
!11107 = !DILocation(line: 526, column: 2, scope: !11071)
!11108 = !DILocation(line: 527, column: 2, scope: !11071)
!11109 = !DILocation(line: 543, column: 24, scope: !11071)
!11110 = !DILocation(line: 543, column: 2, scope: !11071)
!11111 = distinct !DISubprogram(name: "gcov_static_init", scope: !11112, file: !11112, line: 15, type: !253, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11112 = !DIFile(filename: "zephyr/include/zephyr/debug/gcov.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11113 = !DILocation(line: 15, column: 45, scope: !11111)
!11114 = !DILocalVariable(name: "level", arg: 1, scope: !2989, file: !2784, line: 230, type: !2783)
!11115 = !DILocation(line: 230, column: 50, scope: !2989)
!11116 = !DILocalVariable(name: "entry", scope: !2989, file: !2784, line: 244, type: !2993)
!11117 = !DILocation(line: 244, column: 27, scope: !2989)
!11118 = !DILocation(line: 246, column: 22, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !2989, file: !2784, line: 246, column: 2)
!11120 = !DILocation(line: 246, column: 15, scope: !11119)
!11121 = !DILocation(line: 246, column: 13, scope: !11119)
!11122 = !DILocation(line: 246, column: 7, scope: !11119)
!11123 = !DILocation(line: 246, column: 30, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11119, file: !2784, line: 246, column: 2)
!11125 = !DILocation(line: 246, column: 45, scope: !11124)
!11126 = !DILocation(line: 246, column: 50, scope: !11124)
!11127 = !DILocation(line: 246, column: 38, scope: !11124)
!11128 = !DILocation(line: 246, column: 36, scope: !11124)
!11129 = !DILocation(line: 246, column: 2, scope: !11119)
!11130 = !DILocalVariable(name: "dev", scope: !11131, file: !2784, line: 247, type: !2802)
!11131 = distinct !DILexicalBlock(scope: !11124, file: !2784, line: 246, column: 64)
!11132 = !DILocation(line: 247, column: 24, scope: !11131)
!11133 = !DILocation(line: 247, column: 30, scope: !11131)
!11134 = !DILocation(line: 247, column: 37, scope: !11131)
!11135 = !DILocalVariable(name: "rc", scope: !11131, file: !2784, line: 248, type: !103)
!11136 = !DILocation(line: 248, column: 7, scope: !11131)
!11137 = !DILocation(line: 248, column: 12, scope: !11131)
!11138 = !DILocation(line: 248, column: 19, scope: !11131)
!11139 = !DILocation(line: 248, column: 24, scope: !11131)
!11140 = !DILocation(line: 250, column: 7, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11131, file: !2784, line: 250, column: 7)
!11142 = !DILocation(line: 250, column: 11, scope: !11141)
!11143 = !DILocation(line: 250, column: 7, scope: !11131)
!11144 = !DILocation(line: 254, column: 8, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11146, file: !2784, line: 254, column: 8)
!11146 = distinct !DILexicalBlock(scope: !11141, file: !2784, line: 250, column: 20)
!11147 = !DILocation(line: 254, column: 11, scope: !11145)
!11148 = !DILocation(line: 254, column: 8, scope: !11146)
!11149 = !DILocation(line: 255, column: 9, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11151, file: !2784, line: 255, column: 9)
!11151 = distinct !DILexicalBlock(scope: !11145, file: !2784, line: 254, column: 17)
!11152 = !DILocation(line: 255, column: 12, scope: !11150)
!11153 = !DILocation(line: 255, column: 9, scope: !11151)
!11154 = !DILocation(line: 256, column: 12, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11150, file: !2784, line: 255, column: 17)
!11156 = !DILocation(line: 256, column: 11, scope: !11155)
!11157 = !DILocation(line: 256, column: 9, scope: !11155)
!11158 = !DILocation(line: 257, column: 5, scope: !11155)
!11159 = !DILocation(line: 258, column: 9, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11151, file: !2784, line: 258, column: 9)
!11161 = !DILocation(line: 258, column: 12, scope: !11160)
!11162 = !DILocation(line: 258, column: 9, scope: !11151)
!11163 = !DILocation(line: 259, column: 9, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11160, file: !2784, line: 258, column: 25)
!11165 = !DILocation(line: 260, column: 5, scope: !11164)
!11166 = !DILocation(line: 261, column: 28, scope: !11151)
!11167 = !DILocation(line: 261, column: 5, scope: !11151)
!11168 = !DILocation(line: 261, column: 10, scope: !11151)
!11169 = !DILocation(line: 261, column: 17, scope: !11151)
!11170 = !DILocation(line: 261, column: 26, scope: !11151)
!11171 = !DILocation(line: 262, column: 4, scope: !11151)
!11172 = !DILocation(line: 263, column: 4, scope: !11146)
!11173 = !DILocation(line: 263, column: 9, scope: !11146)
!11174 = !DILocation(line: 263, column: 16, scope: !11146)
!11175 = !DILocation(line: 263, column: 28, scope: !11146)
!11176 = !DILocation(line: 264, column: 3, scope: !11146)
!11177 = !DILocation(line: 265, column: 2, scope: !11131)
!11178 = !DILocation(line: 246, column: 60, scope: !11124)
!11179 = !DILocation(line: 246, column: 2, scope: !11124)
!11180 = distinct !{!11180, !11129, !11181}
!11181 = !DILocation(line: 265, column: 2, scope: !11119)
!11182 = !DILocation(line: 266, column: 1, scope: !2989)
!11183 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !2530, file: !2530, line: 850, type: !6681, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11184 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11183, file: !2530, line: 850, type: !3324)
!11185 = !DILocation(line: 850, column: 51, scope: !11183)
!11186 = !DILocalVariable(name: "priority", arg: 2, scope: !11183, file: !2530, line: 850, type: !173)
!11187 = !DILocation(line: 850, column: 66, scope: !11183)
!11188 = !DILocation(line: 852, column: 17, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11183, file: !2530, line: 852, column: 7)
!11190 = !DILocation(line: 852, column: 23, scope: !11189)
!11191 = !DILocation(line: 852, column: 7, scope: !11183)
!11192 = !DILocation(line: 854, column: 53, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11189, file: !2530, line: 853, column: 3)
!11194 = !DILocation(line: 854, column: 44, scope: !11193)
!11195 = !DILocation(line: 854, column: 83, scope: !11193)
!11196 = !DILocation(line: 854, column: 80, scope: !11193)
!11197 = !DILocation(line: 854, column: 71, scope: !11193)
!11198 = !DILocation(line: 854, column: 69, scope: !11193)
!11199 = !DILocation(line: 855, column: 11, scope: !11193)
!11200 = !DILocation(line: 855, column: 20, scope: !11193)
!11201 = !DILocation(line: 855, column: 48, scope: !11193)
!11202 = !DILocation(line: 855, column: 71, scope: !11193)
!11203 = !DILocation(line: 855, column: 68, scope: !11193)
!11204 = !DILocation(line: 854, column: 102, scope: !11193)
!11205 = !DILocation(line: 854, column: 14, scope: !11193)
!11206 = !DILocation(line: 854, column: 5, scope: !11193)
!11207 = !DILocation(line: 854, column: 30, scope: !11193)
!11208 = !DILocation(line: 856, column: 3, scope: !11193)
!11209 = !DILocation(line: 859, column: 53, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11189, file: !2530, line: 858, column: 3)
!11211 = !DILocation(line: 859, column: 44, scope: !11210)
!11212 = !DILocation(line: 859, column: 83, scope: !11210)
!11213 = !DILocation(line: 859, column: 80, scope: !11210)
!11214 = !DILocation(line: 859, column: 71, scope: !11210)
!11215 = !DILocation(line: 859, column: 69, scope: !11210)
!11216 = !DILocation(line: 860, column: 11, scope: !11210)
!11217 = !DILocation(line: 860, column: 20, scope: !11210)
!11218 = !DILocation(line: 860, column: 48, scope: !11210)
!11219 = !DILocation(line: 860, column: 71, scope: !11210)
!11220 = !DILocation(line: 860, column: 68, scope: !11210)
!11221 = !DILocation(line: 859, column: 102, scope: !11210)
!11222 = !DILocation(line: 859, column: 14, scope: !11210)
!11223 = !DILocation(line: 859, column: 5, scope: !11210)
!11224 = !DILocation(line: 859, column: 30, scope: !11210)
!11225 = !DILocation(line: 862, column: 1, scope: !11183)
!11226 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11227, file: !11227, line: 215, type: !11062, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11227 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11228 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11226, file: !11227, line: 215, type: !2862)
!11229 = !DILocation(line: 215, column: 57, scope: !11226)
!11230 = !DILocation(line: 217, column: 2, scope: !11226)
!11231 = !DILocation(line: 217, column: 16, scope: !11226)
!11232 = !DILocation(line: 217, column: 21, scope: !11226)
!11233 = !DILocation(line: 217, column: 34, scope: !11226)
!11234 = !DILocation(line: 221, column: 2, scope: !11226)
!11235 = !DILocation(line: 221, column: 16, scope: !11226)
!11236 = !DILocation(line: 221, column: 21, scope: !11226)
!11237 = !DILocation(line: 221, column: 34, scope: !11226)
!11238 = !DILocation(line: 232, column: 2, scope: !11226)
!11239 = !DILocation(line: 232, column: 16, scope: !11226)
!11240 = !DILocation(line: 232, column: 30, scope: !11226)
!11241 = !DILocation(line: 239, column: 26, scope: !11226)
!11242 = !DILocation(line: 239, column: 24, scope: !11226)
!11243 = !DILocation(line: 240, column: 1, scope: !11226)
!11244 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2784, file: !2784, line: 399, type: !11245, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11245 = !DISubroutineType(types: !11246)
!11246 = !{!2822}
!11247 = !DILocalVariable(name: "stack_ptr", scope: !11244, file: !2784, line: 401, type: !2822)
!11248 = !DILocation(line: 401, column: 8, scope: !11244)
!11249 = !DILocation(line: 404, column: 2, scope: !11244)
!11250 = !DILocation(line: 416, column: 24, scope: !11244)
!11251 = !DILocation(line: 418, column: 14, scope: !11244)
!11252 = !DILocation(line: 418, column: 12, scope: !11244)
!11253 = !DILocation(line: 423, column: 2, scope: !11244)
!11254 = !DILocation(line: 424, column: 2, scope: !11244)
!11255 = !DILocation(line: 426, column: 2, scope: !11244)
!11256 = !DILocation(line: 428, column: 9, scope: !11244)
!11257 = !DILocation(line: 428, column: 2, scope: !11244)
!11258 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2784, file: !2784, line: 432, type: !11259, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11259 = !DISubroutineType(types: !11260)
!11260 = !{null, !2822}
!11261 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11258, file: !2784, line: 432, type: !2822)
!11262 = !DILocation(line: 432, column: 55, scope: !11258)
!11263 = !DILocation(line: 435, column: 45, scope: !11258)
!11264 = !DILocation(line: 435, column: 2, scope: !11258)
!11265 = !DILocation(line: 445, column: 2, scope: !11258)
!11266 = distinct !DISubprogram(name: "bg_thread_main", scope: !2784, file: !2784, line: 277, type: !242, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2780, retainedNodes: !223)
!11267 = !DILocalVariable(name: "unused1", arg: 1, scope: !11266, file: !2784, line: 277, type: !102)
!11268 = !DILocation(line: 277, column: 34, scope: !11266)
!11269 = !DILocalVariable(name: "unused2", arg: 2, scope: !11266, file: !2784, line: 277, type: !102)
!11270 = !DILocation(line: 277, column: 49, scope: !11266)
!11271 = !DILocalVariable(name: "unused3", arg: 3, scope: !11266, file: !2784, line: 277, type: !102)
!11272 = !DILocation(line: 277, column: 64, scope: !11266)
!11273 = !DILocation(line: 279, column: 2, scope: !11266)
!11274 = !DILocation(line: 280, column: 2, scope: !11266)
!11275 = !DILocation(line: 281, column: 2, scope: !11266)
!11276 = !DILocation(line: 291, column: 20, scope: !11266)
!11277 = !DILocation(line: 293, column: 2, scope: !11266)
!11278 = !DILocation(line: 297, column: 2, scope: !11266)
!11279 = !DILocation(line: 305, column: 2, scope: !11266)
!11280 = !DILocation(line: 307, column: 2, scope: !11266)
!11281 = !DILocation(line: 330, column: 8, scope: !11266)
!11282 = !DILocation(line: 333, column: 34, scope: !11266)
!11283 = !DILocation(line: 339, column: 1, scope: !11266)
!11284 = distinct !DISubprogram(name: "k_thread_foreach", scope: !3008, file: !3008, line: 45, type: !11285, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11285 = !DISubroutineType(types: !11286)
!11286 = !{null, !11287, !102}
!11287 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !109, line: 103, baseType: !11288)
!11288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11289, size: 32)
!11289 = !DISubroutineType(types: !11290)
!11290 = !{null, !11291, !102}
!11291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11292, size: 32)
!11292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3013)
!11293 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11284, file: !3008, line: 45, type: !11287)
!11294 = !DILocation(line: 45, column: 42, scope: !11284)
!11295 = !DILocalVariable(name: "user_data", arg: 2, scope: !11284, file: !3008, line: 45, type: !102)
!11296 = !DILocation(line: 45, column: 57, scope: !11284)
!11297 = !DILocation(line: 71, column: 1, scope: !11284)
!11298 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !3008, file: !3008, line: 73, type: !11285, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11299 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11298, file: !3008, line: 73, type: !11287)
!11300 = !DILocation(line: 73, column: 51, scope: !11298)
!11301 = !DILocalVariable(name: "user_data", arg: 2, scope: !11298, file: !3008, line: 73, type: !102)
!11302 = !DILocation(line: 73, column: 66, scope: !11298)
!11303 = !DILocation(line: 95, column: 1, scope: !11298)
!11304 = distinct !DISubprogram(name: "k_is_in_isr", scope: !3008, file: !3008, line: 97, type: !3780, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11305 = !DILocalVariable(name: "result", scope: !11306, file: !6645, line: 1029, type: !173)
!11306 = distinct !DISubprogram(name: "__get_IPSR", scope: !6645, file: !6645, line: 1027, type: !7427, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11307 = !DILocation(line: 1029, column: 12, scope: !11306, inlinedAt: !11308)
!11308 = distinct !DILocation(line: 48, column: 10, scope: !11309, inlinedAt: !11310)
!11309 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7432, file: !7432, line: 46, type: !3780, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11310 = distinct !DILocation(line: 99, column: 9, scope: !11304)
!11311 = !DILocation(line: 1031, column: 3, scope: !11306, inlinedAt: !11308)
!11312 = !{i64 2384683}
!11313 = !DILocation(line: 1032, column: 10, scope: !11306, inlinedAt: !11308)
!11314 = !DILocation(line: 48, column: 9, scope: !11309, inlinedAt: !11310)
!11315 = !DILocation(line: 99, column: 2, scope: !11304)
!11316 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !3008, file: !3008, line: 106, type: !253, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11317 = !DILocation(line: 108, column: 2, scope: !11316)
!11318 = !DILocation(line: 108, column: 12, scope: !11316)
!11319 = !DILocation(line: 108, column: 17, scope: !11316)
!11320 = !DILocation(line: 108, column: 30, scope: !11316)
!11321 = !DILocation(line: 109, column: 1, scope: !11316)
!11322 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !3008, file: !3008, line: 116, type: !253, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11323 = !DILocation(line: 118, column: 2, scope: !11322)
!11324 = !DILocation(line: 118, column: 12, scope: !11322)
!11325 = !DILocation(line: 118, column: 17, scope: !11322)
!11326 = !DILocation(line: 118, column: 30, scope: !11322)
!11327 = !DILocation(line: 119, column: 1, scope: !11322)
!11328 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !3008, file: !3008, line: 126, type: !3780, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11329 = !DILocation(line: 128, column: 10, scope: !11328)
!11330 = !DILocation(line: 128, column: 20, scope: !11328)
!11331 = !DILocation(line: 128, column: 25, scope: !11328)
!11332 = !DILocation(line: 128, column: 38, scope: !11328)
!11333 = !DILocation(line: 128, column: 53, scope: !11328)
!11334 = !DILocation(line: 128, column: 2, scope: !11328)
!11335 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !3008, file: !3008, line: 187, type: !11336, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11336 = !DISubroutineType(types: !11337)
!11337 = !{!103, !3012, !256}
!11338 = !DILocalVariable(name: "thread", arg: 1, scope: !11335, file: !3008, line: 187, type: !3012)
!11339 = !DILocation(line: 187, column: 47, scope: !11335)
!11340 = !DILocalVariable(name: "value", arg: 2, scope: !11335, file: !3008, line: 187, type: !256)
!11341 = !DILocation(line: 187, column: 67, scope: !11335)
!11342 = !DILocation(line: 201, column: 2, scope: !11335)
!11343 = !DILocation(line: 202, column: 2, scope: !11335)
!11344 = !DILocation(line: 204, column: 2, scope: !11335)
!11345 = !DILocation(line: 204, column: 2, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11335, file: !3008, line: 204, column: 2)
!11347 = !DILocation(line: 206, column: 2, scope: !11335)
!11348 = distinct !DISubprogram(name: "k_thread_name_get", scope: !3008, file: !3008, line: 238, type: !11349, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11349 = !DISubroutineType(types: !11350)
!11350 = !{!256, !3012}
!11351 = !DILocalVariable(name: "thread", arg: 1, scope: !11348, file: !3008, line: 238, type: !3012)
!11352 = !DILocation(line: 238, column: 48, scope: !11348)
!11353 = !DILocation(line: 243, column: 2, scope: !11348)
!11354 = !DILocation(line: 244, column: 2, scope: !11348)
!11355 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !3008, file: !3008, line: 248, type: !11356, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11356 = !DISubroutineType(types: !11357)
!11357 = !{!103, !3011, !2822, !217}
!11358 = !DILocalVariable(name: "thread", arg: 1, scope: !11355, file: !3008, line: 248, type: !3011)
!11359 = !DILocation(line: 248, column: 39, scope: !11355)
!11360 = !DILocalVariable(name: "buf", arg: 2, scope: !11355, file: !3008, line: 248, type: !2822)
!11361 = !DILocation(line: 248, column: 53, scope: !11355)
!11362 = !DILocalVariable(name: "size", arg: 3, scope: !11355, file: !3008, line: 248, type: !217)
!11363 = !DILocation(line: 248, column: 65, scope: !11355)
!11364 = !DILocation(line: 254, column: 2, scope: !11355)
!11365 = !DILocation(line: 255, column: 2, scope: !11355)
!11366 = !DILocation(line: 256, column: 2, scope: !11355)
!11367 = !DILocation(line: 257, column: 2, scope: !11355)
!11368 = !DILocalVariable(name: "thread_id", arg: 1, scope: !3007, file: !3008, line: 271, type: !3011)
!11369 = !DILocation(line: 271, column: 40, scope: !3007)
!11370 = !DILocalVariable(name: "buf", arg: 2, scope: !3007, file: !3008, line: 271, type: !2822)
!11371 = !DILocation(line: 271, column: 57, scope: !3007)
!11372 = !DILocalVariable(name: "buf_size", arg: 3, scope: !3007, file: !3008, line: 271, type: !217)
!11373 = !DILocation(line: 271, column: 69, scope: !3007)
!11374 = !DILocalVariable(name: "off", scope: !3007, file: !3008, line: 273, type: !217)
!11375 = !DILocation(line: 273, column: 14, scope: !3007)
!11376 = !DILocalVariable(name: "bit", scope: !3007, file: !3008, line: 274, type: !156)
!11377 = !DILocation(line: 274, column: 14, scope: !3007)
!11378 = !DILocalVariable(name: "thread_state", scope: !3007, file: !3008, line: 275, type: !156)
!11379 = !DILocation(line: 275, column: 14, scope: !3007)
!11380 = !DILocation(line: 275, column: 29, scope: !3007)
!11381 = !DILocation(line: 275, column: 40, scope: !3007)
!11382 = !DILocation(line: 275, column: 45, scope: !3007)
!11383 = !DILocation(line: 281, column: 7, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !3007, file: !3008, line: 281, column: 6)
!11385 = !DILocation(line: 281, column: 11, scope: !11384)
!11386 = !DILocation(line: 281, column: 20, scope: !11384)
!11387 = !DILocation(line: 281, column: 24, scope: !11384)
!11388 = !DILocation(line: 281, column: 33, scope: !11384)
!11389 = !DILocation(line: 281, column: 6, scope: !3007)
!11390 = !DILocation(line: 282, column: 3, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11384, file: !3008, line: 281, column: 40)
!11392 = !DILocation(line: 285, column: 10, scope: !3007)
!11393 = !DILocalVariable(name: "index", scope: !11394, file: !3008, line: 293, type: !156)
!11394 = distinct !DILexicalBlock(scope: !3007, file: !3008, line: 293, column: 2)
!11395 = !DILocation(line: 293, column: 15, scope: !11394)
!11396 = !DILocation(line: 293, column: 7, scope: !11394)
!11397 = !DILocation(line: 293, column: 26, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11394, file: !3008, line: 293, column: 2)
!11399 = !DILocation(line: 293, column: 39, scope: !11398)
!11400 = !DILocation(line: 293, column: 2, scope: !11394)
!11401 = !DILocation(line: 294, column: 9, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11398, file: !3008, line: 293, column: 54)
!11403 = !DILocation(line: 294, column: 7, scope: !11402)
!11404 = !DILocation(line: 295, column: 8, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11402, file: !3008, line: 295, column: 7)
!11406 = !DILocation(line: 295, column: 23, scope: !11405)
!11407 = !DILocation(line: 295, column: 21, scope: !11405)
!11408 = !DILocation(line: 295, column: 28, scope: !11405)
!11409 = !DILocation(line: 295, column: 7, scope: !11402)
!11410 = !DILocation(line: 296, column: 4, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11405, file: !3008, line: 295, column: 34)
!11412 = !DILocation(line: 299, column: 21, scope: !11402)
!11413 = !DILocation(line: 299, column: 27, scope: !11402)
!11414 = !DILocation(line: 299, column: 25, scope: !11402)
!11415 = !DILocation(line: 299, column: 32, scope: !11402)
!11416 = !DILocation(line: 299, column: 43, scope: !11402)
!11417 = !DILocation(line: 299, column: 41, scope: !11402)
!11418 = !DILocation(line: 300, column: 18, scope: !11402)
!11419 = !DILocation(line: 300, column: 7, scope: !11402)
!11420 = !DILocation(line: 300, column: 36, scope: !11402)
!11421 = !DILocation(line: 300, column: 26, scope: !11402)
!11422 = !DILocation(line: 299, column: 10, scope: !11402)
!11423 = !DILocation(line: 299, column: 7, scope: !11402)
!11424 = !DILocation(line: 302, column: 20, scope: !11402)
!11425 = !DILocation(line: 302, column: 19, scope: !11402)
!11426 = !DILocation(line: 302, column: 16, scope: !11402)
!11427 = !DILocation(line: 304, column: 7, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11402, file: !3008, line: 304, column: 7)
!11429 = !DILocation(line: 304, column: 20, scope: !11428)
!11430 = !DILocation(line: 304, column: 7, scope: !11402)
!11431 = !DILocation(line: 305, column: 22, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11428, file: !3008, line: 304, column: 26)
!11433 = !DILocation(line: 305, column: 28, scope: !11432)
!11434 = !DILocation(line: 305, column: 26, scope: !11432)
!11435 = !DILocation(line: 305, column: 33, scope: !11432)
!11436 = !DILocation(line: 305, column: 44, scope: !11432)
!11437 = !DILocation(line: 305, column: 42, scope: !11432)
!11438 = !DILocation(line: 305, column: 11, scope: !11432)
!11439 = !DILocation(line: 305, column: 8, scope: !11432)
!11440 = !DILocation(line: 306, column: 3, scope: !11432)
!11441 = !DILocation(line: 307, column: 2, scope: !11402)
!11442 = !DILocation(line: 293, column: 50, scope: !11398)
!11443 = !DILocation(line: 293, column: 2, scope: !11398)
!11444 = distinct !{!11444, !11400, !11445}
!11445 = !DILocation(line: 307, column: 2, scope: !11394)
!11446 = !DILocation(line: 309, column: 2, scope: !3007)
!11447 = !DILocation(line: 309, column: 6, scope: !3007)
!11448 = !DILocation(line: 309, column: 11, scope: !3007)
!11449 = !DILocation(line: 311, column: 23, scope: !3007)
!11450 = !DILocation(line: 311, column: 2, scope: !3007)
!11451 = !DILocation(line: 312, column: 1, scope: !3007)
!11452 = distinct !DISubprogram(name: "copy_bytes", scope: !3008, file: !3008, line: 261, type: !11453, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11453 = !DISubroutineType(types: !11454)
!11454 = !{!217, !2822, !217, !256, !217}
!11455 = !DILocalVariable(name: "dest", arg: 1, scope: !11452, file: !3008, line: 261, type: !2822)
!11456 = !DILocation(line: 261, column: 32, scope: !11452)
!11457 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11452, file: !3008, line: 261, type: !217)
!11458 = !DILocation(line: 261, column: 45, scope: !11452)
!11459 = !DILocalVariable(name: "src", arg: 3, scope: !11452, file: !3008, line: 261, type: !256)
!11460 = !DILocation(line: 261, column: 68, scope: !11452)
!11461 = !DILocalVariable(name: "src_size", arg: 4, scope: !11452, file: !3008, line: 261, type: !217)
!11462 = !DILocation(line: 261, column: 80, scope: !11452)
!11463 = !DILocalVariable(name: "bytes_to_copy", scope: !11452, file: !3008, line: 263, type: !217)
!11464 = !DILocation(line: 263, column: 10, scope: !11452)
!11465 = !DILocation(line: 265, column: 18, scope: !11452)
!11466 = !DILocation(line: 265, column: 16, scope: !11452)
!11467 = !DILocation(line: 266, column: 9, scope: !11452)
!11468 = !DILocation(line: 266, column: 15, scope: !11452)
!11469 = !DILocation(line: 266, column: 20, scope: !11452)
!11470 = !DILocation(line: 266, column: 2, scope: !11452)
!11471 = !DILocation(line: 268, column: 9, scope: !11452)
!11472 = !DILocation(line: 268, column: 2, scope: !11452)
!11473 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !3008, file: !3008, line: 383, type: !11474, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11474 = !DISubroutineType(types: !11475)
!11475 = !{null, !3012}
!11476 = !DILocalVariable(name: "thread", arg: 1, scope: !11473, file: !3008, line: 383, type: !3012)
!11477 = !DILocation(line: 383, column: 45, scope: !11473)
!11478 = !DILocation(line: 385, column: 2, scope: !11473)
!11479 = !DILocation(line: 385, column: 2, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11473, file: !3008, line: 385, column: 2)
!11481 = !DILocation(line: 387, column: 16, scope: !11473)
!11482 = !DILocation(line: 387, column: 2, scope: !11473)
!11483 = !DILocation(line: 388, column: 1, scope: !11473)
!11484 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !3008, file: !3008, line: 528, type: !11485, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11485 = !DISubroutineType(types: !11486)
!11486 = !{!2822, !3012, !11487, !217, !240, !102, !102, !102, !103, !173, !256}
!11487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11488, size: 32)
!11488 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !11489)
!11489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !11490)
!11490 = !{!11491}
!11491 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11489, file: !234, line: 48, baseType: !237, size: 8)
!11492 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11484, file: !3008, line: 528, type: !3012)
!11493 = !DILocation(line: 528, column: 43, scope: !11484)
!11494 = !DILocalVariable(name: "stack", arg: 2, scope: !11484, file: !3008, line: 529, type: !11487)
!11495 = !DILocation(line: 529, column: 23, scope: !11484)
!11496 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11484, file: !3008, line: 529, type: !217)
!11497 = !DILocation(line: 529, column: 37, scope: !11484)
!11498 = !DILocalVariable(name: "entry", arg: 4, scope: !11484, file: !3008, line: 530, type: !240)
!11499 = !DILocation(line: 530, column: 22, scope: !11484)
!11500 = !DILocalVariable(name: "p1", arg: 5, scope: !11484, file: !3008, line: 531, type: !102)
!11501 = !DILocation(line: 531, column: 11, scope: !11484)
!11502 = !DILocalVariable(name: "p2", arg: 6, scope: !11484, file: !3008, line: 531, type: !102)
!11503 = !DILocation(line: 531, column: 21, scope: !11484)
!11504 = !DILocalVariable(name: "p3", arg: 7, scope: !11484, file: !3008, line: 531, type: !102)
!11505 = !DILocation(line: 531, column: 31, scope: !11484)
!11506 = !DILocalVariable(name: "prio", arg: 8, scope: !11484, file: !3008, line: 532, type: !103)
!11507 = !DILocation(line: 532, column: 9, scope: !11484)
!11508 = !DILocalVariable(name: "options", arg: 9, scope: !11484, file: !3008, line: 532, type: !173)
!11509 = !DILocation(line: 532, column: 24, scope: !11484)
!11510 = !DILocalVariable(name: "name", arg: 10, scope: !11484, file: !3008, line: 532, type: !256)
!11511 = !DILocation(line: 532, column: 45, scope: !11484)
!11512 = !DILocalVariable(name: "stack_ptr", scope: !11484, file: !3008, line: 534, type: !2822)
!11513 = !DILocation(line: 534, column: 8, scope: !11484)
!11514 = !DILocation(line: 536, column: 2, scope: !11484)
!11515 = !DILocation(line: 536, column: 2, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11484, file: !3008, line: 536, column: 2)
!11517 = !DILocation(line: 550, column: 16, scope: !11484)
!11518 = !DILocation(line: 550, column: 28, scope: !11484)
!11519 = !DILocation(line: 550, column: 2, scope: !11484)
!11520 = !DILocation(line: 553, column: 22, scope: !11484)
!11521 = !DILocation(line: 553, column: 34, scope: !11484)
!11522 = !DILocation(line: 553, column: 40, scope: !11484)
!11523 = !DILocation(line: 553, column: 64, scope: !11484)
!11524 = !DILocation(line: 553, column: 2, scope: !11484)
!11525 = !DILocation(line: 554, column: 33, scope: !11484)
!11526 = !DILocation(line: 554, column: 45, scope: !11484)
!11527 = !DILocation(line: 554, column: 52, scope: !11484)
!11528 = !DILocation(line: 554, column: 14, scope: !11484)
!11529 = !DILocation(line: 554, column: 12, scope: !11484)
!11530 = !DILocation(line: 564, column: 18, scope: !11484)
!11531 = !DILocation(line: 564, column: 30, scope: !11484)
!11532 = !DILocation(line: 564, column: 37, scope: !11484)
!11533 = !DILocation(line: 564, column: 48, scope: !11484)
!11534 = !DILocation(line: 564, column: 55, scope: !11484)
!11535 = !DILocation(line: 564, column: 59, scope: !11484)
!11536 = !DILocation(line: 564, column: 63, scope: !11484)
!11537 = !DILocation(line: 564, column: 2, scope: !11484)
!11538 = !DILocation(line: 567, column: 2, scope: !11484)
!11539 = !DILocation(line: 567, column: 14, scope: !11484)
!11540 = !DILocation(line: 567, column: 24, scope: !11484)
!11541 = !DILocation(line: 612, column: 7, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11484, file: !3008, line: 612, column: 6)
!11543 = !DILocation(line: 612, column: 6, scope: !11484)
!11544 = !DILocation(line: 613, column: 3, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11542, file: !3008, line: 612, column: 17)
!11546 = !DILocation(line: 613, column: 15, scope: !11545)
!11547 = !DILocation(line: 613, column: 29, scope: !11545)
!11548 = !DILocation(line: 614, column: 10, scope: !11545)
!11549 = !DILocation(line: 614, column: 3, scope: !11545)
!11550 = !DILocation(line: 627, column: 30, scope: !11484)
!11551 = !DILocation(line: 627, column: 40, scope: !11484)
!11552 = !DILocation(line: 627, column: 2, scope: !11484)
!11553 = !DILocation(line: 627, column: 14, scope: !11484)
!11554 = !DILocation(line: 627, column: 28, scope: !11484)
!11555 = !DILocation(line: 635, column: 2, scope: !11484)
!11556 = !DILocation(line: 635, column: 2, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11484, file: !3008, line: 635, column: 2)
!11558 = !DILocation(line: 637, column: 9, scope: !11484)
!11559 = !DILocation(line: 637, column: 2, scope: !11484)
!11560 = !DILocation(line: 638, column: 1, scope: !11484)
!11561 = distinct !DISubprogram(name: "z_waitq_init", scope: !11562, file: !11562, line: 47, type: !11563, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11562 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11563 = !DISubroutineType(types: !11564)
!11564 = !{null, !3043}
!11565 = !DILocalVariable(name: "w", arg: 1, scope: !11561, file: !11562, line: 47, type: !3043)
!11566 = !DILocation(line: 47, column: 44, scope: !11561)
!11567 = !DILocation(line: 49, column: 18, scope: !11561)
!11568 = !DILocation(line: 49, column: 21, scope: !11561)
!11569 = !DILocation(line: 49, column: 2, scope: !11561)
!11570 = !DILocation(line: 50, column: 1, scope: !11561)
!11571 = distinct !DISubprogram(name: "z_init_thread_base", scope: !3008, file: !3008, line: 791, type: !11572, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11572 = !DISubroutineType(types: !11573)
!11573 = !{null, !11574, !103, !173, !32}
!11574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 32)
!11575 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11571, file: !3008, line: 791, type: !11574)
!11576 = !DILocation(line: 791, column: 46, scope: !11571)
!11577 = !DILocalVariable(name: "priority", arg: 2, scope: !11571, file: !3008, line: 791, type: !103)
!11578 = !DILocation(line: 791, column: 63, scope: !11571)
!11579 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11571, file: !3008, line: 792, type: !173)
!11580 = !DILocation(line: 792, column: 19, scope: !11571)
!11581 = !DILocalVariable(name: "options", arg: 4, scope: !11571, file: !3008, line: 792, type: !32)
!11582 = !DILocation(line: 792, column: 47, scope: !11571)
!11583 = !DILocation(line: 795, column: 2, scope: !11571)
!11584 = !DILocation(line: 795, column: 15, scope: !11571)
!11585 = !DILocation(line: 795, column: 25, scope: !11571)
!11586 = !DILocation(line: 796, column: 39, scope: !11571)
!11587 = !DILocation(line: 796, column: 30, scope: !11571)
!11588 = !DILocation(line: 796, column: 2, scope: !11571)
!11589 = !DILocation(line: 796, column: 15, scope: !11571)
!11590 = !DILocation(line: 796, column: 28, scope: !11571)
!11591 = !DILocation(line: 797, column: 39, scope: !11571)
!11592 = !DILocation(line: 797, column: 30, scope: !11571)
!11593 = !DILocation(line: 797, column: 2, scope: !11571)
!11594 = !DILocation(line: 797, column: 15, scope: !11571)
!11595 = !DILocation(line: 797, column: 28, scope: !11571)
!11596 = !DILocation(line: 799, column: 22, scope: !11571)
!11597 = !DILocation(line: 799, column: 2, scope: !11571)
!11598 = !DILocation(line: 799, column: 15, scope: !11571)
!11599 = !DILocation(line: 799, column: 20, scope: !11571)
!11600 = !DILocation(line: 801, column: 2, scope: !11571)
!11601 = !DILocation(line: 801, column: 15, scope: !11571)
!11602 = !DILocation(line: 801, column: 28, scope: !11571)
!11603 = !DILocation(line: 814, column: 24, scope: !11571)
!11604 = !DILocation(line: 814, column: 2, scope: !11571)
!11605 = !DILocation(line: 815, column: 1, scope: !11571)
!11606 = distinct !DISubprogram(name: "setup_thread_stack", scope: !3008, file: !3008, line: 449, type: !11607, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11607 = !DISubroutineType(types: !11608)
!11608 = !{!2822, !3012, !11487, !217}
!11609 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11606, file: !3008, line: 449, type: !3012)
!11610 = !DILocation(line: 449, column: 50, scope: !11606)
!11611 = !DILocalVariable(name: "stack", arg: 2, scope: !11606, file: !3008, line: 450, type: !11487)
!11612 = !DILocation(line: 450, column: 23, scope: !11606)
!11613 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11606, file: !3008, line: 450, type: !217)
!11614 = !DILocation(line: 450, column: 37, scope: !11606)
!11615 = !DILocalVariable(name: "stack_obj_size", scope: !11606, file: !3008, line: 452, type: !217)
!11616 = !DILocation(line: 452, column: 9, scope: !11606)
!11617 = !DILocalVariable(name: "stack_buf_size", scope: !11606, file: !3008, line: 452, type: !217)
!11618 = !DILocation(line: 452, column: 25, scope: !11606)
!11619 = !DILocalVariable(name: "stack_ptr", scope: !11606, file: !3008, line: 453, type: !2822)
!11620 = !DILocation(line: 453, column: 8, scope: !11606)
!11621 = !DILocalVariable(name: "stack_buf_start", scope: !11606, file: !3008, line: 453, type: !2822)
!11622 = !DILocation(line: 453, column: 20, scope: !11606)
!11623 = !DILocalVariable(name: "delta", scope: !11606, file: !3008, line: 454, type: !217)
!11624 = !DILocation(line: 454, column: 9, scope: !11606)
!11625 = !DILocation(line: 465, column: 20, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11606, file: !3008, line: 463, column: 2)
!11627 = !DILocation(line: 465, column: 18, scope: !11626)
!11628 = !DILocation(line: 466, column: 43, scope: !11626)
!11629 = !DILocation(line: 466, column: 21, scope: !11626)
!11630 = !DILocation(line: 466, column: 19, scope: !11626)
!11631 = !DILocation(line: 467, column: 20, scope: !11626)
!11632 = !DILocation(line: 467, column: 35, scope: !11626)
!11633 = !DILocation(line: 467, column: 18, scope: !11626)
!11634 = !DILocation(line: 473, column: 22, scope: !11606)
!11635 = !DILocation(line: 473, column: 14, scope: !11606)
!11636 = !DILocation(line: 473, column: 30, scope: !11606)
!11637 = !DILocation(line: 473, column: 28, scope: !11606)
!11638 = !DILocation(line: 473, column: 12, scope: !11606)
!11639 = !DILocation(line: 475, column: 2, scope: !11606)
!11640 = !DILocation(line: 475, column: 2, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11642, file: !3008, line: 475, column: 2)
!11642 = distinct !DILexicalBlock(scope: !11643, file: !3008, line: 475, column: 2)
!11643 = distinct !DILexicalBlock(scope: !11606, file: !3008, line: 475, column: 2)
!11644 = !DILocation(line: 505, column: 10, scope: !11606)
!11645 = !DILocation(line: 505, column: 8, scope: !11606)
!11646 = !DILocation(line: 518, column: 15, scope: !11606)
!11647 = !DILocation(line: 518, column: 12, scope: !11606)
!11648 = !DILocation(line: 520, column: 9, scope: !11606)
!11649 = !DILocation(line: 520, column: 2, scope: !11606)
!11650 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !234, file: !234, line: 331, type: !11651, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11651 = !DISubroutineType(types: !11652)
!11652 = !{!2822, !11487}
!11653 = !DILocalVariable(name: "sym", arg: 1, scope: !11650, file: !234, line: 331, type: !11487)
!11654 = !DILocation(line: 331, column: 61, scope: !11650)
!11655 = !DILocation(line: 333, column: 17, scope: !11650)
!11656 = !DILocation(line: 333, column: 9, scope: !11650)
!11657 = !DILocation(line: 333, column: 21, scope: !11650)
!11658 = !DILocation(line: 333, column: 2, scope: !11650)
!11659 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11660, file: !11660, line: 40, type: !11661, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11660 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11661 = !DISubroutineType(types: !11662)
!11662 = !{null, !11574}
!11663 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11659, file: !11660, line: 40, type: !11574)
!11664 = !DILocation(line: 40, column: 63, scope: !11659)
!11665 = !DILocation(line: 42, column: 18, scope: !11659)
!11666 = !DILocation(line: 42, column: 31, scope: !11659)
!11667 = !DILocation(line: 42, column: 2, scope: !11659)
!11668 = !DILocation(line: 43, column: 1, scope: !11659)
!11669 = distinct !DISubprogram(name: "z_init_timeout", scope: !11660, file: !11660, line: 25, type: !3069, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11670 = !DILocalVariable(name: "to", arg: 1, scope: !11669, file: !11660, line: 25, type: !3071)
!11671 = !DILocation(line: 25, column: 52, scope: !11669)
!11672 = !DILocation(line: 27, column: 18, scope: !11669)
!11673 = !DILocation(line: 27, column: 22, scope: !11669)
!11674 = !DILocation(line: 27, column: 2, scope: !11669)
!11675 = !DILocation(line: 28, column: 1, scope: !11669)
!11676 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !11677, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11677 = !DISubroutineType(types: !11678)
!11678 = !{null, !3109}
!11679 = !DILocalVariable(name: "node", arg: 1, scope: !11676, file: !124, line: 211, type: !3109)
!11680 = !DILocation(line: 211, column: 48, scope: !11676)
!11681 = !DILocation(line: 213, column: 2, scope: !11676)
!11682 = !DILocation(line: 213, column: 8, scope: !11676)
!11683 = !DILocation(line: 213, column: 13, scope: !11676)
!11684 = !DILocation(line: 214, column: 2, scope: !11676)
!11685 = !DILocation(line: 214, column: 8, scope: !11676)
!11686 = !DILocation(line: 214, column: 13, scope: !11676)
!11687 = !DILocation(line: 215, column: 1, scope: !11676)
!11688 = distinct !DISubprogram(name: "sys_dlist_init", scope: !124, file: !124, line: 197, type: !11689, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11689 = !DISubroutineType(types: !11690)
!11690 = !{null, !11691}
!11691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 32)
!11692 = !DILocalVariable(name: "list", arg: 1, scope: !11688, file: !124, line: 197, type: !11691)
!11693 = !DILocation(line: 197, column: 48, scope: !11688)
!11694 = !DILocation(line: 199, column: 30, scope: !11688)
!11695 = !DILocation(line: 199, column: 2, scope: !11688)
!11696 = !DILocation(line: 199, column: 8, scope: !11688)
!11697 = !DILocation(line: 199, column: 13, scope: !11688)
!11698 = !DILocation(line: 200, column: 30, scope: !11688)
!11699 = !DILocation(line: 200, column: 2, scope: !11688)
!11700 = !DILocation(line: 200, column: 8, scope: !11688)
!11701 = !DILocation(line: 200, column: 13, scope: !11688)
!11702 = !DILocation(line: 201, column: 1, scope: !11688)
!11703 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !3008, file: !3008, line: 641, type: !11704, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11704 = !DISubroutineType(types: !11705)
!11705 = !{!3011, !3012, !11487, !217, !240, !102, !102, !102, !103, !173, !11706}
!11706 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2527, line: 67, baseType: !11707)
!11707 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2527, line: 65, size: 64, elements: !11708)
!11708 = !{!11709}
!11709 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11707, file: !2527, line: 66, baseType: !2526, size: 64)
!11710 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11703, file: !3008, line: 641, type: !3012)
!11711 = !DILocation(line: 641, column: 49, scope: !11703)
!11712 = !DILocalVariable(name: "stack", arg: 2, scope: !11703, file: !3008, line: 642, type: !11487)
!11713 = !DILocation(line: 642, column: 28, scope: !11703)
!11714 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11703, file: !3008, line: 643, type: !217)
!11715 = !DILocation(line: 643, column: 17, scope: !11703)
!11716 = !DILocalVariable(name: "entry", arg: 4, scope: !11703, file: !3008, line: 643, type: !240)
!11717 = !DILocation(line: 643, column: 46, scope: !11703)
!11718 = !DILocalVariable(name: "p1", arg: 5, scope: !11703, file: !3008, line: 644, type: !102)
!11719 = !DILocation(line: 644, column: 16, scope: !11703)
!11720 = !DILocalVariable(name: "p2", arg: 6, scope: !11703, file: !3008, line: 644, type: !102)
!11721 = !DILocation(line: 644, column: 26, scope: !11703)
!11722 = !DILocalVariable(name: "p3", arg: 7, scope: !11703, file: !3008, line: 644, type: !102)
!11723 = !DILocation(line: 644, column: 36, scope: !11703)
!11724 = !DILocalVariable(name: "prio", arg: 8, scope: !11703, file: !3008, line: 645, type: !103)
!11725 = !DILocation(line: 645, column: 14, scope: !11703)
!11726 = !DILocalVariable(name: "options", arg: 9, scope: !11703, file: !3008, line: 645, type: !173)
!11727 = !DILocation(line: 645, column: 29, scope: !11703)
!11728 = !DILocalVariable(name: "delay", arg: 10, scope: !11703, file: !3008, line: 645, type: !11706)
!11729 = !DILocation(line: 645, column: 50, scope: !11703)
!11730 = !DILocation(line: 649, column: 21, scope: !11703)
!11731 = !DILocation(line: 649, column: 33, scope: !11703)
!11732 = !DILocation(line: 649, column: 40, scope: !11703)
!11733 = !DILocation(line: 649, column: 52, scope: !11703)
!11734 = !DILocation(line: 649, column: 59, scope: !11703)
!11735 = !DILocation(line: 649, column: 63, scope: !11703)
!11736 = !DILocation(line: 649, column: 67, scope: !11703)
!11737 = !DILocation(line: 650, column: 6, scope: !11703)
!11738 = !DILocation(line: 650, column: 12, scope: !11703)
!11739 = !DILocation(line: 649, column: 2, scope: !11703)
!11740 = !DILocation(line: 652, column: 7, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11703, file: !3008, line: 652, column: 6)
!11742 = !DILocation(line: 652, column: 6, scope: !11703)
!11743 = !DILocation(line: 653, column: 23, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11741, file: !3008, line: 652, column: 39)
!11745 = !DILocation(line: 653, column: 3, scope: !11744)
!11746 = !DILocation(line: 654, column: 2, scope: !11744)
!11747 = !DILocation(line: 656, column: 9, scope: !11703)
!11748 = !DILocation(line: 656, column: 2, scope: !11703)
!11749 = distinct !DISubprogram(name: "schedule_new_thread", scope: !3008, file: !3008, line: 401, type: !11750, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11750 = !DISubroutineType(types: !11751)
!11751 = !{null, !3012, !11706}
!11752 = !DILocalVariable(name: "thread", arg: 1, scope: !11749, file: !3008, line: 401, type: !3012)
!11753 = !DILocation(line: 401, column: 50, scope: !11749)
!11754 = !DILocalVariable(name: "delay", arg: 2, scope: !11749, file: !3008, line: 401, type: !11706)
!11755 = !DILocation(line: 401, column: 70, scope: !11749)
!11756 = !DILocation(line: 404, column: 6, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11749, file: !3008, line: 404, column: 6)
!11758 = !DILocation(line: 404, column: 6, scope: !11749)
!11759 = !DILocation(line: 405, column: 18, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11757, file: !3008, line: 404, column: 38)
!11761 = !DILocation(line: 405, column: 3, scope: !11760)
!11762 = !DILocation(line: 406, column: 2, scope: !11760)
!11763 = !DILocation(line: 407, column: 24, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11757, file: !3008, line: 406, column: 9)
!11765 = !DILocation(line: 407, column: 3, scope: !11764)
!11766 = !DILocation(line: 413, column: 1, scope: !11749)
!11767 = distinct !DISubprogram(name: "k_thread_start", scope: !3857, file: !3857, line: 205, type: !11768, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11768 = !DISubroutineType(types: !11769)
!11769 = !{null, !3011}
!11770 = !DILocalVariable(name: "thread", arg: 1, scope: !11767, file: !3857, line: 205, type: !3011)
!11771 = !DILocation(line: 205, column: 43, scope: !11767)
!11772 = !DILocation(line: 214, column: 2, scope: !11767)
!11773 = !DILocation(line: 214, column: 2, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11767, file: !3857, line: 214, column: 2)
!11775 = !{i64 2149664358}
!11776 = !DILocation(line: 215, column: 24, scope: !11767)
!11777 = !DILocation(line: 215, column: 2, scope: !11767)
!11778 = !DILocation(line: 216, column: 1, scope: !11767)
!11779 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11660, file: !11660, line: 47, type: !11750, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11780 = !DILocalVariable(name: "thread", arg: 1, scope: !11779, file: !11660, line: 47, type: !3012)
!11781 = !DILocation(line: 47, column: 58, scope: !11779)
!11782 = !DILocalVariable(name: "ticks", arg: 2, scope: !11779, file: !11660, line: 47, type: !11706)
!11783 = !DILocation(line: 47, column: 78, scope: !11779)
!11784 = !DILocation(line: 49, column: 17, scope: !11779)
!11785 = !DILocation(line: 49, column: 25, scope: !11779)
!11786 = !DILocation(line: 49, column: 30, scope: !11779)
!11787 = !DILocation(line: 49, column: 2, scope: !11779)
!11788 = !DILocation(line: 50, column: 1, scope: !11779)
!11789 = distinct !DISubprogram(name: "z_init_static_threads", scope: !3008, file: !3008, line: 748, type: !253, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11790 = !DILocalVariable(name: "thread_data", scope: !11791, file: !3008, line: 750, type: !11792)
!11791 = distinct !DILexicalBlock(scope: !11789, file: !3008, line: 750, column: 2)
!11792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11793, size: 32)
!11793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !109, line: 620, size: 384, elements: !11794)
!11794 = !{!11795, !11796, !11797, !11798, !11799, !11800, !11801, !11802, !11803, !11804, !11805, !11806}
!11795 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11793, file: !109, line: 621, baseType: !3012, size: 32)
!11796 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11793, file: !109, line: 622, baseType: !11487, size: 32, offset: 32)
!11797 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11793, file: !109, line: 623, baseType: !32, size: 32, offset: 64)
!11798 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11793, file: !109, line: 624, baseType: !240, size: 32, offset: 96)
!11799 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11793, file: !109, line: 625, baseType: !102, size: 32, offset: 128)
!11800 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11793, file: !109, line: 626, baseType: !102, size: 32, offset: 160)
!11801 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11793, file: !109, line: 627, baseType: !102, size: 32, offset: 192)
!11802 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11793, file: !109, line: 628, baseType: !103, size: 32, offset: 224)
!11803 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11793, file: !109, line: 629, baseType: !173, size: 32, offset: 256)
!11804 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11793, file: !109, line: 630, baseType: !250, size: 32, offset: 288)
!11805 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11793, file: !109, line: 631, baseType: !252, size: 32, offset: 320)
!11806 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11793, file: !109, line: 632, baseType: !256, size: 32, offset: 352)
!11807 = !DILocation(line: 750, column: 2, scope: !11791)
!11808 = !DILocation(line: 750, column: 2, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11810, file: !3008, line: 750, column: 2)
!11810 = distinct !DILexicalBlock(scope: !11791, file: !3008, line: 750, column: 2)
!11811 = !DILocation(line: 750, column: 2, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11809, file: !3008, line: 750, column: 2)
!11813 = !DILocation(line: 752, column: 4, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11810, file: !3008, line: 750, column: 38)
!11815 = !DILocation(line: 752, column: 17, scope: !11814)
!11816 = !DILocation(line: 753, column: 4, scope: !11814)
!11817 = !DILocation(line: 753, column: 17, scope: !11814)
!11818 = !DILocation(line: 754, column: 4, scope: !11814)
!11819 = !DILocation(line: 754, column: 17, scope: !11814)
!11820 = !DILocation(line: 755, column: 4, scope: !11814)
!11821 = !DILocation(line: 755, column: 17, scope: !11814)
!11822 = !DILocation(line: 756, column: 4, scope: !11814)
!11823 = !DILocation(line: 756, column: 17, scope: !11814)
!11824 = !DILocation(line: 757, column: 4, scope: !11814)
!11825 = !DILocation(line: 757, column: 17, scope: !11814)
!11826 = !DILocation(line: 758, column: 4, scope: !11814)
!11827 = !DILocation(line: 758, column: 17, scope: !11814)
!11828 = !DILocation(line: 759, column: 4, scope: !11814)
!11829 = !DILocation(line: 759, column: 17, scope: !11814)
!11830 = !DILocation(line: 760, column: 4, scope: !11814)
!11831 = !DILocation(line: 760, column: 17, scope: !11814)
!11832 = !DILocation(line: 761, column: 4, scope: !11814)
!11833 = !DILocation(line: 761, column: 17, scope: !11814)
!11834 = !DILocation(line: 751, column: 3, scope: !11814)
!11835 = !DILocation(line: 763, column: 41, scope: !11814)
!11836 = !DILocation(line: 763, column: 3, scope: !11814)
!11837 = !DILocation(line: 763, column: 16, scope: !11814)
!11838 = !DILocation(line: 763, column: 29, scope: !11814)
!11839 = !DILocation(line: 763, column: 39, scope: !11814)
!11840 = !DILocation(line: 764, column: 2, scope: !11814)
!11841 = !DILocation(line: 750, column: 2, scope: !11810)
!11842 = distinct !{!11842, !11807, !11843}
!11843 = !DILocation(line: 764, column: 2, scope: !11791)
!11844 = !DILocation(line: 780, column: 2, scope: !11789)
!11845 = !DILocalVariable(name: "thread_data", scope: !11846, file: !3008, line: 781, type: !11792)
!11846 = distinct !DILexicalBlock(scope: !11789, file: !3008, line: 781, column: 2)
!11847 = !DILocation(line: 781, column: 2, scope: !11846)
!11848 = !DILocation(line: 781, column: 2, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !3008, line: 781, column: 2)
!11850 = distinct !DILexicalBlock(scope: !11846, file: !3008, line: 781, column: 2)
!11851 = !DILocation(line: 781, column: 2, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11849, file: !3008, line: 781, column: 2)
!11853 = !DILocation(line: 782, column: 7, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11855, file: !3008, line: 782, column: 7)
!11855 = distinct !DILexicalBlock(scope: !11850, file: !3008, line: 781, column: 38)
!11856 = !DILocation(line: 782, column: 20, scope: !11854)
!11857 = !DILocation(line: 782, column: 31, scope: !11854)
!11858 = !DILocation(line: 782, column: 7, scope: !11855)
!11859 = !DILocation(line: 783, column: 24, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11854, file: !3008, line: 782, column: 51)
!11861 = !DILocation(line: 783, column: 37, scope: !11860)
!11862 = !DILocation(line: 784, column: 10, scope: !11860)
!11863 = !DILocation(line: 783, column: 4, scope: !11860)
!11864 = !DILocation(line: 785, column: 3, scope: !11860)
!11865 = !DILocation(line: 786, column: 2, scope: !11855)
!11866 = !DILocation(line: 781, column: 2, scope: !11850)
!11867 = distinct !{!11867, !11847, !11868}
!11868 = !DILocation(line: 786, column: 2, scope: !11846)
!11869 = !DILocation(line: 787, column: 2, scope: !11789)
!11870 = !DILocation(line: 788, column: 1, scope: !11789)
!11871 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !9855, file: !9855, line: 403, type: !11872, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11872 = !DISubroutineType(types: !11873)
!11873 = !{!1938, !1938}
!11874 = !DILocalVariable(name: "t", arg: 1, scope: !11871, file: !9855, line: 403, type: !1938)
!11875 = !DILocation(line: 403, column: 69, scope: !11871)
!11876 = !DILocation(line: 406, column: 17, scope: !11871)
!11877 = !DILocalVariable(name: "t", arg: 1, scope: !11878, file: !9855, line: 102, type: !1938)
!11878 = distinct !DISubprogram(name: "z_tmcvt", scope: !9855, file: !9855, line: 102, type: !11879, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!11879 = !DISubroutineType(types: !11880)
!11880 = !{!1938, !1938, !173, !173, !1035, !1035, !1035, !1035}
!11881 = !DILocation(line: 102, column: 63, scope: !11878, inlinedAt: !11882)
!11882 = distinct !DILocation(line: 406, column: 9, scope: !11871)
!11883 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11878, file: !9855, line: 102, type: !173)
!11884 = !DILocation(line: 102, column: 75, scope: !11878, inlinedAt: !11882)
!11885 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11878, file: !9855, line: 103, type: !173)
!11886 = !DILocation(line: 103, column: 18, scope: !11878, inlinedAt: !11882)
!11887 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11878, file: !9855, line: 103, type: !1035)
!11888 = !DILocation(line: 103, column: 30, scope: !11878, inlinedAt: !11882)
!11889 = !DILocalVariable(name: "result32", arg: 5, scope: !11878, file: !9855, line: 104, type: !1035)
!11890 = !DILocation(line: 104, column: 14, scope: !11878, inlinedAt: !11882)
!11891 = !DILocalVariable(name: "round_up", arg: 6, scope: !11878, file: !9855, line: 104, type: !1035)
!11892 = !DILocation(line: 104, column: 29, scope: !11878, inlinedAt: !11882)
!11893 = !DILocalVariable(name: "round_off", arg: 7, scope: !11878, file: !9855, line: 105, type: !1035)
!11894 = !DILocation(line: 105, column: 14, scope: !11878, inlinedAt: !11882)
!11895 = !DILocalVariable(name: "mul_ratio", scope: !11878, file: !9855, line: 107, type: !1035)
!11896 = !DILocation(line: 107, column: 7, scope: !11878, inlinedAt: !11882)
!11897 = !DILocation(line: 107, column: 19, scope: !11878, inlinedAt: !11882)
!11898 = !DILocation(line: 107, column: 28, scope: !11878, inlinedAt: !11882)
!11899 = !DILocation(line: 108, column: 4, scope: !11878, inlinedAt: !11882)
!11900 = !DILocation(line: 108, column: 12, scope: !11878, inlinedAt: !11882)
!11901 = !DILocation(line: 108, column: 10, scope: !11878, inlinedAt: !11882)
!11902 = !DILocation(line: 108, column: 21, scope: !11878, inlinedAt: !11882)
!11903 = !DILocation(line: 108, column: 26, scope: !11878, inlinedAt: !11882)
!11904 = !DILocation(line: 108, column: 34, scope: !11878, inlinedAt: !11882)
!11905 = !DILocation(line: 108, column: 32, scope: !11878, inlinedAt: !11882)
!11906 = !DILocation(line: 108, column: 43, scope: !11878, inlinedAt: !11882)
!11907 = !DILocation(line: 0, scope: !11878, inlinedAt: !11882)
!11908 = !DILocalVariable(name: "div_ratio", scope: !11878, file: !9855, line: 109, type: !1035)
!11909 = !DILocation(line: 109, column: 7, scope: !11878, inlinedAt: !11882)
!11910 = !DILocation(line: 109, column: 19, scope: !11878, inlinedAt: !11882)
!11911 = !DILocation(line: 109, column: 28, scope: !11878, inlinedAt: !11882)
!11912 = !DILocation(line: 110, column: 4, scope: !11878, inlinedAt: !11882)
!11913 = !DILocation(line: 110, column: 14, scope: !11878, inlinedAt: !11882)
!11914 = !DILocation(line: 110, column: 12, scope: !11878, inlinedAt: !11882)
!11915 = !DILocation(line: 110, column: 21, scope: !11878, inlinedAt: !11882)
!11916 = !DILocation(line: 110, column: 26, scope: !11878, inlinedAt: !11882)
!11917 = !DILocation(line: 110, column: 36, scope: !11878, inlinedAt: !11882)
!11918 = !DILocation(line: 110, column: 34, scope: !11878, inlinedAt: !11882)
!11919 = !DILocation(line: 110, column: 43, scope: !11878, inlinedAt: !11882)
!11920 = !DILocation(line: 112, column: 6, scope: !11921, inlinedAt: !11882)
!11921 = distinct !DILexicalBlock(scope: !11878, file: !9855, line: 112, column: 6)
!11922 = !DILocation(line: 112, column: 17, scope: !11921, inlinedAt: !11882)
!11923 = !DILocation(line: 112, column: 14, scope: !11921, inlinedAt: !11882)
!11924 = !DILocation(line: 112, column: 6, scope: !11878, inlinedAt: !11882)
!11925 = !DILocation(line: 113, column: 10, scope: !11926, inlinedAt: !11882)
!11926 = distinct !DILexicalBlock(scope: !11921, file: !9855, line: 112, column: 24)
!11927 = !DILocation(line: 113, column: 32, scope: !11926, inlinedAt: !11882)
!11928 = !DILocation(line: 113, column: 22, scope: !11926, inlinedAt: !11882)
!11929 = !DILocation(line: 113, column: 21, scope: !11926, inlinedAt: !11882)
!11930 = !DILocation(line: 113, column: 37, scope: !11926, inlinedAt: !11882)
!11931 = !DILocation(line: 113, column: 3, scope: !11926, inlinedAt: !11882)
!11932 = !DILocalVariable(name: "off", scope: !11878, file: !9855, line: 116, type: !1938)
!11933 = !DILocation(line: 116, column: 11, scope: !11878, inlinedAt: !11882)
!11934 = !DILocation(line: 118, column: 7, scope: !11935, inlinedAt: !11882)
!11935 = distinct !DILexicalBlock(scope: !11878, file: !9855, line: 118, column: 6)
!11936 = !DILocation(line: 118, column: 6, scope: !11878, inlinedAt: !11882)
!11937 = !DILocalVariable(name: "rdivisor", scope: !11938, file: !9855, line: 119, type: !173)
!11938 = distinct !DILexicalBlock(scope: !11935, file: !9855, line: 118, column: 18)
!11939 = !DILocation(line: 119, column: 12, scope: !11938, inlinedAt: !11882)
!11940 = !DILocation(line: 119, column: 23, scope: !11938, inlinedAt: !11882)
!11941 = !DILocation(line: 119, column: 36, scope: !11938, inlinedAt: !11882)
!11942 = !DILocation(line: 119, column: 46, scope: !11938, inlinedAt: !11882)
!11943 = !DILocation(line: 119, column: 44, scope: !11938, inlinedAt: !11882)
!11944 = !DILocation(line: 119, column: 55, scope: !11938, inlinedAt: !11882)
!11945 = !DILocation(line: 121, column: 7, scope: !11946, inlinedAt: !11882)
!11946 = distinct !DILexicalBlock(scope: !11938, file: !9855, line: 121, column: 7)
!11947 = !DILocation(line: 121, column: 7, scope: !11938, inlinedAt: !11882)
!11948 = !DILocation(line: 122, column: 10, scope: !11949, inlinedAt: !11882)
!11949 = distinct !DILexicalBlock(scope: !11946, file: !9855, line: 121, column: 17)
!11950 = !DILocation(line: 122, column: 19, scope: !11949, inlinedAt: !11882)
!11951 = !DILocation(line: 122, column: 8, scope: !11949, inlinedAt: !11882)
!11952 = !DILocation(line: 123, column: 3, scope: !11949, inlinedAt: !11882)
!11953 = !DILocation(line: 124, column: 7, scope: !11954, inlinedAt: !11882)
!11954 = distinct !DILexicalBlock(scope: !11938, file: !9855, line: 124, column: 7)
!11955 = !DILocation(line: 124, column: 7, scope: !11938, inlinedAt: !11882)
!11956 = !DILocation(line: 125, column: 10, scope: !11957, inlinedAt: !11882)
!11957 = distinct !DILexicalBlock(scope: !11954, file: !9855, line: 124, column: 18)
!11958 = !DILocation(line: 125, column: 19, scope: !11957, inlinedAt: !11882)
!11959 = !DILocation(line: 125, column: 8, scope: !11957, inlinedAt: !11882)
!11960 = !DILocation(line: 126, column: 3, scope: !11957, inlinedAt: !11882)
!11961 = !DILocation(line: 127, column: 2, scope: !11938, inlinedAt: !11882)
!11962 = !DILocation(line: 134, column: 6, scope: !11963, inlinedAt: !11882)
!11963 = distinct !DILexicalBlock(scope: !11878, file: !9855, line: 134, column: 6)
!11964 = !DILocation(line: 134, column: 6, scope: !11878, inlinedAt: !11882)
!11965 = !DILocation(line: 135, column: 8, scope: !11966, inlinedAt: !11882)
!11966 = distinct !DILexicalBlock(scope: !11963, file: !9855, line: 134, column: 17)
!11967 = !DILocation(line: 135, column: 5, scope: !11966, inlinedAt: !11882)
!11968 = !DILocation(line: 136, column: 7, scope: !11969, inlinedAt: !11882)
!11969 = distinct !DILexicalBlock(scope: !11966, file: !9855, line: 136, column: 7)
!11970 = !DILocation(line: 136, column: 16, scope: !11969, inlinedAt: !11882)
!11971 = !DILocation(line: 136, column: 20, scope: !11969, inlinedAt: !11882)
!11972 = !DILocation(line: 136, column: 22, scope: !11969, inlinedAt: !11882)
!11973 = !DILocation(line: 136, column: 7, scope: !11966, inlinedAt: !11882)
!11974 = !DILocation(line: 137, column: 22, scope: !11975, inlinedAt: !11882)
!11975 = distinct !DILexicalBlock(scope: !11969, file: !9855, line: 136, column: 36)
!11976 = !DILocation(line: 137, column: 12, scope: !11975, inlinedAt: !11882)
!11977 = !DILocation(line: 137, column: 28, scope: !11975, inlinedAt: !11882)
!11978 = !DILocation(line: 137, column: 38, scope: !11975, inlinedAt: !11882)
!11979 = !DILocation(line: 137, column: 36, scope: !11975, inlinedAt: !11882)
!11980 = !DILocation(line: 137, column: 25, scope: !11975, inlinedAt: !11882)
!11981 = !DILocation(line: 137, column: 11, scope: !11975, inlinedAt: !11882)
!11982 = !DILocation(line: 137, column: 4, scope: !11975, inlinedAt: !11882)
!11983 = !DILocation(line: 139, column: 11, scope: !11984, inlinedAt: !11882)
!11984 = distinct !DILexicalBlock(scope: !11969, file: !9855, line: 138, column: 10)
!11985 = !DILocation(line: 139, column: 26, scope: !11984, inlinedAt: !11882)
!11986 = !DILocation(line: 139, column: 16, scope: !11984, inlinedAt: !11882)
!11987 = !DILocation(line: 139, column: 36, scope: !11984, inlinedAt: !11882)
!11988 = !DILocation(line: 139, column: 34, scope: !11984, inlinedAt: !11882)
!11989 = !DILocation(line: 139, column: 13, scope: !11984, inlinedAt: !11882)
!11990 = !DILocation(line: 139, column: 4, scope: !11984, inlinedAt: !11882)
!11991 = !DILocation(line: 141, column: 13, scope: !11992, inlinedAt: !11882)
!11992 = distinct !DILexicalBlock(scope: !11963, file: !9855, line: 141, column: 13)
!11993 = !DILocation(line: 141, column: 13, scope: !11963, inlinedAt: !11882)
!11994 = !DILocation(line: 142, column: 7, scope: !11995, inlinedAt: !11882)
!11995 = distinct !DILexicalBlock(scope: !11996, file: !9855, line: 142, column: 7)
!11996 = distinct !DILexicalBlock(scope: !11992, file: !9855, line: 141, column: 24)
!11997 = !DILocation(line: 142, column: 7, scope: !11996, inlinedAt: !11882)
!11998 = !DILocation(line: 143, column: 22, scope: !11999, inlinedAt: !11882)
!11999 = distinct !DILexicalBlock(scope: !11995, file: !9855, line: 142, column: 17)
!12000 = !DILocation(line: 143, column: 12, scope: !11999, inlinedAt: !11882)
!12001 = !DILocation(line: 143, column: 28, scope: !11999, inlinedAt: !11882)
!12002 = !DILocation(line: 143, column: 36, scope: !11999, inlinedAt: !11882)
!12003 = !DILocation(line: 143, column: 34, scope: !11999, inlinedAt: !11882)
!12004 = !DILocation(line: 143, column: 25, scope: !11999, inlinedAt: !11882)
!12005 = !DILocation(line: 143, column: 11, scope: !11999, inlinedAt: !11882)
!12006 = !DILocation(line: 143, column: 4, scope: !11999, inlinedAt: !11882)
!12007 = !DILocation(line: 145, column: 11, scope: !12008, inlinedAt: !11882)
!12008 = distinct !DILexicalBlock(scope: !11995, file: !9855, line: 144, column: 10)
!12009 = !DILocation(line: 145, column: 26, scope: !12008, inlinedAt: !11882)
!12010 = !DILocation(line: 145, column: 16, scope: !12008, inlinedAt: !11882)
!12011 = !DILocation(line: 145, column: 34, scope: !12008, inlinedAt: !11882)
!12012 = !DILocation(line: 145, column: 32, scope: !12008, inlinedAt: !11882)
!12013 = !DILocation(line: 145, column: 13, scope: !12008, inlinedAt: !11882)
!12014 = !DILocation(line: 145, column: 4, scope: !12008, inlinedAt: !11882)
!12015 = !DILocation(line: 148, column: 7, scope: !12016, inlinedAt: !11882)
!12016 = distinct !DILexicalBlock(scope: !12017, file: !9855, line: 148, column: 7)
!12017 = distinct !DILexicalBlock(scope: !11992, file: !9855, line: 147, column: 9)
!12018 = !DILocation(line: 148, column: 7, scope: !12017, inlinedAt: !11882)
!12019 = !DILocation(line: 149, column: 23, scope: !12020, inlinedAt: !11882)
!12020 = distinct !DILexicalBlock(scope: !12016, file: !9855, line: 148, column: 17)
!12021 = !DILocation(line: 149, column: 27, scope: !12020, inlinedAt: !11882)
!12022 = !DILocation(line: 149, column: 25, scope: !12020, inlinedAt: !11882)
!12023 = !DILocation(line: 149, column: 35, scope: !12020, inlinedAt: !11882)
!12024 = !DILocation(line: 149, column: 33, scope: !12020, inlinedAt: !11882)
!12025 = !DILocation(line: 149, column: 42, scope: !12020, inlinedAt: !11882)
!12026 = !DILocation(line: 149, column: 40, scope: !12020, inlinedAt: !11882)
!12027 = !DILocation(line: 149, column: 11, scope: !12020, inlinedAt: !11882)
!12028 = !DILocation(line: 149, column: 4, scope: !12020, inlinedAt: !11882)
!12029 = !DILocation(line: 150, column: 14, scope: !12030, inlinedAt: !11882)
!12030 = distinct !DILexicalBlock(scope: !12016, file: !9855, line: 150, column: 14)
!12031 = !DILocation(line: 150, column: 23, scope: !12030, inlinedAt: !11882)
!12032 = !DILocation(line: 150, column: 26, scope: !12030, inlinedAt: !11882)
!12033 = !DILocation(line: 150, column: 14, scope: !12016, inlinedAt: !11882)
!12034 = !DILocation(line: 156, column: 13, scope: !12035, inlinedAt: !11882)
!12035 = distinct !DILexicalBlock(scope: !12030, file: !9855, line: 150, column: 65)
!12036 = !DILocation(line: 156, column: 17, scope: !12035, inlinedAt: !11882)
!12037 = !DILocation(line: 156, column: 15, scope: !12035, inlinedAt: !11882)
!12038 = !DILocation(line: 156, column: 25, scope: !12035, inlinedAt: !11882)
!12039 = !DILocation(line: 156, column: 23, scope: !12035, inlinedAt: !11882)
!12040 = !DILocation(line: 156, column: 32, scope: !12035, inlinedAt: !11882)
!12041 = !DILocation(line: 156, column: 30, scope: !12035, inlinedAt: !11882)
!12042 = !DILocation(line: 156, column: 4, scope: !12035, inlinedAt: !11882)
!12043 = !DILocation(line: 161, column: 12, scope: !12044, inlinedAt: !11882)
!12044 = distinct !DILexicalBlock(scope: !12030, file: !9855, line: 157, column: 10)
!12045 = !DILocation(line: 161, column: 16, scope: !12044, inlinedAt: !11882)
!12046 = !DILocation(line: 161, column: 14, scope: !12044, inlinedAt: !11882)
!12047 = !DILocation(line: 161, column: 27, scope: !12044, inlinedAt: !11882)
!12048 = !DILocation(line: 161, column: 25, scope: !12044, inlinedAt: !11882)
!12049 = !DILocation(line: 161, column: 37, scope: !12044, inlinedAt: !11882)
!12050 = !DILocation(line: 161, column: 41, scope: !12044, inlinedAt: !11882)
!12051 = !DILocation(line: 161, column: 39, scope: !12044, inlinedAt: !11882)
!12052 = !DILocation(line: 161, column: 52, scope: !12044, inlinedAt: !11882)
!12053 = !DILocation(line: 161, column: 50, scope: !12044, inlinedAt: !11882)
!12054 = !DILocation(line: 161, column: 60, scope: !12044, inlinedAt: !11882)
!12055 = !DILocation(line: 161, column: 58, scope: !12044, inlinedAt: !11882)
!12056 = !DILocation(line: 161, column: 67, scope: !12044, inlinedAt: !11882)
!12057 = !DILocation(line: 161, column: 65, scope: !12044, inlinedAt: !11882)
!12058 = !DILocation(line: 161, column: 33, scope: !12044, inlinedAt: !11882)
!12059 = !DILocation(line: 161, column: 4, scope: !12044, inlinedAt: !11882)
!12060 = !DILocation(line: 164, column: 1, scope: !11878, inlinedAt: !11882)
!12061 = !DILocation(line: 406, column: 2, scope: !11871)
!12062 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !3008, file: !3008, line: 817, type: !4021, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!12063 = !DILocalVariable(name: "entry", arg: 1, scope: !12062, file: !3008, line: 817, type: !240)
!12064 = !DILocation(line: 817, column: 62, scope: !12062)
!12065 = !DILocalVariable(name: "p1", arg: 2, scope: !12062, file: !3008, line: 818, type: !102)
!12066 = !DILocation(line: 818, column: 16, scope: !12062)
!12067 = !DILocalVariable(name: "p2", arg: 3, scope: !12062, file: !3008, line: 818, type: !102)
!12068 = !DILocation(line: 818, column: 26, scope: !12062)
!12069 = !DILocalVariable(name: "p3", arg: 4, scope: !12062, file: !3008, line: 818, type: !102)
!12070 = !DILocation(line: 818, column: 36, scope: !12062)
!12071 = !DILocation(line: 820, column: 2, scope: !12062)
!12072 = !DILocation(line: 820, column: 2, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12062, file: !3008, line: 820, column: 2)
!12074 = !DILocation(line: 822, column: 2, scope: !12062)
!12075 = !DILocation(line: 822, column: 12, scope: !12062)
!12076 = !DILocation(line: 822, column: 17, scope: !12062)
!12077 = !DILocation(line: 822, column: 30, scope: !12062)
!12078 = !DILocation(line: 823, column: 2, scope: !12062)
!12079 = !DILocation(line: 845, column: 17, scope: !12062)
!12080 = !DILocation(line: 845, column: 24, scope: !12062)
!12081 = !DILocation(line: 845, column: 28, scope: !12062)
!12082 = !DILocation(line: 845, column: 32, scope: !12062)
!12083 = !DILocation(line: 845, column: 2, scope: !12062)
!12084 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !3008, file: !3008, line: 888, type: !12085, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!12085 = !DISubroutineType(types: !12086)
!12086 = !{!103, !3012}
!12087 = !DILocalVariable(name: "thread", arg: 1, scope: !12084, file: !3008, line: 888, type: !3012)
!12088 = !DILocation(line: 888, column: 45, scope: !12084)
!12089 = !DILocation(line: 893, column: 2, scope: !12084)
!12090 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !3008, file: !3008, line: 897, type: !12091, scopeLine: 898, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!12091 = !DISubroutineType(types: !12092)
!12092 = !{!103, !3012, !32}
!12093 = !DILocalVariable(name: "thread", arg: 1, scope: !12090, file: !3008, line: 897, type: !3012)
!12094 = !DILocation(line: 897, column: 44, scope: !12090)
!12095 = !DILocalVariable(name: "options", arg: 2, scope: !12090, file: !3008, line: 897, type: !32)
!12096 = !DILocation(line: 897, column: 65, scope: !12090)
!12097 = !DILocation(line: 902, column: 2, scope: !12090)
!12098 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !3008, file: !3008, line: 1072, type: !12099, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!12099 = !DISubroutineType(types: !12100)
!12100 = !{!103, !3011, !12101}
!12101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12102, size: 32)
!12102 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !114, line: 234, baseType: !12103)
!12103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !114, line: 192, elements: !223)
!12104 = !DILocalVariable(name: "thread", arg: 1, scope: !12098, file: !3008, line: 1072, type: !3011)
!12105 = !DILocation(line: 1072, column: 40, scope: !12098)
!12106 = !DILocalVariable(name: "stats", arg: 2, scope: !12098, file: !3008, line: 1073, type: !12101)
!12107 = !DILocation(line: 1073, column: 37, scope: !12098)
!12108 = !DILocation(line: 1075, column: 7, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12098, file: !3008, line: 1075, column: 6)
!12110 = !DILocation(line: 1075, column: 14, scope: !12109)
!12111 = !DILocation(line: 1075, column: 23, scope: !12109)
!12112 = !DILocation(line: 1075, column: 27, scope: !12109)
!12113 = !DILocation(line: 1075, column: 33, scope: !12109)
!12114 = !DILocation(line: 1075, column: 6, scope: !12098)
!12115 = !DILocation(line: 1076, column: 3, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !12109, file: !3008, line: 1075, column: 43)
!12117 = !DILocation(line: 1082, column: 3, scope: !12098)
!12118 = !DILocation(line: 1082, column: 11, scope: !12098)
!12119 = !DILocation(line: 1085, column: 2, scope: !12098)
!12120 = !DILocation(line: 1086, column: 1, scope: !12098)
!12121 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !3008, file: !3008, line: 1088, type: !12122, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3106, retainedNodes: !223)
!12122 = !DISubroutineType(types: !12123)
!12123 = !{!103, !12101}
!12124 = !DILocalVariable(name: "stats", arg: 1, scope: !12121, file: !3008, line: 1088, type: !12101)
!12125 = !DILocation(line: 1088, column: 62, scope: !12121)
!12126 = !DILocation(line: 1094, column: 6, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12121, file: !3008, line: 1094, column: 6)
!12128 = !DILocation(line: 1094, column: 12, scope: !12127)
!12129 = !DILocation(line: 1094, column: 6, scope: !12121)
!12130 = !DILocation(line: 1095, column: 3, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12127, file: !3008, line: 1094, column: 21)
!12132 = !DILocation(line: 1098, column: 3, scope: !12121)
!12133 = !DILocation(line: 1098, column: 11, scope: !12121)
!12134 = !DILocation(line: 1119, column: 2, scope: !12121)
!12135 = !DILocation(line: 1120, column: 1, scope: !12121)
!12136 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12137, file: !12137, line: 20, type: !253, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3568, retainedNodes: !223)
!12137 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12138 = !DILocation(line: 30, column: 2, scope: !12136)
!12139 = !DILocation(line: 31, column: 1, scope: !12136)
!12140 = distinct !DISubprogram(name: "idle", scope: !12137, file: !12137, line: 33, type: !242, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3568, retainedNodes: !223)
!12141 = !DILocalVariable(name: "unused1", arg: 1, scope: !12140, file: !12137, line: 33, type: !102)
!12142 = !DILocation(line: 33, column: 17, scope: !12140)
!12143 = !DILocalVariable(name: "unused2", arg: 2, scope: !12140, file: !12137, line: 33, type: !102)
!12144 = !DILocation(line: 33, column: 32, scope: !12140)
!12145 = !DILocalVariable(name: "unused3", arg: 3, scope: !12140, file: !12137, line: 33, type: !102)
!12146 = !DILocation(line: 33, column: 47, scope: !12140)
!12147 = !DILocation(line: 35, column: 2, scope: !12140)
!12148 = !DILocation(line: 36, column: 2, scope: !12140)
!12149 = !DILocation(line: 37, column: 2, scope: !12140)
!12150 = !DILocation(line: 41, column: 2, scope: !12140)
!12151 = !DILocalVariable(name: "key", scope: !12152, file: !6329, line: 44, type: !32)
!12152 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6329, file: !6329, line: 42, type: !6330, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3568, retainedNodes: !223)
!12153 = !DILocation(line: 44, column: 15, scope: !12152, inlinedAt: !12154)
!12154 = distinct !DILocation(line: 62, column: 10, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12140, file: !12137, line: 41, column: 15)
!12156 = !DILocation(line: 47, column: 2, scope: !12152, inlinedAt: !12154)
!12157 = !{i64 1450313}
!12158 = !DILocation(line: 76, column: 9, scope: !12152, inlinedAt: !12154)
!12159 = !DILocation(line: 86, column: 3, scope: !12155)
!12160 = distinct !{!12160, !12150, !12161}
!12161 = !DILocation(line: 105, column: 2, scope: !12140)
!12162 = distinct !DISubprogram(name: "k_cpu_idle", scope: !109, file: !109, line: 5627, type: !253, scopeLine: 5628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3568, retainedNodes: !223)
!12163 = !DILocation(line: 5629, column: 2, scope: !12162)
!12164 = !DILocation(line: 5630, column: 1, scope: !12162)
!12165 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !3229, file: !3229, line: 93, type: !12166, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12166 = !DISubroutineType(types: !12167)
!12167 = !{!250, !3130, !3130}
!12168 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12165, file: !3229, line: 93, type: !3130)
!12169 = !DILocation(line: 93, column: 43, scope: !12165)
!12170 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12165, file: !3229, line: 94, type: !3130)
!12171 = !DILocation(line: 94, column: 19, scope: !12165)
!12172 = !DILocalVariable(name: "b1", scope: !12165, file: !3229, line: 97, type: !250)
!12173 = !DILocation(line: 97, column: 10, scope: !12165)
!12174 = !DILocation(line: 97, column: 15, scope: !12165)
!12175 = !DILocation(line: 97, column: 25, scope: !12165)
!12176 = !DILocation(line: 97, column: 30, scope: !12165)
!12177 = !DILocalVariable(name: "b2", scope: !12165, file: !3229, line: 98, type: !250)
!12178 = !DILocation(line: 98, column: 10, scope: !12165)
!12179 = !DILocation(line: 98, column: 15, scope: !12165)
!12180 = !DILocation(line: 98, column: 25, scope: !12165)
!12181 = !DILocation(line: 98, column: 30, scope: !12165)
!12182 = !DILocation(line: 100, column: 6, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12165, file: !3229, line: 100, column: 6)
!12184 = !DILocation(line: 100, column: 12, scope: !12183)
!12185 = !DILocation(line: 100, column: 9, scope: !12183)
!12186 = !DILocation(line: 100, column: 6, scope: !12165)
!12187 = !DILocation(line: 101, column: 10, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12183, file: !3229, line: 100, column: 16)
!12189 = !DILocation(line: 101, column: 15, scope: !12188)
!12190 = !DILocation(line: 101, column: 13, scope: !12188)
!12191 = !DILocation(line: 101, column: 3, scope: !12188)
!12192 = !DILocation(line: 124, column: 2, scope: !12165)
!12193 = !DILocation(line: 125, column: 1, scope: !12165)
!12194 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !3229, file: !3229, line: 428, type: !12195, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12195 = !DISubroutineType(types: !12196)
!12196 = !{null, !3130}
!12197 = !DILocalVariable(name: "curr", arg: 1, scope: !12194, file: !3229, line: 428, type: !3130)
!12198 = !DILocation(line: 428, column: 42, scope: !12194)
!12199 = !DILocation(line: 434, column: 17, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12194, file: !3229, line: 434, column: 6)
!12201 = !DILocation(line: 434, column: 6, scope: !12200)
!12202 = !DILocation(line: 434, column: 23, scope: !12200)
!12203 = !DILocation(line: 434, column: 6, scope: !12194)
!12204 = !DILocation(line: 435, column: 42, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12200, file: !3229, line: 434, column: 29)
!12206 = !DILocation(line: 435, column: 31, scope: !12205)
!12207 = !DILocation(line: 435, column: 50, scope: !12205)
!12208 = !DILocation(line: 435, column: 48, scope: !12205)
!12209 = !DILocation(line: 435, column: 29, scope: !12205)
!12210 = !DILocation(line: 436, column: 35, scope: !12205)
!12211 = !DILocation(line: 436, column: 24, scope: !12205)
!12212 = !DILocation(line: 436, column: 3, scope: !12205)
!12213 = !DILocation(line: 437, column: 2, scope: !12205)
!12214 = !DILocation(line: 438, column: 1, scope: !12194)
!12215 = distinct !DISubprogram(name: "slice_time", scope: !3229, file: !3229, line: 407, type: !12216, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12216 = !DISubroutineType(types: !12217)
!12217 = !{!103, !3130}
!12218 = !DILocalVariable(name: "curr", arg: 1, scope: !12215, file: !3229, line: 407, type: !3130)
!12219 = !DILocation(line: 407, column: 47, scope: !12215)
!12220 = !DILocalVariable(name: "ret", scope: !12215, file: !3229, line: 409, type: !103)
!12221 = !DILocation(line: 409, column: 6, scope: !12215)
!12222 = !DILocation(line: 409, column: 12, scope: !12215)
!12223 = !DILocation(line: 416, column: 9, scope: !12215)
!12224 = !DILocation(line: 416, column: 2, scope: !12215)
!12225 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !3229, file: !3229, line: 440, type: !12226, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12226 = !DISubroutineType(types: !12227)
!12227 = !{null, !250, !103}
!12228 = !DILocalVariable(name: "slice", arg: 1, scope: !12225, file: !3229, line: 440, type: !250)
!12229 = !DILocation(line: 440, column: 37, scope: !12225)
!12230 = !DILocalVariable(name: "prio", arg: 2, scope: !12225, file: !3229, line: 440, type: !103)
!12231 = !DILocation(line: 440, column: 48, scope: !12225)
!12232 = !DILocalVariable(name: "__i", scope: !12233, file: !3229, line: 442, type: !12234)
!12233 = distinct !DILexicalBlock(scope: !12225, file: !3229, line: 442, column: 2)
!12234 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !12235)
!12235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !12236)
!12236 = !{!12237}
!12237 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12235, file: !222, line: 33, baseType: !103, size: 32)
!12238 = !DILocation(line: 442, column: 2, scope: !12233)
!12239 = !DILocalVariable(name: "__key", scope: !12233, file: !3229, line: 442, type: !12234)
!12240 = !DILocalVariable(name: "l", arg: 1, scope: !12241, file: !222, line: 136, type: !12244)
!12241 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !12242, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12242 = !DISubroutineType(types: !12243)
!12243 = !{!12234, !12244}
!12244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 32)
!12245 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !12246)
!12246 = distinct !DILocation(line: 442, column: 2, scope: !12233)
!12247 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !12246)
!12248 = !DILocalVariable(name: "k", scope: !12241, file: !222, line: 139, type: !12234)
!12249 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !12246)
!12250 = !DILocalVariable(name: "key", scope: !12251, file: !6329, line: 44, type: !32)
!12251 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6329, file: !6329, line: 42, type: !6330, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12252 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !12253)
!12253 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !12246)
!12254 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !12253)
!12255 = !{i64 1494284}
!12256 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !12253)
!12257 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !12246)
!12258 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !12246)
!12259 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !12246)
!12260 = !DILocation(line: 442, column: 2, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12233, file: !3229, line: 442, column: 2)
!12262 = !DILocation(line: 443, column: 29, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12261, file: !3229, line: 442, column: 26)
!12264 = !DILocation(line: 444, column: 38, scope: !12263)
!12265 = !DILocation(line: 444, column: 17, scope: !12263)
!12266 = !DILocation(line: 444, column: 15, scope: !12263)
!12267 = !DILocation(line: 445, column: 45, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12263, file: !3229, line: 445, column: 7)
!12269 = !DILocation(line: 445, column: 51, scope: !12268)
!12270 = !DILocation(line: 445, column: 7, scope: !12263)
!12271 = !DILocation(line: 449, column: 18, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12268, file: !3229, line: 445, column: 56)
!12273 = !DILocation(line: 449, column: 16, scope: !12272)
!12274 = !DILocation(line: 450, column: 3, scope: !12272)
!12275 = !DILocation(line: 451, column: 20, scope: !12263)
!12276 = !DILocation(line: 451, column: 18, scope: !12263)
!12277 = !DILocation(line: 452, column: 22, scope: !12263)
!12278 = !DILocation(line: 452, column: 3, scope: !12263)
!12279 = !DILocation(line: 453, column: 2, scope: !12263)
!12280 = !DILocalVariable(name: "l", arg: 1, scope: !12281, file: !222, line: 189, type: !12244)
!12281 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !12282, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12282 = !DISubroutineType(types: !12283)
!12283 = !{null, !12244, !12234}
!12284 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !12285)
!12285 = distinct !DILocation(line: 442, column: 2, scope: !12261)
!12286 = !DILocalVariable(name: "key", arg: 2, scope: !12281, file: !222, line: 190, type: !12234)
!12287 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !12285)
!12288 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !12285)
!12289 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !12285)
!12290 = !DILocalVariable(name: "key", arg: 1, scope: !12291, file: !6329, line: 84, type: !32)
!12291 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6329, file: !6329, line: 84, type: !6349, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12292 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !12293)
!12293 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !12285)
!12294 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !12293)
!12295 = distinct !DILexicalBlock(scope: !12291, file: !6329, line: 87, column: 6)
!12296 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !12293)
!12297 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !12293)
!12298 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !12293)
!12299 = distinct !DILexicalBlock(scope: !12295, file: !6329, line: 87, column: 17)
!12300 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !12293)
!12301 = !{i64 1495148}
!12302 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !12293)
!12303 = distinct !{!12303, !12238, !12304}
!12304 = !DILocation(line: 453, column: 2, scope: !12233)
!12305 = !DILocation(line: 454, column: 1, scope: !12225)
!12306 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !9855, file: !9855, line: 389, type: !12307, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12307 = !DISubroutineType(types: !12308)
!12308 = !{!173, !173}
!12309 = !DILocalVariable(name: "t", arg: 1, scope: !12306, file: !9855, line: 389, type: !173)
!12310 = !DILocation(line: 389, column: 69, scope: !12306)
!12311 = !DILocation(line: 392, column: 17, scope: !12306)
!12312 = !DILocalVariable(name: "t", arg: 1, scope: !12313, file: !9855, line: 102, type: !1938)
!12313 = distinct !DISubprogram(name: "z_tmcvt", scope: !9855, file: !9855, line: 102, type: !11879, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12314 = !DILocation(line: 102, column: 63, scope: !12313, inlinedAt: !12315)
!12315 = distinct !DILocation(line: 392, column: 9, scope: !12306)
!12316 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12313, file: !9855, line: 102, type: !173)
!12317 = !DILocation(line: 102, column: 75, scope: !12313, inlinedAt: !12315)
!12318 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12313, file: !9855, line: 103, type: !173)
!12319 = !DILocation(line: 103, column: 18, scope: !12313, inlinedAt: !12315)
!12320 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12313, file: !9855, line: 103, type: !1035)
!12321 = !DILocation(line: 103, column: 30, scope: !12313, inlinedAt: !12315)
!12322 = !DILocalVariable(name: "result32", arg: 5, scope: !12313, file: !9855, line: 104, type: !1035)
!12323 = !DILocation(line: 104, column: 14, scope: !12313, inlinedAt: !12315)
!12324 = !DILocalVariable(name: "round_up", arg: 6, scope: !12313, file: !9855, line: 104, type: !1035)
!12325 = !DILocation(line: 104, column: 29, scope: !12313, inlinedAt: !12315)
!12326 = !DILocalVariable(name: "round_off", arg: 7, scope: !12313, file: !9855, line: 105, type: !1035)
!12327 = !DILocation(line: 105, column: 14, scope: !12313, inlinedAt: !12315)
!12328 = !DILocalVariable(name: "mul_ratio", scope: !12313, file: !9855, line: 107, type: !1035)
!12329 = !DILocation(line: 107, column: 7, scope: !12313, inlinedAt: !12315)
!12330 = !DILocation(line: 107, column: 19, scope: !12313, inlinedAt: !12315)
!12331 = !DILocation(line: 107, column: 28, scope: !12313, inlinedAt: !12315)
!12332 = !DILocation(line: 108, column: 4, scope: !12313, inlinedAt: !12315)
!12333 = !DILocation(line: 108, column: 12, scope: !12313, inlinedAt: !12315)
!12334 = !DILocation(line: 108, column: 10, scope: !12313, inlinedAt: !12315)
!12335 = !DILocation(line: 108, column: 21, scope: !12313, inlinedAt: !12315)
!12336 = !DILocation(line: 108, column: 26, scope: !12313, inlinedAt: !12315)
!12337 = !DILocation(line: 108, column: 34, scope: !12313, inlinedAt: !12315)
!12338 = !DILocation(line: 108, column: 32, scope: !12313, inlinedAt: !12315)
!12339 = !DILocation(line: 108, column: 43, scope: !12313, inlinedAt: !12315)
!12340 = !DILocation(line: 0, scope: !12313, inlinedAt: !12315)
!12341 = !DILocalVariable(name: "div_ratio", scope: !12313, file: !9855, line: 109, type: !1035)
!12342 = !DILocation(line: 109, column: 7, scope: !12313, inlinedAt: !12315)
!12343 = !DILocation(line: 109, column: 19, scope: !12313, inlinedAt: !12315)
!12344 = !DILocation(line: 109, column: 28, scope: !12313, inlinedAt: !12315)
!12345 = !DILocation(line: 110, column: 4, scope: !12313, inlinedAt: !12315)
!12346 = !DILocation(line: 110, column: 14, scope: !12313, inlinedAt: !12315)
!12347 = !DILocation(line: 110, column: 12, scope: !12313, inlinedAt: !12315)
!12348 = !DILocation(line: 110, column: 21, scope: !12313, inlinedAt: !12315)
!12349 = !DILocation(line: 110, column: 26, scope: !12313, inlinedAt: !12315)
!12350 = !DILocation(line: 110, column: 36, scope: !12313, inlinedAt: !12315)
!12351 = !DILocation(line: 110, column: 34, scope: !12313, inlinedAt: !12315)
!12352 = !DILocation(line: 110, column: 43, scope: !12313, inlinedAt: !12315)
!12353 = !DILocation(line: 112, column: 6, scope: !12354, inlinedAt: !12315)
!12354 = distinct !DILexicalBlock(scope: !12313, file: !9855, line: 112, column: 6)
!12355 = !DILocation(line: 112, column: 17, scope: !12354, inlinedAt: !12315)
!12356 = !DILocation(line: 112, column: 14, scope: !12354, inlinedAt: !12315)
!12357 = !DILocation(line: 112, column: 6, scope: !12313, inlinedAt: !12315)
!12358 = !DILocation(line: 113, column: 10, scope: !12359, inlinedAt: !12315)
!12359 = distinct !DILexicalBlock(scope: !12354, file: !9855, line: 112, column: 24)
!12360 = !DILocation(line: 113, column: 32, scope: !12359, inlinedAt: !12315)
!12361 = !DILocation(line: 113, column: 22, scope: !12359, inlinedAt: !12315)
!12362 = !DILocation(line: 113, column: 21, scope: !12359, inlinedAt: !12315)
!12363 = !DILocation(line: 113, column: 37, scope: !12359, inlinedAt: !12315)
!12364 = !DILocation(line: 113, column: 3, scope: !12359, inlinedAt: !12315)
!12365 = !DILocalVariable(name: "off", scope: !12313, file: !9855, line: 116, type: !1938)
!12366 = !DILocation(line: 116, column: 11, scope: !12313, inlinedAt: !12315)
!12367 = !DILocation(line: 118, column: 7, scope: !12368, inlinedAt: !12315)
!12368 = distinct !DILexicalBlock(scope: !12313, file: !9855, line: 118, column: 6)
!12369 = !DILocation(line: 118, column: 6, scope: !12313, inlinedAt: !12315)
!12370 = !DILocalVariable(name: "rdivisor", scope: !12371, file: !9855, line: 119, type: !173)
!12371 = distinct !DILexicalBlock(scope: !12368, file: !9855, line: 118, column: 18)
!12372 = !DILocation(line: 119, column: 12, scope: !12371, inlinedAt: !12315)
!12373 = !DILocation(line: 119, column: 23, scope: !12371, inlinedAt: !12315)
!12374 = !DILocation(line: 119, column: 36, scope: !12371, inlinedAt: !12315)
!12375 = !DILocation(line: 119, column: 46, scope: !12371, inlinedAt: !12315)
!12376 = !DILocation(line: 119, column: 44, scope: !12371, inlinedAt: !12315)
!12377 = !DILocation(line: 119, column: 55, scope: !12371, inlinedAt: !12315)
!12378 = !DILocation(line: 121, column: 7, scope: !12379, inlinedAt: !12315)
!12379 = distinct !DILexicalBlock(scope: !12371, file: !9855, line: 121, column: 7)
!12380 = !DILocation(line: 121, column: 7, scope: !12371, inlinedAt: !12315)
!12381 = !DILocation(line: 122, column: 10, scope: !12382, inlinedAt: !12315)
!12382 = distinct !DILexicalBlock(scope: !12379, file: !9855, line: 121, column: 17)
!12383 = !DILocation(line: 122, column: 19, scope: !12382, inlinedAt: !12315)
!12384 = !DILocation(line: 122, column: 8, scope: !12382, inlinedAt: !12315)
!12385 = !DILocation(line: 123, column: 3, scope: !12382, inlinedAt: !12315)
!12386 = !DILocation(line: 124, column: 7, scope: !12387, inlinedAt: !12315)
!12387 = distinct !DILexicalBlock(scope: !12371, file: !9855, line: 124, column: 7)
!12388 = !DILocation(line: 124, column: 7, scope: !12371, inlinedAt: !12315)
!12389 = !DILocation(line: 125, column: 10, scope: !12390, inlinedAt: !12315)
!12390 = distinct !DILexicalBlock(scope: !12387, file: !9855, line: 124, column: 18)
!12391 = !DILocation(line: 125, column: 19, scope: !12390, inlinedAt: !12315)
!12392 = !DILocation(line: 125, column: 8, scope: !12390, inlinedAt: !12315)
!12393 = !DILocation(line: 126, column: 3, scope: !12390, inlinedAt: !12315)
!12394 = !DILocation(line: 127, column: 2, scope: !12371, inlinedAt: !12315)
!12395 = !DILocation(line: 134, column: 6, scope: !12396, inlinedAt: !12315)
!12396 = distinct !DILexicalBlock(scope: !12313, file: !9855, line: 134, column: 6)
!12397 = !DILocation(line: 134, column: 6, scope: !12313, inlinedAt: !12315)
!12398 = !DILocation(line: 135, column: 8, scope: !12399, inlinedAt: !12315)
!12399 = distinct !DILexicalBlock(scope: !12396, file: !9855, line: 134, column: 17)
!12400 = !DILocation(line: 135, column: 5, scope: !12399, inlinedAt: !12315)
!12401 = !DILocation(line: 136, column: 7, scope: !12402, inlinedAt: !12315)
!12402 = distinct !DILexicalBlock(scope: !12399, file: !9855, line: 136, column: 7)
!12403 = !DILocation(line: 136, column: 16, scope: !12402, inlinedAt: !12315)
!12404 = !DILocation(line: 136, column: 20, scope: !12402, inlinedAt: !12315)
!12405 = !DILocation(line: 136, column: 22, scope: !12402, inlinedAt: !12315)
!12406 = !DILocation(line: 136, column: 7, scope: !12399, inlinedAt: !12315)
!12407 = !DILocation(line: 137, column: 22, scope: !12408, inlinedAt: !12315)
!12408 = distinct !DILexicalBlock(scope: !12402, file: !9855, line: 136, column: 36)
!12409 = !DILocation(line: 137, column: 12, scope: !12408, inlinedAt: !12315)
!12410 = !DILocation(line: 137, column: 28, scope: !12408, inlinedAt: !12315)
!12411 = !DILocation(line: 137, column: 38, scope: !12408, inlinedAt: !12315)
!12412 = !DILocation(line: 137, column: 36, scope: !12408, inlinedAt: !12315)
!12413 = !DILocation(line: 137, column: 25, scope: !12408, inlinedAt: !12315)
!12414 = !DILocation(line: 137, column: 11, scope: !12408, inlinedAt: !12315)
!12415 = !DILocation(line: 137, column: 4, scope: !12408, inlinedAt: !12315)
!12416 = !DILocation(line: 139, column: 11, scope: !12417, inlinedAt: !12315)
!12417 = distinct !DILexicalBlock(scope: !12402, file: !9855, line: 138, column: 10)
!12418 = !DILocation(line: 139, column: 26, scope: !12417, inlinedAt: !12315)
!12419 = !DILocation(line: 139, column: 16, scope: !12417, inlinedAt: !12315)
!12420 = !DILocation(line: 139, column: 36, scope: !12417, inlinedAt: !12315)
!12421 = !DILocation(line: 139, column: 34, scope: !12417, inlinedAt: !12315)
!12422 = !DILocation(line: 139, column: 13, scope: !12417, inlinedAt: !12315)
!12423 = !DILocation(line: 139, column: 4, scope: !12417, inlinedAt: !12315)
!12424 = !DILocation(line: 141, column: 13, scope: !12425, inlinedAt: !12315)
!12425 = distinct !DILexicalBlock(scope: !12396, file: !9855, line: 141, column: 13)
!12426 = !DILocation(line: 141, column: 13, scope: !12396, inlinedAt: !12315)
!12427 = !DILocation(line: 142, column: 7, scope: !12428, inlinedAt: !12315)
!12428 = distinct !DILexicalBlock(scope: !12429, file: !9855, line: 142, column: 7)
!12429 = distinct !DILexicalBlock(scope: !12425, file: !9855, line: 141, column: 24)
!12430 = !DILocation(line: 142, column: 7, scope: !12429, inlinedAt: !12315)
!12431 = !DILocation(line: 143, column: 22, scope: !12432, inlinedAt: !12315)
!12432 = distinct !DILexicalBlock(scope: !12428, file: !9855, line: 142, column: 17)
!12433 = !DILocation(line: 143, column: 12, scope: !12432, inlinedAt: !12315)
!12434 = !DILocation(line: 143, column: 28, scope: !12432, inlinedAt: !12315)
!12435 = !DILocation(line: 143, column: 36, scope: !12432, inlinedAt: !12315)
!12436 = !DILocation(line: 143, column: 34, scope: !12432, inlinedAt: !12315)
!12437 = !DILocation(line: 143, column: 25, scope: !12432, inlinedAt: !12315)
!12438 = !DILocation(line: 143, column: 11, scope: !12432, inlinedAt: !12315)
!12439 = !DILocation(line: 143, column: 4, scope: !12432, inlinedAt: !12315)
!12440 = !DILocation(line: 145, column: 11, scope: !12441, inlinedAt: !12315)
!12441 = distinct !DILexicalBlock(scope: !12428, file: !9855, line: 144, column: 10)
!12442 = !DILocation(line: 145, column: 26, scope: !12441, inlinedAt: !12315)
!12443 = !DILocation(line: 145, column: 16, scope: !12441, inlinedAt: !12315)
!12444 = !DILocation(line: 145, column: 34, scope: !12441, inlinedAt: !12315)
!12445 = !DILocation(line: 145, column: 32, scope: !12441, inlinedAt: !12315)
!12446 = !DILocation(line: 145, column: 13, scope: !12441, inlinedAt: !12315)
!12447 = !DILocation(line: 145, column: 4, scope: !12441, inlinedAt: !12315)
!12448 = !DILocation(line: 148, column: 7, scope: !12449, inlinedAt: !12315)
!12449 = distinct !DILexicalBlock(scope: !12450, file: !9855, line: 148, column: 7)
!12450 = distinct !DILexicalBlock(scope: !12425, file: !9855, line: 147, column: 9)
!12451 = !DILocation(line: 148, column: 7, scope: !12450, inlinedAt: !12315)
!12452 = !DILocation(line: 149, column: 23, scope: !12453, inlinedAt: !12315)
!12453 = distinct !DILexicalBlock(scope: !12449, file: !9855, line: 148, column: 17)
!12454 = !DILocation(line: 149, column: 27, scope: !12453, inlinedAt: !12315)
!12455 = !DILocation(line: 149, column: 25, scope: !12453, inlinedAt: !12315)
!12456 = !DILocation(line: 149, column: 35, scope: !12453, inlinedAt: !12315)
!12457 = !DILocation(line: 149, column: 33, scope: !12453, inlinedAt: !12315)
!12458 = !DILocation(line: 149, column: 42, scope: !12453, inlinedAt: !12315)
!12459 = !DILocation(line: 149, column: 40, scope: !12453, inlinedAt: !12315)
!12460 = !DILocation(line: 149, column: 11, scope: !12453, inlinedAt: !12315)
!12461 = !DILocation(line: 149, column: 4, scope: !12453, inlinedAt: !12315)
!12462 = !DILocation(line: 150, column: 14, scope: !12463, inlinedAt: !12315)
!12463 = distinct !DILexicalBlock(scope: !12449, file: !9855, line: 150, column: 14)
!12464 = !DILocation(line: 150, column: 23, scope: !12463, inlinedAt: !12315)
!12465 = !DILocation(line: 150, column: 26, scope: !12463, inlinedAt: !12315)
!12466 = !DILocation(line: 150, column: 14, scope: !12449, inlinedAt: !12315)
!12467 = !DILocation(line: 156, column: 13, scope: !12468, inlinedAt: !12315)
!12468 = distinct !DILexicalBlock(scope: !12463, file: !9855, line: 150, column: 65)
!12469 = !DILocation(line: 156, column: 17, scope: !12468, inlinedAt: !12315)
!12470 = !DILocation(line: 156, column: 15, scope: !12468, inlinedAt: !12315)
!12471 = !DILocation(line: 156, column: 25, scope: !12468, inlinedAt: !12315)
!12472 = !DILocation(line: 156, column: 23, scope: !12468, inlinedAt: !12315)
!12473 = !DILocation(line: 156, column: 32, scope: !12468, inlinedAt: !12315)
!12474 = !DILocation(line: 156, column: 30, scope: !12468, inlinedAt: !12315)
!12475 = !DILocation(line: 156, column: 4, scope: !12468, inlinedAt: !12315)
!12476 = !DILocation(line: 161, column: 12, scope: !12477, inlinedAt: !12315)
!12477 = distinct !DILexicalBlock(scope: !12463, file: !9855, line: 157, column: 10)
!12478 = !DILocation(line: 161, column: 16, scope: !12477, inlinedAt: !12315)
!12479 = !DILocation(line: 161, column: 14, scope: !12477, inlinedAt: !12315)
!12480 = !DILocation(line: 161, column: 27, scope: !12477, inlinedAt: !12315)
!12481 = !DILocation(line: 161, column: 25, scope: !12477, inlinedAt: !12315)
!12482 = !DILocation(line: 161, column: 37, scope: !12477, inlinedAt: !12315)
!12483 = !DILocation(line: 161, column: 41, scope: !12477, inlinedAt: !12315)
!12484 = !DILocation(line: 161, column: 39, scope: !12477, inlinedAt: !12315)
!12485 = !DILocation(line: 161, column: 52, scope: !12477, inlinedAt: !12315)
!12486 = !DILocation(line: 161, column: 50, scope: !12477, inlinedAt: !12315)
!12487 = !DILocation(line: 161, column: 60, scope: !12477, inlinedAt: !12315)
!12488 = !DILocation(line: 161, column: 58, scope: !12477, inlinedAt: !12315)
!12489 = !DILocation(line: 161, column: 67, scope: !12477, inlinedAt: !12315)
!12490 = !DILocation(line: 161, column: 65, scope: !12477, inlinedAt: !12315)
!12491 = !DILocation(line: 161, column: 33, scope: !12477, inlinedAt: !12315)
!12492 = !DILocation(line: 161, column: 4, scope: !12477, inlinedAt: !12315)
!12493 = !DILocation(line: 164, column: 1, scope: !12313, inlinedAt: !12315)
!12494 = !DILocation(line: 392, column: 9, scope: !12306)
!12495 = !DILocation(line: 392, column: 2, scope: !12306)
!12496 = distinct !DISubprogram(name: "z_time_slice", scope: !3229, file: !3229, line: 502, type: !11000, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12497 = !DILocalVariable(name: "ticks", arg: 1, scope: !12496, file: !3229, line: 502, type: !103)
!12498 = !DILocation(line: 502, column: 23, scope: !12496)
!12499 = !DILocalVariable(name: "key", scope: !12496, file: !3229, line: 511, type: !12234)
!12500 = !DILocation(line: 511, column: 19, scope: !12496)
!12501 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !12502)
!12502 = distinct !DILocation(line: 511, column: 25, scope: !12496)
!12503 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !12502)
!12504 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !12502)
!12505 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !12506)
!12506 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !12502)
!12507 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !12506)
!12508 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !12506)
!12509 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !12502)
!12510 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !12502)
!12511 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !12502)
!12512 = !DILocation(line: 511, column: 25, scope: !12496)
!12513 = !DILocation(line: 514, column: 6, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12496, file: !3229, line: 514, column: 6)
!12515 = !DILocation(line: 514, column: 25, scope: !12514)
!12516 = !DILocation(line: 514, column: 22, scope: !12514)
!12517 = !DILocation(line: 514, column: 6, scope: !12496)
!12518 = !DILocation(line: 515, column: 22, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12514, file: !3229, line: 514, column: 35)
!12520 = !DILocation(line: 515, column: 3, scope: !12519)
!12521 = !DILocation(line: 516, column: 3, scope: !12519)
!12522 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !12523)
!12523 = distinct !DILocation(line: 516, column: 3, scope: !12519)
!12524 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !12523)
!12525 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !12523)
!12526 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !12523)
!12527 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !12528)
!12528 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !12523)
!12529 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !12528)
!12530 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !12528)
!12531 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !12528)
!12532 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !12528)
!12533 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !12528)
!12534 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !12528)
!12535 = !DILocation(line: 517, column: 3, scope: !12519)
!12536 = !DILocation(line: 519, column: 18, scope: !12496)
!12537 = !DILocation(line: 522, column: 17, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12496, file: !3229, line: 522, column: 6)
!12539 = !DILocation(line: 522, column: 6, scope: !12538)
!12540 = !DILocation(line: 522, column: 27, scope: !12538)
!12541 = !DILocation(line: 522, column: 40, scope: !12538)
!12542 = !DILocation(line: 522, column: 30, scope: !12538)
!12543 = !DILocation(line: 522, column: 6, scope: !12496)
!12544 = !DILocation(line: 523, column: 7, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12546, file: !3229, line: 523, column: 7)
!12546 = distinct !DILexicalBlock(scope: !12538, file: !3229, line: 522, column: 51)
!12547 = !DILocation(line: 523, column: 30, scope: !12545)
!12548 = !DILocation(line: 523, column: 13, scope: !12545)
!12549 = !DILocation(line: 523, column: 7, scope: !12546)
!12550 = !DILocation(line: 530, column: 10, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12545, file: !3229, line: 523, column: 43)
!12552 = !DILocation(line: 531, column: 3, scope: !12551)
!12553 = !DILocation(line: 532, column: 33, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12545, file: !3229, line: 531, column: 10)
!12555 = !DILocation(line: 532, column: 30, scope: !12554)
!12556 = !DILocation(line: 534, column: 2, scope: !12546)
!12557 = !DILocation(line: 535, column: 29, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12538, file: !3229, line: 534, column: 9)
!12559 = !DILocation(line: 537, column: 2, scope: !12496)
!12560 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !12561)
!12561 = distinct !DILocation(line: 537, column: 2, scope: !12496)
!12562 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !12561)
!12563 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !12561)
!12564 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !12561)
!12565 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !12566)
!12566 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !12561)
!12567 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !12566)
!12568 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !12566)
!12569 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !12566)
!12570 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !12566)
!12571 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !12566)
!12572 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !12566)
!12573 = !DILocation(line: 538, column: 1, scope: !12496)
!12574 = distinct !DISubprogram(name: "sliceable", scope: !3229, file: !3229, line: 468, type: !12575, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12575 = !DISubroutineType(types: !12576)
!12576 = !{!1035, !3130}
!12577 = !DILocalVariable(name: "thread", arg: 1, scope: !12574, file: !3229, line: 468, type: !3130)
!12578 = !DILocation(line: 468, column: 47, scope: !12574)
!12579 = !DILocalVariable(name: "ret", scope: !12574, file: !3229, line: 470, type: !1035)
!12580 = !DILocation(line: 470, column: 7, scope: !12574)
!12581 = !DILocation(line: 470, column: 24, scope: !12574)
!12582 = !DILocation(line: 470, column: 13, scope: !12574)
!12583 = !DILocation(line: 471, column: 3, scope: !12574)
!12584 = !DILocation(line: 471, column: 42, scope: !12574)
!12585 = !DILocation(line: 471, column: 7, scope: !12574)
!12586 = !DILocation(line: 472, column: 3, scope: !12574)
!12587 = !DILocation(line: 472, column: 24, scope: !12574)
!12588 = !DILocation(line: 472, column: 32, scope: !12574)
!12589 = !DILocation(line: 472, column: 37, scope: !12574)
!12590 = !DILocation(line: 472, column: 43, scope: !12574)
!12591 = !DILocation(line: 472, column: 7, scope: !12574)
!12592 = !DILocation(line: 473, column: 3, scope: !12574)
!12593 = !DILocation(line: 473, column: 31, scope: !12574)
!12594 = !DILocation(line: 473, column: 7, scope: !12574)
!12595 = !DILocation(line: 473, column: 6, scope: !12574)
!12596 = !DILocation(line: 0, scope: !12574)
!12597 = !DILocation(line: 479, column: 9, scope: !12574)
!12598 = !DILocation(line: 479, column: 2, scope: !12574)
!12599 = distinct !DISubprogram(name: "slice_expired_locked", scope: !3229, file: !3229, line: 482, type: !12600, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12600 = !DISubroutineType(types: !12601)
!12601 = !{!12234, !12234}
!12602 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12599, file: !3229, line: 482, type: !12234)
!12603 = !DILocation(line: 482, column: 63, scope: !12599)
!12604 = !DILocalVariable(name: "curr", scope: !12599, file: !3229, line: 484, type: !3130)
!12605 = !DILocation(line: 484, column: 19, scope: !12599)
!12606 = !DILocation(line: 484, column: 26, scope: !12599)
!12607 = !DILocation(line: 493, column: 42, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12599, file: !3229, line: 493, column: 6)
!12609 = !DILocation(line: 493, column: 7, scope: !12608)
!12610 = !DILocation(line: 493, column: 6, scope: !12599)
!12611 = !DILocation(line: 494, column: 32, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12608, file: !3229, line: 493, column: 49)
!12613 = !DILocation(line: 494, column: 3, scope: !12612)
!12614 = !DILocation(line: 495, column: 2, scope: !12612)
!12615 = !DILocation(line: 496, column: 21, scope: !12599)
!12616 = !DILocation(line: 496, column: 2, scope: !12599)
!12617 = !DILocation(line: 498, column: 9, scope: !12599)
!12618 = !DILocation(line: 498, column: 2, scope: !12599)
!12619 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11061, file: !11061, line: 106, type: !12575, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12620 = !DILocalVariable(name: "thread", arg: 1, scope: !12619, file: !11061, line: 106, type: !3130)
!12621 = !DILocation(line: 106, column: 72, scope: !12619)
!12622 = !DILocalVariable(name: "state", scope: !12619, file: !11061, line: 108, type: !156)
!12623 = !DILocation(line: 108, column: 10, scope: !12619)
!12624 = !DILocation(line: 108, column: 18, scope: !12619)
!12625 = !DILocation(line: 108, column: 26, scope: !12619)
!12626 = !DILocation(line: 108, column: 31, scope: !12619)
!12627 = !DILocation(line: 110, column: 10, scope: !12619)
!12628 = !DILocation(line: 110, column: 16, scope: !12619)
!12629 = !DILocation(line: 111, column: 41, scope: !12619)
!12630 = !DILocation(line: 110, column: 2, scope: !12619)
!12631 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !3229, file: !3229, line: 393, type: !12195, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12632 = !DILocalVariable(name: "thread", arg: 1, scope: !12631, file: !3229, line: 393, type: !3130)
!12633 = !DILocation(line: 393, column: 59, scope: !12631)
!12634 = !DILocation(line: 395, column: 25, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12631, file: !3229, line: 395, column: 6)
!12636 = !DILocation(line: 395, column: 6, scope: !12635)
!12637 = !DILocation(line: 395, column: 6, scope: !12631)
!12638 = !DILocation(line: 396, column: 18, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12635, file: !3229, line: 395, column: 34)
!12640 = !DILocalVariable(name: "thread", arg: 1, scope: !12641, file: !3229, line: 264, type: !3130)
!12641 = distinct !DISubprogram(name: "dequeue_thread", scope: !3229, file: !3229, line: 264, type: !12195, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12642 = !DILocation(line: 264, column: 59, scope: !12641, inlinedAt: !12643)
!12643 = distinct !DILocation(line: 396, column: 3, scope: !12639)
!12644 = !DILocation(line: 266, column: 2, scope: !12641, inlinedAt: !12643)
!12645 = !DILocation(line: 266, column: 10, scope: !12641, inlinedAt: !12643)
!12646 = !DILocation(line: 266, column: 15, scope: !12641, inlinedAt: !12643)
!12647 = !DILocation(line: 266, column: 28, scope: !12641, inlinedAt: !12643)
!12648 = !DILocation(line: 267, column: 26, scope: !12649, inlinedAt: !12643)
!12649 = distinct !DILexicalBlock(scope: !12641, file: !3229, line: 267, column: 6)
!12650 = !DILocation(line: 267, column: 6, scope: !12649, inlinedAt: !12643)
!12651 = !DILocation(line: 267, column: 6, scope: !12641, inlinedAt: !12643)
!12652 = !DILocation(line: 268, column: 15, scope: !12653, inlinedAt: !12643)
!12653 = distinct !DILexicalBlock(scope: !12649, file: !3229, line: 267, column: 35)
!12654 = !DILocalVariable(name: "thread", arg: 1, scope: !12655, file: !3229, line: 232, type: !3130)
!12655 = distinct !DISubprogram(name: "runq_remove", scope: !3229, file: !3229, line: 232, type: !12195, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12656 = !DILocation(line: 232, column: 56, scope: !12655, inlinedAt: !12657)
!12657 = distinct !DILocation(line: 268, column: 3, scope: !12653, inlinedAt: !12643)
!12658 = !DILocation(line: 234, column: 31, scope: !12655, inlinedAt: !12657)
!12659 = !DILocalVariable(name: "thread", arg: 1, scope: !12660, file: !3229, line: 199, type: !3130)
!12660 = distinct !DISubprogram(name: "thread_runq", scope: !3229, file: !3229, line: 199, type: !12661, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12661 = !DISubroutineType(types: !12662)
!12662 = !{!102, !3130}
!12663 = !DILocation(line: 199, column: 57, scope: !12660, inlinedAt: !12664)
!12664 = distinct !DILocation(line: 234, column: 19, scope: !12655, inlinedAt: !12657)
!12665 = !DILocation(line: 234, column: 19, scope: !12655, inlinedAt: !12657)
!12666 = !DILocation(line: 234, column: 40, scope: !12655, inlinedAt: !12657)
!12667 = !DILocation(line: 234, column: 2, scope: !12655, inlinedAt: !12657)
!12668 = !DILocation(line: 269, column: 2, scope: !12653, inlinedAt: !12643)
!12669 = !DILocation(line: 397, column: 2, scope: !12639)
!12670 = !DILocation(line: 398, column: 15, scope: !12631)
!12671 = !DILocalVariable(name: "thread", arg: 1, scope: !12672, file: !3229, line: 250, type: !3130)
!12672 = distinct !DISubprogram(name: "queue_thread", scope: !3229, file: !3229, line: 250, type: !12195, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12673 = !DILocation(line: 250, column: 57, scope: !12672, inlinedAt: !12674)
!12674 = distinct !DILocation(line: 398, column: 2, scope: !12631)
!12675 = !DILocation(line: 252, column: 2, scope: !12672, inlinedAt: !12674)
!12676 = !DILocation(line: 252, column: 10, scope: !12672, inlinedAt: !12674)
!12677 = !DILocation(line: 252, column: 15, scope: !12672, inlinedAt: !12674)
!12678 = !DILocation(line: 252, column: 28, scope: !12672, inlinedAt: !12674)
!12679 = !DILocation(line: 253, column: 26, scope: !12680, inlinedAt: !12674)
!12680 = distinct !DILexicalBlock(scope: !12672, file: !3229, line: 253, column: 6)
!12681 = !DILocation(line: 253, column: 6, scope: !12680, inlinedAt: !12674)
!12682 = !DILocation(line: 253, column: 6, scope: !12672, inlinedAt: !12674)
!12683 = !DILocation(line: 254, column: 12, scope: !12684, inlinedAt: !12674)
!12684 = distinct !DILexicalBlock(scope: !12680, file: !3229, line: 253, column: 35)
!12685 = !DILocalVariable(name: "thread", arg: 1, scope: !12686, file: !3229, line: 227, type: !3130)
!12686 = distinct !DISubprogram(name: "runq_add", scope: !3229, file: !3229, line: 227, type: !12195, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12687 = !DILocation(line: 227, column: 53, scope: !12686, inlinedAt: !12688)
!12688 = distinct !DILocation(line: 254, column: 3, scope: !12684, inlinedAt: !12674)
!12689 = !DILocation(line: 229, column: 28, scope: !12686, inlinedAt: !12688)
!12690 = !DILocation(line: 199, column: 57, scope: !12660, inlinedAt: !12691)
!12691 = distinct !DILocation(line: 229, column: 16, scope: !12686, inlinedAt: !12688)
!12692 = !DILocation(line: 229, column: 37, scope: !12686, inlinedAt: !12688)
!12693 = !DILocalVariable(name: "pq", arg: 1, scope: !12694, file: !3229, line: 181, type: !12697)
!12694 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !3229, file: !3229, line: 181, type: !12695, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12695 = !DISubroutineType(types: !12696)
!12696 = !{null, !12697, !3130}
!12697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 32)
!12698 = !DILocation(line: 181, column: 56, scope: !12694, inlinedAt: !12699)
!12699 = distinct !DILocation(line: 229, column: 2, scope: !12686, inlinedAt: !12688)
!12700 = !DILocalVariable(name: "thread", arg: 2, scope: !12694, file: !3229, line: 182, type: !3130)
!12701 = !DILocation(line: 182, column: 25, scope: !12694, inlinedAt: !12699)
!12702 = !DILocalVariable(name: "t", scope: !12694, file: !3229, line: 184, type: !3130)
!12703 = !DILocation(line: 184, column: 19, scope: !12694, inlinedAt: !12699)
!12704 = !DILocation(line: 188, column: 2, scope: !12705, inlinedAt: !12699)
!12705 = distinct !DILexicalBlock(scope: !12694, file: !3229, line: 188, column: 2)
!12706 = !DILocation(line: 188, column: 2, scope: !12707, inlinedAt: !12699)
!12707 = distinct !DILexicalBlock(scope: !12705, file: !3229, line: 188, column: 2)
!12708 = !DILocation(line: 189, column: 24, scope: !12709, inlinedAt: !12699)
!12709 = distinct !DILexicalBlock(scope: !12710, file: !3229, line: 189, column: 7)
!12710 = distinct !DILexicalBlock(scope: !12707, file: !3229, line: 188, column: 56)
!12711 = !DILocation(line: 189, column: 32, scope: !12709, inlinedAt: !12699)
!12712 = !DILocation(line: 189, column: 7, scope: !12709, inlinedAt: !12699)
!12713 = !DILocation(line: 189, column: 35, scope: !12709, inlinedAt: !12699)
!12714 = !DILocation(line: 189, column: 7, scope: !12710, inlinedAt: !12699)
!12715 = !DILocation(line: 190, column: 22, scope: !12716, inlinedAt: !12699)
!12716 = distinct !DILexicalBlock(scope: !12709, file: !3229, line: 189, column: 40)
!12717 = !DILocation(line: 190, column: 25, scope: !12716, inlinedAt: !12699)
!12718 = !DILocation(line: 190, column: 30, scope: !12716, inlinedAt: !12699)
!12719 = !DILocation(line: 191, column: 8, scope: !12716, inlinedAt: !12699)
!12720 = !DILocation(line: 191, column: 16, scope: !12716, inlinedAt: !12699)
!12721 = !DILocation(line: 191, column: 21, scope: !12716, inlinedAt: !12699)
!12722 = !DILocation(line: 190, column: 4, scope: !12716, inlinedAt: !12699)
!12723 = !DILocation(line: 192, column: 4, scope: !12716, inlinedAt: !12699)
!12724 = distinct !{!12724, !12704, !12725}
!12725 = !DILocation(line: 194, column: 2, scope: !12705, inlinedAt: !12699)
!12726 = !DILocation(line: 196, column: 19, scope: !12694, inlinedAt: !12699)
!12727 = !DILocation(line: 196, column: 24, scope: !12694, inlinedAt: !12699)
!12728 = !DILocation(line: 196, column: 32, scope: !12694, inlinedAt: !12699)
!12729 = !DILocation(line: 196, column: 37, scope: !12694, inlinedAt: !12699)
!12730 = !DILocation(line: 196, column: 2, scope: !12694, inlinedAt: !12699)
!12731 = !DILocation(line: 197, column: 1, scope: !12694, inlinedAt: !12699)
!12732 = !DILocation(line: 255, column: 2, scope: !12684, inlinedAt: !12674)
!12733 = !DILocation(line: 399, column: 15, scope: !12631)
!12734 = !DILocation(line: 399, column: 25, scope: !12631)
!12735 = !DILocation(line: 399, column: 22, scope: !12631)
!12736 = !DILocation(line: 399, column: 2, scope: !12631)
!12737 = !DILocation(line: 400, column: 1, scope: !12631)
!12738 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11061, file: !11061, line: 136, type: !12575, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12739 = !DILocalVariable(name: "thread", arg: 1, scope: !12738, file: !11061, line: 136, type: !3130)
!12740 = !DILocation(line: 136, column: 56, scope: !12738)
!12741 = !DILocation(line: 138, column: 31, scope: !12738)
!12742 = !DILocation(line: 138, column: 9, scope: !12738)
!12743 = !DILocation(line: 138, column: 2, scope: !12738)
!12744 = distinct !DISubprogram(name: "should_queue_thread", scope: !3229, file: !3229, line: 245, type: !12575, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12745 = !DILocalVariable(name: "th", arg: 1, scope: !12744, file: !3229, line: 245, type: !3130)
!12746 = !DILocation(line: 245, column: 57, scope: !12744)
!12747 = !DILocation(line: 247, column: 2, scope: !12744)
!12748 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !3229, file: !3229, line: 1137, type: !12695, scopeLine: 1138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12749 = !DILocalVariable(name: "pq", arg: 1, scope: !12748, file: !3229, line: 1137, type: !12697)
!12750 = !DILocation(line: 1137, column: 38, scope: !12748)
!12751 = !DILocalVariable(name: "thread", arg: 2, scope: !12748, file: !3229, line: 1137, type: !3130)
!12752 = !DILocation(line: 1137, column: 59, scope: !12748)
!12753 = !DILocation(line: 1141, column: 20, scope: !12748)
!12754 = !DILocation(line: 1141, column: 28, scope: !12748)
!12755 = !DILocation(line: 1141, column: 33, scope: !12748)
!12756 = !DILocation(line: 1141, column: 2, scope: !12748)
!12757 = !DILocation(line: 1142, column: 1, scope: !12748)
!12758 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !124, file: !124, line: 294, type: !12759, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12759 = !DISubroutineType(types: !12760)
!12760 = !{!3225, !12697}
!12761 = !DILocalVariable(name: "list", arg: 1, scope: !12758, file: !124, line: 294, type: !12697)
!12762 = !DILocation(line: 294, column: 61, scope: !12758)
!12763 = !DILocation(line: 296, column: 28, scope: !12758)
!12764 = !DILocation(line: 296, column: 9, scope: !12758)
!12765 = !DILocation(line: 296, column: 43, scope: !12758)
!12766 = !DILocation(line: 296, column: 49, scope: !12758)
!12767 = !DILocation(line: 296, column: 2, scope: !12758)
!12768 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !124, file: !124, line: 443, type: !12769, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12769 = !DISubroutineType(types: !12770)
!12770 = !{null, !3225, !3225}
!12771 = !DILocalVariable(name: "successor", arg: 1, scope: !12768, file: !124, line: 443, type: !3225)
!12772 = !DILocation(line: 443, column: 50, scope: !12768)
!12773 = !DILocalVariable(name: "node", arg: 2, scope: !12768, file: !124, line: 443, type: !3225)
!12774 = !DILocation(line: 443, column: 74, scope: !12768)
!12775 = !DILocalVariable(name: "prev", scope: !12768, file: !124, line: 445, type: !12776)
!12776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3225)
!12777 = !DILocation(line: 445, column: 21, scope: !12768)
!12778 = !DILocation(line: 445, column: 28, scope: !12768)
!12779 = !DILocation(line: 445, column: 39, scope: !12768)
!12780 = !DILocation(line: 447, column: 15, scope: !12768)
!12781 = !DILocation(line: 447, column: 2, scope: !12768)
!12782 = !DILocation(line: 447, column: 8, scope: !12768)
!12783 = !DILocation(line: 447, column: 13, scope: !12768)
!12784 = !DILocation(line: 448, column: 15, scope: !12768)
!12785 = !DILocation(line: 448, column: 2, scope: !12768)
!12786 = !DILocation(line: 448, column: 8, scope: !12768)
!12787 = !DILocation(line: 448, column: 13, scope: !12768)
!12788 = !DILocation(line: 449, column: 15, scope: !12768)
!12789 = !DILocation(line: 449, column: 2, scope: !12768)
!12790 = !DILocation(line: 449, column: 8, scope: !12768)
!12791 = !DILocation(line: 449, column: 13, scope: !12768)
!12792 = !DILocation(line: 450, column: 20, scope: !12768)
!12793 = !DILocation(line: 450, column: 2, scope: !12768)
!12794 = !DILocation(line: 450, column: 13, scope: !12768)
!12795 = !DILocation(line: 450, column: 18, scope: !12768)
!12796 = !DILocation(line: 451, column: 1, scope: !12768)
!12797 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !124, file: !124, line: 341, type: !12798, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12798 = !DISubroutineType(types: !12799)
!12799 = !{!3225, !12697, !3225}
!12800 = !DILocalVariable(name: "list", arg: 1, scope: !12797, file: !124, line: 341, type: !12697)
!12801 = !DILocation(line: 341, column: 61, scope: !12797)
!12802 = !DILocalVariable(name: "node", arg: 2, scope: !12797, file: !124, line: 342, type: !3225)
!12803 = !DILocation(line: 342, column: 26, scope: !12797)
!12804 = !DILocation(line: 344, column: 10, scope: !12797)
!12805 = !DILocation(line: 344, column: 15, scope: !12797)
!12806 = !DILocation(line: 344, column: 9, scope: !12797)
!12807 = !DILocation(line: 344, column: 55, scope: !12797)
!12808 = !DILocation(line: 344, column: 61, scope: !12797)
!12809 = !DILocation(line: 344, column: 26, scope: !12797)
!12810 = !DILocation(line: 344, column: 2, scope: !12797)
!12811 = distinct !DISubprogram(name: "sys_dlist_append", scope: !124, file: !124, line: 404, type: !12812, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12812 = !DISubroutineType(types: !12813)
!12813 = !{null, !12697, !3225}
!12814 = !DILocalVariable(name: "list", arg: 1, scope: !12811, file: !124, line: 404, type: !12697)
!12815 = !DILocation(line: 404, column: 50, scope: !12811)
!12816 = !DILocalVariable(name: "node", arg: 2, scope: !12811, file: !124, line: 404, type: !3225)
!12817 = !DILocation(line: 404, column: 69, scope: !12811)
!12818 = !DILocalVariable(name: "tail", scope: !12811, file: !124, line: 406, type: !12776)
!12819 = !DILocation(line: 406, column: 21, scope: !12811)
!12820 = !DILocation(line: 406, column: 28, scope: !12811)
!12821 = !DILocation(line: 406, column: 34, scope: !12811)
!12822 = !DILocation(line: 408, column: 15, scope: !12811)
!12823 = !DILocation(line: 408, column: 2, scope: !12811)
!12824 = !DILocation(line: 408, column: 8, scope: !12811)
!12825 = !DILocation(line: 408, column: 13, scope: !12811)
!12826 = !DILocation(line: 409, column: 15, scope: !12811)
!12827 = !DILocation(line: 409, column: 2, scope: !12811)
!12828 = !DILocation(line: 409, column: 8, scope: !12811)
!12829 = !DILocation(line: 409, column: 13, scope: !12811)
!12830 = !DILocation(line: 411, column: 15, scope: !12811)
!12831 = !DILocation(line: 411, column: 2, scope: !12811)
!12832 = !DILocation(line: 411, column: 8, scope: !12811)
!12833 = !DILocation(line: 411, column: 13, scope: !12811)
!12834 = !DILocation(line: 412, column: 15, scope: !12811)
!12835 = !DILocation(line: 412, column: 2, scope: !12811)
!12836 = !DILocation(line: 412, column: 8, scope: !12811)
!12837 = !DILocation(line: 412, column: 13, scope: !12811)
!12838 = !DILocation(line: 413, column: 1, scope: !12811)
!12839 = distinct !DISubprogram(name: "update_cache", scope: !3229, file: !3229, line: 559, type: !11000, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12840 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12839, file: !3229, line: 559, type: !103)
!12841 = !DILocation(line: 559, column: 30, scope: !12839)
!12842 = !DILocalVariable(name: "thread", scope: !12839, file: !3229, line: 562, type: !3130)
!12843 = !DILocation(line: 562, column: 19, scope: !12839)
!12844 = !DILocalVariable(name: "thread", scope: !12845, file: !3229, line: 314, type: !3130)
!12845 = distinct !DISubprogram(name: "next_up", scope: !3229, file: !3229, line: 312, type: !12846, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12846 = !DISubroutineType(types: !12847)
!12847 = !{!3130}
!12848 = !DILocation(line: 314, column: 19, scope: !12845, inlinedAt: !12849)
!12849 = distinct !DILocation(line: 562, column: 28, scope: !12839)
!12850 = !DILocation(line: 239, column: 24, scope: !12851, inlinedAt: !12852)
!12851 = distinct !DISubprogram(name: "runq_best", scope: !3229, file: !3229, line: 237, type: !12846, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12852 = distinct !DILocation(line: 314, column: 28, scope: !12845, inlinedAt: !12849)
!12853 = !DILocation(line: 239, column: 9, scope: !12851, inlinedAt: !12852)
!12854 = !DILocation(line: 340, column: 10, scope: !12845, inlinedAt: !12849)
!12855 = !DILocation(line: 340, column: 17, scope: !12845, inlinedAt: !12849)
!12856 = !DILocation(line: 340, column: 9, scope: !12845, inlinedAt: !12849)
!12857 = !DILocation(line: 340, column: 28, scope: !12845, inlinedAt: !12849)
!12858 = !DILocation(line: 340, column: 51, scope: !12845, inlinedAt: !12849)
!12859 = !DILocation(line: 564, column: 21, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12839, file: !3229, line: 564, column: 6)
!12861 = !DILocation(line: 564, column: 29, scope: !12860)
!12862 = !DILocalVariable(name: "thread", arg: 1, scope: !12863, file: !3229, line: 127, type: !3130)
!12863 = distinct !DISubprogram(name: "should_preempt", scope: !3229, file: !3229, line: 127, type: !12864, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12864 = !DISubroutineType(types: !12865)
!12865 = !{!1035, !3130, !103}
!12866 = !DILocation(line: 127, column: 59, scope: !12863, inlinedAt: !12867)
!12867 = distinct !DILocation(line: 564, column: 6, scope: !12860)
!12868 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12863, file: !3229, line: 128, type: !103)
!12869 = !DILocation(line: 128, column: 11, scope: !12863, inlinedAt: !12867)
!12870 = !DILocation(line: 133, column: 6, scope: !12871, inlinedAt: !12867)
!12871 = distinct !DILexicalBlock(scope: !12863, file: !3229, line: 133, column: 6)
!12872 = !DILocation(line: 133, column: 17, scope: !12871, inlinedAt: !12867)
!12873 = !DILocation(line: 133, column: 6, scope: !12863, inlinedAt: !12867)
!12874 = !DILocation(line: 134, column: 3, scope: !12875, inlinedAt: !12867)
!12875 = distinct !DILexicalBlock(scope: !12871, file: !3229, line: 133, column: 23)
!12876 = !DILocation(line: 140, column: 41, scope: !12877, inlinedAt: !12867)
!12877 = distinct !DILexicalBlock(scope: !12863, file: !3229, line: 140, column: 6)
!12878 = !DILocation(line: 140, column: 6, scope: !12877, inlinedAt: !12867)
!12879 = !DILocation(line: 140, column: 6, scope: !12863, inlinedAt: !12867)
!12880 = !DILocation(line: 141, column: 3, scope: !12881, inlinedAt: !12867)
!12881 = distinct !DILexicalBlock(scope: !12877, file: !3229, line: 140, column: 52)
!12882 = !DILocation(line: 150, column: 36, scope: !12883, inlinedAt: !12867)
!12883 = distinct !DILexicalBlock(scope: !12863, file: !3229, line: 149, column: 6)
!12884 = !DILocation(line: 150, column: 9, scope: !12883, inlinedAt: !12867)
!12885 = !DILocation(line: 149, column: 6, scope: !12863, inlinedAt: !12867)
!12886 = !DILocation(line: 151, column: 3, scope: !12887, inlinedAt: !12867)
!12887 = distinct !DILexicalBlock(scope: !12883, file: !3229, line: 150, column: 45)
!12888 = !DILocation(line: 157, column: 17, scope: !12889, inlinedAt: !12867)
!12889 = distinct !DILexicalBlock(scope: !12863, file: !3229, line: 157, column: 6)
!12890 = !DILocation(line: 157, column: 6, scope: !12889, inlinedAt: !12867)
!12891 = !DILocation(line: 157, column: 27, scope: !12889, inlinedAt: !12867)
!12892 = !DILocation(line: 157, column: 41, scope: !12889, inlinedAt: !12867)
!12893 = !DILocation(line: 157, column: 30, scope: !12889, inlinedAt: !12867)
!12894 = !DILocation(line: 157, column: 6, scope: !12863, inlinedAt: !12867)
!12895 = !DILocation(line: 158, column: 3, scope: !12896, inlinedAt: !12867)
!12896 = distinct !DILexicalBlock(scope: !12889, file: !3229, line: 157, column: 50)
!12897 = !DILocation(line: 161, column: 2, scope: !12863, inlinedAt: !12867)
!12898 = !DILocation(line: 162, column: 1, scope: !12863, inlinedAt: !12867)
!12899 = !DILocation(line: 564, column: 6, scope: !12839)
!12900 = !DILocation(line: 566, column: 7, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12902, file: !3229, line: 566, column: 7)
!12902 = distinct !DILexicalBlock(scope: !12860, file: !3229, line: 564, column: 42)
!12903 = !DILocation(line: 566, column: 17, scope: !12901)
!12904 = !DILocation(line: 566, column: 14, scope: !12901)
!12905 = !DILocation(line: 566, column: 7, scope: !12902)
!12906 = !DILocation(line: 567, column: 23, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12901, file: !3229, line: 566, column: 27)
!12908 = !DILocation(line: 567, column: 4, scope: !12907)
!12909 = !DILocation(line: 568, column: 3, scope: !12907)
!12910 = !DILocation(line: 570, column: 26, scope: !12902)
!12911 = !DILocation(line: 570, column: 3, scope: !12902)
!12912 = !DILocation(line: 571, column: 27, scope: !12902)
!12913 = !DILocation(line: 571, column: 25, scope: !12902)
!12914 = !DILocation(line: 572, column: 2, scope: !12902)
!12915 = !DILocation(line: 573, column: 27, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12860, file: !3229, line: 572, column: 9)
!12917 = !DILocation(line: 573, column: 25, scope: !12916)
!12918 = !DILocation(line: 585, column: 1, scope: !12839)
!12919 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !3229, file: !3229, line: 1144, type: !12920, scopeLine: 1145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12920 = !DISubroutineType(types: !12921)
!12921 = !{!3130, !12697}
!12922 = !DILocalVariable(name: "pq", arg: 1, scope: !12919, file: !3229, line: 1144, type: !12697)
!12923 = !DILocation(line: 1144, column: 48, scope: !12919)
!12924 = !DILocalVariable(name: "thread", scope: !12919, file: !3229, line: 1146, type: !3130)
!12925 = !DILocation(line: 1146, column: 19, scope: !12919)
!12926 = !DILocalVariable(name: "n", scope: !12919, file: !3229, line: 1147, type: !3225)
!12927 = !DILocation(line: 1147, column: 15, scope: !12919)
!12928 = !DILocation(line: 1147, column: 39, scope: !12919)
!12929 = !DILocation(line: 1147, column: 19, scope: !12919)
!12930 = !DILocation(line: 1149, column: 6, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12919, file: !3229, line: 1149, column: 6)
!12932 = !DILocation(line: 1149, column: 8, scope: !12931)
!12933 = !DILocation(line: 1149, column: 6, scope: !12919)
!12934 = !DILocation(line: 1150, column: 12, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !12931, file: !3229, line: 1149, column: 17)
!12936 = !DILocation(line: 1150, column: 10, scope: !12935)
!12937 = !DILocation(line: 1151, column: 2, scope: !12935)
!12938 = !DILocation(line: 1152, column: 9, scope: !12919)
!12939 = !DILocation(line: 1152, column: 2, scope: !12919)
!12940 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11061, file: !11061, line: 115, type: !12575, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12941 = !DILocalVariable(name: "thread", arg: 1, scope: !12940, file: !11061, line: 115, type: !3130)
!12942 = !DILocation(line: 115, column: 64, scope: !12940)
!12943 = !DILocation(line: 117, column: 33, scope: !12940)
!12944 = !DILocation(line: 117, column: 41, scope: !12940)
!12945 = !DILocation(line: 117, column: 46, scope: !12940)
!12946 = !DILocation(line: 117, column: 10, scope: !12940)
!12947 = !DILocation(line: 117, column: 9, scope: !12940)
!12948 = !DILocation(line: 117, column: 2, scope: !12940)
!12949 = distinct !DISubprogram(name: "is_preempt", scope: !3229, file: !3229, line: 62, type: !12216, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12950 = !DILocalVariable(name: "thread", arg: 1, scope: !12949, file: !3229, line: 62, type: !3130)
!12951 = !DILocation(line: 62, column: 47, scope: !12949)
!12952 = !DILocation(line: 65, column: 9, scope: !12949)
!12953 = !DILocation(line: 65, column: 17, scope: !12949)
!12954 = !DILocation(line: 65, column: 22, scope: !12949)
!12955 = !DILocation(line: 65, column: 30, scope: !12949)
!12956 = !DILocation(line: 65, column: 2, scope: !12949)
!12957 = distinct !DISubprogram(name: "is_metairq", scope: !3229, file: !3229, line: 68, type: !12216, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12958 = !DILocalVariable(name: "thread", arg: 1, scope: !12957, file: !3229, line: 68, type: !3130)
!12959 = !DILocation(line: 68, column: 47, scope: !12957)
!12960 = !DILocation(line: 74, column: 2, scope: !12957)
!12961 = distinct !DISubprogram(name: "update_metairq_preempt", scope: !3229, file: !3229, line: 545, type: !12195, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12962 = !DILocalVariable(name: "thread", arg: 1, scope: !12961, file: !3229, line: 545, type: !3130)
!12963 = !DILocation(line: 545, column: 53, scope: !12961)
!12964 = !DILocation(line: 557, column: 1, scope: !12961)
!12965 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11660, file: !11660, line: 35, type: !12966, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12966 = !DISubroutineType(types: !12967)
!12967 = !{!1035, !12968}
!12968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12969, size: 32)
!12969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3181)
!12970 = !DILocalVariable(name: "to", arg: 1, scope: !12965, file: !11660, line: 35, type: !12968)
!12971 = !DILocation(line: 35, column: 65, scope: !12965)
!12972 = !DILocation(line: 37, column: 31, scope: !12965)
!12973 = !DILocation(line: 37, column: 35, scope: !12965)
!12974 = !DILocation(line: 37, column: 10, scope: !12965)
!12975 = !DILocation(line: 37, column: 9, scope: !12965)
!12976 = !DILocation(line: 37, column: 2, scope: !12965)
!12977 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !124, file: !124, line: 225, type: !12978, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12978 = !DISubroutineType(types: !12979)
!12979 = !{!1035, !12980}
!12980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12981, size: 32)
!12981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3140)
!12982 = !DILocalVariable(name: "node", arg: 1, scope: !12977, file: !124, line: 225, type: !12980)
!12983 = !DILocation(line: 225, column: 59, scope: !12977)
!12984 = !DILocation(line: 227, column: 9, scope: !12977)
!12985 = !DILocation(line: 227, column: 15, scope: !12977)
!12986 = !DILocation(line: 227, column: 20, scope: !12977)
!12987 = !DILocation(line: 227, column: 2, scope: !12977)
!12988 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !124, file: !124, line: 325, type: !12798, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!12989 = !DILocalVariable(name: "list", arg: 1, scope: !12988, file: !124, line: 325, type: !12697)
!12990 = !DILocation(line: 325, column: 70, scope: !12988)
!12991 = !DILocalVariable(name: "node", arg: 2, scope: !12988, file: !124, line: 326, type: !3225)
!12992 = !DILocation(line: 326, column: 21, scope: !12988)
!12993 = !DILocation(line: 328, column: 10, scope: !12988)
!12994 = !DILocation(line: 328, column: 18, scope: !12988)
!12995 = !DILocation(line: 328, column: 24, scope: !12988)
!12996 = !DILocation(line: 328, column: 15, scope: !12988)
!12997 = !DILocation(line: 328, column: 9, scope: !12988)
!12998 = !DILocation(line: 328, column: 39, scope: !12988)
!12999 = !DILocation(line: 328, column: 45, scope: !12988)
!13000 = !DILocation(line: 328, column: 2, scope: !12988)
!13001 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !124, file: !124, line: 266, type: !13002, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13002 = !DISubroutineType(types: !13003)
!13003 = !{!1035, !12697}
!13004 = !DILocalVariable(name: "list", arg: 1, scope: !13001, file: !124, line: 266, type: !12697)
!13005 = !DILocation(line: 266, column: 52, scope: !13001)
!13006 = !DILocation(line: 268, column: 9, scope: !13001)
!13007 = !DILocation(line: 268, column: 15, scope: !13001)
!13008 = !DILocation(line: 268, column: 23, scope: !13001)
!13009 = !DILocation(line: 268, column: 20, scope: !13001)
!13010 = !DILocation(line: 268, column: 2, scope: !13001)
!13011 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !124, file: !124, line: 496, type: !13012, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13012 = !DISubroutineType(types: !13013)
!13013 = !{null, !3225}
!13014 = !DILocalVariable(name: "node", arg: 1, scope: !13011, file: !124, line: 496, type: !3225)
!13015 = !DILocation(line: 496, column: 50, scope: !13011)
!13016 = !DILocalVariable(name: "prev", scope: !13011, file: !124, line: 498, type: !12776)
!13017 = !DILocation(line: 498, column: 21, scope: !13011)
!13018 = !DILocation(line: 498, column: 28, scope: !13011)
!13019 = !DILocation(line: 498, column: 34, scope: !13011)
!13020 = !DILocalVariable(name: "next", scope: !13011, file: !124, line: 499, type: !12776)
!13021 = !DILocation(line: 499, column: 21, scope: !13011)
!13022 = !DILocation(line: 499, column: 28, scope: !13011)
!13023 = !DILocation(line: 499, column: 34, scope: !13011)
!13024 = !DILocation(line: 501, column: 15, scope: !13011)
!13025 = !DILocation(line: 501, column: 2, scope: !13011)
!13026 = !DILocation(line: 501, column: 8, scope: !13011)
!13027 = !DILocation(line: 501, column: 13, scope: !13011)
!13028 = !DILocation(line: 502, column: 15, scope: !13011)
!13029 = !DILocation(line: 502, column: 2, scope: !13011)
!13030 = !DILocation(line: 502, column: 8, scope: !13011)
!13031 = !DILocation(line: 502, column: 13, scope: !13011)
!13032 = !DILocation(line: 503, column: 17, scope: !13011)
!13033 = !DILocation(line: 503, column: 2, scope: !13011)
!13034 = !DILocation(line: 504, column: 1, scope: !13011)
!13035 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !13012, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13036 = !DILocalVariable(name: "node", arg: 1, scope: !13035, file: !124, line: 211, type: !3225)
!13037 = !DILocation(line: 211, column: 48, scope: !13035)
!13038 = !DILocation(line: 213, column: 2, scope: !13035)
!13039 = !DILocation(line: 213, column: 8, scope: !13035)
!13040 = !DILocation(line: 213, column: 13, scope: !13035)
!13041 = !DILocation(line: 214, column: 2, scope: !13035)
!13042 = !DILocation(line: 214, column: 8, scope: !13035)
!13043 = !DILocation(line: 214, column: 13, scope: !13035)
!13044 = !DILocation(line: 215, column: 1, scope: !13035)
!13045 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11061, file: !11061, line: 131, type: !13046, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13046 = !DISubroutineType(types: !13047)
!13047 = !{!1035, !3130, !173}
!13048 = !DILocalVariable(name: "thread", arg: 1, scope: !13045, file: !11061, line: 131, type: !3130)
!13049 = !DILocation(line: 131, column: 59, scope: !13045)
!13050 = !DILocalVariable(name: "state", arg: 2, scope: !13045, file: !11061, line: 131, type: !173)
!13051 = !DILocation(line: 131, column: 76, scope: !13045)
!13052 = !DILocation(line: 133, column: 10, scope: !13045)
!13053 = !DILocation(line: 133, column: 18, scope: !13045)
!13054 = !DILocation(line: 133, column: 23, scope: !13045)
!13055 = !DILocation(line: 133, column: 38, scope: !13045)
!13056 = !DILocation(line: 133, column: 36, scope: !13045)
!13057 = !DILocation(line: 133, column: 45, scope: !13045)
!13058 = !DILocation(line: 133, column: 2, scope: !13045)
!13059 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11061, file: !11061, line: 211, type: !13060, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13060 = !DISubroutineType(types: !13061)
!13061 = !{!1035, !103, !103}
!13062 = !DILocalVariable(name: "prio", arg: 1, scope: !13059, file: !11061, line: 211, type: !103)
!13063 = !DILocation(line: 211, column: 41, scope: !13059)
!13064 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13059, file: !11061, line: 211, type: !103)
!13065 = !DILocation(line: 211, column: 51, scope: !13059)
!13066 = !DILocation(line: 213, column: 38, scope: !13059)
!13067 = !DILocation(line: 213, column: 44, scope: !13059)
!13068 = !DILocation(line: 213, column: 9, scope: !13059)
!13069 = !DILocation(line: 213, column: 2, scope: !13059)
!13070 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11061, file: !11061, line: 83, type: !12575, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13071 = !DILocalVariable(name: "thread", arg: 1, scope: !13070, file: !11061, line: 83, type: !3130)
!13072 = !DILocation(line: 83, column: 61, scope: !13070)
!13073 = !DILocation(line: 89, column: 9, scope: !13070)
!13074 = !DILocation(line: 89, column: 16, scope: !13070)
!13075 = !DILocation(line: 89, column: 2, scope: !13070)
!13076 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11061, file: !11061, line: 206, type: !13060, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13077 = !DILocalVariable(name: "prio1", arg: 1, scope: !13076, file: !11061, line: 206, type: !103)
!13078 = !DILocation(line: 206, column: 53, scope: !13076)
!13079 = !DILocalVariable(name: "prio2", arg: 2, scope: !13076, file: !11061, line: 206, type: !103)
!13080 = !DILocation(line: 206, column: 64, scope: !13076)
!13081 = !DILocation(line: 208, column: 9, scope: !13076)
!13082 = !DILocation(line: 208, column: 17, scope: !13076)
!13083 = !DILocation(line: 208, column: 15, scope: !13076)
!13084 = !DILocation(line: 208, column: 2, scope: !13076)
!13085 = distinct !DISubprogram(name: "z_ready_thread", scope: !3229, file: !3229, line: 635, type: !12195, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13086 = !DILocalVariable(name: "thread", arg: 1, scope: !13085, file: !3229, line: 635, type: !3130)
!13087 = !DILocation(line: 635, column: 38, scope: !13085)
!13088 = !DILocalVariable(name: "__i", scope: !13089, file: !3229, line: 637, type: !12234)
!13089 = distinct !DILexicalBlock(scope: !13085, file: !3229, line: 637, column: 2)
!13090 = !DILocation(line: 637, column: 2, scope: !13089)
!13091 = !DILocalVariable(name: "__key", scope: !13089, file: !3229, line: 637, type: !12234)
!13092 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !13093)
!13093 = distinct !DILocation(line: 637, column: 2, scope: !13089)
!13094 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !13093)
!13095 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !13093)
!13096 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !13097)
!13097 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !13093)
!13098 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !13097)
!13099 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !13097)
!13100 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !13093)
!13101 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !13093)
!13102 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !13093)
!13103 = !DILocation(line: 637, column: 2, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13089, file: !3229, line: 637, column: 2)
!13105 = !DILocation(line: 638, column: 32, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13107, file: !3229, line: 638, column: 7)
!13107 = distinct !DILexicalBlock(scope: !13104, file: !3229, line: 637, column: 26)
!13108 = !DILocation(line: 638, column: 8, scope: !13106)
!13109 = !DILocation(line: 638, column: 7, scope: !13107)
!13110 = !DILocation(line: 639, column: 17, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13106, file: !3229, line: 638, column: 41)
!13112 = !DILocation(line: 639, column: 4, scope: !13111)
!13113 = !DILocation(line: 640, column: 3, scope: !13111)
!13114 = !DILocation(line: 641, column: 2, scope: !13107)
!13115 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !13116)
!13116 = distinct !DILocation(line: 637, column: 2, scope: !13104)
!13117 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !13116)
!13118 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !13116)
!13119 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !13116)
!13120 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !13121)
!13121 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !13116)
!13122 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !13121)
!13123 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !13121)
!13124 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !13121)
!13125 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !13121)
!13126 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !13121)
!13127 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !13121)
!13128 = distinct !{!13128, !13090, !13129}
!13129 = !DILocation(line: 641, column: 2, scope: !13089)
!13130 = !DILocation(line: 642, column: 1, scope: !13085)
!13131 = distinct !DISubprogram(name: "thread_active_elsewhere", scope: !3229, file: !3229, line: 587, type: !12575, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13132 = !DILocalVariable(name: "thread", arg: 1, scope: !13131, file: !3229, line: 587, type: !3130)
!13133 = !DILocation(line: 587, column: 54, scope: !13131)
!13134 = !DILocation(line: 605, column: 2, scope: !13131)
!13135 = distinct !DISubprogram(name: "ready_thread", scope: !3229, file: !3229, line: 617, type: !12195, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13136 = !DILocalVariable(name: "thread", arg: 1, scope: !13135, file: !3229, line: 617, type: !3130)
!13137 = !DILocation(line: 617, column: 43, scope: !13135)
!13138 = !DILocation(line: 626, column: 26, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13135, file: !3229, line: 626, column: 6)
!13140 = !DILocation(line: 626, column: 7, scope: !13139)
!13141 = !DILocation(line: 626, column: 34, scope: !13139)
!13142 = !DILocation(line: 626, column: 55, scope: !13139)
!13143 = !DILocation(line: 626, column: 37, scope: !13139)
!13144 = !DILocation(line: 626, column: 6, scope: !13135)
!13145 = !DILocation(line: 627, column: 3, scope: !13146)
!13146 = distinct !DILexicalBlock(scope: !13139, file: !3229, line: 626, column: 64)
!13147 = !DILocation(line: 627, column: 3, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13146, file: !3229, line: 627, column: 3)
!13149 = !DILocation(line: 629, column: 16, scope: !13146)
!13150 = !DILocation(line: 250, column: 57, scope: !12672, inlinedAt: !13151)
!13151 = distinct !DILocation(line: 629, column: 3, scope: !13146)
!13152 = !DILocation(line: 252, column: 2, scope: !12672, inlinedAt: !13151)
!13153 = !DILocation(line: 252, column: 10, scope: !12672, inlinedAt: !13151)
!13154 = !DILocation(line: 252, column: 15, scope: !12672, inlinedAt: !13151)
!13155 = !DILocation(line: 252, column: 28, scope: !12672, inlinedAt: !13151)
!13156 = !DILocation(line: 253, column: 26, scope: !12680, inlinedAt: !13151)
!13157 = !DILocation(line: 253, column: 6, scope: !12680, inlinedAt: !13151)
!13158 = !DILocation(line: 253, column: 6, scope: !12672, inlinedAt: !13151)
!13159 = !DILocation(line: 254, column: 12, scope: !12684, inlinedAt: !13151)
!13160 = !DILocation(line: 227, column: 53, scope: !12686, inlinedAt: !13161)
!13161 = distinct !DILocation(line: 254, column: 3, scope: !12684, inlinedAt: !13151)
!13162 = !DILocation(line: 229, column: 28, scope: !12686, inlinedAt: !13161)
!13163 = !DILocation(line: 199, column: 57, scope: !12660, inlinedAt: !13164)
!13164 = distinct !DILocation(line: 229, column: 16, scope: !12686, inlinedAt: !13161)
!13165 = !DILocation(line: 229, column: 37, scope: !12686, inlinedAt: !13161)
!13166 = !DILocation(line: 181, column: 56, scope: !12694, inlinedAt: !13167)
!13167 = distinct !DILocation(line: 229, column: 2, scope: !12686, inlinedAt: !13161)
!13168 = !DILocation(line: 182, column: 25, scope: !12694, inlinedAt: !13167)
!13169 = !DILocation(line: 184, column: 19, scope: !12694, inlinedAt: !13167)
!13170 = !DILocation(line: 188, column: 2, scope: !12705, inlinedAt: !13167)
!13171 = !DILocation(line: 188, column: 2, scope: !12707, inlinedAt: !13167)
!13172 = !DILocation(line: 189, column: 24, scope: !12709, inlinedAt: !13167)
!13173 = !DILocation(line: 189, column: 32, scope: !12709, inlinedAt: !13167)
!13174 = !DILocation(line: 189, column: 7, scope: !12709, inlinedAt: !13167)
!13175 = !DILocation(line: 189, column: 35, scope: !12709, inlinedAt: !13167)
!13176 = !DILocation(line: 189, column: 7, scope: !12710, inlinedAt: !13167)
!13177 = !DILocation(line: 190, column: 22, scope: !12716, inlinedAt: !13167)
!13178 = !DILocation(line: 190, column: 25, scope: !12716, inlinedAt: !13167)
!13179 = !DILocation(line: 190, column: 30, scope: !12716, inlinedAt: !13167)
!13180 = !DILocation(line: 191, column: 8, scope: !12716, inlinedAt: !13167)
!13181 = !DILocation(line: 191, column: 16, scope: !12716, inlinedAt: !13167)
!13182 = !DILocation(line: 191, column: 21, scope: !12716, inlinedAt: !13167)
!13183 = !DILocation(line: 190, column: 4, scope: !12716, inlinedAt: !13167)
!13184 = !DILocation(line: 192, column: 4, scope: !12716, inlinedAt: !13167)
!13185 = distinct !{!13185, !13170, !13186}
!13186 = !DILocation(line: 194, column: 2, scope: !12705, inlinedAt: !13167)
!13187 = !DILocation(line: 196, column: 19, scope: !12694, inlinedAt: !13167)
!13188 = !DILocation(line: 196, column: 24, scope: !12694, inlinedAt: !13167)
!13189 = !DILocation(line: 196, column: 32, scope: !12694, inlinedAt: !13167)
!13190 = !DILocation(line: 196, column: 37, scope: !12694, inlinedAt: !13167)
!13191 = !DILocation(line: 196, column: 2, scope: !12694, inlinedAt: !13167)
!13192 = !DILocation(line: 197, column: 1, scope: !12694, inlinedAt: !13167)
!13193 = !DILocation(line: 255, column: 2, scope: !12684, inlinedAt: !13151)
!13194 = !DILocation(line: 630, column: 3, scope: !13146)
!13195 = !DILocation(line: 631, column: 3, scope: !13146)
!13196 = !DILocation(line: 632, column: 2, scope: !13146)
!13197 = !DILocation(line: 633, column: 1, scope: !13135)
!13198 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11061, file: !11061, line: 120, type: !12575, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13199 = !DILocalVariable(name: "thread", arg: 1, scope: !13198, file: !11061, line: 120, type: !3130)
!13200 = !DILocation(line: 120, column: 55, scope: !13198)
!13201 = !DILocation(line: 122, column: 47, scope: !13198)
!13202 = !DILocation(line: 122, column: 12, scope: !13198)
!13203 = !DILocation(line: 122, column: 11, scope: !13198)
!13204 = !DILocation(line: 122, column: 56, scope: !13198)
!13205 = !DILocation(line: 122, column: 62, scope: !13198)
!13206 = !DILocation(line: 123, column: 31, scope: !13198)
!13207 = !DILocation(line: 123, column: 4, scope: !13198)
!13208 = !DILocation(line: 122, column: 9, scope: !13198)
!13209 = !DILocation(line: 122, column: 2, scope: !13198)
!13210 = distinct !DISubprogram(name: "flag_ipi", scope: !3229, file: !3229, line: 608, type: !253, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13211 = !DILocation(line: 615, column: 1, scope: !13210)
!13212 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !3229, file: !3229, line: 644, type: !12195, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13213 = !DILocalVariable(name: "thread", arg: 1, scope: !13212, file: !3229, line: 644, type: !3130)
!13214 = !DILocation(line: 644, column: 54, scope: !13212)
!13215 = !DILocalVariable(name: "__i", scope: !13216, file: !3229, line: 646, type: !12234)
!13216 = distinct !DILexicalBlock(scope: !13212, file: !3229, line: 646, column: 2)
!13217 = !DILocation(line: 646, column: 2, scope: !13216)
!13218 = !DILocalVariable(name: "__key", scope: !13216, file: !3229, line: 646, type: !12234)
!13219 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !13220)
!13220 = distinct !DILocation(line: 646, column: 2, scope: !13216)
!13221 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !13220)
!13222 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !13220)
!13223 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !13224)
!13224 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !13220)
!13225 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !13224)
!13226 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !13224)
!13227 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !13220)
!13228 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !13220)
!13229 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !13220)
!13230 = !DILocation(line: 646, column: 2, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13216, file: !3229, line: 646, column: 2)
!13232 = !DILocation(line: 647, column: 32, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13231, file: !3229, line: 646, column: 26)
!13234 = !DILocation(line: 647, column: 3, scope: !13233)
!13235 = !DILocation(line: 648, column: 2, scope: !13233)
!13236 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !13237)
!13237 = distinct !DILocation(line: 646, column: 2, scope: !13231)
!13238 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !13237)
!13239 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !13237)
!13240 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !13237)
!13241 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !13242)
!13242 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !13237)
!13243 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !13242)
!13244 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !13242)
!13245 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !13242)
!13246 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !13242)
!13247 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !13242)
!13248 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !13242)
!13249 = distinct !{!13249, !13217, !13250}
!13250 = !DILocation(line: 648, column: 2, scope: !13216)
!13251 = !DILocation(line: 649, column: 1, scope: !13212)
!13252 = distinct !DISubprogram(name: "z_sched_start", scope: !3229, file: !3229, line: 651, type: !12195, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13253 = !DILocalVariable(name: "thread", arg: 1, scope: !13252, file: !3229, line: 651, type: !3130)
!13254 = !DILocation(line: 651, column: 37, scope: !13252)
!13255 = !DILocalVariable(name: "key", scope: !13252, file: !3229, line: 653, type: !12234)
!13256 = !DILocation(line: 653, column: 19, scope: !13252)
!13257 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !13258)
!13258 = distinct !DILocation(line: 653, column: 25, scope: !13252)
!13259 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !13258)
!13260 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !13258)
!13261 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !13262)
!13262 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !13258)
!13263 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !13262)
!13264 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !13262)
!13265 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !13258)
!13266 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !13258)
!13267 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !13258)
!13268 = !DILocation(line: 653, column: 25, scope: !13252)
!13269 = !DILocation(line: 655, column: 27, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13252, file: !3229, line: 655, column: 6)
!13271 = !DILocation(line: 655, column: 6, scope: !13270)
!13272 = !DILocation(line: 655, column: 6, scope: !13252)
!13273 = !DILocation(line: 656, column: 3, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13270, file: !3229, line: 655, column: 36)
!13275 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !13276)
!13276 = distinct !DILocation(line: 656, column: 3, scope: !13274)
!13277 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !13276)
!13278 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !13276)
!13279 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !13276)
!13280 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !13281)
!13281 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !13276)
!13282 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !13281)
!13283 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !13281)
!13284 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !13281)
!13285 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !13281)
!13286 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !13281)
!13287 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !13281)
!13288 = !DILocation(line: 657, column: 3, scope: !13274)
!13289 = !DILocation(line: 660, column: 27, scope: !13252)
!13290 = !DILocation(line: 660, column: 2, scope: !13252)
!13291 = !DILocation(line: 661, column: 15, scope: !13252)
!13292 = !DILocation(line: 661, column: 2, scope: !13252)
!13293 = !DILocation(line: 662, column: 2, scope: !13252)
!13294 = !DILocation(line: 663, column: 1, scope: !13252)
!13295 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11061, file: !11061, line: 126, type: !12575, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13296 = !DILocalVariable(name: "thread", arg: 1, scope: !13295, file: !11061, line: 126, type: !3130)
!13297 = !DILocation(line: 126, column: 58, scope: !13295)
!13298 = !DILocation(line: 128, column: 10, scope: !13295)
!13299 = !DILocation(line: 128, column: 18, scope: !13295)
!13300 = !DILocation(line: 128, column: 23, scope: !13295)
!13301 = !DILocation(line: 128, column: 36, scope: !13295)
!13302 = !DILocation(line: 128, column: 56, scope: !13295)
!13303 = !DILocation(line: 128, column: 2, scope: !13295)
!13304 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11061, file: !11061, line: 155, type: !12195, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13305 = !DILocalVariable(name: "thread", arg: 1, scope: !13304, file: !11061, line: 155, type: !3130)
!13306 = !DILocation(line: 155, column: 62, scope: !13304)
!13307 = !DILocation(line: 157, column: 2, scope: !13304)
!13308 = !DILocation(line: 157, column: 10, scope: !13304)
!13309 = !DILocation(line: 157, column: 15, scope: !13304)
!13310 = !DILocation(line: 157, column: 28, scope: !13304)
!13311 = !DILocation(line: 158, column: 1, scope: !13304)
!13312 = distinct !DISubprogram(name: "z_reschedule", scope: !3229, file: !3229, line: 967, type: !12282, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13313 = !DILocalVariable(name: "lock", arg: 1, scope: !13312, file: !3229, line: 967, type: !12244)
!13314 = !DILocation(line: 967, column: 38, scope: !13312)
!13315 = !DILocalVariable(name: "key", arg: 2, scope: !13312, file: !3229, line: 967, type: !12234)
!13316 = !DILocation(line: 967, column: 61, scope: !13312)
!13317 = !DILocation(line: 969, column: 18, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13312, file: !3229, line: 969, column: 6)
!13319 = !DILocation(line: 969, column: 6, scope: !13318)
!13320 = !DILocation(line: 969, column: 23, scope: !13318)
!13321 = !DILocation(line: 969, column: 26, scope: !13318)
!13322 = !DILocation(line: 969, column: 6, scope: !13312)
!13323 = !DILocation(line: 970, column: 10, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13318, file: !3229, line: 969, column: 39)
!13325 = !DILocation(line: 970, column: 3, scope: !13324)
!13326 = !DILocalVariable(name: "lock", arg: 1, scope: !13327, file: !11227, line: 193, type: !12244)
!13327 = distinct !DISubprogram(name: "z_swap", scope: !11227, file: !11227, line: 193, type: !13328, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13328 = !DISubroutineType(types: !13329)
!13329 = !{!103, !12244, !12234}
!13330 = !DILocation(line: 193, column: 52, scope: !13327, inlinedAt: !13331)
!13331 = distinct !DILocation(line: 970, column: 3, scope: !13324)
!13332 = !DILocalVariable(name: "key", arg: 2, scope: !13327, file: !11227, line: 193, type: !12234)
!13333 = !DILocation(line: 193, column: 75, scope: !13327, inlinedAt: !13331)
!13334 = !DILocation(line: 195, column: 17, scope: !13327, inlinedAt: !13331)
!13335 = !DILocalVariable(name: "l", arg: 1, scope: !13336, file: !222, line: 221, type: !12244)
!13336 = distinct !DISubprogram(name: "k_spin_release", scope: !222, file: !222, line: 221, type: !13337, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13337 = !DISubroutineType(types: !13338)
!13338 = !{null, !12244}
!13339 = !DILocation(line: 221, column: 61, scope: !13336, inlinedAt: !13340)
!13340 = distinct !DILocation(line: 195, column: 2, scope: !13327, inlinedAt: !13331)
!13341 = !DILocation(line: 223, column: 2, scope: !13336, inlinedAt: !13340)
!13342 = !DILocation(line: 196, column: 28, scope: !13327, inlinedAt: !13331)
!13343 = !DILocation(line: 196, column: 9, scope: !13327, inlinedAt: !13331)
!13344 = !DILocation(line: 971, column: 2, scope: !13324)
!13345 = !DILocation(line: 972, column: 17, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13318, file: !3229, line: 971, column: 9)
!13347 = !DILocation(line: 972, column: 3, scope: !13346)
!13348 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !13349)
!13349 = distinct !DILocation(line: 972, column: 3, scope: !13346)
!13350 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !13349)
!13351 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !13349)
!13352 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !13349)
!13353 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !13354)
!13354 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !13349)
!13355 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !13354)
!13356 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !13354)
!13357 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !13354)
!13358 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !13354)
!13359 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !13354)
!13360 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !13354)
!13361 = !DILocation(line: 973, column: 3, scope: !13346)
!13362 = !DILocation(line: 975, column: 1, scope: !13312)
!13363 = distinct !DISubprogram(name: "resched", scope: !3229, file: !3229, line: 940, type: !13364, scopeLine: 941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13364 = !DISubroutineType(types: !13365)
!13365 = !{!1035, !173}
!13366 = !DILocalVariable(name: "key", arg: 1, scope: !13363, file: !3229, line: 940, type: !173)
!13367 = !DILocation(line: 940, column: 37, scope: !13363)
!13368 = !DILocation(line: 946, column: 27, scope: !13363)
!13369 = !DILocalVariable(name: "key", arg: 1, scope: !13370, file: !6329, line: 112, type: !32)
!13370 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6329, file: !6329, line: 112, type: !13371, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13371 = !DISubroutineType(types: !13372)
!13372 = !{!1035, !32}
!13373 = !DILocation(line: 112, column: 58, scope: !13370, inlinedAt: !13374)
!13374 = distinct !DILocation(line: 946, column: 9, scope: !13363)
!13375 = !DILocation(line: 115, column: 9, scope: !13370, inlinedAt: !13374)
!13376 = !DILocation(line: 115, column: 13, scope: !13370, inlinedAt: !13374)
!13377 = !DILocation(line: 946, column: 32, scope: !13363)
!13378 = !DILocalVariable(name: "result", scope: !13379, file: !6645, line: 1029, type: !173)
!13379 = distinct !DISubprogram(name: "__get_IPSR", scope: !6645, file: !6645, line: 1027, type: !7427, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13380 = !DILocation(line: 1029, column: 12, scope: !13379, inlinedAt: !13381)
!13381 = distinct !DILocation(line: 48, column: 10, scope: !13382, inlinedAt: !13383)
!13382 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7432, file: !7432, line: 46, type: !3780, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13383 = distinct !DILocation(line: 946, column: 36, scope: !13363)
!13384 = !DILocation(line: 1031, column: 3, scope: !13379, inlinedAt: !13381)
!13385 = !{i64 2379799}
!13386 = !DILocation(line: 1032, column: 10, scope: !13379, inlinedAt: !13381)
!13387 = !DILocation(line: 48, column: 9, scope: !13382, inlinedAt: !13383)
!13388 = !DILocation(line: 946, column: 35, scope: !13363)
!13389 = !DILocation(line: 0, scope: !13363)
!13390 = !DILocation(line: 946, column: 2, scope: !13363)
!13391 = distinct !DISubprogram(name: "need_swap", scope: !3229, file: !3229, line: 953, type: !3780, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13392 = !DILocalVariable(name: "new_thread", scope: !13391, file: !3229, line: 959, type: !3130)
!13393 = !DILocation(line: 959, column: 19, scope: !13391)
!13394 = !DILocation(line: 962, column: 31, scope: !13391)
!13395 = !DILocation(line: 962, column: 13, scope: !13391)
!13396 = !DILocation(line: 963, column: 9, scope: !13391)
!13397 = !DILocation(line: 963, column: 23, scope: !13391)
!13398 = !DILocation(line: 963, column: 20, scope: !13391)
!13399 = !DILocation(line: 963, column: 2, scope: !13391)
!13400 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11227, file: !11227, line: 181, type: !6655, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13401 = !DILocalVariable(name: "key", arg: 1, scope: !13400, file: !11227, line: 181, type: !32)
!13402 = !DILocation(line: 181, column: 47, scope: !13400)
!13403 = !DILocalVariable(name: "ret", scope: !13400, file: !11227, line: 183, type: !103)
!13404 = !DILocation(line: 183, column: 6, scope: !13400)
!13405 = !DILocation(line: 185, column: 18, scope: !13400)
!13406 = !DILocation(line: 185, column: 8, scope: !13400)
!13407 = !DILocation(line: 185, column: 6, scope: !13400)
!13408 = !DILocation(line: 186, column: 9, scope: !13400)
!13409 = !DILocation(line: 186, column: 2, scope: !13400)
!13410 = distinct !DISubprogram(name: "signal_pending_ipi", scope: !3229, file: !3229, line: 272, type: !253, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13411 = !DILocation(line: 289, column: 1, scope: !13410)
!13412 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !3229, file: !3229, line: 665, type: !12195, scopeLine: 666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13413 = !DILocalVariable(name: "thread", arg: 1, scope: !13412, file: !3229, line: 665, type: !3130)
!13414 = !DILocation(line: 665, column: 47, scope: !13412)
!13415 = !DILocation(line: 667, column: 2, scope: !13412)
!13416 = !DILocation(line: 667, column: 2, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13412, file: !3229, line: 667, column: 2)
!13418 = !DILocation(line: 669, column: 31, scope: !13412)
!13419 = !DILocation(line: 669, column: 8, scope: !13412)
!13420 = !DILocalVariable(name: "__i", scope: !13421, file: !3229, line: 671, type: !12234)
!13421 = distinct !DILexicalBlock(scope: !13412, file: !3229, line: 671, column: 2)
!13422 = !DILocation(line: 671, column: 2, scope: !13421)
!13423 = !DILocalVariable(name: "__key", scope: !13421, file: !3229, line: 671, type: !12234)
!13424 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !13425)
!13425 = distinct !DILocation(line: 671, column: 2, scope: !13421)
!13426 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !13425)
!13427 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !13425)
!13428 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !13429)
!13429 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !13425)
!13430 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !13429)
!13431 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !13429)
!13432 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !13425)
!13433 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !13425)
!13434 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !13425)
!13435 = !DILocation(line: 671, column: 2, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13421, file: !3229, line: 671, column: 2)
!13437 = !DILocation(line: 672, column: 26, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13439, file: !3229, line: 672, column: 7)
!13439 = distinct !DILexicalBlock(scope: !13436, file: !3229, line: 671, column: 26)
!13440 = !DILocation(line: 672, column: 7, scope: !13438)
!13441 = !DILocation(line: 672, column: 7, scope: !13439)
!13442 = !DILocation(line: 673, column: 19, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13438, file: !3229, line: 672, column: 35)
!13444 = !DILocation(line: 264, column: 59, scope: !12641, inlinedAt: !13445)
!13445 = distinct !DILocation(line: 673, column: 4, scope: !13443)
!13446 = !DILocation(line: 266, column: 2, scope: !12641, inlinedAt: !13445)
!13447 = !DILocation(line: 266, column: 10, scope: !12641, inlinedAt: !13445)
!13448 = !DILocation(line: 266, column: 15, scope: !12641, inlinedAt: !13445)
!13449 = !DILocation(line: 266, column: 28, scope: !12641, inlinedAt: !13445)
!13450 = !DILocation(line: 267, column: 26, scope: !12649, inlinedAt: !13445)
!13451 = !DILocation(line: 267, column: 6, scope: !12649, inlinedAt: !13445)
!13452 = !DILocation(line: 267, column: 6, scope: !12641, inlinedAt: !13445)
!13453 = !DILocation(line: 268, column: 15, scope: !12653, inlinedAt: !13445)
!13454 = !DILocation(line: 232, column: 56, scope: !12655, inlinedAt: !13455)
!13455 = distinct !DILocation(line: 268, column: 3, scope: !12653, inlinedAt: !13445)
!13456 = !DILocation(line: 234, column: 31, scope: !12655, inlinedAt: !13455)
!13457 = !DILocation(line: 199, column: 57, scope: !12660, inlinedAt: !13458)
!13458 = distinct !DILocation(line: 234, column: 19, scope: !12655, inlinedAt: !13455)
!13459 = !DILocation(line: 234, column: 19, scope: !12655, inlinedAt: !13455)
!13460 = !DILocation(line: 234, column: 40, scope: !12655, inlinedAt: !13455)
!13461 = !DILocation(line: 234, column: 2, scope: !12655, inlinedAt: !13455)
!13462 = !DILocation(line: 269, column: 2, scope: !12653, inlinedAt: !13445)
!13463 = !DILocation(line: 674, column: 3, scope: !13443)
!13464 = !DILocation(line: 675, column: 30, scope: !13439)
!13465 = !DILocation(line: 675, column: 3, scope: !13439)
!13466 = !DILocation(line: 676, column: 16, scope: !13439)
!13467 = !DILocation(line: 676, column: 26, scope: !13439)
!13468 = !DILocation(line: 676, column: 23, scope: !13439)
!13469 = !DILocation(line: 676, column: 3, scope: !13439)
!13470 = !DILocation(line: 677, column: 2, scope: !13439)
!13471 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !13472)
!13472 = distinct !DILocation(line: 671, column: 2, scope: !13436)
!13473 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !13472)
!13474 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !13472)
!13475 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !13472)
!13476 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !13477)
!13477 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !13472)
!13478 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !13477)
!13479 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !13477)
!13480 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !13477)
!13481 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !13477)
!13482 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !13477)
!13483 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !13477)
!13484 = distinct !{!13484, !13422, !13485}
!13485 = !DILocation(line: 677, column: 2, scope: !13421)
!13486 = !DILocation(line: 679, column: 6, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13412, file: !3229, line: 679, column: 6)
!13488 = !DILocation(line: 679, column: 16, scope: !13487)
!13489 = !DILocation(line: 679, column: 13, scope: !13487)
!13490 = !DILocation(line: 679, column: 6, scope: !13412)
!13491 = !DILocation(line: 680, column: 3, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13487, file: !3229, line: 679, column: 26)
!13493 = !DILocation(line: 681, column: 2, scope: !13492)
!13494 = !DILocation(line: 683, column: 2, scope: !13412)
!13495 = !DILocation(line: 683, column: 2, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13412, file: !3229, line: 683, column: 2)
!13497 = !DILocation(line: 684, column: 1, scope: !13412)
!13498 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11660, file: !11660, line: 52, type: !12216, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13499 = !DILocalVariable(name: "thread", arg: 1, scope: !13498, file: !11660, line: 52, type: !3130)
!13500 = !DILocation(line: 52, column: 59, scope: !13498)
!13501 = !DILocation(line: 54, column: 26, scope: !13498)
!13502 = !DILocation(line: 54, column: 34, scope: !13498)
!13503 = !DILocation(line: 54, column: 39, scope: !13498)
!13504 = !DILocation(line: 54, column: 9, scope: !13498)
!13505 = !DILocation(line: 54, column: 2, scope: !13498)
!13506 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11061, file: !11061, line: 141, type: !12195, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13507 = !DILocalVariable(name: "thread", arg: 1, scope: !13506, file: !11061, line: 141, type: !3130)
!13508 = !DILocation(line: 141, column: 64, scope: !13506)
!13509 = !DILocation(line: 143, column: 2, scope: !13506)
!13510 = !DILocation(line: 143, column: 10, scope: !13506)
!13511 = !DILocation(line: 143, column: 15, scope: !13506)
!13512 = !DILocation(line: 143, column: 28, scope: !13506)
!13513 = !DILocation(line: 145, column: 2, scope: !13506)
!13514 = !DILocation(line: 145, column: 2, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13506, file: !11061, line: 145, column: 2)
!13516 = !DILocation(line: 146, column: 1, scope: !13506)
!13517 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11061, file: !11061, line: 73, type: !253, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13518 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !13519)
!13519 = distinct !DILocation(line: 75, column: 30, scope: !13517)
!13520 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !13519)
!13521 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !13519)
!13522 = !DILocation(line: 75, column: 9, scope: !13517)
!13523 = !DILocation(line: 76, column: 1, scope: !13517)
!13524 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !3229, file: !3229, line: 977, type: !11088, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13525 = !DILocalVariable(name: "key", arg: 1, scope: !13524, file: !3229, line: 977, type: !173)
!13526 = !DILocation(line: 977, column: 36, scope: !13524)
!13527 = !DILocation(line: 979, column: 14, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13524, file: !3229, line: 979, column: 6)
!13529 = !DILocation(line: 979, column: 6, scope: !13528)
!13530 = !DILocation(line: 979, column: 6, scope: !13524)
!13531 = !DILocation(line: 980, column: 18, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13528, file: !3229, line: 979, column: 20)
!13533 = !DILocation(line: 980, column: 3, scope: !13532)
!13534 = !DILocation(line: 981, column: 2, scope: !13532)
!13535 = !DILocation(line: 982, column: 3, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13528, file: !3229, line: 981, column: 9)
!13537 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !13538)
!13538 = distinct !DILocation(line: 982, column: 3, scope: !13536)
!13539 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !13538)
!13540 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !13538)
!13541 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !13538)
!13542 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !13538)
!13543 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !13538)
!13544 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !13538)
!13545 = !DILocation(line: 983, column: 3, scope: !13536)
!13546 = !DILocation(line: 985, column: 1, scope: !13524)
!13547 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !3229, file: !3229, line: 695, type: !12195, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13548 = !DILocalVariable(name: "thread", arg: 1, scope: !13547, file: !3229, line: 695, type: !3130)
!13549 = !DILocation(line: 695, column: 46, scope: !13547)
!13550 = !DILocation(line: 697, column: 2, scope: !13547)
!13551 = !DILocation(line: 697, column: 2, scope: !13552)
!13552 = distinct !DILexicalBlock(scope: !13547, file: !3229, line: 697, column: 2)
!13553 = !DILocalVariable(name: "key", scope: !13547, file: !3229, line: 699, type: !12234)
!13554 = !DILocation(line: 699, column: 19, scope: !13547)
!13555 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !13556)
!13556 = distinct !DILocation(line: 699, column: 25, scope: !13547)
!13557 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !13556)
!13558 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !13556)
!13559 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !13560)
!13560 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !13556)
!13561 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !13560)
!13562 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !13560)
!13563 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !13556)
!13564 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !13556)
!13565 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !13556)
!13566 = !DILocation(line: 699, column: 25, scope: !13547)
!13567 = !DILocation(line: 702, column: 29, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13547, file: !3229, line: 702, column: 6)
!13569 = !DILocation(line: 702, column: 7, scope: !13568)
!13570 = !DILocation(line: 702, column: 6, scope: !13547)
!13571 = !DILocation(line: 703, column: 3, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13568, file: !3229, line: 702, column: 38)
!13573 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !13574)
!13574 = distinct !DILocation(line: 703, column: 3, scope: !13572)
!13575 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !13574)
!13576 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !13574)
!13577 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !13574)
!13578 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !13579)
!13579 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !13574)
!13580 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !13579)
!13581 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !13579)
!13582 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !13579)
!13583 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !13579)
!13584 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !13579)
!13585 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !13579)
!13586 = !DILocation(line: 704, column: 3, scope: !13572)
!13587 = !DILocation(line: 707, column: 33, scope: !13547)
!13588 = !DILocation(line: 707, column: 2, scope: !13547)
!13589 = !DILocation(line: 708, column: 15, scope: !13547)
!13590 = !DILocation(line: 708, column: 2, scope: !13547)
!13591 = !DILocation(line: 710, column: 2, scope: !13547)
!13592 = !DILocation(line: 712, column: 2, scope: !13547)
!13593 = !DILocation(line: 712, column: 2, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13547, file: !3229, line: 712, column: 2)
!13595 = !DILocation(line: 713, column: 1, scope: !13547)
!13596 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11061, file: !11061, line: 96, type: !12575, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13597 = !DILocalVariable(name: "thread", arg: 1, scope: !13596, file: !11061, line: 96, type: !3130)
!13598 = !DILocation(line: 96, column: 59, scope: !13596)
!13599 = !DILocation(line: 98, column: 10, scope: !13596)
!13600 = !DILocation(line: 98, column: 18, scope: !13596)
!13601 = !DILocation(line: 98, column: 23, scope: !13596)
!13602 = !DILocation(line: 98, column: 36, scope: !13596)
!13603 = !DILocation(line: 98, column: 57, scope: !13596)
!13604 = !DILocation(line: 98, column: 2, scope: !13596)
!13605 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11061, file: !11061, line: 148, type: !12195, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13606 = !DILocalVariable(name: "thread", arg: 1, scope: !13605, file: !11061, line: 148, type: !3130)
!13607 = !DILocation(line: 148, column: 68, scope: !13605)
!13608 = !DILocation(line: 150, column: 2, scope: !13605)
!13609 = !DILocation(line: 150, column: 10, scope: !13605)
!13610 = !DILocation(line: 150, column: 15, scope: !13605)
!13611 = !DILocation(line: 150, column: 28, scope: !13605)
!13612 = !DILocation(line: 152, column: 2, scope: !13605)
!13613 = !DILocation(line: 152, column: 2, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13605, file: !11061, line: 152, column: 2)
!13615 = !DILocation(line: 153, column: 1, scope: !13605)
!13616 = distinct !DISubprogram(name: "z_pend_thread", scope: !3229, file: !3229, line: 770, type: !13617, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13617 = !DISubroutineType(types: !13618)
!13618 = !{null, !3130, !3161, !13619}
!13619 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2527, line: 67, baseType: !13620)
!13620 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2527, line: 65, size: 64, elements: !13621)
!13621 = !{!13622}
!13622 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13620, file: !2527, line: 66, baseType: !2526, size: 64)
!13623 = !DILocalVariable(name: "thread", arg: 1, scope: !13616, file: !3229, line: 770, type: !3130)
!13624 = !DILocation(line: 770, column: 37, scope: !13616)
!13625 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13616, file: !3229, line: 770, type: !3161)
!13626 = !DILocation(line: 770, column: 56, scope: !13616)
!13627 = !DILocalVariable(name: "timeout", arg: 3, scope: !13616, file: !3229, line: 771, type: !13619)
!13628 = !DILocation(line: 771, column: 18, scope: !13616)
!13629 = !DILocalVariable(name: "__i", scope: !13630, file: !3229, line: 774, type: !12234)
!13630 = distinct !DILexicalBlock(scope: !13616, file: !3229, line: 774, column: 2)
!13631 = !DILocation(line: 774, column: 2, scope: !13630)
!13632 = !DILocalVariable(name: "__key", scope: !13630, file: !3229, line: 774, type: !12234)
!13633 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !13634)
!13634 = distinct !DILocation(line: 774, column: 2, scope: !13630)
!13635 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !13634)
!13636 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !13634)
!13637 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !13638)
!13638 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !13634)
!13639 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !13638)
!13640 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !13638)
!13641 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !13634)
!13642 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !13634)
!13643 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !13634)
!13644 = !DILocation(line: 774, column: 2, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13630, file: !3229, line: 774, column: 2)
!13646 = !DILocation(line: 775, column: 15, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13645, file: !3229, line: 774, column: 26)
!13648 = !DILocation(line: 775, column: 23, scope: !13647)
!13649 = !DILocation(line: 775, column: 3, scope: !13647)
!13650 = !DILocation(line: 776, column: 2, scope: !13647)
!13651 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !13652)
!13652 = distinct !DILocation(line: 774, column: 2, scope: !13645)
!13653 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !13652)
!13654 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !13652)
!13655 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !13652)
!13656 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !13657)
!13657 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !13652)
!13658 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !13657)
!13659 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !13657)
!13660 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !13657)
!13661 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !13657)
!13662 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !13657)
!13663 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !13657)
!13664 = distinct !{!13664, !13631, !13665}
!13665 = !DILocation(line: 776, column: 2, scope: !13630)
!13666 = !DILocation(line: 777, column: 1, scope: !13616)
!13667 = distinct !DISubprogram(name: "pend_locked", scope: !3229, file: !3229, line: 760, type: !13617, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13668 = !DILocalVariable(name: "thread", arg: 1, scope: !13667, file: !3229, line: 760, type: !3130)
!13669 = !DILocation(line: 760, column: 42, scope: !13667)
!13670 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13667, file: !3229, line: 760, type: !3161)
!13671 = !DILocation(line: 760, column: 61, scope: !13667)
!13672 = !DILocalVariable(name: "timeout", arg: 3, scope: !13667, file: !3229, line: 761, type: !13619)
!13673 = !DILocation(line: 761, column: 16, scope: !13667)
!13674 = !DILocation(line: 766, column: 22, scope: !13667)
!13675 = !DILocation(line: 766, column: 30, scope: !13667)
!13676 = !DILocation(line: 766, column: 2, scope: !13667)
!13677 = !DILocation(line: 767, column: 21, scope: !13667)
!13678 = !DILocation(line: 767, column: 2, scope: !13667)
!13679 = !DILocation(line: 768, column: 1, scope: !13667)
!13680 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !3229, file: !3229, line: 740, type: !13681, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13681 = !DISubroutineType(types: !13682)
!13682 = !{null, !3130, !3161}
!13683 = !DILocalVariable(name: "thread", arg: 1, scope: !13680, file: !3229, line: 740, type: !3130)
!13684 = !DILocation(line: 740, column: 50, scope: !13680)
!13685 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13680, file: !3229, line: 740, type: !3161)
!13686 = !DILocation(line: 740, column: 69, scope: !13680)
!13687 = !DILocation(line: 742, column: 17, scope: !13680)
!13688 = !DILocation(line: 742, column: 2, scope: !13680)
!13689 = !DILocation(line: 743, column: 27, scope: !13680)
!13690 = !DILocation(line: 743, column: 2, scope: !13680)
!13691 = !DILocation(line: 745, column: 2, scope: !13680)
!13692 = !DILocation(line: 745, column: 2, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13680, file: !3229, line: 745, column: 2)
!13694 = !DILocation(line: 747, column: 6, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13680, file: !3229, line: 747, column: 6)
!13696 = !DILocation(line: 747, column: 13, scope: !13695)
!13697 = !DILocation(line: 747, column: 6, scope: !13680)
!13698 = !DILocation(line: 748, column: 28, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13695, file: !3229, line: 747, column: 22)
!13700 = !DILocation(line: 748, column: 3, scope: !13699)
!13701 = !DILocation(line: 748, column: 11, scope: !13699)
!13702 = !DILocation(line: 748, column: 16, scope: !13699)
!13703 = !DILocation(line: 748, column: 26, scope: !13699)
!13704 = !DILocation(line: 749, column: 20, scope: !13699)
!13705 = !DILocation(line: 749, column: 28, scope: !13699)
!13706 = !DILocation(line: 749, column: 35, scope: !13699)
!13707 = !DILocation(line: 181, column: 56, scope: !12694, inlinedAt: !13708)
!13708 = distinct !DILocation(line: 749, column: 3, scope: !13699)
!13709 = !DILocation(line: 182, column: 25, scope: !12694, inlinedAt: !13708)
!13710 = !DILocation(line: 184, column: 19, scope: !12694, inlinedAt: !13708)
!13711 = !DILocation(line: 188, column: 2, scope: !12705, inlinedAt: !13708)
!13712 = !DILocation(line: 188, column: 2, scope: !12707, inlinedAt: !13708)
!13713 = !DILocation(line: 189, column: 24, scope: !12709, inlinedAt: !13708)
!13714 = !DILocation(line: 189, column: 32, scope: !12709, inlinedAt: !13708)
!13715 = !DILocation(line: 189, column: 7, scope: !12709, inlinedAt: !13708)
!13716 = !DILocation(line: 189, column: 35, scope: !12709, inlinedAt: !13708)
!13717 = !DILocation(line: 189, column: 7, scope: !12710, inlinedAt: !13708)
!13718 = !DILocation(line: 190, column: 22, scope: !12716, inlinedAt: !13708)
!13719 = !DILocation(line: 190, column: 25, scope: !12716, inlinedAt: !13708)
!13720 = !DILocation(line: 190, column: 30, scope: !12716, inlinedAt: !13708)
!13721 = !DILocation(line: 191, column: 8, scope: !12716, inlinedAt: !13708)
!13722 = !DILocation(line: 191, column: 16, scope: !12716, inlinedAt: !13708)
!13723 = !DILocation(line: 191, column: 21, scope: !12716, inlinedAt: !13708)
!13724 = !DILocation(line: 190, column: 4, scope: !12716, inlinedAt: !13708)
!13725 = !DILocation(line: 192, column: 4, scope: !12716, inlinedAt: !13708)
!13726 = distinct !{!13726, !13711, !13727}
!13727 = !DILocation(line: 194, column: 2, scope: !12705, inlinedAt: !13708)
!13728 = !DILocation(line: 196, column: 19, scope: !12694, inlinedAt: !13708)
!13729 = !DILocation(line: 196, column: 24, scope: !12694, inlinedAt: !13708)
!13730 = !DILocation(line: 196, column: 32, scope: !12694, inlinedAt: !13708)
!13731 = !DILocation(line: 196, column: 37, scope: !12694, inlinedAt: !13708)
!13732 = !DILocation(line: 196, column: 2, scope: !12694, inlinedAt: !13708)
!13733 = !DILocation(line: 197, column: 1, scope: !12694, inlinedAt: !13708)
!13734 = !DILocation(line: 750, column: 2, scope: !13699)
!13735 = !DILocation(line: 751, column: 1, scope: !13680)
!13736 = distinct !DISubprogram(name: "add_thread_timeout", scope: !3229, file: !3229, line: 753, type: !13737, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13737 = !DISubroutineType(types: !13738)
!13738 = !{null, !3130, !13619}
!13739 = !DILocalVariable(name: "thread", arg: 1, scope: !13736, file: !3229, line: 753, type: !3130)
!13740 = !DILocation(line: 753, column: 49, scope: !13736)
!13741 = !DILocalVariable(name: "timeout", arg: 2, scope: !13736, file: !3229, line: 753, type: !13619)
!13742 = !DILocation(line: 753, column: 69, scope: !13736)
!13743 = !DILocation(line: 755, column: 7, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13736, file: !3229, line: 755, column: 6)
!13745 = !DILocation(line: 755, column: 6, scope: !13736)
!13746 = !DILocation(line: 756, column: 24, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13744, file: !3229, line: 755, column: 41)
!13748 = !DILocation(line: 756, column: 3, scope: !13747)
!13749 = !DILocation(line: 757, column: 2, scope: !13747)
!13750 = !DILocation(line: 758, column: 1, scope: !13736)
!13751 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11660, file: !11660, line: 47, type: !13737, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13752 = !DILocalVariable(name: "thread", arg: 1, scope: !13751, file: !11660, line: 47, type: !3130)
!13753 = !DILocation(line: 47, column: 58, scope: !13751)
!13754 = !DILocalVariable(name: "ticks", arg: 2, scope: !13751, file: !11660, line: 47, type: !13619)
!13755 = !DILocation(line: 47, column: 78, scope: !13751)
!13756 = !DILocation(line: 49, column: 17, scope: !13751)
!13757 = !DILocation(line: 49, column: 25, scope: !13751)
!13758 = !DILocation(line: 49, column: 30, scope: !13751)
!13759 = !DILocation(line: 49, column: 2, scope: !13751)
!13760 = !DILocation(line: 50, column: 1, scope: !13751)
!13761 = distinct !DISubprogram(name: "z_thread_timeout", scope: !3229, file: !3229, line: 795, type: !3187, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13762 = !DILocalVariable(name: "timeout", arg: 1, scope: !13761, file: !3229, line: 795, type: !3189)
!13763 = !DILocation(line: 795, column: 40, scope: !13761)
!13764 = !DILocalVariable(name: "thread", scope: !13761, file: !3229, line: 797, type: !3130)
!13765 = !DILocation(line: 797, column: 19, scope: !13761)
!13766 = !DILocation(line: 797, column: 28, scope: !13761)
!13767 = !DILocalVariable(name: "__i", scope: !13768, file: !3229, line: 800, type: !12234)
!13768 = distinct !DILexicalBlock(scope: !13761, file: !3229, line: 800, column: 2)
!13769 = !DILocation(line: 800, column: 2, scope: !13768)
!13770 = !DILocalVariable(name: "__key", scope: !13768, file: !3229, line: 800, type: !12234)
!13771 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !13772)
!13772 = distinct !DILocation(line: 800, column: 2, scope: !13768)
!13773 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !13772)
!13774 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !13772)
!13775 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !13776)
!13776 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !13772)
!13777 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !13776)
!13778 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !13776)
!13779 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !13772)
!13780 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !13772)
!13781 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !13772)
!13782 = !DILocation(line: 800, column: 2, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13768, file: !3229, line: 800, column: 2)
!13784 = !DILocalVariable(name: "killed", scope: !13785, file: !3229, line: 801, type: !1035)
!13785 = distinct !DILexicalBlock(scope: !13783, file: !3229, line: 800, column: 26)
!13786 = !DILocation(line: 801, column: 8, scope: !13785)
!13787 = !DILocation(line: 801, column: 19, scope: !13785)
!13788 = !DILocation(line: 801, column: 27, scope: !13785)
!13789 = !DILocation(line: 801, column: 32, scope: !13785)
!13790 = !DILocation(line: 801, column: 45, scope: !13785)
!13791 = !DILocation(line: 801, column: 61, scope: !13785)
!13792 = !DILocation(line: 802, column: 12, scope: !13785)
!13793 = !DILocation(line: 802, column: 20, scope: !13785)
!13794 = !DILocation(line: 802, column: 25, scope: !13785)
!13795 = !DILocation(line: 802, column: 38, scope: !13785)
!13796 = !DILocation(line: 804, column: 8, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13785, file: !3229, line: 804, column: 7)
!13798 = !DILocation(line: 804, column: 7, scope: !13785)
!13799 = !DILocation(line: 805, column: 8, scope: !13800)
!13800 = distinct !DILexicalBlock(scope: !13801, file: !3229, line: 805, column: 8)
!13801 = distinct !DILexicalBlock(scope: !13797, file: !3229, line: 804, column: 16)
!13802 = !DILocation(line: 805, column: 16, scope: !13800)
!13803 = !DILocation(line: 805, column: 21, scope: !13800)
!13804 = !DILocation(line: 805, column: 31, scope: !13800)
!13805 = !DILocation(line: 805, column: 8, scope: !13801)
!13806 = !DILocation(line: 806, column: 30, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13800, file: !3229, line: 805, column: 40)
!13808 = !DILocation(line: 806, column: 5, scope: !13807)
!13809 = !DILocation(line: 807, column: 4, scope: !13807)
!13810 = !DILocation(line: 808, column: 29, scope: !13801)
!13811 = !DILocation(line: 808, column: 4, scope: !13801)
!13812 = !DILocation(line: 809, column: 35, scope: !13801)
!13813 = !DILocation(line: 809, column: 4, scope: !13801)
!13814 = !DILocation(line: 810, column: 17, scope: !13801)
!13815 = !DILocation(line: 810, column: 4, scope: !13801)
!13816 = !DILocation(line: 811, column: 3, scope: !13801)
!13817 = !DILocation(line: 812, column: 2, scope: !13785)
!13818 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !13819)
!13819 = distinct !DILocation(line: 800, column: 2, scope: !13783)
!13820 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !13819)
!13821 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !13819)
!13822 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !13819)
!13823 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !13824)
!13824 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !13819)
!13825 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !13824)
!13826 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !13824)
!13827 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !13824)
!13828 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !13824)
!13829 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !13824)
!13830 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !13824)
!13831 = distinct !{!13831, !13769, !13832}
!13832 = !DILocation(line: 812, column: 2, scope: !13768)
!13833 = !DILocation(line: 813, column: 1, scope: !13761)
!13834 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !3229, file: !3229, line: 779, type: !12195, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13835 = !DILocalVariable(name: "thread", arg: 1, scope: !13834, file: !3229, line: 779, type: !3130)
!13836 = !DILocation(line: 779, column: 62, scope: !13834)
!13837 = !DILocation(line: 781, column: 38, scope: !13834)
!13838 = !DILocation(line: 781, column: 21, scope: !13834)
!13839 = !DILocation(line: 781, column: 47, scope: !13834)
!13840 = !DILocation(line: 781, column: 54, scope: !13834)
!13841 = !DILocation(line: 781, column: 2, scope: !13834)
!13842 = !DILocation(line: 782, column: 31, scope: !13834)
!13843 = !DILocation(line: 782, column: 2, scope: !13834)
!13844 = !DILocation(line: 783, column: 2, scope: !13834)
!13845 = !DILocation(line: 783, column: 10, scope: !13834)
!13846 = !DILocation(line: 783, column: 15, scope: !13834)
!13847 = !DILocation(line: 783, column: 25, scope: !13834)
!13848 = !DILocation(line: 784, column: 1, scope: !13834)
!13849 = distinct !DISubprogram(name: "pended_on_thread", scope: !3229, file: !3229, line: 724, type: !13850, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13850 = !DISubroutineType(types: !13851)
!13851 = !{!3161, !3130}
!13852 = !DILocalVariable(name: "thread", arg: 1, scope: !13849, file: !3229, line: 724, type: !3130)
!13853 = !DILocation(line: 724, column: 53, scope: !13849)
!13854 = !DILocation(line: 728, column: 9, scope: !13849)
!13855 = !DILocation(line: 728, column: 17, scope: !13849)
!13856 = !DILocation(line: 728, column: 22, scope: !13849)
!13857 = !DILocation(line: 728, column: 2, scope: !13849)
!13858 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11061, file: !11061, line: 165, type: !12195, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13859 = !DILocalVariable(name: "thread", arg: 1, scope: !13858, file: !11061, line: 165, type: !3130)
!13860 = !DILocation(line: 165, column: 66, scope: !13858)
!13861 = !DILocation(line: 167, column: 2, scope: !13858)
!13862 = !DILocation(line: 167, column: 10, scope: !13858)
!13863 = !DILocation(line: 167, column: 15, scope: !13858)
!13864 = !DILocation(line: 167, column: 28, scope: !13858)
!13865 = !DILocation(line: 168, column: 1, scope: !13858)
!13866 = distinct !DISubprogram(name: "unready_thread", scope: !3229, file: !3229, line: 731, type: !12195, scopeLine: 732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13867 = !DILocalVariable(name: "thread", arg: 1, scope: !13866, file: !3229, line: 731, type: !3130)
!13868 = !DILocation(line: 731, column: 45, scope: !13866)
!13869 = !DILocation(line: 733, column: 25, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13866, file: !3229, line: 733, column: 6)
!13871 = !DILocation(line: 733, column: 6, scope: !13870)
!13872 = !DILocation(line: 733, column: 6, scope: !13866)
!13873 = !DILocation(line: 734, column: 18, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13870, file: !3229, line: 733, column: 34)
!13875 = !DILocation(line: 264, column: 59, scope: !12641, inlinedAt: !13876)
!13876 = distinct !DILocation(line: 734, column: 3, scope: !13874)
!13877 = !DILocation(line: 266, column: 2, scope: !12641, inlinedAt: !13876)
!13878 = !DILocation(line: 266, column: 10, scope: !12641, inlinedAt: !13876)
!13879 = !DILocation(line: 266, column: 15, scope: !12641, inlinedAt: !13876)
!13880 = !DILocation(line: 266, column: 28, scope: !12641, inlinedAt: !13876)
!13881 = !DILocation(line: 267, column: 26, scope: !12649, inlinedAt: !13876)
!13882 = !DILocation(line: 267, column: 6, scope: !12649, inlinedAt: !13876)
!13883 = !DILocation(line: 267, column: 6, scope: !12641, inlinedAt: !13876)
!13884 = !DILocation(line: 268, column: 15, scope: !12653, inlinedAt: !13876)
!13885 = !DILocation(line: 232, column: 56, scope: !12655, inlinedAt: !13886)
!13886 = distinct !DILocation(line: 268, column: 3, scope: !12653, inlinedAt: !13876)
!13887 = !DILocation(line: 234, column: 31, scope: !12655, inlinedAt: !13886)
!13888 = !DILocation(line: 199, column: 57, scope: !12660, inlinedAt: !13889)
!13889 = distinct !DILocation(line: 234, column: 19, scope: !12655, inlinedAt: !13886)
!13890 = !DILocation(line: 234, column: 19, scope: !12655, inlinedAt: !13886)
!13891 = !DILocation(line: 234, column: 40, scope: !12655, inlinedAt: !13886)
!13892 = !DILocation(line: 234, column: 2, scope: !12655, inlinedAt: !13886)
!13893 = !DILocation(line: 269, column: 2, scope: !12653, inlinedAt: !13876)
!13894 = !DILocation(line: 735, column: 2, scope: !13874)
!13895 = !DILocation(line: 736, column: 15, scope: !13866)
!13896 = !DILocation(line: 736, column: 25, scope: !13866)
!13897 = !DILocation(line: 736, column: 22, scope: !13866)
!13898 = !DILocation(line: 736, column: 2, scope: !13866)
!13899 = !DILocation(line: 737, column: 1, scope: !13866)
!13900 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11061, file: !11061, line: 160, type: !12195, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13901 = !DILocalVariable(name: "thread", arg: 1, scope: !13900, file: !11061, line: 160, type: !3130)
!13902 = !DILocation(line: 160, column: 62, scope: !13900)
!13903 = !DILocation(line: 162, column: 2, scope: !13900)
!13904 = !DILocation(line: 162, column: 10, scope: !13900)
!13905 = !DILocation(line: 162, column: 15, scope: !13900)
!13906 = !DILocation(line: 162, column: 28, scope: !13900)
!13907 = !DILocation(line: 163, column: 1, scope: !13900)
!13908 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !3229, file: !3229, line: 786, type: !12195, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13909 = !DILocalVariable(name: "thread", arg: 1, scope: !13908, file: !3229, line: 786, type: !3130)
!13910 = !DILocation(line: 786, column: 64, scope: !13908)
!13911 = !DILocalVariable(name: "__i", scope: !13912, file: !3229, line: 788, type: !12234)
!13912 = distinct !DILexicalBlock(scope: !13908, file: !3229, line: 788, column: 2)
!13913 = !DILocation(line: 788, column: 2, scope: !13912)
!13914 = !DILocalVariable(name: "__key", scope: !13912, file: !3229, line: 788, type: !12234)
!13915 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !13916)
!13916 = distinct !DILocation(line: 788, column: 2, scope: !13912)
!13917 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !13916)
!13918 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !13916)
!13919 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !13920)
!13920 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !13916)
!13921 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !13920)
!13922 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !13920)
!13923 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !13916)
!13924 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !13916)
!13925 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !13916)
!13926 = !DILocation(line: 788, column: 2, scope: !13927)
!13927 = distinct !DILexicalBlock(scope: !13912, file: !3229, line: 788, column: 2)
!13928 = !DILocation(line: 789, column: 28, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13927, file: !3229, line: 788, column: 26)
!13930 = !DILocation(line: 789, column: 3, scope: !13929)
!13931 = !DILocation(line: 790, column: 2, scope: !13929)
!13932 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !13933)
!13933 = distinct !DILocation(line: 788, column: 2, scope: !13927)
!13934 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !13933)
!13935 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !13933)
!13936 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !13933)
!13937 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !13938)
!13938 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !13933)
!13939 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !13938)
!13940 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !13938)
!13941 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !13938)
!13942 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !13938)
!13943 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !13938)
!13944 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !13938)
!13945 = distinct !{!13945, !13913, !13946}
!13946 = !DILocation(line: 790, column: 2, scope: !13912)
!13947 = !DILocation(line: 791, column: 1, scope: !13908)
!13948 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !3229, file: !3229, line: 816, type: !13949, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!13949 = !DISubroutineType(types: !13950)
!13950 = !{!103, !173, !3161, !13619}
!13951 = !DILocalVariable(name: "key", arg: 1, scope: !13948, file: !3229, line: 816, type: !173)
!13952 = !DILocation(line: 816, column: 34, scope: !13948)
!13953 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13948, file: !3229, line: 816, type: !3161)
!13954 = !DILocation(line: 816, column: 50, scope: !13948)
!13955 = !DILocalVariable(name: "timeout", arg: 3, scope: !13948, file: !3229, line: 816, type: !13619)
!13956 = !DILocation(line: 816, column: 70, scope: !13948)
!13957 = !DILocation(line: 823, column: 14, scope: !13948)
!13958 = !DILocation(line: 823, column: 24, scope: !13948)
!13959 = !DILocation(line: 823, column: 2, scope: !13948)
!13960 = !DILocation(line: 826, column: 20, scope: !13948)
!13961 = !DILocation(line: 826, column: 18, scope: !13948)
!13962 = !DILocalVariable(name: "ret", scope: !13948, file: !3229, line: 828, type: !103)
!13963 = !DILocation(line: 828, column: 6, scope: !13948)
!13964 = !DILocation(line: 828, column: 27, scope: !13948)
!13965 = !DILocation(line: 828, column: 12, scope: !13948)
!13966 = !DILocalVariable(name: "__i", scope: !13967, file: !3229, line: 829, type: !12234)
!13967 = distinct !DILexicalBlock(scope: !13948, file: !3229, line: 829, column: 2)
!13968 = !DILocation(line: 829, column: 2, scope: !13967)
!13969 = !DILocalVariable(name: "__key", scope: !13967, file: !3229, line: 829, type: !12234)
!13970 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !13971)
!13971 = distinct !DILocation(line: 829, column: 2, scope: !13967)
!13972 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !13971)
!13973 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !13971)
!13974 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !13975)
!13975 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !13971)
!13976 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !13975)
!13977 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !13975)
!13978 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !13971)
!13979 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !13971)
!13980 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !13971)
!13981 = !DILocation(line: 829, column: 2, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13967, file: !3229, line: 829, column: 2)
!13983 = !DILocation(line: 830, column: 7, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13985, file: !3229, line: 830, column: 7)
!13985 = distinct !DILexicalBlock(scope: !13982, file: !3229, line: 829, column: 26)
!13986 = !DILocation(line: 830, column: 26, scope: !13984)
!13987 = !DILocation(line: 830, column: 23, scope: !13984)
!13988 = !DILocation(line: 830, column: 7, scope: !13985)
!13989 = !DILocation(line: 831, column: 20, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13984, file: !3229, line: 830, column: 36)
!13991 = !DILocation(line: 832, column: 3, scope: !13990)
!13992 = !DILocation(line: 833, column: 2, scope: !13985)
!13993 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !13994)
!13994 = distinct !DILocation(line: 829, column: 2, scope: !13982)
!13995 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !13994)
!13996 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !13994)
!13997 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !13994)
!13998 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !13999)
!13999 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !13994)
!14000 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !13999)
!14001 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !13999)
!14002 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !13999)
!14003 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !13999)
!14004 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !13999)
!14005 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !13999)
!14006 = distinct !{!14006, !13968, !14007}
!14007 = !DILocation(line: 833, column: 2, scope: !13967)
!14008 = !DILocation(line: 834, column: 9, scope: !13948)
!14009 = !DILocation(line: 834, column: 2, scope: !13948)
!14010 = distinct !DISubprogram(name: "z_pend_curr", scope: !3229, file: !3229, line: 840, type: !14011, scopeLine: 842, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14011 = !DISubroutineType(types: !14012)
!14012 = !{!103, !12244, !12234, !3161, !13619}
!14013 = !DILocalVariable(name: "lock", arg: 1, scope: !14010, file: !3229, line: 840, type: !12244)
!14014 = !DILocation(line: 840, column: 36, scope: !14010)
!14015 = !DILocalVariable(name: "key", arg: 2, scope: !14010, file: !3229, line: 840, type: !12234)
!14016 = !DILocation(line: 840, column: 59, scope: !14010)
!14017 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14010, file: !3229, line: 841, type: !3161)
!14018 = !DILocation(line: 841, column: 20, scope: !14010)
!14019 = !DILocalVariable(name: "timeout", arg: 4, scope: !14010, file: !3229, line: 841, type: !13619)
!14020 = !DILocation(line: 841, column: 40, scope: !14010)
!14021 = !DILocation(line: 844, column: 20, scope: !14010)
!14022 = !DILocation(line: 844, column: 18, scope: !14010)
!14023 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !14024)
!14024 = distinct !DILocation(line: 856, column: 9, scope: !14010)
!14025 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !14024)
!14026 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !14024)
!14027 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !14028)
!14028 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !14024)
!14029 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !14028)
!14030 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !14028)
!14031 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !14024)
!14032 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !14024)
!14033 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !14024)
!14034 = !DILocation(line: 856, column: 9, scope: !14010)
!14035 = !DILocation(line: 857, column: 14, scope: !14010)
!14036 = !DILocation(line: 857, column: 24, scope: !14010)
!14037 = !DILocation(line: 857, column: 2, scope: !14010)
!14038 = !DILocation(line: 858, column: 17, scope: !14010)
!14039 = !DILocation(line: 221, column: 61, scope: !13336, inlinedAt: !14040)
!14040 = distinct !DILocation(line: 858, column: 2, scope: !14010)
!14041 = !DILocation(line: 223, column: 2, scope: !13336, inlinedAt: !14040)
!14042 = !DILocation(line: 859, column: 9, scope: !14010)
!14043 = !DILocation(line: 193, column: 52, scope: !13327, inlinedAt: !14044)
!14044 = distinct !DILocation(line: 859, column: 9, scope: !14010)
!14045 = !DILocation(line: 193, column: 75, scope: !13327, inlinedAt: !14044)
!14046 = !DILocation(line: 195, column: 17, scope: !13327, inlinedAt: !14044)
!14047 = !DILocation(line: 221, column: 61, scope: !13336, inlinedAt: !14048)
!14048 = distinct !DILocation(line: 195, column: 2, scope: !13327, inlinedAt: !14044)
!14049 = !DILocation(line: 223, column: 2, scope: !13336, inlinedAt: !14048)
!14050 = !DILocation(line: 196, column: 28, scope: !13327, inlinedAt: !14044)
!14051 = !DILocation(line: 196, column: 9, scope: !13327, inlinedAt: !14044)
!14052 = !DILocation(line: 859, column: 2, scope: !14010)
!14053 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !3229, file: !3229, line: 862, type: !14054, scopeLine: 863, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14054 = !DISubroutineType(types: !14055)
!14055 = !{!3130, !3161}
!14056 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14053, file: !3229, line: 862, type: !3161)
!14057 = !DILocation(line: 862, column: 50, scope: !14053)
!14058 = !DILocalVariable(name: "thread", scope: !14053, file: !3229, line: 864, type: !3130)
!14059 = !DILocation(line: 864, column: 19, scope: !14053)
!14060 = !DILocalVariable(name: "__i", scope: !14061, file: !3229, line: 866, type: !12234)
!14061 = distinct !DILexicalBlock(scope: !14053, file: !3229, line: 866, column: 2)
!14062 = !DILocation(line: 866, column: 2, scope: !14061)
!14063 = !DILocalVariable(name: "__key", scope: !14061, file: !3229, line: 866, type: !12234)
!14064 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !14065)
!14065 = distinct !DILocation(line: 866, column: 2, scope: !14061)
!14066 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !14065)
!14067 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !14065)
!14068 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !14069)
!14069 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !14065)
!14070 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !14069)
!14071 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !14069)
!14072 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !14065)
!14073 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !14065)
!14074 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !14065)
!14075 = !DILocation(line: 866, column: 2, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14061, file: !3229, line: 866, column: 2)
!14077 = !DILocation(line: 867, column: 29, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14076, file: !3229, line: 866, column: 26)
!14079 = !DILocation(line: 867, column: 37, scope: !14078)
!14080 = !DILocation(line: 867, column: 12, scope: !14078)
!14081 = !DILocation(line: 867, column: 10, scope: !14078)
!14082 = !DILocation(line: 869, column: 7, scope: !14083)
!14083 = distinct !DILexicalBlock(scope: !14078, file: !3229, line: 869, column: 7)
!14084 = !DILocation(line: 869, column: 14, scope: !14083)
!14085 = !DILocation(line: 869, column: 7, scope: !14078)
!14086 = !DILocation(line: 870, column: 29, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14083, file: !3229, line: 869, column: 23)
!14088 = !DILocation(line: 870, column: 4, scope: !14087)
!14089 = !DILocation(line: 871, column: 3, scope: !14087)
!14090 = !DILocation(line: 872, column: 2, scope: !14078)
!14091 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !14092)
!14092 = distinct !DILocation(line: 866, column: 2, scope: !14076)
!14093 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !14092)
!14094 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !14092)
!14095 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !14092)
!14096 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !14097)
!14097 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !14092)
!14098 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !14097)
!14099 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !14097)
!14100 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !14097)
!14101 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !14097)
!14102 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !14097)
!14103 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !14097)
!14104 = distinct !{!14104, !14062, !14105}
!14105 = !DILocation(line: 872, column: 2, scope: !14061)
!14106 = !DILocation(line: 874, column: 9, scope: !14053)
!14107 = !DILocation(line: 874, column: 2, scope: !14053)
!14108 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !3229, file: !3229, line: 877, type: !14054, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14109 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14108, file: !3229, line: 877, type: !3161)
!14110 = !DILocation(line: 877, column: 51, scope: !14108)
!14111 = !DILocalVariable(name: "thread", scope: !14108, file: !3229, line: 879, type: !3130)
!14112 = !DILocation(line: 879, column: 19, scope: !14108)
!14113 = !DILocalVariable(name: "__i", scope: !14114, file: !3229, line: 881, type: !12234)
!14114 = distinct !DILexicalBlock(scope: !14108, file: !3229, line: 881, column: 2)
!14115 = !DILocation(line: 881, column: 2, scope: !14114)
!14116 = !DILocalVariable(name: "__key", scope: !14114, file: !3229, line: 881, type: !12234)
!14117 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !14118)
!14118 = distinct !DILocation(line: 881, column: 2, scope: !14114)
!14119 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !14118)
!14120 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !14118)
!14121 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !14122)
!14122 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !14118)
!14123 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !14122)
!14124 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !14122)
!14125 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !14118)
!14126 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !14118)
!14127 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !14118)
!14128 = !DILocation(line: 881, column: 2, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14114, file: !3229, line: 881, column: 2)
!14130 = !DILocation(line: 882, column: 29, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14129, file: !3229, line: 881, column: 26)
!14132 = !DILocation(line: 882, column: 37, scope: !14131)
!14133 = !DILocation(line: 882, column: 12, scope: !14131)
!14134 = !DILocation(line: 882, column: 10, scope: !14131)
!14135 = !DILocation(line: 884, column: 7, scope: !14136)
!14136 = distinct !DILexicalBlock(scope: !14131, file: !3229, line: 884, column: 7)
!14137 = !DILocation(line: 884, column: 14, scope: !14136)
!14138 = !DILocation(line: 884, column: 7, scope: !14131)
!14139 = !DILocation(line: 885, column: 29, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14136, file: !3229, line: 884, column: 23)
!14141 = !DILocation(line: 885, column: 4, scope: !14140)
!14142 = !DILocation(line: 886, column: 33, scope: !14140)
!14143 = !DILocation(line: 886, column: 10, scope: !14140)
!14144 = !DILocation(line: 887, column: 3, scope: !14140)
!14145 = !DILocation(line: 888, column: 2, scope: !14131)
!14146 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !14147)
!14147 = distinct !DILocation(line: 881, column: 2, scope: !14129)
!14148 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !14147)
!14149 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !14147)
!14150 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !14147)
!14151 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !14152)
!14152 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !14147)
!14153 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !14152)
!14154 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !14152)
!14155 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !14152)
!14156 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !14152)
!14157 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !14152)
!14158 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !14152)
!14159 = distinct !{!14159, !14115, !14160}
!14160 = !DILocation(line: 888, column: 2, scope: !14114)
!14161 = !DILocation(line: 890, column: 9, scope: !14108)
!14162 = !DILocation(line: 890, column: 2, scope: !14108)
!14163 = distinct !DISubprogram(name: "z_unpend_thread", scope: !3229, file: !3229, line: 893, type: !12195, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14164 = !DILocalVariable(name: "thread", arg: 1, scope: !14163, file: !3229, line: 893, type: !3130)
!14165 = !DILocation(line: 893, column: 39, scope: !14163)
!14166 = !DILocation(line: 895, column: 29, scope: !14163)
!14167 = !DILocation(line: 786, column: 64, scope: !13908, inlinedAt: !14168)
!14168 = distinct !DILocation(line: 895, column: 2, scope: !14163)
!14169 = !DILocation(line: 788, column: 2, scope: !13912, inlinedAt: !14168)
!14170 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !14171)
!14171 = distinct !DILocation(line: 788, column: 2, scope: !13912, inlinedAt: !14168)
!14172 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !14171)
!14173 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !14171)
!14174 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !14175)
!14175 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !14171)
!14176 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !14175)
!14177 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !14175)
!14178 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !14171)
!14179 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !14171)
!14180 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !14171)
!14181 = !DILocation(line: 788, column: 2, scope: !13927, inlinedAt: !14168)
!14182 = !DILocation(line: 789, column: 28, scope: !13929, inlinedAt: !14168)
!14183 = !DILocation(line: 789, column: 3, scope: !13929, inlinedAt: !14168)
!14184 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !14185)
!14185 = distinct !DILocation(line: 788, column: 2, scope: !13927, inlinedAt: !14168)
!14186 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !14185)
!14187 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !14185)
!14188 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !14185)
!14189 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !14190)
!14190 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !14185)
!14191 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !14190)
!14192 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !14190)
!14193 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !14190)
!14194 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !14190)
!14195 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !14190)
!14196 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !14190)
!14197 = distinct !{!14197, !14169, !14198}
!14198 = !DILocation(line: 790, column: 2, scope: !13912, inlinedAt: !14168)
!14199 = !DILocation(line: 896, column: 31, scope: !14163)
!14200 = !DILocation(line: 896, column: 8, scope: !14163)
!14201 = !DILocation(line: 897, column: 1, scope: !14163)
!14202 = distinct !DISubprogram(name: "z_set_prio", scope: !3229, file: !3229, line: 902, type: !12864, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14203 = !DILocalVariable(name: "thread", arg: 1, scope: !14202, file: !3229, line: 902, type: !3130)
!14204 = !DILocation(line: 902, column: 34, scope: !14202)
!14205 = !DILocalVariable(name: "prio", arg: 2, scope: !14202, file: !3229, line: 902, type: !103)
!14206 = !DILocation(line: 902, column: 46, scope: !14202)
!14207 = !DILocalVariable(name: "need_sched", scope: !14202, file: !3229, line: 904, type: !1035)
!14208 = !DILocation(line: 904, column: 7, scope: !14202)
!14209 = !DILocalVariable(name: "__i", scope: !14210, file: !3229, line: 906, type: !12234)
!14210 = distinct !DILexicalBlock(scope: !14202, file: !3229, line: 906, column: 2)
!14211 = !DILocation(line: 906, column: 2, scope: !14210)
!14212 = !DILocalVariable(name: "__key", scope: !14210, file: !3229, line: 906, type: !12234)
!14213 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !14214)
!14214 = distinct !DILocation(line: 906, column: 2, scope: !14210)
!14215 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !14214)
!14216 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !14214)
!14217 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !14218)
!14218 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !14214)
!14219 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !14218)
!14220 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !14218)
!14221 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !14214)
!14222 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !14214)
!14223 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !14214)
!14224 = !DILocation(line: 906, column: 2, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14210, file: !3229, line: 906, column: 2)
!14226 = !DILocation(line: 907, column: 34, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14225, file: !3229, line: 906, column: 26)
!14228 = !DILocation(line: 907, column: 16, scope: !14227)
!14229 = !DILocation(line: 907, column: 14, scope: !14227)
!14230 = !DILocation(line: 909, column: 7, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14227, file: !3229, line: 909, column: 7)
!14232 = !DILocation(line: 909, column: 7, scope: !14227)
!14233 = !DILocation(line: 912, column: 20, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14235, file: !3229, line: 911, column: 63)
!14235 = distinct !DILexicalBlock(scope: !14236, file: !3229, line: 911, column: 8)
!14236 = distinct !DILexicalBlock(scope: !14231, file: !3229, line: 909, column: 19)
!14237 = !DILocation(line: 264, column: 59, scope: !12641, inlinedAt: !14238)
!14238 = distinct !DILocation(line: 912, column: 5, scope: !14234)
!14239 = !DILocation(line: 266, column: 2, scope: !12641, inlinedAt: !14238)
!14240 = !DILocation(line: 266, column: 10, scope: !12641, inlinedAt: !14238)
!14241 = !DILocation(line: 266, column: 15, scope: !12641, inlinedAt: !14238)
!14242 = !DILocation(line: 266, column: 28, scope: !12641, inlinedAt: !14238)
!14243 = !DILocation(line: 267, column: 26, scope: !12649, inlinedAt: !14238)
!14244 = !DILocation(line: 267, column: 6, scope: !12649, inlinedAt: !14238)
!14245 = !DILocation(line: 267, column: 6, scope: !12641, inlinedAt: !14238)
!14246 = !DILocation(line: 268, column: 15, scope: !12653, inlinedAt: !14238)
!14247 = !DILocation(line: 232, column: 56, scope: !12655, inlinedAt: !14248)
!14248 = distinct !DILocation(line: 268, column: 3, scope: !12653, inlinedAt: !14238)
!14249 = !DILocation(line: 234, column: 31, scope: !12655, inlinedAt: !14248)
!14250 = !DILocation(line: 199, column: 57, scope: !12660, inlinedAt: !14251)
!14251 = distinct !DILocation(line: 234, column: 19, scope: !12655, inlinedAt: !14248)
!14252 = !DILocation(line: 234, column: 19, scope: !12655, inlinedAt: !14248)
!14253 = !DILocation(line: 234, column: 40, scope: !12655, inlinedAt: !14248)
!14254 = !DILocation(line: 234, column: 2, scope: !12655, inlinedAt: !14248)
!14255 = !DILocation(line: 269, column: 2, scope: !12653, inlinedAt: !14238)
!14256 = !DILocation(line: 913, column: 25, scope: !14234)
!14257 = !DILocation(line: 913, column: 5, scope: !14234)
!14258 = !DILocation(line: 913, column: 13, scope: !14234)
!14259 = !DILocation(line: 913, column: 18, scope: !14234)
!14260 = !DILocation(line: 913, column: 23, scope: !14234)
!14261 = !DILocation(line: 914, column: 18, scope: !14234)
!14262 = !DILocation(line: 250, column: 57, scope: !12672, inlinedAt: !14263)
!14263 = distinct !DILocation(line: 914, column: 5, scope: !14234)
!14264 = !DILocation(line: 252, column: 2, scope: !12672, inlinedAt: !14263)
!14265 = !DILocation(line: 252, column: 10, scope: !12672, inlinedAt: !14263)
!14266 = !DILocation(line: 252, column: 15, scope: !12672, inlinedAt: !14263)
!14267 = !DILocation(line: 252, column: 28, scope: !12672, inlinedAt: !14263)
!14268 = !DILocation(line: 253, column: 26, scope: !12680, inlinedAt: !14263)
!14269 = !DILocation(line: 253, column: 6, scope: !12680, inlinedAt: !14263)
!14270 = !DILocation(line: 253, column: 6, scope: !12672, inlinedAt: !14263)
!14271 = !DILocation(line: 254, column: 12, scope: !12684, inlinedAt: !14263)
!14272 = !DILocation(line: 227, column: 53, scope: !12686, inlinedAt: !14273)
!14273 = distinct !DILocation(line: 254, column: 3, scope: !12684, inlinedAt: !14263)
!14274 = !DILocation(line: 229, column: 28, scope: !12686, inlinedAt: !14273)
!14275 = !DILocation(line: 199, column: 57, scope: !12660, inlinedAt: !14276)
!14276 = distinct !DILocation(line: 229, column: 16, scope: !12686, inlinedAt: !14273)
!14277 = !DILocation(line: 229, column: 37, scope: !12686, inlinedAt: !14273)
!14278 = !DILocation(line: 181, column: 56, scope: !12694, inlinedAt: !14279)
!14279 = distinct !DILocation(line: 229, column: 2, scope: !12686, inlinedAt: !14273)
!14280 = !DILocation(line: 182, column: 25, scope: !12694, inlinedAt: !14279)
!14281 = !DILocation(line: 184, column: 19, scope: !12694, inlinedAt: !14279)
!14282 = !DILocation(line: 188, column: 2, scope: !12705, inlinedAt: !14279)
!14283 = !DILocation(line: 188, column: 2, scope: !12707, inlinedAt: !14279)
!14284 = !DILocation(line: 189, column: 24, scope: !12709, inlinedAt: !14279)
!14285 = !DILocation(line: 189, column: 32, scope: !12709, inlinedAt: !14279)
!14286 = !DILocation(line: 189, column: 7, scope: !12709, inlinedAt: !14279)
!14287 = !DILocation(line: 189, column: 35, scope: !12709, inlinedAt: !14279)
!14288 = !DILocation(line: 189, column: 7, scope: !12710, inlinedAt: !14279)
!14289 = !DILocation(line: 190, column: 22, scope: !12716, inlinedAt: !14279)
!14290 = !DILocation(line: 190, column: 25, scope: !12716, inlinedAt: !14279)
!14291 = !DILocation(line: 190, column: 30, scope: !12716, inlinedAt: !14279)
!14292 = !DILocation(line: 191, column: 8, scope: !12716, inlinedAt: !14279)
!14293 = !DILocation(line: 191, column: 16, scope: !12716, inlinedAt: !14279)
!14294 = !DILocation(line: 191, column: 21, scope: !12716, inlinedAt: !14279)
!14295 = !DILocation(line: 190, column: 4, scope: !12716, inlinedAt: !14279)
!14296 = !DILocation(line: 192, column: 4, scope: !12716, inlinedAt: !14279)
!14297 = distinct !{!14297, !14282, !14298}
!14298 = !DILocation(line: 194, column: 2, scope: !12705, inlinedAt: !14279)
!14299 = !DILocation(line: 196, column: 19, scope: !12694, inlinedAt: !14279)
!14300 = !DILocation(line: 196, column: 24, scope: !12694, inlinedAt: !14279)
!14301 = !DILocation(line: 196, column: 32, scope: !12694, inlinedAt: !14279)
!14302 = !DILocation(line: 196, column: 37, scope: !12694, inlinedAt: !14279)
!14303 = !DILocation(line: 196, column: 2, scope: !12694, inlinedAt: !14279)
!14304 = !DILocation(line: 197, column: 1, scope: !12694, inlinedAt: !14279)
!14305 = !DILocation(line: 255, column: 2, scope: !12684, inlinedAt: !14263)
!14306 = !DILocation(line: 918, column: 4, scope: !14236)
!14307 = !DILocation(line: 919, column: 3, scope: !14236)
!14308 = !DILocation(line: 920, column: 24, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14231, file: !3229, line: 919, column: 10)
!14310 = !DILocation(line: 920, column: 4, scope: !14309)
!14311 = !DILocation(line: 920, column: 12, scope: !14309)
!14312 = !DILocation(line: 920, column: 17, scope: !14309)
!14313 = !DILocation(line: 920, column: 22, scope: !14309)
!14314 = !DILocation(line: 922, column: 2, scope: !14227)
!14315 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !14316)
!14316 = distinct !DILocation(line: 906, column: 2, scope: !14225)
!14317 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !14316)
!14318 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !14316)
!14319 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !14316)
!14320 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !14321)
!14321 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !14316)
!14322 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !14321)
!14323 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !14321)
!14324 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !14321)
!14325 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !14321)
!14326 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !14321)
!14327 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !14321)
!14328 = distinct !{!14328, !14211, !14329}
!14329 = !DILocation(line: 922, column: 2, scope: !14210)
!14330 = !DILocation(line: 924, column: 2, scope: !14202)
!14331 = !DILocation(line: 924, column: 2, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14202, file: !3229, line: 924, column: 2)
!14333 = !DILocation(line: 926, column: 9, scope: !14202)
!14334 = !DILocation(line: 926, column: 2, scope: !14202)
!14335 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !3229, file: !3229, line: 929, type: !14336, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14336 = !DISubroutineType(types: !14337)
!14337 = !{null, !3130, !103}
!14338 = !DILocalVariable(name: "thread", arg: 1, scope: !14335, file: !3229, line: 929, type: !3130)
!14339 = !DILocation(line: 929, column: 45, scope: !14335)
!14340 = !DILocalVariable(name: "prio", arg: 2, scope: !14335, file: !3229, line: 929, type: !103)
!14341 = !DILocation(line: 929, column: 57, scope: !14335)
!14342 = !DILocalVariable(name: "need_sched", scope: !14335, file: !3229, line: 931, type: !1035)
!14343 = !DILocation(line: 931, column: 7, scope: !14335)
!14344 = !DILocation(line: 931, column: 31, scope: !14335)
!14345 = !DILocation(line: 931, column: 39, scope: !14335)
!14346 = !DILocation(line: 931, column: 20, scope: !14335)
!14347 = !DILocation(line: 933, column: 2, scope: !14335)
!14348 = !DILocation(line: 935, column: 6, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14335, file: !3229, line: 935, column: 6)
!14350 = !DILocation(line: 935, column: 17, scope: !14349)
!14351 = !DILocation(line: 935, column: 20, scope: !14349)
!14352 = !DILocation(line: 935, column: 30, scope: !14349)
!14353 = !DILocation(line: 935, column: 35, scope: !14349)
!14354 = !DILocation(line: 935, column: 48, scope: !14349)
!14355 = !DILocation(line: 935, column: 6, scope: !14335)
!14356 = !DILocation(line: 936, column: 3, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14349, file: !3229, line: 935, column: 55)
!14358 = !DILocation(line: 937, column: 2, scope: !14357)
!14359 = !DILocation(line: 938, column: 1, scope: !14335)
!14360 = distinct !DISubprogram(name: "k_sched_lock", scope: !3229, file: !3229, line: 987, type: !253, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14361 = !DILocalVariable(name: "__i", scope: !14362, file: !3229, line: 989, type: !12234)
!14362 = distinct !DILexicalBlock(scope: !14360, file: !3229, line: 989, column: 2)
!14363 = !DILocation(line: 989, column: 2, scope: !14362)
!14364 = !DILocalVariable(name: "__key", scope: !14362, file: !3229, line: 989, type: !12234)
!14365 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !14366)
!14366 = distinct !DILocation(line: 989, column: 2, scope: !14362)
!14367 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !14366)
!14368 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !14366)
!14369 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !14370)
!14370 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !14366)
!14371 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !14370)
!14372 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !14370)
!14373 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !14366)
!14374 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !14366)
!14375 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !14366)
!14376 = !DILocation(line: 989, column: 2, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14362, file: !3229, line: 989, column: 2)
!14378 = !DILocation(line: 990, column: 3, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14377, file: !3229, line: 989, column: 26)
!14380 = !DILocation(line: 990, column: 3, scope: !14381)
!14381 = distinct !DILexicalBlock(scope: !14379, file: !3229, line: 990, column: 3)
!14382 = !DILocation(line: 992, column: 3, scope: !14379)
!14383 = !DILocation(line: 993, column: 2, scope: !14379)
!14384 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !14385)
!14385 = distinct !DILocation(line: 989, column: 2, scope: !14377)
!14386 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !14385)
!14387 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !14385)
!14388 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !14385)
!14389 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !14390)
!14390 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !14385)
!14391 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !14390)
!14392 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !14390)
!14393 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !14390)
!14394 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !14390)
!14395 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !14390)
!14396 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !14390)
!14397 = distinct !{!14397, !14363, !14398}
!14398 = !DILocation(line: 993, column: 2, scope: !14362)
!14399 = !DILocation(line: 994, column: 1, scope: !14360)
!14400 = distinct !DISubprogram(name: "z_sched_lock", scope: !11061, file: !11061, line: 251, type: !253, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14401 = !DILocation(line: 256, column: 4, scope: !14400)
!14402 = !DILocation(line: 256, column: 14, scope: !14400)
!14403 = !DILocation(line: 256, column: 19, scope: !14400)
!14404 = !DILocation(line: 256, column: 2, scope: !14400)
!14405 = !DILocation(line: 258, column: 2, scope: !14400)
!14406 = !DILocation(line: 258, column: 2, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14400, file: !11061, line: 258, column: 2)
!14408 = !{i64 2151390320}
!14409 = !DILocation(line: 259, column: 1, scope: !14400)
!14410 = distinct !DISubprogram(name: "k_sched_unlock", scope: !3229, file: !3229, line: 996, type: !253, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14411 = !DILocalVariable(name: "__i", scope: !14412, file: !3229, line: 998, type: !12234)
!14412 = distinct !DILexicalBlock(scope: !14410, file: !3229, line: 998, column: 2)
!14413 = !DILocation(line: 998, column: 2, scope: !14412)
!14414 = !DILocalVariable(name: "__key", scope: !14412, file: !3229, line: 998, type: !12234)
!14415 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !14416)
!14416 = distinct !DILocation(line: 998, column: 2, scope: !14412)
!14417 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !14416)
!14418 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !14416)
!14419 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !14420)
!14420 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !14416)
!14421 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !14420)
!14422 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !14420)
!14423 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !14416)
!14424 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !14416)
!14425 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !14416)
!14426 = !DILocation(line: 998, column: 2, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !14412, file: !3229, line: 998, column: 2)
!14428 = !DILocation(line: 1002, column: 5, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14427, file: !3229, line: 998, column: 26)
!14430 = !DILocation(line: 1002, column: 15, scope: !14429)
!14431 = !DILocation(line: 1002, column: 20, scope: !14429)
!14432 = !DILocation(line: 1002, column: 3, scope: !14429)
!14433 = !DILocation(line: 1003, column: 3, scope: !14429)
!14434 = !DILocation(line: 1004, column: 2, scope: !14429)
!14435 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !14436)
!14436 = distinct !DILocation(line: 998, column: 2, scope: !14427)
!14437 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !14436)
!14438 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !14436)
!14439 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !14436)
!14440 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !14441)
!14441 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !14436)
!14442 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !14441)
!14443 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !14441)
!14444 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !14441)
!14445 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !14441)
!14446 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !14441)
!14447 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !14441)
!14448 = distinct !{!14448, !14413, !14449}
!14449 = !DILocation(line: 1004, column: 2, scope: !14412)
!14450 = !DILocation(line: 1006, column: 2, scope: !14410)
!14451 = !DILocation(line: 1006, column: 2, scope: !14452)
!14452 = distinct !DILexicalBlock(scope: !14453, file: !3229, line: 1006, column: 2)
!14453 = distinct !DILexicalBlock(scope: !14454, file: !3229, line: 1006, column: 2)
!14454 = distinct !DILexicalBlock(scope: !14410, file: !3229, line: 1006, column: 2)
!14455 = !DILocation(line: 1009, column: 2, scope: !14410)
!14456 = !DILocation(line: 1009, column: 2, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14410, file: !3229, line: 1009, column: 2)
!14458 = !DILocation(line: 1011, column: 2, scope: !14410)
!14459 = !DILocation(line: 1012, column: 1, scope: !14410)
!14460 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !3229, file: !3229, line: 1014, type: !12846, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14461 = !DILocation(line: 1028, column: 25, scope: !14460)
!14462 = !DILocation(line: 1028, column: 2, scope: !14460)
!14463 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !3229, file: !3229, line: 1155, type: !14464, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14464 = !DISubroutineType(types: !14465)
!14465 = !{!1035, !3159, !3159}
!14466 = !DILocalVariable(name: "a", arg: 1, scope: !14463, file: !3229, line: 1155, type: !3159)
!14467 = !DILocation(line: 1155, column: 40, scope: !14463)
!14468 = !DILocalVariable(name: "b", arg: 2, scope: !14463, file: !3229, line: 1155, type: !3159)
!14469 = !DILocation(line: 1155, column: 58, scope: !14463)
!14470 = !DILocalVariable(name: "thread_a", scope: !14463, file: !3229, line: 1157, type: !3130)
!14471 = !DILocation(line: 1157, column: 19, scope: !14463)
!14472 = !DILocalVariable(name: "thread_b", scope: !14463, file: !3229, line: 1157, type: !3130)
!14473 = !DILocation(line: 1157, column: 30, scope: !14463)
!14474 = !DILocalVariable(name: "cmp", scope: !14463, file: !3229, line: 1158, type: !250)
!14475 = !DILocation(line: 1158, column: 10, scope: !14463)
!14476 = !DILocation(line: 1160, column: 13, scope: !14463)
!14477 = !DILocation(line: 1160, column: 11, scope: !14463)
!14478 = !DILocation(line: 1161, column: 13, scope: !14463)
!14479 = !DILocation(line: 1161, column: 11, scope: !14463)
!14480 = !DILocation(line: 1163, column: 25, scope: !14463)
!14481 = !DILocation(line: 1163, column: 35, scope: !14463)
!14482 = !DILocation(line: 1163, column: 8, scope: !14463)
!14483 = !DILocation(line: 1163, column: 6, scope: !14463)
!14484 = !DILocation(line: 1165, column: 6, scope: !14485)
!14485 = distinct !DILexicalBlock(scope: !14463, file: !3229, line: 1165, column: 6)
!14486 = !DILocation(line: 1165, column: 10, scope: !14485)
!14487 = !DILocation(line: 1165, column: 6, scope: !14463)
!14488 = !DILocation(line: 1166, column: 3, scope: !14489)
!14489 = distinct !DILexicalBlock(scope: !14485, file: !3229, line: 1165, column: 15)
!14490 = !DILocation(line: 1167, column: 13, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14485, file: !3229, line: 1167, column: 13)
!14492 = !DILocation(line: 1167, column: 17, scope: !14491)
!14493 = !DILocation(line: 1167, column: 13, scope: !14485)
!14494 = !DILocation(line: 1168, column: 3, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14491, file: !3229, line: 1167, column: 22)
!14496 = !DILocation(line: 1170, column: 10, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !14491, file: !3229, line: 1169, column: 9)
!14498 = !DILocation(line: 1170, column: 20, scope: !14497)
!14499 = !DILocation(line: 1170, column: 25, scope: !14497)
!14500 = !DILocation(line: 1170, column: 37, scope: !14497)
!14501 = !DILocation(line: 1170, column: 47, scope: !14497)
!14502 = !DILocation(line: 1170, column: 52, scope: !14497)
!14503 = !DILocation(line: 1170, column: 35, scope: !14497)
!14504 = !DILocation(line: 1170, column: 3, scope: !14497)
!14505 = !DILocation(line: 1173, column: 1, scope: !14463)
!14506 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !3229, file: !3229, line: 1175, type: !14507, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14507 = !DISubroutineType(types: !14508)
!14508 = !{null, !14509, !3130}
!14509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14510, size: 32)
!14510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14511, line: 37, size: 128, elements: !14512)
!14511 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14512 = !{!14513, !14521}
!14513 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14510, file: !14511, line: 38, baseType: !14514, size: 96)
!14514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !140, line: 83, size: 96, elements: !14515)
!14515 = !{!14516, !14517, !14520}
!14516 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14514, file: !140, line: 84, baseType: !3159, size: 32)
!14517 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14514, file: !140, line: 85, baseType: !14518, size: 32, offset: 32)
!14518 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !140, line: 81, baseType: !14519)
!14519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14464, size: 32)
!14520 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14514, file: !140, line: 86, baseType: !103, size: 32, offset: 64)
!14521 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14510, file: !14511, line: 39, baseType: !103, size: 32, offset: 96)
!14522 = !DILocalVariable(name: "pq", arg: 1, scope: !14506, file: !3229, line: 1175, type: !14509)
!14523 = !DILocation(line: 1175, column: 37, scope: !14506)
!14524 = !DILocalVariable(name: "thread", arg: 2, scope: !14506, file: !3229, line: 1175, type: !3130)
!14525 = !DILocation(line: 1175, column: 58, scope: !14506)
!14526 = !DILocalVariable(name: "t", scope: !14506, file: !3229, line: 1177, type: !3130)
!14527 = !DILocation(line: 1177, column: 19, scope: !14506)
!14528 = !DILocation(line: 1181, column: 27, scope: !14506)
!14529 = !DILocation(line: 1181, column: 31, scope: !14506)
!14530 = !DILocation(line: 1181, column: 45, scope: !14506)
!14531 = !DILocation(line: 1181, column: 2, scope: !14506)
!14532 = !DILocation(line: 1181, column: 10, scope: !14506)
!14533 = !DILocation(line: 1181, column: 15, scope: !14506)
!14534 = !DILocation(line: 1181, column: 25, scope: !14506)
!14535 = !DILocation(line: 1189, column: 7, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14506, file: !3229, line: 1189, column: 6)
!14537 = !DILocation(line: 1189, column: 11, scope: !14536)
!14538 = !DILocation(line: 1189, column: 6, scope: !14506)
!14539 = !DILocalVariable(name: "__f", scope: !14540, file: !3229, line: 1190, type: !14542)
!14540 = distinct !DILexicalBlock(scope: !14541, file: !3229, line: 1190, column: 3)
!14541 = distinct !DILexicalBlock(scope: !14536, file: !3229, line: 1189, column: 27)
!14542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !140, line: 155, size: 96, elements: !14543)
!14543 = !{!14544, !14545, !14546}
!14544 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14542, file: !140, line: 156, baseType: !3224, size: 32)
!14545 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14542, file: !140, line: 157, baseType: !1688, size: 32, offset: 32)
!14546 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14542, file: !140, line: 158, baseType: !250, size: 32, offset: 64)
!14547 = !DILocation(line: 1190, column: 3, scope: !14540)
!14548 = !DILocalVariable(name: "n", scope: !14549, file: !3229, line: 1190, type: !3159)
!14549 = distinct !DILexicalBlock(scope: !14550, file: !3229, line: 1190, column: 3)
!14550 = distinct !DILexicalBlock(scope: !14540, file: !3229, line: 1190, column: 3)
!14551 = !DILocation(line: 1190, column: 3, scope: !14549)
!14552 = !DILocation(line: 1190, column: 3, scope: !14550)
!14553 = !DILocation(line: 1191, column: 24, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14550, file: !3229, line: 1190, column: 54)
!14555 = !DILocation(line: 1191, column: 28, scope: !14554)
!14556 = !DILocation(line: 1191, column: 42, scope: !14554)
!14557 = !DILocation(line: 1191, column: 4, scope: !14554)
!14558 = !DILocation(line: 1191, column: 7, scope: !14554)
!14559 = !DILocation(line: 1191, column: 12, scope: !14554)
!14560 = !DILocation(line: 1191, column: 22, scope: !14554)
!14561 = distinct !{!14561, !14547, !14562}
!14562 = !DILocation(line: 1192, column: 3, scope: !14540)
!14563 = !DILocation(line: 1193, column: 2, scope: !14541)
!14564 = !DILocation(line: 1195, column: 13, scope: !14506)
!14565 = !DILocation(line: 1195, column: 17, scope: !14506)
!14566 = !DILocation(line: 1195, column: 24, scope: !14506)
!14567 = !DILocation(line: 1195, column: 32, scope: !14506)
!14568 = !DILocation(line: 1195, column: 37, scope: !14506)
!14569 = !DILocation(line: 1195, column: 2, scope: !14506)
!14570 = !DILocation(line: 1196, column: 1, scope: !14506)
!14571 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !3229, file: !3229, line: 1198, type: !14507, scopeLine: 1199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14572 = !DILocalVariable(name: "pq", arg: 1, scope: !14571, file: !3229, line: 1198, type: !14509)
!14573 = !DILocation(line: 1198, column: 40, scope: !14571)
!14574 = !DILocalVariable(name: "thread", arg: 2, scope: !14571, file: !3229, line: 1198, type: !3130)
!14575 = !DILocation(line: 1198, column: 61, scope: !14571)
!14576 = !DILocation(line: 1202, column: 13, scope: !14571)
!14577 = !DILocation(line: 1202, column: 17, scope: !14571)
!14578 = !DILocation(line: 1202, column: 24, scope: !14571)
!14579 = !DILocation(line: 1202, column: 32, scope: !14571)
!14580 = !DILocation(line: 1202, column: 37, scope: !14571)
!14581 = !DILocation(line: 1202, column: 2, scope: !14571)
!14582 = !DILocation(line: 1204, column: 7, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14571, file: !3229, line: 1204, column: 6)
!14584 = !DILocation(line: 1204, column: 11, scope: !14583)
!14585 = !DILocation(line: 1204, column: 16, scope: !14583)
!14586 = !DILocation(line: 1204, column: 6, scope: !14571)
!14587 = !DILocation(line: 1205, column: 3, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14583, file: !3229, line: 1204, column: 22)
!14589 = !DILocation(line: 1205, column: 7, scope: !14588)
!14590 = !DILocation(line: 1205, column: 22, scope: !14588)
!14591 = !DILocation(line: 1206, column: 2, scope: !14588)
!14592 = !DILocation(line: 1207, column: 1, scope: !14571)
!14593 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !3229, file: !3229, line: 1209, type: !14594, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14594 = !DISubroutineType(types: !14595)
!14595 = !{!3130, !14509}
!14596 = !DILocalVariable(name: "pq", arg: 1, scope: !14593, file: !3229, line: 1209, type: !14509)
!14597 = !DILocation(line: 1209, column: 50, scope: !14593)
!14598 = !DILocalVariable(name: "thread", scope: !14593, file: !3229, line: 1211, type: !3130)
!14599 = !DILocation(line: 1211, column: 19, scope: !14593)
!14600 = !DILocalVariable(name: "n", scope: !14593, file: !3229, line: 1212, type: !3159)
!14601 = !DILocation(line: 1212, column: 17, scope: !14593)
!14602 = !DILocation(line: 1212, column: 33, scope: !14593)
!14603 = !DILocation(line: 1212, column: 37, scope: !14593)
!14604 = !DILocation(line: 1212, column: 21, scope: !14593)
!14605 = !DILocation(line: 1214, column: 6, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14593, file: !3229, line: 1214, column: 6)
!14607 = !DILocation(line: 1214, column: 8, scope: !14606)
!14608 = !DILocation(line: 1214, column: 6, scope: !14593)
!14609 = !DILocation(line: 1215, column: 12, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14606, file: !3229, line: 1214, column: 17)
!14611 = !DILocation(line: 1215, column: 10, scope: !14610)
!14612 = !DILocation(line: 1216, column: 2, scope: !14610)
!14613 = !DILocation(line: 1217, column: 9, scope: !14593)
!14614 = !DILocation(line: 1217, column: 2, scope: !14593)
!14615 = distinct !DISubprogram(name: "rb_get_min", scope: !140, file: !140, line: 115, type: !14616, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14616 = !DISubroutineType(types: !14617)
!14617 = !{!3159, !14618}
!14618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14514, size: 32)
!14619 = !DILocalVariable(name: "tree", arg: 1, scope: !14615, file: !140, line: 115, type: !14618)
!14620 = !DILocation(line: 115, column: 56, scope: !14615)
!14621 = !DILocation(line: 117, column: 25, scope: !14615)
!14622 = !DILocation(line: 117, column: 9, scope: !14615)
!14623 = !DILocation(line: 117, column: 2, scope: !14615)
!14624 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !3229, file: !3229, line: 1246, type: !14625, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14625 = !DISubroutineType(types: !14626)
!14626 = !{!3130, !14627}
!14627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14628, size: 32)
!14628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14511, line: 53, size: 2080, elements: !14629)
!14629 = !{!14630, !14632}
!14630 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14628, file: !14511, line: 54, baseType: !14631, size: 2048)
!14631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3166, size: 2048, elements: !2765)
!14632 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14628, file: !14511, line: 55, baseType: !32, size: 32, offset: 2048)
!14633 = !DILocalVariable(name: "pq", arg: 1, scope: !14624, file: !3229, line: 1246, type: !14627)
!14634 = !DILocation(line: 1246, column: 50, scope: !14624)
!14635 = !DILocation(line: 1248, column: 7, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14624, file: !3229, line: 1248, column: 6)
!14637 = !DILocation(line: 1248, column: 11, scope: !14636)
!14638 = !DILocation(line: 1248, column: 6, scope: !14624)
!14639 = !DILocation(line: 1249, column: 3, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14636, file: !3229, line: 1248, column: 20)
!14641 = !DILocalVariable(name: "thread", scope: !14624, file: !3229, line: 1252, type: !3130)
!14642 = !DILocation(line: 1252, column: 19, scope: !14624)
!14643 = !DILocalVariable(name: "l", scope: !14624, file: !3229, line: 1253, type: !12697)
!14644 = !DILocation(line: 1253, column: 15, scope: !14624)
!14645 = !DILocation(line: 1253, column: 20, scope: !14624)
!14646 = !DILocation(line: 1253, column: 24, scope: !14624)
!14647 = !DILocation(line: 1253, column: 45, scope: !14624)
!14648 = !DILocation(line: 1253, column: 49, scope: !14624)
!14649 = !DILocation(line: 1253, column: 31, scope: !14624)
!14650 = !DILocalVariable(name: "n", scope: !14624, file: !3229, line: 1254, type: !3225)
!14651 = !DILocation(line: 1254, column: 15, scope: !14624)
!14652 = !DILocation(line: 1254, column: 39, scope: !14624)
!14653 = !DILocation(line: 1254, column: 19, scope: !14624)
!14654 = !DILocation(line: 1256, column: 6, scope: !14655)
!14655 = distinct !DILexicalBlock(scope: !14624, file: !3229, line: 1256, column: 6)
!14656 = !DILocation(line: 1256, column: 8, scope: !14655)
!14657 = !DILocation(line: 1256, column: 6, scope: !14624)
!14658 = !DILocation(line: 1257, column: 12, scope: !14659)
!14659 = distinct !DILexicalBlock(scope: !14655, file: !3229, line: 1256, column: 17)
!14660 = !DILocation(line: 1257, column: 10, scope: !14659)
!14661 = !DILocation(line: 1258, column: 2, scope: !14659)
!14662 = !DILocation(line: 1259, column: 9, scope: !14624)
!14663 = !DILocation(line: 1259, column: 2, scope: !14624)
!14664 = !DILocation(line: 1260, column: 1, scope: !14624)
!14665 = distinct !DISubprogram(name: "z_unpend_all", scope: !3229, file: !3229, line: 1262, type: !14666, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14666 = !DISubroutineType(types: !14667)
!14667 = !{!103, !3161}
!14668 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14665, file: !3229, line: 1262, type: !3161)
!14669 = !DILocation(line: 1262, column: 29, scope: !14665)
!14670 = !DILocalVariable(name: "need_sched", scope: !14665, file: !3229, line: 1264, type: !103)
!14671 = !DILocation(line: 1264, column: 6, scope: !14665)
!14672 = !DILocalVariable(name: "thread", scope: !14665, file: !3229, line: 1265, type: !3130)
!14673 = !DILocation(line: 1265, column: 19, scope: !14665)
!14674 = !DILocation(line: 1267, column: 2, scope: !14665)
!14675 = !DILocation(line: 1267, column: 32, scope: !14665)
!14676 = !DILocation(line: 1267, column: 19, scope: !14665)
!14677 = !DILocation(line: 1267, column: 17, scope: !14665)
!14678 = !DILocation(line: 1267, column: 41, scope: !14665)
!14679 = !DILocation(line: 1268, column: 19, scope: !14680)
!14680 = distinct !DILexicalBlock(scope: !14665, file: !3229, line: 1267, column: 50)
!14681 = !DILocation(line: 1268, column: 3, scope: !14680)
!14682 = !DILocation(line: 1269, column: 18, scope: !14680)
!14683 = !DILocation(line: 1269, column: 3, scope: !14680)
!14684 = !DILocation(line: 1270, column: 14, scope: !14680)
!14685 = distinct !{!14685, !14674, !14686}
!14686 = !DILocation(line: 1271, column: 2, scope: !14665)
!14687 = !DILocation(line: 1273, column: 9, scope: !14665)
!14688 = !DILocation(line: 1273, column: 2, scope: !14665)
!14689 = distinct !DISubprogram(name: "z_waitq_head", scope: !11562, file: !11562, line: 52, type: !14054, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14690 = !DILocalVariable(name: "w", arg: 1, scope: !14689, file: !11562, line: 52, type: !3161)
!14691 = !DILocation(line: 52, column: 56, scope: !14689)
!14692 = !DILocation(line: 54, column: 49, scope: !14689)
!14693 = !DILocation(line: 54, column: 52, scope: !14689)
!14694 = !DILocation(line: 54, column: 28, scope: !14689)
!14695 = !DILocation(line: 54, column: 9, scope: !14689)
!14696 = !DILocation(line: 54, column: 2, scope: !14689)
!14697 = distinct !DISubprogram(name: "init_ready_q", scope: !3229, file: !3229, line: 1276, type: !14698, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14698 = !DISubroutineType(types: !14699)
!14699 = !{null, !14700}
!14700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14701, size: 32)
!14701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !150, line: 83, size: 96, elements: !14702)
!14702 = !{!14703, !14704}
!14703 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14701, file: !150, line: 86, baseType: !3130, size: 32)
!14704 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14701, file: !150, line: 90, baseType: !3166, size: 64, offset: 32)
!14705 = !DILocalVariable(name: "rq", arg: 1, scope: !14697, file: !3229, line: 1276, type: !14700)
!14706 = !DILocation(line: 1276, column: 36, scope: !14697)
!14707 = !DILocation(line: 1289, column: 18, scope: !14697)
!14708 = !DILocation(line: 1289, column: 22, scope: !14697)
!14709 = !DILocation(line: 1289, column: 2, scope: !14697)
!14710 = !DILocation(line: 1291, column: 1, scope: !14697)
!14711 = distinct !DISubprogram(name: "sys_dlist_init", scope: !124, file: !124, line: 197, type: !14712, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14712 = !DISubroutineType(types: !14713)
!14713 = !{null, !12697}
!14714 = !DILocalVariable(name: "list", arg: 1, scope: !14711, file: !124, line: 197, type: !12697)
!14715 = !DILocation(line: 197, column: 48, scope: !14711)
!14716 = !DILocation(line: 199, column: 30, scope: !14711)
!14717 = !DILocation(line: 199, column: 2, scope: !14711)
!14718 = !DILocation(line: 199, column: 8, scope: !14711)
!14719 = !DILocation(line: 199, column: 13, scope: !14711)
!14720 = !DILocation(line: 200, column: 30, scope: !14711)
!14721 = !DILocation(line: 200, column: 2, scope: !14711)
!14722 = !DILocation(line: 200, column: 8, scope: !14711)
!14723 = !DILocation(line: 200, column: 13, scope: !14711)
!14724 = !DILocation(line: 201, column: 1, scope: !14711)
!14725 = distinct !DISubprogram(name: "z_sched_init", scope: !3229, file: !3229, line: 1293, type: !253, scopeLine: 1294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14726 = !DILocation(line: 1302, column: 2, scope: !14725)
!14727 = !DILocation(line: 1306, column: 2, scope: !14725)
!14728 = !DILocation(line: 1309, column: 1, scope: !14725)
!14729 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !3229, file: !3229, line: 1311, type: !14730, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14730 = !DISubroutineType(types: !14731)
!14731 = !{!103, !14732}
!14732 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !3130)
!14733 = !DILocalVariable(name: "thread", arg: 1, scope: !14729, file: !3229, line: 1311, type: !14732)
!14734 = !DILocation(line: 1311, column: 42, scope: !14729)
!14735 = !DILocation(line: 1313, column: 9, scope: !14729)
!14736 = !DILocation(line: 1313, column: 17, scope: !14729)
!14737 = !DILocation(line: 1313, column: 22, scope: !14729)
!14738 = !DILocation(line: 1313, column: 2, scope: !14729)
!14739 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !3229, file: !3229, line: 1325, type: !14740, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14740 = !DISubroutineType(types: !14741)
!14741 = !{null, !14732, !103}
!14742 = !DILocalVariable(name: "thread", arg: 1, scope: !14739, file: !3229, line: 1325, type: !14732)
!14743 = !DILocation(line: 1325, column: 43, scope: !14739)
!14744 = !DILocalVariable(name: "prio", arg: 2, scope: !14739, file: !3229, line: 1325, type: !103)
!14745 = !DILocation(line: 1325, column: 55, scope: !14739)
!14746 = !DILocation(line: 1331, column: 2, scope: !14739)
!14747 = !DILocation(line: 1331, column: 2, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14739, file: !3229, line: 1331, column: 2)
!14749 = !DILocalVariable(name: "th", scope: !14739, file: !3229, line: 1334, type: !3130)
!14750 = !DILocation(line: 1334, column: 19, scope: !14739)
!14751 = !DILocation(line: 1334, column: 43, scope: !14739)
!14752 = !DILocation(line: 1336, column: 24, scope: !14739)
!14753 = !DILocation(line: 1336, column: 28, scope: !14739)
!14754 = !DILocation(line: 1336, column: 2, scope: !14739)
!14755 = !DILocation(line: 1337, column: 1, scope: !14739)
!14756 = distinct !DISubprogram(name: "k_can_yield", scope: !3229, file: !3229, line: 1384, type: !3780, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14757 = !DILocation(line: 1386, column: 11, scope: !14756)
!14758 = !DILocation(line: 1386, column: 29, scope: !14756)
!14759 = !DILocation(line: 1386, column: 32, scope: !14756)
!14760 = !DILocation(line: 1386, column: 46, scope: !14756)
!14761 = !DILocation(line: 1387, column: 28, scope: !14756)
!14762 = !DILocation(line: 1387, column: 4, scope: !14756)
!14763 = !DILocation(line: 1386, column: 9, scope: !14756)
!14764 = !DILocation(line: 1386, column: 2, scope: !14756)
!14765 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !109, file: !109, line: 989, type: !3780, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14766 = !DILocation(line: 993, column: 10, scope: !14765)
!14767 = !DILocation(line: 993, column: 9, scope: !14765)
!14768 = !DILocation(line: 993, column: 2, scope: !14765)
!14769 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !3229, file: !3229, line: 1390, type: !253, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14770 = !DILocation(line: 1394, column: 2, scope: !14769)
!14771 = !DILocation(line: 1394, column: 2, scope: !14772)
!14772 = distinct !DILexicalBlock(scope: !14769, file: !3229, line: 1394, column: 2)
!14773 = !DILocalVariable(name: "key", scope: !14769, file: !3229, line: 1396, type: !12234)
!14774 = !DILocation(line: 1396, column: 19, scope: !14769)
!14775 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !14776)
!14776 = distinct !DILocation(line: 1396, column: 25, scope: !14769)
!14777 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !14776)
!14778 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !14776)
!14779 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !14780)
!14780 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !14776)
!14781 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !14780)
!14782 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !14780)
!14783 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !14776)
!14784 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !14776)
!14785 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !14776)
!14786 = !DILocation(line: 1396, column: 25, scope: !14769)
!14787 = !DILocation(line: 1400, column: 18, scope: !14788)
!14788 = distinct !DILexicalBlock(scope: !14789, file: !3229, line: 1399, column: 36)
!14789 = distinct !DILexicalBlock(scope: !14769, file: !3229, line: 1398, column: 6)
!14790 = !DILocation(line: 264, column: 59, scope: !12641, inlinedAt: !14791)
!14791 = distinct !DILocation(line: 1400, column: 3, scope: !14788)
!14792 = !DILocation(line: 266, column: 2, scope: !12641, inlinedAt: !14791)
!14793 = !DILocation(line: 266, column: 10, scope: !12641, inlinedAt: !14791)
!14794 = !DILocation(line: 266, column: 15, scope: !12641, inlinedAt: !14791)
!14795 = !DILocation(line: 266, column: 28, scope: !12641, inlinedAt: !14791)
!14796 = !DILocation(line: 267, column: 26, scope: !12649, inlinedAt: !14791)
!14797 = !DILocation(line: 267, column: 6, scope: !12649, inlinedAt: !14791)
!14798 = !DILocation(line: 267, column: 6, scope: !12641, inlinedAt: !14791)
!14799 = !DILocation(line: 268, column: 15, scope: !12653, inlinedAt: !14791)
!14800 = !DILocation(line: 232, column: 56, scope: !12655, inlinedAt: !14801)
!14801 = distinct !DILocation(line: 268, column: 3, scope: !12653, inlinedAt: !14791)
!14802 = !DILocation(line: 234, column: 31, scope: !12655, inlinedAt: !14801)
!14803 = !DILocation(line: 199, column: 57, scope: !12660, inlinedAt: !14804)
!14804 = distinct !DILocation(line: 234, column: 19, scope: !12655, inlinedAt: !14801)
!14805 = !DILocation(line: 234, column: 19, scope: !12655, inlinedAt: !14801)
!14806 = !DILocation(line: 234, column: 40, scope: !12655, inlinedAt: !14801)
!14807 = !DILocation(line: 234, column: 2, scope: !12655, inlinedAt: !14801)
!14808 = !DILocation(line: 269, column: 2, scope: !12653, inlinedAt: !14791)
!14809 = !DILocation(line: 1402, column: 15, scope: !14769)
!14810 = !DILocation(line: 250, column: 57, scope: !12672, inlinedAt: !14811)
!14811 = distinct !DILocation(line: 1402, column: 2, scope: !14769)
!14812 = !DILocation(line: 252, column: 2, scope: !12672, inlinedAt: !14811)
!14813 = !DILocation(line: 252, column: 10, scope: !12672, inlinedAt: !14811)
!14814 = !DILocation(line: 252, column: 15, scope: !12672, inlinedAt: !14811)
!14815 = !DILocation(line: 252, column: 28, scope: !12672, inlinedAt: !14811)
!14816 = !DILocation(line: 253, column: 26, scope: !12680, inlinedAt: !14811)
!14817 = !DILocation(line: 253, column: 6, scope: !12680, inlinedAt: !14811)
!14818 = !DILocation(line: 253, column: 6, scope: !12672, inlinedAt: !14811)
!14819 = !DILocation(line: 254, column: 12, scope: !12684, inlinedAt: !14811)
!14820 = !DILocation(line: 227, column: 53, scope: !12686, inlinedAt: !14821)
!14821 = distinct !DILocation(line: 254, column: 3, scope: !12684, inlinedAt: !14811)
!14822 = !DILocation(line: 229, column: 28, scope: !12686, inlinedAt: !14821)
!14823 = !DILocation(line: 199, column: 57, scope: !12660, inlinedAt: !14824)
!14824 = distinct !DILocation(line: 229, column: 16, scope: !12686, inlinedAt: !14821)
!14825 = !DILocation(line: 229, column: 37, scope: !12686, inlinedAt: !14821)
!14826 = !DILocation(line: 181, column: 56, scope: !12694, inlinedAt: !14827)
!14827 = distinct !DILocation(line: 229, column: 2, scope: !12686, inlinedAt: !14821)
!14828 = !DILocation(line: 182, column: 25, scope: !12694, inlinedAt: !14827)
!14829 = !DILocation(line: 184, column: 19, scope: !12694, inlinedAt: !14827)
!14830 = !DILocation(line: 188, column: 2, scope: !12705, inlinedAt: !14827)
!14831 = !DILocation(line: 188, column: 2, scope: !12707, inlinedAt: !14827)
!14832 = !DILocation(line: 189, column: 24, scope: !12709, inlinedAt: !14827)
!14833 = !DILocation(line: 189, column: 32, scope: !12709, inlinedAt: !14827)
!14834 = !DILocation(line: 189, column: 7, scope: !12709, inlinedAt: !14827)
!14835 = !DILocation(line: 189, column: 35, scope: !12709, inlinedAt: !14827)
!14836 = !DILocation(line: 189, column: 7, scope: !12710, inlinedAt: !14827)
!14837 = !DILocation(line: 190, column: 22, scope: !12716, inlinedAt: !14827)
!14838 = !DILocation(line: 190, column: 25, scope: !12716, inlinedAt: !14827)
!14839 = !DILocation(line: 190, column: 30, scope: !12716, inlinedAt: !14827)
!14840 = !DILocation(line: 191, column: 8, scope: !12716, inlinedAt: !14827)
!14841 = !DILocation(line: 191, column: 16, scope: !12716, inlinedAt: !14827)
!14842 = !DILocation(line: 191, column: 21, scope: !12716, inlinedAt: !14827)
!14843 = !DILocation(line: 190, column: 4, scope: !12716, inlinedAt: !14827)
!14844 = !DILocation(line: 192, column: 4, scope: !12716, inlinedAt: !14827)
!14845 = distinct !{!14845, !14830, !14846}
!14846 = !DILocation(line: 194, column: 2, scope: !12705, inlinedAt: !14827)
!14847 = !DILocation(line: 196, column: 19, scope: !12694, inlinedAt: !14827)
!14848 = !DILocation(line: 196, column: 24, scope: !12694, inlinedAt: !14827)
!14849 = !DILocation(line: 196, column: 32, scope: !12694, inlinedAt: !14827)
!14850 = !DILocation(line: 196, column: 37, scope: !12694, inlinedAt: !14827)
!14851 = !DILocation(line: 196, column: 2, scope: !12694, inlinedAt: !14827)
!14852 = !DILocation(line: 197, column: 1, scope: !12694, inlinedAt: !14827)
!14853 = !DILocation(line: 255, column: 2, scope: !12684, inlinedAt: !14811)
!14854 = !DILocation(line: 1403, column: 2, scope: !14769)
!14855 = !DILocation(line: 1404, column: 2, scope: !14769)
!14856 = !DILocation(line: 193, column: 52, scope: !13327, inlinedAt: !14857)
!14857 = distinct !DILocation(line: 1404, column: 2, scope: !14769)
!14858 = !DILocation(line: 193, column: 75, scope: !13327, inlinedAt: !14857)
!14859 = !DILocation(line: 195, column: 17, scope: !13327, inlinedAt: !14857)
!14860 = !DILocation(line: 221, column: 61, scope: !13336, inlinedAt: !14861)
!14861 = distinct !DILocation(line: 195, column: 2, scope: !13327, inlinedAt: !14857)
!14862 = !DILocation(line: 223, column: 2, scope: !13336, inlinedAt: !14861)
!14863 = !DILocation(line: 196, column: 28, scope: !13327, inlinedAt: !14857)
!14864 = !DILocation(line: 196, column: 9, scope: !13327, inlinedAt: !14857)
!14865 = !DILocation(line: 1405, column: 1, scope: !14769)
!14866 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !3229, file: !3229, line: 1459, type: !14867, scopeLine: 1460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14867 = !DISubroutineType(types: !14868)
!14868 = !{!250, !13619}
!14869 = !DILocalVariable(name: "timeout", arg: 1, scope: !14866, file: !3229, line: 1459, type: !13619)
!14870 = !DILocation(line: 1459, column: 36, scope: !14866)
!14871 = !DILocalVariable(name: "ticks", scope: !14866, file: !3229, line: 1461, type: !2526)
!14872 = !DILocation(line: 1461, column: 12, scope: !14866)
!14873 = !DILocation(line: 1465, column: 2, scope: !14866)
!14874 = !DILocation(line: 1465, column: 2, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14866, file: !3229, line: 1465, column: 2)
!14876 = !DILocation(line: 1468, column: 6, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14866, file: !3229, line: 1468, column: 6)
!14878 = !DILocation(line: 1468, column: 6, scope: !14866)
!14879 = !DILocation(line: 1469, column: 20, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14877, file: !3229, line: 1468, column: 40)
!14881 = !DILocation(line: 1469, column: 3, scope: !14880)
!14882 = !DILocation(line: 1471, column: 3, scope: !14880)
!14883 = !DILocation(line: 1471, column: 3, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14880, file: !3229, line: 1471, column: 3)
!14885 = !DILocation(line: 1473, column: 3, scope: !14880)
!14886 = !DILocation(line: 1476, column: 18, scope: !14866)
!14887 = !DILocation(line: 1476, column: 8, scope: !14866)
!14888 = !DILocation(line: 1478, column: 23, scope: !14866)
!14889 = !DILocation(line: 1478, column: 10, scope: !14866)
!14890 = !DILocation(line: 1478, column: 8, scope: !14866)
!14891 = !DILocalVariable(name: "ret", scope: !14866, file: !3229, line: 1480, type: !250)
!14892 = !DILocation(line: 1480, column: 10, scope: !14866)
!14893 = !DILocation(line: 1480, column: 38, scope: !14866)
!14894 = !DILocation(line: 1480, column: 16, scope: !14866)
!14895 = !DILocation(line: 1482, column: 2, scope: !14866)
!14896 = !DILocation(line: 1482, column: 2, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14866, file: !3229, line: 1482, column: 2)
!14898 = !DILocation(line: 1484, column: 9, scope: !14866)
!14899 = !DILocation(line: 1484, column: 2, scope: !14866)
!14900 = !DILocation(line: 1485, column: 1, scope: !14866)
!14901 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3857, file: !3857, line: 310, type: !14902, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14902 = !DISubroutineType(types: !14903)
!14903 = !{null, !14732}
!14904 = !DILocalVariable(name: "thread", arg: 1, scope: !14901, file: !3857, line: 310, type: !14732)
!14905 = !DILocation(line: 310, column: 45, scope: !14901)
!14906 = !DILocation(line: 319, column: 2, scope: !14901)
!14907 = !DILocation(line: 319, column: 2, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14901, file: !3857, line: 319, column: 2)
!14909 = !{i64 2149681923}
!14910 = !DILocation(line: 320, column: 26, scope: !14901)
!14911 = !DILocation(line: 320, column: 2, scope: !14901)
!14912 = !DILocation(line: 321, column: 1, scope: !14901)
!14913 = distinct !DISubprogram(name: "z_tick_sleep", scope: !3229, file: !3229, line: 1415, type: !14914, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14914 = !DISubroutineType(types: !14915)
!14915 = !{!250, !2526}
!14916 = !DILocalVariable(name: "ticks", arg: 1, scope: !14913, file: !3229, line: 1415, type: !2526)
!14917 = !DILocation(line: 1415, column: 39, scope: !14913)
!14918 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !14913, file: !3229, line: 1418, type: !173)
!14919 = !DILocation(line: 1418, column: 11, scope: !14913)
!14920 = !DILocation(line: 1422, column: 2, scope: !14913)
!14921 = !DILocation(line: 1422, column: 2, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14923, file: !3229, line: 1422, column: 2)
!14923 = distinct !DILexicalBlock(scope: !14924, file: !3229, line: 1422, column: 2)
!14924 = distinct !DILexicalBlock(scope: !14913, file: !3229, line: 1422, column: 2)
!14925 = !DILocation(line: 1425, column: 6, scope: !14926)
!14926 = distinct !DILexicalBlock(scope: !14913, file: !3229, line: 1425, column: 6)
!14927 = !DILocation(line: 1425, column: 12, scope: !14926)
!14928 = !DILocation(line: 1425, column: 6, scope: !14913)
!14929 = !DILocation(line: 1426, column: 3, scope: !14930)
!14930 = distinct !DILexicalBlock(scope: !14926, file: !3229, line: 1425, column: 18)
!14931 = !DILocation(line: 1427, column: 3, scope: !14930)
!14932 = !DILocalVariable(name: "timeout", scope: !14913, file: !3229, line: 1430, type: !13619)
!14933 = !DILocation(line: 1430, column: 14, scope: !14913)
!14934 = !DILocation(line: 1430, column: 24, scope: !14913)
!14935 = !DILocation(line: 1431, column: 6, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14913, file: !3229, line: 1431, column: 6)
!14937 = !DILocation(line: 1431, column: 24, scope: !14936)
!14938 = !DILocation(line: 1431, column: 6, scope: !14913)
!14939 = !DILocation(line: 1432, column: 27, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14936, file: !3229, line: 1431, column: 30)
!14941 = !DILocation(line: 1432, column: 35, scope: !14940)
!14942 = !DILocation(line: 1432, column: 33, scope: !14940)
!14943 = !DILocation(line: 1432, column: 25, scope: !14940)
!14944 = !DILocation(line: 1433, column: 2, scope: !14940)
!14945 = !DILocation(line: 1434, column: 27, scope: !14946)
!14946 = distinct !DILexicalBlock(scope: !14936, file: !3229, line: 1433, column: 9)
!14947 = !DILocation(line: 1434, column: 25, scope: !14946)
!14948 = !DILocalVariable(name: "key", scope: !14913, file: !3229, line: 1437, type: !12234)
!14949 = !DILocation(line: 1437, column: 19, scope: !14913)
!14950 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !14951)
!14951 = distinct !DILocation(line: 1437, column: 25, scope: !14913)
!14952 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !14951)
!14953 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !14951)
!14954 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !14955)
!14955 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !14951)
!14956 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !14955)
!14957 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !14955)
!14958 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !14951)
!14959 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !14951)
!14960 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !14951)
!14961 = !DILocation(line: 1437, column: 25, scope: !14913)
!14962 = !DILocation(line: 1440, column: 20, scope: !14913)
!14963 = !DILocation(line: 1440, column: 18, scope: !14913)
!14964 = !DILocation(line: 1442, column: 17, scope: !14913)
!14965 = !DILocation(line: 1442, column: 2, scope: !14913)
!14966 = !DILocation(line: 1443, column: 23, scope: !14913)
!14967 = !DILocation(line: 1443, column: 2, scope: !14913)
!14968 = !DILocation(line: 1444, column: 29, scope: !14913)
!14969 = !DILocation(line: 1444, column: 2, scope: !14913)
!14970 = !DILocation(line: 1446, column: 8, scope: !14913)
!14971 = !DILocation(line: 193, column: 52, scope: !13327, inlinedAt: !14972)
!14972 = distinct !DILocation(line: 1446, column: 8, scope: !14913)
!14973 = !DILocation(line: 193, column: 75, scope: !13327, inlinedAt: !14972)
!14974 = !DILocation(line: 195, column: 17, scope: !13327, inlinedAt: !14972)
!14975 = !DILocation(line: 221, column: 61, scope: !13336, inlinedAt: !14976)
!14976 = distinct !DILocation(line: 195, column: 2, scope: !13327, inlinedAt: !14972)
!14977 = !DILocation(line: 223, column: 2, scope: !13336, inlinedAt: !14976)
!14978 = !DILocation(line: 196, column: 28, scope: !13327, inlinedAt: !14972)
!14979 = !DILocation(line: 196, column: 9, scope: !13327, inlinedAt: !14972)
!14980 = !DILocation(line: 1450, column: 21, scope: !14913)
!14981 = !DILocation(line: 1450, column: 10, scope: !14913)
!14982 = !DILocation(line: 1450, column: 45, scope: !14913)
!14983 = !DILocation(line: 1450, column: 43, scope: !14913)
!14984 = !DILocation(line: 1450, column: 8, scope: !14913)
!14985 = !DILocation(line: 1451, column: 6, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14913, file: !3229, line: 1451, column: 6)
!14987 = !DILocation(line: 1451, column: 12, scope: !14986)
!14988 = !DILocation(line: 1451, column: 6, scope: !14913)
!14989 = !DILocation(line: 1452, column: 10, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14986, file: !3229, line: 1451, column: 17)
!14991 = !DILocation(line: 1452, column: 3, scope: !14990)
!14992 = !DILocation(line: 1456, column: 2, scope: !14913)
!14993 = !DILocation(line: 1457, column: 1, scope: !14913)
!14994 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !9855, file: !9855, line: 1103, type: !11872, scopeLine: 1104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!14995 = !DILocalVariable(name: "t", arg: 1, scope: !14994, file: !9855, line: 1103, type: !1938)
!14996 = !DILocation(line: 1103, column: 70, scope: !14994)
!14997 = !DILocation(line: 1106, column: 17, scope: !14994)
!14998 = !DILocation(line: 102, column: 63, scope: !12313, inlinedAt: !14999)
!14999 = distinct !DILocation(line: 1106, column: 9, scope: !14994)
!15000 = !DILocation(line: 102, column: 75, scope: !12313, inlinedAt: !14999)
!15001 = !DILocation(line: 103, column: 18, scope: !12313, inlinedAt: !14999)
!15002 = !DILocation(line: 103, column: 30, scope: !12313, inlinedAt: !14999)
!15003 = !DILocation(line: 104, column: 14, scope: !12313, inlinedAt: !14999)
!15004 = !DILocation(line: 104, column: 29, scope: !12313, inlinedAt: !14999)
!15005 = !DILocation(line: 105, column: 14, scope: !12313, inlinedAt: !14999)
!15006 = !DILocation(line: 107, column: 7, scope: !12313, inlinedAt: !14999)
!15007 = !DILocation(line: 107, column: 19, scope: !12313, inlinedAt: !14999)
!15008 = !DILocation(line: 107, column: 28, scope: !12313, inlinedAt: !14999)
!15009 = !DILocation(line: 108, column: 4, scope: !12313, inlinedAt: !14999)
!15010 = !DILocation(line: 108, column: 12, scope: !12313, inlinedAt: !14999)
!15011 = !DILocation(line: 108, column: 10, scope: !12313, inlinedAt: !14999)
!15012 = !DILocation(line: 108, column: 21, scope: !12313, inlinedAt: !14999)
!15013 = !DILocation(line: 108, column: 26, scope: !12313, inlinedAt: !14999)
!15014 = !DILocation(line: 108, column: 34, scope: !12313, inlinedAt: !14999)
!15015 = !DILocation(line: 108, column: 32, scope: !12313, inlinedAt: !14999)
!15016 = !DILocation(line: 108, column: 43, scope: !12313, inlinedAt: !14999)
!15017 = !DILocation(line: 0, scope: !12313, inlinedAt: !14999)
!15018 = !DILocation(line: 109, column: 7, scope: !12313, inlinedAt: !14999)
!15019 = !DILocation(line: 109, column: 19, scope: !12313, inlinedAt: !14999)
!15020 = !DILocation(line: 109, column: 28, scope: !12313, inlinedAt: !14999)
!15021 = !DILocation(line: 110, column: 4, scope: !12313, inlinedAt: !14999)
!15022 = !DILocation(line: 110, column: 14, scope: !12313, inlinedAt: !14999)
!15023 = !DILocation(line: 110, column: 12, scope: !12313, inlinedAt: !14999)
!15024 = !DILocation(line: 110, column: 21, scope: !12313, inlinedAt: !14999)
!15025 = !DILocation(line: 110, column: 26, scope: !12313, inlinedAt: !14999)
!15026 = !DILocation(line: 110, column: 36, scope: !12313, inlinedAt: !14999)
!15027 = !DILocation(line: 110, column: 34, scope: !12313, inlinedAt: !14999)
!15028 = !DILocation(line: 110, column: 43, scope: !12313, inlinedAt: !14999)
!15029 = !DILocation(line: 112, column: 6, scope: !12354, inlinedAt: !14999)
!15030 = !DILocation(line: 112, column: 17, scope: !12354, inlinedAt: !14999)
!15031 = !DILocation(line: 112, column: 14, scope: !12354, inlinedAt: !14999)
!15032 = !DILocation(line: 112, column: 6, scope: !12313, inlinedAt: !14999)
!15033 = !DILocation(line: 113, column: 10, scope: !12359, inlinedAt: !14999)
!15034 = !DILocation(line: 113, column: 32, scope: !12359, inlinedAt: !14999)
!15035 = !DILocation(line: 113, column: 22, scope: !12359, inlinedAt: !14999)
!15036 = !DILocation(line: 113, column: 21, scope: !12359, inlinedAt: !14999)
!15037 = !DILocation(line: 113, column: 37, scope: !12359, inlinedAt: !14999)
!15038 = !DILocation(line: 113, column: 3, scope: !12359, inlinedAt: !14999)
!15039 = !DILocation(line: 116, column: 11, scope: !12313, inlinedAt: !14999)
!15040 = !DILocation(line: 118, column: 7, scope: !12368, inlinedAt: !14999)
!15041 = !DILocation(line: 118, column: 6, scope: !12313, inlinedAt: !14999)
!15042 = !DILocation(line: 119, column: 12, scope: !12371, inlinedAt: !14999)
!15043 = !DILocation(line: 119, column: 23, scope: !12371, inlinedAt: !14999)
!15044 = !DILocation(line: 119, column: 36, scope: !12371, inlinedAt: !14999)
!15045 = !DILocation(line: 119, column: 46, scope: !12371, inlinedAt: !14999)
!15046 = !DILocation(line: 119, column: 44, scope: !12371, inlinedAt: !14999)
!15047 = !DILocation(line: 119, column: 55, scope: !12371, inlinedAt: !14999)
!15048 = !DILocation(line: 121, column: 7, scope: !12379, inlinedAt: !14999)
!15049 = !DILocation(line: 121, column: 7, scope: !12371, inlinedAt: !14999)
!15050 = !DILocation(line: 122, column: 10, scope: !12382, inlinedAt: !14999)
!15051 = !DILocation(line: 122, column: 19, scope: !12382, inlinedAt: !14999)
!15052 = !DILocation(line: 122, column: 8, scope: !12382, inlinedAt: !14999)
!15053 = !DILocation(line: 123, column: 3, scope: !12382, inlinedAt: !14999)
!15054 = !DILocation(line: 124, column: 7, scope: !12387, inlinedAt: !14999)
!15055 = !DILocation(line: 124, column: 7, scope: !12371, inlinedAt: !14999)
!15056 = !DILocation(line: 125, column: 10, scope: !12390, inlinedAt: !14999)
!15057 = !DILocation(line: 125, column: 19, scope: !12390, inlinedAt: !14999)
!15058 = !DILocation(line: 125, column: 8, scope: !12390, inlinedAt: !14999)
!15059 = !DILocation(line: 126, column: 3, scope: !12390, inlinedAt: !14999)
!15060 = !DILocation(line: 127, column: 2, scope: !12371, inlinedAt: !14999)
!15061 = !DILocation(line: 134, column: 6, scope: !12396, inlinedAt: !14999)
!15062 = !DILocation(line: 134, column: 6, scope: !12313, inlinedAt: !14999)
!15063 = !DILocation(line: 135, column: 8, scope: !12399, inlinedAt: !14999)
!15064 = !DILocation(line: 135, column: 5, scope: !12399, inlinedAt: !14999)
!15065 = !DILocation(line: 136, column: 7, scope: !12402, inlinedAt: !14999)
!15066 = !DILocation(line: 136, column: 16, scope: !12402, inlinedAt: !14999)
!15067 = !DILocation(line: 136, column: 20, scope: !12402, inlinedAt: !14999)
!15068 = !DILocation(line: 136, column: 22, scope: !12402, inlinedAt: !14999)
!15069 = !DILocation(line: 136, column: 7, scope: !12399, inlinedAt: !14999)
!15070 = !DILocation(line: 137, column: 22, scope: !12408, inlinedAt: !14999)
!15071 = !DILocation(line: 137, column: 12, scope: !12408, inlinedAt: !14999)
!15072 = !DILocation(line: 137, column: 28, scope: !12408, inlinedAt: !14999)
!15073 = !DILocation(line: 137, column: 38, scope: !12408, inlinedAt: !14999)
!15074 = !DILocation(line: 137, column: 36, scope: !12408, inlinedAt: !14999)
!15075 = !DILocation(line: 137, column: 25, scope: !12408, inlinedAt: !14999)
!15076 = !DILocation(line: 137, column: 11, scope: !12408, inlinedAt: !14999)
!15077 = !DILocation(line: 137, column: 4, scope: !12408, inlinedAt: !14999)
!15078 = !DILocation(line: 139, column: 11, scope: !12417, inlinedAt: !14999)
!15079 = !DILocation(line: 139, column: 26, scope: !12417, inlinedAt: !14999)
!15080 = !DILocation(line: 139, column: 16, scope: !12417, inlinedAt: !14999)
!15081 = !DILocation(line: 139, column: 36, scope: !12417, inlinedAt: !14999)
!15082 = !DILocation(line: 139, column: 34, scope: !12417, inlinedAt: !14999)
!15083 = !DILocation(line: 139, column: 13, scope: !12417, inlinedAt: !14999)
!15084 = !DILocation(line: 139, column: 4, scope: !12417, inlinedAt: !14999)
!15085 = !DILocation(line: 141, column: 13, scope: !12425, inlinedAt: !14999)
!15086 = !DILocation(line: 141, column: 13, scope: !12396, inlinedAt: !14999)
!15087 = !DILocation(line: 142, column: 7, scope: !12428, inlinedAt: !14999)
!15088 = !DILocation(line: 142, column: 7, scope: !12429, inlinedAt: !14999)
!15089 = !DILocation(line: 143, column: 22, scope: !12432, inlinedAt: !14999)
!15090 = !DILocation(line: 143, column: 12, scope: !12432, inlinedAt: !14999)
!15091 = !DILocation(line: 143, column: 28, scope: !12432, inlinedAt: !14999)
!15092 = !DILocation(line: 143, column: 36, scope: !12432, inlinedAt: !14999)
!15093 = !DILocation(line: 143, column: 34, scope: !12432, inlinedAt: !14999)
!15094 = !DILocation(line: 143, column: 25, scope: !12432, inlinedAt: !14999)
!15095 = !DILocation(line: 143, column: 11, scope: !12432, inlinedAt: !14999)
!15096 = !DILocation(line: 143, column: 4, scope: !12432, inlinedAt: !14999)
!15097 = !DILocation(line: 145, column: 11, scope: !12441, inlinedAt: !14999)
!15098 = !DILocation(line: 145, column: 26, scope: !12441, inlinedAt: !14999)
!15099 = !DILocation(line: 145, column: 16, scope: !12441, inlinedAt: !14999)
!15100 = !DILocation(line: 145, column: 34, scope: !12441, inlinedAt: !14999)
!15101 = !DILocation(line: 145, column: 32, scope: !12441, inlinedAt: !14999)
!15102 = !DILocation(line: 145, column: 13, scope: !12441, inlinedAt: !14999)
!15103 = !DILocation(line: 145, column: 4, scope: !12441, inlinedAt: !14999)
!15104 = !DILocation(line: 148, column: 7, scope: !12449, inlinedAt: !14999)
!15105 = !DILocation(line: 148, column: 7, scope: !12450, inlinedAt: !14999)
!15106 = !DILocation(line: 149, column: 23, scope: !12453, inlinedAt: !14999)
!15107 = !DILocation(line: 149, column: 27, scope: !12453, inlinedAt: !14999)
!15108 = !DILocation(line: 149, column: 25, scope: !12453, inlinedAt: !14999)
!15109 = !DILocation(line: 149, column: 35, scope: !12453, inlinedAt: !14999)
!15110 = !DILocation(line: 149, column: 33, scope: !12453, inlinedAt: !14999)
!15111 = !DILocation(line: 149, column: 42, scope: !12453, inlinedAt: !14999)
!15112 = !DILocation(line: 149, column: 40, scope: !12453, inlinedAt: !14999)
!15113 = !DILocation(line: 149, column: 11, scope: !12453, inlinedAt: !14999)
!15114 = !DILocation(line: 149, column: 4, scope: !12453, inlinedAt: !14999)
!15115 = !DILocation(line: 150, column: 14, scope: !12463, inlinedAt: !14999)
!15116 = !DILocation(line: 150, column: 23, scope: !12463, inlinedAt: !14999)
!15117 = !DILocation(line: 150, column: 26, scope: !12463, inlinedAt: !14999)
!15118 = !DILocation(line: 150, column: 14, scope: !12449, inlinedAt: !14999)
!15119 = !DILocation(line: 156, column: 13, scope: !12468, inlinedAt: !14999)
!15120 = !DILocation(line: 156, column: 17, scope: !12468, inlinedAt: !14999)
!15121 = !DILocation(line: 156, column: 15, scope: !12468, inlinedAt: !14999)
!15122 = !DILocation(line: 156, column: 25, scope: !12468, inlinedAt: !14999)
!15123 = !DILocation(line: 156, column: 23, scope: !12468, inlinedAt: !14999)
!15124 = !DILocation(line: 156, column: 32, scope: !12468, inlinedAt: !14999)
!15125 = !DILocation(line: 156, column: 30, scope: !12468, inlinedAt: !14999)
!15126 = !DILocation(line: 156, column: 4, scope: !12468, inlinedAt: !14999)
!15127 = !DILocation(line: 161, column: 12, scope: !12477, inlinedAt: !14999)
!15128 = !DILocation(line: 161, column: 16, scope: !12477, inlinedAt: !14999)
!15129 = !DILocation(line: 161, column: 14, scope: !12477, inlinedAt: !14999)
!15130 = !DILocation(line: 161, column: 27, scope: !12477, inlinedAt: !14999)
!15131 = !DILocation(line: 161, column: 25, scope: !12477, inlinedAt: !14999)
!15132 = !DILocation(line: 161, column: 37, scope: !12477, inlinedAt: !14999)
!15133 = !DILocation(line: 161, column: 41, scope: !12477, inlinedAt: !14999)
!15134 = !DILocation(line: 161, column: 39, scope: !12477, inlinedAt: !14999)
!15135 = !DILocation(line: 161, column: 52, scope: !12477, inlinedAt: !14999)
!15136 = !DILocation(line: 161, column: 50, scope: !12477, inlinedAt: !14999)
!15137 = !DILocation(line: 161, column: 60, scope: !12477, inlinedAt: !14999)
!15138 = !DILocation(line: 161, column: 58, scope: !12477, inlinedAt: !14999)
!15139 = !DILocation(line: 161, column: 67, scope: !12477, inlinedAt: !14999)
!15140 = !DILocation(line: 161, column: 65, scope: !12477, inlinedAt: !14999)
!15141 = !DILocation(line: 161, column: 33, scope: !12477, inlinedAt: !14999)
!15142 = !DILocation(line: 161, column: 4, scope: !12477, inlinedAt: !14999)
!15143 = !DILocation(line: 164, column: 1, scope: !12313, inlinedAt: !14999)
!15144 = !DILocation(line: 1106, column: 2, scope: !14994)
!15145 = distinct !DISubprogram(name: "k_yield", scope: !3857, file: !3857, line: 140, type: !253, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15146 = !DILocation(line: 148, column: 2, scope: !15145)
!15147 = !DILocation(line: 148, column: 2, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15145, file: !3857, line: 148, column: 2)
!15149 = !{i64 2149681243}
!15150 = !DILocation(line: 149, column: 2, scope: !15145)
!15151 = !DILocation(line: 150, column: 1, scope: !15145)
!15152 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !3229, file: !3229, line: 1495, type: !15153, scopeLine: 1496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15153 = !DISubroutineType(types: !15154)
!15154 = !{!250, !103}
!15155 = !DILocalVariable(name: "us", arg: 1, scope: !15152, file: !3229, line: 1495, type: !103)
!15156 = !DILocation(line: 1495, column: 29, scope: !15152)
!15157 = !DILocalVariable(name: "ticks", scope: !15152, file: !3229, line: 1497, type: !250)
!15158 = !DILocation(line: 1497, column: 10, scope: !15152)
!15159 = !DILocation(line: 1499, column: 2, scope: !15152)
!15160 = !DILocation(line: 1499, column: 2, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15152, file: !3229, line: 1499, column: 2)
!15162 = !DILocation(line: 1501, column: 31, scope: !15152)
!15163 = !DILocation(line: 1501, column: 10, scope: !15152)
!15164 = !DILocation(line: 1501, column: 8, scope: !15152)
!15165 = !DILocation(line: 1502, column: 23, scope: !15152)
!15166 = !DILocation(line: 1502, column: 10, scope: !15152)
!15167 = !DILocation(line: 1502, column: 8, scope: !15152)
!15168 = !DILocation(line: 1504, column: 2, scope: !15152)
!15169 = !DILocation(line: 1504, column: 2, scope: !15170)
!15170 = distinct !DILexicalBlock(scope: !15152, file: !3229, line: 1504, column: 2)
!15171 = !DILocation(line: 1506, column: 31, scope: !15152)
!15172 = !DILocation(line: 1506, column: 9, scope: !15152)
!15173 = !DILocation(line: 1506, column: 2, scope: !15152)
!15174 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !9855, file: !9855, line: 571, type: !11872, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15175 = !DILocalVariable(name: "t", arg: 1, scope: !15174, file: !9855, line: 571, type: !1938)
!15176 = !DILocation(line: 571, column: 69, scope: !15174)
!15177 = !DILocation(line: 574, column: 17, scope: !15174)
!15178 = !DILocation(line: 102, column: 63, scope: !12313, inlinedAt: !15179)
!15179 = distinct !DILocation(line: 574, column: 9, scope: !15174)
!15180 = !DILocation(line: 102, column: 75, scope: !12313, inlinedAt: !15179)
!15181 = !DILocation(line: 103, column: 18, scope: !12313, inlinedAt: !15179)
!15182 = !DILocation(line: 103, column: 30, scope: !12313, inlinedAt: !15179)
!15183 = !DILocation(line: 104, column: 14, scope: !12313, inlinedAt: !15179)
!15184 = !DILocation(line: 104, column: 29, scope: !12313, inlinedAt: !15179)
!15185 = !DILocation(line: 105, column: 14, scope: !12313, inlinedAt: !15179)
!15186 = !DILocation(line: 107, column: 7, scope: !12313, inlinedAt: !15179)
!15187 = !DILocation(line: 107, column: 19, scope: !12313, inlinedAt: !15179)
!15188 = !DILocation(line: 107, column: 28, scope: !12313, inlinedAt: !15179)
!15189 = !DILocation(line: 108, column: 4, scope: !12313, inlinedAt: !15179)
!15190 = !DILocation(line: 108, column: 12, scope: !12313, inlinedAt: !15179)
!15191 = !DILocation(line: 108, column: 10, scope: !12313, inlinedAt: !15179)
!15192 = !DILocation(line: 108, column: 21, scope: !12313, inlinedAt: !15179)
!15193 = !DILocation(line: 108, column: 26, scope: !12313, inlinedAt: !15179)
!15194 = !DILocation(line: 108, column: 34, scope: !12313, inlinedAt: !15179)
!15195 = !DILocation(line: 108, column: 32, scope: !12313, inlinedAt: !15179)
!15196 = !DILocation(line: 108, column: 43, scope: !12313, inlinedAt: !15179)
!15197 = !DILocation(line: 0, scope: !12313, inlinedAt: !15179)
!15198 = !DILocation(line: 109, column: 7, scope: !12313, inlinedAt: !15179)
!15199 = !DILocation(line: 109, column: 19, scope: !12313, inlinedAt: !15179)
!15200 = !DILocation(line: 109, column: 28, scope: !12313, inlinedAt: !15179)
!15201 = !DILocation(line: 110, column: 4, scope: !12313, inlinedAt: !15179)
!15202 = !DILocation(line: 110, column: 14, scope: !12313, inlinedAt: !15179)
!15203 = !DILocation(line: 110, column: 12, scope: !12313, inlinedAt: !15179)
!15204 = !DILocation(line: 110, column: 21, scope: !12313, inlinedAt: !15179)
!15205 = !DILocation(line: 110, column: 26, scope: !12313, inlinedAt: !15179)
!15206 = !DILocation(line: 110, column: 36, scope: !12313, inlinedAt: !15179)
!15207 = !DILocation(line: 110, column: 34, scope: !12313, inlinedAt: !15179)
!15208 = !DILocation(line: 110, column: 43, scope: !12313, inlinedAt: !15179)
!15209 = !DILocation(line: 112, column: 6, scope: !12354, inlinedAt: !15179)
!15210 = !DILocation(line: 112, column: 17, scope: !12354, inlinedAt: !15179)
!15211 = !DILocation(line: 112, column: 14, scope: !12354, inlinedAt: !15179)
!15212 = !DILocation(line: 112, column: 6, scope: !12313, inlinedAt: !15179)
!15213 = !DILocation(line: 113, column: 10, scope: !12359, inlinedAt: !15179)
!15214 = !DILocation(line: 113, column: 32, scope: !12359, inlinedAt: !15179)
!15215 = !DILocation(line: 113, column: 22, scope: !12359, inlinedAt: !15179)
!15216 = !DILocation(line: 113, column: 21, scope: !12359, inlinedAt: !15179)
!15217 = !DILocation(line: 113, column: 37, scope: !12359, inlinedAt: !15179)
!15218 = !DILocation(line: 113, column: 3, scope: !12359, inlinedAt: !15179)
!15219 = !DILocation(line: 116, column: 11, scope: !12313, inlinedAt: !15179)
!15220 = !DILocation(line: 118, column: 7, scope: !12368, inlinedAt: !15179)
!15221 = !DILocation(line: 118, column: 6, scope: !12313, inlinedAt: !15179)
!15222 = !DILocation(line: 119, column: 12, scope: !12371, inlinedAt: !15179)
!15223 = !DILocation(line: 119, column: 23, scope: !12371, inlinedAt: !15179)
!15224 = !DILocation(line: 119, column: 36, scope: !12371, inlinedAt: !15179)
!15225 = !DILocation(line: 119, column: 46, scope: !12371, inlinedAt: !15179)
!15226 = !DILocation(line: 119, column: 44, scope: !12371, inlinedAt: !15179)
!15227 = !DILocation(line: 119, column: 55, scope: !12371, inlinedAt: !15179)
!15228 = !DILocation(line: 121, column: 7, scope: !12379, inlinedAt: !15179)
!15229 = !DILocation(line: 121, column: 7, scope: !12371, inlinedAt: !15179)
!15230 = !DILocation(line: 122, column: 10, scope: !12382, inlinedAt: !15179)
!15231 = !DILocation(line: 122, column: 19, scope: !12382, inlinedAt: !15179)
!15232 = !DILocation(line: 122, column: 8, scope: !12382, inlinedAt: !15179)
!15233 = !DILocation(line: 123, column: 3, scope: !12382, inlinedAt: !15179)
!15234 = !DILocation(line: 124, column: 7, scope: !12387, inlinedAt: !15179)
!15235 = !DILocation(line: 124, column: 7, scope: !12371, inlinedAt: !15179)
!15236 = !DILocation(line: 125, column: 10, scope: !12390, inlinedAt: !15179)
!15237 = !DILocation(line: 125, column: 19, scope: !12390, inlinedAt: !15179)
!15238 = !DILocation(line: 125, column: 8, scope: !12390, inlinedAt: !15179)
!15239 = !DILocation(line: 126, column: 3, scope: !12390, inlinedAt: !15179)
!15240 = !DILocation(line: 127, column: 2, scope: !12371, inlinedAt: !15179)
!15241 = !DILocation(line: 134, column: 6, scope: !12396, inlinedAt: !15179)
!15242 = !DILocation(line: 134, column: 6, scope: !12313, inlinedAt: !15179)
!15243 = !DILocation(line: 135, column: 8, scope: !12399, inlinedAt: !15179)
!15244 = !DILocation(line: 135, column: 5, scope: !12399, inlinedAt: !15179)
!15245 = !DILocation(line: 136, column: 7, scope: !12402, inlinedAt: !15179)
!15246 = !DILocation(line: 136, column: 16, scope: !12402, inlinedAt: !15179)
!15247 = !DILocation(line: 136, column: 20, scope: !12402, inlinedAt: !15179)
!15248 = !DILocation(line: 136, column: 22, scope: !12402, inlinedAt: !15179)
!15249 = !DILocation(line: 136, column: 7, scope: !12399, inlinedAt: !15179)
!15250 = !DILocation(line: 137, column: 22, scope: !12408, inlinedAt: !15179)
!15251 = !DILocation(line: 137, column: 12, scope: !12408, inlinedAt: !15179)
!15252 = !DILocation(line: 137, column: 28, scope: !12408, inlinedAt: !15179)
!15253 = !DILocation(line: 137, column: 38, scope: !12408, inlinedAt: !15179)
!15254 = !DILocation(line: 137, column: 36, scope: !12408, inlinedAt: !15179)
!15255 = !DILocation(line: 137, column: 25, scope: !12408, inlinedAt: !15179)
!15256 = !DILocation(line: 137, column: 11, scope: !12408, inlinedAt: !15179)
!15257 = !DILocation(line: 137, column: 4, scope: !12408, inlinedAt: !15179)
!15258 = !DILocation(line: 139, column: 11, scope: !12417, inlinedAt: !15179)
!15259 = !DILocation(line: 139, column: 26, scope: !12417, inlinedAt: !15179)
!15260 = !DILocation(line: 139, column: 16, scope: !12417, inlinedAt: !15179)
!15261 = !DILocation(line: 139, column: 36, scope: !12417, inlinedAt: !15179)
!15262 = !DILocation(line: 139, column: 34, scope: !12417, inlinedAt: !15179)
!15263 = !DILocation(line: 139, column: 13, scope: !12417, inlinedAt: !15179)
!15264 = !DILocation(line: 139, column: 4, scope: !12417, inlinedAt: !15179)
!15265 = !DILocation(line: 141, column: 13, scope: !12425, inlinedAt: !15179)
!15266 = !DILocation(line: 141, column: 13, scope: !12396, inlinedAt: !15179)
!15267 = !DILocation(line: 142, column: 7, scope: !12428, inlinedAt: !15179)
!15268 = !DILocation(line: 142, column: 7, scope: !12429, inlinedAt: !15179)
!15269 = !DILocation(line: 143, column: 22, scope: !12432, inlinedAt: !15179)
!15270 = !DILocation(line: 143, column: 12, scope: !12432, inlinedAt: !15179)
!15271 = !DILocation(line: 143, column: 28, scope: !12432, inlinedAt: !15179)
!15272 = !DILocation(line: 143, column: 36, scope: !12432, inlinedAt: !15179)
!15273 = !DILocation(line: 143, column: 34, scope: !12432, inlinedAt: !15179)
!15274 = !DILocation(line: 143, column: 25, scope: !12432, inlinedAt: !15179)
!15275 = !DILocation(line: 143, column: 11, scope: !12432, inlinedAt: !15179)
!15276 = !DILocation(line: 143, column: 4, scope: !12432, inlinedAt: !15179)
!15277 = !DILocation(line: 145, column: 11, scope: !12441, inlinedAt: !15179)
!15278 = !DILocation(line: 145, column: 26, scope: !12441, inlinedAt: !15179)
!15279 = !DILocation(line: 145, column: 16, scope: !12441, inlinedAt: !15179)
!15280 = !DILocation(line: 145, column: 34, scope: !12441, inlinedAt: !15179)
!15281 = !DILocation(line: 145, column: 32, scope: !12441, inlinedAt: !15179)
!15282 = !DILocation(line: 145, column: 13, scope: !12441, inlinedAt: !15179)
!15283 = !DILocation(line: 145, column: 4, scope: !12441, inlinedAt: !15179)
!15284 = !DILocation(line: 148, column: 7, scope: !12449, inlinedAt: !15179)
!15285 = !DILocation(line: 148, column: 7, scope: !12450, inlinedAt: !15179)
!15286 = !DILocation(line: 149, column: 23, scope: !12453, inlinedAt: !15179)
!15287 = !DILocation(line: 149, column: 27, scope: !12453, inlinedAt: !15179)
!15288 = !DILocation(line: 149, column: 25, scope: !12453, inlinedAt: !15179)
!15289 = !DILocation(line: 149, column: 35, scope: !12453, inlinedAt: !15179)
!15290 = !DILocation(line: 149, column: 33, scope: !12453, inlinedAt: !15179)
!15291 = !DILocation(line: 149, column: 42, scope: !12453, inlinedAt: !15179)
!15292 = !DILocation(line: 149, column: 40, scope: !12453, inlinedAt: !15179)
!15293 = !DILocation(line: 149, column: 11, scope: !12453, inlinedAt: !15179)
!15294 = !DILocation(line: 149, column: 4, scope: !12453, inlinedAt: !15179)
!15295 = !DILocation(line: 150, column: 14, scope: !12463, inlinedAt: !15179)
!15296 = !DILocation(line: 150, column: 23, scope: !12463, inlinedAt: !15179)
!15297 = !DILocation(line: 150, column: 26, scope: !12463, inlinedAt: !15179)
!15298 = !DILocation(line: 150, column: 14, scope: !12449, inlinedAt: !15179)
!15299 = !DILocation(line: 156, column: 13, scope: !12468, inlinedAt: !15179)
!15300 = !DILocation(line: 156, column: 17, scope: !12468, inlinedAt: !15179)
!15301 = !DILocation(line: 156, column: 15, scope: !12468, inlinedAt: !15179)
!15302 = !DILocation(line: 156, column: 25, scope: !12468, inlinedAt: !15179)
!15303 = !DILocation(line: 156, column: 23, scope: !12468, inlinedAt: !15179)
!15304 = !DILocation(line: 156, column: 32, scope: !12468, inlinedAt: !15179)
!15305 = !DILocation(line: 156, column: 30, scope: !12468, inlinedAt: !15179)
!15306 = !DILocation(line: 156, column: 4, scope: !12468, inlinedAt: !15179)
!15307 = !DILocation(line: 161, column: 12, scope: !12477, inlinedAt: !15179)
!15308 = !DILocation(line: 161, column: 16, scope: !12477, inlinedAt: !15179)
!15309 = !DILocation(line: 161, column: 14, scope: !12477, inlinedAt: !15179)
!15310 = !DILocation(line: 161, column: 27, scope: !12477, inlinedAt: !15179)
!15311 = !DILocation(line: 161, column: 25, scope: !12477, inlinedAt: !15179)
!15312 = !DILocation(line: 161, column: 37, scope: !12477, inlinedAt: !15179)
!15313 = !DILocation(line: 161, column: 41, scope: !12477, inlinedAt: !15179)
!15314 = !DILocation(line: 161, column: 39, scope: !12477, inlinedAt: !15179)
!15315 = !DILocation(line: 161, column: 52, scope: !12477, inlinedAt: !15179)
!15316 = !DILocation(line: 161, column: 50, scope: !12477, inlinedAt: !15179)
!15317 = !DILocation(line: 161, column: 60, scope: !12477, inlinedAt: !15179)
!15318 = !DILocation(line: 161, column: 58, scope: !12477, inlinedAt: !15179)
!15319 = !DILocation(line: 161, column: 67, scope: !12477, inlinedAt: !15179)
!15320 = !DILocation(line: 161, column: 65, scope: !12477, inlinedAt: !15179)
!15321 = !DILocation(line: 161, column: 33, scope: !12477, inlinedAt: !15179)
!15322 = !DILocation(line: 161, column: 4, scope: !12477, inlinedAt: !15179)
!15323 = !DILocation(line: 164, column: 1, scope: !12313, inlinedAt: !15179)
!15324 = !DILocation(line: 574, column: 2, scope: !15174)
!15325 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !9855, file: !9855, line: 1187, type: !11872, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15326 = !DILocalVariable(name: "t", arg: 1, scope: !15325, file: !9855, line: 1187, type: !1938)
!15327 = !DILocation(line: 1187, column: 70, scope: !15325)
!15328 = !DILocation(line: 1190, column: 17, scope: !15325)
!15329 = !DILocation(line: 102, column: 63, scope: !12313, inlinedAt: !15330)
!15330 = distinct !DILocation(line: 1190, column: 9, scope: !15325)
!15331 = !DILocation(line: 102, column: 75, scope: !12313, inlinedAt: !15330)
!15332 = !DILocation(line: 103, column: 18, scope: !12313, inlinedAt: !15330)
!15333 = !DILocation(line: 103, column: 30, scope: !12313, inlinedAt: !15330)
!15334 = !DILocation(line: 104, column: 14, scope: !12313, inlinedAt: !15330)
!15335 = !DILocation(line: 104, column: 29, scope: !12313, inlinedAt: !15330)
!15336 = !DILocation(line: 105, column: 14, scope: !12313, inlinedAt: !15330)
!15337 = !DILocation(line: 107, column: 7, scope: !12313, inlinedAt: !15330)
!15338 = !DILocation(line: 107, column: 19, scope: !12313, inlinedAt: !15330)
!15339 = !DILocation(line: 107, column: 28, scope: !12313, inlinedAt: !15330)
!15340 = !DILocation(line: 108, column: 4, scope: !12313, inlinedAt: !15330)
!15341 = !DILocation(line: 108, column: 12, scope: !12313, inlinedAt: !15330)
!15342 = !DILocation(line: 108, column: 10, scope: !12313, inlinedAt: !15330)
!15343 = !DILocation(line: 108, column: 21, scope: !12313, inlinedAt: !15330)
!15344 = !DILocation(line: 108, column: 26, scope: !12313, inlinedAt: !15330)
!15345 = !DILocation(line: 108, column: 34, scope: !12313, inlinedAt: !15330)
!15346 = !DILocation(line: 108, column: 32, scope: !12313, inlinedAt: !15330)
!15347 = !DILocation(line: 108, column: 43, scope: !12313, inlinedAt: !15330)
!15348 = !DILocation(line: 0, scope: !12313, inlinedAt: !15330)
!15349 = !DILocation(line: 109, column: 7, scope: !12313, inlinedAt: !15330)
!15350 = !DILocation(line: 109, column: 19, scope: !12313, inlinedAt: !15330)
!15351 = !DILocation(line: 109, column: 28, scope: !12313, inlinedAt: !15330)
!15352 = !DILocation(line: 110, column: 4, scope: !12313, inlinedAt: !15330)
!15353 = !DILocation(line: 110, column: 14, scope: !12313, inlinedAt: !15330)
!15354 = !DILocation(line: 110, column: 12, scope: !12313, inlinedAt: !15330)
!15355 = !DILocation(line: 110, column: 21, scope: !12313, inlinedAt: !15330)
!15356 = !DILocation(line: 110, column: 26, scope: !12313, inlinedAt: !15330)
!15357 = !DILocation(line: 110, column: 36, scope: !12313, inlinedAt: !15330)
!15358 = !DILocation(line: 110, column: 34, scope: !12313, inlinedAt: !15330)
!15359 = !DILocation(line: 110, column: 43, scope: !12313, inlinedAt: !15330)
!15360 = !DILocation(line: 112, column: 6, scope: !12354, inlinedAt: !15330)
!15361 = !DILocation(line: 112, column: 17, scope: !12354, inlinedAt: !15330)
!15362 = !DILocation(line: 112, column: 14, scope: !12354, inlinedAt: !15330)
!15363 = !DILocation(line: 112, column: 6, scope: !12313, inlinedAt: !15330)
!15364 = !DILocation(line: 113, column: 10, scope: !12359, inlinedAt: !15330)
!15365 = !DILocation(line: 113, column: 32, scope: !12359, inlinedAt: !15330)
!15366 = !DILocation(line: 113, column: 22, scope: !12359, inlinedAt: !15330)
!15367 = !DILocation(line: 113, column: 21, scope: !12359, inlinedAt: !15330)
!15368 = !DILocation(line: 113, column: 37, scope: !12359, inlinedAt: !15330)
!15369 = !DILocation(line: 113, column: 3, scope: !12359, inlinedAt: !15330)
!15370 = !DILocation(line: 116, column: 11, scope: !12313, inlinedAt: !15330)
!15371 = !DILocation(line: 118, column: 7, scope: !12368, inlinedAt: !15330)
!15372 = !DILocation(line: 118, column: 6, scope: !12313, inlinedAt: !15330)
!15373 = !DILocation(line: 119, column: 12, scope: !12371, inlinedAt: !15330)
!15374 = !DILocation(line: 119, column: 23, scope: !12371, inlinedAt: !15330)
!15375 = !DILocation(line: 119, column: 36, scope: !12371, inlinedAt: !15330)
!15376 = !DILocation(line: 119, column: 46, scope: !12371, inlinedAt: !15330)
!15377 = !DILocation(line: 119, column: 44, scope: !12371, inlinedAt: !15330)
!15378 = !DILocation(line: 119, column: 55, scope: !12371, inlinedAt: !15330)
!15379 = !DILocation(line: 121, column: 7, scope: !12379, inlinedAt: !15330)
!15380 = !DILocation(line: 121, column: 7, scope: !12371, inlinedAt: !15330)
!15381 = !DILocation(line: 122, column: 10, scope: !12382, inlinedAt: !15330)
!15382 = !DILocation(line: 122, column: 19, scope: !12382, inlinedAt: !15330)
!15383 = !DILocation(line: 122, column: 8, scope: !12382, inlinedAt: !15330)
!15384 = !DILocation(line: 123, column: 3, scope: !12382, inlinedAt: !15330)
!15385 = !DILocation(line: 124, column: 7, scope: !12387, inlinedAt: !15330)
!15386 = !DILocation(line: 124, column: 7, scope: !12371, inlinedAt: !15330)
!15387 = !DILocation(line: 125, column: 10, scope: !12390, inlinedAt: !15330)
!15388 = !DILocation(line: 125, column: 19, scope: !12390, inlinedAt: !15330)
!15389 = !DILocation(line: 125, column: 8, scope: !12390, inlinedAt: !15330)
!15390 = !DILocation(line: 126, column: 3, scope: !12390, inlinedAt: !15330)
!15391 = !DILocation(line: 127, column: 2, scope: !12371, inlinedAt: !15330)
!15392 = !DILocation(line: 134, column: 6, scope: !12396, inlinedAt: !15330)
!15393 = !DILocation(line: 134, column: 6, scope: !12313, inlinedAt: !15330)
!15394 = !DILocation(line: 135, column: 8, scope: !12399, inlinedAt: !15330)
!15395 = !DILocation(line: 135, column: 5, scope: !12399, inlinedAt: !15330)
!15396 = !DILocation(line: 136, column: 7, scope: !12402, inlinedAt: !15330)
!15397 = !DILocation(line: 136, column: 16, scope: !12402, inlinedAt: !15330)
!15398 = !DILocation(line: 136, column: 20, scope: !12402, inlinedAt: !15330)
!15399 = !DILocation(line: 136, column: 22, scope: !12402, inlinedAt: !15330)
!15400 = !DILocation(line: 136, column: 7, scope: !12399, inlinedAt: !15330)
!15401 = !DILocation(line: 137, column: 22, scope: !12408, inlinedAt: !15330)
!15402 = !DILocation(line: 137, column: 12, scope: !12408, inlinedAt: !15330)
!15403 = !DILocation(line: 137, column: 28, scope: !12408, inlinedAt: !15330)
!15404 = !DILocation(line: 137, column: 38, scope: !12408, inlinedAt: !15330)
!15405 = !DILocation(line: 137, column: 36, scope: !12408, inlinedAt: !15330)
!15406 = !DILocation(line: 137, column: 25, scope: !12408, inlinedAt: !15330)
!15407 = !DILocation(line: 137, column: 11, scope: !12408, inlinedAt: !15330)
!15408 = !DILocation(line: 137, column: 4, scope: !12408, inlinedAt: !15330)
!15409 = !DILocation(line: 139, column: 11, scope: !12417, inlinedAt: !15330)
!15410 = !DILocation(line: 139, column: 26, scope: !12417, inlinedAt: !15330)
!15411 = !DILocation(line: 139, column: 16, scope: !12417, inlinedAt: !15330)
!15412 = !DILocation(line: 139, column: 36, scope: !12417, inlinedAt: !15330)
!15413 = !DILocation(line: 139, column: 34, scope: !12417, inlinedAt: !15330)
!15414 = !DILocation(line: 139, column: 13, scope: !12417, inlinedAt: !15330)
!15415 = !DILocation(line: 139, column: 4, scope: !12417, inlinedAt: !15330)
!15416 = !DILocation(line: 141, column: 13, scope: !12425, inlinedAt: !15330)
!15417 = !DILocation(line: 141, column: 13, scope: !12396, inlinedAt: !15330)
!15418 = !DILocation(line: 142, column: 7, scope: !12428, inlinedAt: !15330)
!15419 = !DILocation(line: 142, column: 7, scope: !12429, inlinedAt: !15330)
!15420 = !DILocation(line: 143, column: 22, scope: !12432, inlinedAt: !15330)
!15421 = !DILocation(line: 143, column: 12, scope: !12432, inlinedAt: !15330)
!15422 = !DILocation(line: 143, column: 28, scope: !12432, inlinedAt: !15330)
!15423 = !DILocation(line: 143, column: 36, scope: !12432, inlinedAt: !15330)
!15424 = !DILocation(line: 143, column: 34, scope: !12432, inlinedAt: !15330)
!15425 = !DILocation(line: 143, column: 25, scope: !12432, inlinedAt: !15330)
!15426 = !DILocation(line: 143, column: 11, scope: !12432, inlinedAt: !15330)
!15427 = !DILocation(line: 143, column: 4, scope: !12432, inlinedAt: !15330)
!15428 = !DILocation(line: 145, column: 11, scope: !12441, inlinedAt: !15330)
!15429 = !DILocation(line: 145, column: 26, scope: !12441, inlinedAt: !15330)
!15430 = !DILocation(line: 145, column: 16, scope: !12441, inlinedAt: !15330)
!15431 = !DILocation(line: 145, column: 34, scope: !12441, inlinedAt: !15330)
!15432 = !DILocation(line: 145, column: 32, scope: !12441, inlinedAt: !15330)
!15433 = !DILocation(line: 145, column: 13, scope: !12441, inlinedAt: !15330)
!15434 = !DILocation(line: 145, column: 4, scope: !12441, inlinedAt: !15330)
!15435 = !DILocation(line: 148, column: 7, scope: !12449, inlinedAt: !15330)
!15436 = !DILocation(line: 148, column: 7, scope: !12450, inlinedAt: !15330)
!15437 = !DILocation(line: 149, column: 23, scope: !12453, inlinedAt: !15330)
!15438 = !DILocation(line: 149, column: 27, scope: !12453, inlinedAt: !15330)
!15439 = !DILocation(line: 149, column: 25, scope: !12453, inlinedAt: !15330)
!15440 = !DILocation(line: 149, column: 35, scope: !12453, inlinedAt: !15330)
!15441 = !DILocation(line: 149, column: 33, scope: !12453, inlinedAt: !15330)
!15442 = !DILocation(line: 149, column: 42, scope: !12453, inlinedAt: !15330)
!15443 = !DILocation(line: 149, column: 40, scope: !12453, inlinedAt: !15330)
!15444 = !DILocation(line: 149, column: 11, scope: !12453, inlinedAt: !15330)
!15445 = !DILocation(line: 149, column: 4, scope: !12453, inlinedAt: !15330)
!15446 = !DILocation(line: 150, column: 14, scope: !12463, inlinedAt: !15330)
!15447 = !DILocation(line: 150, column: 23, scope: !12463, inlinedAt: !15330)
!15448 = !DILocation(line: 150, column: 26, scope: !12463, inlinedAt: !15330)
!15449 = !DILocation(line: 150, column: 14, scope: !12449, inlinedAt: !15330)
!15450 = !DILocation(line: 156, column: 13, scope: !12468, inlinedAt: !15330)
!15451 = !DILocation(line: 156, column: 17, scope: !12468, inlinedAt: !15330)
!15452 = !DILocation(line: 156, column: 15, scope: !12468, inlinedAt: !15330)
!15453 = !DILocation(line: 156, column: 25, scope: !12468, inlinedAt: !15330)
!15454 = !DILocation(line: 156, column: 23, scope: !12468, inlinedAt: !15330)
!15455 = !DILocation(line: 156, column: 32, scope: !12468, inlinedAt: !15330)
!15456 = !DILocation(line: 156, column: 30, scope: !12468, inlinedAt: !15330)
!15457 = !DILocation(line: 156, column: 4, scope: !12468, inlinedAt: !15330)
!15458 = !DILocation(line: 161, column: 12, scope: !12477, inlinedAt: !15330)
!15459 = !DILocation(line: 161, column: 16, scope: !12477, inlinedAt: !15330)
!15460 = !DILocation(line: 161, column: 14, scope: !12477, inlinedAt: !15330)
!15461 = !DILocation(line: 161, column: 27, scope: !12477, inlinedAt: !15330)
!15462 = !DILocation(line: 161, column: 25, scope: !12477, inlinedAt: !15330)
!15463 = !DILocation(line: 161, column: 37, scope: !12477, inlinedAt: !15330)
!15464 = !DILocation(line: 161, column: 41, scope: !12477, inlinedAt: !15330)
!15465 = !DILocation(line: 161, column: 39, scope: !12477, inlinedAt: !15330)
!15466 = !DILocation(line: 161, column: 52, scope: !12477, inlinedAt: !15330)
!15467 = !DILocation(line: 161, column: 50, scope: !12477, inlinedAt: !15330)
!15468 = !DILocation(line: 161, column: 60, scope: !12477, inlinedAt: !15330)
!15469 = !DILocation(line: 161, column: 58, scope: !12477, inlinedAt: !15330)
!15470 = !DILocation(line: 161, column: 67, scope: !12477, inlinedAt: !15330)
!15471 = !DILocation(line: 161, column: 65, scope: !12477, inlinedAt: !15330)
!15472 = !DILocation(line: 161, column: 33, scope: !12477, inlinedAt: !15330)
!15473 = !DILocation(line: 161, column: 4, scope: !12477, inlinedAt: !15330)
!15474 = !DILocation(line: 164, column: 1, scope: !12313, inlinedAt: !15330)
!15475 = !DILocation(line: 1190, column: 2, scope: !15325)
!15476 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !3229, file: !3229, line: 1517, type: !14902, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15477 = !DILocalVariable(name: "thread", arg: 1, scope: !15476, file: !3229, line: 1517, type: !14732)
!15478 = !DILocation(line: 1517, column: 30, scope: !15476)
!15479 = !DILocation(line: 1519, column: 2, scope: !15476)
!15480 = !DILocation(line: 1519, column: 2, scope: !15481)
!15481 = distinct !DILexicalBlock(scope: !15476, file: !3229, line: 1519, column: 2)
!15482 = !DILocation(line: 1521, column: 26, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15476, file: !3229, line: 1521, column: 6)
!15484 = !DILocation(line: 1521, column: 6, scope: !15483)
!15485 = !DILocation(line: 1521, column: 6, scope: !15476)
!15486 = !DILocation(line: 1522, column: 3, scope: !15487)
!15487 = distinct !DILexicalBlock(scope: !15483, file: !3229, line: 1521, column: 35)
!15488 = !DILocation(line: 1525, column: 29, scope: !15489)
!15489 = distinct !DILexicalBlock(scope: !15476, file: !3229, line: 1525, column: 6)
!15490 = !DILocation(line: 1525, column: 6, scope: !15489)
!15491 = !DILocation(line: 1525, column: 37, scope: !15489)
!15492 = !DILocation(line: 1525, column: 6, scope: !15476)
!15493 = !DILocation(line: 1527, column: 7, scope: !15494)
!15494 = distinct !DILexicalBlock(scope: !15495, file: !3229, line: 1527, column: 7)
!15495 = distinct !DILexicalBlock(scope: !15489, file: !3229, line: 1525, column: 42)
!15496 = !DILocation(line: 1527, column: 15, scope: !15494)
!15497 = !DILocation(line: 1527, column: 20, scope: !15494)
!15498 = !DILocation(line: 1527, column: 33, scope: !15494)
!15499 = !DILocation(line: 1527, column: 7, scope: !15495)
!15500 = !DILocation(line: 1528, column: 4, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15494, file: !3229, line: 1527, column: 55)
!15502 = !DILocation(line: 1530, column: 2, scope: !15495)
!15503 = !DILocation(line: 1532, column: 33, scope: !15476)
!15504 = !DILocation(line: 1532, column: 2, scope: !15476)
!15505 = !DILocation(line: 1533, column: 17, scope: !15476)
!15506 = !DILocation(line: 1533, column: 2, scope: !15476)
!15507 = !DILocation(line: 1535, column: 2, scope: !15476)
!15508 = !DILocation(line: 1029, column: 12, scope: !13379, inlinedAt: !15509)
!15509 = distinct !DILocation(line: 48, column: 10, scope: !13382, inlinedAt: !15510)
!15510 = distinct !DILocation(line: 1537, column: 7, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !15476, file: !3229, line: 1537, column: 6)
!15512 = !DILocation(line: 1031, column: 3, scope: !13379, inlinedAt: !15509)
!15513 = !DILocation(line: 1032, column: 10, scope: !13379, inlinedAt: !15509)
!15514 = !DILocation(line: 48, column: 9, scope: !13382, inlinedAt: !15510)
!15515 = !DILocation(line: 1537, column: 6, scope: !15476)
!15516 = !DILocation(line: 1538, column: 3, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15511, file: !3229, line: 1537, column: 25)
!15518 = !DILocation(line: 1539, column: 2, scope: !15517)
!15519 = !DILocation(line: 1540, column: 1, scope: !15476)
!15520 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11061, file: !11061, line: 101, type: !12575, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15521 = !DILocalVariable(name: "thread", arg: 1, scope: !15520, file: !11061, line: 101, type: !3130)
!15522 = !DILocation(line: 101, column: 57, scope: !15520)
!15523 = !DILocation(line: 103, column: 10, scope: !15520)
!15524 = !DILocation(line: 103, column: 18, scope: !15520)
!15525 = !DILocation(line: 103, column: 23, scope: !15520)
!15526 = !DILocation(line: 103, column: 36, scope: !15520)
!15527 = !DILocation(line: 103, column: 55, scope: !15520)
!15528 = !DILocation(line: 103, column: 2, scope: !15520)
!15529 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !3229, file: !3229, line: 1567, type: !15530, scopeLine: 1568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15530 = !DISubroutineType(types: !15531)
!15531 = !{!14732}
!15532 = !DILocalVariable(name: "ret", scope: !15529, file: !3229, line: 1577, type: !14732)
!15533 = !DILocation(line: 1577, column: 10, scope: !15529)
!15534 = !DILocation(line: 1577, column: 30, scope: !15529)
!15535 = !DILocation(line: 1582, column: 9, scope: !15529)
!15536 = !DILocation(line: 1582, column: 2, scope: !15529)
!15537 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !3229, file: !3229, line: 1593, type: !3704, scopeLine: 1594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15538 = !DILocation(line: 1029, column: 12, scope: !13379, inlinedAt: !15539)
!15539 = distinct !DILocation(line: 48, column: 10, scope: !13382, inlinedAt: !15540)
!15540 = distinct !DILocation(line: 1595, column: 10, scope: !15537)
!15541 = !DILocation(line: 1031, column: 3, scope: !13379, inlinedAt: !15539)
!15542 = !DILocation(line: 1032, column: 10, scope: !13379, inlinedAt: !15539)
!15543 = !DILocation(line: 48, column: 9, scope: !13382, inlinedAt: !15540)
!15544 = !DILocation(line: 1595, column: 27, scope: !15537)
!15545 = !DILocation(line: 1595, column: 41, scope: !15537)
!15546 = !DILocation(line: 1595, column: 30, scope: !15537)
!15547 = !DILocation(line: 0, scope: !15537)
!15548 = !DILocation(line: 1595, column: 2, scope: !15537)
!15549 = distinct !DISubprogram(name: "z_thread_abort", scope: !3229, file: !3229, line: 1725, type: !12195, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15550 = !DILocalVariable(name: "thread", arg: 1, scope: !15549, file: !3229, line: 1725, type: !3130)
!15551 = !DILocation(line: 1725, column: 38, scope: !15549)
!15552 = !DILocalVariable(name: "key", scope: !15549, file: !3229, line: 1727, type: !12234)
!15553 = !DILocation(line: 1727, column: 19, scope: !15549)
!15554 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !15555)
!15555 = distinct !DILocation(line: 1727, column: 25, scope: !15549)
!15556 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !15555)
!15557 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !15555)
!15558 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !15559)
!15559 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !15555)
!15560 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !15559)
!15561 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !15559)
!15562 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !15555)
!15563 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !15555)
!15564 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !15555)
!15565 = !DILocation(line: 1727, column: 25, scope: !15549)
!15566 = !DILocation(line: 1729, column: 7, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15549, file: !3229, line: 1729, column: 6)
!15568 = !DILocation(line: 1729, column: 15, scope: !15567)
!15569 = !DILocation(line: 1729, column: 20, scope: !15567)
!15570 = !DILocation(line: 1729, column: 33, scope: !15567)
!15571 = !DILocation(line: 1729, column: 48, scope: !15567)
!15572 = !DILocation(line: 1729, column: 6, scope: !15549)
!15573 = !DILocation(line: 1730, column: 3, scope: !15574)
!15574 = distinct !DILexicalBlock(scope: !15567, file: !3229, line: 1729, column: 54)
!15575 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !15576)
!15576 = distinct !DILocation(line: 1730, column: 3, scope: !15574)
!15577 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !15576)
!15578 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !15576)
!15579 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !15576)
!15580 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !15581)
!15581 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !15576)
!15582 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !15581)
!15583 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !15581)
!15584 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !15581)
!15585 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !15581)
!15586 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !15581)
!15587 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !15581)
!15588 = !DILocalVariable(name: "r0", scope: !15574, file: !3229, line: 1732, type: !173)
!15589 = !DILocation(line: 1732, column: 3, scope: !15574)
!15590 = !DILocation(line: 1732, column: 3, scope: !15591)
!15591 = distinct !DILexicalBlock(scope: !15574, file: !3229, line: 1732, column: 3)
!15592 = !{i64 2152041114, i64 2152041124, i64 2152041144}
!15593 = !DILocation(line: 1733, column: 3, scope: !15574)
!15594 = !DILocation(line: 1736, column: 7, scope: !15595)
!15595 = distinct !DILexicalBlock(scope: !15549, file: !3229, line: 1736, column: 6)
!15596 = !DILocation(line: 1736, column: 15, scope: !15595)
!15597 = !DILocation(line: 1736, column: 20, scope: !15595)
!15598 = !DILocation(line: 1736, column: 33, scope: !15595)
!15599 = !DILocation(line: 1736, column: 49, scope: !15595)
!15600 = !DILocation(line: 1736, column: 6, scope: !15549)
!15601 = !DILocation(line: 1737, column: 3, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15595, file: !3229, line: 1736, column: 56)
!15603 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !15604)
!15604 = distinct !DILocation(line: 1737, column: 3, scope: !15602)
!15605 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !15604)
!15606 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !15604)
!15607 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !15604)
!15608 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !15609)
!15609 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !15604)
!15610 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !15609)
!15611 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !15609)
!15612 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !15609)
!15613 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !15609)
!15614 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !15609)
!15615 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !15609)
!15616 = !DILocation(line: 1738, column: 3, scope: !15602)
!15617 = !DILocation(line: 1775, column: 13, scope: !15549)
!15618 = !DILocation(line: 1775, column: 2, scope: !15549)
!15619 = !DILocation(line: 1776, column: 6, scope: !15620)
!15620 = distinct !DILexicalBlock(scope: !15549, file: !3229, line: 1776, column: 6)
!15621 = !DILocation(line: 1776, column: 16, scope: !15620)
!15622 = !DILocation(line: 1776, column: 13, scope: !15620)
!15623 = !DILocation(line: 1776, column: 25, scope: !15620)
!15624 = !DILocation(line: 1029, column: 12, scope: !13379, inlinedAt: !15625)
!15625 = distinct !DILocation(line: 48, column: 10, scope: !13382, inlinedAt: !15626)
!15626 = distinct !DILocation(line: 1776, column: 29, scope: !15620)
!15627 = !DILocation(line: 1031, column: 3, scope: !13379, inlinedAt: !15625)
!15628 = !DILocation(line: 1032, column: 10, scope: !13379, inlinedAt: !15625)
!15629 = !DILocation(line: 48, column: 9, scope: !13382, inlinedAt: !15626)
!15630 = !DILocation(line: 1776, column: 6, scope: !15549)
!15631 = !DILocation(line: 1777, column: 3, scope: !15632)
!15632 = distinct !DILexicalBlock(scope: !15620, file: !3229, line: 1776, column: 47)
!15633 = !DILocation(line: 193, column: 52, scope: !13327, inlinedAt: !15634)
!15634 = distinct !DILocation(line: 1777, column: 3, scope: !15632)
!15635 = !DILocation(line: 193, column: 75, scope: !13327, inlinedAt: !15634)
!15636 = !DILocation(line: 195, column: 17, scope: !13327, inlinedAt: !15634)
!15637 = !DILocation(line: 221, column: 61, scope: !13336, inlinedAt: !15638)
!15638 = distinct !DILocation(line: 195, column: 2, scope: !13327, inlinedAt: !15634)
!15639 = !DILocation(line: 223, column: 2, scope: !13336, inlinedAt: !15638)
!15640 = !DILocation(line: 196, column: 28, scope: !13327, inlinedAt: !15634)
!15641 = !DILocation(line: 196, column: 9, scope: !13327, inlinedAt: !15634)
!15642 = !DILocation(line: 1779, column: 2, scope: !15632)
!15643 = !DILocation(line: 1780, column: 2, scope: !15549)
!15644 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !15645)
!15645 = distinct !DILocation(line: 1780, column: 2, scope: !15549)
!15646 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !15645)
!15647 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !15645)
!15648 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !15645)
!15649 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !15650)
!15650 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !15645)
!15651 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !15650)
!15652 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !15650)
!15653 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !15650)
!15654 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !15650)
!15655 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !15650)
!15656 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !15650)
!15657 = !DILocation(line: 1781, column: 1, scope: !15549)
!15658 = distinct !DISubprogram(name: "end_thread", scope: !3229, file: !3229, line: 1690, type: !12195, scopeLine: 1691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15659 = !DILocalVariable(name: "thread", arg: 1, scope: !15658, file: !3229, line: 1690, type: !3130)
!15660 = !DILocation(line: 1690, column: 41, scope: !15658)
!15661 = !DILocation(line: 1695, column: 7, scope: !15662)
!15662 = distinct !DILexicalBlock(scope: !15658, file: !3229, line: 1695, column: 6)
!15663 = !DILocation(line: 1695, column: 15, scope: !15662)
!15664 = !DILocation(line: 1695, column: 20, scope: !15662)
!15665 = !DILocation(line: 1695, column: 33, scope: !15662)
!15666 = !DILocation(line: 1695, column: 49, scope: !15662)
!15667 = !DILocation(line: 1695, column: 6, scope: !15658)
!15668 = !DILocation(line: 1696, column: 3, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15662, file: !3229, line: 1695, column: 56)
!15670 = !DILocation(line: 1696, column: 11, scope: !15669)
!15671 = !DILocation(line: 1696, column: 16, scope: !15669)
!15672 = !DILocation(line: 1696, column: 29, scope: !15669)
!15673 = !DILocation(line: 1697, column: 3, scope: !15669)
!15674 = !DILocation(line: 1697, column: 11, scope: !15669)
!15675 = !DILocation(line: 1697, column: 16, scope: !15669)
!15676 = !DILocation(line: 1697, column: 29, scope: !15669)
!15677 = !DILocation(line: 1698, column: 26, scope: !15678)
!15678 = distinct !DILexicalBlock(scope: !15669, file: !3229, line: 1698, column: 7)
!15679 = !DILocation(line: 1698, column: 7, scope: !15678)
!15680 = !DILocation(line: 1698, column: 7, scope: !15669)
!15681 = !DILocation(line: 1699, column: 19, scope: !15682)
!15682 = distinct !DILexicalBlock(scope: !15678, file: !3229, line: 1698, column: 35)
!15683 = !DILocation(line: 264, column: 59, scope: !12641, inlinedAt: !15684)
!15684 = distinct !DILocation(line: 1699, column: 4, scope: !15682)
!15685 = !DILocation(line: 266, column: 2, scope: !12641, inlinedAt: !15684)
!15686 = !DILocation(line: 266, column: 10, scope: !12641, inlinedAt: !15684)
!15687 = !DILocation(line: 266, column: 15, scope: !12641, inlinedAt: !15684)
!15688 = !DILocation(line: 266, column: 28, scope: !12641, inlinedAt: !15684)
!15689 = !DILocation(line: 267, column: 26, scope: !12649, inlinedAt: !15684)
!15690 = !DILocation(line: 267, column: 6, scope: !12649, inlinedAt: !15684)
!15691 = !DILocation(line: 267, column: 6, scope: !12641, inlinedAt: !15684)
!15692 = !DILocation(line: 268, column: 15, scope: !12653, inlinedAt: !15684)
!15693 = !DILocation(line: 232, column: 56, scope: !12655, inlinedAt: !15694)
!15694 = distinct !DILocation(line: 268, column: 3, scope: !12653, inlinedAt: !15684)
!15695 = !DILocation(line: 234, column: 31, scope: !12655, inlinedAt: !15694)
!15696 = !DILocation(line: 199, column: 57, scope: !12660, inlinedAt: !15697)
!15697 = distinct !DILocation(line: 234, column: 19, scope: !12655, inlinedAt: !15694)
!15698 = !DILocation(line: 234, column: 19, scope: !12655, inlinedAt: !15694)
!15699 = !DILocation(line: 234, column: 40, scope: !12655, inlinedAt: !15694)
!15700 = !DILocation(line: 234, column: 2, scope: !12655, inlinedAt: !15694)
!15701 = !DILocation(line: 269, column: 2, scope: !12653, inlinedAt: !15684)
!15702 = !DILocation(line: 1700, column: 3, scope: !15682)
!15703 = !DILocation(line: 1701, column: 7, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15669, file: !3229, line: 1701, column: 7)
!15705 = !DILocation(line: 1701, column: 15, scope: !15704)
!15706 = !DILocation(line: 1701, column: 20, scope: !15704)
!15707 = !DILocation(line: 1701, column: 30, scope: !15704)
!15708 = !DILocation(line: 1701, column: 7, scope: !15669)
!15709 = !DILocation(line: 1702, column: 29, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15704, file: !3229, line: 1701, column: 39)
!15711 = !DILocation(line: 1702, column: 4, scope: !15710)
!15712 = !DILocation(line: 1703, column: 3, scope: !15710)
!15713 = !DILocation(line: 1704, column: 32, scope: !15669)
!15714 = !DILocation(line: 1704, column: 9, scope: !15669)
!15715 = !DILocation(line: 1705, column: 15, scope: !15669)
!15716 = !DILocation(line: 1705, column: 23, scope: !15669)
!15717 = !DILocation(line: 1705, column: 3, scope: !15669)
!15718 = !DILocation(line: 1706, column: 3, scope: !15669)
!15719 = !DILocation(line: 1708, column: 3, scope: !15669)
!15720 = !DILocation(line: 1708, column: 3, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15669, file: !3229, line: 1708, column: 3)
!15722 = !DILocation(line: 1710, column: 3, scope: !15669)
!15723 = !DILocation(line: 1710, column: 3, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15669, file: !3229, line: 1710, column: 3)
!15725 = !DILocation(line: 1722, column: 2, scope: !15669)
!15726 = !DILocation(line: 1723, column: 1, scope: !15658)
!15727 = distinct !DISubprogram(name: "unpend_all", scope: !3229, file: !3229, line: 1674, type: !15728, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15728 = !DISubroutineType(types: !15729)
!15729 = !{null, !3161}
!15730 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15727, file: !3229, line: 1674, type: !3161)
!15731 = !DILocation(line: 1674, column: 42, scope: !15727)
!15732 = !DILocalVariable(name: "thread", scope: !15727, file: !3229, line: 1676, type: !3130)
!15733 = !DILocation(line: 1676, column: 19, scope: !15727)
!15734 = !DILocation(line: 1678, column: 2, scope: !15727)
!15735 = !DILocation(line: 1678, column: 32, scope: !15727)
!15736 = !DILocation(line: 1678, column: 19, scope: !15727)
!15737 = !DILocation(line: 1678, column: 17, scope: !15727)
!15738 = !DILocation(line: 1678, column: 41, scope: !15727)
!15739 = !DILocation(line: 1679, column: 28, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15727, file: !3229, line: 1678, column: 50)
!15741 = !DILocation(line: 1679, column: 3, scope: !15740)
!15742 = !DILocation(line: 1680, column: 32, scope: !15740)
!15743 = !DILocation(line: 1680, column: 9, scope: !15740)
!15744 = !DILocation(line: 1681, column: 32, scope: !15740)
!15745 = !DILocalVariable(name: "thread", arg: 1, scope: !15746, file: !11080, line: 65, type: !3130)
!15746 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11080, file: !11080, line: 65, type: !15747, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15747 = !DISubroutineType(types: !15748)
!15748 = !{null, !3130, !32}
!15749 = !DILocation(line: 65, column: 47, scope: !15746, inlinedAt: !15750)
!15750 = distinct !DILocation(line: 1681, column: 3, scope: !15740)
!15751 = !DILocalVariable(name: "value", arg: 2, scope: !15746, file: !11080, line: 65, type: !32)
!15752 = !DILocation(line: 65, column: 68, scope: !15746, inlinedAt: !15750)
!15753 = !DILocation(line: 67, column: 35, scope: !15746, inlinedAt: !15750)
!15754 = !DILocation(line: 67, column: 2, scope: !15746, inlinedAt: !15750)
!15755 = !DILocation(line: 67, column: 10, scope: !15746, inlinedAt: !15750)
!15756 = !DILocation(line: 67, column: 15, scope: !15746, inlinedAt: !15750)
!15757 = !DILocation(line: 67, column: 33, scope: !15746, inlinedAt: !15750)
!15758 = !DILocation(line: 1682, column: 16, scope: !15740)
!15759 = !DILocation(line: 1682, column: 3, scope: !15740)
!15760 = distinct !{!15760, !15734, !15761}
!15761 = !DILocation(line: 1683, column: 2, scope: !15727)
!15762 = !DILocation(line: 1684, column: 1, scope: !15727)
!15763 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !3229, file: !3229, line: 1794, type: !15764, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15764 = !DISubroutineType(types: !15765)
!15765 = !{!103, !3130, !13619}
!15766 = !DILocalVariable(name: "thread", arg: 1, scope: !15763, file: !3229, line: 1794, type: !3130)
!15767 = !DILocation(line: 1794, column: 43, scope: !15763)
!15768 = !DILocalVariable(name: "timeout", arg: 2, scope: !15763, file: !3229, line: 1794, type: !13619)
!15769 = !DILocation(line: 1794, column: 63, scope: !15763)
!15770 = !DILocalVariable(name: "key", scope: !15763, file: !3229, line: 1796, type: !12234)
!15771 = !DILocation(line: 1796, column: 19, scope: !15763)
!15772 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !15773)
!15773 = distinct !DILocation(line: 1796, column: 25, scope: !15763)
!15774 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !15773)
!15775 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !15773)
!15776 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !15777)
!15777 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !15773)
!15778 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !15777)
!15779 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !15777)
!15780 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !15773)
!15781 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !15773)
!15782 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !15773)
!15783 = !DILocation(line: 1796, column: 25, scope: !15763)
!15784 = !DILocalVariable(name: "ret", scope: !15763, file: !3229, line: 1797, type: !103)
!15785 = !DILocation(line: 1797, column: 6, scope: !15763)
!15786 = !DILocation(line: 1799, column: 2, scope: !15763)
!15787 = !DILocation(line: 1799, column: 2, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15763, file: !3229, line: 1799, column: 2)
!15789 = !DILocation(line: 1801, column: 7, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15763, file: !3229, line: 1801, column: 6)
!15791 = !DILocation(line: 1801, column: 15, scope: !15790)
!15792 = !DILocation(line: 1801, column: 20, scope: !15790)
!15793 = !DILocation(line: 1801, column: 33, scope: !15790)
!15794 = !DILocation(line: 1801, column: 49, scope: !15790)
!15795 = !DILocation(line: 1801, column: 6, scope: !15763)
!15796 = !DILocation(line: 1802, column: 7, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15790, file: !3229, line: 1801, column: 56)
!15798 = !DILocation(line: 1803, column: 2, scope: !15797)
!15799 = !DILocation(line: 1803, column: 13, scope: !15800)
!15800 = distinct !DILexicalBlock(scope: !15790, file: !3229, line: 1803, column: 13)
!15801 = !DILocation(line: 1803, column: 13, scope: !15790)
!15802 = !DILocation(line: 1804, column: 7, scope: !15803)
!15803 = distinct !DILexicalBlock(scope: !15800, file: !3229, line: 1803, column: 47)
!15804 = !DILocation(line: 1805, column: 2, scope: !15803)
!15805 = !DILocation(line: 1805, column: 14, scope: !15806)
!15806 = distinct !DILexicalBlock(scope: !15800, file: !3229, line: 1805, column: 13)
!15807 = !DILocation(line: 1805, column: 24, scope: !15806)
!15808 = !DILocation(line: 1805, column: 21, scope: !15806)
!15809 = !DILocation(line: 1805, column: 34, scope: !15806)
!15810 = !DILocation(line: 1806, column: 7, scope: !15806)
!15811 = !DILocation(line: 1806, column: 15, scope: !15806)
!15812 = !DILocation(line: 1806, column: 20, scope: !15806)
!15813 = !DILocation(line: 1806, column: 34, scope: !15806)
!15814 = !DILocation(line: 1806, column: 44, scope: !15806)
!15815 = !DILocation(line: 1806, column: 30, scope: !15806)
!15816 = !DILocation(line: 1805, column: 13, scope: !15800)
!15817 = !DILocation(line: 1807, column: 7, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15806, file: !3229, line: 1806, column: 57)
!15819 = !DILocation(line: 1808, column: 2, scope: !15818)
!15820 = !DILocation(line: 1810, column: 23, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15806, file: !3229, line: 1808, column: 9)
!15822 = !DILocation(line: 1810, column: 34, scope: !15821)
!15823 = !DILocation(line: 1810, column: 42, scope: !15821)
!15824 = !DILocation(line: 1810, column: 3, scope: !15821)
!15825 = !DILocation(line: 1811, column: 22, scope: !15821)
!15826 = !DILocation(line: 1811, column: 3, scope: !15821)
!15827 = !DILocation(line: 1813, column: 3, scope: !15821)
!15828 = !DILocation(line: 1813, column: 3, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15821, file: !3229, line: 1813, column: 3)
!15830 = !DILocation(line: 1814, column: 9, scope: !15821)
!15831 = !DILocation(line: 193, column: 52, scope: !13327, inlinedAt: !15832)
!15832 = distinct !DILocation(line: 1814, column: 9, scope: !15821)
!15833 = !DILocation(line: 193, column: 75, scope: !13327, inlinedAt: !15832)
!15834 = !DILocation(line: 195, column: 17, scope: !13327, inlinedAt: !15832)
!15835 = !DILocation(line: 221, column: 61, scope: !13336, inlinedAt: !15836)
!15836 = distinct !DILocation(line: 195, column: 2, scope: !13327, inlinedAt: !15832)
!15837 = !DILocation(line: 223, column: 2, scope: !13336, inlinedAt: !15836)
!15838 = !DILocation(line: 196, column: 28, scope: !13327, inlinedAt: !15832)
!15839 = !DILocation(line: 196, column: 9, scope: !13327, inlinedAt: !15832)
!15840 = !DILocation(line: 1814, column: 7, scope: !15821)
!15841 = !DILocation(line: 1815, column: 3, scope: !15821)
!15842 = !DILocation(line: 1815, column: 3, scope: !15843)
!15843 = distinct !DILexicalBlock(scope: !15821, file: !3229, line: 1815, column: 3)
!15844 = !DILocation(line: 1817, column: 10, scope: !15821)
!15845 = !DILocation(line: 1817, column: 3, scope: !15821)
!15846 = !DILocation(line: 1820, column: 2, scope: !15763)
!15847 = !DILocation(line: 1820, column: 2, scope: !15848)
!15848 = distinct !DILexicalBlock(scope: !15763, file: !3229, line: 1820, column: 2)
!15849 = !DILocation(line: 1822, column: 2, scope: !15763)
!15850 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !15851)
!15851 = distinct !DILocation(line: 1822, column: 2, scope: !15763)
!15852 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !15851)
!15853 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !15851)
!15854 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !15851)
!15855 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !15856)
!15856 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !15851)
!15857 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !15856)
!15858 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !15856)
!15859 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !15856)
!15860 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !15856)
!15861 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !15856)
!15862 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !15856)
!15863 = !DILocation(line: 1823, column: 9, scope: !15763)
!15864 = !DILocation(line: 1823, column: 2, scope: !15763)
!15865 = !DILocation(line: 1824, column: 1, scope: !15763)
!15866 = distinct !DISubprogram(name: "z_sched_wake", scope: !3229, file: !3229, line: 1882, type: !15867, scopeLine: 1883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15867 = !DISubroutineType(types: !15868)
!15868 = !{!1035, !3161, !103, !102}
!15869 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15866, file: !3229, line: 1882, type: !3161)
!15870 = !DILocation(line: 1882, column: 30, scope: !15866)
!15871 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15866, file: !3229, line: 1882, type: !103)
!15872 = !DILocation(line: 1882, column: 42, scope: !15866)
!15873 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15866, file: !3229, line: 1882, type: !102)
!15874 = !DILocation(line: 1882, column: 61, scope: !15866)
!15875 = !DILocalVariable(name: "thread", scope: !15866, file: !3229, line: 1884, type: !3130)
!15876 = !DILocation(line: 1884, column: 19, scope: !15866)
!15877 = !DILocalVariable(name: "ret", scope: !15866, file: !3229, line: 1885, type: !1035)
!15878 = !DILocation(line: 1885, column: 7, scope: !15866)
!15879 = !DILocalVariable(name: "__i", scope: !15880, file: !3229, line: 1887, type: !12234)
!15880 = distinct !DILexicalBlock(scope: !15866, file: !3229, line: 1887, column: 2)
!15881 = !DILocation(line: 1887, column: 2, scope: !15880)
!15882 = !DILocalVariable(name: "__key", scope: !15880, file: !3229, line: 1887, type: !12234)
!15883 = !DILocation(line: 136, column: 70, scope: !12241, inlinedAt: !15884)
!15884 = distinct !DILocation(line: 1887, column: 2, scope: !15880)
!15885 = !DILocation(line: 138, column: 2, scope: !12241, inlinedAt: !15884)
!15886 = !DILocation(line: 139, column: 19, scope: !12241, inlinedAt: !15884)
!15887 = !DILocation(line: 44, column: 15, scope: !12251, inlinedAt: !15888)
!15888 = distinct !DILocation(line: 145, column: 10, scope: !12241, inlinedAt: !15884)
!15889 = !DILocation(line: 47, column: 2, scope: !12251, inlinedAt: !15888)
!15890 = !DILocation(line: 76, column: 9, scope: !12251, inlinedAt: !15888)
!15891 = !DILocation(line: 145, column: 4, scope: !12241, inlinedAt: !15884)
!15892 = !DILocation(line: 145, column: 8, scope: !12241, inlinedAt: !15884)
!15893 = !DILocation(line: 165, column: 2, scope: !12241, inlinedAt: !15884)
!15894 = !DILocation(line: 1887, column: 2, scope: !15895)
!15895 = distinct !DILexicalBlock(scope: !15880, file: !3229, line: 1887, column: 2)
!15896 = !DILocation(line: 1888, column: 29, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !15895, file: !3229, line: 1887, column: 26)
!15898 = !DILocation(line: 1888, column: 37, scope: !15897)
!15899 = !DILocation(line: 1888, column: 12, scope: !15897)
!15900 = !DILocation(line: 1888, column: 10, scope: !15897)
!15901 = !DILocation(line: 1890, column: 7, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15897, file: !3229, line: 1890, column: 7)
!15903 = !DILocation(line: 1890, column: 14, scope: !15902)
!15904 = !DILocation(line: 1890, column: 7, scope: !15897)
!15905 = !DILocation(line: 1891, column: 40, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15902, file: !3229, line: 1890, column: 23)
!15907 = !DILocation(line: 1892, column: 12, scope: !15906)
!15908 = !DILocation(line: 1893, column: 12, scope: !15906)
!15909 = !DILocalVariable(name: "thread", arg: 1, scope: !15910, file: !15911, line: 134, type: !3130)
!15910 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15911, file: !15911, line: 134, type: !15912, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15911 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15912 = !DISubroutineType(types: !15913)
!15913 = !{null, !3130, !32, !102}
!15914 = !DILocation(line: 134, column: 54, scope: !15910, inlinedAt: !15915)
!15915 = distinct !DILocation(line: 1891, column: 4, scope: !15906)
!15916 = !DILocalVariable(name: "value", arg: 2, scope: !15910, file: !15911, line: 135, type: !32)
!15917 = !DILocation(line: 135, column: 21, scope: !15910, inlinedAt: !15915)
!15918 = !DILocalVariable(name: "data", arg: 3, scope: !15910, file: !15911, line: 136, type: !102)
!15919 = !DILocation(line: 136, column: 14, scope: !15910, inlinedAt: !15915)
!15920 = !DILocation(line: 138, column: 31, scope: !15910, inlinedAt: !15915)
!15921 = !DILocation(line: 138, column: 39, scope: !15910, inlinedAt: !15915)
!15922 = !DILocation(line: 65, column: 47, scope: !15746, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 138, column: 2, scope: !15910, inlinedAt: !15915)
!15924 = !DILocation(line: 65, column: 68, scope: !15746, inlinedAt: !15923)
!15925 = !DILocation(line: 67, column: 35, scope: !15746, inlinedAt: !15923)
!15926 = !DILocation(line: 67, column: 2, scope: !15746, inlinedAt: !15923)
!15927 = !DILocation(line: 67, column: 10, scope: !15746, inlinedAt: !15923)
!15928 = !DILocation(line: 67, column: 15, scope: !15746, inlinedAt: !15923)
!15929 = !DILocation(line: 67, column: 33, scope: !15746, inlinedAt: !15923)
!15930 = !DILocation(line: 139, column: 27, scope: !15910, inlinedAt: !15915)
!15931 = !DILocation(line: 139, column: 2, scope: !15910, inlinedAt: !15915)
!15932 = !DILocation(line: 139, column: 10, scope: !15910, inlinedAt: !15915)
!15933 = !DILocation(line: 139, column: 15, scope: !15910, inlinedAt: !15915)
!15934 = !DILocation(line: 139, column: 25, scope: !15910, inlinedAt: !15915)
!15935 = !DILocation(line: 1894, column: 29, scope: !15906)
!15936 = !DILocation(line: 1894, column: 4, scope: !15906)
!15937 = !DILocation(line: 1895, column: 33, scope: !15906)
!15938 = !DILocation(line: 1895, column: 10, scope: !15906)
!15939 = !DILocation(line: 1896, column: 17, scope: !15906)
!15940 = !DILocation(line: 1896, column: 4, scope: !15906)
!15941 = !DILocation(line: 1897, column: 8, scope: !15906)
!15942 = !DILocation(line: 1898, column: 3, scope: !15906)
!15943 = !DILocation(line: 1899, column: 2, scope: !15897)
!15944 = !DILocation(line: 189, column: 60, scope: !12281, inlinedAt: !15945)
!15945 = distinct !DILocation(line: 1887, column: 2, scope: !15895)
!15946 = !DILocation(line: 190, column: 23, scope: !12281, inlinedAt: !15945)
!15947 = !DILocation(line: 192, column: 2, scope: !12281, inlinedAt: !15945)
!15948 = !DILocation(line: 215, column: 22, scope: !12281, inlinedAt: !15945)
!15949 = !DILocation(line: 84, column: 56, scope: !12291, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 215, column: 2, scope: !12281, inlinedAt: !15945)
!15951 = !DILocation(line: 87, column: 6, scope: !12295, inlinedAt: !15950)
!15952 = !DILocation(line: 87, column: 10, scope: !12295, inlinedAt: !15950)
!15953 = !DILocation(line: 87, column: 6, scope: !12291, inlinedAt: !15950)
!15954 = !DILocation(line: 88, column: 3, scope: !12299, inlinedAt: !15950)
!15955 = !DILocation(line: 90, column: 2, scope: !12291, inlinedAt: !15950)
!15956 = !DILocation(line: 110, column: 1, scope: !12291, inlinedAt: !15950)
!15957 = distinct !{!15957, !15881, !15958}
!15958 = !DILocation(line: 1899, column: 2, scope: !15880)
!15959 = !DILocation(line: 1901, column: 9, scope: !15866)
!15960 = !DILocation(line: 1901, column: 2, scope: !15866)
!15961 = distinct !DISubprogram(name: "z_sched_wait", scope: !3229, file: !3229, line: 1904, type: !15962, scopeLine: 1906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3118, retainedNodes: !223)
!15962 = !DISubroutineType(types: !15963)
!15963 = !{!103, !12244, !12234, !3161, !13619, !15964}
!15964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!15965 = !DILocalVariable(name: "lock", arg: 1, scope: !15961, file: !3229, line: 1904, type: !12244)
!15966 = !DILocation(line: 1904, column: 37, scope: !15961)
!15967 = !DILocalVariable(name: "key", arg: 2, scope: !15961, file: !3229, line: 1904, type: !12234)
!15968 = !DILocation(line: 1904, column: 60, scope: !15961)
!15969 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15961, file: !3229, line: 1905, type: !3161)
!15970 = !DILocation(line: 1905, column: 15, scope: !15961)
!15971 = !DILocalVariable(name: "timeout", arg: 4, scope: !15961, file: !3229, line: 1905, type: !13619)
!15972 = !DILocation(line: 1905, column: 35, scope: !15961)
!15973 = !DILocalVariable(name: "data", arg: 5, scope: !15961, file: !3229, line: 1905, type: !15964)
!15974 = !DILocation(line: 1905, column: 51, scope: !15961)
!15975 = !DILocalVariable(name: "ret", scope: !15961, file: !3229, line: 1907, type: !103)
!15976 = !DILocation(line: 1907, column: 6, scope: !15961)
!15977 = !DILocation(line: 1907, column: 24, scope: !15961)
!15978 = !DILocation(line: 1907, column: 35, scope: !15961)
!15979 = !DILocation(line: 1907, column: 12, scope: !15961)
!15980 = !DILocation(line: 1909, column: 6, scope: !15981)
!15981 = distinct !DILexicalBlock(scope: !15961, file: !3229, line: 1909, column: 6)
!15982 = !DILocation(line: 1909, column: 11, scope: !15981)
!15983 = !DILocation(line: 1909, column: 6, scope: !15961)
!15984 = !DILocation(line: 1910, column: 11, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15981, file: !3229, line: 1909, column: 20)
!15986 = !DILocation(line: 1910, column: 21, scope: !15985)
!15987 = !DILocation(line: 1910, column: 26, scope: !15985)
!15988 = !DILocation(line: 1910, column: 4, scope: !15985)
!15989 = !DILocation(line: 1910, column: 9, scope: !15985)
!15990 = !DILocation(line: 1911, column: 2, scope: !15985)
!15991 = !DILocation(line: 1912, column: 9, scope: !15961)
!15992 = !DILocation(line: 1912, column: 2, scope: !15961)
!15993 = distinct !DISubprogram(name: "z_data_copy", scope: !15994, file: !15994, line: 22, type: !253, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3570, retainedNodes: !223)
!15994 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15995 = !DILocation(line: 24, column: 2, scope: !15993)
!15996 = !DILocation(line: 27, column: 2, scope: !15993)
!15997 = !DILocation(line: 71, column: 1, scope: !15993)
!15998 = distinct !DISubprogram(name: "z_add_timeout", scope: !3266, file: !3266, line: 88, type: !15999, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!15999 = !DISubroutineType(types: !16000)
!16000 = !{null, !3239, !3258, !16001}
!16001 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !2527, line: 67, baseType: !16002)
!16002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2527, line: 65, size: 64, elements: !16003)
!16003 = !{!16004}
!16004 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16002, file: !2527, line: 66, baseType: !2526, size: 64)
!16005 = !DILocalVariable(name: "to", arg: 1, scope: !15998, file: !3266, line: 88, type: !3239)
!16006 = !DILocation(line: 88, column: 37, scope: !15998)
!16007 = !DILocalVariable(name: "fn", arg: 2, scope: !15998, file: !3266, line: 88, type: !3258)
!16008 = !DILocation(line: 88, column: 57, scope: !15998)
!16009 = !DILocalVariable(name: "timeout", arg: 3, scope: !15998, file: !3266, line: 89, type: !16001)
!16010 = !DILocation(line: 89, column: 18, scope: !15998)
!16011 = !DILocation(line: 91, column: 6, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !15998, file: !3266, line: 91, column: 6)
!16013 = !DILocation(line: 91, column: 6, scope: !15998)
!16014 = !DILocation(line: 92, column: 3, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !16012, file: !3266, line: 91, column: 40)
!16016 = !DILocation(line: 100, column: 11, scope: !15998)
!16017 = !DILocation(line: 100, column: 2, scope: !15998)
!16018 = !DILocation(line: 100, column: 6, scope: !15998)
!16019 = !DILocation(line: 100, column: 9, scope: !15998)
!16020 = !DILocalVariable(name: "__i", scope: !16021, file: !3266, line: 102, type: !16022)
!16021 = distinct !DILexicalBlock(scope: !15998, file: !3266, line: 102, column: 2)
!16022 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !16023)
!16023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !16024)
!16024 = !{!16025}
!16025 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16023, file: !222, line: 33, baseType: !103, size: 32)
!16026 = !DILocation(line: 102, column: 2, scope: !16021)
!16027 = !DILocalVariable(name: "__key", scope: !16021, file: !3266, line: 102, type: !16022)
!16028 = !DILocalVariable(name: "l", arg: 1, scope: !16029, file: !222, line: 136, type: !16032)
!16029 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !16030, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16030 = !DISubroutineType(types: !16031)
!16031 = !{!16022, !16032}
!16032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 32)
!16033 = !DILocation(line: 136, column: 70, scope: !16029, inlinedAt: !16034)
!16034 = distinct !DILocation(line: 102, column: 2, scope: !16021)
!16035 = !DILocation(line: 138, column: 2, scope: !16029, inlinedAt: !16034)
!16036 = !DILocalVariable(name: "k", scope: !16029, file: !222, line: 139, type: !16022)
!16037 = !DILocation(line: 139, column: 19, scope: !16029, inlinedAt: !16034)
!16038 = !DILocalVariable(name: "key", scope: !16039, file: !6329, line: 44, type: !32)
!16039 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6329, file: !6329, line: 42, type: !6330, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16040 = !DILocation(line: 44, column: 15, scope: !16039, inlinedAt: !16041)
!16041 = distinct !DILocation(line: 145, column: 10, scope: !16029, inlinedAt: !16034)
!16042 = !DILocation(line: 47, column: 2, scope: !16039, inlinedAt: !16041)
!16043 = !{i64 1455826}
!16044 = !DILocation(line: 76, column: 9, scope: !16039, inlinedAt: !16041)
!16045 = !DILocation(line: 145, column: 4, scope: !16029, inlinedAt: !16034)
!16046 = !DILocation(line: 145, column: 8, scope: !16029, inlinedAt: !16034)
!16047 = !DILocation(line: 165, column: 2, scope: !16029, inlinedAt: !16034)
!16048 = !DILocation(line: 102, column: 2, scope: !16049)
!16049 = distinct !DILexicalBlock(scope: !16021, file: !3266, line: 102, column: 2)
!16050 = !DILocalVariable(name: "t", scope: !16051, file: !3266, line: 103, type: !3239)
!16051 = distinct !DILexicalBlock(scope: !16049, file: !3266, line: 102, column: 24)
!16052 = !DILocation(line: 103, column: 20, scope: !16051)
!16053 = !DILocation(line: 106, column: 7, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16051, file: !3266, line: 105, column: 7)
!16055 = !DILocation(line: 106, column: 33, scope: !16054)
!16056 = !DILocation(line: 105, column: 7, scope: !16051)
!16057 = !DILocalVariable(name: "ticks", scope: !16058, file: !3266, line: 107, type: !2526)
!16058 = distinct !DILexicalBlock(scope: !16054, file: !3266, line: 106, column: 39)
!16059 = !DILocation(line: 107, column: 14, scope: !16058)
!16060 = !DILocation(line: 107, column: 22, scope: !16058)
!16061 = !DILocation(line: 107, column: 50, scope: !16058)
!16062 = !DILocation(line: 107, column: 48, scope: !16058)
!16063 = !DILocation(line: 109, column: 17, scope: !16058)
!16064 = !DILocation(line: 109, column: 4, scope: !16058)
!16065 = !DILocation(line: 109, column: 8, scope: !16058)
!16066 = !DILocation(line: 109, column: 15, scope: !16058)
!16067 = !DILocation(line: 110, column: 3, scope: !16058)
!16068 = !DILocation(line: 111, column: 25, scope: !16069)
!16069 = distinct !DILexicalBlock(scope: !16054, file: !3266, line: 110, column: 10)
!16070 = !DILocation(line: 111, column: 31, scope: !16069)
!16071 = !DILocation(line: 111, column: 37, scope: !16069)
!16072 = !DILocation(line: 111, column: 35, scope: !16069)
!16073 = !DILocation(line: 111, column: 4, scope: !16069)
!16074 = !DILocation(line: 111, column: 8, scope: !16069)
!16075 = !DILocation(line: 111, column: 15, scope: !16069)
!16076 = !DILocation(line: 114, column: 12, scope: !16077)
!16077 = distinct !DILexicalBlock(scope: !16051, file: !3266, line: 114, column: 3)
!16078 = !DILocation(line: 114, column: 10, scope: !16077)
!16079 = !DILocation(line: 114, column: 8, scope: !16077)
!16080 = !DILocation(line: 114, column: 21, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16077, file: !3266, line: 114, column: 3)
!16082 = !DILocation(line: 114, column: 23, scope: !16081)
!16083 = !DILocation(line: 114, column: 3, scope: !16077)
!16084 = !DILocation(line: 115, column: 8, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16086, file: !3266, line: 115, column: 8)
!16086 = distinct !DILexicalBlock(scope: !16081, file: !3266, line: 114, column: 45)
!16087 = !DILocation(line: 115, column: 11, scope: !16085)
!16088 = !DILocation(line: 115, column: 20, scope: !16085)
!16089 = !DILocation(line: 115, column: 24, scope: !16085)
!16090 = !DILocation(line: 115, column: 18, scope: !16085)
!16091 = !DILocation(line: 115, column: 8, scope: !16086)
!16092 = !DILocation(line: 116, column: 18, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !16085, file: !3266, line: 115, column: 32)
!16094 = !DILocation(line: 116, column: 22, scope: !16093)
!16095 = !DILocation(line: 116, column: 5, scope: !16093)
!16096 = !DILocation(line: 116, column: 8, scope: !16093)
!16097 = !DILocation(line: 116, column: 15, scope: !16093)
!16098 = !DILocation(line: 117, column: 23, scope: !16093)
!16099 = !DILocation(line: 117, column: 26, scope: !16093)
!16100 = !DILocation(line: 117, column: 33, scope: !16093)
!16101 = !DILocation(line: 117, column: 37, scope: !16093)
!16102 = !DILocation(line: 117, column: 5, scope: !16093)
!16103 = !DILocation(line: 118, column: 5, scope: !16093)
!16104 = !DILocation(line: 120, column: 18, scope: !16086)
!16105 = !DILocation(line: 120, column: 21, scope: !16086)
!16106 = !DILocation(line: 120, column: 4, scope: !16086)
!16107 = !DILocation(line: 120, column: 8, scope: !16086)
!16108 = !DILocation(line: 120, column: 15, scope: !16086)
!16109 = !DILocation(line: 121, column: 3, scope: !16086)
!16110 = !DILocation(line: 114, column: 41, scope: !16081)
!16111 = !DILocation(line: 114, column: 36, scope: !16081)
!16112 = !DILocation(line: 114, column: 34, scope: !16081)
!16113 = !DILocation(line: 114, column: 3, scope: !16081)
!16114 = distinct !{!16114, !16083, !16115}
!16115 = !DILocation(line: 121, column: 3, scope: !16077)
!16116 = !DILocation(line: 123, column: 7, scope: !16117)
!16117 = distinct !DILexicalBlock(scope: !16051, file: !3266, line: 123, column: 7)
!16118 = !DILocation(line: 123, column: 9, scope: !16117)
!16119 = !DILocation(line: 123, column: 7, scope: !16051)
!16120 = !DILocation(line: 124, column: 37, scope: !16121)
!16121 = distinct !DILexicalBlock(scope: !16117, file: !3266, line: 123, column: 18)
!16122 = !DILocation(line: 124, column: 41, scope: !16121)
!16123 = !DILocation(line: 124, column: 4, scope: !16121)
!16124 = !DILocation(line: 125, column: 3, scope: !16121)
!16125 = !DILocation(line: 127, column: 7, scope: !16126)
!16126 = distinct !DILexicalBlock(scope: !16051, file: !3266, line: 127, column: 7)
!16127 = !DILocation(line: 127, column: 13, scope: !16126)
!16128 = !DILocation(line: 127, column: 10, scope: !16126)
!16129 = !DILocation(line: 127, column: 7, scope: !16051)
!16130 = !DILocalVariable(name: "next_time", scope: !16131, file: !3266, line: 137, type: !250)
!16131 = distinct !DILexicalBlock(scope: !16126, file: !3266, line: 127, column: 22)
!16132 = !DILocation(line: 137, column: 12, scope: !16131)
!16133 = !DILocation(line: 137, column: 24, scope: !16131)
!16134 = !DILocation(line: 139, column: 8, scope: !16135)
!16135 = distinct !DILexicalBlock(scope: !16131, file: !3266, line: 139, column: 8)
!16136 = !DILocation(line: 139, column: 18, scope: !16135)
!16137 = !DILocation(line: 139, column: 23, scope: !16135)
!16138 = !DILocation(line: 140, column: 22, scope: !16135)
!16139 = !DILocation(line: 140, column: 37, scope: !16135)
!16140 = !DILocation(line: 140, column: 34, scope: !16135)
!16141 = !DILocation(line: 139, column: 8, scope: !16131)
!16142 = !DILocation(line: 141, column: 27, scope: !16143)
!16143 = distinct !DILexicalBlock(scope: !16135, file: !3266, line: 140, column: 48)
!16144 = !DILocation(line: 141, column: 5, scope: !16143)
!16145 = !DILocation(line: 142, column: 4, scope: !16143)
!16146 = !DILocation(line: 146, column: 3, scope: !16131)
!16147 = !DILocation(line: 147, column: 2, scope: !16051)
!16148 = !DILocalVariable(name: "l", arg: 1, scope: !16149, file: !222, line: 189, type: !16032)
!16149 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !16150, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16150 = !DISubroutineType(types: !16151)
!16151 = !{null, !16032, !16022}
!16152 = !DILocation(line: 189, column: 60, scope: !16149, inlinedAt: !16153)
!16153 = distinct !DILocation(line: 102, column: 2, scope: !16049)
!16154 = !DILocalVariable(name: "key", arg: 2, scope: !16149, file: !222, line: 190, type: !16022)
!16155 = !DILocation(line: 190, column: 23, scope: !16149, inlinedAt: !16153)
!16156 = !DILocation(line: 192, column: 2, scope: !16149, inlinedAt: !16153)
!16157 = !DILocation(line: 215, column: 22, scope: !16149, inlinedAt: !16153)
!16158 = !DILocalVariable(name: "key", arg: 1, scope: !16159, file: !6329, line: 84, type: !32)
!16159 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6329, file: !6329, line: 84, type: !6349, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16160 = !DILocation(line: 84, column: 56, scope: !16159, inlinedAt: !16161)
!16161 = distinct !DILocation(line: 215, column: 2, scope: !16149, inlinedAt: !16153)
!16162 = !DILocation(line: 87, column: 6, scope: !16163, inlinedAt: !16161)
!16163 = distinct !DILexicalBlock(scope: !16159, file: !6329, line: 87, column: 6)
!16164 = !DILocation(line: 87, column: 10, scope: !16163, inlinedAt: !16161)
!16165 = !DILocation(line: 87, column: 6, scope: !16159, inlinedAt: !16161)
!16166 = !DILocation(line: 88, column: 3, scope: !16167, inlinedAt: !16161)
!16167 = distinct !DILexicalBlock(scope: !16163, file: !6329, line: 87, column: 17)
!16168 = !DILocation(line: 90, column: 2, scope: !16159, inlinedAt: !16161)
!16169 = !{i64 1456690}
!16170 = !DILocation(line: 110, column: 1, scope: !16159, inlinedAt: !16161)
!16171 = distinct !{!16171, !16026, !16172}
!16172 = !DILocation(line: 147, column: 2, scope: !16021)
!16173 = !DILocation(line: 148, column: 1, scope: !15998)
!16174 = distinct !DISubprogram(name: "elapsed", scope: !3266, file: !3266, line: 62, type: !16175, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16175 = !DISubroutineType(types: !16176)
!16176 = !{!250}
!16177 = !DILocation(line: 64, column: 9, scope: !16174)
!16178 = !DILocation(line: 64, column: 28, scope: !16174)
!16179 = !DILocation(line: 64, column: 35, scope: !16174)
!16180 = !DILocation(line: 64, column: 2, scope: !16174)
!16181 = distinct !DISubprogram(name: "first", scope: !3266, file: !3266, line: 39, type: !16182, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16182 = !DISubroutineType(types: !16183)
!16183 = !{!3239}
!16184 = !DILocalVariable(name: "t", scope: !16181, file: !3266, line: 41, type: !16185)
!16185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 32)
!16186 = !DILocation(line: 41, column: 15, scope: !16181)
!16187 = !DILocation(line: 41, column: 19, scope: !16181)
!16188 = !DILocation(line: 43, column: 9, scope: !16181)
!16189 = !DILocation(line: 43, column: 11, scope: !16181)
!16190 = !DILocation(line: 43, column: 28, scope: !16181)
!16191 = !DILocation(line: 43, column: 2, scope: !16181)
!16192 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !124, file: !124, line: 443, type: !16193, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16193 = !DISubroutineType(types: !16194)
!16194 = !{null, !16185, !16185}
!16195 = !DILocalVariable(name: "successor", arg: 1, scope: !16192, file: !124, line: 443, type: !16185)
!16196 = !DILocation(line: 443, column: 50, scope: !16192)
!16197 = !DILocalVariable(name: "node", arg: 2, scope: !16192, file: !124, line: 443, type: !16185)
!16198 = !DILocation(line: 443, column: 74, scope: !16192)
!16199 = !DILocalVariable(name: "prev", scope: !16192, file: !124, line: 445, type: !16200)
!16200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16185)
!16201 = !DILocation(line: 445, column: 21, scope: !16192)
!16202 = !DILocation(line: 445, column: 28, scope: !16192)
!16203 = !DILocation(line: 445, column: 39, scope: !16192)
!16204 = !DILocation(line: 447, column: 15, scope: !16192)
!16205 = !DILocation(line: 447, column: 2, scope: !16192)
!16206 = !DILocation(line: 447, column: 8, scope: !16192)
!16207 = !DILocation(line: 447, column: 13, scope: !16192)
!16208 = !DILocation(line: 448, column: 15, scope: !16192)
!16209 = !DILocation(line: 448, column: 2, scope: !16192)
!16210 = !DILocation(line: 448, column: 8, scope: !16192)
!16211 = !DILocation(line: 448, column: 13, scope: !16192)
!16212 = !DILocation(line: 449, column: 15, scope: !16192)
!16213 = !DILocation(line: 449, column: 2, scope: !16192)
!16214 = !DILocation(line: 449, column: 8, scope: !16192)
!16215 = !DILocation(line: 449, column: 13, scope: !16192)
!16216 = !DILocation(line: 450, column: 20, scope: !16192)
!16217 = !DILocation(line: 450, column: 2, scope: !16192)
!16218 = !DILocation(line: 450, column: 13, scope: !16192)
!16219 = !DILocation(line: 450, column: 18, scope: !16192)
!16220 = !DILocation(line: 451, column: 1, scope: !16192)
!16221 = distinct !DISubprogram(name: "next", scope: !3266, file: !3266, line: 46, type: !16222, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16222 = !DISubroutineType(types: !16223)
!16223 = !{!3239, !3239}
!16224 = !DILocalVariable(name: "t", arg: 1, scope: !16221, file: !3266, line: 46, type: !3239)
!16225 = !DILocation(line: 46, column: 47, scope: !16221)
!16226 = !DILocalVariable(name: "n", scope: !16221, file: !3266, line: 48, type: !16185)
!16227 = !DILocation(line: 48, column: 15, scope: !16221)
!16228 = !DILocation(line: 48, column: 55, scope: !16221)
!16229 = !DILocation(line: 48, column: 58, scope: !16221)
!16230 = !DILocation(line: 48, column: 19, scope: !16221)
!16231 = !DILocation(line: 50, column: 9, scope: !16221)
!16232 = !DILocation(line: 50, column: 11, scope: !16221)
!16233 = !DILocation(line: 50, column: 28, scope: !16221)
!16234 = !DILocation(line: 50, column: 2, scope: !16221)
!16235 = distinct !DISubprogram(name: "sys_dlist_append", scope: !124, file: !124, line: 404, type: !16236, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16236 = !DISubroutineType(types: !16237)
!16237 = !{null, !16238, !16185}
!16238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 32)
!16239 = !DILocalVariable(name: "list", arg: 1, scope: !16235, file: !124, line: 404, type: !16238)
!16240 = !DILocation(line: 404, column: 50, scope: !16235)
!16241 = !DILocalVariable(name: "node", arg: 2, scope: !16235, file: !124, line: 404, type: !16185)
!16242 = !DILocation(line: 404, column: 69, scope: !16235)
!16243 = !DILocalVariable(name: "tail", scope: !16235, file: !124, line: 406, type: !16200)
!16244 = !DILocation(line: 406, column: 21, scope: !16235)
!16245 = !DILocation(line: 406, column: 28, scope: !16235)
!16246 = !DILocation(line: 406, column: 34, scope: !16235)
!16247 = !DILocation(line: 408, column: 15, scope: !16235)
!16248 = !DILocation(line: 408, column: 2, scope: !16235)
!16249 = !DILocation(line: 408, column: 8, scope: !16235)
!16250 = !DILocation(line: 408, column: 13, scope: !16235)
!16251 = !DILocation(line: 409, column: 15, scope: !16235)
!16252 = !DILocation(line: 409, column: 2, scope: !16235)
!16253 = !DILocation(line: 409, column: 8, scope: !16235)
!16254 = !DILocation(line: 409, column: 13, scope: !16235)
!16255 = !DILocation(line: 411, column: 15, scope: !16235)
!16256 = !DILocation(line: 411, column: 2, scope: !16235)
!16257 = !DILocation(line: 411, column: 8, scope: !16235)
!16258 = !DILocation(line: 411, column: 13, scope: !16235)
!16259 = !DILocation(line: 412, column: 15, scope: !16235)
!16260 = !DILocation(line: 412, column: 2, scope: !16235)
!16261 = !DILocation(line: 412, column: 8, scope: !16235)
!16262 = !DILocation(line: 412, column: 13, scope: !16235)
!16263 = !DILocation(line: 413, column: 1, scope: !16235)
!16264 = distinct !DISubprogram(name: "next_timeout", scope: !3266, file: !3266, line: 67, type: !16175, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16265 = !DILocalVariable(name: "to", scope: !16264, file: !3266, line: 69, type: !3239)
!16266 = !DILocation(line: 69, column: 19, scope: !16264)
!16267 = !DILocation(line: 69, column: 24, scope: !16264)
!16268 = !DILocalVariable(name: "ticks_elapsed", scope: !16264, file: !3266, line: 70, type: !250)
!16269 = !DILocation(line: 70, column: 10, scope: !16264)
!16270 = !DILocation(line: 70, column: 26, scope: !16264)
!16271 = !DILocalVariable(name: "ret", scope: !16264, file: !3266, line: 71, type: !250)
!16272 = !DILocation(line: 71, column: 10, scope: !16264)
!16273 = !DILocation(line: 73, column: 7, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16264, file: !3266, line: 73, column: 6)
!16275 = !DILocation(line: 73, column: 10, scope: !16274)
!16276 = !DILocation(line: 73, column: 19, scope: !16274)
!16277 = !DILocation(line: 74, column: 17, scope: !16274)
!16278 = !DILocation(line: 74, column: 21, scope: !16274)
!16279 = !DILocation(line: 74, column: 30, scope: !16274)
!16280 = !DILocation(line: 74, column: 28, scope: !16274)
!16281 = !DILocation(line: 74, column: 45, scope: !16274)
!16282 = !DILocation(line: 73, column: 6, scope: !16264)
!16283 = !DILocation(line: 75, column: 7, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16274, file: !3266, line: 74, column: 66)
!16285 = !DILocation(line: 76, column: 2, scope: !16284)
!16286 = !DILocation(line: 77, column: 9, scope: !16287)
!16287 = distinct !DILexicalBlock(scope: !16274, file: !3266, line: 76, column: 9)
!16288 = !DILocation(line: 77, column: 7, scope: !16287)
!16289 = !DILocation(line: 81, column: 20, scope: !16290)
!16290 = distinct !DILexicalBlock(scope: !16264, file: !3266, line: 81, column: 6)
!16291 = !DILocation(line: 81, column: 6, scope: !16290)
!16292 = !DILocation(line: 81, column: 32, scope: !16290)
!16293 = !DILocation(line: 81, column: 49, scope: !16290)
!16294 = !DILocation(line: 81, column: 63, scope: !16290)
!16295 = !DILocation(line: 81, column: 61, scope: !16290)
!16296 = !DILocation(line: 81, column: 6, scope: !16264)
!16297 = !DILocation(line: 82, column: 23, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16290, file: !3266, line: 81, column: 68)
!16299 = !DILocation(line: 82, column: 7, scope: !16298)
!16300 = !DILocation(line: 83, column: 2, scope: !16298)
!16301 = !DILocation(line: 85, column: 9, scope: !16264)
!16302 = !DILocation(line: 85, column: 2, scope: !16264)
!16303 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !124, file: !124, line: 341, type: !16304, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16304 = !DISubroutineType(types: !16305)
!16305 = !{!16185, !16238, !16185}
!16306 = !DILocalVariable(name: "list", arg: 1, scope: !16303, file: !124, line: 341, type: !16238)
!16307 = !DILocation(line: 341, column: 61, scope: !16303)
!16308 = !DILocalVariable(name: "node", arg: 2, scope: !16303, file: !124, line: 342, type: !16185)
!16309 = !DILocation(line: 342, column: 26, scope: !16303)
!16310 = !DILocation(line: 344, column: 10, scope: !16303)
!16311 = !DILocation(line: 344, column: 15, scope: !16303)
!16312 = !DILocation(line: 344, column: 9, scope: !16303)
!16313 = !DILocation(line: 344, column: 55, scope: !16303)
!16314 = !DILocation(line: 344, column: 61, scope: !16303)
!16315 = !DILocation(line: 344, column: 26, scope: !16303)
!16316 = !DILocation(line: 344, column: 2, scope: !16303)
!16317 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !124, file: !124, line: 325, type: !16304, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16318 = !DILocalVariable(name: "list", arg: 1, scope: !16317, file: !124, line: 325, type: !16238)
!16319 = !DILocation(line: 325, column: 70, scope: !16317)
!16320 = !DILocalVariable(name: "node", arg: 2, scope: !16317, file: !124, line: 326, type: !16185)
!16321 = !DILocation(line: 326, column: 21, scope: !16317)
!16322 = !DILocation(line: 328, column: 10, scope: !16317)
!16323 = !DILocation(line: 328, column: 18, scope: !16317)
!16324 = !DILocation(line: 328, column: 24, scope: !16317)
!16325 = !DILocation(line: 328, column: 15, scope: !16317)
!16326 = !DILocation(line: 328, column: 9, scope: !16317)
!16327 = !DILocation(line: 328, column: 39, scope: !16317)
!16328 = !DILocation(line: 328, column: 45, scope: !16317)
!16329 = !DILocation(line: 328, column: 2, scope: !16317)
!16330 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !124, file: !124, line: 294, type: !16331, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16331 = !DISubroutineType(types: !16332)
!16332 = !{!16185, !16238}
!16333 = !DILocalVariable(name: "list", arg: 1, scope: !16330, file: !124, line: 294, type: !16238)
!16334 = !DILocation(line: 294, column: 61, scope: !16330)
!16335 = !DILocation(line: 296, column: 28, scope: !16330)
!16336 = !DILocation(line: 296, column: 9, scope: !16330)
!16337 = !DILocation(line: 296, column: 43, scope: !16330)
!16338 = !DILocation(line: 296, column: 49, scope: !16330)
!16339 = !DILocation(line: 296, column: 2, scope: !16330)
!16340 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !124, file: !124, line: 266, type: !16341, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16341 = !DISubroutineType(types: !16342)
!16342 = !{!1035, !16238}
!16343 = !DILocalVariable(name: "list", arg: 1, scope: !16340, file: !124, line: 266, type: !16238)
!16344 = !DILocation(line: 266, column: 52, scope: !16340)
!16345 = !DILocation(line: 268, column: 9, scope: !16340)
!16346 = !DILocation(line: 268, column: 15, scope: !16340)
!16347 = !DILocation(line: 268, column: 23, scope: !16340)
!16348 = !DILocation(line: 268, column: 20, scope: !16340)
!16349 = !DILocation(line: 268, column: 2, scope: !16340)
!16350 = distinct !DISubprogram(name: "z_abort_timeout", scope: !3266, file: !3266, line: 150, type: !16351, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16351 = !DISubroutineType(types: !16352)
!16352 = !{!103, !3239}
!16353 = !DILocalVariable(name: "to", arg: 1, scope: !16350, file: !3266, line: 150, type: !3239)
!16354 = !DILocation(line: 150, column: 38, scope: !16350)
!16355 = !DILocalVariable(name: "ret", scope: !16350, file: !3266, line: 152, type: !103)
!16356 = !DILocation(line: 152, column: 6, scope: !16350)
!16357 = !DILocalVariable(name: "__i", scope: !16358, file: !3266, line: 154, type: !16022)
!16358 = distinct !DILexicalBlock(scope: !16350, file: !3266, line: 154, column: 2)
!16359 = !DILocation(line: 154, column: 2, scope: !16358)
!16360 = !DILocalVariable(name: "__key", scope: !16358, file: !3266, line: 154, type: !16022)
!16361 = !DILocation(line: 136, column: 70, scope: !16029, inlinedAt: !16362)
!16362 = distinct !DILocation(line: 154, column: 2, scope: !16358)
!16363 = !DILocation(line: 138, column: 2, scope: !16029, inlinedAt: !16362)
!16364 = !DILocation(line: 139, column: 19, scope: !16029, inlinedAt: !16362)
!16365 = !DILocation(line: 44, column: 15, scope: !16039, inlinedAt: !16366)
!16366 = distinct !DILocation(line: 145, column: 10, scope: !16029, inlinedAt: !16362)
!16367 = !DILocation(line: 47, column: 2, scope: !16039, inlinedAt: !16366)
!16368 = !DILocation(line: 76, column: 9, scope: !16039, inlinedAt: !16366)
!16369 = !DILocation(line: 145, column: 4, scope: !16029, inlinedAt: !16362)
!16370 = !DILocation(line: 145, column: 8, scope: !16029, inlinedAt: !16362)
!16371 = !DILocation(line: 165, column: 2, scope: !16029, inlinedAt: !16362)
!16372 = !DILocation(line: 154, column: 2, scope: !16373)
!16373 = distinct !DILexicalBlock(scope: !16358, file: !3266, line: 154, column: 2)
!16374 = !DILocation(line: 155, column: 28, scope: !16375)
!16375 = distinct !DILexicalBlock(scope: !16376, file: !3266, line: 155, column: 7)
!16376 = distinct !DILexicalBlock(scope: !16373, file: !3266, line: 154, column: 24)
!16377 = !DILocation(line: 155, column: 32, scope: !16375)
!16378 = !DILocation(line: 155, column: 7, scope: !16375)
!16379 = !DILocation(line: 155, column: 7, scope: !16376)
!16380 = !DILocation(line: 156, column: 19, scope: !16381)
!16381 = distinct !DILexicalBlock(scope: !16375, file: !3266, line: 155, column: 39)
!16382 = !DILocation(line: 156, column: 4, scope: !16381)
!16383 = !DILocation(line: 157, column: 8, scope: !16381)
!16384 = !DILocation(line: 158, column: 3, scope: !16381)
!16385 = !DILocation(line: 159, column: 2, scope: !16376)
!16386 = !DILocation(line: 189, column: 60, scope: !16149, inlinedAt: !16387)
!16387 = distinct !DILocation(line: 154, column: 2, scope: !16373)
!16388 = !DILocation(line: 190, column: 23, scope: !16149, inlinedAt: !16387)
!16389 = !DILocation(line: 192, column: 2, scope: !16149, inlinedAt: !16387)
!16390 = !DILocation(line: 215, column: 22, scope: !16149, inlinedAt: !16387)
!16391 = !DILocation(line: 84, column: 56, scope: !16159, inlinedAt: !16392)
!16392 = distinct !DILocation(line: 215, column: 2, scope: !16149, inlinedAt: !16387)
!16393 = !DILocation(line: 87, column: 6, scope: !16163, inlinedAt: !16392)
!16394 = !DILocation(line: 87, column: 10, scope: !16163, inlinedAt: !16392)
!16395 = !DILocation(line: 87, column: 6, scope: !16159, inlinedAt: !16392)
!16396 = !DILocation(line: 88, column: 3, scope: !16167, inlinedAt: !16392)
!16397 = !DILocation(line: 90, column: 2, scope: !16159, inlinedAt: !16392)
!16398 = !DILocation(line: 110, column: 1, scope: !16159, inlinedAt: !16392)
!16399 = distinct !{!16399, !16359, !16400}
!16400 = !DILocation(line: 159, column: 2, scope: !16358)
!16401 = !DILocation(line: 161, column: 9, scope: !16350)
!16402 = !DILocation(line: 161, column: 2, scope: !16350)
!16403 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !124, file: !124, line: 225, type: !16404, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16404 = !DISubroutineType(types: !16405)
!16405 = !{!1035, !16406}
!16406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16407, size: 32)
!16407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3243)
!16408 = !DILocalVariable(name: "node", arg: 1, scope: !16403, file: !124, line: 225, type: !16406)
!16409 = !DILocation(line: 225, column: 59, scope: !16403)
!16410 = !DILocation(line: 227, column: 9, scope: !16403)
!16411 = !DILocation(line: 227, column: 15, scope: !16403)
!16412 = !DILocation(line: 227, column: 20, scope: !16403)
!16413 = !DILocation(line: 227, column: 2, scope: !16403)
!16414 = distinct !DISubprogram(name: "remove_timeout", scope: !3266, file: !3266, line: 53, type: !3260, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16415 = !DILocalVariable(name: "t", arg: 1, scope: !16414, file: !3266, line: 53, type: !3239)
!16416 = !DILocation(line: 53, column: 45, scope: !16414)
!16417 = !DILocation(line: 55, column: 11, scope: !16418)
!16418 = distinct !DILexicalBlock(scope: !16414, file: !3266, line: 55, column: 6)
!16419 = !DILocation(line: 55, column: 6, scope: !16418)
!16420 = !DILocation(line: 55, column: 14, scope: !16418)
!16421 = !DILocation(line: 55, column: 6, scope: !16414)
!16422 = !DILocation(line: 56, column: 22, scope: !16423)
!16423 = distinct !DILexicalBlock(scope: !16418, file: !3266, line: 55, column: 23)
!16424 = !DILocation(line: 56, column: 25, scope: !16423)
!16425 = !DILocation(line: 56, column: 8, scope: !16423)
!16426 = !DILocation(line: 56, column: 3, scope: !16423)
!16427 = !DILocation(line: 56, column: 12, scope: !16423)
!16428 = !DILocation(line: 56, column: 19, scope: !16423)
!16429 = !DILocation(line: 57, column: 2, scope: !16423)
!16430 = !DILocation(line: 59, column: 20, scope: !16414)
!16431 = !DILocation(line: 59, column: 23, scope: !16414)
!16432 = !DILocation(line: 59, column: 2, scope: !16414)
!16433 = !DILocation(line: 60, column: 1, scope: !16414)
!16434 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !124, file: !124, line: 496, type: !16435, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16435 = !DISubroutineType(types: !16436)
!16436 = !{null, !16185}
!16437 = !DILocalVariable(name: "node", arg: 1, scope: !16434, file: !124, line: 496, type: !16185)
!16438 = !DILocation(line: 496, column: 50, scope: !16434)
!16439 = !DILocalVariable(name: "prev", scope: !16434, file: !124, line: 498, type: !16200)
!16440 = !DILocation(line: 498, column: 21, scope: !16434)
!16441 = !DILocation(line: 498, column: 28, scope: !16434)
!16442 = !DILocation(line: 498, column: 34, scope: !16434)
!16443 = !DILocalVariable(name: "next", scope: !16434, file: !124, line: 499, type: !16200)
!16444 = !DILocation(line: 499, column: 21, scope: !16434)
!16445 = !DILocation(line: 499, column: 28, scope: !16434)
!16446 = !DILocation(line: 499, column: 34, scope: !16434)
!16447 = !DILocation(line: 501, column: 15, scope: !16434)
!16448 = !DILocation(line: 501, column: 2, scope: !16434)
!16449 = !DILocation(line: 501, column: 8, scope: !16434)
!16450 = !DILocation(line: 501, column: 13, scope: !16434)
!16451 = !DILocation(line: 502, column: 15, scope: !16434)
!16452 = !DILocation(line: 502, column: 2, scope: !16434)
!16453 = !DILocation(line: 502, column: 8, scope: !16434)
!16454 = !DILocation(line: 502, column: 13, scope: !16434)
!16455 = !DILocation(line: 503, column: 17, scope: !16434)
!16456 = !DILocation(line: 503, column: 2, scope: !16434)
!16457 = !DILocation(line: 504, column: 1, scope: !16434)
!16458 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !16435, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16459 = !DILocalVariable(name: "node", arg: 1, scope: !16458, file: !124, line: 211, type: !16185)
!16460 = !DILocation(line: 211, column: 48, scope: !16458)
!16461 = !DILocation(line: 213, column: 2, scope: !16458)
!16462 = !DILocation(line: 213, column: 8, scope: !16458)
!16463 = !DILocation(line: 213, column: 13, scope: !16458)
!16464 = !DILocation(line: 214, column: 2, scope: !16458)
!16465 = !DILocation(line: 214, column: 8, scope: !16458)
!16466 = !DILocation(line: 214, column: 13, scope: !16458)
!16467 = !DILocation(line: 215, column: 1, scope: !16458)
!16468 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !3266, file: !3266, line: 183, type: !16469, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16469 = !DISubroutineType(types: !16470)
!16470 = !{!2526, !16471}
!16471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16472, size: 32)
!16472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3240)
!16473 = !DILocalVariable(name: "timeout", arg: 1, scope: !16468, file: !3266, line: 183, type: !16471)
!16474 = !DILocation(line: 183, column: 54, scope: !16468)
!16475 = !DILocalVariable(name: "ticks", scope: !16468, file: !3266, line: 185, type: !2526)
!16476 = !DILocation(line: 185, column: 12, scope: !16468)
!16477 = !DILocalVariable(name: "__i", scope: !16478, file: !3266, line: 187, type: !16022)
!16478 = distinct !DILexicalBlock(scope: !16468, file: !3266, line: 187, column: 2)
!16479 = !DILocation(line: 187, column: 2, scope: !16478)
!16480 = !DILocalVariable(name: "__key", scope: !16478, file: !3266, line: 187, type: !16022)
!16481 = !DILocation(line: 136, column: 70, scope: !16029, inlinedAt: !16482)
!16482 = distinct !DILocation(line: 187, column: 2, scope: !16478)
!16483 = !DILocation(line: 138, column: 2, scope: !16029, inlinedAt: !16482)
!16484 = !DILocation(line: 139, column: 19, scope: !16029, inlinedAt: !16482)
!16485 = !DILocation(line: 44, column: 15, scope: !16039, inlinedAt: !16486)
!16486 = distinct !DILocation(line: 145, column: 10, scope: !16029, inlinedAt: !16482)
!16487 = !DILocation(line: 47, column: 2, scope: !16039, inlinedAt: !16486)
!16488 = !DILocation(line: 76, column: 9, scope: !16039, inlinedAt: !16486)
!16489 = !DILocation(line: 145, column: 4, scope: !16029, inlinedAt: !16482)
!16490 = !DILocation(line: 145, column: 8, scope: !16029, inlinedAt: !16482)
!16491 = !DILocation(line: 165, column: 2, scope: !16029, inlinedAt: !16482)
!16492 = !DILocation(line: 187, column: 2, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16478, file: !3266, line: 187, column: 2)
!16494 = !DILocation(line: 188, column: 23, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16493, file: !3266, line: 187, column: 24)
!16496 = !DILocation(line: 188, column: 11, scope: !16495)
!16497 = !DILocation(line: 188, column: 9, scope: !16495)
!16498 = !DILocation(line: 189, column: 2, scope: !16495)
!16499 = !DILocation(line: 189, column: 60, scope: !16149, inlinedAt: !16500)
!16500 = distinct !DILocation(line: 187, column: 2, scope: !16493)
!16501 = !DILocation(line: 190, column: 23, scope: !16149, inlinedAt: !16500)
!16502 = !DILocation(line: 192, column: 2, scope: !16149, inlinedAt: !16500)
!16503 = !DILocation(line: 215, column: 22, scope: !16149, inlinedAt: !16500)
!16504 = !DILocation(line: 84, column: 56, scope: !16159, inlinedAt: !16505)
!16505 = distinct !DILocation(line: 215, column: 2, scope: !16149, inlinedAt: !16500)
!16506 = !DILocation(line: 87, column: 6, scope: !16163, inlinedAt: !16505)
!16507 = !DILocation(line: 87, column: 10, scope: !16163, inlinedAt: !16505)
!16508 = !DILocation(line: 87, column: 6, scope: !16159, inlinedAt: !16505)
!16509 = !DILocation(line: 88, column: 3, scope: !16167, inlinedAt: !16505)
!16510 = !DILocation(line: 90, column: 2, scope: !16159, inlinedAt: !16505)
!16511 = !DILocation(line: 110, column: 1, scope: !16159, inlinedAt: !16505)
!16512 = distinct !{!16512, !16479, !16513}
!16513 = !DILocation(line: 189, column: 2, scope: !16478)
!16514 = !DILocation(line: 191, column: 9, scope: !16468)
!16515 = !DILocation(line: 191, column: 2, scope: !16468)
!16516 = distinct !DISubprogram(name: "timeout_rem", scope: !3266, file: !3266, line: 165, type: !16469, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16517 = !DILocalVariable(name: "timeout", arg: 1, scope: !16516, file: !3266, line: 165, type: !16471)
!16518 = !DILocation(line: 165, column: 53, scope: !16516)
!16519 = !DILocalVariable(name: "ticks", scope: !16516, file: !3266, line: 167, type: !2526)
!16520 = !DILocation(line: 167, column: 12, scope: !16516)
!16521 = !DILocation(line: 169, column: 28, scope: !16522)
!16522 = distinct !DILexicalBlock(scope: !16516, file: !3266, line: 169, column: 6)
!16523 = !DILocation(line: 169, column: 6, scope: !16522)
!16524 = !DILocation(line: 169, column: 6, scope: !16516)
!16525 = !DILocation(line: 170, column: 3, scope: !16526)
!16526 = distinct !DILexicalBlock(scope: !16522, file: !3266, line: 169, column: 38)
!16527 = !DILocalVariable(name: "t", scope: !16528, file: !3266, line: 173, type: !3239)
!16528 = distinct !DILexicalBlock(scope: !16516, file: !3266, line: 173, column: 2)
!16529 = !DILocation(line: 173, column: 24, scope: !16528)
!16530 = !DILocation(line: 173, column: 28, scope: !16528)
!16531 = !DILocation(line: 173, column: 7, scope: !16528)
!16532 = !DILocation(line: 173, column: 37, scope: !16533)
!16533 = distinct !DILexicalBlock(scope: !16528, file: !3266, line: 173, column: 2)
!16534 = !DILocation(line: 173, column: 39, scope: !16533)
!16535 = !DILocation(line: 173, column: 2, scope: !16528)
!16536 = !DILocation(line: 174, column: 12, scope: !16537)
!16537 = distinct !DILexicalBlock(scope: !16533, file: !3266, line: 173, column: 61)
!16538 = !DILocation(line: 174, column: 15, scope: !16537)
!16539 = !DILocation(line: 174, column: 9, scope: !16537)
!16540 = !DILocation(line: 175, column: 7, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16537, file: !3266, line: 175, column: 7)
!16542 = !DILocation(line: 175, column: 18, scope: !16541)
!16543 = !DILocation(line: 175, column: 15, scope: !16541)
!16544 = !DILocation(line: 175, column: 7, scope: !16537)
!16545 = !DILocation(line: 176, column: 4, scope: !16546)
!16546 = distinct !DILexicalBlock(scope: !16541, file: !3266, line: 175, column: 21)
!16547 = !DILocation(line: 178, column: 2, scope: !16537)
!16548 = !DILocation(line: 173, column: 57, scope: !16533)
!16549 = !DILocation(line: 173, column: 52, scope: !16533)
!16550 = !DILocation(line: 173, column: 50, scope: !16533)
!16551 = !DILocation(line: 173, column: 2, scope: !16533)
!16552 = distinct !{!16552, !16535, !16553}
!16553 = !DILocation(line: 178, column: 2, scope: !16528)
!16554 = !DILocation(line: 180, column: 9, scope: !16516)
!16555 = !DILocation(line: 180, column: 17, scope: !16516)
!16556 = !DILocation(line: 180, column: 15, scope: !16516)
!16557 = !DILocation(line: 180, column: 2, scope: !16516)
!16558 = !DILocation(line: 181, column: 1, scope: !16516)
!16559 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11660, file: !11660, line: 35, type: !16560, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16560 = !DISubroutineType(types: !16561)
!16561 = !{!1035, !16471}
!16562 = !DILocalVariable(name: "to", arg: 1, scope: !16559, file: !11660, line: 35, type: !16471)
!16563 = !DILocation(line: 35, column: 65, scope: !16559)
!16564 = !DILocation(line: 37, column: 31, scope: !16559)
!16565 = !DILocation(line: 37, column: 35, scope: !16559)
!16566 = !DILocation(line: 37, column: 10, scope: !16559)
!16567 = !DILocation(line: 37, column: 9, scope: !16559)
!16568 = !DILocation(line: 37, column: 2, scope: !16559)
!16569 = distinct !DISubprogram(name: "z_timeout_expires", scope: !3266, file: !3266, line: 194, type: !16469, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16570 = !DILocalVariable(name: "timeout", arg: 1, scope: !16569, file: !3266, line: 194, type: !16471)
!16571 = !DILocation(line: 194, column: 52, scope: !16569)
!16572 = !DILocalVariable(name: "ticks", scope: !16569, file: !3266, line: 196, type: !2526)
!16573 = !DILocation(line: 196, column: 12, scope: !16569)
!16574 = !DILocalVariable(name: "__i", scope: !16575, file: !3266, line: 198, type: !16022)
!16575 = distinct !DILexicalBlock(scope: !16569, file: !3266, line: 198, column: 2)
!16576 = !DILocation(line: 198, column: 2, scope: !16575)
!16577 = !DILocalVariable(name: "__key", scope: !16575, file: !3266, line: 198, type: !16022)
!16578 = !DILocation(line: 136, column: 70, scope: !16029, inlinedAt: !16579)
!16579 = distinct !DILocation(line: 198, column: 2, scope: !16575)
!16580 = !DILocation(line: 138, column: 2, scope: !16029, inlinedAt: !16579)
!16581 = !DILocation(line: 139, column: 19, scope: !16029, inlinedAt: !16579)
!16582 = !DILocation(line: 44, column: 15, scope: !16039, inlinedAt: !16583)
!16583 = distinct !DILocation(line: 145, column: 10, scope: !16029, inlinedAt: !16579)
!16584 = !DILocation(line: 47, column: 2, scope: !16039, inlinedAt: !16583)
!16585 = !DILocation(line: 76, column: 9, scope: !16039, inlinedAt: !16583)
!16586 = !DILocation(line: 145, column: 4, scope: !16029, inlinedAt: !16579)
!16587 = !DILocation(line: 145, column: 8, scope: !16029, inlinedAt: !16579)
!16588 = !DILocation(line: 165, column: 2, scope: !16029, inlinedAt: !16579)
!16589 = !DILocation(line: 198, column: 2, scope: !16590)
!16590 = distinct !DILexicalBlock(scope: !16575, file: !3266, line: 198, column: 2)
!16591 = !DILocation(line: 199, column: 11, scope: !16592)
!16592 = distinct !DILexicalBlock(scope: !16590, file: !3266, line: 198, column: 24)
!16593 = !DILocation(line: 199, column: 35, scope: !16592)
!16594 = !DILocation(line: 199, column: 23, scope: !16592)
!16595 = !DILocation(line: 199, column: 21, scope: !16592)
!16596 = !DILocation(line: 199, column: 9, scope: !16592)
!16597 = !DILocation(line: 200, column: 2, scope: !16592)
!16598 = !DILocation(line: 189, column: 60, scope: !16149, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 198, column: 2, scope: !16590)
!16600 = !DILocation(line: 190, column: 23, scope: !16149, inlinedAt: !16599)
!16601 = !DILocation(line: 192, column: 2, scope: !16149, inlinedAt: !16599)
!16602 = !DILocation(line: 215, column: 22, scope: !16149, inlinedAt: !16599)
!16603 = !DILocation(line: 84, column: 56, scope: !16159, inlinedAt: !16604)
!16604 = distinct !DILocation(line: 215, column: 2, scope: !16149, inlinedAt: !16599)
!16605 = !DILocation(line: 87, column: 6, scope: !16163, inlinedAt: !16604)
!16606 = !DILocation(line: 87, column: 10, scope: !16163, inlinedAt: !16604)
!16607 = !DILocation(line: 87, column: 6, scope: !16159, inlinedAt: !16604)
!16608 = !DILocation(line: 88, column: 3, scope: !16167, inlinedAt: !16604)
!16609 = !DILocation(line: 90, column: 2, scope: !16159, inlinedAt: !16604)
!16610 = !DILocation(line: 110, column: 1, scope: !16159, inlinedAt: !16604)
!16611 = distinct !{!16611, !16576, !16612}
!16612 = !DILocation(line: 200, column: 2, scope: !16575)
!16613 = !DILocation(line: 202, column: 9, scope: !16569)
!16614 = !DILocation(line: 202, column: 2, scope: !16569)
!16615 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !3266, file: !3266, line: 205, type: !16175, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16616 = !DILocalVariable(name: "ret", scope: !16615, file: !3266, line: 207, type: !250)
!16617 = !DILocation(line: 207, column: 10, scope: !16615)
!16618 = !DILocalVariable(name: "__i", scope: !16619, file: !3266, line: 209, type: !16022)
!16619 = distinct !DILexicalBlock(scope: !16615, file: !3266, line: 209, column: 2)
!16620 = !DILocation(line: 209, column: 2, scope: !16619)
!16621 = !DILocalVariable(name: "__key", scope: !16619, file: !3266, line: 209, type: !16022)
!16622 = !DILocation(line: 136, column: 70, scope: !16029, inlinedAt: !16623)
!16623 = distinct !DILocation(line: 209, column: 2, scope: !16619)
!16624 = !DILocation(line: 138, column: 2, scope: !16029, inlinedAt: !16623)
!16625 = !DILocation(line: 139, column: 19, scope: !16029, inlinedAt: !16623)
!16626 = !DILocation(line: 44, column: 15, scope: !16039, inlinedAt: !16627)
!16627 = distinct !DILocation(line: 145, column: 10, scope: !16029, inlinedAt: !16623)
!16628 = !DILocation(line: 47, column: 2, scope: !16039, inlinedAt: !16627)
!16629 = !DILocation(line: 76, column: 9, scope: !16039, inlinedAt: !16627)
!16630 = !DILocation(line: 145, column: 4, scope: !16029, inlinedAt: !16623)
!16631 = !DILocation(line: 145, column: 8, scope: !16029, inlinedAt: !16623)
!16632 = !DILocation(line: 165, column: 2, scope: !16029, inlinedAt: !16623)
!16633 = !DILocation(line: 209, column: 2, scope: !16634)
!16634 = distinct !DILexicalBlock(scope: !16619, file: !3266, line: 209, column: 2)
!16635 = !DILocation(line: 210, column: 9, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16634, file: !3266, line: 209, column: 24)
!16637 = !DILocation(line: 210, column: 7, scope: !16636)
!16638 = !DILocation(line: 211, column: 2, scope: !16636)
!16639 = !DILocation(line: 189, column: 60, scope: !16149, inlinedAt: !16640)
!16640 = distinct !DILocation(line: 209, column: 2, scope: !16634)
!16641 = !DILocation(line: 190, column: 23, scope: !16149, inlinedAt: !16640)
!16642 = !DILocation(line: 192, column: 2, scope: !16149, inlinedAt: !16640)
!16643 = !DILocation(line: 215, column: 22, scope: !16149, inlinedAt: !16640)
!16644 = !DILocation(line: 84, column: 56, scope: !16159, inlinedAt: !16645)
!16645 = distinct !DILocation(line: 215, column: 2, scope: !16149, inlinedAt: !16640)
!16646 = !DILocation(line: 87, column: 6, scope: !16163, inlinedAt: !16645)
!16647 = !DILocation(line: 87, column: 10, scope: !16163, inlinedAt: !16645)
!16648 = !DILocation(line: 87, column: 6, scope: !16159, inlinedAt: !16645)
!16649 = !DILocation(line: 88, column: 3, scope: !16167, inlinedAt: !16645)
!16650 = !DILocation(line: 90, column: 2, scope: !16159, inlinedAt: !16645)
!16651 = !DILocation(line: 110, column: 1, scope: !16159, inlinedAt: !16645)
!16652 = distinct !{!16652, !16620, !16653}
!16653 = !DILocation(line: 211, column: 2, scope: !16619)
!16654 = !DILocation(line: 212, column: 9, scope: !16615)
!16655 = !DILocation(line: 212, column: 2, scope: !16615)
!16656 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !3266, file: !3266, line: 215, type: !9913, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16657 = !DILocalVariable(name: "ticks", arg: 1, scope: !16656, file: !3266, line: 215, type: !250)
!16658 = !DILocation(line: 215, column: 35, scope: !16656)
!16659 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16656, file: !3266, line: 215, type: !1035)
!16660 = !DILocation(line: 215, column: 47, scope: !16656)
!16661 = !DILocalVariable(name: "__i", scope: !16662, file: !3266, line: 217, type: !16022)
!16662 = distinct !DILexicalBlock(scope: !16656, file: !3266, line: 217, column: 2)
!16663 = !DILocation(line: 217, column: 2, scope: !16662)
!16664 = !DILocalVariable(name: "__key", scope: !16662, file: !3266, line: 217, type: !16022)
!16665 = !DILocation(line: 136, column: 70, scope: !16029, inlinedAt: !16666)
!16666 = distinct !DILocation(line: 217, column: 2, scope: !16662)
!16667 = !DILocation(line: 138, column: 2, scope: !16029, inlinedAt: !16666)
!16668 = !DILocation(line: 139, column: 19, scope: !16029, inlinedAt: !16666)
!16669 = !DILocation(line: 44, column: 15, scope: !16039, inlinedAt: !16670)
!16670 = distinct !DILocation(line: 145, column: 10, scope: !16029, inlinedAt: !16666)
!16671 = !DILocation(line: 47, column: 2, scope: !16039, inlinedAt: !16670)
!16672 = !DILocation(line: 76, column: 9, scope: !16039, inlinedAt: !16670)
!16673 = !DILocation(line: 145, column: 4, scope: !16029, inlinedAt: !16666)
!16674 = !DILocation(line: 145, column: 8, scope: !16029, inlinedAt: !16666)
!16675 = !DILocation(line: 165, column: 2, scope: !16029, inlinedAt: !16666)
!16676 = !DILocation(line: 217, column: 2, scope: !16677)
!16677 = distinct !DILexicalBlock(scope: !16662, file: !3266, line: 217, column: 2)
!16678 = !DILocalVariable(name: "next_to", scope: !16679, file: !3266, line: 218, type: !103)
!16679 = distinct !DILexicalBlock(scope: !16677, file: !3266, line: 217, column: 24)
!16680 = !DILocation(line: 218, column: 7, scope: !16679)
!16681 = !DILocation(line: 218, column: 17, scope: !16679)
!16682 = !DILocalVariable(name: "sooner", scope: !16679, file: !3266, line: 219, type: !1035)
!16683 = !DILocation(line: 219, column: 8, scope: !16679)
!16684 = !DILocation(line: 219, column: 18, scope: !16679)
!16685 = !DILocation(line: 219, column: 26, scope: !16679)
!16686 = !DILocation(line: 220, column: 10, scope: !16679)
!16687 = !DILocation(line: 220, column: 14, scope: !16679)
!16688 = !DILocation(line: 220, column: 23, scope: !16679)
!16689 = !DILocation(line: 220, column: 20, scope: !16679)
!16690 = !DILocalVariable(name: "imminent", scope: !16679, file: !3266, line: 221, type: !1035)
!16691 = !DILocation(line: 221, column: 8, scope: !16679)
!16692 = !DILocation(line: 221, column: 19, scope: !16679)
!16693 = !DILocation(line: 221, column: 27, scope: !16679)
!16694 = !DILocation(line: 233, column: 8, scope: !16695)
!16695 = distinct !DILexicalBlock(scope: !16679, file: !3266, line: 233, column: 7)
!16696 = !DILocation(line: 233, column: 17, scope: !16695)
!16697 = !DILocation(line: 233, column: 21, scope: !16695)
!16698 = !DILocation(line: 233, column: 7, scope: !16679)
!16699 = !DILocation(line: 234, column: 26, scope: !16700)
!16700 = distinct !DILexicalBlock(scope: !16695, file: !3266, line: 233, column: 56)
!16701 = !DILocation(line: 234, column: 47, scope: !16700)
!16702 = !DILocation(line: 234, column: 4, scope: !16700)
!16703 = !DILocation(line: 235, column: 3, scope: !16700)
!16704 = !DILocation(line: 236, column: 2, scope: !16679)
!16705 = !DILocation(line: 189, column: 60, scope: !16149, inlinedAt: !16706)
!16706 = distinct !DILocation(line: 217, column: 2, scope: !16677)
!16707 = !DILocation(line: 190, column: 23, scope: !16149, inlinedAt: !16706)
!16708 = !DILocation(line: 192, column: 2, scope: !16149, inlinedAt: !16706)
!16709 = !DILocation(line: 215, column: 22, scope: !16149, inlinedAt: !16706)
!16710 = !DILocation(line: 84, column: 56, scope: !16159, inlinedAt: !16711)
!16711 = distinct !DILocation(line: 215, column: 2, scope: !16149, inlinedAt: !16706)
!16712 = !DILocation(line: 87, column: 6, scope: !16163, inlinedAt: !16711)
!16713 = !DILocation(line: 87, column: 10, scope: !16163, inlinedAt: !16711)
!16714 = !DILocation(line: 87, column: 6, scope: !16159, inlinedAt: !16711)
!16715 = !DILocation(line: 88, column: 3, scope: !16167, inlinedAt: !16711)
!16716 = !DILocation(line: 90, column: 2, scope: !16159, inlinedAt: !16711)
!16717 = !DILocation(line: 110, column: 1, scope: !16159, inlinedAt: !16711)
!16718 = distinct !{!16718, !16663, !16719}
!16719 = !DILocation(line: 236, column: 2, scope: !16662)
!16720 = !DILocation(line: 237, column: 1, scope: !16656)
!16721 = distinct !DISubprogram(name: "sys_clock_announce", scope: !3266, file: !3266, line: 239, type: !16722, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16722 = !DISubroutineType(types: !16723)
!16723 = !{null, !250}
!16724 = !DILocalVariable(name: "ticks", arg: 1, scope: !16721, file: !3266, line: 239, type: !250)
!16725 = !DILocation(line: 239, column: 33, scope: !16721)
!16726 = !DILocation(line: 242, column: 15, scope: !16721)
!16727 = !DILocation(line: 242, column: 2, scope: !16721)
!16728 = !DILocalVariable(name: "key", scope: !16721, file: !3266, line: 245, type: !16022)
!16729 = !DILocation(line: 245, column: 19, scope: !16721)
!16730 = !DILocation(line: 136, column: 70, scope: !16029, inlinedAt: !16731)
!16731 = distinct !DILocation(line: 245, column: 25, scope: !16721)
!16732 = !DILocation(line: 138, column: 2, scope: !16029, inlinedAt: !16731)
!16733 = !DILocation(line: 139, column: 19, scope: !16029, inlinedAt: !16731)
!16734 = !DILocation(line: 44, column: 15, scope: !16039, inlinedAt: !16735)
!16735 = distinct !DILocation(line: 145, column: 10, scope: !16029, inlinedAt: !16731)
!16736 = !DILocation(line: 47, column: 2, scope: !16039, inlinedAt: !16735)
!16737 = !DILocation(line: 76, column: 9, scope: !16039, inlinedAt: !16735)
!16738 = !DILocation(line: 145, column: 4, scope: !16029, inlinedAt: !16731)
!16739 = !DILocation(line: 145, column: 8, scope: !16029, inlinedAt: !16731)
!16740 = !DILocation(line: 165, column: 2, scope: !16029, inlinedAt: !16731)
!16741 = !DILocation(line: 245, column: 25, scope: !16721)
!16742 = !DILocation(line: 259, column: 23, scope: !16721)
!16743 = !DILocation(line: 259, column: 21, scope: !16721)
!16744 = !DILocation(line: 261, column: 2, scope: !16721)
!16745 = !DILocation(line: 261, column: 9, scope: !16721)
!16746 = !DILocation(line: 261, column: 17, scope: !16721)
!16747 = !DILocation(line: 261, column: 25, scope: !16721)
!16748 = !DILocation(line: 261, column: 28, scope: !16721)
!16749 = !DILocation(line: 261, column: 37, scope: !16721)
!16750 = !DILocation(line: 261, column: 47, scope: !16721)
!16751 = !DILocation(line: 261, column: 44, scope: !16721)
!16752 = !DILocation(line: 0, scope: !16721)
!16753 = !DILocalVariable(name: "t", scope: !16754, file: !3266, line: 262, type: !3239)
!16754 = distinct !DILexicalBlock(scope: !16721, file: !3266, line: 261, column: 67)
!16755 = !DILocation(line: 262, column: 20, scope: !16754)
!16756 = !DILocation(line: 262, column: 24, scope: !16754)
!16757 = !DILocalVariable(name: "dt", scope: !16754, file: !3266, line: 263, type: !103)
!16758 = !DILocation(line: 263, column: 7, scope: !16754)
!16759 = !DILocation(line: 263, column: 12, scope: !16754)
!16760 = !DILocation(line: 263, column: 15, scope: !16754)
!16761 = !DILocation(line: 265, column: 16, scope: !16754)
!16762 = !DILocation(line: 265, column: 13, scope: !16754)
!16763 = !DILocation(line: 266, column: 3, scope: !16754)
!16764 = !DILocation(line: 266, column: 6, scope: !16754)
!16765 = !DILocation(line: 266, column: 13, scope: !16754)
!16766 = !DILocation(line: 267, column: 18, scope: !16754)
!16767 = !DILocation(line: 267, column: 3, scope: !16754)
!16768 = !DILocation(line: 269, column: 3, scope: !16754)
!16769 = !DILocation(line: 189, column: 60, scope: !16149, inlinedAt: !16770)
!16770 = distinct !DILocation(line: 269, column: 3, scope: !16754)
!16771 = !DILocation(line: 190, column: 23, scope: !16149, inlinedAt: !16770)
!16772 = !DILocation(line: 192, column: 2, scope: !16149, inlinedAt: !16770)
!16773 = !DILocation(line: 215, column: 22, scope: !16149, inlinedAt: !16770)
!16774 = !DILocation(line: 84, column: 56, scope: !16159, inlinedAt: !16775)
!16775 = distinct !DILocation(line: 215, column: 2, scope: !16149, inlinedAt: !16770)
!16776 = !DILocation(line: 87, column: 6, scope: !16163, inlinedAt: !16775)
!16777 = !DILocation(line: 87, column: 10, scope: !16163, inlinedAt: !16775)
!16778 = !DILocation(line: 87, column: 6, scope: !16159, inlinedAt: !16775)
!16779 = !DILocation(line: 88, column: 3, scope: !16167, inlinedAt: !16775)
!16780 = !DILocation(line: 90, column: 2, scope: !16159, inlinedAt: !16775)
!16781 = !DILocation(line: 110, column: 1, scope: !16159, inlinedAt: !16775)
!16782 = !DILocation(line: 270, column: 3, scope: !16754)
!16783 = !DILocation(line: 270, column: 6, scope: !16754)
!16784 = !DILocation(line: 270, column: 9, scope: !16754)
!16785 = !DILocation(line: 136, column: 70, scope: !16029, inlinedAt: !16786)
!16786 = distinct !DILocation(line: 271, column: 9, scope: !16754)
!16787 = !DILocation(line: 138, column: 2, scope: !16029, inlinedAt: !16786)
!16788 = !DILocation(line: 139, column: 19, scope: !16029, inlinedAt: !16786)
!16789 = !DILocation(line: 44, column: 15, scope: !16039, inlinedAt: !16790)
!16790 = distinct !DILocation(line: 145, column: 10, scope: !16029, inlinedAt: !16786)
!16791 = !DILocation(line: 47, column: 2, scope: !16039, inlinedAt: !16790)
!16792 = !DILocation(line: 76, column: 9, scope: !16039, inlinedAt: !16790)
!16793 = !DILocation(line: 145, column: 4, scope: !16029, inlinedAt: !16786)
!16794 = !DILocation(line: 145, column: 8, scope: !16029, inlinedAt: !16786)
!16795 = !DILocation(line: 165, column: 2, scope: !16029, inlinedAt: !16786)
!16796 = !DILocation(line: 271, column: 9, scope: !16754)
!16797 = !DILocation(line: 272, column: 25, scope: !16754)
!16798 = !DILocation(line: 272, column: 22, scope: !16754)
!16799 = distinct !{!16799, !16744, !16800}
!16800 = !DILocation(line: 273, column: 2, scope: !16721)
!16801 = !DILocation(line: 275, column: 6, scope: !16802)
!16802 = distinct !DILexicalBlock(scope: !16721, file: !3266, line: 275, column: 6)
!16803 = !DILocation(line: 275, column: 14, scope: !16802)
!16804 = !DILocation(line: 275, column: 6, scope: !16721)
!16805 = !DILocation(line: 276, column: 22, scope: !16806)
!16806 = distinct !DILexicalBlock(scope: !16802, file: !3266, line: 275, column: 23)
!16807 = !DILocation(line: 276, column: 3, scope: !16806)
!16808 = !DILocation(line: 276, column: 12, scope: !16806)
!16809 = !DILocation(line: 276, column: 19, scope: !16806)
!16810 = !DILocation(line: 277, column: 2, scope: !16806)
!16811 = !DILocation(line: 279, column: 15, scope: !16721)
!16812 = !DILocation(line: 279, column: 12, scope: !16721)
!16813 = !DILocation(line: 280, column: 21, scope: !16721)
!16814 = !DILocation(line: 282, column: 24, scope: !16721)
!16815 = !DILocation(line: 282, column: 2, scope: !16721)
!16816 = !DILocation(line: 284, column: 2, scope: !16721)
!16817 = !DILocation(line: 189, column: 60, scope: !16149, inlinedAt: !16818)
!16818 = distinct !DILocation(line: 284, column: 2, scope: !16721)
!16819 = !DILocation(line: 190, column: 23, scope: !16149, inlinedAt: !16818)
!16820 = !DILocation(line: 192, column: 2, scope: !16149, inlinedAt: !16818)
!16821 = !DILocation(line: 215, column: 22, scope: !16149, inlinedAt: !16818)
!16822 = !DILocation(line: 84, column: 56, scope: !16159, inlinedAt: !16823)
!16823 = distinct !DILocation(line: 215, column: 2, scope: !16149, inlinedAt: !16818)
!16824 = !DILocation(line: 87, column: 6, scope: !16163, inlinedAt: !16823)
!16825 = !DILocation(line: 87, column: 10, scope: !16163, inlinedAt: !16823)
!16826 = !DILocation(line: 87, column: 6, scope: !16159, inlinedAt: !16823)
!16827 = !DILocation(line: 88, column: 3, scope: !16167, inlinedAt: !16823)
!16828 = !DILocation(line: 90, column: 2, scope: !16159, inlinedAt: !16823)
!16829 = !DILocation(line: 110, column: 1, scope: !16159, inlinedAt: !16823)
!16830 = !DILocation(line: 285, column: 1, scope: !16721)
!16831 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !3266, file: !3266, line: 287, type: !16832, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16832 = !DISubroutineType(types: !16833)
!16833 = !{!186}
!16834 = !DILocalVariable(name: "t", scope: !16831, file: !3266, line: 289, type: !1938)
!16835 = !DILocation(line: 289, column: 11, scope: !16831)
!16836 = !DILocalVariable(name: "__i", scope: !16837, file: !3266, line: 291, type: !16022)
!16837 = distinct !DILexicalBlock(scope: !16831, file: !3266, line: 291, column: 2)
!16838 = !DILocation(line: 291, column: 2, scope: !16837)
!16839 = !DILocalVariable(name: "__key", scope: !16837, file: !3266, line: 291, type: !16022)
!16840 = !DILocation(line: 136, column: 70, scope: !16029, inlinedAt: !16841)
!16841 = distinct !DILocation(line: 291, column: 2, scope: !16837)
!16842 = !DILocation(line: 138, column: 2, scope: !16029, inlinedAt: !16841)
!16843 = !DILocation(line: 139, column: 19, scope: !16029, inlinedAt: !16841)
!16844 = !DILocation(line: 44, column: 15, scope: !16039, inlinedAt: !16845)
!16845 = distinct !DILocation(line: 145, column: 10, scope: !16029, inlinedAt: !16841)
!16846 = !DILocation(line: 47, column: 2, scope: !16039, inlinedAt: !16845)
!16847 = !DILocation(line: 76, column: 9, scope: !16039, inlinedAt: !16845)
!16848 = !DILocation(line: 145, column: 4, scope: !16029, inlinedAt: !16841)
!16849 = !DILocation(line: 145, column: 8, scope: !16029, inlinedAt: !16841)
!16850 = !DILocation(line: 165, column: 2, scope: !16029, inlinedAt: !16841)
!16851 = !DILocation(line: 291, column: 2, scope: !16852)
!16852 = distinct !DILexicalBlock(scope: !16837, file: !3266, line: 291, column: 2)
!16853 = !DILocation(line: 292, column: 7, scope: !16854)
!16854 = distinct !DILexicalBlock(scope: !16852, file: !3266, line: 291, column: 24)
!16855 = !DILocation(line: 292, column: 19, scope: !16854)
!16856 = !DILocation(line: 292, column: 17, scope: !16854)
!16857 = !DILocation(line: 292, column: 5, scope: !16854)
!16858 = !DILocation(line: 293, column: 2, scope: !16854)
!16859 = !DILocation(line: 189, column: 60, scope: !16149, inlinedAt: !16860)
!16860 = distinct !DILocation(line: 291, column: 2, scope: !16852)
!16861 = !DILocation(line: 190, column: 23, scope: !16149, inlinedAt: !16860)
!16862 = !DILocation(line: 192, column: 2, scope: !16149, inlinedAt: !16860)
!16863 = !DILocation(line: 215, column: 22, scope: !16149, inlinedAt: !16860)
!16864 = !DILocation(line: 84, column: 56, scope: !16159, inlinedAt: !16865)
!16865 = distinct !DILocation(line: 215, column: 2, scope: !16149, inlinedAt: !16860)
!16866 = !DILocation(line: 87, column: 6, scope: !16163, inlinedAt: !16865)
!16867 = !DILocation(line: 87, column: 10, scope: !16163, inlinedAt: !16865)
!16868 = !DILocation(line: 87, column: 6, scope: !16159, inlinedAt: !16865)
!16869 = !DILocation(line: 88, column: 3, scope: !16167, inlinedAt: !16865)
!16870 = !DILocation(line: 90, column: 2, scope: !16159, inlinedAt: !16865)
!16871 = !DILocation(line: 110, column: 1, scope: !16159, inlinedAt: !16865)
!16872 = distinct !{!16872, !16838, !16873}
!16873 = !DILocation(line: 293, column: 2, scope: !16837)
!16874 = !DILocation(line: 294, column: 9, scope: !16831)
!16875 = !DILocation(line: 294, column: 2, scope: !16831)
!16876 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !3266, file: !3266, line: 297, type: !7427, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16877 = !DILocation(line: 300, column: 19, scope: !16876)
!16878 = !DILocation(line: 300, column: 9, scope: !16876)
!16879 = !DILocation(line: 300, column: 2, scope: !16876)
!16880 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !3266, file: !3266, line: 306, type: !16832, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16881 = !DILocation(line: 308, column: 9, scope: !16880)
!16882 = !DILocation(line: 308, column: 2, scope: !16880)
!16883 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !3266, file: !3266, line: 319, type: !11088, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16884 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16883, file: !3266, line: 319, type: !173)
!16885 = !DILocation(line: 319, column: 34, scope: !16883)
!16886 = !DILocation(line: 321, column: 2, scope: !16883)
!16887 = !DILocation(line: 321, column: 2, scope: !16888)
!16888 = distinct !DILexicalBlock(scope: !16883, file: !3266, line: 321, column: 2)
!16889 = !DILocation(line: 322, column: 6, scope: !16890)
!16890 = distinct !DILexicalBlock(scope: !16883, file: !3266, line: 322, column: 6)
!16891 = !DILocation(line: 322, column: 19, scope: !16890)
!16892 = !DILocation(line: 322, column: 6, scope: !16883)
!16893 = !DILocation(line: 323, column: 3, scope: !16894)
!16894 = distinct !DILexicalBlock(scope: !16890, file: !3266, line: 322, column: 26)
!16895 = !DILocation(line: 323, column: 3, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16894, file: !3266, line: 323, column: 3)
!16897 = !DILocation(line: 324, column: 3, scope: !16894)
!16898 = !DILocalVariable(name: "start_cycles", scope: !16883, file: !3266, line: 328, type: !173)
!16899 = !DILocation(line: 328, column: 11, scope: !16883)
!16900 = !DILocation(line: 328, column: 26, scope: !16883)
!16901 = !DILocalVariable(name: "cycles_to_wait", scope: !16883, file: !3266, line: 331, type: !173)
!16902 = !DILocation(line: 331, column: 11, scope: !16883)
!16903 = !DILocation(line: 332, column: 13, scope: !16883)
!16904 = !DILocation(line: 332, column: 3, scope: !16883)
!16905 = !DILocation(line: 333, column: 13, scope: !16883)
!16906 = !DILocation(line: 333, column: 3, scope: !16883)
!16907 = !DILocation(line: 332, column: 26, scope: !16883)
!16908 = !DILocation(line: 333, column: 43, scope: !16883)
!16909 = !DILocation(line: 331, column: 28, scope: !16883)
!16910 = !DILocation(line: 337, column: 2, scope: !16883)
!16911 = !DILocalVariable(name: "current_cycles", scope: !16912, file: !3266, line: 338, type: !173)
!16912 = distinct !DILexicalBlock(scope: !16913, file: !3266, line: 337, column: 11)
!16913 = distinct !DILexicalBlock(scope: !16914, file: !3266, line: 337, column: 2)
!16914 = distinct !DILexicalBlock(scope: !16883, file: !3266, line: 337, column: 2)
!16915 = !DILocation(line: 338, column: 12, scope: !16912)
!16916 = !DILocation(line: 338, column: 29, scope: !16912)
!16917 = !DILocation(line: 341, column: 8, scope: !16918)
!16918 = distinct !DILexicalBlock(scope: !16912, file: !3266, line: 341, column: 7)
!16919 = !DILocation(line: 341, column: 25, scope: !16918)
!16920 = !DILocation(line: 341, column: 23, scope: !16918)
!16921 = !DILocation(line: 341, column: 42, scope: !16918)
!16922 = !DILocation(line: 341, column: 39, scope: !16918)
!16923 = !DILocation(line: 341, column: 7, scope: !16912)
!16924 = !DILocation(line: 342, column: 4, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16918, file: !3266, line: 341, column: 58)
!16926 = !DILocation(line: 337, column: 2, scope: !16913)
!16927 = distinct !{!16927, !16928, !16929}
!16928 = !DILocation(line: 337, column: 2, scope: !16914)
!16929 = !DILocation(line: 344, column: 2, scope: !16914)
!16930 = !DILocation(line: 348, column: 2, scope: !16883)
!16931 = !DILocation(line: 348, column: 2, scope: !16932)
!16932 = distinct !DILexicalBlock(scope: !16883, file: !3266, line: 348, column: 2)
!16933 = !DILocation(line: 349, column: 1, scope: !16883)
!16934 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !109, file: !109, line: 1675, type: !7427, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16935 = !DILocation(line: 1677, column: 9, scope: !16934)
!16936 = !DILocation(line: 1677, column: 2, scope: !16934)
!16937 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !9855, file: !9855, line: 59, type: !3704, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16938 = !DILocation(line: 64, column: 2, scope: !16937)
!16939 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16940, file: !16940, line: 24, type: !7427, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16940 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16941 = !DILocation(line: 26, column: 9, scope: !16939)
!16942 = !DILocation(line: 26, column: 2, scope: !16939)
!16943 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !3266, file: !3266, line: 364, type: !16944, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3236, retainedNodes: !223)
!16944 = !DISubroutineType(types: !16945)
!16945 = !{!1938, !16001}
!16946 = !DILocalVariable(name: "timeout", arg: 1, scope: !16943, file: !3266, line: 364, type: !16001)
!16947 = !DILocation(line: 364, column: 49, scope: !16943)
!16948 = !DILocalVariable(name: "dt", scope: !16943, file: !3266, line: 366, type: !2526)
!16949 = !DILocation(line: 366, column: 12, scope: !16943)
!16950 = !DILocation(line: 368, column: 6, scope: !16951)
!16951 = distinct !DILexicalBlock(scope: !16943, file: !3266, line: 368, column: 6)
!16952 = !DILocation(line: 368, column: 6, scope: !16943)
!16953 = !DILocation(line: 369, column: 3, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16951, file: !3266, line: 368, column: 40)
!16955 = !DILocation(line: 370, column: 13, scope: !16956)
!16956 = distinct !DILexicalBlock(scope: !16951, file: !3266, line: 370, column: 13)
!16957 = !DILocation(line: 370, column: 13, scope: !16951)
!16958 = !DILocation(line: 371, column: 10, scope: !16959)
!16959 = distinct !DILexicalBlock(scope: !16956, file: !3266, line: 370, column: 47)
!16960 = !DILocation(line: 371, column: 3, scope: !16959)
!16961 = !DILocation(line: 374, column: 16, scope: !16962)
!16962 = distinct !DILexicalBlock(scope: !16956, file: !3266, line: 372, column: 9)
!16963 = !DILocation(line: 374, column: 6, scope: !16962)
!16964 = !DILocation(line: 376, column: 43, scope: !16965)
!16965 = distinct !DILexicalBlock(scope: !16962, file: !3266, line: 376, column: 7)
!16966 = !DILocation(line: 376, column: 58, scope: !16965)
!16967 = !DILocation(line: 376, column: 7, scope: !16962)
!16968 = !DILocation(line: 377, column: 11, scope: !16969)
!16969 = distinct !DILexicalBlock(scope: !16965, file: !3266, line: 376, column: 64)
!16970 = !DILocation(line: 377, column: 4, scope: !16969)
!16971 = !DILocation(line: 379, column: 10, scope: !16962)
!16972 = !DILocation(line: 379, column: 33, scope: !16962)
!16973 = !DILocation(line: 379, column: 31, scope: !16962)
!16974 = !DILocation(line: 379, column: 3, scope: !16962)
!16975 = !DILocation(line: 381, column: 1, scope: !16943)
!16976 = distinct !DISubprogram(name: "boot_banner", scope: !16977, file: !16977, line: 26, type: !253, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3573, retainedNodes: !223)
!16977 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16978 = !DILocation(line: 34, column: 2, scope: !16976)
!16979 = !DILocation(line: 36, column: 1, scope: !16976)
