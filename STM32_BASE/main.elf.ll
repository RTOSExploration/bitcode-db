; ModuleID = './main.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, [25 x i8], i32, %struct.__locale_t*, i32, void (%struct._reent*)*, %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint**, i32, i8*, %union.anon.0, %struct._atexit*, %struct._atexit, void (i32)**, %struct._glue, [3 x %struct.__sFILE] }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct._reent*, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__locale_t = type opaque
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%union.anon.0 = type { %struct.anon, [32 x i8] }
%struct.anon = type { i32, i8*, [26 x i8], %struct.__tm, i32, i64, %struct._rand48, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], [24 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, i32 }
%struct.__tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._rand48 = type { [3 x i16], [3 x i16], i16 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.GPIO_InitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.tskTaskControlBlock = type { i32*, %struct.xLIST_ITEM, %struct.xLIST_ITEM, i32, i32*, [10 x i8], i32, i32, i32, i32, i32, i8 }
%struct.xLIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM*, i8*, %struct.xLIST* }
%struct.xLIST = type { i32, %struct.xLIST_ITEM*, %struct.xMINI_LIST_ITEM }
%struct.xMINI_LIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM* }
%struct.QueueDefinition = type { i8*, i8*, %union.anon.9, %struct.xLIST, %struct.xLIST, i32, i32, i32, i8, i8, i32, i8 }
%union.anon.9 = type { %struct.QueuePointers }
%struct.QueuePointers = type { i8*, i8* }
%struct.A_BLOCK_LINK = type { %struct.A_BLOCK_LINK*, i32 }
%struct.QUEUE_REGISTRY_ITEM = type { i8*, %struct.QueueDefinition* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.xMEMORY_REGION = type { i8*, i32, i32 }
%struct.xTASK_STATUS = type { %struct.tskTaskControlBlock*, i8*, i32, i32, i32, i32, i32, i32*, i16 }
%struct.xTIME_OUT = type { i32, i32 }
%struct.tmrTimerQueueMessage = type { i32, %union.anon.5 }
%union.anon.5 = type { %struct.tmrTimerParameters }
%struct.tmrTimerParameters = type { i32, %struct.tmrTimerControl* }
%struct.tmrTimerControl = type { i8*, %struct.xLIST_ITEM, i32, i8*, void (%struct.tmrTimerControl*)*, i32, i8 }
%struct.xHeapStats = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.MPU_Region_InitTypeDef = type { i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8 }

@_impure_ptr = external dso_local local_unnamed_addr global %struct._reent*, align 4
@.str = private unnamed_addr constant [26 x i8] c"[INFO] Main program start\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@GPIO_InitStruct = internal global %struct.GPIO_InitTypeDef zeroinitializer, align 4, !dbg !0
@.str.2 = private unnamed_addr constant [10 x i8] c"LedBlinky\00", align 1
@pxCurrentTCB = dso_local global %struct.tskTaskControlBlock* null, align 4, !dbg !99
@pxReadyTasksLists = internal global [5 x %struct.xLIST] zeroinitializer, align 4, !dbg !188
@uxTopReadyPriority = internal global i32 0, align 4, !dbg !208
@uxTaskNumber = internal unnamed_addr global i32 0, align 4, !dbg !210
@xTasksWaitingTermination = internal global %struct.xLIST zeroinitializer, align 4, !dbg !200
@uxDeletedTasksWaitingCleanUp = internal global i32 0, align 4, !dbg !212
@uxCurrentNumberOfTasks = internal global i32 0, align 4, !dbg !214
@xSchedulerRunning = internal global i32 0, align 4, !dbg !216
@uxSchedulerSuspended = internal global i32 0, align 4, !dbg !219
@xTickCount = internal global i32 0, align 4, !dbg !221
@pxDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !193
@pxOverflowDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !196
@xSuspendedTaskList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !202
@xPendingReadyList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !198
@.str.7 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@xIdleTaskHandle = internal global %struct.tskTaskControlBlock* null, align 4, !dbg !224
@xNextTaskUnblockTime = internal global i32 0, align 4, !dbg !226
@xYieldPending = internal global i32 0, align 4, !dbg !228
@xPendedTicks = internal global i32 0, align 4, !dbg !230
@xNumOfOverflows = internal global i32 0, align 4, !dbg !232
@xDelayedTaskList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !204
@xDelayedTaskList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !206
@xTimerQueue = internal unnamed_addr global %struct.QueueDefinition* null, align 4, !dbg !235
@.str.10 = private unnamed_addr constant [8 x i8] c"Tmr Svc\00", align 1
@xTimerTaskHandle = internal global %struct.tskTaskControlBlock* null, align 4, !dbg !283
@pxCurrentTimerList = internal unnamed_addr global %struct.xLIST* null, align 4, !dbg !288
@pxOverflowTimerList = internal unnamed_addr global %struct.xLIST* null, align 4, !dbg !302
@prvSampleTimeNow.xLastTime = internal unnamed_addr global i32 0, align 4, !dbg !292
@xActiveTimerList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !304
@xActiveTimerList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !306
@.str.1.11 = private unnamed_addr constant [5 x i8] c"TmrQ\00", align 1
@ucMaxSysCallPriority = internal unnamed_addr global i8 0, align 1, !dbg !312
@ulMaxPRIGROUPValue = internal unnamed_addr global i32 0, align 4, !dbg !325
@uxCriticalNesting = internal unnamed_addr global i32 -1431655766, align 4, !dbg !327
@pxEnd = internal unnamed_addr global %struct.A_BLOCK_LINK* null, align 4, !dbg !329
@xBlockAllocatedBit = internal unnamed_addr global i1 false, align 4, !dbg !363
@xFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !350
@xStart = internal global %struct.A_BLOCK_LINK zeroinitializer, align 4, !dbg !346
@xMinimumEverFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !352
@xNumberOfSuccessfulAllocations = internal unnamed_addr global i32 0, align 4, !dbg !354
@xNumberOfSuccessfulFrees = internal unnamed_addr global i32 0, align 4, !dbg !356
@ucHeap = internal global [76800 x i8] zeroinitializer, align 1, !dbg !358
@xQueueRegistry = dso_local local_unnamed_addr global [8 x %struct.QUEUE_REGISTRY_ITEM] zeroinitializer, align 4, !dbg !364
@uwTickFreq = dso_local local_unnamed_addr global i32 1, align 4, !dbg !441
@uwTick = dso_local global i32 0, align 4, !dbg !629
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !632
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !708
@uwTickPrio = dso_local local_unnamed_addr global i32 16, align 4, !dbg !626
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !711

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @LedBlinky_Task(i8* nocapture readnone %0) #0 !dbg !994 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !998, metadata !DIExpression()), !dbg !999
  br label %2, !dbg !1000

2:                                                ; preds = %1, %2
  tail call void @HAL_GPIO_TogglePin(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073879040 to %struct.GPIO_TypeDef*), i16 noundef zeroext 8192) #19, !dbg !1001
  tail call void @vTaskDelay(i32 noundef 1000) #19, !dbg !1003
  br label %2, !dbg !1000, !llvm.loop !1004
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #0 !dbg !1006 {
  %1 = alloca i32, align 4
  tail call void @initialise_monitor_handles() #19, !dbg !1012
  %2 = load %struct._reent*, %struct._reent** @_impure_ptr, align 4, !dbg !1013, !tbaa !1014
  %3 = getelementptr inbounds %struct._reent, %struct._reent* %2, i32 0, i32 2, !dbg !1013
  %4 = load %struct.__sFILE*, %struct.__sFILE** %3, align 8, !dbg !1013, !tbaa !1018
  tail call void @setbuf(%struct.__sFILE* noundef %4, i8* noundef null) #19, !dbg !1025
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0)) #19, !dbg !1026
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !1026
  %7 = tail call i32 @HAL_Init() #19, !dbg !1029
  tail call void @SystemClock_Config() #20, !dbg !1030
  %8 = bitcast i32* %1 to i8*, !dbg !1031
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8), !dbg !1031
  call void @llvm.dbg.declare(metadata i32* %1, metadata !1010, metadata !DIExpression()), !dbg !1031
  store volatile i32 0, i32* %1, align 4, !dbg !1031, !tbaa !1032
  %9 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !1031, !tbaa !1033
  %10 = or i32 %9, 64, !dbg !1031
  store volatile i32 %10, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !1031, !tbaa !1033
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !1031, !tbaa !1033
  %12 = and i32 %11, 64, !dbg !1031
  store volatile i32 %12, i32* %1, align 4, !dbg !1031, !tbaa !1032
  %13 = load volatile i32, i32* %1, align 4, !dbg !1031, !tbaa !1032
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8), !dbg !1035
  store i32 8192, i32* getelementptr inbounds (%struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* @GPIO_InitStruct, i32 0, i32 0), align 4, !dbg !1036, !tbaa !1037
  store i32 1, i32* getelementptr inbounds (%struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* @GPIO_InitStruct, i32 0, i32 1), align 4, !dbg !1039, !tbaa !1040
  store i32 1, i32* getelementptr inbounds (%struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* @GPIO_InitStruct, i32 0, i32 2), align 4, !dbg !1041, !tbaa !1042
  store i32 3, i32* getelementptr inbounds (%struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* @GPIO_InitStruct, i32 0, i32 3), align 4, !dbg !1043, !tbaa !1044
  tail call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073879040 to %struct.GPIO_TypeDef*), %struct.GPIO_InitTypeDef* noundef nonnull @GPIO_InitStruct) #19, !dbg !1045
  %14 = tail call zeroext i8 @SomethingSimple(i8 noundef zeroext 2, i8 noundef zeroext 7) #19, !dbg !1046
  %15 = tail call i32 @xTaskCreate(void (i8*)* noundef nonnull @LedBlinky_Task, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i16 noundef zeroext 130, i8* noundef null, i32 noundef 3, %struct.tskTaskControlBlock** noundef null) #19, !dbg !1047
  tail call void @vTaskStartScheduler() #19, !dbg !1048
  br label %16, !dbg !1049

16:                                               ; preds = %0, %16
  br label %16, !dbg !1049, !llvm.loop !1050
}

; Function Attrs: optsize
declare !dbg !1052 dso_local void @initialise_monitor_handles() local_unnamed_addr #2

; Function Attrs: optsize
declare !dbg !1057 dso_local void @setbuf(%struct.__sFILE* noundef, i8* noundef) local_unnamed_addr #2

; Function Attrs: optsize
declare !dbg !1267 dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local void @SystemClock_Config() local_unnamed_addr #3 !dbg !1271 {
  %1 = alloca %struct.RCC_OscInitTypeDef, align 4
  %2 = alloca %struct.GPIO_InitTypeDef, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast %struct.RCC_OscInitTypeDef* %1 to i8*, !dbg !1308
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #21, !dbg !1308
  call void @llvm.dbg.declare(metadata %struct.RCC_OscInitTypeDef* %1, metadata !1273, metadata !DIExpression()), !dbg !1309
  %6 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 2, !dbg !1309
  %7 = bitcast i32* %6 to i8*, !dbg !1309
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(48) %7, i8 0, i32 16, i1 false), !dbg !1309
  %8 = bitcast %struct.GPIO_InitTypeDef* %2 to i8*, !dbg !1310
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %8) #21, !dbg !1310
  call void @llvm.dbg.declare(metadata %struct.GPIO_InitTypeDef* %2, metadata !1295, metadata !DIExpression()), !dbg !1311
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(20) %8, i8 0, i32 20, i1 false), !dbg !1311
  %9 = bitcast i32* %3 to i8*, !dbg !1312
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !1312
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1304, metadata !DIExpression()), !dbg !1312
  store volatile i32 0, i32* %3, align 4, !dbg !1312, !tbaa !1032
  %10 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !1312, !tbaa !1313
  %11 = or i32 %10, 268435456, !dbg !1312
  store volatile i32 %11, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !1312, !tbaa !1313
  %12 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !1312, !tbaa !1313
  %13 = and i32 %12, 268435456, !dbg !1312
  store volatile i32 %13, i32* %3, align 4, !dbg !1312, !tbaa !1032
  %14 = load volatile i32, i32* %3, align 4, !dbg !1312, !tbaa !1032
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !1314
  %15 = bitcast i32* %4 to i8*, !dbg !1315
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15), !dbg !1315
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1306, metadata !DIExpression()), !dbg !1315
  store volatile i32 0, i32* %4, align 4, !dbg !1315, !tbaa !1032
  %16 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !1315, !tbaa !1316
  %17 = and i32 %16, -49153, !dbg !1315
  %18 = or i32 %17, 16384, !dbg !1315
  store volatile i32 %18, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !1315, !tbaa !1316
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !1315, !tbaa !1316
  %20 = and i32 %19, 49152, !dbg !1315
  store volatile i32 %20, i32* %4, align 4, !dbg !1315, !tbaa !1032
  %21 = load volatile i32, i32* %4, align 4, !dbg !1315, !tbaa !1032
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15), !dbg !1318
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 0, !dbg !1319
  store i32 1, i32* %22, align 4, !dbg !1320, !tbaa !1321
  %23 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 1, !dbg !1324
  store i32 65536, i32* %23, align 4, !dbg !1325, !tbaa !1326
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 6, i32 0, !dbg !1327
  store i32 2, i32* %24, align 4, !dbg !1328, !tbaa !1329
  %25 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 6, i32 1, !dbg !1330
  store i32 4194304, i32* %25, align 4, !dbg !1331, !tbaa !1332
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 6, i32 2, !dbg !1333
  store i32 8, i32* %26, align 4, !dbg !1334, !tbaa !1335
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 6, i32 3, !dbg !1336
  store i32 128, i32* %27, align 4, !dbg !1337, !tbaa !1338
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 6, i32 4, !dbg !1339
  store i32 2, i32* %28, align 4, !dbg !1340, !tbaa !1341
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 6, i32 5, !dbg !1342
  store i32 4, i32* %29, align 4, !dbg !1343, !tbaa !1344
  %30 = call i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef nonnull %1) #19, !dbg !1345
  %31 = icmp eq i32 %30, 0, !dbg !1347
  br i1 %31, label %33, label %32, !dbg !1348

32:                                               ; preds = %0
  call void @Default_Handler() #19, !dbg !1349
  br label %33, !dbg !1351

33:                                               ; preds = %32, %0
  %34 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %2, i32 0, i32 0, !dbg !1352
  store i32 15, i32* %34, align 4, !dbg !1353, !tbaa !1037
  %35 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %2, i32 0, i32 1, !dbg !1354
  store i32 2, i32* %35, align 4, !dbg !1355, !tbaa !1040
  %36 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %2, i32 0, i32 2, !dbg !1356
  store i32 144, i32* %36, align 4, !dbg !1357, !tbaa !1042
  %37 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %2, i32 0, i32 3, !dbg !1358
  store i32 4096, i32* %37, align 4, !dbg !1359, !tbaa !1044
  %38 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %2, i32 0, i32 4, !dbg !1360
  store i32 0, i32* %38, align 4, !dbg !1361, !tbaa !1362
  %39 = call i32 @HAL_RCC_ClockConfig(%struct.GPIO_InitTypeDef* noundef nonnull %2, i32 noundef 0) #19, !dbg !1363
  %40 = icmp eq i32 %39, 0, !dbg !1365
  br i1 %40, label %42, label %41, !dbg !1366

41:                                               ; preds = %33
  call void @Default_Handler() #19, !dbg !1367
  br label %42, !dbg !1369

42:                                               ; preds = %41, %33
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %8) #21, !dbg !1370
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #21, !dbg !1370
  ret void, !dbg !1370
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #5

; Function Attrs: optsize
declare !dbg !1371 dso_local void @Default_Handler() local_unnamed_addr #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @add(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #6 !dbg !1372 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1377, metadata !DIExpression()), !dbg !1379
  call void @llvm.dbg.value(metadata i8 %1, metadata !1378, metadata !DIExpression()), !dbg !1379
  %3 = add i8 %1, %0, !dbg !1380
  ret i8 %3, !dbg !1381
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #7 !dbg !1382 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !1383, !tbaa !1384
  %2 = or i32 %1, 15728640, !dbg !1383
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !1383, !tbaa !1384
  store volatile i32 134217728, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !1386, !tbaa !1387
  ret void, !dbg !1388
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #8 !dbg !1389 {
  call void @llvm.dbg.value(metadata i32 0, metadata !1391, metadata !DIExpression()), !dbg !1396
  call void @llvm.dbg.value(metadata i32 0, metadata !1392, metadata !DIExpression()), !dbg !1396
  call void @llvm.dbg.value(metadata i32 2, metadata !1393, metadata !DIExpression()), !dbg !1396
  call void @llvm.dbg.value(metadata i32 0, metadata !1394, metadata !DIExpression()), !dbg !1396
  call void @llvm.dbg.value(metadata i32 2, metadata !1395, metadata !DIExpression()), !dbg !1396
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1397, !tbaa !1398
  %2 = and i32 %1, 12, !dbg !1399
  call void @llvm.dbg.value(metadata i32 %2, metadata !1391, metadata !DIExpression()), !dbg !1396
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !1400

3:                                                ; preds = %0
  br label %21, !dbg !1401

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !1403, !tbaa !1404
  call void @llvm.dbg.value(metadata i32 %5, metadata !1394, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !1396
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !1405, !tbaa !1404
  %7 = and i32 %6, 63, !dbg !1406
  call void @llvm.dbg.value(metadata i32 %7, metadata !1395, metadata !DIExpression()), !dbg !1396
  %8 = and i32 %5, 4194304, !dbg !1407
  %9 = icmp eq i32 %8, 0, !dbg !1407
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !1409
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !1409, !tbaa !1404
  %13 = lshr i32 %12, 6, !dbg !1409
  %14 = and i32 %13, 511, !dbg !1409
  %15 = mul i32 %14, %11, !dbg !1409
  call void @llvm.dbg.value(metadata i32 %15, metadata !1392, metadata !DIExpression()), !dbg !1396
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !1410, !tbaa !1404
  %17 = lshr i32 %16, 15, !dbg !1411
  %18 = and i32 %17, 6, !dbg !1411
  %19 = add nuw nsw i32 %18, 2, !dbg !1411
  call void @llvm.dbg.value(metadata i32 %19, metadata !1393, metadata !DIExpression()), !dbg !1396
  %20 = udiv i32 %15, %19, !dbg !1412
  br label %21, !dbg !1413

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !1414, !tbaa !1032
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !1415, !tbaa !1398
  %24 = lshr i32 %23, 4, !dbg !1416
  %25 = and i32 %24, 15, !dbg !1416
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !1417
  %27 = load i8, i8* %26, align 1, !dbg !1417, !tbaa !1418
  %28 = zext i8 %27 to i32, !dbg !1417
  call void @llvm.dbg.value(metadata i32 %28, metadata !1391, metadata !DIExpression()), !dbg !1396
  %29 = lshr i32 %22, %28, !dbg !1419
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !1419, !tbaa !1032
  ret void, !dbg !1420
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskCreate(void (i8*)* noundef %0, i8* noundef %1, i16 noundef zeroext %2, i8* noundef %3, i32 noundef %4, %struct.tskTaskControlBlock** noundef %5) local_unnamed_addr #3 !dbg !1421 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !1433, metadata !DIExpression()), !dbg !1443
  call void @llvm.dbg.value(metadata i8* %1, metadata !1434, metadata !DIExpression()), !dbg !1443
  call void @llvm.dbg.value(metadata i16 %2, metadata !1435, metadata !DIExpression()), !dbg !1443
  call void @llvm.dbg.value(metadata i8* %3, metadata !1436, metadata !DIExpression()), !dbg !1443
  call void @llvm.dbg.value(metadata i32 %4, metadata !1437, metadata !DIExpression()), !dbg !1443
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock** %5, metadata !1438, metadata !DIExpression()), !dbg !1443
  %7 = zext i16 %2 to i32, !dbg !1444
  %8 = shl nuw nsw i32 %7, 2, !dbg !1445
  %9 = tail call i8* @pvPortMalloc(i32 noundef %8) #19, !dbg !1446
  call void @llvm.dbg.value(metadata i8* %9, metadata !1441, metadata !DIExpression()), !dbg !1447
  %10 = icmp eq i8* %9, null, !dbg !1448
  br i1 %10, label %19, label %11, !dbg !1450

11:                                               ; preds = %6
  %12 = tail call i8* @pvPortMalloc(i32 noundef 88) #19, !dbg !1451
  call void @llvm.dbg.value(metadata i8* %12, metadata !1439, metadata !DIExpression()), !dbg !1443
  %13 = icmp eq i8* %12, null, !dbg !1453
  br i1 %13, label %14, label %15, !dbg !1455

14:                                               ; preds = %11
  tail call void @vPortFree(i8* noundef nonnull %9) #19, !dbg !1456
  br label %19

15:                                               ; preds = %11
  %16 = bitcast i8* %12 to %struct.tskTaskControlBlock*, !dbg !1458
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %16, metadata !1439, metadata !DIExpression()), !dbg !1443
  %17 = getelementptr inbounds i8, i8* %12, i32 48, !dbg !1459
  %18 = bitcast i8* %17 to i8**, !dbg !1461
  store i8* %9, i8** %18, align 4, !dbg !1461, !tbaa !1462
  tail call fastcc void @prvInitialiseNewTask(void (i8*)* noundef %0, i8* noundef %1, i32 noundef %7, i8* noundef %3, i32 noundef %4, %struct.tskTaskControlBlock** noundef %5, %struct.tskTaskControlBlock* noundef nonnull %16) #20, !dbg !1465
  tail call fastcc void @prvAddNewTaskToReadyList(%struct.tskTaskControlBlock* noundef nonnull %16) #20, !dbg !1468
  call void @llvm.dbg.value(metadata i32 1, metadata !1440, metadata !DIExpression()), !dbg !1443
  br label %19, !dbg !1469

19:                                               ; preds = %6, %14, %15
  %20 = phi i32 [ 1, %15 ], [ -1, %14 ], [ -1, %6 ], !dbg !1470
  call void @llvm.dbg.value(metadata i32 %20, metadata !1440, metadata !DIExpression()), !dbg !1443
  ret i32 %20, !dbg !1471
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseNewTask(void (i8*)* noundef %0, i8* noundef readonly %1, i32 noundef %2, i8* noundef %3, i32 noundef %4, %struct.tskTaskControlBlock** noundef writeonly %5, %struct.tskTaskControlBlock* noundef %6) unnamed_addr #3 !dbg !1472 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !1486, metadata !DIExpression()), !dbg !1496
  call void @llvm.dbg.value(metadata i8* %1, metadata !1487, metadata !DIExpression()), !dbg !1496
  call void @llvm.dbg.value(metadata i32 %2, metadata !1488, metadata !DIExpression()), !dbg !1496
  call void @llvm.dbg.value(metadata i8* %3, metadata !1489, metadata !DIExpression()), !dbg !1496
  call void @llvm.dbg.value(metadata i32 %4, metadata !1490, metadata !DIExpression()), !dbg !1496
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock** %5, metadata !1491, metadata !DIExpression()), !dbg !1496
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !1492, metadata !DIExpression()), !dbg !1496
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !1493, metadata !DIExpression()), !dbg !1496
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 4, !dbg !1497
  %9 = bitcast i32** %8 to i8**, !dbg !1497
  %10 = load i8*, i8** %9, align 4, !dbg !1497, !tbaa !1462
  %11 = shl i32 %2, 2, !dbg !1499
  %12 = tail call i8* @memset(i8* noundef %10, i32 noundef 165, i32 noundef %11) #19, !dbg !1500
  %13 = load i32*, i32** %8, align 4, !dbg !1501, !tbaa !1462
  %14 = add i32 %2, -1, !dbg !1503
  %15 = getelementptr inbounds i32, i32* %13, i32 %14, !dbg !1504
  call void @llvm.dbg.value(metadata i32* %15, metadata !1494, metadata !DIExpression()), !dbg !1496
  %16 = ptrtoint i32* %15 to i32, !dbg !1505
  %17 = and i32 %16, -8, !dbg !1506
  %18 = inttoptr i32 %17 to i32*, !dbg !1507
  call void @llvm.dbg.value(metadata i32* %18, metadata !1494, metadata !DIExpression()), !dbg !1496
  %19 = icmp eq i8* %1, null, !dbg !1508
  br i1 %19, label %32, label %20, !dbg !1510

20:                                               ; preds = %7, %20
  %21 = phi i32 [ %27, %20 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !1495, metadata !DIExpression()), !dbg !1496
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !1511
  %23 = load i8, i8* %22, align 1, !dbg !1511, !tbaa !1418
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 5, i32 %21, !dbg !1516
  store i8 %23, i8* %24, align 1, !dbg !1517, !tbaa !1418
  %25 = load i8, i8* %22, align 1, !dbg !1518, !tbaa !1418
  %26 = icmp eq i8 %25, 0, !dbg !1520
  call void @llvm.dbg.value(metadata i32 %21, metadata !1495, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1496
  %27 = add nuw nsw i32 %21, 1
  %28 = icmp eq i32 %27, 10
  %29 = select i1 %26, i1 true, i1 %28, !dbg !1521
  call void @llvm.dbg.value(metadata i32 %27, metadata !1495, metadata !DIExpression()), !dbg !1496
  call void @llvm.dbg.value(metadata i32 %21, metadata !1495, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1496
  br i1 %29, label %30, label %20, !dbg !1521, !llvm.loop !1522

30:                                               ; preds = %20
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 5, i32 9, !dbg !1526
  store i8 0, i8* %31, align 1, !dbg !1527, !tbaa !1418
  br label %34, !dbg !1528

32:                                               ; preds = %7
  %33 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 5, i32 0, !dbg !1529
  store i8 0, i8* %33, align 4, !dbg !1531, !tbaa !1418
  br label %34

34:                                               ; preds = %32, %30
  %35 = icmp ult i32 %4, 4, !dbg !1532
  %36 = select i1 %35, i32 %4, i32 4, !dbg !1532
  call void @llvm.dbg.value(metadata i32 %36, metadata !1490, metadata !DIExpression()), !dbg !1496
  %37 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !1533
  store i32 %36, i32* %37, align 4, !dbg !1534, !tbaa !1535
  %38 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 8, !dbg !1536
  store i32 %36, i32* %38, align 4, !dbg !1538, !tbaa !1539
  %39 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 9, !dbg !1540
  store i32 0, i32* %39, align 4, !dbg !1541, !tbaa !1542
  %40 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !1543
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %40) #19, !dbg !1544
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !1545
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %41) #19, !dbg !1546
  %42 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, i32 3, !dbg !1547
  %43 = bitcast i8** %42 to %struct.tskTaskControlBlock**, !dbg !1547
  store %struct.tskTaskControlBlock* %6, %struct.tskTaskControlBlock** %43, align 4, !dbg !1547, !tbaa !1548
  %44 = sub nuw nsw i32 5, %36, !dbg !1549
  %45 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %41, i32 0, i32 0, !dbg !1549
  store i32 %44, i32* %45, align 4, !dbg !1549, !tbaa !1550
  %46 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, i32 3, !dbg !1551
  %47 = bitcast i8** %46 to %struct.tskTaskControlBlock**, !dbg !1551
  store %struct.tskTaskControlBlock* %6, %struct.tskTaskControlBlock** %47, align 4, !dbg !1551, !tbaa !1552
  %48 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 10, !dbg !1553
  store volatile i32 0, i32* %48, align 4, !dbg !1555, !tbaa !1556
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 11, !dbg !1557
  store volatile i8 0, i8* %49, align 4, !dbg !1558, !tbaa !1559
  %50 = tail call i32* @pxPortInitialiseStack(i32* noundef %18, void (i8*)* noundef %0, i8* noundef %3) #19, !dbg !1560
  %51 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 0, !dbg !1563
  store i32* %50, i32** %51, align 4, !dbg !1564, !tbaa !1565
  %52 = icmp eq %struct.tskTaskControlBlock** %5, null, !dbg !1566
  br i1 %52, label %54, label %53, !dbg !1568

53:                                               ; preds = %34
  store %struct.tskTaskControlBlock* %6, %struct.tskTaskControlBlock** %5, align 4, !dbg !1569, !tbaa !1014
  br label %54, !dbg !1571

54:                                               ; preds = %34, %53
  ret void, !dbg !1572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvAddNewTaskToReadyList(%struct.tskTaskControlBlock* noundef %0) unnamed_addr #3 !dbg !1573 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !1577, metadata !DIExpression()), !dbg !1578
  tail call void @vPortEnterCritical() #19, !dbg !1579
  %2 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !1580, !tbaa !1582
  %3 = add i32 %2, 1, !dbg !1580
  store volatile i32 %3, i32* @uxCurrentNumberOfTasks, align 4, !dbg !1580, !tbaa !1582
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1583, !tbaa !1014
  %5 = icmp eq %struct.tskTaskControlBlock* %4, null, !dbg !1585
  br i1 %5, label %6, label %10, !dbg !1586

6:                                                ; preds = %1
  store volatile %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1587, !tbaa !1014
  %7 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !1589, !tbaa !1582
  %8 = icmp eq i32 %7, 1, !dbg !1591
  br i1 %8, label %9, label %21, !dbg !1592

9:                                                ; preds = %6
  tail call fastcc void @prvInitialiseTaskLists() #20, !dbg !1593
  br label %21, !dbg !1595

10:                                               ; preds = %1
  %11 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !1596, !tbaa !1582
  %12 = icmp eq i32 %11, 0, !dbg !1599
  br i1 %12, label %13, label %21, !dbg !1600

13:                                               ; preds = %10
  %14 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1601, !tbaa !1014
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 3, !dbg !1604
  %16 = load i32, i32* %15, align 4, !dbg !1604, !tbaa !1535
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !1605
  %18 = load i32, i32* %17, align 4, !dbg !1605, !tbaa !1535
  %19 = icmp ugt i32 %16, %18, !dbg !1606
  br i1 %19, label %21, label %20, !dbg !1607

20:                                               ; preds = %13
  store volatile %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1608, !tbaa !1014
  br label %21, !dbg !1610

21:                                               ; preds = %13, %20, %10, %9, %6
  %22 = load i32, i32* @uxTaskNumber, align 4, !dbg !1611, !tbaa !1582
  %23 = add i32 %22, 1, !dbg !1611
  store i32 %23, i32* @uxTaskNumber, align 4, !dbg !1611, !tbaa !1582
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 6, !dbg !1612
  store i32 %23, i32* %24, align 4, !dbg !1614, !tbaa !1615
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !1616
  %26 = load i32, i32* %25, align 4, !dbg !1616, !tbaa !1535
  %27 = shl nuw i32 1, %26, !dbg !1616
  %28 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !1616, !tbaa !1582
  %29 = or i32 %28, %27, !dbg !1616
  store volatile i32 %29, i32* @uxTopReadyPriority, align 4, !dbg !1616, !tbaa !1582
  %30 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %26, !dbg !1616
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !1616
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %30, %struct.xLIST_ITEM* noundef nonnull %31) #19, !dbg !1616
  tail call void @vPortExitCritical() #19, !dbg !1617
  %32 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !1618, !tbaa !1582
  %33 = icmp eq i32 %32, 0, !dbg !1620
  br i1 %33, label %41, label %34, !dbg !1621

34:                                               ; preds = %21
  %35 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1622, !tbaa !1014
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 3, !dbg !1625
  %37 = load i32, i32* %36, align 4, !dbg !1625, !tbaa !1535
  %38 = load i32, i32* %25, align 4, !dbg !1626, !tbaa !1535
  %39 = icmp ult i32 %37, %38, !dbg !1627
  br i1 %39, label %40, label %41, !dbg !1628

40:                                               ; preds = %34
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !1629, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !1629, !srcloc !1632
  tail call void asm sideeffect "isb", ""() #21, !dbg !1629, !srcloc !1633
  br label %41, !dbg !1634

41:                                               ; preds = %21, %40, %34
  ret void, !dbg !1635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseTaskLists() unnamed_addr #3 !dbg !1636 {
  call void @llvm.dbg.value(metadata i32 0, metadata !1638, metadata !DIExpression()), !dbg !1639
  br label %1, !dbg !1640

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !1638, metadata !DIExpression()), !dbg !1639
  %3 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %2, !dbg !1642
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %3) #19, !dbg !1645
  %4 = add nuw nsw i32 %2, 1, !dbg !1646
  call void @llvm.dbg.value(metadata i32 %4, metadata !1638, metadata !DIExpression()), !dbg !1639
  %5 = icmp eq i32 %4, 5, !dbg !1647
  br i1 %5, label %6, label %1, !dbg !1640, !llvm.loop !1648

6:                                                ; preds = %1
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList1) #19, !dbg !1650
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList2) #19, !dbg !1651
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xPendingReadyList) #19, !dbg !1652
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xTasksWaitingTermination) #19, !dbg !1653
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xSuspendedTaskList) #19, !dbg !1655
  store volatile %struct.xLIST* @xDelayedTaskList1, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1657, !tbaa !1014
  store volatile %struct.xLIST* @xDelayedTaskList2, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !1658, !tbaa !1014
  ret void, !dbg !1659
}

; Function Attrs: optsize
declare !dbg !1660 dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelete(%struct.tskTaskControlBlock* noundef %0) local_unnamed_addr #3 !dbg !1664 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !1668, metadata !DIExpression()), !dbg !1670
  tail call void @vPortEnterCritical() #19, !dbg !1671
  %2 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !1672
  br i1 %2, label %3, label %5, !dbg !1672

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1672, !tbaa !1014
  br label %5, !dbg !1672

5:                                                ; preds = %1, %3
  %6 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %0, %1 ], !dbg !1672
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !1669, metadata !DIExpression()), !dbg !1670
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !1674
  %8 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %7) #19, !dbg !1676
  %9 = icmp eq i32 %8, 0, !dbg !1677
  br i1 %9, label %10, label %21, !dbg !1678

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !1679
  %12 = load i32, i32* %11, align 4, !dbg !1679, !tbaa !1535
  %13 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %12, i32 0, !dbg !1679
  %14 = load volatile i32, i32* %13, align 4, !dbg !1679, !tbaa !1683
  %15 = icmp eq i32 %14, 0, !dbg !1679
  br i1 %15, label %16, label %21, !dbg !1686

16:                                               ; preds = %10
  %17 = shl nuw i32 1, %12, !dbg !1687
  %18 = xor i32 %17, -1, !dbg !1687
  %19 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !1687, !tbaa !1582
  %20 = and i32 %19, %18, !dbg !1687
  store volatile i32 %20, i32* @uxTopReadyPriority, align 4, !dbg !1687, !tbaa !1582
  br label %21, !dbg !1687

21:                                               ; preds = %5, %10, %16
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, i32 4, !dbg !1689
  %23 = load %struct.xLIST*, %struct.xLIST** %22, align 4, !dbg !1689, !tbaa !1691
  %24 = icmp eq %struct.xLIST* %23, null, !dbg !1692
  br i1 %24, label %28, label %25, !dbg !1693

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !1689
  %27 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %26) #19, !dbg !1694
  br label %28, !dbg !1696

28:                                               ; preds = %21, %25
  %29 = load i32, i32* @uxTaskNumber, align 4, !dbg !1697, !tbaa !1582
  %30 = add i32 %29, 1, !dbg !1697
  store i32 %30, i32* @uxTaskNumber, align 4, !dbg !1697, !tbaa !1582
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1698, !tbaa !1014
  %32 = icmp eq %struct.tskTaskControlBlock* %6, %31, !dbg !1700
  br i1 %32, label %33, label %36, !dbg !1701

33:                                               ; preds = %28
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xTasksWaitingTermination, %struct.xLIST_ITEM* noundef nonnull %7) #19, !dbg !1702
  %34 = load volatile i32, i32* @uxDeletedTasksWaitingCleanUp, align 4, !dbg !1704, !tbaa !1582
  %35 = add i32 %34, 1, !dbg !1704
  store volatile i32 %35, i32* @uxDeletedTasksWaitingCleanUp, align 4, !dbg !1704, !tbaa !1582
  br label %39, !dbg !1705

36:                                               ; preds = %28
  %37 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !1706, !tbaa !1582
  %38 = add i32 %37, -1, !dbg !1706
  store volatile i32 %38, i32* @uxCurrentNumberOfTasks, align 4, !dbg !1706, !tbaa !1582
  tail call fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef nonnull %6) #20, !dbg !1708
  tail call fastcc void @prvResetNextTaskUnblockTime() #20, !dbg !1709
  br label %39

39:                                               ; preds = %36, %33
  tail call void @vPortExitCritical() #19, !dbg !1710
  %40 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !1711, !tbaa !1582
  %41 = icmp eq i32 %40, 0, !dbg !1713
  br i1 %41, label %52, label %42, !dbg !1714

42:                                               ; preds = %39
  %43 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1715, !tbaa !1014
  %44 = icmp eq %struct.tskTaskControlBlock* %6, %43, !dbg !1718
  br i1 %44, label %45, label %52, !dbg !1719

45:                                               ; preds = %42
  %46 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1720, !tbaa !1582
  %47 = icmp eq i32 %46, 0, !dbg !1720
  br i1 %47, label %51, label %48, !dbg !1723

48:                                               ; preds = %45
  %49 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !1724, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %49, metadata !1727, metadata !DIExpression()) #21, !dbg !1731
  br label %50, !dbg !1732

50:                                               ; preds = %50, %48
  br label %50, !dbg !1733, !llvm.loop !1736

51:                                               ; preds = %45
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !1738, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !1738, !srcloc !1740
  tail call void asm sideeffect "isb", ""() #21, !dbg !1738, !srcloc !1741
  br label %52, !dbg !1742

52:                                               ; preds = %51, %42, %39
  ret void, !dbg !1743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %0) unnamed_addr #3 !dbg !1744 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !1746, metadata !DIExpression()), !dbg !1747
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 4, !dbg !1748
  %3 = bitcast i32** %2 to i8**, !dbg !1748
  %4 = load i8*, i8** %3, align 4, !dbg !1748, !tbaa !1462
  tail call void @vPortFree(i8* noundef %4) #19, !dbg !1750
  %5 = bitcast %struct.tskTaskControlBlock* %0 to i8*, !dbg !1751
  tail call void @vPortFree(i8* noundef %5) #19, !dbg !1752
  ret void, !dbg !1753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @prvResetNextTaskUnblockTime() unnamed_addr #7 !dbg !1754 {
  %1 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1757, !tbaa !1014
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !1757
  %3 = load volatile i32, i32* %2, align 4, !dbg !1757, !tbaa !1683
  %4 = icmp eq i32 %3, 0, !dbg !1757
  br i1 %4, label %14, label %5, !dbg !1759

5:                                                ; preds = %0
  %6 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1760, !tbaa !1014
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !1760
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !1760, !tbaa !1762
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !1760
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !1760
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !1760, !tbaa !1763
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !1756, metadata !DIExpression()), !dbg !1764
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, i32 0, !dbg !1765
  %13 = load i32, i32* %12, align 4, !dbg !1765, !tbaa !1766
  br label %14

14:                                               ; preds = %0, %5
  %15 = phi i32 [ %13, %5 ], [ -1, %0 ]
  store volatile i32 %15, i32* @xNextTaskUnblockTime, align 4, !dbg !1767, !tbaa !1032
  ret void, !dbg !1768
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelayUntil(i32* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !1769 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !1776, metadata !DIExpression()), !dbg !1783
  call void @llvm.dbg.value(metadata i32 %1, metadata !1777, metadata !DIExpression()), !dbg !1783
  call void @llvm.dbg.value(metadata i32 0, metadata !1780, metadata !DIExpression()), !dbg !1783
  %3 = icmp eq i32* %0, null, !dbg !1784
  br i1 %3, label %4, label %7, !dbg !1786

4:                                                ; preds = %2
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !1787, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %5, metadata !1727, metadata !DIExpression()) #21, !dbg !1790
  br label %6, !dbg !1791

6:                                                ; preds = %6, %4
  br label %6, !dbg !1792, !llvm.loop !1795

7:                                                ; preds = %2
  %8 = icmp eq i32 %1, 0, !dbg !1797
  br i1 %8, label %9, label %12, !dbg !1799

9:                                                ; preds = %7
  %10 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !1800, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %10, metadata !1727, metadata !DIExpression()) #21, !dbg !1803
  br label %11, !dbg !1804

11:                                               ; preds = %11, %9
  br label %11, !dbg !1805, !llvm.loop !1808

12:                                               ; preds = %7
  %13 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1810, !tbaa !1582
  %14 = icmp eq i32 %13, 0, !dbg !1810
  br i1 %14, label %18, label %15, !dbg !1812

15:                                               ; preds = %12
  %16 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !1813, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %16, metadata !1727, metadata !DIExpression()) #21, !dbg !1816
  br label %17, !dbg !1817

17:                                               ; preds = %17, %15
  br label %17, !dbg !1818, !llvm.loop !1821

18:                                               ; preds = %12
  tail call void @vTaskSuspendAll() #20, !dbg !1823
  %19 = load volatile i32, i32* @xTickCount, align 4, !dbg !1824, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %19, metadata !1781, metadata !DIExpression()), !dbg !1825
  %20 = load i32, i32* %0, align 4, !dbg !1826, !tbaa !1032
  %21 = add i32 %20, %1, !dbg !1827
  call void @llvm.dbg.value(metadata i32 %21, metadata !1778, metadata !DIExpression()), !dbg !1783
  %22 = icmp ult i32 %19, %20, !dbg !1828
  %23 = icmp ult i32 %21, %20, !dbg !1830
  %24 = icmp ugt i32 %21, %19
  br i1 %22, label %25, label %27, !dbg !1831

25:                                               ; preds = %18
  %26 = select i1 %23, i1 %24, i1 false, !dbg !1832
  br i1 %26, label %30, label %29, !dbg !1832

27:                                               ; preds = %18
  %28 = select i1 %23, i1 true, i1 %24, !dbg !1835
  br i1 %28, label %30, label %29, !dbg !1835

29:                                               ; preds = %27, %25
  call void @llvm.dbg.value(metadata i32 undef, metadata !1780, metadata !DIExpression()), !dbg !1783
  store i32 %21, i32* %0, align 4, !dbg !1838, !tbaa !1032
  br label %32, !dbg !1839

30:                                               ; preds = %25, %27
  store i32 %21, i32* %0, align 4, !dbg !1838, !tbaa !1032
  %31 = sub i32 %21, %19, !dbg !1840
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %31, i32 noundef 0) #20, !dbg !1843
  br label %32, !dbg !1844

32:                                               ; preds = %29, %30
  %33 = tail call i32 @xTaskResumeAll() #20, !dbg !1845
  call void @llvm.dbg.value(metadata i32 %33, metadata !1779, metadata !DIExpression()), !dbg !1783
  %34 = icmp eq i32 %33, 0, !dbg !1846
  br i1 %34, label %35, label %36, !dbg !1848

35:                                               ; preds = %32
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !1849, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !1849, !srcloc !1852
  tail call void asm sideeffect "isb", ""() #21, !dbg !1849, !srcloc !1853
  br label %36, !dbg !1854

36:                                               ; preds = %32, %35
  ret void, !dbg !1855
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSuspendAll() local_unnamed_addr #3 !dbg !1856 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1857, !tbaa !1582
  %2 = add i32 %1, 1, !dbg !1857
  store volatile i32 %2, i32* @uxSchedulerSuspended, align 4, !dbg !1857, !tbaa !1582
  tail call void asm sideeffect "", "~{memory}"() #21, !dbg !1858, !srcloc !1859
  ret void, !dbg !1860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !1861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1866, metadata !DIExpression()), !dbg !1870
  call void @llvm.dbg.value(metadata i32 %1, metadata !1867, metadata !DIExpression()), !dbg !1870
  %3 = load volatile i32, i32* @xTickCount, align 4, !dbg !1871, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %3, metadata !1869, metadata !DIExpression()), !dbg !1870
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1872, !tbaa !1014
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 1, !dbg !1874
  %6 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %5) #19, !dbg !1875
  %7 = icmp eq i32 %6, 0, !dbg !1876
  br i1 %7, label %8, label %16, !dbg !1877

8:                                                ; preds = %2
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1878, !tbaa !1014
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 3, !dbg !1878
  %11 = load i32, i32* %10, align 4, !dbg !1878, !tbaa !1535
  %12 = shl nuw i32 1, %11, !dbg !1878
  %13 = xor i32 %12, -1, !dbg !1878
  %14 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !1878, !tbaa !1582
  %15 = and i32 %14, %13, !dbg !1878
  store volatile i32 %15, i32* @uxTopReadyPriority, align 4, !dbg !1878, !tbaa !1582
  br label %16, !dbg !1880

16:                                               ; preds = %2, %8
  %17 = icmp eq i32 %0, -1, !dbg !1881
  %18 = icmp ne i32 %1, 0
  %19 = and i1 %17, %18, !dbg !1884
  br i1 %19, label %20, label %23, !dbg !1884

20:                                               ; preds = %16
  %21 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1885, !tbaa !1014
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 1, !dbg !1887
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %22) #19, !dbg !1888
  br label %39, !dbg !1889

23:                                               ; preds = %16
  %24 = add i32 %3, %0, !dbg !1890
  call void @llvm.dbg.value(metadata i32 %24, metadata !1868, metadata !DIExpression()), !dbg !1870
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1892, !tbaa !1014
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 1, i32 0, !dbg !1892
  store i32 %24, i32* %26, align 4, !dbg !1892, !tbaa !1766
  %27 = icmp ult i32 %24, %3, !dbg !1893
  br i1 %27, label %28, label %32, !dbg !1895

28:                                               ; preds = %23
  %29 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !1896, !tbaa !1014
  %30 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1898, !tbaa !1014
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %30, i32 0, i32 1, !dbg !1899
  tail call void @vListInsert(%struct.xLIST* noundef %29, %struct.xLIST_ITEM* noundef nonnull %31) #19, !dbg !1900
  br label %39, !dbg !1901

32:                                               ; preds = %23
  %33 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !1902, !tbaa !1014
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1904, !tbaa !1014
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 1, !dbg !1905
  tail call void @vListInsert(%struct.xLIST* noundef %33, %struct.xLIST_ITEM* noundef nonnull %35) #19, !dbg !1906
  %36 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !1907, !tbaa !1032
  %37 = icmp ult i32 %24, %36, !dbg !1909
  br i1 %37, label %38, label %39, !dbg !1910

38:                                               ; preds = %32
  store volatile i32 %24, i32* @xNextTaskUnblockTime, align 4, !dbg !1911, !tbaa !1032
  br label %39, !dbg !1913

39:                                               ; preds = %28, %32, %38, %20
  ret void, !dbg !1914
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeAll() local_unnamed_addr #3 !dbg !1915 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* null, metadata !1919, metadata !DIExpression()), !dbg !1928
  call void @llvm.dbg.value(metadata i32 0, metadata !1920, metadata !DIExpression()), !dbg !1928
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1929, !tbaa !1582
  %2 = icmp eq i32 %1, 0, !dbg !1929
  br i1 %2, label %3, label %6, !dbg !1931

3:                                                ; preds = %0
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !1932, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %4, metadata !1727, metadata !DIExpression()) #21, !dbg !1935
  br label %5, !dbg !1936

5:                                                ; preds = %5, %3
  br label %5, !dbg !1937, !llvm.loop !1940

6:                                                ; preds = %0
  tail call void @vPortEnterCritical() #19, !dbg !1942
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1943, !tbaa !1582
  %8 = add i32 %7, -1, !dbg !1943
  store volatile i32 %8, i32* @uxSchedulerSuspended, align 4, !dbg !1943, !tbaa !1582
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !1944, !tbaa !1582
  %10 = icmp eq i32 %9, 0, !dbg !1945
  br i1 %10, label %11, label %58, !dbg !1946

11:                                               ; preds = %6
  %12 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !1947, !tbaa !1582
  %13 = icmp eq i32 %12, 0, !dbg !1948
  br i1 %13, label %58, label %14, !dbg !1949

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* null, metadata !1919, metadata !DIExpression()), !dbg !1928
  %15 = load volatile i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !1950, !tbaa !1683
  %16 = icmp eq i32 %15, 0, !dbg !1950
  br i1 %16, label %42, label %17, !dbg !1951

17:                                               ; preds = %14, %38
  %18 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 2, i32 1), align 4, !dbg !1952, !tbaa !1762
  %19 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %18, i32 0, i32 3, !dbg !1952
  %20 = bitcast i8** %19 to %struct.tskTaskControlBlock**, !dbg !1952
  %21 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %20, align 4, !dbg !1952, !tbaa !1763
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %21, metadata !1919, metadata !DIExpression()), !dbg !1928
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 2, !dbg !1954
  %23 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %22) #19, !dbg !1955
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 1, !dbg !1956
  %25 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %24) #19, !dbg !1957
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 3, !dbg !1958
  %27 = load i32, i32* %26, align 4, !dbg !1958, !tbaa !1535
  %28 = shl nuw i32 1, %27, !dbg !1958
  %29 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !1958, !tbaa !1582
  %30 = or i32 %29, %28, !dbg !1958
  store volatile i32 %30, i32* @uxTopReadyPriority, align 4, !dbg !1958, !tbaa !1582
  %31 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %27, !dbg !1958
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %31, %struct.xLIST_ITEM* noundef nonnull %24) #19, !dbg !1958
  %32 = load i32, i32* %26, align 4, !dbg !1959, !tbaa !1535
  %33 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !1961, !tbaa !1014
  %34 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %33, i32 0, i32 3, !dbg !1962
  %35 = load i32, i32* %34, align 4, !dbg !1962, !tbaa !1535
  %36 = icmp ult i32 %32, %35, !dbg !1963
  br i1 %36, label %38, label %37, !dbg !1964

37:                                               ; preds = %17
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !1965, !tbaa !1582
  br label %38, !dbg !1967

38:                                               ; preds = %17, %37
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %21, metadata !1919, metadata !DIExpression()), !dbg !1928
  %39 = load volatile i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !1950, !tbaa !1683
  %40 = icmp eq i32 %39, 0, !dbg !1950
  br i1 %40, label %41, label %17, !dbg !1951, !llvm.loop !1968

41:                                               ; preds = %38
  tail call fastcc void @prvResetNextTaskUnblockTime() #20, !dbg !1970
  br label %42, !dbg !1973

42:                                               ; preds = %14, %41
  %43 = load volatile i32, i32* @xPendedTicks, align 4, !dbg !1974, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %43, metadata !1921, metadata !DIExpression()), !dbg !1975
  %44 = icmp eq i32 %43, 0, !dbg !1976
  br i1 %44, label %54, label %45, !dbg !1978

45:                                               ; preds = %42, %50
  %46 = phi i32 [ %51, %50 ], [ %43, %42 ], !dbg !1975
  call void @llvm.dbg.value(metadata i32 %46, metadata !1921, metadata !DIExpression()), !dbg !1975
  %47 = tail call i32 @xTaskIncrementTick() #20, !dbg !1979
  %48 = icmp eq i32 %47, 0, !dbg !1983
  br i1 %48, label %50, label %49, !dbg !1984

49:                                               ; preds = %45
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !1985, !tbaa !1582
  br label %50, !dbg !1987

50:                                               ; preds = %45, %49
  %51 = add i32 %46, -1, !dbg !1988
  call void @llvm.dbg.value(metadata i32 %51, metadata !1921, metadata !DIExpression()), !dbg !1975
  %52 = icmp eq i32 %51, 0, !dbg !1989
  br i1 %52, label %53, label %45, !dbg !1990, !llvm.loop !1991

53:                                               ; preds = %50
  store volatile i32 0, i32* @xPendedTicks, align 4, !dbg !1994, !tbaa !1032
  br label %54, !dbg !1995

54:                                               ; preds = %42, %53
  %55 = load volatile i32, i32* @xYieldPending, align 4, !dbg !1996, !tbaa !1582
  %56 = icmp eq i32 %55, 0, !dbg !1998
  br i1 %56, label %58, label %57, !dbg !1999

57:                                               ; preds = %54
  call void @llvm.dbg.value(metadata i32 1, metadata !1920, metadata !DIExpression()), !dbg !1928
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2000, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !2000, !srcloc !2003
  tail call void asm sideeffect "isb", ""() #21, !dbg !2000, !srcloc !2004
  br label %58, !dbg !2005

58:                                               ; preds = %6, %11, %54, %57
  %59 = phi i32 [ 1, %57 ], [ 0, %54 ], [ 0, %11 ], [ 0, %6 ], !dbg !1928
  call void @llvm.dbg.value(metadata i32 %59, metadata !1920, metadata !DIExpression()), !dbg !1928
  tail call void @vPortExitCritical() #19, !dbg !2006
  ret i32 %59, !dbg !2007
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskIncrementTick() local_unnamed_addr #3 !dbg !2008 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2012, metadata !DIExpression()), !dbg !2020
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2021, !tbaa !1582
  %2 = icmp eq i32 %1, 0, !dbg !2022
  br i1 %2, label %3, label %80, !dbg !2023

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !2024, !tbaa !1032
  %5 = add i32 %4, 1, !dbg !2025
  call void @llvm.dbg.value(metadata i32 %5, metadata !2013, metadata !DIExpression()), !dbg !2026
  store volatile i32 %5, i32* @xTickCount, align 4, !dbg !2027, !tbaa !1032
  %6 = icmp eq i32 %5, 0, !dbg !2028
  br i1 %6, label %7, label %20, !dbg !2029

7:                                                ; preds = %3
  %8 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2030, !tbaa !1014
  %9 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %8, i32 0, i32 0, !dbg !2030
  %10 = load volatile i32, i32* %9, align 4, !dbg !2030, !tbaa !1683
  %11 = icmp eq i32 %10, 0, !dbg !2030
  br i1 %11, label %15, label %12, !dbg !2032

12:                                               ; preds = %7
  %13 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2033, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %13, metadata !1727, metadata !DIExpression()) #21, !dbg !2036
  br label %14, !dbg !2037

14:                                               ; preds = %14, %12
  br label %14, !dbg !2038, !llvm.loop !2041

15:                                               ; preds = %7
  %16 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2032, !tbaa !1014
  call void @llvm.dbg.value(metadata %struct.xLIST* %16, metadata !2016, metadata !DIExpression()), !dbg !2043
  %17 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !2032, !tbaa !1014
  store volatile %struct.xLIST* %17, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2032, !tbaa !1014
  store volatile %struct.xLIST* %16, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !2032, !tbaa !1014
  %18 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !2032, !tbaa !1582
  %19 = add nsw i32 %18, 1, !dbg !2032
  store volatile i32 %19, i32* @xNumOfOverflows, align 4, !dbg !2032, !tbaa !1582
  tail call fastcc void @prvResetNextTaskUnblockTime() #20, !dbg !2032
  br label %20, !dbg !2044

20:                                               ; preds = %3, %15
  %21 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !2045, !tbaa !1032
  %22 = icmp ult i32 %5, %21, !dbg !2047
  br i1 %22, label %68, label %23, !dbg !2048

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 0, metadata !2012, metadata !DIExpression()), !dbg !2020
  %24 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2049, !tbaa !1014
  %25 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %24, i32 0, i32 0, !dbg !2049
  %26 = load volatile i32, i32* %25, align 4, !dbg !2049, !tbaa !1683
  %27 = icmp eq i32 %26, 0, !dbg !2049
  br i1 %27, label %65, label %28, !dbg !2055

28:                                               ; preds = %23, %48
  %29 = phi i32 [ %60, %48 ], [ 0, %23 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !2012, metadata !DIExpression()), !dbg !2020
  %30 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2056, !tbaa !1014
  %31 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %30, i32 0, i32 2, i32 1, !dbg !2056
  %32 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %31, align 4, !dbg !2056, !tbaa !1762
  %33 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %32, i32 0, i32 3, !dbg !2056
  %34 = bitcast i8** %33 to %struct.tskTaskControlBlock**, !dbg !2056
  %35 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %34, align 4, !dbg !2056, !tbaa !1763
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %35, metadata !2010, metadata !DIExpression()), !dbg !2020
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 1, !dbg !2058
  %37 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %36, i32 0, i32 0, !dbg !2058
  %38 = load i32, i32* %37, align 4, !dbg !2058, !tbaa !1766
  call void @llvm.dbg.value(metadata i32 %38, metadata !2011, metadata !DIExpression()), !dbg !2020
  %39 = icmp ult i32 %5, %38, !dbg !2059
  br i1 %39, label %65, label %40, !dbg !2061

40:                                               ; preds = %28
  %41 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %36) #19, !dbg !2062
  %42 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 2, i32 4, !dbg !2063
  %43 = load %struct.xLIST*, %struct.xLIST** %42, align 4, !dbg !2063, !tbaa !1691
  %44 = icmp eq %struct.xLIST* %43, null, !dbg !2065
  br i1 %44, label %48, label %45, !dbg !2066

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 2, !dbg !2063
  %47 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %46) #19, !dbg !2067
  br label %48, !dbg !2069

48:                                               ; preds = %40, %45
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 3, !dbg !2070
  %50 = load i32, i32* %49, align 4, !dbg !2070, !tbaa !1535
  %51 = shl nuw i32 1, %50, !dbg !2070
  %52 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2070, !tbaa !1582
  %53 = or i32 %52, %51, !dbg !2070
  store volatile i32 %53, i32* @uxTopReadyPriority, align 4, !dbg !2070, !tbaa !1582
  %54 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %50, !dbg !2070
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %54, %struct.xLIST_ITEM* noundef nonnull %36) #19, !dbg !2070
  %55 = load i32, i32* %49, align 4, !dbg !2071, !tbaa !1535
  %56 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2074, !tbaa !1014
  %57 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %56, i32 0, i32 3, !dbg !2075
  %58 = load i32, i32* %57, align 4, !dbg !2075, !tbaa !1535
  %59 = icmp ult i32 %55, %58, !dbg !2076
  %60 = select i1 %59, i32 %29, i32 1, !dbg !2077
  call void @llvm.dbg.value(metadata i32 %60, metadata !2012, metadata !DIExpression()), !dbg !2020
  %61 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2049, !tbaa !1014
  %62 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %61, i32 0, i32 0, !dbg !2049
  %63 = load volatile i32, i32* %62, align 4, !dbg !2049, !tbaa !1683
  %64 = icmp eq i32 %63, 0, !dbg !2049
  br i1 %64, label %65, label %28, !dbg !2055, !llvm.loop !2078

65:                                               ; preds = %28, %48, %23
  %66 = phi i32 [ -1, %23 ], [ -1, %48 ], [ %38, %28 ]
  %67 = phi i32 [ 0, %23 ], [ %60, %48 ], [ %29, %28 ]
  store volatile i32 %66, i32* @xNextTaskUnblockTime, align 4, !dbg !2081, !tbaa !1032
  br label %68, !dbg !2082

68:                                               ; preds = %65, %20
  %69 = phi i32 [ 0, %20 ], [ %67, %65 ], !dbg !2085
  call void @llvm.dbg.value(metadata i32 %69, metadata !2012, metadata !DIExpression()), !dbg !2020
  %70 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2082, !tbaa !1014
  %71 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %70, i32 0, i32 3, !dbg !2082
  %72 = load i32, i32* %71, align 4, !dbg !2082, !tbaa !1535
  %73 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %72, i32 0, !dbg !2082
  %74 = load volatile i32, i32* %73, align 4, !dbg !2082, !tbaa !1683
  %75 = icmp ugt i32 %74, 1, !dbg !2086
  %76 = select i1 %75, i32 1, i32 %69, !dbg !2087
  call void @llvm.dbg.value(metadata i32 %76, metadata !2012, metadata !DIExpression()), !dbg !2020
  %77 = load volatile i32, i32* @xYieldPending, align 4, !dbg !2088, !tbaa !1582
  %78 = icmp eq i32 %77, 0, !dbg !2091
  %79 = select i1 %78, i32 %76, i32 1, !dbg !2092
  call void @llvm.dbg.value(metadata i32 %79, metadata !2012, metadata !DIExpression()), !dbg !2020
  br label %83, !dbg !2093

80:                                               ; preds = %0
  %81 = load volatile i32, i32* @xPendedTicks, align 4, !dbg !2094, !tbaa !1032
  %82 = add i32 %81, 1, !dbg !2094
  store volatile i32 %82, i32* @xPendedTicks, align 4, !dbg !2094, !tbaa !1032
  br label %83

83:                                               ; preds = %80, %68
  %84 = phi i32 [ %79, %68 ], [ 0, %80 ], !dbg !2020
  call void @llvm.dbg.value(metadata i32 %84, metadata !2012, metadata !DIExpression()), !dbg !2020
  ret i32 %84, !dbg !2096
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelay(i32 noundef %0) local_unnamed_addr #3 !dbg !2097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2101, metadata !DIExpression()), !dbg !2103
  call void @llvm.dbg.value(metadata i32 0, metadata !2102, metadata !DIExpression()), !dbg !2103
  %2 = icmp eq i32 %0, 0, !dbg !2104
  br i1 %2, label %12, label %3, !dbg !2106

3:                                                ; preds = %1
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2107, !tbaa !1582
  %5 = icmp eq i32 %4, 0, !dbg !2107
  br i1 %5, label %9, label %6, !dbg !2110

6:                                                ; preds = %3
  %7 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2111, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %7, metadata !1727, metadata !DIExpression()) #21, !dbg !2114
  br label %8, !dbg !2115

8:                                                ; preds = %8, %6
  br label %8, !dbg !2116, !llvm.loop !2119

9:                                                ; preds = %3
  tail call void @vTaskSuspendAll() #20, !dbg !2121
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %0, i32 noundef 0) #20, !dbg !2122
  %10 = tail call i32 @xTaskResumeAll() #20, !dbg !2124
  call void @llvm.dbg.value(metadata i32 %10, metadata !2102, metadata !DIExpression()), !dbg !2103
  %11 = icmp eq i32 %10, 0, !dbg !2125
  call void @llvm.dbg.value(metadata i32 undef, metadata !2102, metadata !DIExpression()), !dbg !2103
  br i1 %11, label %12, label %13, !dbg !2126

12:                                               ; preds = %1, %9
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2127, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !2127, !srcloc !2131
  tail call void asm sideeffect "isb", ""() #21, !dbg !2127, !srcloc !2132
  br label %13, !dbg !2133

13:                                               ; preds = %9, %12
  ret void, !dbg !2134
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eTaskGetState(%struct.tskTaskControlBlock* noundef %0) local_unnamed_addr #3 !dbg !2135 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2140, metadata !DIExpression()), !dbg !2151
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2147, metadata !DIExpression()), !dbg !2151
  %2 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !2152
  br i1 %2, label %3, label %6, !dbg !2154

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2155, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %4, metadata !1727, metadata !DIExpression()) #21, !dbg !2158
  br label %5, !dbg !2159

5:                                                ; preds = %5, %3
  br label %5, !dbg !2160, !llvm.loop !2163

6:                                                ; preds = %1
  %7 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2165, !tbaa !1014
  %8 = icmp eq %struct.tskTaskControlBlock* %7, %0, !dbg !2167
  br i1 %8, label %33, label %9, !dbg !2168

9:                                                ; preds = %6
  tail call void @vPortEnterCritical() #19, !dbg !2169
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, i32 4, !dbg !2171
  %11 = load %struct.xLIST*, %struct.xLIST** %10, align 4, !dbg !2171, !tbaa !2173
  call void @llvm.dbg.value(metadata %struct.xLIST* %11, metadata !2142, metadata !DIExpression()), !dbg !2151
  %12 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2174, !tbaa !1014
  call void @llvm.dbg.value(metadata %struct.xLIST* %12, metadata !2145, metadata !DIExpression()), !dbg !2151
  %13 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !2175, !tbaa !1014
  call void @llvm.dbg.value(metadata %struct.xLIST* %13, metadata !2146, metadata !DIExpression()), !dbg !2151
  tail call void @vPortExitCritical() #19, !dbg !2176
  %14 = icmp eq %struct.xLIST* %11, %12, !dbg !2177
  %15 = icmp eq %struct.xLIST* %11, %13
  %16 = select i1 %14, i1 true, i1 %15, !dbg !2179
  br i1 %16, label %33, label %17, !dbg !2179

17:                                               ; preds = %9
  %18 = icmp eq %struct.xLIST* %11, @xSuspendedTaskList, !dbg !2180
  br i1 %18, label %19, label %28, !dbg !2182

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 4, !dbg !2183
  %21 = load %struct.xLIST*, %struct.xLIST** %20, align 4, !dbg !2183, !tbaa !1691
  %22 = icmp eq %struct.xLIST* %21, null, !dbg !2186
  br i1 %22, label %23, label %33, !dbg !2187

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 11, !dbg !2188
  %25 = load volatile i8, i8* %24, align 4, !dbg !2188, !tbaa !1559
  %26 = icmp eq i8 %25, 1, !dbg !2192
  %27 = select i1 %26, i32 2, i32 3
  br label %33

28:                                               ; preds = %17
  %29 = icmp eq %struct.xLIST* %11, @xTasksWaitingTermination, !dbg !2193
  %30 = icmp eq %struct.xLIST* %11, null
  %31 = or i1 %29, %30, !dbg !2195
  %32 = select i1 %31, i32 4, i32 1
  br label %33

33:                                               ; preds = %28, %19, %23, %9, %6
  %34 = phi i32 [ 0, %6 ], [ 2, %9 ], [ %27, %23 ], [ 2, %19 ], [ %32, %28 ], !dbg !2196
  call void @llvm.dbg.value(metadata i32 %34, metadata !2141, metadata !DIExpression()), !dbg !2151
  ret i32 %34, !dbg !2197
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGet(%struct.tskTaskControlBlock* noundef readonly %0) local_unnamed_addr #3 !dbg !2198 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2203, metadata !DIExpression()), !dbg !2206
  tail call void @vPortEnterCritical() #19, !dbg !2207
  %2 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !2208
  br i1 %2, label %3, label %5, !dbg !2208

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2208, !tbaa !1014
  br label %5, !dbg !2208

5:                                                ; preds = %1, %3
  %6 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %0, %1 ], !dbg !2208
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !2204, metadata !DIExpression()), !dbg !2206
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !2210
  %8 = load i32, i32* %7, align 4, !dbg !2210, !tbaa !1535
  call void @llvm.dbg.value(metadata i32 %8, metadata !2205, metadata !DIExpression()), !dbg !2206
  tail call void @vPortExitCritical() #19, !dbg !2211
  ret i32 %8, !dbg !2212
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGetFromISR(%struct.tskTaskControlBlock* noundef readonly %0) local_unnamed_addr #3 !dbg !2213 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2215, metadata !DIExpression()), !dbg !2219
  tail call void @vPortValidateInterruptPriority() #19, !dbg !2220
  %2 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #21, !dbg !2221, !srcloc !2229
  call void @llvm.dbg.value(metadata i32 undef, metadata !2226, metadata !DIExpression()) #21, !dbg !2230
  call void @llvm.dbg.value(metadata i32 undef, metadata !2227, metadata !DIExpression()) #21, !dbg !2230
  call void @llvm.dbg.value(metadata i32 undef, metadata !2218, metadata !DIExpression()), !dbg !2219
  %3 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !2231
  br i1 %3, label %4, label %6, !dbg !2231

4:                                                ; preds = %1
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2231, !tbaa !1014
  br label %6, !dbg !2231

6:                                                ; preds = %1, %4
  %7 = phi %struct.tskTaskControlBlock* [ %5, %4 ], [ %0, %1 ], !dbg !2231
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !2221
  call void @llvm.dbg.value(metadata i32 %8, metadata !2226, metadata !DIExpression()) #21, !dbg !2230
  call void @llvm.dbg.value(metadata i32 %8, metadata !2218, metadata !DIExpression()), !dbg !2219
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %7, metadata !2216, metadata !DIExpression()), !dbg !2219
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %7, i32 0, i32 3, !dbg !2233
  %10 = load i32, i32* %9, align 4, !dbg !2233, !tbaa !1535
  call void @llvm.dbg.value(metadata i32 %10, metadata !2217, metadata !DIExpression()), !dbg !2219
  call void @llvm.dbg.value(metadata i32 undef, metadata !2234, metadata !DIExpression()) #21, !dbg !2239
  tail call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %8) #21, !dbg !2241, !srcloc !2242
  ret i32 %10, !dbg !2243
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPrioritySet(%struct.tskTaskControlBlock* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !2244 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2248, metadata !DIExpression()), !dbg !2254
  call void @llvm.dbg.value(metadata i32 %1, metadata !2249, metadata !DIExpression()), !dbg !2254
  call void @llvm.dbg.value(metadata i32 0, metadata !2253, metadata !DIExpression()), !dbg !2254
  %3 = icmp ugt i32 %1, 4, !dbg !2255
  br i1 %3, label %4, label %7, !dbg !2257

4:                                                ; preds = %2
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2258, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %5, metadata !1727, metadata !DIExpression()) #21, !dbg !2261
  br label %6, !dbg !2262

6:                                                ; preds = %6, %4
  br label %6, !dbg !2263, !llvm.loop !2266

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 %1, metadata !2249, metadata !DIExpression()), !dbg !2254
  tail call void @vPortEnterCritical() #19, !dbg !2268
  %8 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !2269
  br i1 %8, label %9, label %11, !dbg !2269

9:                                                ; preds = %7
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2269, !tbaa !1014
  br label %11, !dbg !2269

11:                                               ; preds = %7, %9
  %12 = phi %struct.tskTaskControlBlock* [ %10, %9 ], [ %0, %7 ], !dbg !2269
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %12, metadata !2250, metadata !DIExpression()), !dbg !2254
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 8, !dbg !2271
  %14 = load i32, i32* %13, align 4, !dbg !2271, !tbaa !1539
  call void @llvm.dbg.value(metadata i32 %14, metadata !2251, metadata !DIExpression()), !dbg !2254
  %15 = icmp eq i32 %14, %1, !dbg !2273
  br i1 %15, label %62, label %16, !dbg !2275

16:                                               ; preds = %11
  %17 = icmp ult i32 %14, %1, !dbg !2276
  %18 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2279, !tbaa !1014
  br i1 %17, label %19, label %26, !dbg !2280

19:                                               ; preds = %16
  %20 = icmp eq %struct.tskTaskControlBlock* %12, %18, !dbg !2281
  br i1 %20, label %28, label %21, !dbg !2284

21:                                               ; preds = %19
  %22 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2285, !tbaa !1014
  %23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %22, i32 0, i32 3, !dbg !2288
  %24 = load i32, i32* %23, align 4, !dbg !2288, !tbaa !1535
  %25 = icmp ugt i32 %24, %1, !dbg !2289
  br label %28, !dbg !2290

26:                                               ; preds = %16
  %27 = icmp ne %struct.tskTaskControlBlock* %12, %18, !dbg !2291
  br label %28, !dbg !2293

28:                                               ; preds = %26, %21, %19
  %29 = phi i1 [ true, %19 ], [ %25, %21 ], [ %27, %26 ], !dbg !2254
  call void @llvm.dbg.value(metadata i32 undef, metadata !2253, metadata !DIExpression()), !dbg !2254
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 3, !dbg !2294
  %31 = load i32, i32* %30, align 4, !dbg !2294, !tbaa !1535
  call void @llvm.dbg.value(metadata i32 %31, metadata !2252, metadata !DIExpression()), !dbg !2254
  %32 = icmp eq i32 %14, %31, !dbg !2295
  br i1 %32, label %33, label %34, !dbg !2298

33:                                               ; preds = %28
  store i32 %1, i32* %30, align 4, !dbg !2299, !tbaa !1535
  br label %34, !dbg !2301

34:                                               ; preds = %28, %33
  store i32 %1, i32* %13, align 4, !dbg !2302, !tbaa !1539
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 2, i32 0, !dbg !2303
  %36 = load i32, i32* %35, align 4, !dbg !2303, !tbaa !1550
  %37 = icmp sgt i32 %36, -1, !dbg !2305
  br i1 %37, label %38, label %40, !dbg !2306

38:                                               ; preds = %34
  %39 = sub nuw nsw i32 5, %1, !dbg !2307
  store i32 %39, i32* %35, align 4, !dbg !2307, !tbaa !1550
  br label %40, !dbg !2309

40:                                               ; preds = %34, %38
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, !dbg !2310
  %42 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, i32 4, !dbg !2310
  %43 = load %struct.xLIST*, %struct.xLIST** %42, align 4, !dbg !2310, !tbaa !2173
  %44 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %31, !dbg !2310
  %45 = icmp eq %struct.xLIST* %43, %44, !dbg !2310
  br i1 %45, label %46, label %60, !dbg !2312

46:                                               ; preds = %40
  %47 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %41) #19, !dbg !2313
  %48 = icmp eq i32 %47, 0, !dbg !2316
  br i1 %48, label %49, label %54, !dbg !2317

49:                                               ; preds = %46
  %50 = shl nuw i32 1, %31, !dbg !2318
  %51 = xor i32 %50, -1, !dbg !2318
  %52 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2318, !tbaa !1582
  %53 = and i32 %52, %51, !dbg !2318
  store volatile i32 %53, i32* @uxTopReadyPriority, align 4, !dbg !2318, !tbaa !1582
  br label %54, !dbg !2320

54:                                               ; preds = %46, %49
  %55 = load i32, i32* %30, align 4, !dbg !2321, !tbaa !1535
  %56 = shl nuw i32 1, %55, !dbg !2321
  %57 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2321, !tbaa !1582
  %58 = or i32 %57, %56, !dbg !2321
  store volatile i32 %58, i32* @uxTopReadyPriority, align 4, !dbg !2321, !tbaa !1582
  %59 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %55, !dbg !2321
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %59, %struct.xLIST_ITEM* noundef nonnull %41) #19, !dbg !2321
  br label %60, !dbg !2322

60:                                               ; preds = %40, %54
  br i1 %29, label %62, label %61, !dbg !2323

61:                                               ; preds = %60
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2324, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !2324, !srcloc !2328
  tail call void asm sideeffect "isb", ""() #21, !dbg !2324, !srcloc !2329
  br label %62, !dbg !2330

62:                                               ; preds = %61, %60, %11
  tail call void @vPortExitCritical() #19, !dbg !2331
  ret void, !dbg !2332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSuspend(%struct.tskTaskControlBlock* noundef %0) local_unnamed_addr #3 !dbg !2333 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2335, metadata !DIExpression()), !dbg !2337
  tail call void @vPortEnterCritical() #19, !dbg !2338
  %2 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !2339
  br i1 %2, label %3, label %5, !dbg !2339

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2339, !tbaa !1014
  br label %5, !dbg !2339

5:                                                ; preds = %1, %3
  %6 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %0, %1 ], !dbg !2339
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !2336, metadata !DIExpression()), !dbg !2337
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !2341
  %8 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %7) #19, !dbg !2343
  %9 = icmp eq i32 %8, 0, !dbg !2344
  br i1 %9, label %10, label %21, !dbg !2345

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !2346
  %12 = load i32, i32* %11, align 4, !dbg !2346, !tbaa !1535
  %13 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %12, i32 0, !dbg !2346
  %14 = load volatile i32, i32* %13, align 4, !dbg !2346, !tbaa !1683
  %15 = icmp eq i32 %14, 0, !dbg !2346
  br i1 %15, label %16, label %21, !dbg !2350

16:                                               ; preds = %10
  %17 = shl nuw i32 1, %12, !dbg !2351
  %18 = xor i32 %17, -1, !dbg !2351
  %19 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2351, !tbaa !1582
  %20 = and i32 %19, %18, !dbg !2351
  store volatile i32 %20, i32* @uxTopReadyPriority, align 4, !dbg !2351, !tbaa !1582
  br label %21, !dbg !2351

21:                                               ; preds = %5, %10, %16
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, i32 4, !dbg !2353
  %23 = load %struct.xLIST*, %struct.xLIST** %22, align 4, !dbg !2353, !tbaa !1691
  %24 = icmp eq %struct.xLIST* %23, null, !dbg !2355
  br i1 %24, label %28, label %25, !dbg !2356

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !2353
  %27 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %26) #19, !dbg !2357
  br label %28, !dbg !2359

28:                                               ; preds = %21, %25
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %7) #19, !dbg !2360
  %29 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 11, !dbg !2361
  %30 = load volatile i8, i8* %29, align 4, !dbg !2361, !tbaa !1559
  %31 = icmp eq i8 %30, 1, !dbg !2364
  br i1 %31, label %32, label %33, !dbg !2365

32:                                               ; preds = %28
  store volatile i8 0, i8* %29, align 4, !dbg !2366, !tbaa !1559
  br label %33, !dbg !2368

33:                                               ; preds = %32, %28
  tail call void @vPortExitCritical() #19, !dbg !2369
  %34 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !2370, !tbaa !1582
  %35 = icmp eq i32 %34, 0, !dbg !2372
  br i1 %35, label %37, label %36, !dbg !2373

36:                                               ; preds = %33
  tail call void @vPortEnterCritical() #19, !dbg !2374
  tail call fastcc void @prvResetNextTaskUnblockTime() #20, !dbg !2376
  tail call void @vPortExitCritical() #19, !dbg !2378
  br label %37, !dbg !2379

37:                                               ; preds = %33, %36
  %38 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2380, !tbaa !1014
  %39 = icmp eq %struct.tskTaskControlBlock* %6, %38, !dbg !2382
  br i1 %39, label %40, label %56, !dbg !2383

40:                                               ; preds = %37
  %41 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !2384, !tbaa !1582
  %42 = icmp eq i32 %41, 0, !dbg !2387
  br i1 %42, label %50, label %43, !dbg !2388

43:                                               ; preds = %40
  %44 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2389, !tbaa !1582
  %45 = icmp eq i32 %44, 0, !dbg !2389
  br i1 %45, label %49, label %46, !dbg !2392

46:                                               ; preds = %43
  %47 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2393, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %47, metadata !1727, metadata !DIExpression()) #21, !dbg !2396
  br label %48, !dbg !2397

48:                                               ; preds = %48, %46
  br label %48, !dbg !2398, !llvm.loop !2401

49:                                               ; preds = %43
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2403, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !2403, !srcloc !2405
  tail call void asm sideeffect "isb", ""() #21, !dbg !2403, !srcloc !2406
  br label %56, !dbg !2407

50:                                               ; preds = %40
  %51 = load volatile i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xSuspendedTaskList, i32 0, i32 0), align 4, !dbg !2408, !tbaa !1683
  %52 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2411, !tbaa !1582
  %53 = icmp eq i32 %51, %52, !dbg !2412
  br i1 %53, label %54, label %55, !dbg !2413

54:                                               ; preds = %50
  store volatile %struct.tskTaskControlBlock* null, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2414, !tbaa !1014
  br label %56, !dbg !2416

55:                                               ; preds = %50
  tail call void @vTaskSwitchContext() #20, !dbg !2417
  br label %56

56:                                               ; preds = %37, %49, %55, %54
  ret void, !dbg !2419
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSwitchContext() local_unnamed_addr #3 !dbg !2420 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2429, !tbaa !1582
  %2 = icmp eq i32 %1, 0, !dbg !2430
  br i1 %2, label %4, label %3, !dbg !2431

3:                                                ; preds = %0
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !2432, !tbaa !1582
  br label %31, !dbg !2434

4:                                                ; preds = %0
  store volatile i32 0, i32* @xYieldPending, align 4, !dbg !2435, !tbaa !1582
  %5 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2436, !tbaa !1582
  call void @llvm.dbg.value(metadata i32 %5, metadata !2437, metadata !DIExpression()) #21, !dbg !2443
  %6 = tail call i8 asm sideeffect "clz $0, $1", "=r,r,~{memory}"(i32 %5) #21, !dbg !2445, !srcloc !2446
  call void @llvm.dbg.value(metadata i8 %6, metadata !2442, metadata !DIExpression()) #21, !dbg !2443
  %7 = zext i8 %6 to i32, !dbg !2436
  %8 = sub nsw i32 31, %7, !dbg !2436
  call void @llvm.dbg.value(metadata i32 %8, metadata !2422, metadata !DIExpression()), !dbg !2447
  %9 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %8, i32 0, !dbg !2448
  %10 = load volatile i32, i32* %9, align 4, !dbg !2448, !tbaa !1683
  %11 = icmp eq i32 %10, 0, !dbg !2448
  br i1 %11, label %12, label %15, !dbg !2436

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2450, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %13, metadata !1727, metadata !DIExpression()) #21, !dbg !2453
  br label %14, !dbg !2454

14:                                               ; preds = %14, %12
  br label %14, !dbg !2455, !llvm.loop !2458

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata !DIArgList([5 x %struct.xLIST]* @pxReadyTasksLists, i32 %8), metadata !2426, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !2460
  %16 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %8, i32 1, !dbg !2461
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !2461, !tbaa !2462
  %18 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %17, i32 0, i32 1, !dbg !2461
  %19 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %18, align 4, !dbg !2461, !tbaa !2463
  store %struct.xLIST_ITEM* %19, %struct.xLIST_ITEM** %16, align 4, !dbg !2461, !tbaa !2462
  %20 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %8, i32 2, !dbg !2464
  %21 = bitcast %struct.xMINI_LIST_ITEM* %20 to %struct.xLIST_ITEM*, !dbg !2464
  %22 = icmp eq %struct.xLIST_ITEM* %19, %21, !dbg !2464
  br i1 %22, label %23, label %26, !dbg !2461

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %19, i32 0, i32 1, !dbg !2466
  %25 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %24, align 4, !dbg !2466, !tbaa !2463
  store %struct.xLIST_ITEM* %25, %struct.xLIST_ITEM** %16, align 4, !dbg !2466, !tbaa !2462
  br label %26, !dbg !2466

26:                                               ; preds = %23, %15
  %27 = phi %struct.xLIST_ITEM* [ %25, %23 ], [ %19, %15 ], !dbg !2461
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %27, i32 0, i32 3, !dbg !2461
  %29 = bitcast i8** %28 to %struct.tskTaskControlBlock**, !dbg !2461
  %30 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %29, align 4, !dbg !2461, !tbaa !1763
  store volatile %struct.tskTaskControlBlock* %30, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2461, !tbaa !1014
  br label %31

31:                                               ; preds = %26, %3
  ret void, !dbg !2468
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskResume(%struct.tskTaskControlBlock* noundef %0) local_unnamed_addr #3 !dbg !2469 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2471, metadata !DIExpression()), !dbg !2474
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2472, metadata !DIExpression()), !dbg !2474
  %2 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !2475
  br i1 %2, label %3, label %6, !dbg !2477

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2478, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %4, metadata !1727, metadata !DIExpression()) #21, !dbg !2481
  br label %5, !dbg !2482

5:                                                ; preds = %5, %3
  br label %5, !dbg !2483, !llvm.loop !2486

6:                                                ; preds = %1
  %7 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2488, !tbaa !1014
  %8 = icmp eq %struct.tskTaskControlBlock* %7, %0, !dbg !2490
  br i1 %8, label %28, label %9, !dbg !2491

9:                                                ; preds = %6
  tail call void @vPortEnterCritical() #19, !dbg !2492
  %10 = tail call fastcc i32 @prvTaskIsTaskSuspended(%struct.tskTaskControlBlock* noundef nonnull %0) #20, !dbg !2494
  %11 = icmp eq i32 %10, 0, !dbg !2497
  br i1 %11, label %27, label %12, !dbg !2498

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !2499
  %14 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %13) #19, !dbg !2501
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !2502
  %16 = load i32, i32* %15, align 4, !dbg !2502, !tbaa !1535
  %17 = shl nuw i32 1, %16, !dbg !2502
  %18 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2502, !tbaa !1582
  %19 = or i32 %18, %17, !dbg !2502
  store volatile i32 %19, i32* @uxTopReadyPriority, align 4, !dbg !2502, !tbaa !1582
  %20 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %16, !dbg !2502
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %20, %struct.xLIST_ITEM* noundef nonnull %13) #19, !dbg !2502
  %21 = load i32, i32* %15, align 4, !dbg !2503, !tbaa !1535
  %22 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2505, !tbaa !1014
  %23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %22, i32 0, i32 3, !dbg !2506
  %24 = load i32, i32* %23, align 4, !dbg !2506, !tbaa !1535
  %25 = icmp ult i32 %21, %24, !dbg !2507
  br i1 %25, label %27, label %26, !dbg !2508

26:                                               ; preds = %12
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2509, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !2509, !srcloc !2512
  tail call void asm sideeffect "isb", ""() #21, !dbg !2509, !srcloc !2513
  br label %27, !dbg !2514

27:                                               ; preds = %9, %26, %12
  tail call void @vPortExitCritical() #19, !dbg !2515
  br label %28, !dbg !2516

28:                                               ; preds = %6, %27
  ret void, !dbg !2517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvTaskIsTaskSuspended(%struct.tskTaskControlBlock* noundef readonly %0) unnamed_addr #3 !dbg !2518 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2522, metadata !DIExpression()), !dbg !2525
  call void @llvm.dbg.value(metadata i32 0, metadata !2523, metadata !DIExpression()), !dbg !2525
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2524, metadata !DIExpression()), !dbg !2525
  %2 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !2526
  br i1 %2, label %3, label %6, !dbg !2528

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2529, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %4, metadata !1727, metadata !DIExpression()) #21, !dbg !2532
  br label %5, !dbg !2533

5:                                                ; preds = %5, %3
  br label %5, !dbg !2534, !llvm.loop !2537

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, i32 4, !dbg !2539
  %8 = load %struct.xLIST*, %struct.xLIST** %7, align 4, !dbg !2539, !tbaa !2173
  %9 = icmp eq %struct.xLIST* %8, @xSuspendedTaskList, !dbg !2539
  br i1 %9, label %10, label %15, !dbg !2541

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 4, !dbg !2542
  %12 = load %struct.xLIST*, %struct.xLIST** %11, align 4, !dbg !2542, !tbaa !1691
  %13 = icmp eq %struct.xLIST* %12, null
  %14 = zext i1 %13 to i32, !dbg !2545
  br label %15, !dbg !2545

15:                                               ; preds = %10, %6
  %16 = phi i32 [ 0, %6 ], [ %14, %10 ], !dbg !2525
  call void @llvm.dbg.value(metadata i32 %16, metadata !2523, metadata !DIExpression()), !dbg !2525
  ret i32 %16, !dbg !2546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeFromISR(%struct.tskTaskControlBlock* noundef %0) local_unnamed_addr #3 !dbg !2547 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2551, metadata !DIExpression()), !dbg !2555
  call void @llvm.dbg.value(metadata i32 0, metadata !2552, metadata !DIExpression()), !dbg !2555
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2553, metadata !DIExpression()), !dbg !2555
  %2 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !2556
  br i1 %2, label %3, label %6, !dbg !2558

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2559, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %4, metadata !1727, metadata !DIExpression()) #21, !dbg !2562
  br label %5, !dbg !2563

5:                                                ; preds = %5, %3
  br label %5, !dbg !2564, !llvm.loop !2567

6:                                                ; preds = %1
  tail call void @vPortValidateInterruptPriority() #19, !dbg !2569
  %7 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #21, !dbg !2570, !srcloc !2229
  call void @llvm.dbg.value(metadata i32 undef, metadata !2226, metadata !DIExpression()) #21, !dbg !2572
  call void @llvm.dbg.value(metadata i32 undef, metadata !2227, metadata !DIExpression()) #21, !dbg !2572
  call void @llvm.dbg.value(metadata i32 undef, metadata !2554, metadata !DIExpression()), !dbg !2555
  %8 = tail call fastcc i32 @prvTaskIsTaskSuspended(%struct.tskTaskControlBlock* noundef nonnull %0) #20, !dbg !2573
  %9 = icmp eq i32 %8, 0, !dbg !2576
  br i1 %9, label %30, label %10, !dbg !2577

10:                                               ; preds = %6
  %11 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2578, !tbaa !1582
  %12 = icmp eq i32 %11, 0, !dbg !2581
  br i1 %12, label %13, label %28, !dbg !2582

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !2583
  %15 = load i32, i32* %14, align 4, !dbg !2583, !tbaa !1535
  %16 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2586, !tbaa !1014
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %16, i32 0, i32 3, !dbg !2587
  %18 = load i32, i32* %17, align 4, !dbg !2587, !tbaa !1535
  %19 = icmp uge i32 %15, %18, !dbg !2588
  %20 = zext i1 %19 to i32, !dbg !2589
  call void @llvm.dbg.value(metadata i32 %20, metadata !2552, metadata !DIExpression()), !dbg !2555
  %21 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !2590
  %22 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %21) #19, !dbg !2591
  %23 = load i32, i32* %14, align 4, !dbg !2592, !tbaa !1535
  %24 = shl nuw i32 1, %23, !dbg !2592
  %25 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2592, !tbaa !1582
  %26 = or i32 %25, %24, !dbg !2592
  store volatile i32 %26, i32* @uxTopReadyPriority, align 4, !dbg !2592, !tbaa !1582
  %27 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %23, !dbg !2592
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %27, %struct.xLIST_ITEM* noundef nonnull %21) #19, !dbg !2592
  br label %30, !dbg !2593

28:                                               ; preds = %10
  %29 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, !dbg !2594
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %29) #19, !dbg !2596
  br label %30

30:                                               ; preds = %6, %13, %28
  %31 = phi i32 [ %20, %13 ], [ 0, %28 ], [ 0, %6 ], !dbg !2555
  %32 = extractvalue { i32, i32 } %7, 0, !dbg !2570
  call void @llvm.dbg.value(metadata i32 %32, metadata !2226, metadata !DIExpression()) #21, !dbg !2572
  call void @llvm.dbg.value(metadata i32 %32, metadata !2554, metadata !DIExpression()), !dbg !2555
  call void @llvm.dbg.value(metadata i32 %31, metadata !2552, metadata !DIExpression()), !dbg !2555
  call void @llvm.dbg.value(metadata i32 undef, metadata !2234, metadata !DIExpression()) #21, !dbg !2597
  tail call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %32) #21, !dbg !2599, !srcloc !2242
  ret i32 %31, !dbg !2600
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskStartScheduler() local_unnamed_addr #3 !dbg !2601 {
  %1 = tail call i32 @xTaskCreate(void (i8*)* noundef nonnull @prvIdleTask, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i16 noundef zeroext 130, i8* noundef null, i32 noundef 0, %struct.tskTaskControlBlock** noundef nonnull @xIdleTaskHandle) #20, !dbg !2604
  call void @llvm.dbg.value(metadata i32 %1, metadata !2603, metadata !DIExpression()), !dbg !2606
  %2 = icmp eq i32 %1, 1, !dbg !2607
  br i1 %2, label %3, label %5, !dbg !2610

3:                                                ; preds = %0
  %4 = tail call i32 @xTimerCreateTimerTask() #19, !dbg !2611
  call void @llvm.dbg.value(metadata i32 %4, metadata !2603, metadata !DIExpression()), !dbg !2606
  br label %5, !dbg !2613

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ %1, %0 ], !dbg !2606
  call void @llvm.dbg.value(metadata i32 %6, metadata !2603, metadata !DIExpression()), !dbg !2606
  switch i32 %6, label %13 [
    i32 1, label %7
    i32 -1, label %10
  ], !dbg !2614

7:                                                ; preds = %5
  %8 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2615, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %8, metadata !1727, metadata !DIExpression()) #21, !dbg !2619
  store volatile i32 -1, i32* @xNextTaskUnblockTime, align 4, !dbg !2620, !tbaa !1032
  store volatile i32 1, i32* @xSchedulerRunning, align 4, !dbg !2621, !tbaa !1582
  store volatile i32 0, i32* @xTickCount, align 4, !dbg !2622, !tbaa !1032
  %9 = tail call i32 @xPortStartScheduler() #19, !dbg !2623
  br label %13, !dbg !2625

10:                                               ; preds = %5
  %11 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2626, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %11, metadata !1727, metadata !DIExpression()) #21, !dbg !2631
  br label %12, !dbg !2632

12:                                               ; preds = %12, %10
  br label %12, !dbg !2633, !llvm.loop !2636

13:                                               ; preds = %5, %7
  ret void, !dbg !2638
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvIdleTask(i8* nocapture noundef readnone %0) #0 !dbg !2639 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2641, metadata !DIExpression()), !dbg !2642
  br label %2, !dbg !2643

2:                                                ; preds = %5, %1
  tail call fastcc void @prvCheckTasksWaitingTermination() #20, !dbg !2644
  %3 = load volatile i32, i32* getelementptr inbounds ([5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 0, i32 0), align 4, !dbg !2648, !tbaa !1683
  %4 = icmp ugt i32 %3, 1, !dbg !2651
  br i1 %4, label %6, label %5, !dbg !2652

5:                                                ; preds = %2, %6
  br label %2, !dbg !2644, !llvm.loop !2653

6:                                                ; preds = %2
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2656, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !2656, !srcloc !2659
  tail call void asm sideeffect "isb", ""() #21, !dbg !2656, !srcloc !2660
  br label %5, !dbg !2661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCheckTasksWaitingTermination() unnamed_addr #3 !dbg !2662 {
  %1 = load volatile i32, i32* @uxDeletedTasksWaitingCleanUp, align 4, !dbg !2666, !tbaa !1582
  %2 = icmp eq i32 %1, 0, !dbg !2667
  br i1 %2, label %16, label %3, !dbg !2668

3:                                                ; preds = %0, %3
  tail call void @vPortEnterCritical() #19, !dbg !2669
  %4 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 2, i32 1), align 4, !dbg !2671, !tbaa !1762
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %4, i32 0, i32 3, !dbg !2671
  %6 = bitcast i8** %5 to %struct.tskTaskControlBlock**, !dbg !2671
  %7 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %6, align 4, !dbg !2671, !tbaa !1763
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %7, metadata !2664, metadata !DIExpression()), !dbg !2673
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %7, i32 0, i32 1, !dbg !2674
  %9 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %8) #19, !dbg !2675
  %10 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2676, !tbaa !1582
  %11 = add i32 %10, -1, !dbg !2676
  store volatile i32 %11, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2676, !tbaa !1582
  %12 = load volatile i32, i32* @uxDeletedTasksWaitingCleanUp, align 4, !dbg !2677, !tbaa !1582
  %13 = add i32 %12, -1, !dbg !2677
  store volatile i32 %13, i32* @uxDeletedTasksWaitingCleanUp, align 4, !dbg !2677, !tbaa !1582
  tail call void @vPortExitCritical() #19, !dbg !2678
  tail call fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %7) #20, !dbg !2679
  %14 = load volatile i32, i32* @uxDeletedTasksWaitingCleanUp, align 4, !dbg !2666, !tbaa !1582
  %15 = icmp eq i32 %14, 0, !dbg !2667
  br i1 %15, label %16, label %3, !dbg !2668, !llvm.loop !2680

16:                                               ; preds = %3, %0
  ret void, !dbg !2682
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskEndScheduler() local_unnamed_addr #3 !dbg !2683 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2684, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %1, metadata !1727, metadata !DIExpression()) #21, !dbg !2686
  store volatile i32 0, i32* @xSchedulerRunning, align 4, !dbg !2687, !tbaa !1582
  tail call void @vPortEndScheduler() #19, !dbg !2688
  ret void, !dbg !2689
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetTickCount() local_unnamed_addr #8 !dbg !2690 {
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !2695, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %1, metadata !2694, metadata !DIExpression()), !dbg !2697
  ret i32 %1, !dbg !2698
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGetTickCountFromISR() local_unnamed_addr #3 !dbg !2699 {
  tail call void @vPortValidateInterruptPriority() #19, !dbg !2703
  call void @llvm.dbg.value(metadata i32 0, metadata !2702, metadata !DIExpression()), !dbg !2704
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !2705, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %1, metadata !2701, metadata !DIExpression()), !dbg !2704
  ret i32 %1, !dbg !2707
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskGetNumberOfTasks() local_unnamed_addr #8 !dbg !2708 {
  %1 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2711, !tbaa !1582
  ret i32 %1, !dbg !2712
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pcTaskGetName(%struct.tskTaskControlBlock* noundef readnone %0) local_unnamed_addr #3 !dbg !2713 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2717, metadata !DIExpression()), !dbg !2719
  %2 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !2720
  br i1 %2, label %3, label %9, !dbg !2720

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2720, !tbaa !1014
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %4, metadata !2718, metadata !DIExpression()), !dbg !2719
  %5 = icmp eq %struct.tskTaskControlBlock* %4, null, !dbg !2721
  br i1 %5, label %6, label %9, !dbg !2723

6:                                                ; preds = %3
  %7 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2724, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %7, metadata !1727, metadata !DIExpression()) #21, !dbg !2727
  br label %8, !dbg !2728

8:                                                ; preds = %8, %6
  br label %8, !dbg !2729, !llvm.loop !2732

9:                                                ; preds = %1, %3
  %10 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %0, %1 ]
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %10, i32 0, i32 5, i32 0, !dbg !2734
  ret i8* %11, !dbg !2735
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* nocapture noundef writeonly %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #3 !dbg !2736 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !2756, metadata !DIExpression()), !dbg !2761
  call void @llvm.dbg.value(metadata i32 %1, metadata !2757, metadata !DIExpression()), !dbg !2761
  call void @llvm.dbg.value(metadata i32* %2, metadata !2758, metadata !DIExpression()), !dbg !2761
  call void @llvm.dbg.value(metadata i32 0, metadata !2759, metadata !DIExpression()), !dbg !2761
  call void @llvm.dbg.value(metadata i32 5, metadata !2760, metadata !DIExpression()), !dbg !2761
  tail call void @vTaskSuspendAll() #20, !dbg !2762
  %4 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2763, !tbaa !1582
  %5 = icmp ugt i32 %4, %1, !dbg !2766
  br i1 %5, label %32, label %6, !dbg !2767

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %3 ], !dbg !2761
  %8 = phi i32 [ %9, %6 ], [ 5, %3 ], !dbg !2761
  call void @llvm.dbg.value(metadata i32 %8, metadata !2760, metadata !DIExpression()), !dbg !2761
  call void @llvm.dbg.value(metadata i32 %7, metadata !2759, metadata !DIExpression()), !dbg !2761
  %9 = add nsw i32 %8, -1, !dbg !2768
  call void @llvm.dbg.value(metadata i32 %9, metadata !2760, metadata !DIExpression()), !dbg !2761
  %10 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %7, !dbg !2771
  %11 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %9, !dbg !2772
  %12 = tail call fastcc i32 @prvListTasksWithinSingleList(%struct.xTASK_STATUS* noundef %10, %struct.xLIST* noundef nonnull %11, i32 noundef 1) #20, !dbg !2773
  %13 = add i32 %12, %7, !dbg !2774
  call void @llvm.dbg.value(metadata i32 %13, metadata !2759, metadata !DIExpression()), !dbg !2761
  %14 = icmp eq i32 %9, 0, !dbg !2775
  br i1 %14, label %15, label %6, !dbg !2776, !llvm.loop !2777

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %13, !dbg !2780
  %17 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2781, !tbaa !1014
  %18 = tail call fastcc i32 @prvListTasksWithinSingleList(%struct.xTASK_STATUS* noundef %16, %struct.xLIST* noundef %17, i32 noundef 2) #20, !dbg !2782
  %19 = add i32 %18, %13, !dbg !2783
  call void @llvm.dbg.value(metadata i32 %19, metadata !2759, metadata !DIExpression()), !dbg !2761
  %20 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %19, !dbg !2784
  %21 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !2785, !tbaa !1014
  %22 = tail call fastcc i32 @prvListTasksWithinSingleList(%struct.xTASK_STATUS* noundef %20, %struct.xLIST* noundef %21, i32 noundef 2) #20, !dbg !2786
  %23 = add i32 %22, %19, !dbg !2787
  call void @llvm.dbg.value(metadata i32 %23, metadata !2759, metadata !DIExpression()), !dbg !2761
  %24 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %23, !dbg !2788
  %25 = tail call fastcc i32 @prvListTasksWithinSingleList(%struct.xTASK_STATUS* noundef %24, %struct.xLIST* noundef nonnull @xTasksWaitingTermination, i32 noundef 4) #20, !dbg !2790
  %26 = add i32 %23, %25, !dbg !2791
  call void @llvm.dbg.value(metadata i32 %26, metadata !2759, metadata !DIExpression()), !dbg !2761
  %27 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %26, !dbg !2792
  %28 = tail call fastcc i32 @prvListTasksWithinSingleList(%struct.xTASK_STATUS* noundef %27, %struct.xLIST* noundef nonnull @xSuspendedTaskList, i32 noundef 3) #20, !dbg !2794
  %29 = add i32 %26, %28, !dbg !2795
  call void @llvm.dbg.value(metadata i32 %29, metadata !2759, metadata !DIExpression()), !dbg !2761
  %30 = icmp eq i32* %2, null, !dbg !2796
  br i1 %30, label %32, label %31, !dbg !2799

31:                                               ; preds = %15
  store i32 0, i32* %2, align 4, !dbg !2800, !tbaa !1032
  br label %32, !dbg !2802

32:                                               ; preds = %3, %15, %31
  %33 = phi i32 [ %29, %31 ], [ %29, %15 ], [ 0, %3 ], !dbg !2761
  call void @llvm.dbg.value(metadata i32 %33, metadata !2759, metadata !DIExpression()), !dbg !2761
  %34 = tail call i32 @xTaskResumeAll() #20, !dbg !2803
  ret i32 %33, !dbg !2804
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvListTasksWithinSingleList(%struct.xTASK_STATUS* nocapture noundef writeonly %0, %struct.xLIST* noundef %1, i32 noundef %2) unnamed_addr #3 !dbg !2805 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !2809, metadata !DIExpression()), !dbg !2822
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !2810, metadata !DIExpression()), !dbg !2822
  call void @llvm.dbg.value(metadata i32 %2, metadata !2811, metadata !DIExpression()), !dbg !2822
  call void @llvm.dbg.value(metadata i32 0, metadata !2814, metadata !DIExpression()), !dbg !2822
  %4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !2823
  %5 = load volatile i32, i32* %4, align 4, !dbg !2823, !tbaa !1683
  %6 = icmp eq i32 %5, 0, !dbg !2824
  br i1 %6, label %42, label %7, !dbg !2825

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !2815, metadata !DIExpression()), !dbg !2826
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 1, !dbg !2827
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !2827, !tbaa !2462
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !2827
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %10, align 4, !dbg !2827, !tbaa !2463
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, !dbg !2828
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !2828
  %14 = icmp eq %struct.xLIST_ITEM* %11, %13, !dbg !2828
  br i1 %14, label %15, label %18, !dbg !2827

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 1, !dbg !2830
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !2830, !tbaa !2463
  br label %18, !dbg !2830

18:                                               ; preds = %15, %7
  %19 = phi %struct.xLIST_ITEM* [ %17, %15 ], [ %11, %7 ], !dbg !2827
  %20 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %19, i32 0, i32 3, !dbg !2827
  %21 = bitcast i8** %20 to %struct.tskTaskControlBlock**, !dbg !2827
  %22 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %21, align 4, !dbg !2827, !tbaa !1763
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %22, metadata !2813, metadata !DIExpression()), !dbg !2822
  %23 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, i32 1
  br label %24, !dbg !2832

24:                                               ; preds = %40, %18
  %25 = phi %struct.xLIST_ITEM* [ %19, %18 ], [ %41, %40 ], !dbg !2833
  %26 = phi i32 [ 0, %18 ], [ %38, %40 ], !dbg !2822
  call void @llvm.dbg.value(metadata i32 %26, metadata !2814, metadata !DIExpression()), !dbg !2822
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !2819, metadata !DIExpression()), !dbg !2834
  %27 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %25, i32 0, i32 1, !dbg !2833
  %28 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %27, align 4, !dbg !2833, !tbaa !2463
  store %struct.xLIST_ITEM* %28, %struct.xLIST_ITEM** %8, align 4, !dbg !2833, !tbaa !2462
  %29 = icmp eq %struct.xLIST_ITEM* %28, %13, !dbg !2835
  br i1 %29, label %30, label %32, !dbg !2833

30:                                               ; preds = %24
  %31 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %23, align 4, !dbg !2837, !tbaa !2463
  store %struct.xLIST_ITEM* %31, %struct.xLIST_ITEM** %8, align 4, !dbg !2837, !tbaa !2462
  br label %32, !dbg !2837

32:                                               ; preds = %30, %24
  %33 = phi %struct.xLIST_ITEM* [ %31, %30 ], [ %28, %24 ], !dbg !2833
  %34 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %33, i32 0, i32 3, !dbg !2833
  %35 = bitcast i8** %34 to %struct.tskTaskControlBlock**, !dbg !2833
  %36 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %35, align 4, !dbg !2833, !tbaa !1763
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %36, metadata !2812, metadata !DIExpression()), !dbg !2822
  %37 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %26, !dbg !2839
  tail call void @vTaskGetInfo(%struct.tskTaskControlBlock* noundef %36, %struct.xTASK_STATUS* noundef %37, i32 noundef 1, i32 noundef %2) #20, !dbg !2840
  %38 = add i32 %26, 1, !dbg !2841
  call void @llvm.dbg.value(metadata i32 %38, metadata !2814, metadata !DIExpression()), !dbg !2822
  %39 = icmp eq %struct.tskTaskControlBlock* %36, %22, !dbg !2842
  br i1 %39, label %42, label %40, !dbg !2843, !llvm.loop !2844

40:                                               ; preds = %32
  %41 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !2833, !tbaa !2462
  br label %24, !dbg !2843

42:                                               ; preds = %32, %3
  %43 = phi i32 [ 0, %3 ], [ %38, %32 ], !dbg !2822
  call void @llvm.dbg.value(metadata i32 %43, metadata !2814, metadata !DIExpression()), !dbg !2822
  ret i32 %43, !dbg !2846
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskGetInfo(%struct.tskTaskControlBlock* noundef %0, %struct.xTASK_STATUS* nocapture noundef writeonly %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !2847 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2851, metadata !DIExpression()), !dbg !2856
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %1, metadata !2852, metadata !DIExpression()), !dbg !2856
  call void @llvm.dbg.value(metadata i32 %2, metadata !2853, metadata !DIExpression()), !dbg !2856
  call void @llvm.dbg.value(metadata i32 %3, metadata !2854, metadata !DIExpression()), !dbg !2856
  %5 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !2857
  br i1 %5, label %6, label %8, !dbg !2857

6:                                                ; preds = %4
  %7 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2857, !tbaa !1014
  br label %8, !dbg !2857

8:                                                ; preds = %4, %6
  %9 = phi %struct.tskTaskControlBlock* [ %7, %6 ], [ %0, %4 ], !dbg !2857
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %9, metadata !2855, metadata !DIExpression()), !dbg !2856
  %10 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %1, i32 0, i32 0, !dbg !2858
  store %struct.tskTaskControlBlock* %9, %struct.tskTaskControlBlock** %10, align 4, !dbg !2859, !tbaa !2860
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 5, i32 0, !dbg !2863
  %12 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %1, i32 0, i32 1, !dbg !2864
  store i8* %11, i8** %12, align 4, !dbg !2865, !tbaa !2866
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 3, !dbg !2867
  %14 = load i32, i32* %13, align 4, !dbg !2867, !tbaa !1535
  %15 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %1, i32 0, i32 4, !dbg !2868
  store i32 %14, i32* %15, align 4, !dbg !2869, !tbaa !2870
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 4, !dbg !2871
  %17 = load i32*, i32** %16, align 4, !dbg !2871, !tbaa !1462
  %18 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %1, i32 0, i32 7, !dbg !2872
  store i32* %17, i32** %18, align 4, !dbg !2873, !tbaa !2874
  %19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 6, !dbg !2875
  %20 = load i32, i32* %19, align 4, !dbg !2875, !tbaa !1615
  %21 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %1, i32 0, i32 2, !dbg !2876
  store i32 %20, i32* %21, align 4, !dbg !2877, !tbaa !2878
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 8, !dbg !2879
  %23 = load i32, i32* %22, align 4, !dbg !2879, !tbaa !1539
  %24 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %1, i32 0, i32 5, !dbg !2881
  store i32 %23, i32* %24, align 4, !dbg !2882, !tbaa !2883
  %25 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %1, i32 0, i32 6, !dbg !2884
  store i32 0, i32* %25, align 4, !dbg !2886, !tbaa !2887
  %26 = icmp eq i32 %3, 5, !dbg !2888
  br i1 %26, label %41, label %27, !dbg !2890

27:                                               ; preds = %8
  %28 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2891, !tbaa !1014
  %29 = icmp eq %struct.tskTaskControlBlock* %9, %28, !dbg !2894
  %30 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %1, i32 0, i32 3, !dbg !2895
  br i1 %29, label %31, label %32, !dbg !2896

31:                                               ; preds = %27
  store i32 0, i32* %30, align 4, !dbg !2897, !tbaa !2899
  br label %44, !dbg !2900

32:                                               ; preds = %27
  store i32 %3, i32* %30, align 4, !dbg !2901, !tbaa !2899
  %33 = icmp eq i32 %3, 3, !dbg !2903
  br i1 %33, label %34, label %44, !dbg !2906

34:                                               ; preds = %32
  tail call void @vTaskSuspendAll() #20, !dbg !2907
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 2, i32 4, !dbg !2909
  %36 = load %struct.xLIST*, %struct.xLIST** %35, align 4, !dbg !2909, !tbaa !1691
  %37 = icmp eq %struct.xLIST* %36, null, !dbg !2912
  br i1 %37, label %39, label %38, !dbg !2913

38:                                               ; preds = %34
  store i32 2, i32* %30, align 4, !dbg !2914, !tbaa !2899
  br label %39, !dbg !2916

39:                                               ; preds = %38, %34
  %40 = tail call i32 @xTaskResumeAll() #20, !dbg !2917
  br label %44, !dbg !2918

41:                                               ; preds = %8
  %42 = tail call i32 @eTaskGetState(%struct.tskTaskControlBlock* noundef nonnull %9) #20, !dbg !2919
  %43 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %1, i32 0, i32 3, !dbg !2921
  store i32 %42, i32* %43, align 4, !dbg !2922, !tbaa !2899
  br label %44

44:                                               ; preds = %31, %39, %32, %41
  %45 = icmp eq i32 %2, 0, !dbg !2923
  br i1 %45, label %50, label %46, !dbg !2925

46:                                               ; preds = %44
  %47 = bitcast i32** %16 to i8**, !dbg !2926
  %48 = load i8*, i8** %47, align 4, !dbg !2926, !tbaa !1462
  %49 = tail call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* noundef %48) #20, !dbg !2929
  br label %50, !dbg !2930

50:                                               ; preds = %44, %46
  %51 = phi i16 [ %49, %46 ], [ 0, %44 ], !dbg !2931
  %52 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %1, i32 0, i32 8, !dbg !2932
  store i16 %51, i16* %52, align 4, !dbg !2934
  ret void, !dbg !2935
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* nocapture noundef readonly %0) unnamed_addr #9 !dbg !2936 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2941, metadata !DIExpression()), !dbg !2943
  call void @llvm.dbg.value(metadata i32 0, metadata !2942, metadata !DIExpression()), !dbg !2943
  %2 = load i8, i8* %0, align 1, !dbg !2944, !tbaa !1418
  %3 = icmp eq i8 %2, -91, !dbg !2945
  br i1 %3, label %4, label %14, !dbg !2946

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !2942, metadata !DIExpression()), !dbg !2943
  call void @llvm.dbg.value(metadata i8* %6, metadata !2941, metadata !DIExpression()), !dbg !2943
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !2947
  call void @llvm.dbg.value(metadata i8* %7, metadata !2941, metadata !DIExpression()), !dbg !2943
  %8 = add i32 %5, 1, !dbg !2949
  call void @llvm.dbg.value(metadata i32 %8, metadata !2942, metadata !DIExpression()), !dbg !2943
  %9 = load i8, i8* %7, align 1, !dbg !2944, !tbaa !1418
  %10 = icmp eq i8 %9, -91, !dbg !2945
  br i1 %10, label %4, label %11, !dbg !2946, !llvm.loop !2950

11:                                               ; preds = %4
  %12 = lshr i32 %8, 2, !dbg !2952
  %13 = trunc i32 %12 to i16, !dbg !2952
  br label %14, !dbg !2952

14:                                               ; preds = %11, %1
  %15 = phi i16 [ 0, %1 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !2942, metadata !DIExpression()), !dbg !2943
  ret i16 %15, !dbg !2953
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskCatchUpTicks(i32 noundef %0) local_unnamed_addr #3 !dbg !2954 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2958, metadata !DIExpression()), !dbg !2960
  call void @llvm.dbg.value(metadata i32 0, metadata !2959, metadata !DIExpression()), !dbg !2960
  %2 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2961, !tbaa !1582
  %3 = icmp eq i32 %2, 0, !dbg !2961
  br i1 %3, label %7, label %4, !dbg !2963

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2964, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %5, metadata !1727, metadata !DIExpression()) #21, !dbg !2967
  br label %6, !dbg !2968

6:                                                ; preds = %6, %4
  br label %6, !dbg !2969, !llvm.loop !2972

7:                                                ; preds = %1
  tail call void @vTaskSuspendAll() #20, !dbg !2974
  %8 = load volatile i32, i32* @xPendedTicks, align 4, !dbg !2975, !tbaa !1032
  %9 = add i32 %8, %0, !dbg !2975
  store volatile i32 %9, i32* @xPendedTicks, align 4, !dbg !2975, !tbaa !1032
  %10 = tail call i32 @xTaskResumeAll() #20, !dbg !2976
  call void @llvm.dbg.value(metadata i32 %10, metadata !2959, metadata !DIExpression()), !dbg !2960
  ret i32 %10, !dbg !2977
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventList(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !2978 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !2982, metadata !DIExpression()), !dbg !2984
  call void @llvm.dbg.value(metadata i32 %1, metadata !2983, metadata !DIExpression()), !dbg !2984
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !2985
  br i1 %3, label %4, label %7, !dbg !2987

4:                                                ; preds = %2
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !2988, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %5, metadata !1727, metadata !DIExpression()) #21, !dbg !2991
  br label %6, !dbg !2992

6:                                                ; preds = %6, %4
  br label %6, !dbg !2993, !llvm.loop !2996

7:                                                ; preds = %2
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2998, !tbaa !1014
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !2999
  tail call void @vListInsert(%struct.xLIST* noundef nonnull %0, %struct.xLIST_ITEM* noundef nonnull %9) #19, !dbg !3000
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %1, i32 noundef 1) #20, !dbg !3001
  ret void, !dbg !3002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !3003 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !3007, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.value(metadata i32 %1, metadata !3008, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.value(metadata i32 %2, metadata !3009, metadata !DIExpression()), !dbg !3010
  %4 = icmp eq %struct.xLIST* %0, null, !dbg !3011
  br i1 %4, label %5, label %8, !dbg !3013

5:                                                ; preds = %3
  %6 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3014, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %6, metadata !1727, metadata !DIExpression()) #21, !dbg !3017
  br label %7, !dbg !3018

7:                                                ; preds = %7, %5
  br label %7, !dbg !3019, !llvm.loop !3022

8:                                                ; preds = %3
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3024, !tbaa !1582
  %10 = icmp eq i32 %9, 0, !dbg !3024
  br i1 %10, label %11, label %14, !dbg !3026

11:                                               ; preds = %8
  %12 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3027, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %12, metadata !1727, metadata !DIExpression()) #21, !dbg !3030
  br label %13, !dbg !3031

13:                                               ; preds = %13, %11
  br label %13, !dbg !3032, !llvm.loop !3035

14:                                               ; preds = %8
  %15 = or i32 %1, -2147483648, !dbg !3037
  %16 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3037, !tbaa !1014
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %16, i32 0, i32 2, i32 0, !dbg !3037
  store i32 %15, i32* %17, align 4, !dbg !3037, !tbaa !1550
  %18 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3038, !tbaa !1014
  %19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %18, i32 0, i32 2, !dbg !3039
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %0, %struct.xLIST_ITEM* noundef nonnull %19) #19, !dbg !3040
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %2, i32 noundef 1) #20, !dbg !3041
  ret void, !dbg !3042
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !3043 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !3047, metadata !DIExpression()), !dbg !3050
  call void @llvm.dbg.value(metadata i32 %1, metadata !3048, metadata !DIExpression()), !dbg !3050
  call void @llvm.dbg.value(metadata i32 %2, metadata !3049, metadata !DIExpression()), !dbg !3050
  %4 = icmp eq %struct.xLIST* %0, null, !dbg !3051
  br i1 %4, label %5, label %8, !dbg !3053

5:                                                ; preds = %3
  %6 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3054, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %6, metadata !1727, metadata !DIExpression()) #21, !dbg !3057
  br label %7, !dbg !3058

7:                                                ; preds = %7, %5
  br label %7, !dbg !3059, !llvm.loop !3062

8:                                                ; preds = %3
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3064, !tbaa !1014
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 2, !dbg !3065
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %0, %struct.xLIST_ITEM* noundef nonnull %10) #19, !dbg !3066
  %11 = icmp eq i32 %2, 0, !dbg !3067
  %12 = select i1 %11, i32 %1, i32 -1, !dbg !3069
  call void @llvm.dbg.value(metadata i32 %12, metadata !3048, metadata !DIExpression()), !dbg !3050
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %12, i32 noundef %2) #20, !dbg !3070
  ret void, !dbg !3071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskRemoveFromEventList(%struct.xLIST* nocapture noundef readonly %0) local_unnamed_addr #3 !dbg !3072 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !3077, metadata !DIExpression()), !dbg !3080
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !3081
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %2, align 4, !dbg !3081, !tbaa !1762
  %4 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %3, i32 0, i32 3, !dbg !3081
  %5 = bitcast i8** %4 to %struct.tskTaskControlBlock**, !dbg !3081
  %6 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %5, align 4, !dbg !3081, !tbaa !1763
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !3078, metadata !DIExpression()), !dbg !3080
  %7 = icmp eq %struct.tskTaskControlBlock* %6, null, !dbg !3082
  br i1 %7, label %8, label %11, !dbg !3084

8:                                                ; preds = %1
  %9 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3085, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %9, metadata !1727, metadata !DIExpression()) #21, !dbg !3088
  br label %10, !dbg !3089

10:                                               ; preds = %10, %8
  br label %10, !dbg !3090, !llvm.loop !3093

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !3095
  %13 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %12) #19, !dbg !3096
  %14 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3097, !tbaa !1582
  %15 = icmp eq i32 %14, 0, !dbg !3099
  br i1 %15, label %16, label %25, !dbg !3100

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !3101
  %18 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %17) #19, !dbg !3103
  %19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !3104
  %20 = load i32, i32* %19, align 4, !dbg !3104, !tbaa !1535
  %21 = shl nuw i32 1, %20, !dbg !3104
  %22 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3104, !tbaa !1582
  %23 = or i32 %22, %21, !dbg !3104
  store volatile i32 %23, i32* @uxTopReadyPriority, align 4, !dbg !3104, !tbaa !1582
  %24 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %20, !dbg !3104
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %24, %struct.xLIST_ITEM* noundef nonnull %17) #19, !dbg !3104
  br label %26, !dbg !3105

25:                                               ; preds = %11
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %12) #19, !dbg !3106
  br label %26

26:                                               ; preds = %25, %16
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !3108
  %28 = load i32, i32* %27, align 4, !dbg !3108, !tbaa !1535
  %29 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3110, !tbaa !1014
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %29, i32 0, i32 3, !dbg !3111
  %31 = load i32, i32* %30, align 4, !dbg !3111, !tbaa !1535
  %32 = icmp ugt i32 %28, %31, !dbg !3112
  br i1 %32, label %33, label %34, !dbg !3113

33:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 1, metadata !3079, metadata !DIExpression()), !dbg !3080
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !3114, !tbaa !1582
  br label %34, !dbg !3116

34:                                               ; preds = %26, %33
  %35 = phi i32 [ 1, %33 ], [ 0, %26 ], !dbg !3117
  call void @llvm.dbg.value(metadata i32 %35, metadata !3079, metadata !DIExpression()), !dbg !3080
  ret i32 %35, !dbg !3118
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !3119 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !3123, metadata !DIExpression()), !dbg !3126
  call void @llvm.dbg.value(metadata i32 %1, metadata !3124, metadata !DIExpression()), !dbg !3126
  %3 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3127, !tbaa !1582
  %4 = icmp eq i32 %3, 0, !dbg !3127
  br i1 %4, label %5, label %8, !dbg !3129

5:                                                ; preds = %2
  %6 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3130, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %6, metadata !1727, metadata !DIExpression()) #21, !dbg !3133
  br label %7, !dbg !3134

7:                                                ; preds = %7, %5
  br label %7, !dbg !3135, !llvm.loop !3138

8:                                                ; preds = %2
  %9 = or i32 %1, -2147483648, !dbg !3140
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 0, !dbg !3140
  store i32 %9, i32* %10, align 4, !dbg !3140, !tbaa !3141
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 3, !dbg !3142
  %12 = bitcast i8** %11 to %struct.tskTaskControlBlock**, !dbg !3142
  %13 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %12, align 4, !dbg !3142, !tbaa !1763
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %13, metadata !3125, metadata !DIExpression()), !dbg !3126
  %14 = icmp eq %struct.tskTaskControlBlock* %13, null, !dbg !3143
  br i1 %14, label %15, label %18, !dbg !3145

15:                                               ; preds = %8
  %16 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3146, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %16, metadata !1727, metadata !DIExpression()) #21, !dbg !3149
  br label %17, !dbg !3150

17:                                               ; preds = %17, %15
  br label %17, !dbg !3151, !llvm.loop !3154

18:                                               ; preds = %8
  %19 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %0) #19, !dbg !3156
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 1, !dbg !3157
  %21 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #19, !dbg !3158
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !3159
  %23 = load i32, i32* %22, align 4, !dbg !3159, !tbaa !1535
  %24 = shl nuw i32 1, %23, !dbg !3159
  %25 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3159, !tbaa !1582
  %26 = or i32 %25, %24, !dbg !3159
  store volatile i32 %26, i32* @uxTopReadyPriority, align 4, !dbg !3159, !tbaa !1582
  %27 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %23, !dbg !3159
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %27, %struct.xLIST_ITEM* noundef nonnull %20) #19, !dbg !3159
  %28 = load i32, i32* %22, align 4, !dbg !3160, !tbaa !1535
  %29 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3162, !tbaa !1014
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %29, i32 0, i32 3, !dbg !3163
  %31 = load i32, i32* %30, align 4, !dbg !3163, !tbaa !1535
  %32 = icmp ugt i32 %28, %31, !dbg !3164
  br i1 %32, label %33, label %34, !dbg !3165

33:                                               ; preds = %18
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !3166, !tbaa !1582
  br label %34, !dbg !3168

34:                                               ; preds = %33, %18
  ret void, !dbg !3169
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSetTimeOutState(%struct.xTIME_OUT* noundef writeonly %0) local_unnamed_addr #3 !dbg !3170 {
  call void @llvm.dbg.value(metadata %struct.xTIME_OUT* %0, metadata !3181, metadata !DIExpression()), !dbg !3182
  %2 = icmp eq %struct.xTIME_OUT* %0, null, !dbg !3183
  br i1 %2, label %3, label %6, !dbg !3185

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3186, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %4, metadata !1727, metadata !DIExpression()) #21, !dbg !3189
  br label %5, !dbg !3190

5:                                                ; preds = %5, %3
  br label %5, !dbg !3191, !llvm.loop !3194

6:                                                ; preds = %1
  tail call void @vPortEnterCritical() #19, !dbg !3196
  %7 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !3197, !tbaa !1582
  %8 = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %0, i32 0, i32 0, !dbg !3199
  store i32 %7, i32* %8, align 4, !dbg !3200, !tbaa !3201
  %9 = load volatile i32, i32* @xTickCount, align 4, !dbg !3203, !tbaa !1032
  %10 = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %0, i32 0, i32 1, !dbg !3204
  store i32 %9, i32* %10, align 4, !dbg !3205, !tbaa !3206
  tail call void @vPortExitCritical() #19, !dbg !3207
  ret void, !dbg !3208
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @vTaskInternalSetTimeOutState(%struct.xTIME_OUT* nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !3209 {
  call void @llvm.dbg.value(metadata %struct.xTIME_OUT* %0, metadata !3211, metadata !DIExpression()), !dbg !3212
  %2 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !3213, !tbaa !1582
  %3 = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %0, i32 0, i32 0, !dbg !3214
  store i32 %2, i32* %3, align 4, !dbg !3215, !tbaa !3201
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !3216, !tbaa !1032
  %5 = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %0, i32 0, i32 1, !dbg !3217
  store i32 %4, i32* %5, align 4, !dbg !3218, !tbaa !3206
  ret void, !dbg !3219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* noundef %0, i32* noundef %1) local_unnamed_addr #3 !dbg !3220 {
  call void @llvm.dbg.value(metadata %struct.xTIME_OUT* %0, metadata !3224, metadata !DIExpression()), !dbg !3230
  call void @llvm.dbg.value(metadata i32* %1, metadata !3225, metadata !DIExpression()), !dbg !3230
  %3 = icmp eq %struct.xTIME_OUT* %0, null, !dbg !3231
  br i1 %3, label %4, label %7, !dbg !3233

4:                                                ; preds = %2
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3234, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %5, metadata !1727, metadata !DIExpression()) #21, !dbg !3237
  br label %6, !dbg !3238

6:                                                ; preds = %6, %4
  br label %6, !dbg !3239, !llvm.loop !3242

7:                                                ; preds = %2
  %8 = icmp eq i32* %1, null, !dbg !3244
  br i1 %8, label %9, label %12, !dbg !3246

9:                                                ; preds = %7
  %10 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3247, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %10, metadata !1727, metadata !DIExpression()) #21, !dbg !3250
  br label %11, !dbg !3251

11:                                               ; preds = %11, %9
  br label %11, !dbg !3252, !llvm.loop !3255

12:                                               ; preds = %7
  tail call void @vPortEnterCritical() #19, !dbg !3257
  %13 = load volatile i32, i32* @xTickCount, align 4, !dbg !3258, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %13, metadata !3227, metadata !DIExpression()), !dbg !3259
  %14 = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %0, i32 0, i32 1, !dbg !3260
  %15 = load i32, i32* %14, align 4, !dbg !3260, !tbaa !3206
  %16 = sub i32 %13, %15, !dbg !3261
  call void @llvm.dbg.value(metadata i32 %16, metadata !3229, metadata !DIExpression()), !dbg !3259
  %17 = load i32, i32* %1, align 4, !dbg !3262, !tbaa !1032
  %18 = icmp eq i32 %17, -1, !dbg !3264
  br i1 %18, label %31, label %19, !dbg !3265

19:                                               ; preds = %12
  %20 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !3266, !tbaa !1582
  %21 = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %0, i32 0, i32 0, !dbg !3268
  %22 = load i32, i32* %21, align 4, !dbg !3268, !tbaa !3201
  %23 = icmp eq i32 %20, %22, !dbg !3269
  %24 = icmp ult i32 %13, %15
  %25 = select i1 %23, i1 true, i1 %24, !dbg !3270
  br i1 %25, label %26, label %31, !dbg !3270

26:                                               ; preds = %19
  %27 = icmp ugt i32 %17, %16, !dbg !3271
  br i1 %27, label %28, label %30, !dbg !3273

28:                                               ; preds = %26
  %29 = sub i32 %17, %16, !dbg !3274
  store i32 %29, i32* %1, align 4, !dbg !3274, !tbaa !1032
  tail call void @vTaskInternalSetTimeOutState(%struct.xTIME_OUT* noundef nonnull %0) #20, !dbg !3276
  call void @llvm.dbg.value(metadata i32 0, metadata !3226, metadata !DIExpression()), !dbg !3230
  br label %31, !dbg !3277

30:                                               ; preds = %26
  store i32 0, i32* %1, align 4, !dbg !3278, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 1, metadata !3226, metadata !DIExpression()), !dbg !3230
  br label %31

31:                                               ; preds = %19, %12, %30, %28
  %32 = phi i32 [ 0, %28 ], [ 1, %30 ], [ 0, %12 ], [ 1, %19 ], !dbg !3280
  call void @llvm.dbg.value(metadata i32 %32, metadata !3226, metadata !DIExpression()), !dbg !3230
  tail call void @vPortExitCritical() #19, !dbg !3281
  ret i32 %32, !dbg !3282
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vTaskMissedYield() local_unnamed_addr #7 !dbg !3283 {
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !3284, !tbaa !1582
  ret void, !dbg !3285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxTaskGetTaskNumber(%struct.tskTaskControlBlock* noundef readonly %0) local_unnamed_addr #10 !dbg !3286 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3290, metadata !DIExpression()), !dbg !3293
  %2 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !3294
  br i1 %2, label %6, label %3, !dbg !3296

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3292, metadata !DIExpression()), !dbg !3293
  %4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 7, !dbg !3297
  %5 = load i32, i32* %4, align 4, !dbg !3297, !tbaa !3299
  call void @llvm.dbg.value(metadata i32 %5, metadata !3291, metadata !DIExpression()), !dbg !3293
  br label %6, !dbg !3300

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 0, %1 ], !dbg !3301
  call void @llvm.dbg.value(metadata i32 %7, metadata !3291, metadata !DIExpression()), !dbg !3293
  ret i32 %7, !dbg !3302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vTaskSetTaskNumber(%struct.tskTaskControlBlock* noundef writeonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !3303 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3307, metadata !DIExpression()), !dbg !3310
  call void @llvm.dbg.value(metadata i32 %1, metadata !3308, metadata !DIExpression()), !dbg !3310
  %3 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !3311
  br i1 %3, label %6, label %4, !dbg !3313

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3309, metadata !DIExpression()), !dbg !3310
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 7, !dbg !3314
  store i32 %1, i32* %5, align 4, !dbg !3316, !tbaa !3299
  br label %6, !dbg !3317

6:                                                ; preds = %4, %2
  ret void, !dbg !3318
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local %struct.tskTaskControlBlock* @xTaskGetCurrentTaskHandle() local_unnamed_addr #8 !dbg !3319 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3324, !tbaa !1014
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %1, metadata !3323, metadata !DIExpression()), !dbg !3325
  ret %struct.tskTaskControlBlock* %1, !dbg !3326
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetSchedulerState() local_unnamed_addr #8 !dbg !3327 {
  %1 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !3330, !tbaa !1582
  %2 = icmp eq i32 %1, 0, !dbg !3332
  br i1 %2, label %7, label %3, !dbg !3333

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3334, !tbaa !1582
  %5 = icmp eq i32 %4, 0, !dbg !3337
  %6 = select i1 %5, i32 2, i32 0
  br label %7

7:                                                ; preds = %3, %0
  %8 = phi i32 [ 1, %0 ], [ %6, %3 ], !dbg !3338
  call void @llvm.dbg.value(metadata i32 %8, metadata !3329, metadata !DIExpression()), !dbg !3339
  ret i32 %8, !dbg !3340
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskPriorityInherit(%struct.tskTaskControlBlock* noundef %0) local_unnamed_addr #3 !dbg !3341 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3343, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3344, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.value(metadata i32 0, metadata !3345, metadata !DIExpression()), !dbg !3346
  %2 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !3347
  br i1 %2, label %54, label %3, !dbg !3349

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !3350
  %5 = load i32, i32* %4, align 4, !dbg !3350, !tbaa !1535
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3353, !tbaa !1014
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !3354
  %8 = load i32, i32* %7, align 4, !dbg !3354, !tbaa !1535
  %9 = icmp ult i32 %5, %8, !dbg !3355
  br i1 %9, label %10, label %46, !dbg !3356

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 0, !dbg !3357
  %12 = load i32, i32* %11, align 4, !dbg !3357, !tbaa !1550
  %13 = icmp sgt i32 %12, -1, !dbg !3360
  br i1 %13, label %14, label %19, !dbg !3361

14:                                               ; preds = %10
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3362, !tbaa !1014
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !3362
  %17 = load i32, i32* %16, align 4, !dbg !3362, !tbaa !1535
  %18 = sub i32 5, %17, !dbg !3362
  store i32 %18, i32* %11, align 4, !dbg !3362, !tbaa !1550
  br label %19, !dbg !3364

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !3365
  %21 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, i32 4, !dbg !3365
  %22 = load %struct.xLIST*, %struct.xLIST** %21, align 4, !dbg !3365, !tbaa !2173
  %23 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %5, !dbg !3365
  %24 = icmp eq %struct.xLIST* %22, %23, !dbg !3365
  br i1 %24, label %25, label %42, !dbg !3367

25:                                               ; preds = %19
  %26 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #19, !dbg !3368
  %27 = icmp eq i32 %26, 0, !dbg !3371
  br i1 %27, label %28, label %34, !dbg !3372

28:                                               ; preds = %25
  %29 = load i32, i32* %4, align 4, !dbg !3373, !tbaa !1535
  %30 = shl nuw i32 1, %29, !dbg !3373
  %31 = xor i32 %30, -1, !dbg !3373
  %32 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3373, !tbaa !1582
  %33 = and i32 %32, %31, !dbg !3373
  store volatile i32 %33, i32* @uxTopReadyPriority, align 4, !dbg !3373, !tbaa !1582
  br label %34, !dbg !3375

34:                                               ; preds = %25, %28
  %35 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3376, !tbaa !1014
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 3, !dbg !3377
  %37 = load i32, i32* %36, align 4, !dbg !3377, !tbaa !1535
  store i32 %37, i32* %4, align 4, !dbg !3378, !tbaa !1535
  %38 = shl nuw i32 1, %37, !dbg !3379
  %39 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3379, !tbaa !1582
  %40 = or i32 %39, %38, !dbg !3379
  store volatile i32 %40, i32* @uxTopReadyPriority, align 4, !dbg !3379, !tbaa !1582
  %41 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %37, !dbg !3379
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %41, %struct.xLIST_ITEM* noundef nonnull %20) #19, !dbg !3379
  br label %54, !dbg !3380

42:                                               ; preds = %19
  %43 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3381, !tbaa !1014
  %44 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %43, i32 0, i32 3, !dbg !3383
  %45 = load i32, i32* %44, align 4, !dbg !3383, !tbaa !1535
  store i32 %45, i32* %4, align 4, !dbg !3384, !tbaa !1535
  br label %54

46:                                               ; preds = %3
  %47 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 8, !dbg !3385
  %48 = load i32, i32* %47, align 4, !dbg !3385, !tbaa !1539
  %49 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3388, !tbaa !1014
  %50 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %49, i32 0, i32 3, !dbg !3389
  %51 = load i32, i32* %50, align 4, !dbg !3389, !tbaa !1535
  %52 = icmp ult i32 %48, %51, !dbg !3390
  %53 = zext i1 %52 to i32, !dbg !3391
  br label %54, !dbg !3391

54:                                               ; preds = %46, %34, %42, %1
  %55 = phi i32 [ 0, %1 ], [ 1, %42 ], [ 1, %34 ], [ %53, %46 ], !dbg !3346
  call void @llvm.dbg.value(metadata i32 %55, metadata !3345, metadata !DIExpression()), !dbg !3346
  ret i32 %55, !dbg !3392
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskPriorityDisinherit(%struct.tskTaskControlBlock* noundef %0) local_unnamed_addr #3 !dbg !3393 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3395, metadata !DIExpression()), !dbg !3398
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3396, metadata !DIExpression()), !dbg !3398
  call void @llvm.dbg.value(metadata i32 0, metadata !3397, metadata !DIExpression()), !dbg !3398
  %2 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !3399
  br i1 %2, label %47, label %3, !dbg !3401

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3402, !tbaa !1014
  %5 = icmp eq %struct.tskTaskControlBlock* %4, %0, !dbg !3402
  br i1 %5, label %9, label %6, !dbg !3405

6:                                                ; preds = %3
  %7 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3406, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %7, metadata !1727, metadata !DIExpression()) #21, !dbg !3409
  br label %8, !dbg !3410

8:                                                ; preds = %8, %6
  br label %8, !dbg !3411, !llvm.loop !3414

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 9, !dbg !3416
  %11 = load i32, i32* %10, align 4, !dbg !3416, !tbaa !1542
  %12 = icmp eq i32 %11, 0, !dbg !3416
  br i1 %12, label %13, label %16, !dbg !3418

13:                                               ; preds = %9
  %14 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3419, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %14, metadata !1727, metadata !DIExpression()) #21, !dbg !3422
  br label %15, !dbg !3423

15:                                               ; preds = %15, %13
  br label %15, !dbg !3424, !llvm.loop !3427

16:                                               ; preds = %9
  %17 = add i32 %11, -1, !dbg !3429
  store i32 %17, i32* %10, align 4, !dbg !3429, !tbaa !1542
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !3430
  %19 = load i32, i32* %18, align 4, !dbg !3430, !tbaa !1535
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 8, !dbg !3432
  %21 = load i32, i32* %20, align 4, !dbg !3432, !tbaa !1539
  %22 = icmp ne i32 %19, %21, !dbg !3433
  %23 = icmp eq i32 %17, 0
  %24 = select i1 %22, i1 %23, i1 false, !dbg !3434
  br i1 %24, label %25, label %47, !dbg !3434

25:                                               ; preds = %16
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !3435
  %27 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %26) #19, !dbg !3440
  %28 = icmp eq i32 %27, 0, !dbg !3441
  br i1 %28, label %29, label %39, !dbg !3442

29:                                               ; preds = %25
  %30 = load i32, i32* %18, align 4, !dbg !3443, !tbaa !1535
  %31 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %30, i32 0, !dbg !3443
  %32 = load volatile i32, i32* %31, align 4, !dbg !3443, !tbaa !1683
  %33 = icmp eq i32 %32, 0, !dbg !3443
  br i1 %33, label %34, label %39, !dbg !3447

34:                                               ; preds = %29
  %35 = shl nuw i32 1, %30, !dbg !3448
  %36 = xor i32 %35, -1, !dbg !3448
  %37 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3448, !tbaa !1582
  %38 = and i32 %37, %36, !dbg !3448
  store volatile i32 %38, i32* @uxTopReadyPriority, align 4, !dbg !3448, !tbaa !1582
  br label %39, !dbg !3448

39:                                               ; preds = %25, %29, %34
  %40 = load i32, i32* %20, align 4, !dbg !3450, !tbaa !1539
  store i32 %40, i32* %18, align 4, !dbg !3451, !tbaa !1535
  %41 = sub i32 5, %40, !dbg !3452
  %42 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 0, !dbg !3452
  store i32 %41, i32* %42, align 4, !dbg !3452, !tbaa !1550
  %43 = shl nuw i32 1, %40, !dbg !3453
  %44 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3453, !tbaa !1582
  %45 = or i32 %44, %43, !dbg !3453
  store volatile i32 %45, i32* @uxTopReadyPriority, align 4, !dbg !3453, !tbaa !1582
  %46 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %40, !dbg !3453
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %46, %struct.xLIST_ITEM* noundef nonnull %26) #19, !dbg !3453
  call void @llvm.dbg.value(metadata i32 1, metadata !3397, metadata !DIExpression()), !dbg !3398
  br label %47, !dbg !3454

47:                                               ; preds = %1, %39, %16
  %48 = phi i32 [ 1, %39 ], [ 0, %16 ], [ 0, %1 ], !dbg !3398
  call void @llvm.dbg.value(metadata i32 %48, metadata !3397, metadata !DIExpression()), !dbg !3398
  ret i32 %48, !dbg !3455
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPriorityDisinheritAfterTimeout(%struct.tskTaskControlBlock* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !3456 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3460, metadata !DIExpression()), !dbg !3466
  call void @llvm.dbg.value(metadata i32 %1, metadata !3461, metadata !DIExpression()), !dbg !3466
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3462, metadata !DIExpression()), !dbg !3466
  call void @llvm.dbg.value(metadata i32 1, metadata !3465, metadata !DIExpression()), !dbg !3466
  %3 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !3467
  br i1 %3, label %52, label %4, !dbg !3469

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 9, !dbg !3470
  %6 = load i32, i32* %5, align 4, !dbg !3470, !tbaa !1542
  %7 = icmp eq i32 %6, 0, !dbg !3470
  br i1 %7, label %8, label %11, !dbg !3473

8:                                                ; preds = %4
  %9 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3474, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %9, metadata !1727, metadata !DIExpression()) #21, !dbg !3477
  br label %10, !dbg !3478

10:                                               ; preds = %10, %8
  br label %10, !dbg !3479, !llvm.loop !3482

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 8, !dbg !3484
  %13 = load i32, i32* %12, align 4, !dbg !3484, !tbaa !1539
  %14 = icmp ult i32 %13, %1, !dbg !3486
  %15 = select i1 %14, i32 %1, i32 %13
  call void @llvm.dbg.value(metadata i32 %15, metadata !3464, metadata !DIExpression()), !dbg !3466
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !3487
  %17 = load i32, i32* %16, align 4, !dbg !3487, !tbaa !1535
  %18 = icmp ne i32 %17, %15, !dbg !3489
  %19 = icmp eq i32 %6, 1
  %20 = select i1 %18, i1 %19, i1 false, !dbg !3490
  br i1 %20, label %21, label %52, !dbg !3490

21:                                               ; preds = %11
  %22 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3491, !tbaa !1014
  %23 = icmp eq %struct.tskTaskControlBlock* %22, %0, !dbg !3491
  br i1 %23, label %24, label %27, !dbg !3496

24:                                               ; preds = %21
  %25 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3497, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %25, metadata !1727, metadata !DIExpression()) #21, !dbg !3500
  br label %26, !dbg !3501

26:                                               ; preds = %26, %24
  br label %26, !dbg !3502, !llvm.loop !3505

27:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %17, metadata !3463, metadata !DIExpression()), !dbg !3466
  store i32 %15, i32* %16, align 4, !dbg !3507, !tbaa !1535
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 0, !dbg !3508
  %29 = load i32, i32* %28, align 4, !dbg !3508, !tbaa !1550
  %30 = icmp sgt i32 %29, -1, !dbg !3510
  br i1 %30, label %31, label %33, !dbg !3511

31:                                               ; preds = %27
  %32 = sub i32 5, %15, !dbg !3512
  store i32 %32, i32* %28, align 4, !dbg !3512, !tbaa !1550
  br label %33, !dbg !3514

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !3515
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, i32 4, !dbg !3515
  %36 = load %struct.xLIST*, %struct.xLIST** %35, align 4, !dbg !3515, !tbaa !2173
  %37 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %17, !dbg !3515
  %38 = icmp eq %struct.xLIST* %36, %37, !dbg !3515
  br i1 %38, label %39, label %52, !dbg !3517

39:                                               ; preds = %33
  %40 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %34) #19, !dbg !3518
  %41 = icmp eq i32 %40, 0, !dbg !3521
  %42 = load i32, i32* %16, align 4, !dbg !3522, !tbaa !1535
  %43 = shl nuw i32 1, %42, !dbg !3522
  br i1 %41, label %44, label %48, !dbg !3523

44:                                               ; preds = %39
  %45 = xor i32 %43, -1, !dbg !3524
  %46 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3524, !tbaa !1582
  %47 = and i32 %46, %45, !dbg !3524
  store volatile i32 %47, i32* @uxTopReadyPriority, align 4, !dbg !3524, !tbaa !1582
  br label %48, !dbg !3526

48:                                               ; preds = %39, %44
  %49 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3527, !tbaa !1582
  %50 = or i32 %49, %43, !dbg !3527
  store volatile i32 %50, i32* @uxTopReadyPriority, align 4, !dbg !3527, !tbaa !1582
  %51 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %42, !dbg !3527
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %51, %struct.xLIST_ITEM* noundef nonnull %34) #19, !dbg !3527
  br label %52, !dbg !3528

52:                                               ; preds = %2, %48, %33, %11
  ret void, !dbg !3529
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskResetEventItemValue() local_unnamed_addr #8 !dbg !3530 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3533, !tbaa !1014
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 2, i32 0, !dbg !3533
  %3 = load i32, i32* %2, align 4, !dbg !3533, !tbaa !1550
  call void @llvm.dbg.value(metadata i32 %3, metadata !3532, metadata !DIExpression()), !dbg !3534
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3535, !tbaa !1014
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 3, !dbg !3535
  %6 = load i32, i32* %5, align 4, !dbg !3535, !tbaa !1535
  %7 = sub i32 5, %6, !dbg !3535
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3535, !tbaa !1014
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 0, !dbg !3535
  store i32 %7, i32* %9, align 4, !dbg !3535, !tbaa !1550
  ret i32 %3, !dbg !3536
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local %struct.tskTaskControlBlock* @pvTaskIncrementMutexHeldCount() local_unnamed_addr #8 !dbg !3537 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3538, !tbaa !1014
  %2 = icmp eq %struct.tskTaskControlBlock* %1, null, !dbg !3540
  br i1 %2, label %8, label %3, !dbg !3541

3:                                                ; preds = %0
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3542, !tbaa !1014
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 9, !dbg !3544
  %6 = load i32, i32* %5, align 4, !dbg !3545, !tbaa !1542
  %7 = add i32 %6, 1, !dbg !3545
  store i32 %7, i32* %5, align 4, !dbg !3545, !tbaa !1542
  br label %8, !dbg !3546

8:                                                ; preds = %3, %0
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3547, !tbaa !1014
  ret %struct.tskTaskControlBlock* %9, !dbg !3548
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ulTaskNotifyTake(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !3549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3553, metadata !DIExpression()), !dbg !3556
  call void @llvm.dbg.value(metadata i32 %1, metadata !3554, metadata !DIExpression()), !dbg !3556
  tail call void @vPortEnterCritical() #19, !dbg !3557
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3558, !tbaa !1014
  %4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 10, !dbg !3561
  %5 = load volatile i32, i32* %4, align 4, !dbg !3561, !tbaa !1556
  %6 = icmp eq i32 %5, 0, !dbg !3562
  br i1 %6, label %7, label %12, !dbg !3563

7:                                                ; preds = %2
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3564, !tbaa !1014
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 11, !dbg !3566
  store volatile i8 1, i8* %9, align 4, !dbg !3567, !tbaa !1559
  %10 = icmp eq i32 %1, 0, !dbg !3568
  br i1 %10, label %12, label %11, !dbg !3570

11:                                               ; preds = %7
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %1, i32 noundef 1) #20, !dbg !3571
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !3573, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !3573, !srcloc !3575
  tail call void asm sideeffect "isb", ""() #21, !dbg !3573, !srcloc !3576
  br label %12, !dbg !3577

12:                                               ; preds = %2, %11, %7
  tail call void @vPortExitCritical() #19, !dbg !3578
  tail call void @vPortEnterCritical() #19, !dbg !3579
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3580, !tbaa !1014
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 10, !dbg !3582
  %15 = load volatile i32, i32* %14, align 4, !dbg !3582, !tbaa !1556
  call void @llvm.dbg.value(metadata i32 %15, metadata !3555, metadata !DIExpression()), !dbg !3556
  %16 = icmp eq i32 %15, 0, !dbg !3583
  br i1 %16, label %23, label %17, !dbg !3585

17:                                               ; preds = %12
  %18 = icmp eq i32 %0, 0, !dbg !3586
  %19 = add i32 %15, -1, !dbg !3589
  %20 = select i1 %18, i32 %19, i32 0, !dbg !3589
  %21 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3590, !tbaa !1014
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 10, !dbg !3590
  store volatile i32 %20, i32* %22, align 4, !dbg !3590, !tbaa !1556
  br label %23, !dbg !3591

23:                                               ; preds = %17, %12
  %24 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3591, !tbaa !1014
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %24, i32 0, i32 11, !dbg !3592
  store volatile i8 0, i8* %25, align 4, !dbg !3593, !tbaa !1559
  tail call void @vPortExitCritical() #19, !dbg !3594
  ret i32 %15, !dbg !3595
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyWait(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #3 !dbg !3596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3600, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %1, metadata !3601, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32* %2, metadata !3602, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %3, metadata !3603, metadata !DIExpression()), !dbg !3605
  tail call void @vPortEnterCritical() #19, !dbg !3606
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3607, !tbaa !1014
  %6 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %5, i32 0, i32 11, !dbg !3610
  %7 = load volatile i8, i8* %6, align 4, !dbg !3610, !tbaa !1559
  %8 = icmp eq i8 %7, 2, !dbg !3611
  br i1 %8, label %19, label %9, !dbg !3612

9:                                                ; preds = %4
  %10 = xor i32 %0, -1, !dbg !3613
  %11 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3615, !tbaa !1014
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 10, !dbg !3616
  %13 = load volatile i32, i32* %12, align 4, !dbg !3617, !tbaa !1556
  %14 = and i32 %13, %10, !dbg !3617
  store volatile i32 %14, i32* %12, align 4, !dbg !3617, !tbaa !1556
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3618, !tbaa !1014
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 11, !dbg !3619
  store volatile i8 1, i8* %16, align 4, !dbg !3620, !tbaa !1559
  %17 = icmp eq i32 %3, 0, !dbg !3621
  br i1 %17, label %19, label %18, !dbg !3623

18:                                               ; preds = %9
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %3, i32 noundef 1) #20, !dbg !3624
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !3626, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !3626, !srcloc !3628
  tail call void asm sideeffect "isb", ""() #21, !dbg !3626, !srcloc !3629
  br label %19, !dbg !3630

19:                                               ; preds = %4, %18, %9
  tail call void @vPortExitCritical() #19, !dbg !3631
  tail call void @vPortEnterCritical() #19, !dbg !3632
  %20 = icmp eq i32* %2, null, !dbg !3633
  br i1 %20, label %25, label %21, !dbg !3636

21:                                               ; preds = %19
  %22 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3637, !tbaa !1014
  %23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %22, i32 0, i32 10, !dbg !3639
  %24 = load volatile i32, i32* %23, align 4, !dbg !3639, !tbaa !1556
  store i32 %24, i32* %2, align 4, !dbg !3640, !tbaa !1032
  br label %25, !dbg !3641

25:                                               ; preds = %21, %19
  %26 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3642, !tbaa !1014
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %26, i32 0, i32 11, !dbg !3644
  %28 = load volatile i8, i8* %27, align 4, !dbg !3644, !tbaa !1559
  %29 = icmp eq i8 %28, 2, !dbg !3645
  br i1 %29, label %30, label %36, !dbg !3646

30:                                               ; preds = %25
  %31 = xor i32 %1, -1, !dbg !3647
  %32 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3649, !tbaa !1014
  %33 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %32, i32 0, i32 10, !dbg !3650
  %34 = load volatile i32, i32* %33, align 4, !dbg !3651, !tbaa !1556
  %35 = and i32 %34, %31, !dbg !3651
  store volatile i32 %35, i32* %33, align 4, !dbg !3651, !tbaa !1556
  call void @llvm.dbg.value(metadata i32 1, metadata !3604, metadata !DIExpression()), !dbg !3605
  br label %36

36:                                               ; preds = %25, %30
  %37 = phi i32 [ 1, %30 ], [ 0, %25 ], !dbg !3652
  call void @llvm.dbg.value(metadata i32 %37, metadata !3604, metadata !DIExpression()), !dbg !3605
  %38 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3653, !tbaa !1014
  %39 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %38, i32 0, i32 11, !dbg !3654
  store volatile i8 0, i8* %39, align 4, !dbg !3655, !tbaa !1559
  tail call void @vPortExitCritical() #19, !dbg !3656
  ret i32 %37, !dbg !3657
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGenericNotify(%struct.tskTaskControlBlock* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef writeonly %3) local_unnamed_addr #3 !dbg !3658 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3663, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i32 %1, metadata !3664, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i32 %2, metadata !3665, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i32* %3, metadata !3666, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i32 1, metadata !3668, metadata !DIExpression()), !dbg !3670
  %5 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !3671
  br i1 %5, label %6, label %9, !dbg !3673

6:                                                ; preds = %4
  %7 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3674, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %7, metadata !1727, metadata !DIExpression()) #21, !dbg !3677
  br label %8, !dbg !3678

8:                                                ; preds = %8, %6
  br label %8, !dbg !3679, !llvm.loop !3682

9:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3667, metadata !DIExpression()), !dbg !3670
  tail call void @vPortEnterCritical() #19, !dbg !3684
  %10 = icmp eq i32* %3, null, !dbg !3685
  br i1 %10, label %14, label %11, !dbg !3688

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !3689
  %13 = load volatile i32, i32* %12, align 4, !dbg !3689, !tbaa !1556
  store i32 %13, i32* %3, align 4, !dbg !3691, !tbaa !1032
  br label %14, !dbg !3692

14:                                               ; preds = %11, %9
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 11, !dbg !3693
  %16 = load volatile i8, i8* %15, align 4, !dbg !3693, !tbaa !1559
  call void @llvm.dbg.value(metadata i8 %16, metadata !3669, metadata !DIExpression()), !dbg !3670
  store volatile i8 2, i8* %15, align 4, !dbg !3694, !tbaa !1559
  switch i32 %2, label %31 [
    i32 1, label %17
    i32 2, label %21
    i32 3, label %25
    i32 4, label %27
    i32 0, label %38
  ], !dbg !3695

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !3696
  %19 = load volatile i32, i32* %18, align 4, !dbg !3698, !tbaa !1556
  %20 = or i32 %19, %1, !dbg !3698
  store volatile i32 %20, i32* %18, align 4, !dbg !3698, !tbaa !1556
  br label %38, !dbg !3699

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !3700
  %23 = load volatile i32, i32* %22, align 4, !dbg !3701, !tbaa !1556
  %24 = add i32 %23, 1, !dbg !3701
  store volatile i32 %24, i32* %22, align 4, !dbg !3701, !tbaa !1556
  br label %38, !dbg !3702

25:                                               ; preds = %14
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !3703
  store volatile i32 %1, i32* %26, align 4, !dbg !3704, !tbaa !1556
  br label %38, !dbg !3705

27:                                               ; preds = %14
  %28 = icmp eq i8 %16, 2, !dbg !3706
  br i1 %28, label %62, label %29, !dbg !3708

29:                                               ; preds = %27
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !3709
  store volatile i32 %1, i32* %30, align 4, !dbg !3711, !tbaa !1556
  br label %38, !dbg !3712

31:                                               ; preds = %14
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !3713
  %33 = load volatile i32, i32* %32, align 4, !dbg !3713, !tbaa !1556
  %34 = icmp eq i32 %33, -1, !dbg !3713
  br i1 %34, label %38, label %35, !dbg !3715

35:                                               ; preds = %31
  %36 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3716, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %36, metadata !1727, metadata !DIExpression()) #21, !dbg !3719
  br label %37, !dbg !3720

37:                                               ; preds = %37, %35
  br label %37, !dbg !3721, !llvm.loop !3724

38:                                               ; preds = %31, %29, %14, %25, %21, %17
  call void @llvm.dbg.value(metadata i32 1, metadata !3668, metadata !DIExpression()), !dbg !3670
  %39 = icmp eq i8 %16, 1, !dbg !3726
  br i1 %39, label %40, label %62, !dbg !3728

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !3729
  %42 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %41) #19, !dbg !3731
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !3732
  %44 = load i32, i32* %43, align 4, !dbg !3732, !tbaa !1535
  %45 = shl nuw i32 1, %44, !dbg !3732
  %46 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3732, !tbaa !1582
  %47 = or i32 %46, %45, !dbg !3732
  store volatile i32 %47, i32* @uxTopReadyPriority, align 4, !dbg !3732, !tbaa !1582
  %48 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %44, !dbg !3732
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %48, %struct.xLIST_ITEM* noundef nonnull %41) #19, !dbg !3732
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 4, !dbg !3733
  %50 = load %struct.xLIST*, %struct.xLIST** %49, align 4, !dbg !3733, !tbaa !1691
  %51 = icmp eq %struct.xLIST* %50, null, !dbg !3733
  br i1 %51, label %55, label %52, !dbg !3735

52:                                               ; preds = %40
  %53 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3736, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %53, metadata !1727, metadata !DIExpression()) #21, !dbg !3739
  br label %54, !dbg !3740

54:                                               ; preds = %54, %52
  br label %54, !dbg !3741, !llvm.loop !3744

55:                                               ; preds = %40
  %56 = load i32, i32* %43, align 4, !dbg !3746, !tbaa !1535
  %57 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3748, !tbaa !1014
  %58 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %57, i32 0, i32 3, !dbg !3749
  %59 = load i32, i32* %58, align 4, !dbg !3749, !tbaa !1535
  %60 = icmp ugt i32 %56, %59, !dbg !3750
  br i1 %60, label %61, label %62, !dbg !3751

61:                                               ; preds = %55
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !3752, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !3752, !srcloc !3755
  tail call void asm sideeffect "isb", ""() #21, !dbg !3752, !srcloc !3756
  br label %62, !dbg !3757

62:                                               ; preds = %27, %38, %61, %55
  %63 = phi i32 [ 1, %38 ], [ 1, %61 ], [ 1, %55 ], [ 0, %27 ]
  tail call void @vPortExitCritical() #19, !dbg !3758
  ret i32 %63, !dbg !3759
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGenericNotifyFromISR(%struct.tskTaskControlBlock* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef writeonly %3, i32* noundef writeonly %4) local_unnamed_addr #3 !dbg !3760 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3764, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata i32 %1, metadata !3765, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata i32 %2, metadata !3766, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata i32* %3, metadata !3767, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata i32* %4, metadata !3768, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata i32 1, metadata !3771, metadata !DIExpression()), !dbg !3773
  %6 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !3774
  br i1 %6, label %7, label %10, !dbg !3776

7:                                                ; preds = %5
  %8 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3777, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %8, metadata !1727, metadata !DIExpression()) #21, !dbg !3780
  br label %9, !dbg !3781

9:                                                ; preds = %9, %7
  br label %9, !dbg !3782, !llvm.loop !3785

10:                                               ; preds = %5
  tail call void @vPortValidateInterruptPriority() #19, !dbg !3787
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3769, metadata !DIExpression()), !dbg !3773
  %11 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #21, !dbg !3788, !srcloc !2229
  call void @llvm.dbg.value(metadata i32 undef, metadata !2226, metadata !DIExpression()) #21, !dbg !3790
  call void @llvm.dbg.value(metadata i32 undef, metadata !2227, metadata !DIExpression()) #21, !dbg !3790
  call void @llvm.dbg.value(metadata i32 undef, metadata !3772, metadata !DIExpression()), !dbg !3773
  %12 = icmp eq i32* %3, null, !dbg !3791
  br i1 %12, label %16, label %13, !dbg !3794

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !3795
  %15 = load volatile i32, i32* %14, align 4, !dbg !3795, !tbaa !1556
  store i32 %15, i32* %3, align 4, !dbg !3797, !tbaa !1032
  br label %16, !dbg !3798

16:                                               ; preds = %13, %10
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 11, !dbg !3799
  %18 = load volatile i8, i8* %17, align 4, !dbg !3799, !tbaa !1559
  call void @llvm.dbg.value(metadata i8 %18, metadata !3770, metadata !DIExpression()), !dbg !3773
  store volatile i8 2, i8* %17, align 4, !dbg !3800, !tbaa !1559
  switch i32 %2, label %33 [
    i32 1, label %19
    i32 2, label %23
    i32 3, label %27
    i32 4, label %29
    i32 0, label %40
  ], !dbg !3801

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !3802
  %21 = load volatile i32, i32* %20, align 4, !dbg !3804, !tbaa !1556
  %22 = or i32 %21, %1, !dbg !3804
  store volatile i32 %22, i32* %20, align 4, !dbg !3804, !tbaa !1556
  br label %40, !dbg !3805

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !3806
  %25 = load volatile i32, i32* %24, align 4, !dbg !3807, !tbaa !1556
  %26 = add i32 %25, 1, !dbg !3807
  store volatile i32 %26, i32* %24, align 4, !dbg !3807, !tbaa !1556
  br label %40, !dbg !3808

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !3809
  store volatile i32 %1, i32* %28, align 4, !dbg !3810, !tbaa !1556
  br label %40, !dbg !3811

29:                                               ; preds = %16
  %30 = icmp eq i8 %18, 2, !dbg !3812
  br i1 %30, label %74, label %31, !dbg !3814

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !3815
  store volatile i32 %1, i32* %32, align 4, !dbg !3817, !tbaa !1556
  br label %40, !dbg !3818

33:                                               ; preds = %16
  %34 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !3819
  %35 = load volatile i32, i32* %34, align 4, !dbg !3819, !tbaa !1556
  %36 = icmp eq i32 %35, -1, !dbg !3819
  br i1 %36, label %40, label %37, !dbg !3821

37:                                               ; preds = %33
  %38 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3822, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %38, metadata !1727, metadata !DIExpression()) #21, !dbg !3825
  br label %39, !dbg !3826

39:                                               ; preds = %39, %37
  br label %39, !dbg !3827, !llvm.loop !3830

40:                                               ; preds = %33, %31, %16, %27, %23, %19
  call void @llvm.dbg.value(metadata i32 1, metadata !3771, metadata !DIExpression()), !dbg !3773
  %41 = icmp eq i8 %18, 1, !dbg !3832
  br i1 %41, label %42, label %74, !dbg !3834

42:                                               ; preds = %40
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, !dbg !3835
  %44 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 4, !dbg !3835
  %45 = load %struct.xLIST*, %struct.xLIST** %44, align 4, !dbg !3835, !tbaa !1691
  %46 = icmp eq %struct.xLIST* %45, null, !dbg !3835
  br i1 %46, label %50, label %47, !dbg !3838

47:                                               ; preds = %42
  %48 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3839, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %48, metadata !1727, metadata !DIExpression()) #21, !dbg !3842
  br label %49, !dbg !3843

49:                                               ; preds = %49, %47
  br label %49, !dbg !3844, !llvm.loop !3847

50:                                               ; preds = %42
  %51 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3849, !tbaa !1582
  %52 = icmp eq i32 %51, 0, !dbg !3851
  br i1 %52, label %53, label %62, !dbg !3852

53:                                               ; preds = %50
  %54 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !3853
  %55 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %54) #19, !dbg !3855
  %56 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !3856
  %57 = load i32, i32* %56, align 4, !dbg !3856, !tbaa !1535
  %58 = shl nuw i32 1, %57, !dbg !3856
  %59 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3856, !tbaa !1582
  %60 = or i32 %59, %58, !dbg !3856
  store volatile i32 %60, i32* @uxTopReadyPriority, align 4, !dbg !3856, !tbaa !1582
  %61 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %57, !dbg !3856
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %61, %struct.xLIST_ITEM* noundef nonnull %54) #19, !dbg !3856
  br label %63, !dbg !3857

62:                                               ; preds = %50
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %43) #19, !dbg !3858
  br label %63

63:                                               ; preds = %62, %53
  %64 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !3860
  %65 = load i32, i32* %64, align 4, !dbg !3860, !tbaa !1535
  %66 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3862, !tbaa !1014
  %67 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %66, i32 0, i32 3, !dbg !3863
  %68 = load i32, i32* %67, align 4, !dbg !3863, !tbaa !1535
  %69 = icmp ugt i32 %65, %68, !dbg !3864
  br i1 %69, label %70, label %74, !dbg !3865

70:                                               ; preds = %63
  %71 = icmp eq i32* %4, null, !dbg !3866
  br i1 %71, label %73, label %72, !dbg !3869

72:                                               ; preds = %70
  store i32 1, i32* %4, align 4, !dbg !3870, !tbaa !1582
  br label %73, !dbg !3872

73:                                               ; preds = %72, %70
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !3873, !tbaa !1582
  br label %74, !dbg !3874

74:                                               ; preds = %29, %73, %63, %40
  %75 = phi i32 [ 1, %73 ], [ 1, %63 ], [ 1, %40 ], [ 0, %29 ]
  %76 = extractvalue { i32, i32 } %11, 0, !dbg !3788
  call void @llvm.dbg.value(metadata i32 %76, metadata !2226, metadata !DIExpression()) #21, !dbg !3790
  call void @llvm.dbg.value(metadata i32 %76, metadata !3772, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata i32 undef, metadata !2234, metadata !DIExpression()) #21, !dbg !3875
  tail call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %76) #21, !dbg !3877, !srcloc !2242
  ret i32 %75, !dbg !3878
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskNotifyGiveFromISR(%struct.tskTaskControlBlock* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #3 !dbg !3879 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3883, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.value(metadata i32* %1, metadata !3884, metadata !DIExpression()), !dbg !3888
  %3 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !3889
  br i1 %3, label %4, label %7, !dbg !3891

4:                                                ; preds = %2
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3892, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %5, metadata !1727, metadata !DIExpression()) #21, !dbg !3895
  br label %6, !dbg !3896

6:                                                ; preds = %6, %4
  br label %6, !dbg !3897, !llvm.loop !3900

7:                                                ; preds = %2
  tail call void @vPortValidateInterruptPriority() #19, !dbg !3902
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3885, metadata !DIExpression()), !dbg !3888
  %8 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #21, !dbg !3903, !srcloc !2229
  call void @llvm.dbg.value(metadata i32 undef, metadata !2226, metadata !DIExpression()) #21, !dbg !3905
  call void @llvm.dbg.value(metadata i32 undef, metadata !2227, metadata !DIExpression()) #21, !dbg !3905
  call void @llvm.dbg.value(metadata i32 undef, metadata !3887, metadata !DIExpression()), !dbg !3888
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 11, !dbg !3906
  %10 = load volatile i8, i8* %9, align 4, !dbg !3906, !tbaa !1559
  call void @llvm.dbg.value(metadata i8 %10, metadata !3886, metadata !DIExpression()), !dbg !3888
  store volatile i8 2, i8* %9, align 4, !dbg !3908, !tbaa !1559
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !3909
  %12 = load volatile i32, i32* %11, align 4, !dbg !3910, !tbaa !1556
  %13 = add i32 %12, 1, !dbg !3910
  store volatile i32 %13, i32* %11, align 4, !dbg !3910, !tbaa !1556
  %14 = icmp eq i8 %10, 1, !dbg !3911
  br i1 %14, label %15, label %47, !dbg !3913

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, !dbg !3914
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 4, !dbg !3914
  %18 = load %struct.xLIST*, %struct.xLIST** %17, align 4, !dbg !3914, !tbaa !1691
  %19 = icmp eq %struct.xLIST* %18, null, !dbg !3914
  br i1 %19, label %23, label %20, !dbg !3917

20:                                               ; preds = %15
  %21 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !3918, !srcloc !1730
  call void @llvm.dbg.value(metadata i32 %21, metadata !1727, metadata !DIExpression()) #21, !dbg !3921
  br label %22, !dbg !3922

22:                                               ; preds = %22, %20
  br label %22, !dbg !3923, !llvm.loop !3926

23:                                               ; preds = %15
  %24 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3928, !tbaa !1582
  %25 = icmp eq i32 %24, 0, !dbg !3930
  br i1 %25, label %26, label %35, !dbg !3931

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !3932
  %28 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %27) #19, !dbg !3934
  %29 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !3935
  %30 = load i32, i32* %29, align 4, !dbg !3935, !tbaa !1535
  %31 = shl nuw i32 1, %30, !dbg !3935
  %32 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3935, !tbaa !1582
  %33 = or i32 %32, %31, !dbg !3935
  store volatile i32 %33, i32* @uxTopReadyPriority, align 4, !dbg !3935, !tbaa !1582
  %34 = getelementptr inbounds [5 x %struct.xLIST], [5 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %30, !dbg !3935
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %34, %struct.xLIST_ITEM* noundef nonnull %27) #19, !dbg !3935
  br label %36, !dbg !3936

35:                                               ; preds = %23
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %16) #19, !dbg !3937
  br label %36

36:                                               ; preds = %35, %26
  %37 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !3939
  %38 = load i32, i32* %37, align 4, !dbg !3939, !tbaa !1535
  %39 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3941, !tbaa !1014
  %40 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %39, i32 0, i32 3, !dbg !3942
  %41 = load i32, i32* %40, align 4, !dbg !3942, !tbaa !1535
  %42 = icmp ugt i32 %38, %41, !dbg !3943
  br i1 %42, label %43, label %47, !dbg !3944

43:                                               ; preds = %36
  %44 = icmp eq i32* %1, null, !dbg !3945
  br i1 %44, label %46, label %45, !dbg !3948

45:                                               ; preds = %43
  store i32 1, i32* %1, align 4, !dbg !3949, !tbaa !1582
  br label %46, !dbg !3951

46:                                               ; preds = %45, %43
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !3952, !tbaa !1582
  br label %47, !dbg !3953

47:                                               ; preds = %46, %36, %7
  %48 = extractvalue { i32, i32 } %8, 0, !dbg !3903
  call void @llvm.dbg.value(metadata i32 %48, metadata !2226, metadata !DIExpression()) #21, !dbg !3905
  call void @llvm.dbg.value(metadata i32 %48, metadata !3887, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.value(metadata i32 undef, metadata !2234, metadata !DIExpression()) #21, !dbg !3954
  tail call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %48) #21, !dbg !3956, !srcloc !2242
  ret void, !dbg !3957
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyStateClear(%struct.tskTaskControlBlock* noundef %0) local_unnamed_addr #3 !dbg !3958 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3960, metadata !DIExpression()), !dbg !3963
  %2 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !3964
  br i1 %2, label %3, label %5, !dbg !3964

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3964, !tbaa !1014
  br label %5, !dbg !3964

5:                                                ; preds = %1, %3
  %6 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %0, %1 ], !dbg !3964
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !3961, metadata !DIExpression()), !dbg !3963
  tail call void @vPortEnterCritical() #19, !dbg !3965
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 11, !dbg !3966
  %8 = load volatile i8, i8* %7, align 4, !dbg !3966, !tbaa !1559
  %9 = icmp eq i8 %8, 2, !dbg !3969
  br i1 %9, label %10, label %11, !dbg !3970

10:                                               ; preds = %5
  store volatile i8 0, i8* %7, align 4, !dbg !3971, !tbaa !1559
  call void @llvm.dbg.value(metadata i32 1, metadata !3962, metadata !DIExpression()), !dbg !3963
  br label %11, !dbg !3973

11:                                               ; preds = %5, %10
  %12 = phi i32 [ 1, %10 ], [ 0, %5 ], !dbg !3974
  call void @llvm.dbg.value(metadata i32 %12, metadata !3962, metadata !DIExpression()), !dbg !3963
  tail call void @vPortExitCritical() #19, !dbg !3975
  ret i32 %12, !dbg !3976
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ulTaskNotifyValueClear(%struct.tskTaskControlBlock* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !3977 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3981, metadata !DIExpression()), !dbg !3985
  call void @llvm.dbg.value(metadata i32 %1, metadata !3982, metadata !DIExpression()), !dbg !3985
  %3 = icmp eq %struct.tskTaskControlBlock* %0, null, !dbg !3986
  br i1 %3, label %4, label %6, !dbg !3986

4:                                                ; preds = %2
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3986, !tbaa !1014
  br label %6, !dbg !3986

6:                                                ; preds = %2, %4
  %7 = phi %struct.tskTaskControlBlock* [ %5, %4 ], [ %0, %2 ], !dbg !3986
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %7, metadata !3983, metadata !DIExpression()), !dbg !3985
  tail call void @vPortEnterCritical() #19, !dbg !3987
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3988, !tbaa !1014
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 10, !dbg !3990
  %10 = load volatile i32, i32* %9, align 4, !dbg !3990, !tbaa !1556
  call void @llvm.dbg.value(metadata i32 %10, metadata !3984, metadata !DIExpression()), !dbg !3985
  %11 = xor i32 %1, -1, !dbg !3991
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %7, i32 0, i32 10, !dbg !3992
  %13 = load volatile i32, i32* %12, align 4, !dbg !3993, !tbaa !1556
  %14 = and i32 %13, %11, !dbg !3993
  store volatile i32 %14, i32* %12, align 4, !dbg !3993, !tbaa !1556
  tail call void @vPortExitCritical() #19, !dbg !3994
  ret i32 %10, !dbg !3995
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerCreateTimerTask() local_unnamed_addr #3 !dbg !3996 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3998, metadata !DIExpression()), !dbg !3999
  tail call fastcc void @prvCheckForValidListAndQueue() #20, !dbg !4000
  %1 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !4001, !tbaa !1014
  %2 = icmp eq %struct.QueueDefinition* %1, null, !dbg !4003
  br i1 %2, label %6, label %3, !dbg !4004

3:                                                ; preds = %0
  %4 = tail call i32 @xTaskCreate(void (i8*)* noundef nonnull @prvTimerTask, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i16 noundef zeroext 260, i8* noundef null, i32 noundef 2, %struct.tskTaskControlBlock** noundef nonnull @xTimerTaskHandle) #19, !dbg !4005
  call void @llvm.dbg.value(metadata i32 %4, metadata !3998, metadata !DIExpression()), !dbg !3999
  %5 = icmp eq i32 %4, 0, !dbg !4008
  br i1 %5, label %6, label %9, !dbg !4010

6:                                                ; preds = %0, %3
  %7 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4011, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %7, metadata !4014, metadata !DIExpression()) #21, !dbg !4018
  br label %8, !dbg !4019

8:                                                ; preds = %8, %6
  br label %8, !dbg !4020, !llvm.loop !4023

9:                                                ; preds = %3
  ret i32 %4, !dbg !4025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCheckForValidListAndQueue() unnamed_addr #3 !dbg !4026 {
  tail call void @vPortEnterCritical() #19, !dbg !4027
  %1 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !4028, !tbaa !1014
  %2 = icmp eq %struct.QueueDefinition* %1, null, !dbg !4031
  br i1 %2, label %3, label %7, !dbg !4032

3:                                                ; preds = %0
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xActiveTimerList1) #19, !dbg !4033
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xActiveTimerList2) #19, !dbg !4035
  store %struct.xLIST* @xActiveTimerList1, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !4036, !tbaa !1014
  store %struct.xLIST* @xActiveTimerList2, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !4037, !tbaa !1014
  %4 = tail call %struct.QueueDefinition* @xQueueGenericCreate(i32 noundef 10, i32 noundef 12, i8 noundef zeroext 0) #19, !dbg !4038
  store %struct.QueueDefinition* %4, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !4040, !tbaa !1014
  %5 = icmp eq %struct.QueueDefinition* %4, null, !dbg !4041
  br i1 %5, label %7, label %6, !dbg !4044

6:                                                ; preds = %3
  tail call void @vQueueAddToRegistry(%struct.QueueDefinition* noundef nonnull %4, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.11, i32 0, i32 0)) #19, !dbg !4045
  br label %7, !dbg !4047

7:                                                ; preds = %0, %6, %3
  tail call void @vPortExitCritical() #19, !dbg !4048
  ret void, !dbg !4049
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvTimerTask(i8* nocapture noundef readnone %0) #0 !dbg !4050 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4052, metadata !DIExpression()), !dbg !4055
  %3 = bitcast i32* %2 to i8*, !dbg !4056
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #21, !dbg !4056
  br label %4, !dbg !4057

4:                                                ; preds = %4, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !4054, metadata !DIExpression(DW_OP_deref)), !dbg !4055
  %5 = call fastcc i32 @prvGetNextExpireTime(i32* noundef nonnull %2) #20, !dbg !4058
  call void @llvm.dbg.value(metadata i32 %5, metadata !4053, metadata !DIExpression()), !dbg !4055
  %6 = load i32, i32* %2, align 4, !dbg !4062, !tbaa !1582
  call void @llvm.dbg.value(metadata i32 %6, metadata !4054, metadata !DIExpression()), !dbg !4055
  tail call fastcc void @prvProcessTimerOrBlockTask(i32 noundef %5, i32 noundef %6) #20, !dbg !4063
  tail call fastcc void @prvProcessReceivedCommands() #20, !dbg !4064
  br label %4, !dbg !4065, !llvm.loop !4066
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @prvGetNextExpireTime(i32* nocapture noundef writeonly %0) unnamed_addr #8 !dbg !4069 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4071, metadata !DIExpression()), !dbg !4073
  %2 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !4074, !tbaa !1014
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !4074
  %4 = load volatile i32, i32* %3, align 4, !dbg !4074, !tbaa !1683
  %5 = icmp eq i32 %4, 0, !dbg !4074
  %6 = zext i1 %5 to i32, !dbg !4074
  store i32 %6, i32* %0, align 4, !dbg !4075, !tbaa !1582
  br i1 %5, label %12, label %7, !dbg !4076

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 2, i32 1, !dbg !4077
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !4077, !tbaa !1762
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 0, !dbg !4077
  %11 = load i32, i32* %10, align 4, !dbg !4077, !tbaa !3141
  call void @llvm.dbg.value(metadata i32 %11, metadata !4072, metadata !DIExpression()), !dbg !4073
  br label %12, !dbg !4080

12:                                               ; preds = %1, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %1 ], !dbg !4081
  call void @llvm.dbg.value(metadata i32 %13, metadata !4072, metadata !DIExpression()), !dbg !4073
  ret i32 %13, !dbg !4082
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessTimerOrBlockTask(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !4083 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4087, metadata !DIExpression()), !dbg !4091
  call void @llvm.dbg.value(metadata i32 %1, metadata !4088, metadata !DIExpression()), !dbg !4091
  %4 = bitcast i32* %3 to i8*, !dbg !4092
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #21, !dbg !4092
  tail call void @vTaskSuspendAll() #19, !dbg !4093
  call void @llvm.dbg.value(metadata i32* %3, metadata !4090, metadata !DIExpression(DW_OP_deref)), !dbg !4091
  %5 = call fastcc i32 @prvSampleTimeNow(i32* noundef nonnull %3) #20, !dbg !4094
  call void @llvm.dbg.value(metadata i32 %5, metadata !4089, metadata !DIExpression()), !dbg !4091
  %6 = load i32, i32* %3, align 4, !dbg !4096, !tbaa !1582
  call void @llvm.dbg.value(metadata i32 %6, metadata !4090, metadata !DIExpression()), !dbg !4091
  %7 = icmp eq i32 %6, 0, !dbg !4098
  br i1 %7, label %8, label %29, !dbg !4099

8:                                                ; preds = %2
  %9 = icmp ne i32 %1, 0, !dbg !4100
  %10 = icmp ult i32 %5, %0
  %11 = select i1 %9, i1 true, i1 %10, !dbg !4103
  br i1 %11, label %14, label %12, !dbg !4103

12:                                               ; preds = %8
  %13 = tail call i32 @xTaskResumeAll() #19, !dbg !4104
  tail call fastcc void @prvProcessExpiredTimer(i32 noundef %0, i32 noundef %5) #20, !dbg !4106
  br label %31, !dbg !4107

14:                                               ; preds = %8
  %15 = icmp eq i32 %1, 0, !dbg !4108
  br i1 %15, label %22, label %16, !dbg !4111

16:                                               ; preds = %14
  %17 = load %struct.xLIST*, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !4112, !tbaa !1014
  %18 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %17, i32 0, i32 0, !dbg !4112
  %19 = load volatile i32, i32* %18, align 4, !dbg !4112, !tbaa !1683
  %20 = icmp eq i32 %19, 0, !dbg !4112
  %21 = zext i1 %20 to i32, !dbg !4112
  call void @llvm.dbg.value(metadata i32 %21, metadata !4088, metadata !DIExpression()), !dbg !4091
  br label %22, !dbg !4114

22:                                               ; preds = %16, %14
  %23 = phi i32 [ %21, %16 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4088, metadata !DIExpression()), !dbg !4091
  %24 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !4115, !tbaa !1014
  %25 = sub i32 %0, %5, !dbg !4116
  tail call void @vQueueWaitForMessageRestricted(%struct.QueueDefinition* noundef %24, i32 noundef %25, i32 noundef %23) #19, !dbg !4117
  %26 = tail call i32 @xTaskResumeAll() #19, !dbg !4118
  %27 = icmp eq i32 %26, 0, !dbg !4120
  br i1 %27, label %28, label %31, !dbg !4121

28:                                               ; preds = %22
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4122, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !4122, !srcloc !4125
  tail call void asm sideeffect "isb", ""() #21, !dbg !4122, !srcloc !4126
  br label %31, !dbg !4127

29:                                               ; preds = %2
  %30 = tail call i32 @xTaskResumeAll() #19, !dbg !4128
  br label %31

31:                                               ; preds = %12, %22, %28, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #21, !dbg !4130
  ret void, !dbg !4130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessReceivedCommands() unnamed_addr #3 !dbg !4131 {
  %1 = alloca %struct.tmrTimerQueueMessage, align 4
  %2 = alloca i32, align 4
  %3 = bitcast %struct.tmrTimerQueueMessage* %1 to i8*, !dbg !4151
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3) #21, !dbg !4151
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %1, metadata !4133, metadata !DIExpression()), !dbg !4152
  %4 = bitcast i32* %2 to i8*, !dbg !4153
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #21, !dbg !4153
  %5 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !4154, !tbaa !1014
  %6 = call i32 @xQueueReceive(%struct.QueueDefinition* noundef %5, i8* noundef nonnull %3, i32 noundef 0) #19, !dbg !4155
  %7 = icmp eq i32 %6, 0, !dbg !4156
  br i1 %7, label %81, label %8, !dbg !4157

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 0
  %10 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 1, i32 0, i32 0
  br label %12, !dbg !4157

12:                                               ; preds = %8, %77
  %13 = load i32, i32* %9, align 4, !dbg !4158, !tbaa !4161
  %14 = icmp sgt i32 %13, -1, !dbg !4163
  br i1 %14, label %15, label %77, !dbg !4164

15:                                               ; preds = %12
  %16 = load %struct.tmrTimerControl*, %struct.tmrTimerControl** %10, align 4, !dbg !4165, !tbaa !1418
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %16, metadata !4147, metadata !DIExpression()), !dbg !4167
  %17 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 1, i32 4, !dbg !4168
  %18 = load %struct.xLIST*, %struct.xLIST** %17, align 4, !dbg !4168, !tbaa !4170
  %19 = icmp eq %struct.xLIST* %18, null, !dbg !4168
  br i1 %19, label %23, label %20, !dbg !4172

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 1, !dbg !4168
  %22 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %21) #19, !dbg !4173
  br label %23, !dbg !4175

23:                                               ; preds = %15, %20
  call void @llvm.dbg.value(metadata i32* %2, metadata !4148, metadata !DIExpression(DW_OP_deref)), !dbg !4167
  %24 = call fastcc i32 @prvSampleTimeNow(i32* noundef nonnull %2) #20, !dbg !4176
  call void @llvm.dbg.value(metadata i32 %24, metadata !4150, metadata !DIExpression()), !dbg !4167
  %25 = load i32, i32* %9, align 4, !dbg !4177, !tbaa !4161
  switch i32 %25, label %77 [
    i32 1, label %26
    i32 6, label %26
    i32 2, label %26
    i32 7, label %26
    i32 0, label %26
    i32 3, label %51
    i32 8, label %51
    i32 4, label %55
    i32 9, label %55
    i32 5, label %68
  ], !dbg !4178

26:                                               ; preds = %23, %23, %23, %23, %23
  %27 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 6, !dbg !4179
  %28 = load i8, i8* %27, align 4, !dbg !4181, !tbaa !4182
  %29 = or i8 %28, 1, !dbg !4181
  store i8 %29, i8* %27, align 4, !dbg !4181, !tbaa !4182
  %30 = load i32, i32* %11, align 4, !dbg !4183, !tbaa !1418
  %31 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 2, !dbg !4185
  %32 = load i32, i32* %31, align 4, !dbg !4185, !tbaa !4186
  %33 = add i32 %32, %30, !dbg !4187
  %34 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef nonnull %16, i32 noundef %33, i32 noundef %24, i32 noundef %30) #20, !dbg !4188
  %35 = icmp eq i32 %34, 0, !dbg !4189
  br i1 %35, label %77, label %36, !dbg !4190

36:                                               ; preds = %26
  %37 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 4, !dbg !4191
  %38 = load void (%struct.tmrTimerControl*)*, void (%struct.tmrTimerControl*)** %37, align 4, !dbg !4191, !tbaa !4193
  call void %38(%struct.tmrTimerControl* noundef nonnull %16) #19, !dbg !4194
  %39 = load i8, i8* %27, align 4, !dbg !4195, !tbaa !4182
  %40 = and i8 %39, 4, !dbg !4197
  %41 = icmp eq i8 %40, 0, !dbg !4198
  br i1 %41, label %77, label %42, !dbg !4199

42:                                               ; preds = %36
  %43 = load i32, i32* %11, align 4, !dbg !4200, !tbaa !1418
  %44 = load i32, i32* %31, align 4, !dbg !4202, !tbaa !4186
  %45 = add i32 %44, %43, !dbg !4203
  %46 = call i32 @xTimerGenericCommand(%struct.tmrTimerControl* noundef nonnull %16, i32 noundef 0, i32 noundef %45, i32* noundef null, i32 noundef 0) #20, !dbg !4204
  call void @llvm.dbg.value(metadata i32 %46, metadata !4149, metadata !DIExpression()), !dbg !4167
  %47 = icmp eq i32 %46, 0, !dbg !4205
  br i1 %47, label %48, label %77, !dbg !4207

48:                                               ; preds = %42
  %49 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4208, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %49, metadata !4014, metadata !DIExpression()) #21, !dbg !4211
  br label %50, !dbg !4212

50:                                               ; preds = %50, %48
  br label %50, !dbg !4213, !llvm.loop !4216

51:                                               ; preds = %23, %23
  %52 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 6, !dbg !4218
  %53 = load i8, i8* %52, align 4, !dbg !4219, !tbaa !4182
  %54 = and i8 %53, -2, !dbg !4219
  store i8 %54, i8* %52, align 4, !dbg !4219, !tbaa !4182
  br label %77, !dbg !4220

55:                                               ; preds = %23, %23
  %56 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 6, !dbg !4221
  %57 = load i8, i8* %56, align 4, !dbg !4222, !tbaa !4182
  %58 = or i8 %57, 1, !dbg !4222
  store i8 %58, i8* %56, align 4, !dbg !4222, !tbaa !4182
  %59 = load i32, i32* %11, align 4, !dbg !4223, !tbaa !1418
  %60 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 2, !dbg !4224
  store i32 %59, i32* %60, align 4, !dbg !4225, !tbaa !4186
  %61 = icmp eq i32 %59, 0, !dbg !4226
  br i1 %61, label %62, label %65, !dbg !4228

62:                                               ; preds = %55
  %63 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4229, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %63, metadata !4014, metadata !DIExpression()) #21, !dbg !4232
  br label %64, !dbg !4233

64:                                               ; preds = %64, %62
  br label %64, !dbg !4234, !llvm.loop !4237

65:                                               ; preds = %55
  %66 = add i32 %59, %24, !dbg !4239
  %67 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef nonnull %16, i32 noundef %66, i32 noundef %24, i32 noundef %24) #20, !dbg !4240
  br label %77, !dbg !4241

68:                                               ; preds = %23
  %69 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 6, !dbg !4242
  %70 = load i8, i8* %69, align 4, !dbg !4242, !tbaa !4182
  %71 = and i8 %70, 2, !dbg !4245
  %72 = icmp eq i8 %71, 0, !dbg !4246
  br i1 %72, label %73, label %75, !dbg !4247

73:                                               ; preds = %68
  %74 = bitcast %struct.tmrTimerControl* %16 to i8*, !dbg !4248
  call void @vPortFree(i8* noundef %74) #19, !dbg !4250
  br label %77, !dbg !4251

75:                                               ; preds = %68
  %76 = and i8 %70, -2, !dbg !4252
  store i8 %76, i8* %69, align 4, !dbg !4252, !tbaa !4182
  br label %77

77:                                               ; preds = %42, %51, %65, %26, %36, %75, %73, %23, %12
  %78 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !4154, !tbaa !1014
  %79 = call i32 @xQueueReceive(%struct.QueueDefinition* noundef %78, i8* noundef nonnull %3, i32 noundef 0) #19, !dbg !4155
  %80 = icmp eq i32 %79, 0, !dbg !4156
  br i1 %80, label %81, label %12, !dbg !4157, !llvm.loop !4254

81:                                               ; preds = %77, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #21, !dbg !4256
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %3) #21, !dbg !4256
  ret void, !dbg !4256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvSampleTimeNow(i32* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !294 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !300, metadata !DIExpression()), !dbg !4257
  %2 = tail call i32 @xTaskGetTickCount() #19, !dbg !4258
  call void @llvm.dbg.value(metadata i32 %2, metadata !301, metadata !DIExpression()), !dbg !4257
  %3 = load i32, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !4259, !tbaa !1032
  %4 = icmp ult i32 %2, %3, !dbg !4261
  br i1 %4, label %5, label %6, !dbg !4262

5:                                                ; preds = %1
  tail call fastcc void @prvSwitchTimerLists() #20, !dbg !4263
  br label %6, !dbg !4265

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 1, %5 ], [ 0, %1 ], !dbg !4266
  store i32 %7, i32* %0, align 4, !dbg !4266, !tbaa !1582
  store i32 %2, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !4267, !tbaa !1032
  ret i32 %2, !dbg !4268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #3 !dbg !4269 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4274, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.value(metadata i32 %1, metadata !4275, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.value(metadata i32 %2, metadata !4276, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.value(metadata i32 %3, metadata !4277, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.value(metadata i32 0, metadata !4278, metadata !DIExpression()), !dbg !4279
  %5 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 1, !dbg !4280
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 0, !dbg !4280
  store i32 %1, i32* %6, align 4, !dbg !4280, !tbaa !4281
  %7 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 1, i32 3, !dbg !4282
  %8 = bitcast i8** %7 to %struct.tmrTimerControl**, !dbg !4282
  store %struct.tmrTimerControl* %0, %struct.tmrTimerControl** %8, align 4, !dbg !4282, !tbaa !4283
  %9 = icmp ugt i32 %1, %2, !dbg !4284
  br i1 %9, label %15, label %10, !dbg !4286

10:                                               ; preds = %4
  %11 = sub i32 %2, %3, !dbg !4287
  %12 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 2, !dbg !4290
  %13 = load i32, i32* %12, align 4, !dbg !4290, !tbaa !4186
  %14 = icmp ult i32 %11, %13, !dbg !4291
  br i1 %14, label %19, label %22, !dbg !4292

15:                                               ; preds = %4
  %16 = icmp uge i32 %2, %3, !dbg !4293
  %17 = icmp ult i32 %1, %3
  %18 = or i1 %16, %17, !dbg !4296
  br i1 %18, label %19, label %22, !dbg !4296

19:                                               ; preds = %15, %10
  %20 = phi %struct.xLIST** [ @pxOverflowTimerList, %10 ], [ @pxCurrentTimerList, %15 ]
  %21 = load %struct.xLIST*, %struct.xLIST** %20, align 4, !dbg !4297, !tbaa !1014
  tail call void @vListInsert(%struct.xLIST* noundef %21, %struct.xLIST_ITEM* noundef nonnull %5) #19, !dbg !4297
  br label %22, !dbg !4298

22:                                               ; preds = %19, %15, %10
  %23 = phi i32 [ 1, %10 ], [ 1, %15 ], [ 0, %19 ], !dbg !4279
  call void @llvm.dbg.value(metadata i32 %23, metadata !4278, metadata !DIExpression()), !dbg !4279
  ret i32 %23, !dbg !4298
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerGenericCommand(%struct.tmrTimerControl* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3, i32 noundef %4) local_unnamed_addr #3 !dbg !4299 {
  %6 = alloca %struct.tmrTimerQueueMessage, align 4
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4303, metadata !DIExpression()), !dbg !4310
  call void @llvm.dbg.value(metadata i32 %1, metadata !4304, metadata !DIExpression()), !dbg !4310
  call void @llvm.dbg.value(metadata i32 %2, metadata !4305, metadata !DIExpression()), !dbg !4310
  call void @llvm.dbg.value(metadata i32* %3, metadata !4306, metadata !DIExpression()), !dbg !4310
  call void @llvm.dbg.value(metadata i32 %4, metadata !4307, metadata !DIExpression()), !dbg !4310
  call void @llvm.dbg.value(metadata i32 0, metadata !4308, metadata !DIExpression()), !dbg !4310
  %7 = bitcast %struct.tmrTimerQueueMessage* %6 to i8*, !dbg !4311
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #21, !dbg !4311
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %6, metadata !4309, metadata !DIExpression()), !dbg !4312
  %8 = icmp eq %struct.tmrTimerControl* %0, null, !dbg !4313
  br i1 %8, label %9, label %12, !dbg !4315

9:                                                ; preds = %5
  %10 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4316, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %10, metadata !4014, metadata !DIExpression()) #21, !dbg !4319
  br label %11, !dbg !4320

11:                                               ; preds = %11, %9
  br label %11, !dbg !4321, !llvm.loop !4324

12:                                               ; preds = %5
  %13 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !4326, !tbaa !1014
  %14 = icmp eq %struct.QueueDefinition* %13, null, !dbg !4328
  br i1 %14, label %30, label %15, !dbg !4329

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 0, !dbg !4330
  store i32 %1, i32* %16, align 4, !dbg !4332, !tbaa !4161
  %17 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 1, i32 0, i32 0, !dbg !4333
  store i32 %2, i32* %17, align 4, !dbg !4334, !tbaa !1418
  %18 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 1, i32 0, i32 1, !dbg !4335
  store %struct.tmrTimerControl* %0, %struct.tmrTimerControl** %18, align 4, !dbg !4336, !tbaa !1418
  %19 = icmp slt i32 %1, 6, !dbg !4337
  br i1 %19, label %20, label %28, !dbg !4339

20:                                               ; preds = %15
  %21 = tail call i32 @xTaskGetSchedulerState() #19, !dbg !4340
  %22 = icmp eq i32 %21, 2, !dbg !4343
  %23 = load %struct.QueueDefinition*, %struct.QueueDefinition** @xTimerQueue, align 4, !dbg !4344, !tbaa !1014
  br i1 %22, label %24, label %26, !dbg !4345

24:                                               ; preds = %20
  %25 = call i32 @xQueueGenericSend(%struct.QueueDefinition* noundef %23, i8* noundef nonnull %7, i32 noundef %4, i32 noundef 0) #19, !dbg !4346
  call void @llvm.dbg.value(metadata i32 %25, metadata !4308, metadata !DIExpression()), !dbg !4310
  br label %30, !dbg !4348

26:                                               ; preds = %20
  %27 = call i32 @xQueueGenericSend(%struct.QueueDefinition* noundef %23, i8* noundef nonnull %7, i32 noundef 0, i32 noundef 0) #19, !dbg !4349
  call void @llvm.dbg.value(metadata i32 %27, metadata !4308, metadata !DIExpression()), !dbg !4310
  br label %30

28:                                               ; preds = %15
  %29 = call i32 @xQueueGenericSendFromISR(%struct.QueueDefinition* noundef nonnull %13, i8* noundef nonnull %7, i32* noundef %3, i32 noundef 0) #19, !dbg !4351
  call void @llvm.dbg.value(metadata i32 %29, metadata !4308, metadata !DIExpression()), !dbg !4310
  br label %30

30:                                               ; preds = %12, %28, %26, %24
  %31 = phi i32 [ %25, %24 ], [ %27, %26 ], [ %29, %28 ], [ 0, %12 ], !dbg !4310
  call void @llvm.dbg.value(metadata i32 %31, metadata !4308, metadata !DIExpression()), !dbg !4310
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #21, !dbg !4353
  ret i32 %31, !dbg !4354
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSwitchTimerLists() unnamed_addr #3 !dbg !4355 {
  %1 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !4362, !tbaa !1014
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !4362
  %3 = load volatile i32, i32* %2, align 4, !dbg !4362, !tbaa !1683
  %4 = icmp eq i32 %3, 0, !dbg !4362
  br i1 %4, label %46, label %5, !dbg !4363

5:                                                ; preds = %0, %41
  %6 = phi %struct.xLIST* [ %42, %41 ], [ %1, %0 ]
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !4364
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !4364, !tbaa !1762
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 0, !dbg !4364
  %10 = load i32, i32* %9, align 4, !dbg !4364, !tbaa !3141
  call void @llvm.dbg.value(metadata i32 %10, metadata !4357, metadata !DIExpression()), !dbg !4366
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !4367
  %12 = load i8*, i8** %11, align 4, !dbg !4367, !tbaa !1763
  %13 = bitcast i8* %12 to %struct.tmrTimerControl*, !dbg !4368
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %13, metadata !4360, metadata !DIExpression()), !dbg !4366
  %14 = getelementptr inbounds i8, i8* %12, i32 4, !dbg !4369
  %15 = bitcast i8* %14 to %struct.xLIST_ITEM*, !dbg !4369
  %16 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %15) #19, !dbg !4370
  %17 = getelementptr inbounds i8, i8* %12, i32 32, !dbg !4371
  %18 = bitcast i8* %17 to void (%struct.tmrTimerControl*)**, !dbg !4371
  %19 = load void (%struct.tmrTimerControl*)*, void (%struct.tmrTimerControl*)** %18, align 4, !dbg !4371, !tbaa !4193
  tail call void %19(%struct.tmrTimerControl* noundef %13) #19, !dbg !4372
  %20 = getelementptr inbounds i8, i8* %12, i32 40, !dbg !4373
  %21 = load i8, i8* %20, align 4, !dbg !4373, !tbaa !4182
  %22 = and i8 %21, 4, !dbg !4375
  %23 = icmp eq i8 %22, 0, !dbg !4376
  br i1 %23, label %41, label %24, !dbg !4377

24:                                               ; preds = %5
  %25 = getelementptr inbounds i8, i8* %12, i32 24, !dbg !4378
  %26 = bitcast i8* %25 to i32*, !dbg !4378
  %27 = load i32, i32* %26, align 4, !dbg !4378, !tbaa !4186
  %28 = add i32 %27, %10, !dbg !4380
  call void @llvm.dbg.value(metadata i32 %28, metadata !4358, metadata !DIExpression()), !dbg !4366
  %29 = icmp ugt i32 %28, %10, !dbg !4381
  br i1 %29, label %30, label %35, !dbg !4383

30:                                               ; preds = %24
  %31 = bitcast i8* %14 to i32*, !dbg !4384
  store i32 %28, i32* %31, align 4, !dbg !4384, !tbaa !4281
  %32 = getelementptr inbounds i8, i8* %12, i32 16, !dbg !4386
  %33 = bitcast i8* %32 to i8**, !dbg !4386
  store i8* %12, i8** %33, align 4, !dbg !4386, !tbaa !4283
  %34 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !4387, !tbaa !1014
  tail call void @vListInsert(%struct.xLIST* noundef %34, %struct.xLIST_ITEM* noundef nonnull %15) #19, !dbg !4388
  br label %41, !dbg !4389

35:                                               ; preds = %24
  %36 = tail call i32 @xTimerGenericCommand(%struct.tmrTimerControl* noundef nonnull %13, i32 noundef 0, i32 noundef %10, i32* noundef null, i32 noundef 0) #20, !dbg !4390
  call void @llvm.dbg.value(metadata i32 %36, metadata !4361, metadata !DIExpression()), !dbg !4366
  %37 = icmp eq i32 %36, 0, !dbg !4392
  br i1 %37, label %38, label %41, !dbg !4394

38:                                               ; preds = %35
  %39 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4395, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %39, metadata !4014, metadata !DIExpression()) #21, !dbg !4398
  br label %40, !dbg !4399

40:                                               ; preds = %40, %38
  br label %40, !dbg !4400, !llvm.loop !4403

41:                                               ; preds = %35, %5, %30
  %42 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !4362, !tbaa !1014
  %43 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %42, i32 0, i32 0, !dbg !4362
  %44 = load volatile i32, i32* %43, align 4, !dbg !4362, !tbaa !1683
  %45 = icmp eq i32 %44, 0, !dbg !4362
  br i1 %45, label %46, label %5, !dbg !4363, !llvm.loop !4405

46:                                               ; preds = %41, %0
  %47 = phi %struct.xLIST* [ %1, %0 ], [ %42, %41 ], !dbg !4362
  call void @llvm.dbg.value(metadata %struct.xLIST* %47, metadata !4359, metadata !DIExpression()), !dbg !4366
  %48 = load %struct.xLIST*, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !4407, !tbaa !1014
  store %struct.xLIST* %48, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !4408, !tbaa !1014
  store %struct.xLIST* %47, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !4409, !tbaa !1014
  ret void, !dbg !4410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessExpiredTimer(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !4411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4415, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata i32 %1, metadata !4416, metadata !DIExpression()), !dbg !4419
  %3 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !4420, !tbaa !1014
  %4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %3, i32 0, i32 2, i32 1, !dbg !4420
  %5 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %4, align 4, !dbg !4420, !tbaa !1762
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 3, !dbg !4420
  %7 = bitcast i8** %6 to %struct.tmrTimerControl**, !dbg !4420
  %8 = load %struct.tmrTimerControl*, %struct.tmrTimerControl** %7, align 4, !dbg !4420, !tbaa !1763
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %8, metadata !4418, metadata !DIExpression()), !dbg !4419
  %9 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %8, i32 0, i32 1, !dbg !4421
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #19, !dbg !4422
  %11 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %8, i32 0, i32 6, !dbg !4423
  %12 = load i8, i8* %11, align 4, !dbg !4423, !tbaa !4182
  %13 = and i8 %12, 4, !dbg !4425
  %14 = icmp eq i8 %13, 0, !dbg !4426
  br i1 %14, label %27, label %15, !dbg !4427

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %8, i32 0, i32 2, !dbg !4428
  %17 = load i32, i32* %16, align 4, !dbg !4428, !tbaa !4186
  %18 = add i32 %17, %0, !dbg !4431
  %19 = tail call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef nonnull %8, i32 noundef %18, i32 noundef %1, i32 noundef %0) #20, !dbg !4432
  %20 = icmp eq i32 %19, 0, !dbg !4433
  br i1 %20, label %29, label %21, !dbg !4434

21:                                               ; preds = %15
  %22 = tail call i32 @xTimerGenericCommand(%struct.tmrTimerControl* noundef nonnull %8, i32 noundef 0, i32 noundef %0, i32* noundef null, i32 noundef 0) #20, !dbg !4435
  call void @llvm.dbg.value(metadata i32 %22, metadata !4417, metadata !DIExpression()), !dbg !4419
  %23 = icmp eq i32 %22, 0, !dbg !4437
  br i1 %23, label %24, label %29, !dbg !4439

24:                                               ; preds = %21
  %25 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4440, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %25, metadata !4014, metadata !DIExpression()) #21, !dbg !4443
  br label %26, !dbg !4444

26:                                               ; preds = %26, %24
  br label %26, !dbg !4445, !llvm.loop !4448

27:                                               ; preds = %2
  %28 = and i8 %12, -2, !dbg !4450
  store i8 %28, i8* %11, align 4, !dbg !4450, !tbaa !4182
  br label %29

29:                                               ; preds = %21, %15, %27
  %30 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %8, i32 0, i32 4, !dbg !4452
  %31 = load void (%struct.tmrTimerControl*)*, void (%struct.tmrTimerControl*)** %30, align 4, !dbg !4452, !tbaa !4193
  tail call void %31(%struct.tmrTimerControl* noundef nonnull %8) #19, !dbg !4453
  ret void, !dbg !4454
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.tmrTimerControl* @xTimerCreate(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, void (%struct.tmrTimerControl*)* noundef %4) local_unnamed_addr #3 !dbg !4455 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4459, metadata !DIExpression()), !dbg !4465
  call void @llvm.dbg.value(metadata i32 %1, metadata !4460, metadata !DIExpression()), !dbg !4465
  call void @llvm.dbg.value(metadata i32 %2, metadata !4461, metadata !DIExpression()), !dbg !4465
  call void @llvm.dbg.value(metadata i8* %3, metadata !4462, metadata !DIExpression()), !dbg !4465
  call void @llvm.dbg.value(metadata void (%struct.tmrTimerControl*)* %4, metadata !4463, metadata !DIExpression()), !dbg !4465
  %6 = tail call i8* @pvPortMalloc(i32 noundef 44) #19, !dbg !4466
  %7 = bitcast i8* %6 to %struct.tmrTimerControl*, !dbg !4467
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %7, metadata !4464, metadata !DIExpression()), !dbg !4465
  %8 = icmp eq i8* %6, null, !dbg !4468
  br i1 %8, label %11, label %9, !dbg !4470

9:                                                ; preds = %5
  %10 = getelementptr inbounds i8, i8* %6, i32 40, !dbg !4471
  store i8 0, i8* %10, align 4, !dbg !4473, !tbaa !4182
  tail call fastcc void @prvInitialiseNewTimer(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, void (%struct.tmrTimerControl*)* noundef %4, %struct.tmrTimerControl* noundef nonnull %7) #20, !dbg !4474
  br label %11, !dbg !4475

11:                                               ; preds = %9, %5
  ret %struct.tmrTimerControl* %7, !dbg !4476
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseNewTimer(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, void (%struct.tmrTimerControl*)* noundef %4, %struct.tmrTimerControl* noundef %5) unnamed_addr #3 !dbg !4477 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4481, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %1, metadata !4482, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i32 %2, metadata !4483, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata i8* %3, metadata !4484, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata void (%struct.tmrTimerControl*)* %4, metadata !4485, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %5, metadata !4486, metadata !DIExpression()), !dbg !4487
  %7 = icmp eq i32 %1, 0, !dbg !4488
  br i1 %7, label %8, label %11, !dbg !4490

8:                                                ; preds = %6
  %9 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4491, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %9, metadata !4014, metadata !DIExpression()) #21, !dbg !4494
  br label %10, !dbg !4495

10:                                               ; preds = %10, %8
  br label %10, !dbg !4496, !llvm.loop !4499

11:                                               ; preds = %6
  %12 = icmp eq %struct.tmrTimerControl* %5, null, !dbg !4501
  br i1 %12, label %24, label %13, !dbg !4503

13:                                               ; preds = %11
  tail call fastcc void @prvCheckForValidListAndQueue() #20, !dbg !4504
  %14 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %5, i32 0, i32 0, !dbg !4506
  store i8* %0, i8** %14, align 4, !dbg !4507, !tbaa !4508
  %15 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %5, i32 0, i32 2, !dbg !4509
  store i32 %1, i32* %15, align 4, !dbg !4510, !tbaa !4186
  %16 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %5, i32 0, i32 3, !dbg !4511
  store i8* %3, i8** %16, align 4, !dbg !4512, !tbaa !4513
  %17 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %5, i32 0, i32 4, !dbg !4514
  store void (%struct.tmrTimerControl*)* %4, void (%struct.tmrTimerControl*)** %17, align 4, !dbg !4515, !tbaa !4193
  %18 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %5, i32 0, i32 1, !dbg !4516
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %18) #19, !dbg !4517
  %19 = icmp eq i32 %2, 0, !dbg !4518
  br i1 %19, label %24, label %20, !dbg !4520

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %5, i32 0, i32 6, !dbg !4521
  %22 = load i8, i8* %21, align 4, !dbg !4523, !tbaa !4182
  %23 = or i8 %22, 4, !dbg !4523
  store i8 %23, i8* %21, align 4, !dbg !4523, !tbaa !4182
  br label %24, !dbg !4524

24:                                               ; preds = %13, %20, %11
  ret void, !dbg !4525
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.tskTaskControlBlock* @xTimerGetTimerDaemonTaskHandle() local_unnamed_addr #3 !dbg !4526 {
  %1 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @xTimerTaskHandle, align 4, !dbg !4529, !tbaa !1014
  %2 = icmp eq %struct.tskTaskControlBlock* %1, null, !dbg !4529
  br i1 %2, label %3, label %6, !dbg !4531

3:                                                ; preds = %0
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4532, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %4, metadata !4014, metadata !DIExpression()) #21, !dbg !4535
  br label %5, !dbg !4536

5:                                                ; preds = %5, %3
  br label %5, !dbg !4537, !llvm.loop !4540

6:                                                ; preds = %0
  ret %struct.tskTaskControlBlock* %1, !dbg !4542
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerGetPeriod(%struct.tmrTimerControl* noundef readonly %0) local_unnamed_addr #3 !dbg !4543 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4547, metadata !DIExpression()), !dbg !4549
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4548, metadata !DIExpression()), !dbg !4549
  %2 = icmp eq %struct.tmrTimerControl* %0, null, !dbg !4550
  br i1 %2, label %3, label %6, !dbg !4552

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4553, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %4, metadata !4014, metadata !DIExpression()) #21, !dbg !4556
  br label %5, !dbg !4557

5:                                                ; preds = %5, %3
  br label %5, !dbg !4558, !llvm.loop !4561

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 2, !dbg !4563
  %8 = load i32, i32* %7, align 4, !dbg !4563, !tbaa !4186
  ret i32 %8, !dbg !4564
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTimerSetReloadMode(%struct.tmrTimerControl* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !4565 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4569, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata i32 %1, metadata !4570, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4571, metadata !DIExpression()), !dbg !4572
  %3 = icmp eq %struct.tmrTimerControl* %0, null, !dbg !4573
  br i1 %3, label %4, label %7, !dbg !4575

4:                                                ; preds = %2
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4576, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %5, metadata !4014, metadata !DIExpression()) #21, !dbg !4579
  br label %6, !dbg !4580

6:                                                ; preds = %6, %4
  br label %6, !dbg !4581, !llvm.loop !4584

7:                                                ; preds = %2
  tail call void @vPortEnterCritical() #19, !dbg !4586
  %8 = icmp eq i32 %1, 0, !dbg !4587
  %9 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 6, !dbg !4590
  %10 = load i8, i8* %9, align 4, !dbg !4590, !tbaa !4182
  %11 = and i8 %10, -5, !dbg !4591
  %12 = select i1 %8, i8 0, i8 4, !dbg !4591
  %13 = or i8 %11, %12, !dbg !4591
  store i8 %13, i8* %9, align 4, !dbg !4590, !tbaa !4182
  tail call void @vPortExitCritical() #19, !dbg !4592
  ret void, !dbg !4593
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTimerGetReloadMode(%struct.tmrTimerControl* noundef readonly %0) local_unnamed_addr #3 !dbg !4594 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4598, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4599, metadata !DIExpression()), !dbg !4601
  %2 = icmp eq %struct.tmrTimerControl* %0, null, !dbg !4602
  br i1 %2, label %3, label %6, !dbg !4604

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4605, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %4, metadata !4014, metadata !DIExpression()) #21, !dbg !4608
  br label %5, !dbg !4609

5:                                                ; preds = %5, %3
  br label %5, !dbg !4610, !llvm.loop !4613

6:                                                ; preds = %1
  tail call void @vPortEnterCritical() #19, !dbg !4615
  %7 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 6, !dbg !4616
  %8 = load i8, i8* %7, align 4, !dbg !4616, !tbaa !4182
  %9 = lshr i8 %8, 2
  %10 = and i8 %9, 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 %11, metadata !4600, metadata !DIExpression()), !dbg !4601
  tail call void @vPortExitCritical() #19, !dbg !4619
  ret i32 %11, !dbg !4620
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerGetExpiryTime(%struct.tmrTimerControl* noundef readonly %0) local_unnamed_addr #3 !dbg !4621 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4623, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4624, metadata !DIExpression()), !dbg !4626
  %2 = icmp eq %struct.tmrTimerControl* %0, null, !dbg !4627
  br i1 %2, label %3, label %6, !dbg !4629

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4630, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %4, metadata !4014, metadata !DIExpression()) #21, !dbg !4633
  br label %5, !dbg !4634

5:                                                ; preds = %5, %3
  br label %5, !dbg !4635, !llvm.loop !4638

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 1, i32 0, !dbg !4640
  %8 = load i32, i32* %7, align 4, !dbg !4640, !tbaa !4281
  call void @llvm.dbg.value(metadata i32 %8, metadata !4625, metadata !DIExpression()), !dbg !4626
  ret i32 %8, !dbg !4641
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pcTimerGetName(%struct.tmrTimerControl* noundef readonly %0) local_unnamed_addr #3 !dbg !4642 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4646, metadata !DIExpression()), !dbg !4648
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4647, metadata !DIExpression()), !dbg !4648
  %2 = icmp eq %struct.tmrTimerControl* %0, null, !dbg !4649
  br i1 %2, label %3, label %6, !dbg !4651

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4652, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %4, metadata !4014, metadata !DIExpression()) #21, !dbg !4655
  br label %5, !dbg !4656

5:                                                ; preds = %5, %3
  br label %5, !dbg !4657, !llvm.loop !4660

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 0, !dbg !4662
  %8 = load i8*, i8** %7, align 4, !dbg !4662, !tbaa !4508
  ret i8* %8, !dbg !4663
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerIsTimerActive(%struct.tmrTimerControl* noundef readonly %0) local_unnamed_addr #3 !dbg !4664 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4668, metadata !DIExpression()), !dbg !4671
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4670, metadata !DIExpression()), !dbg !4671
  %2 = icmp eq %struct.tmrTimerControl* %0, null, !dbg !4672
  br i1 %2, label %3, label %6, !dbg !4674

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4675, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %4, metadata !4014, metadata !DIExpression()) #21, !dbg !4678
  br label %5, !dbg !4679

5:                                                ; preds = %5, %3
  br label %5, !dbg !4680, !llvm.loop !4683

6:                                                ; preds = %1
  tail call void @vPortEnterCritical() #19, !dbg !4685
  %7 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 6, !dbg !4686
  %8 = load i8, i8* %7, align 4, !dbg !4686, !tbaa !4182
  %9 = and i8 %8, 1, !dbg !4689
  %10 = zext i8 %9 to i32
  call void @llvm.dbg.value(metadata i32 %10, metadata !4669, metadata !DIExpression()), !dbg !4671
  tail call void @vPortExitCritical() #19, !dbg !4690
  ret i32 %10, !dbg !4691
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvTimerGetTimerID(%struct.tmrTimerControl* noundef readonly %0) local_unnamed_addr #3 !dbg !4692 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4697, metadata !DIExpression()), !dbg !4700
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4698, metadata !DIExpression()), !dbg !4700
  %2 = icmp eq %struct.tmrTimerControl* %0, null, !dbg !4701
  br i1 %2, label %3, label %6, !dbg !4703

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4704, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %4, metadata !4014, metadata !DIExpression()) #21, !dbg !4707
  br label %5, !dbg !4708

5:                                                ; preds = %5, %3
  br label %5, !dbg !4709, !llvm.loop !4712

6:                                                ; preds = %1
  tail call void @vPortEnterCritical() #19, !dbg !4714
  %7 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 3, !dbg !4715
  %8 = load i8*, i8** %7, align 4, !dbg !4715, !tbaa !4513
  call void @llvm.dbg.value(metadata i8* %8, metadata !4699, metadata !DIExpression()), !dbg !4700
  tail call void @vPortExitCritical() #19, !dbg !4717
  ret i8* %8, !dbg !4718
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTimerSetTimerID(%struct.tmrTimerControl* noundef writeonly %0, i8* noundef %1) local_unnamed_addr #3 !dbg !4719 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4723, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i8* %1, metadata !4724, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4725, metadata !DIExpression()), !dbg !4726
  %3 = icmp eq %struct.tmrTimerControl* %0, null, !dbg !4727
  br i1 %3, label %4, label %7, !dbg !4729

4:                                                ; preds = %2
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4730, !srcloc !4017
  call void @llvm.dbg.value(metadata i32 %5, metadata !4014, metadata !DIExpression()) #21, !dbg !4733
  br label %6, !dbg !4734

6:                                                ; preds = %6, %4
  br label %6, !dbg !4735, !llvm.loop !4738

7:                                                ; preds = %2
  tail call void @vPortEnterCritical() #19, !dbg !4740
  %8 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 3, !dbg !4741
  store i8* %1, i8** %8, align 4, !dbg !4743, !tbaa !4513
  tail call void @vPortExitCritical() #19, !dbg !4744
  ret void, !dbg !4745
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxTimerGetTimerNumber(%struct.tmrTimerControl* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !4746 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4748, metadata !DIExpression()), !dbg !4749
  %2 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 5, !dbg !4750
  %3 = load i32, i32* %2, align 4, !dbg !4750, !tbaa !4751
  ret i32 %3, !dbg !4752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vTimerSetTimerNumber(%struct.tmrTimerControl* nocapture noundef writeonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !4753 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !4757, metadata !DIExpression()), !dbg !4759
  call void @llvm.dbg.value(metadata i32 %1, metadata !4758, metadata !DIExpression()), !dbg !4759
  %3 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 5, !dbg !4760
  store i32 %1, i32* %3, align 4, !dbg !4761, !tbaa !4751
  ret void, !dbg !4762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vListInitialise(%struct.xLIST* noundef %0) local_unnamed_addr #7 !dbg !4763 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !4771, metadata !DIExpression()), !dbg !4772
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !4773
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !4774
  %4 = bitcast %struct.xLIST_ITEM** %3 to %struct.xMINI_LIST_ITEM**, !dbg !4775
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %4, align 4, !dbg !4775, !tbaa !2462
  %5 = getelementptr inbounds %struct.xMINI_LIST_ITEM, %struct.xMINI_LIST_ITEM* %2, i32 0, i32 0, !dbg !4776
  store i32 -1, i32* %5, align 4, !dbg !4777, !tbaa !4778
  %6 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !4779
  %7 = bitcast %struct.xLIST_ITEM** %6 to %struct.xMINI_LIST_ITEM**, !dbg !4780
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %7, align 4, !dbg !4780, !tbaa !1762
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !4781
  %9 = bitcast %struct.xLIST_ITEM** %8 to %struct.xMINI_LIST_ITEM**, !dbg !4782
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %9, align 4, !dbg !4782, !tbaa !4783
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !4784
  store volatile i32 0, i32* %10, align 4, !dbg !4785, !tbaa !1683
  ret void, !dbg !4786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vListInitialiseItem(%struct.xLIST_ITEM* nocapture noundef writeonly %0) local_unnamed_addr #11 !dbg !4787 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !4792, metadata !DIExpression()), !dbg !4793
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !4794
  store %struct.xLIST* null, %struct.xLIST** %2, align 4, !dbg !4795, !tbaa !4796
  ret void, !dbg !4797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #7 !dbg !4798 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !4802, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !4803, metadata !DIExpression()), !dbg !4805
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !4806
  %4 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %3, align 4, !dbg !4806, !tbaa !2462
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %4, metadata !4804, metadata !DIExpression()), !dbg !4805
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !4807
  store %struct.xLIST_ITEM* %4, %struct.xLIST_ITEM** %5, align 4, !dbg !4808, !tbaa !2463
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %4, i32 0, i32 2, !dbg !4809
  %7 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !4809, !tbaa !4810
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !4811
  store %struct.xLIST_ITEM* %7, %struct.xLIST_ITEM** %8, align 4, !dbg !4812, !tbaa !4810
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !4813, !tbaa !4810
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !4814
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %10, align 4, !dbg !4815, !tbaa !2463
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %6, align 4, !dbg !4816, !tbaa !4810
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !4817
  store %struct.xLIST* %0, %struct.xLIST** %11, align 4, !dbg !4818, !tbaa !4796
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !4819
  %13 = load volatile i32, i32* %12, align 4, !dbg !4820, !tbaa !1683
  %14 = add i32 %13, 1, !dbg !4820
  store volatile i32 %14, i32* %12, align 4, !dbg !4820, !tbaa !1683
  ret void, !dbg !4821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #7 !dbg !4822 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !4824, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !4825, metadata !DIExpression()), !dbg !4828
  %3 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 0, !dbg !4829
  %4 = load i32, i32* %3, align 4, !dbg !4829, !tbaa !3141
  call void @llvm.dbg.value(metadata i32 %4, metadata !4827, metadata !DIExpression()), !dbg !4828
  %5 = icmp eq i32 %4, -1, !dbg !4830
  br i1 %5, label %6, label %11, !dbg !4832

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !4833
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !4833, !tbaa !4783
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %8, metadata !4826, metadata !DIExpression()), !dbg !4828
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 1
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %9, align 4, !dbg !4835, !tbaa !2463
  br label %21, !dbg !4836

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !4837
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !4840
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %13, metadata !4826, metadata !DIExpression()), !dbg !4828
  br label %14, !dbg !4841

14:                                               ; preds = %14, %11
  %15 = phi %struct.xLIST_ITEM* [ %13, %11 ], [ %17, %14 ], !dbg !4842
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %15, metadata !4826, metadata !DIExpression()), !dbg !4828
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %15, i32 0, i32 1, !dbg !4843
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !4843, !tbaa !2463
  %18 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %17, i32 0, i32 0, !dbg !4845
  %19 = load i32, i32* %18, align 4, !dbg !4845, !tbaa !3141
  %20 = icmp ugt i32 %19, %4, !dbg !4846
  br i1 %20, label %21, label %14, !dbg !4847, !llvm.loop !4848

21:                                               ; preds = %14, %6
  %22 = phi %struct.xLIST_ITEM* [ %10, %6 ], [ %17, %14 ], !dbg !4835
  %23 = phi %struct.xLIST_ITEM* [ %8, %6 ], [ %15, %14 ], !dbg !4850
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %23, metadata !4826, metadata !DIExpression()), !dbg !4828
  %24 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %23, i32 0, i32 1, !dbg !4835
  %25 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !4851
  store %struct.xLIST_ITEM* %22, %struct.xLIST_ITEM** %25, align 4, !dbg !4852, !tbaa !2463
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 2, !dbg !4853
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %26, align 4, !dbg !4854, !tbaa !4810
  %27 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !4855
  store %struct.xLIST_ITEM* %23, %struct.xLIST_ITEM** %27, align 4, !dbg !4856, !tbaa !4810
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %24, align 4, !dbg !4857, !tbaa !2463
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !4858
  store %struct.xLIST* %0, %struct.xLIST** %28, align 4, !dbg !4859, !tbaa !4796
  %29 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !4860
  %30 = load volatile i32, i32* %29, align 4, !dbg !4861, !tbaa !1683
  %31 = add i32 %30, 1, !dbg !4861
  store volatile i32 %31, i32* %29, align 4, !dbg !4861, !tbaa !1683
  ret void, !dbg !4862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @uxListRemove(%struct.xLIST_ITEM* noundef %0) local_unnamed_addr #7 !dbg !4863 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !4867, metadata !DIExpression()), !dbg !4869
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !4870
  %3 = load %struct.xLIST*, %struct.xLIST** %2, align 4, !dbg !4870, !tbaa !4796
  call void @llvm.dbg.value(metadata %struct.xLIST* %3, metadata !4868, metadata !DIExpression()), !dbg !4869
  %4 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 2, !dbg !4871
  %5 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %4, align 4, !dbg !4871, !tbaa !4810
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 1, !dbg !4872
  %7 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !4872, !tbaa !2463
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %7, i32 0, i32 2, !dbg !4873
  store %struct.xLIST_ITEM* %5, %struct.xLIST_ITEM** %8, align 4, !dbg !4874, !tbaa !4810
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %4, align 4, !dbg !4875, !tbaa !4810
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !4876
  store %struct.xLIST_ITEM* %7, %struct.xLIST_ITEM** %10, align 4, !dbg !4877, !tbaa !2463
  %11 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %3, i32 0, i32 1, !dbg !4878
  %12 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %11, align 4, !dbg !4878, !tbaa !2462
  %13 = icmp eq %struct.xLIST_ITEM* %12, %0, !dbg !4880
  br i1 %13, label %14, label %15, !dbg !4881

14:                                               ; preds = %1
  store %struct.xLIST_ITEM* %9, %struct.xLIST_ITEM** %11, align 4, !dbg !4882, !tbaa !2462
  br label %15, !dbg !4884

15:                                               ; preds = %1, %14
  store %struct.xLIST* null, %struct.xLIST** %2, align 4, !dbg !4885, !tbaa !4796
  %16 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %3, i32 0, i32 0, !dbg !4886
  %17 = load volatile i32, i32* %16, align 4, !dbg !4887, !tbaa !1683
  %18 = add i32 %17, -1, !dbg !4887
  store volatile i32 %18, i32* %16, align 4, !dbg !4887, !tbaa !1683
  %19 = load volatile i32, i32* %16, align 4, !dbg !4888, !tbaa !1683
  ret i32 %19, !dbg !4889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local nonnull i32* @pxPortInitialiseStack(i32* noundef writeonly %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !4890 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4894, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !4895, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata i8* %2, metadata !4896, metadata !DIExpression()), !dbg !4897
  %4 = getelementptr inbounds i32, i32* %0, i32 -1, !dbg !4898
  call void @llvm.dbg.value(metadata i32* %4, metadata !4894, metadata !DIExpression()), !dbg !4897
  store i32 16777216, i32* %4, align 4, !dbg !4899, !tbaa !1032
  %5 = getelementptr inbounds i32, i32* %0, i32 -2, !dbg !4900
  call void @llvm.dbg.value(metadata i32* %5, metadata !4894, metadata !DIExpression()), !dbg !4897
  %6 = ptrtoint void (i8*)* %1 to i32, !dbg !4901
  %7 = and i32 %6, -2, !dbg !4902
  store i32 %7, i32* %5, align 4, !dbg !4903, !tbaa !1032
  %8 = getelementptr inbounds i32, i32* %0, i32 -3, !dbg !4904
  call void @llvm.dbg.value(metadata i32* %8, metadata !4894, metadata !DIExpression()), !dbg !4897
  store i32 ptrtoint (void ()* @prvTaskExitError to i32), i32* %8, align 4, !dbg !4905, !tbaa !1032
  %9 = getelementptr inbounds i32, i32* %0, i32 -8, !dbg !4906
  call void @llvm.dbg.value(metadata i32* %9, metadata !4894, metadata !DIExpression()), !dbg !4897
  %10 = ptrtoint i8* %2 to i32, !dbg !4907
  store i32 %10, i32* %9, align 4, !dbg !4908, !tbaa !1032
  %11 = getelementptr inbounds i32, i32* %0, i32 -9, !dbg !4909
  call void @llvm.dbg.value(metadata i32* %11, metadata !4894, metadata !DIExpression()), !dbg !4897
  store i32 -3, i32* %11, align 4, !dbg !4910, !tbaa !1032
  %12 = getelementptr inbounds i32, i32* %0, i32 -17, !dbg !4911
  call void @llvm.dbg.value(metadata i32* %12, metadata !4894, metadata !DIExpression()), !dbg !4897
  ret i32* %12, !dbg !4912
}

; Function Attrs: noinline nounwind optsize
define internal void @prvTaskExitError() #3 !dbg !4913 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4916
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4916
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4915, metadata !DIExpression()), !dbg !4917
  store volatile i32 0, i32* %1, align 4, !dbg !4917, !tbaa !1032
  %3 = load i32, i32* @uxCriticalNesting, align 4, !dbg !4918, !tbaa !1582
  %4 = icmp eq i32 %3, -1, !dbg !4918
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4920
  br i1 %4, label %7, label %6, !dbg !4921

6:                                                ; preds = %0, %6
  br label %6, !dbg !4922, !llvm.loop !4926

7:                                                ; preds = %0, %7
  %8 = load volatile i32, i32* %1, align 4, !dbg !4928, !tbaa !1032
  %9 = icmp eq i32 %8, 0, !dbg !4929
  br i1 %9, label %7, label %10, !dbg !4930, !llvm.loop !4931

10:                                               ; preds = %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4933
  ret void, !dbg !4933
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @SVC_Handler() #12 !dbg !4934 {
  tail call void asm sideeffect "\09ldr\09r3, pxCurrentTCBConst2\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\0A\09msr psp, r0\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\0A\09mov r0, #0 \09\09\09\09\09\09\0A\09msr\09basepri, r0\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\0A\09.align 4\09\09\09\09\09\09\0ApxCurrentTCBConst2: .word pxCurrentTCB\09\09\09\09\0A", ""() #21, !dbg !4935, !srcloc !4936
  unreachable, !dbg !4937
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xPortStartScheduler() local_unnamed_addr #3 !dbg !4938 {
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = load volatile i32, i32* inttoptr (i32 -536810240 to i32*), align 256, !dbg !4945, !tbaa !1032
  %4 = icmp eq i32 %3, 1091551857, !dbg !4945
  br i1 %4, label %5, label %8, !dbg !4947

5:                                                ; preds = %0
  %6 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4948, !srcloc !4954
  call void @llvm.dbg.value(metadata i32 %6, metadata !4951, metadata !DIExpression()) #21, !dbg !4955
  br label %7, !dbg !4956

7:                                                ; preds = %7, %5
  br label %7, !dbg !4957, !llvm.loop !4960

8:                                                ; preds = %0
  %9 = load volatile i32, i32* inttoptr (i32 -536810240 to i32*), align 256, !dbg !4962, !tbaa !1032
  %10 = icmp eq i32 %9, 1091551856, !dbg !4962
  br i1 %10, label %11, label %14, !dbg !4964

11:                                               ; preds = %8
  %12 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !4965, !srcloc !4954
  call void @llvm.dbg.value(metadata i32 %12, metadata !4951, metadata !DIExpression()) #21, !dbg !4968
  br label %13, !dbg !4969

13:                                               ; preds = %13, %11
  br label %13, !dbg !4970, !llvm.loop !4973

14:                                               ; preds = %8
  %15 = bitcast i32* %1 to i8*, !dbg !4975
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15), !dbg !4975
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4940, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -536812544 to i8*), metadata !4942, metadata !DIExpression()), !dbg !4977
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2), !dbg !4978
  call void @llvm.dbg.declare(metadata i8* %2, metadata !4944, metadata !DIExpression()), !dbg !4979
  %16 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !4980, !tbaa !1418
  %17 = zext i8 %16 to i32, !dbg !4980
  store volatile i32 %17, i32* %1, align 4, !dbg !4981, !tbaa !1032
  store volatile i8 -1, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !4982, !tbaa !1418
  %18 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !4983, !tbaa !1418
  store volatile i8 %18, i8* %2, align 1, !dbg !4984, !tbaa !1418
  %19 = load volatile i8, i8* %2, align 1, !dbg !4985, !tbaa !1418
  %20 = and i8 %19, 80, !dbg !4986
  store i8 %20, i8* @ucMaxSysCallPriority, align 1, !dbg !4987, !tbaa !1418
  store i32 7, i32* @ulMaxPRIGROUPValue, align 4, !dbg !4988, !tbaa !1032
  %21 = load volatile i8, i8* %2, align 1, !dbg !4989, !tbaa !1418
  %22 = icmp slt i8 %21, 0, !dbg !4990
  br i1 %22, label %23, label %32, !dbg !4991

23:                                               ; preds = %14, %23
  %24 = phi i32 [ %25, %23 ], [ 7, %14 ], !dbg !4992
  %25 = add i32 %24, -1, !dbg !4992
  store i32 %25, i32* @ulMaxPRIGROUPValue, align 4, !dbg !4992, !tbaa !1032
  %26 = load volatile i8, i8* %2, align 1, !dbg !4994, !tbaa !1418
  %27 = shl i8 %26, 1, !dbg !4994
  store volatile i8 %27, i8* %2, align 1, !dbg !4994, !tbaa !1418
  %28 = load volatile i8, i8* %2, align 1, !dbg !4989, !tbaa !1418
  %29 = icmp slt i8 %28, 0, !dbg !4990
  br i1 %29, label %23, label %30, !dbg !4991, !llvm.loop !4995

30:                                               ; preds = %23
  %31 = icmp eq i32 %25, 3, !dbg !4997
  br i1 %31, label %35, label %32, !dbg !5000

32:                                               ; preds = %14, %30
  %33 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5001, !srcloc !4954
  call void @llvm.dbg.value(metadata i32 %33, metadata !4951, metadata !DIExpression()) #21, !dbg !5004
  br label %34, !dbg !5005

34:                                               ; preds = %34, %32
  br label %34, !dbg !5006, !llvm.loop !5009

35:                                               ; preds = %30
  store i32 768, i32* @ulMaxPRIGROUPValue, align 4, !dbg !5011, !tbaa !1032
  %36 = load volatile i32, i32* %1, align 4, !dbg !5012, !tbaa !1032
  %37 = trunc i32 %36 to i8, !dbg !5012
  store volatile i8 %37, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !5013, !tbaa !1418
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2), !dbg !5014
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15), !dbg !5014
  %38 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !5015, !tbaa !1032
  %39 = or i32 %38, 15728640, !dbg !5015
  store volatile i32 %39, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !5015, !tbaa !1032
  %40 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !5016, !tbaa !1032
  %41 = or i32 %40, -268435456, !dbg !5016
  store volatile i32 %41, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !5016, !tbaa !1032
  tail call void @vPortSetupTimerInterrupt() #20, !dbg !5017
  store i32 0, i32* @uxCriticalNesting, align 4, !dbg !5018, !tbaa !1582
  tail call void @vPortEnableVFP() #20, !dbg !5019
  %42 = load volatile i32, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !5020, !tbaa !1032
  %43 = or i32 %42, -1073741824, !dbg !5020
  store volatile i32 %43, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !5020, !tbaa !1032
  tail call void @prvPortStartFirstTask() #20, !dbg !5021
  tail call void @vTaskSwitchContext() #19, !dbg !5022
  tail call void @prvTaskExitError() #20, !dbg !5023
  ret i32 0, !dbg !5024
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @vPortSetupTimerInterrupt() local_unnamed_addr #3 !dbg !5025 {
  store volatile i32 0, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !5026, !tbaa !1032
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !5027, !tbaa !1032
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !5028, !tbaa !1032
  %2 = udiv i32 %1, 1000, !dbg !5029
  %3 = add nsw i32 %2, -1, !dbg !5030
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !5031, !tbaa !1032
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !5032, !tbaa !1032
  ret void, !dbg !5033
}

; Function Attrs: naked noinline nounwind optsize
define internal void @vPortEnableVFP() #12 !dbg !5034 {
  tail call void asm sideeffect "\09ldr.w r0, =0xE000ED88\09\09\0A\09ldr r1, [r0]\09\09\09\09\0A\09\09\09\09\09\09\09\09\0A\09orr r1, r1, #( 0xf << 20 )\09\0A\09str r1, [r0]\09\09\09\09\0A\09bx r14\09\09\09\09\09\09", ""() #21, !dbg !5035, !srcloc !5036
  unreachable, !dbg !5037
}

; Function Attrs: naked noinline nounwind optsize
define internal void @prvPortStartFirstTask() #12 !dbg !5038 {
  tail call void asm sideeffect " ldr r0, =0xE000ED08 \09\0A ldr r0, [r0] \09\09\09\0A ldr r0, [r0] \09\09\09\0A msr msp, r0\09\09\09\0A mov r0, #0\09\09\09\0A msr control, r0\09\09\0A cpsie i\09\09\09\09\0A cpsie f\09\09\09\09\0A dsb\09\09\09\09\09\0A isb\09\09\09\09\09\0A svc 0\09\09\09\09\09\0A nop\09\09\09\09\09\0A", ""() #21, !dbg !5039, !srcloc !5040
  unreachable, !dbg !5041
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEndScheduler() local_unnamed_addr #3 !dbg !5042 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !5043, !tbaa !1582
  %2 = icmp eq i32 %1, 1000, !dbg !5043
  br i1 %2, label %6, label %3, !dbg !5045

3:                                                ; preds = %0
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5046, !srcloc !4954
  call void @llvm.dbg.value(metadata i32 %4, metadata !4951, metadata !DIExpression()) #21, !dbg !5049
  br label %5, !dbg !5050

5:                                                ; preds = %5, %3
  br label %5, !dbg !5051, !llvm.loop !5054

6:                                                ; preds = %0
  ret void, !dbg !5056
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEnterCritical() local_unnamed_addr #3 !dbg !5057 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5058, !srcloc !4954
  call void @llvm.dbg.value(metadata i32 %1, metadata !4951, metadata !DIExpression()) #21, !dbg !5060
  %2 = load i32, i32* @uxCriticalNesting, align 4, !dbg !5061, !tbaa !1582
  %3 = add i32 %2, 1, !dbg !5061
  store i32 %3, i32* @uxCriticalNesting, align 4, !dbg !5061, !tbaa !1582
  %4 = icmp eq i32 %2, 0, !dbg !5062
  br i1 %4, label %5, label %12, !dbg !5064

5:                                                ; preds = %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5065, !tbaa !1032
  %7 = and i32 %6, 255, !dbg !5065
  %8 = icmp eq i32 %7, 0, !dbg !5065
  br i1 %8, label %12, label %9, !dbg !5068

9:                                                ; preds = %5
  %10 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5069, !srcloc !4954
  call void @llvm.dbg.value(metadata i32 %10, metadata !4951, metadata !DIExpression()) #21, !dbg !5072
  br label %11, !dbg !5073

11:                                               ; preds = %11, %9
  br label %11, !dbg !5074, !llvm.loop !5077

12:                                               ; preds = %5, %0
  ret void, !dbg !5079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortExitCritical() local_unnamed_addr #3 !dbg !5080 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !5081, !tbaa !1582
  %2 = icmp eq i32 %1, 0, !dbg !5081
  br i1 %2, label %3, label %6, !dbg !5083

3:                                                ; preds = %0
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5084, !srcloc !4954
  call void @llvm.dbg.value(metadata i32 %4, metadata !4951, metadata !DIExpression()) #21, !dbg !5087
  br label %5, !dbg !5088

5:                                                ; preds = %5, %3
  br label %5, !dbg !5089, !llvm.loop !5092

6:                                                ; preds = %0
  %7 = add i32 %1, -1, !dbg !5094
  store i32 %7, i32* @uxCriticalNesting, align 4, !dbg !5094, !tbaa !1582
  %8 = icmp eq i32 %7, 0, !dbg !5095
  br i1 %8, label %9, label %10, !dbg !5097

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 0, metadata !5098, metadata !DIExpression()) #21, !dbg !5101
  tail call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 0) #21, !dbg !5104, !srcloc !5105
  br label %10, !dbg !5106

10:                                               ; preds = %9, %6
  ret void, !dbg !5107
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @PendSV_Handler() #12 !dbg !5108 {
  tail call void asm sideeffect "\09mrs r0, psp\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr\09r3, pxCurrentTCBConst\09\09\09\0A\09ldr\09r2, [r3]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vstmdbeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb r0!, {r4-r11, r14}\09\09\09\0A\09str r0, [r2]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb sp!, {r0, r3}\09\09\09\09\09\0A\09mov r0, $0 \09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09bl vTaskSwitchContext\09\09\09\09\0A\09mov r0, #0\09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09ldmia sp!, {r0, r3}\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vldmiaeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09msr psp, r0\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09.align 4\09\09\09\09\09\09\09\0ApxCurrentTCBConst: .word pxCurrentTCB\09\0A", "i"(i32 80) #21, !dbg !5109, !srcloc !5110
  unreachable, !dbg !5111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SysTick_Handler() local_unnamed_addr #3 !dbg !5112 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5113, !srcloc !4954
  call void @llvm.dbg.value(metadata i32 %1, metadata !4951, metadata !DIExpression()) #21, !dbg !5115
  %2 = tail call i32 @xTaskIncrementTick() #19, !dbg !5116
  %3 = icmp eq i32 %2, 0, !dbg !5119
  br i1 %3, label %5, label %4, !dbg !5120

4:                                                ; preds = %0
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5121, !tbaa !1032
  br label %5, !dbg !5123

5:                                                ; preds = %4, %0
  call void @llvm.dbg.value(metadata i32 0, metadata !5098, metadata !DIExpression()) #21, !dbg !5124
  tail call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 0) #21, !dbg !5126, !srcloc !5105
  ret void, !dbg !5127
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortValidateInterruptPriority() local_unnamed_addr #3 !dbg !5128 {
  %1 = tail call i32 asm sideeffect "mrs $0, ipsr", "=r,~{memory}"() #21, !dbg !5132, !srcloc !5133
  call void @llvm.dbg.value(metadata i32 %1, metadata !5130, metadata !DIExpression()), !dbg !5134
  %2 = icmp ugt i32 %1, 15, !dbg !5135
  br i1 %2, label %3, label %11, !dbg !5137

3:                                                ; preds = %0
  %4 = getelementptr inbounds i8, i8* inttoptr (i32 -536812560 to i8*), i32 %1, !dbg !5138
  %5 = load volatile i8, i8* %4, align 1, !dbg !5138, !tbaa !1418
  call void @llvm.dbg.value(metadata i8 %5, metadata !5131, metadata !DIExpression()), !dbg !5134
  %6 = load i8, i8* @ucMaxSysCallPriority, align 1, !dbg !5140, !tbaa !1418
  %7 = icmp ult i8 %5, %6, !dbg !5140
  br i1 %7, label %8, label %11, !dbg !5142

8:                                                ; preds = %3
  %9 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5143, !srcloc !4954
  call void @llvm.dbg.value(metadata i32 %9, metadata !4951, metadata !DIExpression()) #21, !dbg !5146
  br label %10, !dbg !5147

10:                                               ; preds = %10, %8
  br label %10, !dbg !5148, !llvm.loop !5151

11:                                               ; preds = %3, %0
  %12 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !5153, !tbaa !1032
  %13 = and i32 %12, 1792, !dbg !5153
  %14 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !5153, !tbaa !1032
  %15 = icmp ugt i32 %13, %14, !dbg !5153
  br i1 %15, label %16, label %19, !dbg !5155

16:                                               ; preds = %11
  %17 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5156, !srcloc !4954
  call void @llvm.dbg.value(metadata i32 %17, metadata !4951, metadata !DIExpression()) #21, !dbg !5159
  br label %18, !dbg !5160

18:                                               ; preds = %18, %16
  br label %18, !dbg !5161, !llvm.loop !5164

19:                                               ; preds = %11
  ret void, !dbg !5166
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortMalloc(i32 noundef %0) local_unnamed_addr #3 !dbg !5167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5171, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata i8* null, metadata !5175, metadata !DIExpression()), !dbg !5176
  tail call void @vTaskSuspendAll() #19, !dbg !5177
  %2 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !5178, !tbaa !1014
  %3 = icmp eq %struct.A_BLOCK_LINK* %2, null, !dbg !5181
  br i1 %3, label %4, label %5, !dbg !5182

4:                                                ; preds = %1
  tail call fastcc void @prvHeapInit() #20, !dbg !5183
  br label %5, !dbg !5185

5:                                                ; preds = %1, %4
  %6 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !5186
  %7 = select i1 %6, i32 -2147483648, i32 0, !dbg !5186
  %8 = and i32 %7, %0, !dbg !5188
  %9 = icmp ne i32 %8, 0, !dbg !5189
  %10 = icmp eq i32 %0, 0
  %11 = or i1 %10, %9, !dbg !5190
  br i1 %11, label %84, label %12, !dbg !5190

12:                                               ; preds = %5
  %13 = add i32 %0, 8, !dbg !5191
  call void @llvm.dbg.value(metadata i32 %13, metadata !5171, metadata !DIExpression()), !dbg !5176
  %14 = and i32 %0, 7, !dbg !5195
  %15 = icmp eq i32 %14, 0, !dbg !5197
  %16 = add i32 %0, 16, !dbg !5198
  %17 = and i32 %16, -8, !dbg !5198
  %18 = select i1 %15, i32 %13, i32 %17, !dbg !5198
  call void @llvm.dbg.value(metadata i32 %18, metadata !5171, metadata !DIExpression()), !dbg !5176
  %19 = icmp eq i32 %18, 0, !dbg !5199
  %20 = load i32, i32* @xFreeBytesRemaining, align 4
  %21 = icmp ugt i32 %18, %20
  %22 = select i1 %19, i1 true, i1 %21, !dbg !5201
  br i1 %22, label %84, label %23, !dbg !5201

23:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !5173, metadata !DIExpression()), !dbg !5176
  %24 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !5202, !tbaa !5204
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !5172, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !5173, metadata !DIExpression()), !dbg !5176
  %25 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 1, !dbg !5206
  %26 = load i32, i32* %25, align 4, !dbg !5206, !tbaa !5207
  %27 = icmp ult i32 %26, %18, !dbg !5208
  br i1 %27, label %28, label %42, !dbg !5209

28:                                               ; preds = %23
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !5173, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !5172, metadata !DIExpression()), !dbg !5176
  %29 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 0, !dbg !5210
  %30 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %29, align 4, !dbg !5210, !tbaa !5204
  %31 = icmp eq %struct.A_BLOCK_LINK* %30, null, !dbg !5211
  br i1 %31, label %42, label %32, !dbg !5212, !llvm.loop !5213

32:                                               ; preds = %28, %38
  %33 = phi %struct.A_BLOCK_LINK* [ %40, %38 ], [ %30, %28 ]
  %34 = phi %struct.A_BLOCK_LINK* [ %33, %38 ], [ %24, %28 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !5172, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !5173, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !5172, metadata !DIExpression()), !dbg !5176
  %35 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 1, !dbg !5206
  %36 = load i32, i32* %35, align 4, !dbg !5206, !tbaa !5207
  %37 = icmp ult i32 %36, %18, !dbg !5208
  br i1 %37, label %38, label %42, !dbg !5209, !llvm.loop !5213

38:                                               ; preds = %32
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !5173, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !5172, metadata !DIExpression()), !dbg !5176
  %39 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 0, !dbg !5210
  %40 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %39, align 4, !dbg !5210, !tbaa !5204
  %41 = icmp eq %struct.A_BLOCK_LINK* %40, null, !dbg !5211
  br i1 %41, label %42, label %32, !dbg !5212, !llvm.loop !5213

42:                                               ; preds = %32, %38, %28, %23
  %43 = phi %struct.A_BLOCK_LINK* [ %24, %23 ], [ %24, %28 ], [ %33, %38 ], [ %33, %32 ]
  %44 = phi %struct.A_BLOCK_LINK* [ @xStart, %23 ], [ @xStart, %28 ], [ %34, %38 ], [ %34, %32 ], !dbg !5215
  %45 = phi i32 [ %26, %23 ], [ %26, %28 ], [ %36, %38 ], [ %36, %32 ], !dbg !5206
  %46 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 1, !dbg !5206
  %47 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !5216, !tbaa !1014
  %48 = icmp eq %struct.A_BLOCK_LINK* %43, %47, !dbg !5218
  br i1 %48, label %84, label %49, !dbg !5219

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %44, i32 0, i32 0, !dbg !5220
  %51 = bitcast %struct.A_BLOCK_LINK* %44 to i8**, !dbg !5220
  %52 = load i8*, i8** %51, align 4, !dbg !5220, !tbaa !5204
  %53 = getelementptr inbounds i8, i8* %52, i32 8, !dbg !5222
  call void @llvm.dbg.value(metadata i8* %53, metadata !5175, metadata !DIExpression()), !dbg !5176
  %54 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 0, !dbg !5223
  %55 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %54, align 4, !dbg !5223, !tbaa !5204
  store %struct.A_BLOCK_LINK* %55, %struct.A_BLOCK_LINK** %50, align 4, !dbg !5224, !tbaa !5204
  %56 = sub i32 %45, %18, !dbg !5225
  %57 = icmp ugt i32 %56, 16, !dbg !5227
  br i1 %57, label %58, label %71, !dbg !5228

58:                                               ; preds = %49
  %59 = bitcast %struct.A_BLOCK_LINK* %43 to i8*, !dbg !5229
  %60 = getelementptr inbounds i8, i8* %59, i32 %18, !dbg !5231
  call void @llvm.dbg.value(metadata i8* %60, metadata !5174, metadata !DIExpression()), !dbg !5176
  %61 = ptrtoint i8* %60 to i32, !dbg !5232
  %62 = and i32 %61, 7, !dbg !5232
  %63 = icmp eq i32 %62, 0, !dbg !5232
  br i1 %63, label %67, label %64, !dbg !5234

64:                                               ; preds = %58
  %65 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5235, !srcloc !5241
  call void @llvm.dbg.value(metadata i32 %65, metadata !5238, metadata !DIExpression()) #21, !dbg !5242
  br label %66, !dbg !5243

66:                                               ; preds = %66, %64
  br label %66, !dbg !5244, !llvm.loop !5247

67:                                               ; preds = %58
  %68 = bitcast i8* %60 to %struct.A_BLOCK_LINK*, !dbg !5249
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %68, metadata !5174, metadata !DIExpression()), !dbg !5176
  %69 = getelementptr inbounds i8, i8* %60, i32 4, !dbg !5250
  %70 = bitcast i8* %69 to i32*, !dbg !5250
  store i32 %56, i32* %70, align 4, !dbg !5251, !tbaa !5207
  store i32 %18, i32* %46, align 4, !dbg !5252, !tbaa !5207
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %68) #20, !dbg !5253
  br label %71, !dbg !5254

71:                                               ; preds = %49, %67
  %72 = load i32, i32* %46, align 4, !dbg !5255, !tbaa !5207
  %73 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !5256, !tbaa !1032
  %74 = sub i32 %73, %72, !dbg !5256
  store i32 %74, i32* @xFreeBytesRemaining, align 4, !dbg !5256, !tbaa !1032
  %75 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !5257, !tbaa !1032
  %76 = icmp ult i32 %74, %75, !dbg !5259
  br i1 %76, label %77, label %78, !dbg !5260

77:                                               ; preds = %71
  store i32 %74, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !5261, !tbaa !1032
  br label %78, !dbg !5263

78:                                               ; preds = %71, %77
  %79 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !5264
  %80 = select i1 %79, i32 -2147483648, i32 0, !dbg !5264
  %81 = or i32 %72, %80, !dbg !5265
  store i32 %81, i32* %46, align 4, !dbg !5265, !tbaa !5207
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** %54, align 4, !dbg !5266, !tbaa !5204
  %82 = load i32, i32* @xNumberOfSuccessfulAllocations, align 4, !dbg !5267, !tbaa !1032
  %83 = add i32 %82, 1, !dbg !5267
  store i32 %83, i32* @xNumberOfSuccessfulAllocations, align 4, !dbg !5267, !tbaa !1032
  br label %84, !dbg !5268

84:                                               ; preds = %5, %42, %78, %12
  %85 = phi i8* [ %53, %78 ], [ null, %42 ], [ null, %12 ], [ null, %5 ], !dbg !5176
  call void @llvm.dbg.value(metadata i8* %85, metadata !5175, metadata !DIExpression()), !dbg !5176
  %86 = tail call i32 @xTaskResumeAll() #19, !dbg !5269
  %87 = ptrtoint i8* %85 to i32, !dbg !5270
  %88 = and i32 %87, 7, !dbg !5270
  %89 = icmp eq i32 %88, 0, !dbg !5270
  br i1 %89, label %93, label %90, !dbg !5272

90:                                               ; preds = %84
  %91 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5273, !srcloc !5241
  call void @llvm.dbg.value(metadata i32 %91, metadata !5238, metadata !DIExpression()) #21, !dbg !5276
  br label %92, !dbg !5277

92:                                               ; preds = %92, %90
  br label %92, !dbg !5278, !llvm.loop !5281

93:                                               ; preds = %84
  ret i8* %85, !dbg !5283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @prvHeapInit() unnamed_addr #13 !dbg !5284 {
  call void @llvm.dbg.value(metadata i32 76800, metadata !5289, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.value(metadata i32 ptrtoint ([76800 x i8]* @ucHeap to i32), metadata !5288, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 76800, i32 sub (i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32))), i32 76800), metadata !5289, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)), metadata !5288, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !5287, metadata !DIExpression()), !dbg !5290
  store %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !5291, !tbaa !5204
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 1), align 4, !dbg !5292, !tbaa !5207
  call void @llvm.dbg.value(metadata i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 76800, i32 sub (i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32))), i32 76800)), metadata !5288, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.value(metadata i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 76800, i32 sub (i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32))), i32 76800)), i32 -8), metadata !5288, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.value(metadata i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 76800, i32 sub (i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32))), i32 76800)), i32 -8), i32 -8), metadata !5288, metadata !DIExpression()), !dbg !5290
  store %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 76800, i32 sub (i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32))), i32 76800)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !5293, !tbaa !1014
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 76800, i32 sub (i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32))), i32 76800)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !5294, !tbaa !5207
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 76800, i32 sub (i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32))), i32 76800)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 8, !dbg !5295, !tbaa !5204
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !5286, metadata !DIExpression()), !dbg !5290
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 76800, i32 sub (i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32))), i32 76800)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32))), i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !5296, !tbaa !5207
  %1 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !5297, !tbaa !1014
  store %struct.A_BLOCK_LINK* %1, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 4, !dbg !5298, !tbaa !5204
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 76800, i32 sub (i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32))), i32 76800)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32))), i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !5299, !tbaa !1032
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 76800, i32 sub (i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32))), i32 76800)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([76800 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([76800 x i8]* @ucHeap to i32))), i32* @xFreeBytesRemaining, align 4, !dbg !5300, !tbaa !1032
  store i1 true, i1* @xBlockAllocatedBit, align 4, !dbg !5301
  ret void, !dbg !5302
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef %0) unnamed_addr #14 !dbg !5303 {
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %0, metadata !5307, metadata !DIExpression()), !dbg !5310
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !5308, metadata !DIExpression()), !dbg !5310
  br label %2, !dbg !5311

2:                                                ; preds = %2, %1
  %3 = phi %struct.A_BLOCK_LINK* [ @xStart, %1 ], [ %5, %2 ], !dbg !5313
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !5308, metadata !DIExpression()), !dbg !5310
  %4 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !5314
  %5 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %4, align 4, !dbg !5314, !tbaa !5204
  %6 = icmp ult %struct.A_BLOCK_LINK* %5, %0, !dbg !5316
  br i1 %6, label %2, label %7, !dbg !5317, !llvm.loop !5318

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !5314
  %9 = bitcast %struct.A_BLOCK_LINK* %3 to i8*, !dbg !5320
  call void @llvm.dbg.value(metadata i8* %9, metadata !5309, metadata !DIExpression()), !dbg !5310
  %10 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 1, !dbg !5321
  %11 = load i32, i32* %10, align 4, !dbg !5321, !tbaa !5207
  %12 = getelementptr inbounds i8, i8* %9, i32 %11, !dbg !5323
  %13 = bitcast %struct.A_BLOCK_LINK* %0 to i8*, !dbg !5324
  %14 = icmp eq i8* %12, %13, !dbg !5325
  %15 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4, !dbg !5310, !tbaa !5207
  br i1 %14, label %17, label %19, !dbg !5326

17:                                               ; preds = %7
  %18 = add i32 %16, %11, !dbg !5327
  store i32 %18, i32* %10, align 4, !dbg !5327, !tbaa !5207
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !5307, metadata !DIExpression()), !dbg !5310
  br label %19, !dbg !5329

19:                                               ; preds = %7, %17
  %20 = phi i8* [ %9, %17 ], [ %13, %7 ], !dbg !5330
  %21 = phi i32 [ %18, %17 ], [ %16, %7 ], !dbg !5331
  %22 = phi %struct.A_BLOCK_LINK* [ %3, %17 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %22, metadata !5307, metadata !DIExpression()), !dbg !5310
  call void @llvm.dbg.value(metadata i8* %20, metadata !5309, metadata !DIExpression()), !dbg !5310
  %23 = getelementptr inbounds i8, i8* %20, i32 %21, !dbg !5333
  %24 = bitcast %struct.A_BLOCK_LINK* %5 to i8*, !dbg !5334
  %25 = icmp ne i8* %23, %24, !dbg !5335
  %26 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4
  %27 = icmp eq %struct.A_BLOCK_LINK* %5, %26
  %28 = select i1 %25, i1 true, i1 %27, !dbg !5336
  br i1 %28, label %36, label %29, !dbg !5336

29:                                               ; preds = %19
  %30 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 1, !dbg !5331
  %31 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %5, i32 0, i32 1, !dbg !5337
  %32 = load i32, i32* %31, align 4, !dbg !5337, !tbaa !5207
  %33 = add i32 %32, %21, !dbg !5341
  store i32 %33, i32* %30, align 4, !dbg !5341, !tbaa !5207
  %34 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %5, i32 0, i32 0, !dbg !5342
  %35 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %34, align 4, !dbg !5342, !tbaa !5204
  br label %36, !dbg !5343

36:                                               ; preds = %19, %29
  %37 = phi %struct.A_BLOCK_LINK* [ %35, %29 ], [ %5, %19 ]
  %38 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 0, !dbg !5344
  store %struct.A_BLOCK_LINK* %37, %struct.A_BLOCK_LINK** %38, align 4, !dbg !5344, !tbaa !5204
  %39 = icmp eq %struct.A_BLOCK_LINK* %3, %22, !dbg !5345
  br i1 %39, label %41, label %40, !dbg !5347

40:                                               ; preds = %36
  store %struct.A_BLOCK_LINK* %22, %struct.A_BLOCK_LINK** %8, align 4, !dbg !5348, !tbaa !5204
  br label %41, !dbg !5350

41:                                               ; preds = %36, %40
  ret void, !dbg !5351
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortFree(i8* noundef %0) local_unnamed_addr #3 !dbg !5352 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5354, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i8* %0, metadata !5355, metadata !DIExpression()), !dbg !5357
  %2 = icmp eq i8* %0, null, !dbg !5358
  br i1 %2, label %32, label %3, !dbg !5360

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 -8, !dbg !5361
  call void @llvm.dbg.value(metadata i8* %4, metadata !5355, metadata !DIExpression()), !dbg !5357
  %5 = bitcast i8* %4 to %struct.A_BLOCK_LINK*, !dbg !5363
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %5, metadata !5356, metadata !DIExpression()), !dbg !5357
  %6 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !5364
  %7 = bitcast i8* %6 to i32*, !dbg !5364
  %8 = load i32, i32* %7, align 4, !dbg !5364, !tbaa !5207
  %9 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !5364
  %10 = select i1 %9, i32 -2147483648, i32 0, !dbg !5364
  %11 = and i32 %10, %8, !dbg !5364
  %12 = icmp eq i32 %11, 0, !dbg !5364
  br i1 %12, label %13, label %16, !dbg !5366

13:                                               ; preds = %3
  %14 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5367, !srcloc !5241
  call void @llvm.dbg.value(metadata i32 %14, metadata !5238, metadata !DIExpression()) #21, !dbg !5370
  br label %15, !dbg !5371

15:                                               ; preds = %15, %13
  br label %15, !dbg !5372, !llvm.loop !5375

16:                                               ; preds = %3
  %17 = bitcast i8* %4 to %struct.A_BLOCK_LINK**, !dbg !5377
  %18 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %17, align 4, !dbg !5377, !tbaa !5204
  %19 = icmp eq %struct.A_BLOCK_LINK* %18, null, !dbg !5377
  br i1 %19, label %23, label %20, !dbg !5379

20:                                               ; preds = %16
  %21 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5380, !srcloc !5241
  call void @llvm.dbg.value(metadata i32 %21, metadata !5238, metadata !DIExpression()) #21, !dbg !5383
  br label %22, !dbg !5384

22:                                               ; preds = %22, %20
  br label %22, !dbg !5385, !llvm.loop !5388

23:                                               ; preds = %16
  %24 = xor i32 %10, -1, !dbg !5390
  %25 = and i32 %8, %24, !dbg !5395
  store i32 %25, i32* %7, align 4, !dbg !5395, !tbaa !5207
  tail call void @vTaskSuspendAll() #19, !dbg !5396
  %26 = load i32, i32* %7, align 4, !dbg !5397, !tbaa !5207
  %27 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !5399, !tbaa !1032
  %28 = add i32 %27, %26, !dbg !5399
  store i32 %28, i32* @xFreeBytesRemaining, align 4, !dbg !5399, !tbaa !1032
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %5) #20, !dbg !5400
  %29 = load i32, i32* @xNumberOfSuccessfulFrees, align 4, !dbg !5401, !tbaa !1032
  %30 = add i32 %29, 1, !dbg !5401
  store i32 %30, i32* @xNumberOfSuccessfulFrees, align 4, !dbg !5401, !tbaa !1032
  %31 = tail call i32 @xTaskResumeAll() #19, !dbg !5402
  br label %32, !dbg !5403

32:                                               ; preds = %23, %1
  ret void, !dbg !5404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetFreeHeapSize() local_unnamed_addr #10 !dbg !5405 {
  %1 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !5408, !tbaa !1032
  ret i32 %1, !dbg !5409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetMinimumEverFreeHeapSize() local_unnamed_addr #10 !dbg !5410 {
  %1 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !5411, !tbaa !1032
  ret i32 %1, !dbg !5412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @vPortInitialiseBlocks() local_unnamed_addr #6 !dbg !5413 {
  ret void, !dbg !5414
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortGetHeapStats(%struct.xHeapStats* nocapture noundef writeonly %0) local_unnamed_addr #3 !dbg !5415 {
  call void @llvm.dbg.value(metadata %struct.xHeapStats* %0, metadata !5431, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.value(metadata i32 0, metadata !5433, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.value(metadata i32 0, metadata !5434, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.value(metadata i32 -1, metadata !5435, metadata !DIExpression()), !dbg !5436
  tail call void @vTaskSuspendAll() #19, !dbg !5437
  %2 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !5438, !tbaa !5204
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %2, metadata !5432, metadata !DIExpression()), !dbg !5436
  %3 = icmp eq %struct.A_BLOCK_LINK* %2, null, !dbg !5440
  br i1 %3, label %21, label %4, !dbg !5442

4:                                                ; preds = %1
  %5 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !tbaa !1014
  br label %6, !dbg !5443

6:                                                ; preds = %4, %6
  %7 = phi %struct.A_BLOCK_LINK* [ %19, %6 ], [ %2, %4 ], !dbg !5445
  %8 = phi i32 [ %11, %6 ], [ 0, %4 ], !dbg !5436
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ], !dbg !5436
  %10 = phi i32 [ %17, %6 ], [ -1, %4 ], !dbg !5436
  call void @llvm.dbg.value(metadata i32 %10, metadata !5435, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.value(metadata i32 %9, metadata !5434, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.value(metadata i32 %8, metadata !5433, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %7, metadata !5432, metadata !DIExpression()), !dbg !5436
  %11 = add i32 %8, 1, !dbg !5446
  call void @llvm.dbg.value(metadata i32 %11, metadata !5433, metadata !DIExpression()), !dbg !5436
  %12 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %7, i32 0, i32 1, !dbg !5448
  %13 = load i32, i32* %12, align 4, !dbg !5448, !tbaa !5207
  %14 = icmp ugt i32 %13, %9, !dbg !5450
  %15 = select i1 %14, i32 %13, i32 %9, !dbg !5451
  call void @llvm.dbg.value(metadata i32 %15, metadata !5434, metadata !DIExpression()), !dbg !5436
  %16 = icmp ult i32 %13, %10, !dbg !5452
  %17 = select i1 %16, i32 %13, i32 %10, !dbg !5454
  call void @llvm.dbg.value(metadata i32 %17, metadata !5435, metadata !DIExpression()), !dbg !5436
  %18 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %7, i32 0, i32 0, !dbg !5455
  %19 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %18, align 4, !dbg !5455, !tbaa !5204
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %19, metadata !5432, metadata !DIExpression()), !dbg !5436
  %20 = icmp eq %struct.A_BLOCK_LINK* %19, %5, !dbg !5456
  br i1 %20, label %21, label %6, !dbg !5457, !llvm.loop !5458

21:                                               ; preds = %6, %1
  %22 = phi i32 [ 0, %1 ], [ %11, %6 ], !dbg !5436
  %23 = phi i32 [ 0, %1 ], [ %15, %6 ], !dbg !5436
  %24 = phi i32 [ -1, %1 ], [ %17, %6 ], !dbg !5436
  call void @llvm.dbg.value(metadata i32 %24, metadata !5435, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.value(metadata i32 %23, metadata !5434, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.value(metadata i32 %22, metadata !5433, metadata !DIExpression()), !dbg !5436
  %25 = tail call i32 @xTaskResumeAll() #19, !dbg !5460
  %26 = getelementptr inbounds %struct.xHeapStats, %struct.xHeapStats* %0, i32 0, i32 1, !dbg !5461
  store i32 %23, i32* %26, align 4, !dbg !5462, !tbaa !5463
  %27 = getelementptr inbounds %struct.xHeapStats, %struct.xHeapStats* %0, i32 0, i32 2, !dbg !5465
  store i32 %24, i32* %27, align 4, !dbg !5466, !tbaa !5467
  %28 = getelementptr inbounds %struct.xHeapStats, %struct.xHeapStats* %0, i32 0, i32 3, !dbg !5468
  store i32 %22, i32* %28, align 4, !dbg !5469, !tbaa !5470
  tail call void @vPortEnterCritical() #19, !dbg !5471
  %29 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !5472, !tbaa !1032
  %30 = getelementptr inbounds %struct.xHeapStats, %struct.xHeapStats* %0, i32 0, i32 0, !dbg !5474
  store i32 %29, i32* %30, align 4, !dbg !5475, !tbaa !5476
  %31 = load i32, i32* @xNumberOfSuccessfulAllocations, align 4, !dbg !5477, !tbaa !1032
  %32 = getelementptr inbounds %struct.xHeapStats, %struct.xHeapStats* %0, i32 0, i32 5, !dbg !5478
  store i32 %31, i32* %32, align 4, !dbg !5479, !tbaa !5480
  %33 = load i32, i32* @xNumberOfSuccessfulFrees, align 4, !dbg !5481, !tbaa !1032
  %34 = getelementptr inbounds %struct.xHeapStats, %struct.xHeapStats* %0, i32 0, i32 6, !dbg !5482
  store i32 %33, i32* %34, align 4, !dbg !5483, !tbaa !5484
  %35 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !5485, !tbaa !1032
  %36 = getelementptr inbounds %struct.xHeapStats, %struct.xHeapStats* %0, i32 0, i32 4, !dbg !5486
  store i32 %35, i32* %36, align 4, !dbg !5487, !tbaa !5488
  tail call void @vPortExitCritical() #19, !dbg !5489
  ret void, !dbg !5490
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericReset(%struct.QueueDefinition* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !5491 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !5495, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata i32 %1, metadata !5496, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !5497, metadata !DIExpression()), !dbg !5499
  %3 = icmp eq %struct.QueueDefinition* %0, null, !dbg !5500
  br i1 %3, label %4, label %7, !dbg !5502

4:                                                ; preds = %2
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5503, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %5, metadata !5506, metadata !DIExpression()) #21, !dbg !5510
  br label %6, !dbg !5511

6:                                                ; preds = %6, %4
  br label %6, !dbg !5512, !llvm.loop !5515

7:                                                ; preds = %2
  tail call void @vPortEnterCritical() #19, !dbg !5517
  %8 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !5518
  %9 = load i8*, i8** %8, align 4, !dbg !5518, !tbaa !5520
  %10 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !5522
  %11 = load i32, i32* %10, align 4, !dbg !5522, !tbaa !5523
  %12 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !5524
  %13 = load i32, i32* %12, align 4, !dbg !5524, !tbaa !5525
  %14 = mul i32 %13, %11, !dbg !5526
  %15 = getelementptr inbounds i8, i8* %9, i32 %14, !dbg !5527
  %16 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, i32 0, i32 0, !dbg !5528
  store i8* %15, i8** %16, align 4, !dbg !5529, !tbaa !1418
  %17 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !5530
  store volatile i32 0, i32* %17, align 4, !dbg !5531, !tbaa !5532
  %18 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !5533
  store i8* %9, i8** %18, align 4, !dbg !5534, !tbaa !5535
  %19 = add i32 %11, -1, !dbg !5536
  %20 = mul i32 %19, %13, !dbg !5537
  %21 = getelementptr inbounds i8, i8* %9, i32 %20, !dbg !5538
  %22 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, i32 0, i32 1, !dbg !5539
  store i8* %21, i8** %22, align 4, !dbg !5540, !tbaa !1418
  %23 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !5541
  store volatile i8 -1, i8* %23, align 4, !dbg !5542, !tbaa !5543
  %24 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9, !dbg !5544
  store volatile i8 -1, i8* %24, align 1, !dbg !5545, !tbaa !5546
  %25 = icmp eq i32 %1, 0, !dbg !5547
  %26 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, !dbg !5549
  br i1 %25, label %27, label %35, !dbg !5550

27:                                               ; preds = %7
  %28 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %26, i32 0, i32 0, !dbg !5551
  %29 = load volatile i32, i32* %28, align 4, !dbg !5551, !tbaa !5554
  %30 = icmp eq i32 %29, 0, !dbg !5551
  br i1 %30, label %37, label %31, !dbg !5555

31:                                               ; preds = %27
  %32 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %26) #19, !dbg !5556
  %33 = icmp eq i32 %32, 0, !dbg !5559
  br i1 %33, label %37, label %34, !dbg !5560

34:                                               ; preds = %31
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5561, !tbaa !1032
  tail call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !5561, !srcloc !5564
  tail call void asm sideeffect "isb", ""() #21, !dbg !5561, !srcloc !5565
  br label %37, !dbg !5566

35:                                               ; preds = %7
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %26) #19, !dbg !5567
  %36 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, !dbg !5569
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %36) #19, !dbg !5570
  br label %37

37:                                               ; preds = %31, %34, %27, %35
  tail call void @vPortExitCritical() #19, !dbg !5571
  ret i32 1, !dbg !5572
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.QueueDefinition* @xQueueGenericCreate(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #3 !dbg !5573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5577, metadata !DIExpression()), !dbg !5583
  call void @llvm.dbg.value(metadata i32 %1, metadata !5578, metadata !DIExpression()), !dbg !5583
  call void @llvm.dbg.value(metadata i8 %2, metadata !5579, metadata !DIExpression()), !dbg !5583
  %4 = icmp eq i32 %0, 0, !dbg !5584
  br i1 %4, label %5, label %8, !dbg !5586

5:                                                ; preds = %3
  %6 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5587, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %6, metadata !5506, metadata !DIExpression()) #21, !dbg !5590
  br label %7, !dbg !5591

7:                                                ; preds = %7, %5
  br label %7, !dbg !5592, !llvm.loop !5595

8:                                                ; preds = %3
  %9 = mul i32 %1, %0, !dbg !5597
  call void @llvm.dbg.value(metadata i32 %9, metadata !5581, metadata !DIExpression()), !dbg !5583
  %10 = add i32 %9, 80, !dbg !5598
  %11 = tail call i8* @pvPortMalloc(i32 noundef %10) #19, !dbg !5599
  %12 = bitcast i8* %11 to %struct.QueueDefinition*, !dbg !5600
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %12, metadata !5580, metadata !DIExpression()), !dbg !5583
  %13 = icmp eq i8* %11, null, !dbg !5601
  br i1 %13, label %16, label %14, !dbg !5603

14:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8* %11, metadata !5582, metadata !DIExpression()), !dbg !5583
  %15 = getelementptr inbounds i8, i8* %11, i32 80, !dbg !5604
  call void @llvm.dbg.value(metadata i8* %15, metadata !5582, metadata !DIExpression()), !dbg !5583
  tail call fastcc void @prvInitialiseNewQueue(i32 noundef %0, i32 noundef %1, i8* noundef nonnull %15, i8 noundef zeroext %2, %struct.QueueDefinition* noundef nonnull %12) #20, !dbg !5606
  br label %16, !dbg !5607

16:                                               ; preds = %8, %14
  ret %struct.QueueDefinition* %12, !dbg !5608
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseNewQueue(i32 noundef %0, i32 noundef %1, i8* noundef %2, i8 noundef zeroext %3, %struct.QueueDefinition* noundef %4) unnamed_addr #3 !dbg !5609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5613, metadata !DIExpression()), !dbg !5618
  call void @llvm.dbg.value(metadata i32 %1, metadata !5614, metadata !DIExpression()), !dbg !5618
  call void @llvm.dbg.value(metadata i8* %2, metadata !5615, metadata !DIExpression()), !dbg !5618
  call void @llvm.dbg.value(metadata i8 %3, metadata !5616, metadata !DIExpression()), !dbg !5618
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %4, metadata !5617, metadata !DIExpression()), !dbg !5618
  %6 = icmp eq i32 %1, 0, !dbg !5619
  br i1 %6, label %7, label %9, !dbg !5621

7:                                                ; preds = %5
  %8 = bitcast %struct.QueueDefinition* %4 to %struct.QueueDefinition**, !dbg !5622
  store %struct.QueueDefinition* %4, %struct.QueueDefinition** %8, align 4, !dbg !5622, !tbaa !5520
  br label %11, !dbg !5624

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %4, i32 0, i32 0, !dbg !5625
  store i8* %2, i8** %10, align 4, !dbg !5627, !tbaa !5520
  br label %11

11:                                               ; preds = %9, %7
  %12 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %4, i32 0, i32 6, !dbg !5628
  store i32 %0, i32* %12, align 4, !dbg !5629, !tbaa !5523
  %13 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %4, i32 0, i32 7, !dbg !5630
  store i32 %1, i32* %13, align 4, !dbg !5631, !tbaa !5525
  %14 = tail call i32 @xQueueGenericReset(%struct.QueueDefinition* noundef nonnull %4, i32 noundef 1) #20, !dbg !5632
  %15 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %4, i32 0, i32 11, !dbg !5633
  store i8 %3, i8* %15, align 4, !dbg !5635, !tbaa !5636
  ret void, !dbg !5637
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.QueueDefinition* @xQueueCreateMutex(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !5638 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5642, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.value(metadata i32 1, metadata !5644, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.value(metadata i32 0, metadata !5645, metadata !DIExpression()), !dbg !5646
  %2 = tail call %struct.QueueDefinition* @xQueueGenericCreate(i32 noundef 1, i32 noundef 0, i8 noundef zeroext %0) #20, !dbg !5647
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %2, metadata !5643, metadata !DIExpression()), !dbg !5646
  tail call fastcc void @prvInitialiseMutex(%struct.QueueDefinition* noundef %2) #20, !dbg !5648
  ret %struct.QueueDefinition* %2, !dbg !5649
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseMutex(%struct.QueueDefinition* noundef %0) unnamed_addr #3 !dbg !5650 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !5654, metadata !DIExpression()), !dbg !5655
  %2 = icmp eq %struct.QueueDefinition* %0, null, !dbg !5656
  br i1 %2, label %10, label %3, !dbg !5658

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, !dbg !5659
  %5 = bitcast %union.anon.9* %4 to %struct.tskTaskControlBlock**, !dbg !5661
  store %struct.tskTaskControlBlock* null, %struct.tskTaskControlBlock** %5, align 4, !dbg !5662, !tbaa !1418
  %6 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !5663
  store i8* null, i8** %6, align 4, !dbg !5664, !tbaa !5520
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, i32 0, i32 1, !dbg !5665
  %8 = bitcast i8** %7 to i32*, !dbg !5665
  store i32 0, i32* %8, align 4, !dbg !5666, !tbaa !1418
  %9 = tail call i32 @xQueueGenericSend(%struct.QueueDefinition* noundef nonnull %0, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !5667
  br label %10, !dbg !5668

10:                                               ; preds = %1, %3
  ret void, !dbg !5669
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSend(%struct.QueueDefinition* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !5670 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.xTIME_OUT, align 4
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !5677, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i8* %1, metadata !5678, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i32 %2, metadata !5679, metadata !DIExpression()), !dbg !5690
  store i32 %2, i32* %5, align 4, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %3, metadata !5680, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.value(metadata i32 0, metadata !5681, metadata !DIExpression()), !dbg !5690
  %7 = bitcast %struct.xTIME_OUT* %6 to i8*, !dbg !5691
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #21, !dbg !5691
  call void @llvm.dbg.declare(metadata %struct.xTIME_OUT* %6, metadata !5683, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !5689, metadata !DIExpression()), !dbg !5690
  %8 = icmp eq %struct.QueueDefinition* %0, null, !dbg !5693
  br i1 %8, label %9, label %12, !dbg !5695

9:                                                ; preds = %4
  %10 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5696, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %10, metadata !5506, metadata !DIExpression()) #21, !dbg !5699
  br label %11, !dbg !5700

11:                                               ; preds = %11, %9
  br label %11, !dbg !5701, !llvm.loop !5704

12:                                               ; preds = %4
  %13 = icmp eq i8* %1, null, !dbg !5706
  br i1 %13, label %14, label %21, !dbg !5706

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !5706
  %16 = load i32, i32* %15, align 4, !dbg !5706, !tbaa !5525
  %17 = icmp eq i32 %16, 0, !dbg !5706
  br i1 %17, label %21, label %18, !dbg !5708

18:                                               ; preds = %14
  %19 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5709, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %19, metadata !5506, metadata !DIExpression()) #21, !dbg !5712
  br label %20, !dbg !5713

20:                                               ; preds = %20, %18
  br label %20, !dbg !5714, !llvm.loop !5717

21:                                               ; preds = %12, %14
  %22 = icmp eq i32 %3, 2, !dbg !5719
  br i1 %22, label %23, label %30, !dbg !5719

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !5719
  %25 = load i32, i32* %24, align 4, !dbg !5719, !tbaa !5523
  %26 = icmp eq i32 %25, 1, !dbg !5719
  br i1 %26, label %30, label %27, !dbg !5721

27:                                               ; preds = %23
  %28 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5722, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %28, metadata !5506, metadata !DIExpression()) #21, !dbg !5725
  br label %29, !dbg !5726

29:                                               ; preds = %29, %27
  br label %29, !dbg !5727, !llvm.loop !5730

30:                                               ; preds = %21, %23
  %31 = tail call i32 @xTaskGetSchedulerState() #19, !dbg !5732
  %32 = icmp eq i32 %31, 0, !dbg !5732
  call void @llvm.dbg.value(metadata i32 %2, metadata !5679, metadata !DIExpression()), !dbg !5690
  %33 = icmp ne i32 %2, 0, !dbg !5732
  %34 = and i1 %32, %33, !dbg !5732
  br i1 %34, label %47, label %35, !dbg !5735

35:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 undef, metadata !5681, metadata !DIExpression()), !dbg !5690
  call void @vPortEnterCritical() #19, !dbg !5736
  %36 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !5740
  %37 = load volatile i32, i32* %36, align 4, !dbg !5740, !tbaa !5532
  %38 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !5743
  %39 = load i32, i32* %38, align 4, !dbg !5743, !tbaa !5523
  %40 = icmp ult i32 %37, %39, !dbg !5744
  %41 = or i1 %22, %40, !dbg !5745
  br i1 %41, label %50, label %42, !dbg !5745

42:                                               ; preds = %35
  %43 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8
  %44 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9
  %45 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3
  call void @llvm.dbg.value(metadata i32 %2, metadata !5679, metadata !DIExpression()), !dbg !5690
  %46 = icmp eq i32 %2, 0, !dbg !5746
  br i1 %46, label %64, label %65, !dbg !5749

47:                                               ; preds = %30
  %48 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5750, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %48, metadata !5506, metadata !DIExpression()) #21, !dbg !5753
  br label %49, !dbg !5754

49:                                               ; preds = %49, %47
  br label %49, !dbg !5755, !llvm.loop !5758

50:                                               ; preds = %89, %35
  %51 = call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %0, i8* noundef %1, i32 noundef %3) #20, !dbg !5760
  call void @llvm.dbg.value(metadata i32 %51, metadata !5682, metadata !DIExpression()), !dbg !5690
  %52 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, !dbg !5763
  %53 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %52, i32 0, i32 0, !dbg !5763
  %54 = load volatile i32, i32* %53, align 4, !dbg !5763, !tbaa !5765
  %55 = icmp eq i32 %54, 0, !dbg !5763
  br i1 %55, label %60, label %56, !dbg !5766

56:                                               ; preds = %50
  %57 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %52) #19, !dbg !5767
  %58 = icmp eq i32 %57, 0, !dbg !5770
  br i1 %58, label %63, label %59, !dbg !5771

59:                                               ; preds = %56
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5772, !tbaa !1032
  call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !5772, !srcloc !5775
  call void asm sideeffect "isb", ""() #21, !dbg !5772, !srcloc !5776
  br label %63, !dbg !5777

60:                                               ; preds = %50
  %61 = icmp eq i32 %51, 0, !dbg !5778
  br i1 %61, label %63, label %62, !dbg !5780

62:                                               ; preds = %60
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5781, !tbaa !1032
  call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !5781, !srcloc !5784
  call void asm sideeffect "isb", ""() #21, !dbg !5781, !srcloc !5785
  br label %63, !dbg !5786

63:                                               ; preds = %62, %60, %59, %56
  call void @vPortExitCritical() #19, !dbg !5787
  br label %96, !dbg !5788

64:                                               ; preds = %93, %42
  call void @vPortExitCritical() #19, !dbg !5789
  br label %96, !dbg !5791

65:                                               ; preds = %42
  call void @vTaskInternalSetTimeOutState(%struct.xTIME_OUT* noundef nonnull %6) #19, !dbg !5792
  call void @llvm.dbg.value(metadata i32 1, metadata !5681, metadata !DIExpression()), !dbg !5690
  br label %66, !dbg !5795

66:                                               ; preds = %93, %65
  call void @llvm.dbg.value(metadata i32 1, metadata !5681, metadata !DIExpression()), !dbg !5690
  call void @vPortExitCritical() #19, !dbg !5796
  call void @vTaskSuspendAll() #19, !dbg !5797
  call void @vPortEnterCritical() #19, !dbg !5798
  %67 = load volatile i8, i8* %43, align 4, !dbg !5799, !tbaa !5543
  %68 = icmp eq i8 %67, -1, !dbg !5799
  br i1 %68, label %69, label %70, !dbg !5802

69:                                               ; preds = %66
  store volatile i8 0, i8* %43, align 4, !dbg !5803, !tbaa !5543
  br label %70, !dbg !5803

70:                                               ; preds = %69, %66
  %71 = load volatile i8, i8* %44, align 1, !dbg !5805, !tbaa !5546
  %72 = icmp eq i8 %71, -1, !dbg !5805
  br i1 %72, label %73, label %74, !dbg !5802

73:                                               ; preds = %70
  store volatile i8 0, i8* %44, align 1, !dbg !5807, !tbaa !5546
  br label %74, !dbg !5807

74:                                               ; preds = %73, %70
  call void @vPortExitCritical() #19, !dbg !5798
  call void @llvm.dbg.value(metadata i32* %5, metadata !5679, metadata !DIExpression(DW_OP_deref)), !dbg !5690
  %75 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* noundef nonnull %6, i32* noundef nonnull %5) #19, !dbg !5809
  %76 = icmp eq i32 %75, 0, !dbg !5811
  br i1 %76, label %77, label %87, !dbg !5812

77:                                               ; preds = %74
  %78 = call fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !5813
  %79 = icmp eq i32 %78, 0, !dbg !5816
  br i1 %79, label %85, label %80, !dbg !5817

80:                                               ; preds = %77
  %81 = load i32, i32* %5, align 4, !dbg !5818, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %81, metadata !5679, metadata !DIExpression()), !dbg !5690
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %45, i32 noundef %81) #19, !dbg !5820
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !5821
  %82 = call i32 @xTaskResumeAll() #19, !dbg !5822
  %83 = icmp eq i32 %82, 0, !dbg !5824
  br i1 %83, label %84, label %89, !dbg !5825

84:                                               ; preds = %80
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5826, !tbaa !1032
  call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !5826, !srcloc !5829
  call void asm sideeffect "isb", ""() #21, !dbg !5826, !srcloc !5830
  br label %89, !dbg !5831

85:                                               ; preds = %77
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !5832
  %86 = call i32 @xTaskResumeAll() #19, !dbg !5834
  br label %89

87:                                               ; preds = %74
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !5835
  %88 = call i32 @xTaskResumeAll() #19, !dbg !5837
  br label %96, !dbg !5838

89:                                               ; preds = %85, %84, %80
  call void @llvm.dbg.value(metadata i32 undef, metadata !5681, metadata !DIExpression()), !dbg !5690
  call void @vPortEnterCritical() #19, !dbg !5736
  %90 = load volatile i32, i32* %36, align 4, !dbg !5740, !tbaa !5532
  %91 = load i32, i32* %38, align 4, !dbg !5743, !tbaa !5523
  %92 = icmp ult i32 %90, %91, !dbg !5744
  br i1 %92, label %50, label %93, !dbg !5745, !llvm.loop !5839

93:                                               ; preds = %89
  %94 = load i32, i32* %5, align 4, !dbg !5842, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %94, metadata !5679, metadata !DIExpression()), !dbg !5690
  %95 = icmp eq i32 %94, 0, !dbg !5746
  br i1 %95, label %64, label %66, !dbg !5749

96:                                               ; preds = %87, %64, %63
  %97 = phi i32 [ 1, %63 ], [ 0, %64 ], [ 0, %87 ], !dbg !5843
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #21, !dbg !5844
  ret i32 %97, !dbg !5844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef %0, i8* noundef %1, i32 noundef %2) unnamed_addr #3 !dbg !5845 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !5849, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i8* %1, metadata !5850, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %2, metadata !5851, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 0, metadata !5852, metadata !DIExpression()), !dbg !5854
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !5855
  %5 = load volatile i32, i32* %4, align 4, !dbg !5855, !tbaa !5532
  call void @llvm.dbg.value(metadata i32 %5, metadata !5853, metadata !DIExpression()), !dbg !5854
  %6 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !5856
  %7 = load i32, i32* %6, align 4, !dbg !5856, !tbaa !5525
  %8 = icmp eq i32 %7, 0, !dbg !5858
  br i1 %8, label %9, label %18, !dbg !5859

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !5860
  %11 = load i8*, i8** %10, align 4, !dbg !5860, !tbaa !5520
  %12 = icmp eq i8* %11, null, !dbg !5864
  br i1 %12, label %13, label %54, !dbg !5865

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, !dbg !5866
  %15 = bitcast %union.anon.9* %14 to %struct.tskTaskControlBlock**, !dbg !5868
  %16 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %15, align 4, !dbg !5868, !tbaa !1418
  %17 = tail call i32 @xTaskPriorityDisinherit(%struct.tskTaskControlBlock* noundef %16) #19, !dbg !5869
  call void @llvm.dbg.value(metadata i32 %17, metadata !5852, metadata !DIExpression()), !dbg !5854
  store %struct.tskTaskControlBlock* null, %struct.tskTaskControlBlock** %15, align 4, !dbg !5870, !tbaa !1418
  br label %54, !dbg !5871

18:                                               ; preds = %3
  %19 = icmp eq i32 %2, 0, !dbg !5872
  br i1 %19, label %20, label %33, !dbg !5874

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !5875
  %22 = load i8*, i8** %21, align 4, !dbg !5875, !tbaa !5535
  %23 = tail call i8* @memcpy(i8* noundef %22, i8* noundef %1, i32 noundef %7) #19, !dbg !5877
  %24 = load i32, i32* %6, align 4, !dbg !5878, !tbaa !5525
  %25 = load i8*, i8** %21, align 4, !dbg !5879, !tbaa !5535
  %26 = getelementptr inbounds i8, i8* %25, i32 %24, !dbg !5879
  store i8* %26, i8** %21, align 4, !dbg !5879, !tbaa !5535
  %27 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, i32 0, i32 0, !dbg !5880
  %28 = load i8*, i8** %27, align 4, !dbg !5880, !tbaa !1418
  %29 = icmp ult i8* %26, %28, !dbg !5882
  br i1 %29, label %54, label %30, !dbg !5883

30:                                               ; preds = %20
  %31 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !5884
  %32 = load i8*, i8** %31, align 4, !dbg !5884, !tbaa !5520
  store i8* %32, i8** %21, align 4, !dbg !5886, !tbaa !5535
  br label %54, !dbg !5887

33:                                               ; preds = %18
  %34 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, i32 0, i32 1, !dbg !5888
  %35 = load i8*, i8** %34, align 4, !dbg !5888, !tbaa !1418
  %36 = tail call i8* @memcpy(i8* noundef %35, i8* noundef %1, i32 noundef %7) #19, !dbg !5890
  %37 = load i32, i32* %6, align 4, !dbg !5891, !tbaa !5525
  %38 = load i8*, i8** %34, align 4, !dbg !5892, !tbaa !1418
  %39 = sub i32 0, %37, !dbg !5892
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !5892
  store i8* %40, i8** %34, align 4, !dbg !5892, !tbaa !1418
  %41 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !5893
  %42 = load i8*, i8** %41, align 4, !dbg !5893, !tbaa !5520
  %43 = icmp ult i8* %40, %42, !dbg !5895
  br i1 %43, label %44, label %48, !dbg !5896

44:                                               ; preds = %33
  %45 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, i32 0, i32 0, !dbg !5897
  %46 = load i8*, i8** %45, align 4, !dbg !5897, !tbaa !1418
  %47 = getelementptr inbounds i8, i8* %46, i32 %39, !dbg !5899
  store i8* %47, i8** %34, align 4, !dbg !5900, !tbaa !1418
  br label %48, !dbg !5901

48:                                               ; preds = %33, %44
  %49 = icmp eq i32 %2, 2, !dbg !5902
  %50 = icmp ne i32 %5, 0
  %51 = select i1 %49, i1 %50, i1 false, !dbg !5904
  %52 = sext i1 %51 to i32, !dbg !5904
  %53 = add i32 %5, %52, !dbg !5904
  br label %54, !dbg !5904

54:                                               ; preds = %48, %20, %30, %13, %9
  %55 = phi i32 [ %17, %13 ], [ 0, %9 ], [ 0, %30 ], [ 0, %20 ], [ 0, %48 ], !dbg !5854
  %56 = phi i32 [ %5, %13 ], [ %5, %9 ], [ %5, %30 ], [ %5, %20 ], [ %53, %48 ], !dbg !5854
  call void @llvm.dbg.value(metadata i32 %56, metadata !5853, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.value(metadata i32 %55, metadata !5852, metadata !DIExpression()), !dbg !5854
  %57 = add i32 %56, 1, !dbg !5905
  store volatile i32 %57, i32* %4, align 4, !dbg !5906, !tbaa !5532
  ret i32 %55, !dbg !5907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef %0) unnamed_addr #3 !dbg !5908 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !5914, metadata !DIExpression()), !dbg !5916
  tail call void @vPortEnterCritical() #19, !dbg !5917
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !5918
  %3 = load volatile i32, i32* %2, align 4, !dbg !5918, !tbaa !5532
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !5921
  %5 = load i32, i32* %4, align 4, !dbg !5921, !tbaa !5523
  %6 = icmp eq i32 %3, %5, !dbg !5922
  %7 = zext i1 %6 to i32
  call void @llvm.dbg.value(metadata i32 %7, metadata !5915, metadata !DIExpression()), !dbg !5916
  tail call void @vPortExitCritical() #19, !dbg !5923
  ret i32 %7, !dbg !5924
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef %0) unnamed_addr #3 !dbg !5925 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !5929, metadata !DIExpression()), !dbg !5934
  tail call void @vPortEnterCritical() #19, !dbg !5935
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9, !dbg !5936
  %3 = load volatile i8, i8* %2, align 1, !dbg !5936, !tbaa !5546
  call void @llvm.dbg.value(metadata i8 %3, metadata !5930, metadata !DIExpression()), !dbg !5937
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, !dbg !5938
  %5 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 0, !dbg !5938
  call void @llvm.dbg.value(metadata i8 %3, metadata !5930, metadata !DIExpression()), !dbg !5937
  %6 = icmp sgt i8 %3, 0, !dbg !5942
  br i1 %6, label %7, label %18, !dbg !5943

7:                                                ; preds = %1, %15
  %8 = phi i8 [ %16, %15 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i8 %8, metadata !5930, metadata !DIExpression()), !dbg !5937
  %9 = load volatile i32, i32* %5, align 4, !dbg !5938, !tbaa !5765
  %10 = icmp eq i32 %9, 0, !dbg !5938
  br i1 %10, label %18, label %11, !dbg !5944

11:                                               ; preds = %7
  %12 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %4) #19, !dbg !5945
  %13 = icmp eq i32 %12, 0, !dbg !5948
  br i1 %13, label %15, label %14, !dbg !5949

14:                                               ; preds = %11
  tail call void @vTaskMissedYield() #19, !dbg !5950
  br label %15, !dbg !5952

15:                                               ; preds = %14, %11
  %16 = add nsw i8 %8, -1, !dbg !5953
  call void @llvm.dbg.value(metadata i8 %16, metadata !5930, metadata !DIExpression()), !dbg !5937
  %17 = icmp sgt i8 %8, 1, !dbg !5942
  br i1 %17, label %7, label %18, !dbg !5943, !llvm.loop !5954

18:                                               ; preds = %15, %7, %1
  store volatile i8 -1, i8* %2, align 1, !dbg !5956, !tbaa !5546
  tail call void @vPortExitCritical() #19, !dbg !5957
  tail call void @vPortEnterCritical() #19, !dbg !5958
  %19 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !5959
  %20 = load volatile i8, i8* %19, align 4, !dbg !5959, !tbaa !5543
  call void @llvm.dbg.value(metadata i8 %20, metadata !5932, metadata !DIExpression()), !dbg !5960
  %21 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, !dbg !5961
  %22 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %21, i32 0, i32 0, !dbg !5961
  %23 = icmp sgt i8 %20, 0, !dbg !5964
  br i1 %23, label %24, label %35, !dbg !5965

24:                                               ; preds = %18, %32
  %25 = phi i8 [ %33, %32 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 %25, metadata !5932, metadata !DIExpression()), !dbg !5960
  %26 = load volatile i32, i32* %22, align 4, !dbg !5961, !tbaa !5554
  %27 = icmp eq i32 %26, 0, !dbg !5961
  br i1 %27, label %35, label %28, !dbg !5966

28:                                               ; preds = %24
  %29 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %21) #19, !dbg !5967
  %30 = icmp eq i32 %29, 0, !dbg !5970
  br i1 %30, label %32, label %31, !dbg !5971

31:                                               ; preds = %28
  tail call void @vTaskMissedYield() #19, !dbg !5972
  br label %32, !dbg !5974

32:                                               ; preds = %28, %31
  %33 = add nsw i8 %25, -1, !dbg !5975
  call void @llvm.dbg.value(metadata i8 %33, metadata !5932, metadata !DIExpression()), !dbg !5960
  %34 = icmp sgt i8 %25, 1, !dbg !5964
  br i1 %34, label %24, label %35, !dbg !5965, !llvm.loop !5976

35:                                               ; preds = %32, %24, %18
  store volatile i8 -1, i8* %19, align 4, !dbg !5978, !tbaa !5543
  tail call void @vPortExitCritical() #19, !dbg !5979
  ret void, !dbg !5980
}

; Function Attrs: optsize
declare !dbg !5981 dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveMutexRecursive(%struct.QueueDefinition* noundef %0) local_unnamed_addr #3 !dbg !5986 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !5990, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !5992, metadata !DIExpression()), !dbg !5993
  %2 = icmp eq %struct.QueueDefinition* %0, null, !dbg !5994
  br i1 %2, label %3, label %6, !dbg !5996

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !5997, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %4, metadata !5506, metadata !DIExpression()) #21, !dbg !6000
  br label %5, !dbg !6001

5:                                                ; preds = %5, %3
  br label %5, !dbg !6002, !llvm.loop !6005

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, !dbg !6007
  %8 = bitcast %union.anon.9* %7 to %struct.tskTaskControlBlock**, !dbg !6009
  %9 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %8, align 4, !dbg !6009, !tbaa !1418
  %10 = tail call %struct.tskTaskControlBlock* @xTaskGetCurrentTaskHandle() #19, !dbg !6010
  %11 = icmp eq %struct.tskTaskControlBlock* %9, %10, !dbg !6011
  br i1 %11, label %12, label %20, !dbg !6012

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, i32 0, i32 1, !dbg !6013
  %14 = bitcast i8** %13 to i32*, !dbg !6013
  %15 = load i32, i32* %14, align 4, !dbg !6015, !tbaa !1418
  %16 = add i32 %15, -1, !dbg !6015
  store i32 %16, i32* %14, align 4, !dbg !6015, !tbaa !1418
  %17 = icmp eq i32 %16, 0, !dbg !6016
  br i1 %17, label %18, label %20, !dbg !6018

18:                                               ; preds = %12
  %19 = tail call i32 @xQueueGenericSend(%struct.QueueDefinition* noundef nonnull %0, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !6019
  br label %20, !dbg !6021

20:                                               ; preds = %6, %18, %12
  %21 = phi i32 [ 1, %12 ], [ 1, %18 ], [ 0, %6 ], !dbg !6022
  call void @llvm.dbg.value(metadata i32 %21, metadata !5991, metadata !DIExpression()), !dbg !5993
  ret i32 %21, !dbg !6023
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueTakeMutexRecursive(%struct.QueueDefinition* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !6024 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6028, metadata !DIExpression()), !dbg !6032
  call void @llvm.dbg.value(metadata i32 %1, metadata !6029, metadata !DIExpression()), !dbg !6032
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6031, metadata !DIExpression()), !dbg !6032
  %3 = icmp eq %struct.QueueDefinition* %0, null, !dbg !6033
  br i1 %3, label %4, label %7, !dbg !6035

4:                                                ; preds = %2
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6036, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %5, metadata !5506, metadata !DIExpression()) #21, !dbg !6039
  br label %6, !dbg !6040

6:                                                ; preds = %6, %4
  br label %6, !dbg !6041, !llvm.loop !6044

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, !dbg !6046
  %9 = bitcast %union.anon.9* %8 to %struct.tskTaskControlBlock**, !dbg !6048
  %10 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %9, align 4, !dbg !6048, !tbaa !1418
  %11 = tail call %struct.tskTaskControlBlock* @xTaskGetCurrentTaskHandle() #19, !dbg !6049
  %12 = icmp eq %struct.tskTaskControlBlock* %10, %11, !dbg !6050
  br i1 %12, label %16, label %13, !dbg !6051

13:                                               ; preds = %7
  %14 = tail call i32 @xQueueSemaphoreTake(%struct.QueueDefinition* noundef nonnull %0, i32 noundef %1) #20, !dbg !6052
  call void @llvm.dbg.value(metadata i32 %14, metadata !6030, metadata !DIExpression()), !dbg !6032
  %15 = icmp eq i32 %14, 0, !dbg !6054
  br i1 %15, label %22, label %16, !dbg !6056

16:                                               ; preds = %13, %7
  %17 = phi i32 [ 1, %7 ], [ %14, %13 ]
  %18 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, i32 0, i32 1, !dbg !6057
  %19 = bitcast i8** %18 to i32*, !dbg !6057
  %20 = load i32, i32* %19, align 4, !dbg !6057, !tbaa !1418
  %21 = add i32 %20, 1, !dbg !6057
  store i32 %21, i32* %19, align 4, !dbg !6057, !tbaa !1418
  br label %22, !dbg !6058

22:                                               ; preds = %16, %13
  %23 = phi i32 [ 0, %13 ], [ %17, %16 ], !dbg !6057
  call void @llvm.dbg.value(metadata i32 %23, metadata !6030, metadata !DIExpression()), !dbg !6032
  ret i32 %23, !dbg !6058
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueSemaphoreTake(%struct.QueueDefinition* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !6059 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.xTIME_OUT, align 4
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6061, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 %1, metadata !6062, metadata !DIExpression()), !dbg !6081
  store i32 %1, i32* %3, align 4, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 0, metadata !6063, metadata !DIExpression()), !dbg !6081
  %5 = bitcast %struct.xTIME_OUT* %4 to i8*, !dbg !6082
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #21, !dbg !6082
  call void @llvm.dbg.declare(metadata %struct.xTIME_OUT* %4, metadata !6064, metadata !DIExpression()), !dbg !6083
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6065, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 0, metadata !6066, metadata !DIExpression()), !dbg !6081
  %6 = icmp eq %struct.QueueDefinition* %0, null, !dbg !6084
  br i1 %6, label %7, label %10, !dbg !6086

7:                                                ; preds = %2
  %8 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6087, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %8, metadata !5506, metadata !DIExpression()) #21, !dbg !6090
  br label %9, !dbg !6091

9:                                                ; preds = %9, %7
  br label %9, !dbg !6092, !llvm.loop !6095

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !6097
  %12 = load i32, i32* %11, align 4, !dbg !6097, !tbaa !5525
  %13 = icmp eq i32 %12, 0, !dbg !6097
  br i1 %13, label %17, label %14, !dbg !6099

14:                                               ; preds = %10
  %15 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6100, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %15, metadata !5506, metadata !DIExpression()) #21, !dbg !6103
  br label %16, !dbg !6104

16:                                               ; preds = %16, %14
  br label %16, !dbg !6105, !llvm.loop !6108

17:                                               ; preds = %10
  %18 = tail call i32 @xTaskGetSchedulerState() #19, !dbg !6110
  %19 = icmp eq i32 %18, 0, !dbg !6110
  call void @llvm.dbg.value(metadata i32 %1, metadata !6062, metadata !DIExpression()), !dbg !6081
  %20 = icmp ne i32 %1, 0, !dbg !6110
  %21 = and i1 %19, %20, !dbg !6110
  br i1 %21, label %34, label %22, !dbg !6113

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !6063, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 0, metadata !6066, metadata !DIExpression()), !dbg !6081
  call void @vPortEnterCritical() #19, !dbg !6114
  %23 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !6115
  %24 = load volatile i32, i32* %23, align 4, !dbg !6115, !tbaa !5532
  call void @llvm.dbg.value(metadata i32 %24, metadata !6067, metadata !DIExpression()), !dbg !6116
  %25 = icmp eq i32 %24, 0, !dbg !6117
  br i1 %25, label %26, label %37, !dbg !6119

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8
  %28 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9
  %29 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0
  %30 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2
  %31 = bitcast %union.anon.9* %30 to %struct.tskTaskControlBlock**
  %32 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4
  call void @llvm.dbg.value(metadata i32 0, metadata !6066, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 %1, metadata !6062, metadata !DIExpression()), !dbg !6081
  %33 = icmp eq i32 %1, 0, !dbg !6120
  br i1 %33, label %56, label %62, !dbg !6123

34:                                               ; preds = %17
  %35 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6124, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %35, metadata !5506, metadata !DIExpression()) #21, !dbg !6127
  br label %36, !dbg !6128

36:                                               ; preds = %36, %34
  br label %36, !dbg !6129, !llvm.loop !6132

37:                                               ; preds = %103, %22
  %38 = phi i32 [ %24, %22 ], [ %105, %103 ], !dbg !6115
  %39 = add i32 %38, -1, !dbg !6134
  store volatile i32 %39, i32* %23, align 4, !dbg !6136, !tbaa !5532
  %40 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !6137
  %41 = load i8*, i8** %40, align 4, !dbg !6137, !tbaa !5520
  %42 = icmp eq i8* %41, null, !dbg !6140
  br i1 %42, label %43, label %47, !dbg !6141

43:                                               ; preds = %37
  %44 = call %struct.tskTaskControlBlock* @pvTaskIncrementMutexHeldCount() #19, !dbg !6142
  %45 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, !dbg !6144
  %46 = bitcast %union.anon.9* %45 to %struct.tskTaskControlBlock**, !dbg !6145
  store %struct.tskTaskControlBlock* %44, %struct.tskTaskControlBlock** %46, align 4, !dbg !6146, !tbaa !1418
  br label %47, !dbg !6147

47:                                               ; preds = %37, %43
  %48 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, !dbg !6148
  %49 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %48, i32 0, i32 0, !dbg !6148
  %50 = load volatile i32, i32* %49, align 4, !dbg !6148, !tbaa !5554
  %51 = icmp eq i32 %50, 0, !dbg !6148
  br i1 %51, label %110, label %52, !dbg !6150

52:                                               ; preds = %47
  %53 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %48) #19, !dbg !6151
  %54 = icmp eq i32 %53, 0, !dbg !6154
  br i1 %54, label %110, label %55, !dbg !6155

55:                                               ; preds = %52
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6156, !tbaa !1032
  call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !6156, !srcloc !6159
  call void asm sideeffect "isb", ""() #21, !dbg !6156, !srcloc !6160
  br label %110, !dbg !6161

56:                                               ; preds = %107, %26
  %57 = phi i32 [ 0, %26 ], [ %104, %107 ]
  %58 = icmp eq i32 %57, 0, !dbg !6162
  br i1 %58, label %110, label %59, !dbg !6166

59:                                               ; preds = %56
  %60 = call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6167, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %60, metadata !5506, metadata !DIExpression()) #21, !dbg !6170
  br label %61, !dbg !6171

61:                                               ; preds = %61, %59
  br label %61, !dbg !6172, !llvm.loop !6175

62:                                               ; preds = %26, %107
  %63 = phi i32 [ %104, %107 ], [ 0, %26 ]
  %64 = phi i1 [ false, %107 ], [ true, %26 ]
  call void @llvm.dbg.value(metadata i32 %63, metadata !6066, metadata !DIExpression()), !dbg !6081
  br i1 %64, label %65, label %66, !dbg !6177

65:                                               ; preds = %62
  call void @vTaskInternalSetTimeOutState(%struct.xTIME_OUT* noundef nonnull %4) #19, !dbg !6178
  call void @llvm.dbg.value(metadata i32 1, metadata !6063, metadata !DIExpression()), !dbg !6081
  br label %66, !dbg !6181

66:                                               ; preds = %62, %65
  call void @llvm.dbg.value(metadata i32 undef, metadata !6063, metadata !DIExpression()), !dbg !6081
  call void @vPortExitCritical() #19, !dbg !6182
  call void @vTaskSuspendAll() #19, !dbg !6183
  call void @vPortEnterCritical() #19, !dbg !6184
  %67 = load volatile i8, i8* %27, align 4, !dbg !6185, !tbaa !5543
  %68 = icmp eq i8 %67, -1, !dbg !6185
  br i1 %68, label %69, label %70, !dbg !6188

69:                                               ; preds = %66
  store volatile i8 0, i8* %27, align 4, !dbg !6189, !tbaa !5543
  br label %70, !dbg !6189

70:                                               ; preds = %69, %66
  %71 = load volatile i8, i8* %28, align 1, !dbg !6191, !tbaa !5546
  %72 = icmp eq i8 %71, -1, !dbg !6191
  br i1 %72, label %73, label %74, !dbg !6188

73:                                               ; preds = %70
  store volatile i8 0, i8* %28, align 1, !dbg !6193, !tbaa !5546
  br label %74, !dbg !6193

74:                                               ; preds = %73, %70
  call void @vPortExitCritical() #19, !dbg !6184
  call void @llvm.dbg.value(metadata i32* %3, metadata !6062, metadata !DIExpression(DW_OP_deref)), !dbg !6081
  %75 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* noundef nonnull %4, i32* noundef nonnull %3) #19, !dbg !6195
  %76 = icmp eq i32 %75, 0, !dbg !6196
  br i1 %76, label %77, label %94, !dbg !6197

77:                                               ; preds = %74
  %78 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6198
  %79 = icmp eq i32 %78, 0, !dbg !6201
  br i1 %79, label %92, label %80, !dbg !6202

80:                                               ; preds = %77
  %81 = load i8*, i8** %29, align 4, !dbg !6203, !tbaa !5520
  %82 = icmp eq i8* %81, null, !dbg !6207
  br i1 %82, label %83, label %86, !dbg !6208

83:                                               ; preds = %80
  call void @vPortEnterCritical() #19, !dbg !6209
  %84 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %31, align 4, !dbg !6211, !tbaa !1418
  %85 = call i32 @xTaskPriorityInherit(%struct.tskTaskControlBlock* noundef %84) #19, !dbg !6213
  call void @llvm.dbg.value(metadata i32 %85, metadata !6066, metadata !DIExpression()), !dbg !6081
  call void @vPortExitCritical() #19, !dbg !6214
  br label %86, !dbg !6215

86:                                               ; preds = %80, %83
  %87 = phi i32 [ %85, %83 ], [ %63, %80 ], !dbg !6081
  call void @llvm.dbg.value(metadata i32 %87, metadata !6066, metadata !DIExpression()), !dbg !6081
  %88 = load i32, i32* %3, align 4, !dbg !6216, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %88, metadata !6062, metadata !DIExpression()), !dbg !6081
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %32, i32 noundef %88) #19, !dbg !6217
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6218
  %89 = call i32 @xTaskResumeAll() #19, !dbg !6219
  %90 = icmp eq i32 %89, 0, !dbg !6221
  br i1 %90, label %91, label %103, !dbg !6222

91:                                               ; preds = %86
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6223, !tbaa !1032
  call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !6223, !srcloc !6226
  call void asm sideeffect "isb", ""() #21, !dbg !6223, !srcloc !6227
  br label %103, !dbg !6228

92:                                               ; preds = %77
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6229
  %93 = call i32 @xTaskResumeAll() #19, !dbg !6231
  br label %103

94:                                               ; preds = %74
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6232
  %95 = call i32 @xTaskResumeAll() #19, !dbg !6233
  %96 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6234
  %97 = icmp eq i32 %96, 0, !dbg !6235
  br i1 %97, label %103, label %98, !dbg !6236

98:                                               ; preds = %94
  %99 = icmp eq i32 %63, 0, !dbg !6237
  br i1 %99, label %112, label %100, !dbg !6238

100:                                              ; preds = %98
  call void @vPortEnterCritical() #19, !dbg !6239
  %101 = call fastcc i32 @prvGetDisinheritPriorityAfterTimeout(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6240
  call void @llvm.dbg.value(metadata i32 %101, metadata !6072, metadata !DIExpression()), !dbg !6241
  %102 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %31, align 4, !dbg !6242, !tbaa !1418
  call void @vTaskPriorityDisinheritAfterTimeout(%struct.tskTaskControlBlock* noundef %102, i32 noundef %101) #19, !dbg !6243
  br label %110, !dbg !6244

103:                                              ; preds = %94, %92, %86, %91
  %104 = phi i32 [ %87, %91 ], [ %87, %86 ], [ %63, %92 ], [ %63, %94 ], !dbg !6081
  call void @llvm.dbg.value(metadata i32 undef, metadata !6063, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 %104, metadata !6066, metadata !DIExpression()), !dbg !6081
  call void @vPortEnterCritical() #19, !dbg !6114
  %105 = load volatile i32, i32* %23, align 4, !dbg !6115, !tbaa !5532
  call void @llvm.dbg.value(metadata i32 %105, metadata !6067, metadata !DIExpression()), !dbg !6116
  %106 = icmp eq i32 %105, 0, !dbg !6117
  br i1 %106, label %107, label %37, !dbg !6119, !llvm.loop !6245

107:                                              ; preds = %103
  %108 = load i32, i32* %3, align 4, !dbg !6248, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %104, metadata !6066, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 %108, metadata !6062, metadata !DIExpression()), !dbg !6081
  %109 = icmp eq i32 %108, 0, !dbg !6120
  br i1 %109, label %56, label %62, !dbg !6123

110:                                              ; preds = %56, %52, %55, %47, %100
  %111 = phi i32 [ 0, %100 ], [ 1, %47 ], [ 1, %55 ], [ 1, %52 ], [ 0, %56 ]
  call void @vPortExitCritical() #19, !dbg !6249
  br label %112, !dbg !6250

112:                                              ; preds = %110, %98
  %113 = phi i32 [ 0, %98 ], [ %111, %110 ], !dbg !6249
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #21, !dbg !6250
  ret i32 %113, !dbg !6250
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef %0) unnamed_addr #3 !dbg !6251 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6253, metadata !DIExpression()), !dbg !6255
  tail call void @vPortEnterCritical() #19, !dbg !6256
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !6257
  %3 = load volatile i32, i32* %2, align 4, !dbg !6257, !tbaa !5532
  %4 = icmp eq i32 %3, 0, !dbg !6260
  %5 = zext i1 %4 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6254, metadata !DIExpression()), !dbg !6255
  tail call void @vPortExitCritical() #19, !dbg !6261
  ret i32 %5, !dbg !6262
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @prvGetDisinheritPriorityAfterTimeout(%struct.QueueDefinition* noundef %0) unnamed_addr #8 !dbg !6263 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6268, metadata !DIExpression()), !dbg !6270
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, i32 0, !dbg !6271
  %3 = load volatile i32, i32* %2, align 4, !dbg !6271, !tbaa !5765
  %4 = icmp eq i32 %3, 0, !dbg !6273
  br i1 %4, label %11, label %5, !dbg !6274

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, i32 2, i32 1, !dbg !6275
  %7 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !6275, !tbaa !6277
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %7, i32 0, i32 0, !dbg !6275
  %9 = load i32, i32* %8, align 4, !dbg !6275, !tbaa !3141
  %10 = sub i32 5, %9, !dbg !6278
  call void @llvm.dbg.value(metadata i32 %10, metadata !6269, metadata !DIExpression()), !dbg !6270
  br label %11, !dbg !6279

11:                                               ; preds = %1, %5
  %12 = phi i32 [ %10, %5 ], [ 0, %1 ], !dbg !6280
  call void @llvm.dbg.value(metadata i32 %12, metadata !6269, metadata !DIExpression()), !dbg !6270
  ret i32 %12, !dbg !6281
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.QueueDefinition* @xQueueCreateCountingSemaphore(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !6282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6286, metadata !DIExpression()), !dbg !6289
  call void @llvm.dbg.value(metadata i32 %1, metadata !6287, metadata !DIExpression()), !dbg !6289
  %3 = icmp eq i32 %0, 0, !dbg !6290
  br i1 %3, label %4, label %7, !dbg !6292

4:                                                ; preds = %2
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6293, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %5, metadata !5506, metadata !DIExpression()) #21, !dbg !6296
  br label %6, !dbg !6297

6:                                                ; preds = %6, %4
  br label %6, !dbg !6298, !llvm.loop !6301

7:                                                ; preds = %2
  %8 = icmp ugt i32 %1, %0, !dbg !6303
  br i1 %8, label %9, label %12, !dbg !6305

9:                                                ; preds = %7
  %10 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6306, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %10, metadata !5506, metadata !DIExpression()) #21, !dbg !6309
  br label %11, !dbg !6310

11:                                               ; preds = %11, %9
  br label %11, !dbg !6311, !llvm.loop !6314

12:                                               ; preds = %7
  %13 = tail call %struct.QueueDefinition* @xQueueGenericCreate(i32 noundef %0, i32 noundef 0, i8 noundef zeroext 2) #20, !dbg !6316
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %13, metadata !6288, metadata !DIExpression()), !dbg !6289
  %14 = icmp eq %struct.QueueDefinition* %13, null, !dbg !6317
  br i1 %14, label %17, label %15, !dbg !6319

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %13, i32 0, i32 5, !dbg !6320
  store volatile i32 %1, i32* %16, align 4, !dbg !6322, !tbaa !5532
  br label %17, !dbg !6323

17:                                               ; preds = %12, %15
  ret %struct.QueueDefinition* %13, !dbg !6324
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSendFromISR(%struct.QueueDefinition* noundef %0, i8* noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #3 !dbg !6325 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6329, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.value(metadata i8* %1, metadata !6330, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.value(metadata i32* %2, metadata !6331, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.value(metadata i32 %3, metadata !6332, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6335, metadata !DIExpression()), !dbg !6342
  %5 = icmp eq %struct.QueueDefinition* %0, null, !dbg !6343
  br i1 %5, label %6, label %9, !dbg !6345

6:                                                ; preds = %4
  %7 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6346, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %7, metadata !5506, metadata !DIExpression()) #21, !dbg !6349
  br label %8, !dbg !6350

8:                                                ; preds = %8, %6
  br label %8, !dbg !6351, !llvm.loop !6354

9:                                                ; preds = %4
  %10 = icmp eq i8* %1, null, !dbg !6356
  br i1 %10, label %11, label %18, !dbg !6356

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !6356
  %13 = load i32, i32* %12, align 4, !dbg !6356, !tbaa !5525
  %14 = icmp eq i32 %13, 0, !dbg !6356
  br i1 %14, label %18, label %15, !dbg !6358

15:                                               ; preds = %11
  %16 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6359, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %16, metadata !5506, metadata !DIExpression()) #21, !dbg !6362
  br label %17, !dbg !6363

17:                                               ; preds = %17, %15
  br label %17, !dbg !6364, !llvm.loop !6367

18:                                               ; preds = %9, %11
  %19 = icmp eq i32 %3, 2, !dbg !6369
  br i1 %19, label %20, label %27, !dbg !6369

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !6369
  %22 = load i32, i32* %21, align 4, !dbg !6369, !tbaa !5523
  %23 = icmp eq i32 %22, 1, !dbg !6369
  br i1 %23, label %27, label %24, !dbg !6371

24:                                               ; preds = %20
  %25 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6372, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %25, metadata !5506, metadata !DIExpression()) #21, !dbg !6375
  br label %26, !dbg !6376

26:                                               ; preds = %26, %24
  br label %26, !dbg !6377, !llvm.loop !6380

27:                                               ; preds = %18, %20
  tail call void @vPortValidateInterruptPriority() #19, !dbg !6382
  %28 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #21, !dbg !6383, !srcloc !6389
  call void @llvm.dbg.value(metadata i32 undef, metadata !6386, metadata !DIExpression()) #21, !dbg !6390
  call void @llvm.dbg.value(metadata i32 undef, metadata !6387, metadata !DIExpression()) #21, !dbg !6390
  call void @llvm.dbg.value(metadata i32 undef, metadata !6334, metadata !DIExpression()), !dbg !6342
  %29 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !6391
  %30 = load volatile i32, i32* %29, align 4, !dbg !6391, !tbaa !5532
  %31 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !6392
  %32 = load i32, i32* %31, align 4, !dbg !6392, !tbaa !5523
  %33 = icmp ult i32 %30, %32, !dbg !6393
  %34 = or i1 %19, %33, !dbg !6394
  br i1 %34, label %35, label %54, !dbg !6394

35:                                               ; preds = %27
  %36 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9, !dbg !6395
  %37 = load volatile i8, i8* %36, align 1, !dbg !6395, !tbaa !5546
  call void @llvm.dbg.value(metadata i8 %37, metadata !6336, metadata !DIExpression()), !dbg !6396
  %38 = load volatile i32, i32* %29, align 4, !dbg !6397, !tbaa !5532
  call void @llvm.dbg.value(metadata i32 %38, metadata !6341, metadata !DIExpression()), !dbg !6396
  %39 = tail call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %0, i8* noundef %1, i32 noundef %3) #20, !dbg !6398
  %40 = icmp eq i8 %37, -1, !dbg !6399
  br i1 %40, label %41, label %52, !dbg !6401

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, !dbg !6402
  %43 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %42, i32 0, i32 0, !dbg !6402
  %44 = load volatile i32, i32* %43, align 4, !dbg !6402, !tbaa !5765
  %45 = icmp eq i32 %44, 0, !dbg !6402
  br i1 %45, label %54, label %46, !dbg !6406

46:                                               ; preds = %41
  %47 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %42) #19, !dbg !6407
  %48 = icmp ne i32 %47, 0, !dbg !6410
  %49 = icmp ne i32* %2, null
  %50 = and i1 %49, %48, !dbg !6411
  br i1 %50, label %51, label %54, !dbg !6411

51:                                               ; preds = %46
  store i32 1, i32* %2, align 4, !dbg !6412, !tbaa !1582
  br label %54, !dbg !6416

52:                                               ; preds = %35
  %53 = add nuw i8 %37, 1, !dbg !6417
  store volatile i8 %53, i8* %36, align 1, !dbg !6419, !tbaa !5546
  br label %54

54:                                               ; preds = %27, %52, %41, %51, %46
  %55 = phi i32 [ 1, %46 ], [ 1, %51 ], [ 1, %41 ], [ 1, %52 ], [ 0, %27 ], !dbg !6420
  %56 = extractvalue { i32, i32 } %28, 0, !dbg !6383
  call void @llvm.dbg.value(metadata i32 %56, metadata !6386, metadata !DIExpression()) #21, !dbg !6390
  call void @llvm.dbg.value(metadata i32 %56, metadata !6334, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.value(metadata i32 %55, metadata !6333, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.value(metadata i32 undef, metadata !6421, metadata !DIExpression()) #21, !dbg !6424
  tail call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %56) #21, !dbg !6426, !srcloc !6427
  ret i32 %55, !dbg !6428
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveFromISR(%struct.QueueDefinition* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #3 !dbg !6429 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6433, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.value(metadata i32* %1, metadata !6434, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6437, metadata !DIExpression()), !dbg !6443
  %3 = icmp eq %struct.QueueDefinition* %0, null, !dbg !6444
  br i1 %3, label %4, label %7, !dbg !6446

4:                                                ; preds = %2
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6447, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %5, metadata !5506, metadata !DIExpression()) #21, !dbg !6450
  br label %6, !dbg !6451

6:                                                ; preds = %6, %4
  br label %6, !dbg !6452, !llvm.loop !6455

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !6457
  %9 = load i32, i32* %8, align 4, !dbg !6457, !tbaa !5525
  %10 = icmp eq i32 %9, 0, !dbg !6457
  br i1 %10, label %14, label %11, !dbg !6459

11:                                               ; preds = %7
  %12 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6460, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %12, metadata !5506, metadata !DIExpression()) #21, !dbg !6463
  br label %13, !dbg !6464

13:                                               ; preds = %13, %11
  br label %13, !dbg !6465, !llvm.loop !6468

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !6470
  %16 = load i8*, i8** %15, align 4, !dbg !6470, !tbaa !5520
  %17 = icmp eq i8* %16, null, !dbg !6470
  br i1 %17, label %18, label %26, !dbg !6470

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, !dbg !6470
  %20 = bitcast %union.anon.9* %19 to %struct.tskTaskControlBlock**, !dbg !6470
  %21 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %20, align 4, !dbg !6470, !tbaa !1418
  %22 = icmp eq %struct.tskTaskControlBlock* %21, null, !dbg !6470
  br i1 %22, label %26, label %23, !dbg !6472

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6473, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %24, metadata !5506, metadata !DIExpression()) #21, !dbg !6476
  br label %25, !dbg !6477

25:                                               ; preds = %25, %23
  br label %25, !dbg !6478, !llvm.loop !6481

26:                                               ; preds = %14, %18
  tail call void @vPortValidateInterruptPriority() #19, !dbg !6483
  %27 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #21, !dbg !6484, !srcloc !6389
  call void @llvm.dbg.value(metadata i32 undef, metadata !6386, metadata !DIExpression()) #21, !dbg !6486
  call void @llvm.dbg.value(metadata i32 undef, metadata !6387, metadata !DIExpression()) #21, !dbg !6486
  call void @llvm.dbg.value(metadata i32 undef, metadata !6436, metadata !DIExpression()), !dbg !6443
  %28 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !6487
  %29 = load volatile i32, i32* %28, align 4, !dbg !6487, !tbaa !5532
  call void @llvm.dbg.value(metadata i32 %29, metadata !6438, metadata !DIExpression()), !dbg !6488
  %30 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !6489
  %31 = load i32, i32* %30, align 4, !dbg !6489, !tbaa !5523
  %32 = icmp ult i32 %29, %31, !dbg !6490
  br i1 %32, label %33, label %51, !dbg !6491

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9, !dbg !6492
  %35 = load volatile i8, i8* %34, align 1, !dbg !6492, !tbaa !5546
  call void @llvm.dbg.value(metadata i8 %35, metadata !6440, metadata !DIExpression()), !dbg !6493
  %36 = add nuw i32 %29, 1, !dbg !6494
  store volatile i32 %36, i32* %28, align 4, !dbg !6495, !tbaa !5532
  %37 = icmp eq i8 %35, -1, !dbg !6496
  br i1 %37, label %38, label %49, !dbg !6498

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, !dbg !6499
  %40 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %39, i32 0, i32 0, !dbg !6499
  %41 = load volatile i32, i32* %40, align 4, !dbg !6499, !tbaa !5765
  %42 = icmp eq i32 %41, 0, !dbg !6499
  br i1 %42, label %51, label %43, !dbg !6503

43:                                               ; preds = %38
  %44 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %39) #19, !dbg !6504
  %45 = icmp ne i32 %44, 0, !dbg !6507
  %46 = icmp ne i32* %1, null
  %47 = and i1 %46, %45, !dbg !6508
  br i1 %47, label %48, label %51, !dbg !6508

48:                                               ; preds = %43
  store i32 1, i32* %1, align 4, !dbg !6509, !tbaa !1582
  br label %51, !dbg !6513

49:                                               ; preds = %33
  %50 = add nuw i8 %35, 1, !dbg !6514
  store volatile i8 %50, i8* %34, align 1, !dbg !6516, !tbaa !5546
  br label %51

51:                                               ; preds = %26, %49, %38, %48, %43
  %52 = phi i32 [ 1, %43 ], [ 1, %48 ], [ 1, %38 ], [ 1, %49 ], [ 0, %26 ], !dbg !6517
  %53 = extractvalue { i32, i32 } %27, 0, !dbg !6484
  call void @llvm.dbg.value(metadata i32 %53, metadata !6386, metadata !DIExpression()) #21, !dbg !6486
  call void @llvm.dbg.value(metadata i32 %53, metadata !6436, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.value(metadata i32 %52, metadata !6435, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.value(metadata i32 undef, metadata !6421, metadata !DIExpression()) #21, !dbg !6518
  tail call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %53) #21, !dbg !6520, !srcloc !6427
  ret i32 %52, !dbg !6521
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueReceive(%struct.QueueDefinition* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !6522 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.xTIME_OUT, align 4
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6526, metadata !DIExpression()), !dbg !6537
  call void @llvm.dbg.value(metadata i8* %1, metadata !6527, metadata !DIExpression()), !dbg !6537
  call void @llvm.dbg.value(metadata i32 %2, metadata !6528, metadata !DIExpression()), !dbg !6537
  store i32 %2, i32* %4, align 4, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 0, metadata !6529, metadata !DIExpression()), !dbg !6537
  %6 = bitcast %struct.xTIME_OUT* %5 to i8*, !dbg !6538
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #21, !dbg !6538
  call void @llvm.dbg.declare(metadata %struct.xTIME_OUT* %5, metadata !6530, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6531, metadata !DIExpression()), !dbg !6537
  %7 = icmp eq %struct.QueueDefinition* %0, null, !dbg !6540
  br i1 %7, label %8, label %11, !dbg !6542

8:                                                ; preds = %3
  %9 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6543, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %9, metadata !5506, metadata !DIExpression()) #21, !dbg !6546
  br label %10, !dbg !6547

10:                                               ; preds = %10, %8
  br label %10, !dbg !6548, !llvm.loop !6551

11:                                               ; preds = %3
  %12 = icmp eq i8* %1, null, !dbg !6553
  br i1 %12, label %13, label %20, !dbg !6553

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !6553
  %15 = load i32, i32* %14, align 4, !dbg !6553, !tbaa !5525
  %16 = icmp eq i32 %15, 0, !dbg !6553
  br i1 %16, label %20, label %17, !dbg !6555

17:                                               ; preds = %13
  %18 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6556, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %18, metadata !5506, metadata !DIExpression()) #21, !dbg !6559
  br label %19, !dbg !6560

19:                                               ; preds = %19, %17
  br label %19, !dbg !6561, !llvm.loop !6564

20:                                               ; preds = %11, %13
  %21 = tail call i32 @xTaskGetSchedulerState() #19, !dbg !6566
  %22 = icmp eq i32 %21, 0, !dbg !6566
  call void @llvm.dbg.value(metadata i32 %2, metadata !6528, metadata !DIExpression()), !dbg !6537
  %23 = icmp ne i32 %2, 0, !dbg !6566
  %24 = and i1 %22, %23, !dbg !6566
  br i1 %24, label %34, label %25, !dbg !6569

25:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 undef, metadata !6529, metadata !DIExpression()), !dbg !6537
  call void @vPortEnterCritical() #19, !dbg !6570
  %26 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !6571
  %27 = load volatile i32, i32* %26, align 4, !dbg !6571, !tbaa !5532
  call void @llvm.dbg.value(metadata i32 %27, metadata !6532, metadata !DIExpression()), !dbg !6572
  %28 = icmp eq i32 %27, 0, !dbg !6573
  br i1 %28, label %29, label %37, !dbg !6575

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8
  %31 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9
  %32 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4
  call void @llvm.dbg.value(metadata i32 %2, metadata !6528, metadata !DIExpression()), !dbg !6537
  %33 = icmp eq i32 %2, 0, !dbg !6576
  br i1 %33, label %80, label %48, !dbg !6579

34:                                               ; preds = %20
  %35 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6580, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %35, metadata !5506, metadata !DIExpression()) #21, !dbg !6583
  br label %36, !dbg !6584

36:                                               ; preds = %36, %34
  br label %36, !dbg !6585, !llvm.loop !6588

37:                                               ; preds = %74, %25
  %38 = phi i32 [ %27, %25 ], [ %75, %74 ], !dbg !6571
  call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %0, i8* noundef %1) #20, !dbg !6590
  %39 = add i32 %38, -1, !dbg !6592
  store volatile i32 %39, i32* %26, align 4, !dbg !6593, !tbaa !5532
  %40 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, !dbg !6594
  %41 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %40, i32 0, i32 0, !dbg !6594
  %42 = load volatile i32, i32* %41, align 4, !dbg !6594, !tbaa !5554
  %43 = icmp eq i32 %42, 0, !dbg !6594
  br i1 %43, label %80, label %44, !dbg !6596

44:                                               ; preds = %37
  %45 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %40) #19, !dbg !6597
  %46 = icmp eq i32 %45, 0, !dbg !6600
  br i1 %46, label %80, label %47, !dbg !6601

47:                                               ; preds = %44
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6602, !tbaa !1032
  call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !6602, !srcloc !6605
  call void asm sideeffect "isb", ""() #21, !dbg !6602, !srcloc !6606
  br label %80, !dbg !6607

48:                                               ; preds = %29
  call void @vTaskInternalSetTimeOutState(%struct.xTIME_OUT* noundef nonnull %5) #19, !dbg !6608
  call void @llvm.dbg.value(metadata i32 1, metadata !6529, metadata !DIExpression()), !dbg !6537
  br label %49, !dbg !6611

49:                                               ; preds = %77, %48
  call void @llvm.dbg.value(metadata i32 undef, metadata !6529, metadata !DIExpression()), !dbg !6537
  call void @vPortExitCritical() #19, !dbg !6612
  call void @vTaskSuspendAll() #19, !dbg !6613
  call void @vPortEnterCritical() #19, !dbg !6614
  %50 = load volatile i8, i8* %30, align 4, !dbg !6615, !tbaa !5543
  %51 = icmp eq i8 %50, -1, !dbg !6615
  br i1 %51, label %52, label %53, !dbg !6618

52:                                               ; preds = %49
  store volatile i8 0, i8* %30, align 4, !dbg !6619, !tbaa !5543
  br label %53, !dbg !6619

53:                                               ; preds = %52, %49
  %54 = load volatile i8, i8* %31, align 1, !dbg !6621, !tbaa !5546
  %55 = icmp eq i8 %54, -1, !dbg !6621
  br i1 %55, label %56, label %57, !dbg !6618

56:                                               ; preds = %53
  store volatile i8 0, i8* %31, align 1, !dbg !6623, !tbaa !5546
  br label %57, !dbg !6623

57:                                               ; preds = %56, %53
  call void @vPortExitCritical() #19, !dbg !6614
  call void @llvm.dbg.value(metadata i32* %4, metadata !6528, metadata !DIExpression(DW_OP_deref)), !dbg !6537
  %58 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* noundef nonnull %5, i32* noundef nonnull %4) #19, !dbg !6625
  %59 = icmp eq i32 %58, 0, !dbg !6627
  br i1 %59, label %60, label %70, !dbg !6628

60:                                               ; preds = %57
  %61 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6629
  %62 = icmp eq i32 %61, 0, !dbg !6632
  br i1 %62, label %68, label %63, !dbg !6633

63:                                               ; preds = %60
  %64 = load i32, i32* %4, align 4, !dbg !6634, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %64, metadata !6528, metadata !DIExpression()), !dbg !6537
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %32, i32 noundef %64) #19, !dbg !6636
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6637
  %65 = call i32 @xTaskResumeAll() #19, !dbg !6638
  %66 = icmp eq i32 %65, 0, !dbg !6640
  br i1 %66, label %67, label %74, !dbg !6641

67:                                               ; preds = %63
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6642, !tbaa !1032
  call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !6642, !srcloc !6645
  call void asm sideeffect "isb", ""() #21, !dbg !6642, !srcloc !6646
  br label %74, !dbg !6647

68:                                               ; preds = %60
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6648
  %69 = call i32 @xTaskResumeAll() #19, !dbg !6650
  br label %74

70:                                               ; preds = %57
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6651
  %71 = call i32 @xTaskResumeAll() #19, !dbg !6653
  %72 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6654
  %73 = icmp eq i32 %72, 0, !dbg !6656
  br i1 %73, label %74, label %82, !dbg !6657

74:                                               ; preds = %70, %68, %63, %67
  call void @llvm.dbg.value(metadata i32 undef, metadata !6529, metadata !DIExpression()), !dbg !6537
  call void @vPortEnterCritical() #19, !dbg !6570
  %75 = load volatile i32, i32* %26, align 4, !dbg !6571, !tbaa !5532
  call void @llvm.dbg.value(metadata i32 %75, metadata !6532, metadata !DIExpression()), !dbg !6572
  %76 = icmp eq i32 %75, 0, !dbg !6573
  br i1 %76, label %77, label %37, !dbg !6575, !llvm.loop !6658

77:                                               ; preds = %74
  %78 = load i32, i32* %4, align 4, !dbg !6661, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %78, metadata !6528, metadata !DIExpression()), !dbg !6537
  %79 = icmp eq i32 %78, 0, !dbg !6576
  br i1 %79, label %80, label %49, !dbg !6579

80:                                               ; preds = %77, %29, %44, %47, %37
  %81 = phi i32 [ 1, %37 ], [ 1, %47 ], [ 1, %44 ], [ 0, %29 ], [ 0, %77 ]
  call void @vPortExitCritical() #19, !dbg !6662
  br label %82, !dbg !6663

82:                                               ; preds = %70, %80
  %83 = phi i32 [ %81, %80 ], [ 0, %70 ], !dbg !6664
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #21, !dbg !6663
  ret i32 %83, !dbg !6663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* nocapture noundef %0, i8* noundef %1) unnamed_addr #3 !dbg !6665 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6669, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.value(metadata i8* %1, metadata !6670, metadata !DIExpression()), !dbg !6671
  %3 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !6672
  %4 = load i32, i32* %3, align 4, !dbg !6672, !tbaa !5525
  %5 = icmp eq i32 %4, 0, !dbg !6674
  br i1 %5, label %19, label %6, !dbg !6675

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, i32 0, i32 1, !dbg !6676
  %8 = load i8*, i8** %7, align 4, !dbg !6678, !tbaa !1418
  %9 = getelementptr inbounds i8, i8* %8, i32 %4, !dbg !6678
  store i8* %9, i8** %7, align 4, !dbg !6678, !tbaa !1418
  %10 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, i32 0, i32 0, !dbg !6679
  %11 = load i8*, i8** %10, align 4, !dbg !6679, !tbaa !1418
  %12 = icmp ult i8* %9, %11, !dbg !6681
  br i1 %12, label %16, label %13, !dbg !6682

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !6683
  %15 = load i8*, i8** %14, align 4, !dbg !6683, !tbaa !5520
  store i8* %15, i8** %7, align 4, !dbg !6685, !tbaa !1418
  br label %16, !dbg !6686

16:                                               ; preds = %6, %13
  %17 = phi i8* [ %9, %6 ], [ %15, %13 ], !dbg !6687
  %18 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %17, i32 noundef %4) #19, !dbg !6688
  br label %19, !dbg !6689

19:                                               ; preds = %16, %2
  ret void, !dbg !6690
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueuePeek(%struct.QueueDefinition* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !6691 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.xTIME_OUT, align 4
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6693, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata i8* %1, metadata !6694, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata i32 %2, metadata !6695, metadata !DIExpression()), !dbg !6705
  store i32 %2, i32* %4, align 4, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 0, metadata !6696, metadata !DIExpression()), !dbg !6705
  %6 = bitcast %struct.xTIME_OUT* %5 to i8*, !dbg !6706
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #21, !dbg !6706
  call void @llvm.dbg.declare(metadata %struct.xTIME_OUT* %5, metadata !6697, metadata !DIExpression()), !dbg !6707
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6699, metadata !DIExpression()), !dbg !6705
  %7 = icmp eq %struct.QueueDefinition* %0, null, !dbg !6708
  br i1 %7, label %8, label %11, !dbg !6710

8:                                                ; preds = %3
  %9 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6711, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %9, metadata !5506, metadata !DIExpression()) #21, !dbg !6714
  br label %10, !dbg !6715

10:                                               ; preds = %10, %8
  br label %10, !dbg !6716, !llvm.loop !6719

11:                                               ; preds = %3
  %12 = icmp eq i8* %1, null, !dbg !6721
  br i1 %12, label %13, label %20, !dbg !6721

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !6721
  %15 = load i32, i32* %14, align 4, !dbg !6721, !tbaa !5525
  %16 = icmp eq i32 %15, 0, !dbg !6721
  br i1 %16, label %20, label %17, !dbg !6723

17:                                               ; preds = %13
  %18 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6724, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %18, metadata !5506, metadata !DIExpression()) #21, !dbg !6727
  br label %19, !dbg !6728

19:                                               ; preds = %19, %17
  br label %19, !dbg !6729, !llvm.loop !6732

20:                                               ; preds = %11, %13
  %21 = tail call i32 @xTaskGetSchedulerState() #19, !dbg !6734
  %22 = icmp eq i32 %21, 0, !dbg !6734
  call void @llvm.dbg.value(metadata i32 %2, metadata !6695, metadata !DIExpression()), !dbg !6705
  %23 = icmp ne i32 %2, 0, !dbg !6734
  %24 = and i1 %22, %23, !dbg !6734
  br i1 %24, label %34, label %25, !dbg !6737

25:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 undef, metadata !6696, metadata !DIExpression()), !dbg !6705
  call void @vPortEnterCritical() #19, !dbg !6738
  %26 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !6739
  %27 = load volatile i32, i32* %26, align 4, !dbg !6739, !tbaa !5532
  call void @llvm.dbg.value(metadata i32 %27, metadata !6700, metadata !DIExpression()), !dbg !6740
  %28 = icmp eq i32 %27, 0, !dbg !6741
  br i1 %28, label %29, label %37, !dbg !6743

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8
  %31 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9
  %32 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4
  call void @llvm.dbg.value(metadata i32 %2, metadata !6695, metadata !DIExpression()), !dbg !6705
  %33 = icmp eq i32 %2, 0, !dbg !6744
  br i1 %33, label %80, label %48, !dbg !6747

34:                                               ; preds = %20
  %35 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6748, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %35, metadata !5506, metadata !DIExpression()) #21, !dbg !6751
  br label %36, !dbg !6752

36:                                               ; preds = %36, %34
  br label %36, !dbg !6753, !llvm.loop !6756

37:                                               ; preds = %74, %25
  %38 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, i32 0, i32 1, !dbg !6758
  %39 = load i8*, i8** %38, align 4, !dbg !6758, !tbaa !1418
  call void @llvm.dbg.value(metadata i8* %39, metadata !6698, metadata !DIExpression()), !dbg !6705
  call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %0, i8* noundef %1) #20, !dbg !6760
  store i8* %39, i8** %38, align 4, !dbg !6761, !tbaa !1418
  %40 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, !dbg !6762
  %41 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %40, i32 0, i32 0, !dbg !6762
  %42 = load volatile i32, i32* %41, align 4, !dbg !6762, !tbaa !5765
  %43 = icmp eq i32 %42, 0, !dbg !6762
  br i1 %43, label %80, label %44, !dbg !6764

44:                                               ; preds = %37
  %45 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %40) #19, !dbg !6765
  %46 = icmp eq i32 %45, 0, !dbg !6768
  br i1 %46, label %80, label %47, !dbg !6769

47:                                               ; preds = %44
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6770, !tbaa !1032
  call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !6770, !srcloc !6773
  call void asm sideeffect "isb", ""() #21, !dbg !6770, !srcloc !6774
  br label %80, !dbg !6775

48:                                               ; preds = %29
  call void @vTaskInternalSetTimeOutState(%struct.xTIME_OUT* noundef nonnull %5) #19, !dbg !6776
  call void @llvm.dbg.value(metadata i32 1, metadata !6696, metadata !DIExpression()), !dbg !6705
  br label %49, !dbg !6779

49:                                               ; preds = %77, %48
  call void @llvm.dbg.value(metadata i32 undef, metadata !6696, metadata !DIExpression()), !dbg !6705
  call void @vPortExitCritical() #19, !dbg !6780
  call void @vTaskSuspendAll() #19, !dbg !6781
  call void @vPortEnterCritical() #19, !dbg !6782
  %50 = load volatile i8, i8* %30, align 4, !dbg !6783, !tbaa !5543
  %51 = icmp eq i8 %50, -1, !dbg !6783
  br i1 %51, label %52, label %53, !dbg !6786

52:                                               ; preds = %49
  store volatile i8 0, i8* %30, align 4, !dbg !6787, !tbaa !5543
  br label %53, !dbg !6787

53:                                               ; preds = %52, %49
  %54 = load volatile i8, i8* %31, align 1, !dbg !6789, !tbaa !5546
  %55 = icmp eq i8 %54, -1, !dbg !6789
  br i1 %55, label %56, label %57, !dbg !6786

56:                                               ; preds = %53
  store volatile i8 0, i8* %31, align 1, !dbg !6791, !tbaa !5546
  br label %57, !dbg !6791

57:                                               ; preds = %56, %53
  call void @vPortExitCritical() #19, !dbg !6782
  call void @llvm.dbg.value(metadata i32* %4, metadata !6695, metadata !DIExpression(DW_OP_deref)), !dbg !6705
  %58 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* noundef nonnull %5, i32* noundef nonnull %4) #19, !dbg !6793
  %59 = icmp eq i32 %58, 0, !dbg !6795
  br i1 %59, label %60, label %70, !dbg !6796

60:                                               ; preds = %57
  %61 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6797
  %62 = icmp eq i32 %61, 0, !dbg !6800
  br i1 %62, label %68, label %63, !dbg !6801

63:                                               ; preds = %60
  %64 = load i32, i32* %4, align 4, !dbg !6802, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %64, metadata !6695, metadata !DIExpression()), !dbg !6705
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %32, i32 noundef %64) #19, !dbg !6804
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6805
  %65 = call i32 @xTaskResumeAll() #19, !dbg !6806
  %66 = icmp eq i32 %65, 0, !dbg !6808
  br i1 %66, label %67, label %74, !dbg !6809

67:                                               ; preds = %63
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6810, !tbaa !1032
  call void asm sideeffect "dsb", "~{memory}"() #21, !dbg !6810, !srcloc !6813
  call void asm sideeffect "isb", ""() #21, !dbg !6810, !srcloc !6814
  br label %74, !dbg !6815

68:                                               ; preds = %60
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6816
  %69 = call i32 @xTaskResumeAll() #19, !dbg !6818
  br label %74

70:                                               ; preds = %57
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6819
  %71 = call i32 @xTaskResumeAll() #19, !dbg !6821
  %72 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !6822
  %73 = icmp eq i32 %72, 0, !dbg !6824
  br i1 %73, label %74, label %82, !dbg !6825

74:                                               ; preds = %70, %68, %63, %67
  call void @llvm.dbg.value(metadata i32 undef, metadata !6696, metadata !DIExpression()), !dbg !6705
  call void @vPortEnterCritical() #19, !dbg !6738
  %75 = load volatile i32, i32* %26, align 4, !dbg !6739, !tbaa !5532
  call void @llvm.dbg.value(metadata i32 %75, metadata !6700, metadata !DIExpression()), !dbg !6740
  %76 = icmp eq i32 %75, 0, !dbg !6741
  br i1 %76, label %77, label %37, !dbg !6743, !llvm.loop !6826

77:                                               ; preds = %74
  %78 = load i32, i32* %4, align 4, !dbg !6829, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %78, metadata !6695, metadata !DIExpression()), !dbg !6705
  %79 = icmp eq i32 %78, 0, !dbg !6744
  br i1 %79, label %80, label %49, !dbg !6747

80:                                               ; preds = %77, %29, %44, %47, %37
  %81 = phi i32 [ 1, %37 ], [ 1, %47 ], [ 1, %44 ], [ 0, %29 ], [ 0, %77 ]
  call void @vPortExitCritical() #19, !dbg !6830
  br label %82, !dbg !6831

82:                                               ; preds = %70, %80
  %83 = phi i32 [ %81, %80 ], [ 0, %70 ], !dbg !6832
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #21, !dbg !6831
  ret i32 %83, !dbg !6831
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueReceiveFromISR(%struct.QueueDefinition* noundef %0, i8* noundef %1, i32* noundef writeonly %2) local_unnamed_addr #3 !dbg !6833 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6837, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.value(metadata i8* %1, metadata !6838, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.value(metadata i32* %2, metadata !6839, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6842, metadata !DIExpression()), !dbg !6848
  %4 = icmp eq %struct.QueueDefinition* %0, null, !dbg !6849
  br i1 %4, label %5, label %8, !dbg !6851

5:                                                ; preds = %3
  %6 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6852, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %6, metadata !5506, metadata !DIExpression()) #21, !dbg !6855
  br label %7, !dbg !6856

7:                                                ; preds = %7, %5
  br label %7, !dbg !6857, !llvm.loop !6860

8:                                                ; preds = %3
  %9 = icmp eq i8* %1, null, !dbg !6862
  br i1 %9, label %10, label %17, !dbg !6862

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !6862
  %12 = load i32, i32* %11, align 4, !dbg !6862, !tbaa !5525
  %13 = icmp eq i32 %12, 0, !dbg !6862
  br i1 %13, label %17, label %14, !dbg !6864

14:                                               ; preds = %10
  %15 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6865, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %15, metadata !5506, metadata !DIExpression()) #21, !dbg !6868
  br label %16, !dbg !6869

16:                                               ; preds = %16, %14
  br label %16, !dbg !6870, !llvm.loop !6873

17:                                               ; preds = %8, %10
  tail call void @vPortValidateInterruptPriority() #19, !dbg !6875
  %18 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #21, !dbg !6876, !srcloc !6389
  call void @llvm.dbg.value(metadata i32 undef, metadata !6386, metadata !DIExpression()) #21, !dbg !6878
  call void @llvm.dbg.value(metadata i32 undef, metadata !6387, metadata !DIExpression()) #21, !dbg !6878
  call void @llvm.dbg.value(metadata i32 undef, metadata !6841, metadata !DIExpression()), !dbg !6848
  %19 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !6879
  %20 = load volatile i32, i32* %19, align 4, !dbg !6879, !tbaa !5532
  call void @llvm.dbg.value(metadata i32 %20, metadata !6843, metadata !DIExpression()), !dbg !6880
  %21 = icmp eq i32 %20, 0, !dbg !6881
  br i1 %21, label %40, label %22, !dbg !6882

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !6883
  %24 = load volatile i8, i8* %23, align 4, !dbg !6883, !tbaa !5543
  call void @llvm.dbg.value(metadata i8 %24, metadata !6845, metadata !DIExpression()), !dbg !6884
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %0, i8* noundef %1) #20, !dbg !6885
  %25 = add i32 %20, -1, !dbg !6886
  store volatile i32 %25, i32* %19, align 4, !dbg !6887, !tbaa !5532
  %26 = icmp eq i8 %24, -1, !dbg !6888
  br i1 %26, label %27, label %38, !dbg !6890

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, !dbg !6891
  %29 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %28, i32 0, i32 0, !dbg !6891
  %30 = load volatile i32, i32* %29, align 4, !dbg !6891, !tbaa !5554
  %31 = icmp eq i32 %30, 0, !dbg !6891
  br i1 %31, label %40, label %32, !dbg !6894

32:                                               ; preds = %27
  %33 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %28) #19, !dbg !6895
  %34 = icmp ne i32 %33, 0, !dbg !6898
  %35 = icmp ne i32* %2, null
  %36 = and i1 %35, %34, !dbg !6899
  br i1 %36, label %37, label %40, !dbg !6899

37:                                               ; preds = %32
  store i32 1, i32* %2, align 4, !dbg !6900, !tbaa !1582
  br label %40, !dbg !6904

38:                                               ; preds = %22
  %39 = add nuw i8 %24, 1, !dbg !6905
  store volatile i8 %39, i8* %23, align 4, !dbg !6907, !tbaa !5543
  br label %40

40:                                               ; preds = %17, %38, %27, %37, %32
  %41 = phi i32 [ 1, %32 ], [ 1, %37 ], [ 1, %27 ], [ 1, %38 ], [ 0, %17 ], !dbg !6908
  %42 = extractvalue { i32, i32 } %18, 0, !dbg !6876
  call void @llvm.dbg.value(metadata i32 %42, metadata !6386, metadata !DIExpression()) #21, !dbg !6878
  call void @llvm.dbg.value(metadata i32 %42, metadata !6841, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.value(metadata i32 %41, metadata !6840, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.value(metadata i32 undef, metadata !6421, metadata !DIExpression()) #21, !dbg !6909
  tail call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %42) #21, !dbg !6911, !srcloc !6427
  ret i32 %41, !dbg !6912
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueuePeekFromISR(%struct.QueueDefinition* noundef %0, i8* noundef %1) local_unnamed_addr #3 !dbg !6913 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6917, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i8* %1, metadata !6918, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6922, metadata !DIExpression()), !dbg !6923
  %3 = icmp eq %struct.QueueDefinition* %0, null, !dbg !6924
  br i1 %3, label %4, label %7, !dbg !6926

4:                                                ; preds = %2
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6927, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %5, metadata !5506, metadata !DIExpression()) #21, !dbg !6930
  br label %6, !dbg !6931

6:                                                ; preds = %6, %4
  br label %6, !dbg !6932, !llvm.loop !6935

7:                                                ; preds = %2
  %8 = icmp eq i8* %1, null, !dbg !6937
  %9 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7
  %10 = load i32, i32* %9, align 4, !dbg !6923, !tbaa !5525
  %11 = icmp eq i32 %10, 0, !dbg !6937
  br i1 %8, label %12, label %16, !dbg !6937

12:                                               ; preds = %7
  br i1 %11, label %17, label %13, !dbg !6939

13:                                               ; preds = %12
  %14 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6940, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %14, metadata !5506, metadata !DIExpression()) #21, !dbg !6943
  br label %15, !dbg !6944

15:                                               ; preds = %15, %13
  br label %15, !dbg !6945, !llvm.loop !6948

16:                                               ; preds = %7
  br i1 %11, label %17, label %20, !dbg !6950

17:                                               ; preds = %12, %16
  %18 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6951, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %18, metadata !5506, metadata !DIExpression()) #21, !dbg !6955
  br label %19, !dbg !6956

19:                                               ; preds = %19, %17
  br label %19, !dbg !6957, !llvm.loop !6960

20:                                               ; preds = %16
  tail call void @vPortValidateInterruptPriority() #19, !dbg !6962
  %21 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i,~{memory}"(i32 80) #21, !dbg !6963, !srcloc !6389
  call void @llvm.dbg.value(metadata i32 undef, metadata !6386, metadata !DIExpression()) #21, !dbg !6965
  call void @llvm.dbg.value(metadata i32 undef, metadata !6387, metadata !DIExpression()) #21, !dbg !6965
  call void @llvm.dbg.value(metadata i32 undef, metadata !6920, metadata !DIExpression()), !dbg !6923
  %22 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !6966
  %23 = load volatile i32, i32* %22, align 4, !dbg !6966, !tbaa !5532
  %24 = icmp eq i32 %23, 0, !dbg !6969
  br i1 %24, label %28, label %25, !dbg !6970

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, i32 0, i32 1, !dbg !6971
  %27 = load i8*, i8** %26, align 4, !dbg !6971, !tbaa !1418
  call void @llvm.dbg.value(metadata i8* %27, metadata !6921, metadata !DIExpression()), !dbg !6923
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %0, i8* noundef nonnull %1) #20, !dbg !6973
  store i8* %27, i8** %26, align 4, !dbg !6974, !tbaa !1418
  call void @llvm.dbg.value(metadata i32 1, metadata !6919, metadata !DIExpression()), !dbg !6923
  br label %28, !dbg !6975

28:                                               ; preds = %20, %25
  %29 = phi i32 [ 1, %25 ], [ 0, %20 ], !dbg !6976
  %30 = extractvalue { i32, i32 } %21, 0, !dbg !6963
  call void @llvm.dbg.value(metadata i32 %30, metadata !6386, metadata !DIExpression()) #21, !dbg !6965
  call void @llvm.dbg.value(metadata i32 %30, metadata !6920, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i32 %29, metadata !6919, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.value(metadata i32 undef, metadata !6421, metadata !DIExpression()) #21, !dbg !6977
  tail call void asm sideeffect "\09msr basepri, $0\09", "r,~{memory}"(i32 %30) #21, !dbg !6979, !srcloc !6427
  ret i32 %29, !dbg !6980
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaiting(%struct.QueueDefinition* noundef %0) local_unnamed_addr #3 !dbg !6981 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !6986, metadata !DIExpression()), !dbg !6988
  %2 = icmp eq %struct.QueueDefinition* %0, null, !dbg !6989
  br i1 %2, label %3, label %6, !dbg !6991

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !6992, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %4, metadata !5506, metadata !DIExpression()) #21, !dbg !6995
  br label %5, !dbg !6996

5:                                                ; preds = %5, %3
  br label %5, !dbg !6997, !llvm.loop !7000

6:                                                ; preds = %1
  tail call void @vPortEnterCritical() #19, !dbg !7002
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !7003
  %8 = load volatile i32, i32* %7, align 4, !dbg !7003, !tbaa !5532
  call void @llvm.dbg.value(metadata i32 %8, metadata !6987, metadata !DIExpression()), !dbg !6988
  tail call void @vPortExitCritical() #19, !dbg !7005
  ret i32 %8, !dbg !7006
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueSpacesAvailable(%struct.QueueDefinition* noundef %0) local_unnamed_addr #3 !dbg !7007 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7009, metadata !DIExpression()), !dbg !7012
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7011, metadata !DIExpression()), !dbg !7012
  %2 = icmp eq %struct.QueueDefinition* %0, null, !dbg !7013
  br i1 %2, label %3, label %6, !dbg !7015

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !7016, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %4, metadata !5506, metadata !DIExpression()) #21, !dbg !7019
  br label %5, !dbg !7020

5:                                                ; preds = %5, %3
  br label %5, !dbg !7021, !llvm.loop !7024

6:                                                ; preds = %1
  tail call void @vPortEnterCritical() #19, !dbg !7026
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !7027
  %8 = load i32, i32* %7, align 4, !dbg !7027, !tbaa !5523
  %9 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !7029
  %10 = load volatile i32, i32* %9, align 4, !dbg !7029, !tbaa !5532
  %11 = sub i32 %8, %10, !dbg !7030
  call void @llvm.dbg.value(metadata i32 %11, metadata !7010, metadata !DIExpression()), !dbg !7012
  tail call void @vPortExitCritical() #19, !dbg !7031
  ret i32 %11, !dbg !7032
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaitingFromISR(%struct.QueueDefinition* noundef %0) local_unnamed_addr #3 !dbg !7033 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7035, metadata !DIExpression()), !dbg !7038
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7037, metadata !DIExpression()), !dbg !7038
  %2 = icmp eq %struct.QueueDefinition* %0, null, !dbg !7039
  br i1 %2, label %3, label %6, !dbg !7041

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !7042, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %4, metadata !5506, metadata !DIExpression()) #21, !dbg !7045
  br label %5, !dbg !7046

5:                                                ; preds = %5, %3
  br label %5, !dbg !7047, !llvm.loop !7050

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !7052
  %8 = load volatile i32, i32* %7, align 4, !dbg !7052, !tbaa !5532
  call void @llvm.dbg.value(metadata i32 %8, metadata !7036, metadata !DIExpression()), !dbg !7038
  ret i32 %8, !dbg !7053
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueDelete(%struct.QueueDefinition* noundef %0) local_unnamed_addr #3 !dbg !7054 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7058, metadata !DIExpression()), !dbg !7060
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7059, metadata !DIExpression()), !dbg !7060
  %2 = icmp eq %struct.QueueDefinition* %0, null, !dbg !7061
  br i1 %2, label %3, label %6, !dbg !7063

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !7064, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %4, metadata !5506, metadata !DIExpression()) #21, !dbg !7067
  br label %5, !dbg !7068

5:                                                ; preds = %5, %3
  br label %5, !dbg !7069, !llvm.loop !7072

6:                                                ; preds = %1
  tail call void @vQueueUnregisterQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !7074
  %7 = bitcast %struct.QueueDefinition* %0 to i8*, !dbg !7076
  tail call void @vPortFree(i8* noundef nonnull %7) #19, !dbg !7078
  ret void, !dbg !7079
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueUnregisterQueue(%struct.QueueDefinition* noundef readnone %0) local_unnamed_addr #14 !dbg !7080 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7082, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata i32 0, metadata !7083, metadata !DIExpression()), !dbg !7084
  br label %2, !dbg !7085

2:                                                ; preds = %1, %9
  %3 = phi i32 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7083, metadata !DIExpression()), !dbg !7084
  %4 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 1, !dbg !7087
  %5 = load %struct.QueueDefinition*, %struct.QueueDefinition** %4, align 4, !dbg !7087, !tbaa !7091
  %6 = icmp eq %struct.QueueDefinition* %5, %0, !dbg !7093
  br i1 %6, label %7, label %9, !dbg !7094

7:                                                ; preds = %2
  %8 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 0, !dbg !7095
  store i8* null, i8** %8, align 4, !dbg !7097, !tbaa !7098
  store %struct.QueueDefinition* null, %struct.QueueDefinition** %4, align 4, !dbg !7099, !tbaa !7091
  br label %12, !dbg !7100

9:                                                ; preds = %2
  %10 = add nuw nsw i32 %3, 1, !dbg !7101
  call void @llvm.dbg.value(metadata i32 %10, metadata !7083, metadata !DIExpression()), !dbg !7084
  %11 = icmp eq i32 %10, 8, !dbg !7102
  br i1 %11, label %12, label %2, !dbg !7085, !llvm.loop !7103

12:                                               ; preds = %9, %7
  ret void, !dbg !7105
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxQueueGetQueueNumber(%struct.QueueDefinition* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !7106 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7110, metadata !DIExpression()), !dbg !7111
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 10, !dbg !7112
  %3 = load i32, i32* %2, align 4, !dbg !7112, !tbaa !7113
  ret i32 %3, !dbg !7114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vQueueSetQueueNumber(%struct.QueueDefinition* nocapture noundef writeonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7115 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7119, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.value(metadata i32 %1, metadata !7120, metadata !DIExpression()), !dbg !7121
  %3 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 10, !dbg !7122
  store i32 %1, i32* %3, align 4, !dbg !7123, !tbaa !7113
  ret void, !dbg !7124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i8 @ucQueueGetQueueType(%struct.QueueDefinition* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !7125 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7129, metadata !DIExpression()), !dbg !7130
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 11, !dbg !7131
  %3 = load i8, i8* %2, align 4, !dbg !7131, !tbaa !5636
  ret i8 %3, !dbg !7132
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueEmptyFromISR(%struct.QueueDefinition* noundef %0) local_unnamed_addr #3 !dbg !7133 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7137, metadata !DIExpression()), !dbg !7140
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7139, metadata !DIExpression()), !dbg !7140
  %2 = icmp eq %struct.QueueDefinition* %0, null, !dbg !7141
  br i1 %2, label %3, label %6, !dbg !7143

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !7144, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %4, metadata !5506, metadata !DIExpression()) #21, !dbg !7147
  br label %5, !dbg !7148

5:                                                ; preds = %5, %3
  br label %5, !dbg !7149, !llvm.loop !7152

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !7154
  %8 = load volatile i32, i32* %7, align 4, !dbg !7154, !tbaa !5532
  %9 = icmp eq i32 %8, 0, !dbg !7156
  %10 = zext i1 %9 to i32
  call void @llvm.dbg.value(metadata i32 %10, metadata !7138, metadata !DIExpression()), !dbg !7140
  ret i32 %10, !dbg !7157
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueFullFromISR(%struct.QueueDefinition* noundef %0) local_unnamed_addr #3 !dbg !7158 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7160, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7162, metadata !DIExpression()), !dbg !7163
  %2 = icmp eq %struct.QueueDefinition* %0, null, !dbg !7164
  br i1 %2, label %3, label %6, !dbg !7166

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i,~{memory}"(i32 80) #21, !dbg !7167, !srcloc !5509
  call void @llvm.dbg.value(metadata i32 %4, metadata !5506, metadata !DIExpression()) #21, !dbg !7170
  br label %5, !dbg !7171

5:                                                ; preds = %5, %3
  br label %5, !dbg !7172, !llvm.loop !7175

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !7177
  %8 = load volatile i32, i32* %7, align 4, !dbg !7177, !tbaa !5532
  %9 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !7179
  %10 = load i32, i32* %9, align 4, !dbg !7179, !tbaa !5523
  %11 = icmp eq i32 %8, %10, !dbg !7180
  %12 = zext i1 %11 to i32
  call void @llvm.dbg.value(metadata i32 %12, metadata !7161, metadata !DIExpression()), !dbg !7163
  ret i32 %12, !dbg !7181
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueAddToRegistry(%struct.QueueDefinition* noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !7182 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7186, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i8* %1, metadata !7187, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7188, metadata !DIExpression()), !dbg !7189
  br label %3, !dbg !7190

3:                                                ; preds = %2, %10
  %4 = phi i32 [ 0, %2 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !7188, metadata !DIExpression()), !dbg !7189
  %5 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 0, !dbg !7192
  %6 = load i8*, i8** %5, align 4, !dbg !7192, !tbaa !7098
  %7 = icmp eq i8* %6, null, !dbg !7196
  br i1 %7, label %8, label %10, !dbg !7197

8:                                                ; preds = %3
  store i8* %1, i8** %5, align 4, !dbg !7198, !tbaa !7098
  %9 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 1, !dbg !7200
  store %struct.QueueDefinition* %0, %struct.QueueDefinition** %9, align 4, !dbg !7201, !tbaa !7091
  br label %13, !dbg !7202

10:                                               ; preds = %3
  %11 = add nuw nsw i32 %4, 1, !dbg !7203
  call void @llvm.dbg.value(metadata i32 %11, metadata !7188, metadata !DIExpression()), !dbg !7189
  %12 = icmp eq i32 %11, 8, !dbg !7204
  br i1 %12, label %13, label %3, !dbg !7190, !llvm.loop !7205

13:                                               ; preds = %10, %8
  ret void, !dbg !7207
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @pcQueueGetName(%struct.QueueDefinition* noundef readnone %0) local_unnamed_addr #9 !dbg !7208 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7212, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.value(metadata i8* null, metadata !7214, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.value(metadata i32 0, metadata !7213, metadata !DIExpression()), !dbg !7215
  br label %2, !dbg !7216

2:                                                ; preds = %1, %10
  %3 = phi i32 [ 0, %1 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7213, metadata !DIExpression()), !dbg !7215
  %4 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 1, !dbg !7218
  %5 = load %struct.QueueDefinition*, %struct.QueueDefinition** %4, align 4, !dbg !7218, !tbaa !7091
  %6 = icmp eq %struct.QueueDefinition* %5, %0, !dbg !7222
  br i1 %6, label %7, label %10, !dbg !7223

7:                                                ; preds = %2
  %8 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 0, !dbg !7224
  %9 = load i8*, i8** %8, align 4, !dbg !7224, !tbaa !7098
  call void @llvm.dbg.value(metadata i8* %9, metadata !7214, metadata !DIExpression()), !dbg !7215
  br label %13, !dbg !7226

10:                                               ; preds = %2
  %11 = add nuw nsw i32 %3, 1, !dbg !7227
  call void @llvm.dbg.value(metadata i32 %11, metadata !7213, metadata !DIExpression()), !dbg !7215
  %12 = icmp eq i32 %11, 8, !dbg !7228
  br i1 %12, label %13, label %2, !dbg !7216, !llvm.loop !7229

13:                                               ; preds = %10, %7
  %14 = phi i8* [ %9, %7 ], [ null, %10 ], !dbg !7215
  call void @llvm.dbg.value(metadata i8* %14, metadata !7214, metadata !DIExpression()), !dbg !7215
  ret i8* %14, !dbg !7231
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueWaitForMessageRestricted(%struct.QueueDefinition* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !7232 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7236, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.value(metadata i32 %1, metadata !7237, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.value(metadata i32 %2, metadata !7238, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !7239, metadata !DIExpression()), !dbg !7240
  tail call void @vPortEnterCritical() #19, !dbg !7241
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !7242
  %5 = load volatile i8, i8* %4, align 4, !dbg !7242, !tbaa !5543
  %6 = icmp eq i8 %5, -1, !dbg !7242
  br i1 %6, label %7, label %8, !dbg !7245

7:                                                ; preds = %3
  store volatile i8 0, i8* %4, align 4, !dbg !7246, !tbaa !5543
  br label %8, !dbg !7246

8:                                                ; preds = %7, %3
  %9 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9, !dbg !7248
  %10 = load volatile i8, i8* %9, align 1, !dbg !7248, !tbaa !5546
  %11 = icmp eq i8 %10, -1, !dbg !7248
  br i1 %11, label %12, label %13, !dbg !7245

12:                                               ; preds = %8
  store volatile i8 0, i8* %9, align 1, !dbg !7250, !tbaa !5546
  br label %13, !dbg !7250

13:                                               ; preds = %12, %8
  tail call void @vPortExitCritical() #19, !dbg !7241
  %14 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !7252
  %15 = load volatile i32, i32* %14, align 4, !dbg !7252, !tbaa !5532
  %16 = icmp eq i32 %15, 0, !dbg !7254
  br i1 %16, label %17, label %19, !dbg !7255

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, !dbg !7256
  tail call void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef nonnull %18, i32 noundef %1, i32 noundef %2) #19, !dbg !7258
  br label %19, !dbg !7259

19:                                               ; preds = %13, %17
  tail call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %0) #20, !dbg !7260
  ret void, !dbg !7261
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_Init() local_unnamed_addr #3 !dbg !7262 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7266, !tbaa !7267
  %2 = or i32 %1, 512, !dbg !7266
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7266, !tbaa !7267
  %3 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7269, !tbaa !7267
  %4 = or i32 %3, 1024, !dbg !7269
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7269, !tbaa !7267
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7270, !tbaa !7267
  %6 = or i32 %5, 256, !dbg !7270
  store volatile i32 %6, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7270, !tbaa !7267
  tail call void @HAL_NVIC_SetPriorityGrouping(i32 noundef 3) #19, !dbg !7271
  %7 = tail call i32 @HAL_InitTick(i32 noundef 0) #20, !dbg !7272
  tail call void @HAL_MspInit() #20, !dbg !7273
  ret i32 0, !dbg !7274
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_InitTick(i32 noundef %0) local_unnamed_addr #3 !dbg !7275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7279, metadata !DIExpression()), !dbg !7280
  %2 = load i32, i32* @SystemCoreClock, align 4, !dbg !7281, !tbaa !1032
  %3 = load i32, i32* @uwTickFreq, align 4, !dbg !7283, !tbaa !1418
  %4 = udiv i32 1000, %3, !dbg !7284
  %5 = udiv i32 %2, %4, !dbg !7285
  %6 = tail call i32 @HAL_SYSTICK_Config(i32 noundef %5) #19, !dbg !7286
  %7 = icmp eq i32 %6, 0, !dbg !7287
  %8 = icmp ult i32 %0, 16
  %9 = and i1 %8, %7, !dbg !7288
  br i1 %9, label %10, label %11, !dbg !7288

10:                                               ; preds = %1
  tail call void @HAL_NVIC_SetPriority(i32 noundef -1, i32 noundef %0, i32 noundef 0) #19, !dbg !7289
  store i32 %0, i32* @uwTickPrio, align 4, !dbg !7292, !tbaa !1032
  br label %11, !dbg !7293

11:                                               ; preds = %1, %10
  %12 = phi i32 [ 0, %10 ], [ 1, %1 ], !dbg !7280
  ret i32 %12, !dbg !7294
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_MspInit() local_unnamed_addr #3 !dbg !7295 {
  ret void, !dbg !7296
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_DeInit() local_unnamed_addr #3 !dbg !7297 {
  store volatile i32 -1, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !7298, !tbaa !7299
  store volatile i32 0, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !7300, !tbaa !7299
  store volatile i32 -1, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !7301, !tbaa !7302
  store volatile i32 0, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !7303, !tbaa !7302
  store volatile i32 -1, i32* inttoptr (i32 1073887248 to i32*), align 16, !dbg !7304, !tbaa !7305
  store volatile i32 0, i32* inttoptr (i32 1073887248 to i32*), align 16, !dbg !7306, !tbaa !7305
  store volatile i32 -1, i32* inttoptr (i32 1073887252 to i32*), align 4, !dbg !7307, !tbaa !7308
  store volatile i32 0, i32* inttoptr (i32 1073887252 to i32*), align 4, !dbg !7309, !tbaa !7308
  store volatile i32 -1, i32* inttoptr (i32 1073887256 to i32*), align 8, !dbg !7310, !tbaa !7311
  store volatile i32 0, i32* inttoptr (i32 1073887256 to i32*), align 8, !dbg !7312, !tbaa !7311
  tail call void @HAL_MspDeInit() #20, !dbg !7313
  ret i32 0, !dbg !7314
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_MspDeInit() local_unnamed_addr #3 !dbg !7315 {
  ret void, !dbg !7316
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_IncTick() local_unnamed_addr #3 !dbg !7317 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !7318, !tbaa !1418
  %2 = load volatile i32, i32* @uwTick, align 4, !dbg !7319, !tbaa !1032
  %3 = add i32 %2, %1, !dbg !7319
  store volatile i32 %3, i32* @uwTick, align 4, !dbg !7319, !tbaa !1032
  ret void, !dbg !7320
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_GetTick() local_unnamed_addr #3 !dbg !7321 {
  %1 = load volatile i32, i32* @uwTick, align 4, !dbg !7322, !tbaa !1032
  ret i32 %1, !dbg !7323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_GetTickPrio() local_unnamed_addr #10 !dbg !7324 {
  %1 = load i32, i32* @uwTickPrio, align 4, !dbg !7325, !tbaa !1032
  ret i32 %1, !dbg !7326
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_SetTickFreq(i32 noundef %0) local_unnamed_addr #3 !dbg !7327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7331, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.value(metadata i32 0, metadata !7332, metadata !DIExpression()), !dbg !7334
  %2 = load i32, i32* @uwTickFreq, align 4, !dbg !7335, !tbaa !1418
  %3 = icmp eq i32 %2, %0, !dbg !7337
  br i1 %3, label %9, label %4, !dbg !7338

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %2, metadata !7333, metadata !DIExpression()), !dbg !7334
  store i32 %0, i32* @uwTickFreq, align 4, !dbg !7339, !tbaa !1418
  %5 = load i32, i32* @uwTickPrio, align 4, !dbg !7341, !tbaa !1032
  %6 = tail call i32 @HAL_InitTick(i32 noundef %5) #20, !dbg !7342
  call void @llvm.dbg.value(metadata i32 %6, metadata !7332, metadata !DIExpression()), !dbg !7334
  %7 = icmp eq i32 %6, 0, !dbg !7343
  br i1 %7, label %9, label %8, !dbg !7345

8:                                                ; preds = %4
  store i32 %2, i32* @uwTickFreq, align 4, !dbg !7346, !tbaa !1418
  br label %9, !dbg !7348

9:                                                ; preds = %4, %8, %1
  %10 = phi i32 [ %6, %8 ], [ 0, %4 ], [ 0, %1 ], !dbg !7334
  call void @llvm.dbg.value(metadata i32 %10, metadata !7332, metadata !DIExpression()), !dbg !7334
  ret i32 %10, !dbg !7349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_GetTickFreq() local_unnamed_addr #10 !dbg !7350 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !7353, !tbaa !1418
  ret i32 %1, !dbg !7354
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_Delay(i32 noundef %0) local_unnamed_addr #3 !dbg !7355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7357, metadata !DIExpression()), !dbg !7360
  %2 = tail call i32 @HAL_GetTick() #20, !dbg !7361
  call void @llvm.dbg.value(metadata i32 %2, metadata !7358, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i32 %0, metadata !7359, metadata !DIExpression()), !dbg !7360
  %3 = icmp eq i32 %0, -1, !dbg !7362
  %4 = load i32, i32* @uwTickFreq, align 4, !dbg !7364
  %5 = add i32 %4, %0, !dbg !7364
  %6 = select i1 %3, i32 -1, i32 %5, !dbg !7364
  call void @llvm.dbg.value(metadata i32 %6, metadata !7359, metadata !DIExpression()), !dbg !7360
  br label %7, !dbg !7365

7:                                                ; preds = %7, %1
  %8 = tail call i32 @HAL_GetTick() #20, !dbg !7366
  %9 = sub i32 %8, %2, !dbg !7367
  %10 = icmp ult i32 %9, %6, !dbg !7368
  br i1 %10, label %7, label %11, !dbg !7365, !llvm.loop !7369

11:                                               ; preds = %7
  ret void, !dbg !7371
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_SuspendTick() local_unnamed_addr #3 !dbg !7372 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7373, !tbaa !7374
  %2 = and i32 %1, -3, !dbg !7373
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7373, !tbaa !7374
  ret void, !dbg !7376
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_ResumeTick() local_unnamed_addr #3 !dbg !7377 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7378, !tbaa !7374
  %2 = or i32 %1, 2, !dbg !7378
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7378, !tbaa !7374
  ret void, !dbg !7379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @HAL_GetHalVersion() local_unnamed_addr #6 !dbg !7380 {
  ret i32 17237760, !dbg !7381
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_GetREVID() local_unnamed_addr #8 !dbg !7382 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !7383, !tbaa !7374
  %2 = lshr i32 %1, 16, !dbg !7384
  ret i32 %2, !dbg !7385
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_GetDEVID() local_unnamed_addr #8 !dbg !7386 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !7387, !tbaa !7374
  %2 = and i32 %1, 4095, !dbg !7388
  ret i32 %2, !dbg !7389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_DBGMCU_EnableDBGSleepMode() local_unnamed_addr #7 !dbg !7390 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !7391, !tbaa !7392
  %2 = or i32 %1, 1, !dbg !7391
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !7391, !tbaa !7392
  ret void, !dbg !7393
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_DBGMCU_DisableDBGSleepMode() local_unnamed_addr #7 !dbg !7394 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !7395, !tbaa !7392
  %2 = and i32 %1, -2, !dbg !7395
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !7395, !tbaa !7392
  ret void, !dbg !7396
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_DBGMCU_EnableDBGStopMode() local_unnamed_addr #7 !dbg !7397 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !7398, !tbaa !7392
  %2 = or i32 %1, 2, !dbg !7398
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !7398, !tbaa !7392
  ret void, !dbg !7399
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_DBGMCU_DisableDBGStopMode() local_unnamed_addr #7 !dbg !7400 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !7401, !tbaa !7392
  %2 = and i32 %1, -3, !dbg !7401
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !7401, !tbaa !7392
  ret void, !dbg !7402
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_DBGMCU_EnableDBGStandbyMode() local_unnamed_addr #7 !dbg !7403 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !7404, !tbaa !7392
  %2 = or i32 %1, 4, !dbg !7404
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !7404, !tbaa !7392
  ret void, !dbg !7405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_DBGMCU_DisableDBGStandbyMode() local_unnamed_addr #7 !dbg !7406 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !7407, !tbaa !7392
  %2 = and i32 %1, -5, !dbg !7407
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !7407, !tbaa !7392
  ret void, !dbg !7408
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_EnableCompensationCell() local_unnamed_addr #7 !dbg !7409 {
  store volatile i32 1, i32* inttoptr (i32 1109853184 to i32*), align 1024, !dbg !7410, !tbaa !1032
  ret void, !dbg !7411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_DisableCompensationCell() local_unnamed_addr #7 !dbg !7412 {
  store volatile i32 0, i32* inttoptr (i32 1109853184 to i32*), align 1024, !dbg !7413, !tbaa !1032
  ret void, !dbg !7414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_GetUIDw0() local_unnamed_addr #10 !dbg !7415 {
  %1 = load i32, i32* inttoptr (i32 536836624 to i32*), align 16, !dbg !7416, !tbaa !1032
  ret i32 %1, !dbg !7417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_GetUIDw1() local_unnamed_addr #10 !dbg !7418 {
  %1 = load i32, i32* inttoptr (i32 536836628 to i32*), align 4, !dbg !7419, !tbaa !1032
  ret i32 %1, !dbg !7420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_GetUIDw2() local_unnamed_addr #10 !dbg !7421 {
  %1 = load i32, i32* inttoptr (i32 536836632 to i32*), align 8, !dbg !7422, !tbaa !1032
  ret i32 %1, !dbg !7423
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_EnableMemorySwappingBank() local_unnamed_addr #7 !dbg !7424 {
  store volatile i32 1, i32* inttoptr (i32 1109852192 to i32*), align 32, !dbg !7425, !tbaa !1032
  ret void, !dbg !7426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_DisableMemorySwappingBank() local_unnamed_addr #7 !dbg !7427 {
  store volatile i32 0, i32* inttoptr (i32 1109852192 to i32*), align 32, !dbg !7428, !tbaa !1032
  ret void, !dbg !7429
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_NVIC_SetPriorityGrouping(i32 noundef %0) local_unnamed_addr #7 !dbg !7430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7433, metadata !DIExpression()), !dbg !7434
  tail call fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0) #20, !dbg !7435
  ret void, !dbg !7436
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0) unnamed_addr #7 !dbg !7437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7439, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.value(metadata i32 %0, metadata !7441, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !7442
  %2 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !7443, !tbaa !7444
  call void @llvm.dbg.value(metadata i32 %2, metadata !7440, metadata !DIExpression()), !dbg !7442
  %3 = and i32 %2, 63743, !dbg !7445
  call void @llvm.dbg.value(metadata i32 %3, metadata !7440, metadata !DIExpression()), !dbg !7442
  %4 = shl i32 %0, 8, !dbg !7446
  %5 = and i32 %4, 1792, !dbg !7446
  %6 = or i32 %5, %3, !dbg !7447
  %7 = or i32 %6, 100270080, !dbg !7447
  call void @llvm.dbg.value(metadata i32 %7, metadata !7440, metadata !DIExpression()), !dbg !7442
  store volatile i32 %7, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !7448, !tbaa !7444
  ret void, !dbg !7449
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @HAL_NVIC_SetPriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !7450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7455, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 %1, metadata !7456, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 %2, metadata !7457, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 0, metadata !7458, metadata !DIExpression()), !dbg !7459
  %4 = tail call fastcc i32 @__NVIC_GetPriorityGrouping() #20, !dbg !7460, !range !7461
  call void @llvm.dbg.value(metadata i32 %4, metadata !7458, metadata !DIExpression()), !dbg !7459
  %5 = tail call fastcc i32 @NVIC_EncodePriority(i32 noundef %4, i32 noundef %1, i32 noundef %2) #20, !dbg !7462
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %5) #20, !dbg !7463
  ret void, !dbg !7464
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @__NVIC_GetPriorityGrouping() unnamed_addr #8 !dbg !7465 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !7466, !tbaa !7444
  %2 = lshr i32 %1, 8, !dbg !7467
  %3 = and i32 %2, 7, !dbg !7467
  ret i32 %3, !dbg !7468
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @NVIC_EncodePriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !7469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7473, metadata !DIExpression()), !dbg !7479
  call void @llvm.dbg.value(metadata i32 %1, metadata !7474, metadata !DIExpression()), !dbg !7479
  call void @llvm.dbg.value(metadata i32 %2, metadata !7475, metadata !DIExpression()), !dbg !7479
  %4 = and i32 %0, 7, !dbg !7480
  call void @llvm.dbg.value(metadata i32 %4, metadata !7476, metadata !DIExpression()), !dbg !7479
  %5 = xor i32 %4, 7, !dbg !7481
  %6 = icmp ult i32 %5, 4, !dbg !7482
  %7 = select i1 %6, i32 %5, i32 4, !dbg !7482
  call void @llvm.dbg.value(metadata i32 %7, metadata !7477, metadata !DIExpression()), !dbg !7479
  %8 = tail call i32 @llvm.usub.sat.i32(i32 %4, i32 3), !dbg !7483
  call void @llvm.dbg.value(metadata i32 %8, metadata !7478, metadata !DIExpression()), !dbg !7479
  %9 = shl nsw i32 -1, %7, !dbg !7484
  %10 = xor i32 %9, -1, !dbg !7484
  %11 = and i32 %10, %1, !dbg !7485
  %12 = shl i32 %11, %8, !dbg !7486
  %13 = shl nsw i32 -1, %8, !dbg !7487
  %14 = xor i32 %13, -1, !dbg !7487
  %15 = and i32 %14, %2, !dbg !7488
  %16 = or i32 %12, %15, !dbg !7489
  ret i32 %16, !dbg !7490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !7491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7495, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata i32 %1, metadata !7496, metadata !DIExpression()), !dbg !7497
  %3 = trunc i32 %1 to i8, !dbg !7498
  %4 = shl i8 %3, 4, !dbg !7498
  %5 = and i32 %0, 15, !dbg !7500
  %6 = add nsw i32 %5, -4, !dbg !7500
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7500
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7500
  %9 = icmp slt i32 %0, 0, !dbg !7500
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7500
  store volatile i8 %4, i8* %10, align 1, !dbg !7498, !tbaa !1418
  ret void, !dbg !7501
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_NVIC_EnableIRQ(i32 noundef %0) local_unnamed_addr #3 !dbg !7502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7506, metadata !DIExpression()), !dbg !7507
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #20, !dbg !7508
  ret void, !dbg !7509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #3 !dbg !7510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7512, metadata !DIExpression()), !dbg !7513
  %2 = icmp sgt i32 %0, -1, !dbg !7514
  br i1 %2, label %3, label %8, !dbg !7516

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #21, !dbg !7517, !srcloc !7519
  %4 = and i32 %0, 31, !dbg !7520
  %5 = shl nuw i32 1, %4, !dbg !7521
  %6 = lshr i32 %0, 5, !dbg !7522
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7523
  store volatile i32 %5, i32* %7, align 4, !dbg !7524, !tbaa !1032
  tail call void asm sideeffect "", "~{memory}"() #21, !dbg !7525, !srcloc !7526
  br label %8, !dbg !7527

8:                                                ; preds = %3, %1
  ret void, !dbg !7528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_NVIC_DisableIRQ(i32 noundef %0) local_unnamed_addr #3 !dbg !7529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7531, metadata !DIExpression()), !dbg !7532
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #20, !dbg !7533
  ret void, !dbg !7534
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #3 !dbg !7535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7537, metadata !DIExpression()), !dbg !7538
  %2 = icmp sgt i32 %0, -1, !dbg !7539
  br i1 %2, label %3, label %8, !dbg !7541

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7542
  %5 = shl nuw i32 1, %4, !dbg !7544
  %6 = lshr i32 %0, 5, !dbg !7545
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7546
  store volatile i32 %5, i32* %7, align 4, !dbg !7547, !tbaa !1032
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #21, !dbg !7548, !srcloc !7552
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #21, !dbg !7553, !srcloc !7556
  br label %8, !dbg !7557

8:                                                ; preds = %3, %1
  ret void, !dbg !7558
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @HAL_NVIC_SystemReset() local_unnamed_addr #0 !dbg !7559 {
  tail call fastcc void @__NVIC_SystemReset() #22, !dbg !7560
  unreachable, !dbg !7560
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @__NVIC_SystemReset() unnamed_addr #0 !dbg !7561 {
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #21, !dbg !7562, !srcloc !7552
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !7564, !tbaa !7444
  %2 = and i32 %1, 1792, !dbg !7565
  %3 = or i32 %2, 100270084, !dbg !7566
  store volatile i32 %3, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !7567, !tbaa !7444
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #21, !dbg !7568, !srcloc !7552
  br label %4, !dbg !7570

4:                                                ; preds = %4, %0
  tail call void asm sideeffect "nop", ""() #21, !dbg !7571, !srcloc !7575
  br label %4, !dbg !7576, !llvm.loop !7577
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @HAL_SYSTICK_Config(i32 noundef %0) local_unnamed_addr #7 !dbg !7580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7584, metadata !DIExpression()), !dbg !7585
  %2 = tail call fastcc i32 @SysTick_Config(i32 noundef %0) #20, !dbg !7586
  ret i32 %2, !dbg !7587
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @SysTick_Config(i32 noundef %0) unnamed_addr #7 !dbg !7588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7590, metadata !DIExpression()), !dbg !7591
  %2 = add i32 %0, -1, !dbg !7592
  %3 = icmp ugt i32 %2, 16777215, !dbg !7594
  br i1 %3, label %5, label %4, !dbg !7595

4:                                                ; preds = %1
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !7596, !tbaa !7392
  tail call fastcc void @__NVIC_SetPriority(i32 noundef -1, i32 noundef 15) #20, !dbg !7597
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !7598, !tbaa !7599
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7600, !tbaa !7374
  br label %5, !dbg !7601

5:                                                ; preds = %1, %4
  %6 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !7591
  ret i32 %6, !dbg !7602
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_MPU_Disable() local_unnamed_addr #3 !dbg !7603 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #21, !dbg !7604, !srcloc !7607
  %1 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7608, !tbaa !7609
  %2 = and i32 %1, -65537, !dbg !7608
  store volatile i32 %2, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7608, !tbaa !7609
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7610, !tbaa !7611
  ret void, !dbg !7613
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_MPU_Enable(i32 noundef %0) local_unnamed_addr #3 !dbg !7614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7616, metadata !DIExpression()), !dbg !7617
  %2 = or i32 %0, 1, !dbg !7618
  store volatile i32 %2, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7619, !tbaa !7611
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7620, !tbaa !7609
  %4 = or i32 %3, 65536, !dbg !7620
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7620, !tbaa !7609
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #21, !dbg !7621, !srcloc !7552
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #21, !dbg !7623, !srcloc !7556
  ret void, !dbg !7625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_MPU_ConfigRegion(%struct.MPU_Region_InitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !7626 {
  call void @llvm.dbg.value(metadata %struct.MPU_Region_InitTypeDef* %0, metadata !7646, metadata !DIExpression()), !dbg !7647
  %2 = getelementptr inbounds %struct.MPU_Region_InitTypeDef, %struct.MPU_Region_InitTypeDef* %0, i32 0, i32 1, !dbg !7648
  %3 = load i8, i8* %2, align 1, !dbg !7648, !tbaa !7649
  %4 = zext i8 %3 to i32, !dbg !7651
  store volatile i32 %4, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7652, !tbaa !7653
  %5 = getelementptr inbounds %struct.MPU_Region_InitTypeDef, %struct.MPU_Region_InitTypeDef* %0, i32 0, i32 0, !dbg !7654
  %6 = load i8, i8* %5, align 4, !dbg !7654, !tbaa !7656
  %7 = icmp eq i8 %6, 0, !dbg !7657
  br i1 %7, label %52, label %8, !dbg !7658

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.MPU_Region_InitTypeDef, %struct.MPU_Region_InitTypeDef* %0, i32 0, i32 2, !dbg !7659
  %10 = load i32, i32* %9, align 4, !dbg !7659, !tbaa !7661
  store volatile i32 %10, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7662, !tbaa !7663
  %11 = getelementptr inbounds %struct.MPU_Region_InitTypeDef, %struct.MPU_Region_InitTypeDef* %0, i32 0, i32 7, !dbg !7664
  %12 = load i8, i8* %11, align 4, !dbg !7664, !tbaa !7665
  %13 = zext i8 %12 to i32, !dbg !7666
  %14 = shl i32 %13, 28, !dbg !7667
  %15 = getelementptr inbounds %struct.MPU_Region_InitTypeDef, %struct.MPU_Region_InitTypeDef* %0, i32 0, i32 6, !dbg !7668
  %16 = load i8, i8* %15, align 1, !dbg !7668, !tbaa !7669
  %17 = zext i8 %16 to i32, !dbg !7670
  %18 = shl nuw i32 %17, 24, !dbg !7671
  %19 = getelementptr inbounds %struct.MPU_Region_InitTypeDef, %struct.MPU_Region_InitTypeDef* %0, i32 0, i32 5, !dbg !7672
  %20 = load i8, i8* %19, align 2, !dbg !7672, !tbaa !7673
  %21 = zext i8 %20 to i32, !dbg !7674
  %22 = shl nuw nsw i32 %21, 19, !dbg !7675
  %23 = getelementptr inbounds %struct.MPU_Region_InitTypeDef, %struct.MPU_Region_InitTypeDef* %0, i32 0, i32 8, !dbg !7676
  %24 = load i8, i8* %23, align 1, !dbg !7676, !tbaa !7677
  %25 = zext i8 %24 to i32, !dbg !7678
  %26 = shl nuw nsw i32 %25, 18, !dbg !7679
  %27 = getelementptr inbounds %struct.MPU_Region_InitTypeDef, %struct.MPU_Region_InitTypeDef* %0, i32 0, i32 9, !dbg !7680
  %28 = load i8, i8* %27, align 2, !dbg !7680, !tbaa !7681
  %29 = zext i8 %28 to i32, !dbg !7682
  %30 = shl nuw nsw i32 %29, 17, !dbg !7683
  %31 = getelementptr inbounds %struct.MPU_Region_InitTypeDef, %struct.MPU_Region_InitTypeDef* %0, i32 0, i32 10, !dbg !7684
  %32 = load i8, i8* %31, align 1, !dbg !7684, !tbaa !7685
  %33 = zext i8 %32 to i32, !dbg !7686
  %34 = shl nuw nsw i32 %33, 16, !dbg !7687
  %35 = getelementptr inbounds %struct.MPU_Region_InitTypeDef, %struct.MPU_Region_InitTypeDef* %0, i32 0, i32 4, !dbg !7688
  %36 = load i8, i8* %35, align 1, !dbg !7688, !tbaa !7689
  %37 = zext i8 %36 to i32, !dbg !7690
  %38 = shl nuw nsw i32 %37, 8, !dbg !7691
  %39 = getelementptr inbounds %struct.MPU_Region_InitTypeDef, %struct.MPU_Region_InitTypeDef* %0, i32 0, i32 3, !dbg !7692
  %40 = load i8, i8* %39, align 4, !dbg !7692, !tbaa !7693
  %41 = zext i8 %40 to i32, !dbg !7694
  %42 = shl nuw nsw i32 %41, 1, !dbg !7695
  %43 = zext i8 %6 to i32, !dbg !7696
  %44 = or i32 %14, %43, !dbg !7697
  %45 = or i32 %44, %18, !dbg !7698
  %46 = or i32 %45, %22, !dbg !7699
  %47 = or i32 %46, %26, !dbg !7700
  %48 = or i32 %47, %30, !dbg !7701
  %49 = or i32 %48, %34, !dbg !7702
  %50 = or i32 %49, %38, !dbg !7703
  %51 = or i32 %50, %42, !dbg !7704
  br label %53, !dbg !7705

52:                                               ; preds = %1
  store volatile i32 0, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7706, !tbaa !7663
  br label %53

53:                                               ; preds = %52, %8
  %54 = phi i32 [ 0, %52 ], [ %51, %8 ]
  store volatile i32 %54, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7708, !tbaa !7709
  ret void, !dbg !7710
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_NVIC_GetPriorityGrouping() local_unnamed_addr #8 !dbg !7711 {
  %1 = tail call fastcc i32 @__NVIC_GetPriorityGrouping() #20, !dbg !7712
  ret i32 %1, !dbg !7713
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define dso_local void @HAL_NVIC_GetPriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #17 !dbg !7714 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7718, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %1, metadata !7719, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32* %2, metadata !7720, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32* %3, metadata !7721, metadata !DIExpression()), !dbg !7722
  %5 = tail call fastcc i32 @__NVIC_GetPriority(i32 noundef %0) #20, !dbg !7723, !range !7724
  tail call fastcc void @NVIC_DecodePriority(i32 noundef %5, i32 noundef %1, i32* noundef %2, i32* noundef %3) #20, !dbg !7725
  ret void, !dbg !7726
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @__NVIC_GetPriority(i32 noundef %0) unnamed_addr #8 !dbg !7727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7731, metadata !DIExpression()), !dbg !7732
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7733
  %3 = and i32 %0, 15, !dbg !7733
  %4 = add nsw i32 %3, -4, !dbg !7733
  %5 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %4, !dbg !7733
  %6 = icmp slt i32 %0, 0, !dbg !7733
  %7 = select i1 %6, i8* %5, i8* %2, !dbg !7733
  %8 = load volatile i8, i8* %7, align 1, !dbg !7734, !tbaa !1418
  %9 = lshr i8 %8, 4, !dbg !7734
  %10 = zext i8 %9 to i32, !dbg !7734
  ret i32 %10, !dbg !7736
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc void @NVIC_DecodePriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) unnamed_addr #18 !dbg !7737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7741, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i32 %1, metadata !7742, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i32* %2, metadata !7743, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.value(metadata i32* %3, metadata !7744, metadata !DIExpression()), !dbg !7748
  %5 = and i32 %1, 7, !dbg !7749
  call void @llvm.dbg.value(metadata i32 %5, metadata !7745, metadata !DIExpression()), !dbg !7748
  %6 = xor i32 %5, 7, !dbg !7750
  %7 = icmp ult i32 %6, 4, !dbg !7751
  %8 = select i1 %7, i32 %6, i32 4, !dbg !7751
  call void @llvm.dbg.value(metadata i32 %8, metadata !7746, metadata !DIExpression()), !dbg !7748
  %9 = tail call i32 @llvm.usub.sat.i32(i32 %5, i32 3), !dbg !7752
  call void @llvm.dbg.value(metadata i32 %9, metadata !7747, metadata !DIExpression()), !dbg !7748
  %10 = lshr i32 %0, %9, !dbg !7753
  %11 = shl nsw i32 -1, %8, !dbg !7754
  %12 = xor i32 %11, -1, !dbg !7754
  %13 = and i32 %10, %12, !dbg !7755
  store i32 %13, i32* %2, align 4, !dbg !7756, !tbaa !1032
  %14 = shl nsw i32 -1, %9, !dbg !7757
  %15 = xor i32 %14, -1, !dbg !7757
  %16 = and i32 %15, %0, !dbg !7758
  store i32 %16, i32* %3, align 4, !dbg !7759, !tbaa !1032
  ret void, !dbg !7760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_NVIC_SetPendingIRQ(i32 noundef %0) local_unnamed_addr #7 !dbg !7761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7763, metadata !DIExpression()), !dbg !7764
  tail call fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0) #20, !dbg !7765
  ret void, !dbg !7766
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #7 !dbg !7767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7769, metadata !DIExpression()), !dbg !7770
  %2 = icmp sgt i32 %0, -1, !dbg !7771
  br i1 %2, label %3, label %8, !dbg !7773

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7774
  %5 = shl nuw i32 1, %4, !dbg !7776
  %6 = lshr i32 %0, 5, !dbg !7777
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %6, !dbg !7778
  store volatile i32 %5, i32* %7, align 4, !dbg !7779, !tbaa !1032
  br label %8, !dbg !7780

8:                                                ; preds = %3, %1
  ret void, !dbg !7781
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_NVIC_GetPendingIRQ(i32 noundef %0) local_unnamed_addr #8 !dbg !7782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7784, metadata !DIExpression()), !dbg !7785
  %2 = tail call fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0) #20, !dbg !7786
  ret i32 %2, !dbg !7787
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #8 !dbg !7788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7790, metadata !DIExpression()), !dbg !7791
  %2 = icmp sgt i32 %0, -1, !dbg !7792
  br i1 %2, label %3, label %10, !dbg !7794

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !7795
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !7797
  %6 = load volatile i32, i32* %5, align 4, !dbg !7797, !tbaa !1032
  %7 = and i32 %0, 31, !dbg !7798
  %8 = lshr i32 %6, %7, !dbg !7799
  %9 = and i32 %8, 1, !dbg !7799
  br label %10, !dbg !7800

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !7801
  ret i32 %11, !dbg !7802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_NVIC_ClearPendingIRQ(i32 noundef %0) local_unnamed_addr #7 !dbg !7803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7805, metadata !DIExpression()), !dbg !7806
  tail call fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0) #20, !dbg !7807
  ret void, !dbg !7808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #7 !dbg !7809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7811, metadata !DIExpression()), !dbg !7812
  %2 = icmp sgt i32 %0, -1, !dbg !7813
  br i1 %2, label %3, label %8, !dbg !7815

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7816
  %5 = shl nuw i32 1, %4, !dbg !7818
  %6 = lshr i32 %0, 5, !dbg !7819
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %6, !dbg !7820
  store volatile i32 %5, i32* %7, align 4, !dbg !7821, !tbaa !1032
  br label %8, !dbg !7822

8:                                                ; preds = %3, %1
  ret void, !dbg !7823
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_NVIC_GetActive(i32 noundef %0) local_unnamed_addr #8 !dbg !7824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7826, metadata !DIExpression()), !dbg !7827
  %2 = tail call fastcc i32 @__NVIC_GetActive(i32 noundef %0) #20, !dbg !7828
  ret i32 %2, !dbg !7829
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @__NVIC_GetActive(i32 noundef %0) unnamed_addr #8 !dbg !7830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7832, metadata !DIExpression()), !dbg !7833
  %2 = icmp sgt i32 %0, -1, !dbg !7834
  br i1 %2, label %3, label %10, !dbg !7836

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !7837
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812800 to [8 x i32]*), i32 0, i32 %4, !dbg !7839
  %6 = load volatile i32, i32* %5, align 4, !dbg !7839, !tbaa !1032
  %7 = and i32 %0, 31, !dbg !7840
  %8 = lshr i32 %6, %7, !dbg !7841
  %9 = and i32 %8, 1, !dbg !7841
  br label %10, !dbg !7842

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !7843
  ret i32 %11, !dbg !7844
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_SYSTICK_CLKSourceConfig(i32 noundef %0) local_unnamed_addr #7 !dbg !7845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7847, metadata !DIExpression()), !dbg !7848
  %2 = icmp eq i32 %0, 4, !dbg !7849
  %3 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7851, !tbaa !7374
  %4 = and i32 %3, -5, !dbg !7852
  %5 = select i1 %2, i32 4, i32 0, !dbg !7852
  %6 = or i32 %4, %5, !dbg !7852
  store volatile i32 %6, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7851, !tbaa !7374
  ret void, !dbg !7853
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_SYSTICK_IRQHandler() local_unnamed_addr #3 !dbg !7854 {
  tail call void @HAL_SYSTICK_Callback() #20, !dbg !7855
  ret void, !dbg !7856
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_SYSTICK_Callback() local_unnamed_addr #3 !dbg !7857 {
  ret void, !dbg !7858
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef %0, %struct.GPIO_InitTypeDef* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !7859 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7873, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata %struct.GPIO_InitTypeDef* %1, metadata !7874, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 0, metadata !7876, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 0, metadata !7877, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 0, metadata !7878, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 0, metadata !7875, metadata !DIExpression()), !dbg !7888
  %4 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %1, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !7875, metadata !DIExpression()), !dbg !7888
  %5 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %1, i32 0, i32 1
  %6 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2
  %7 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %1, i32 0, i32 3
  %8 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3
  %10 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %1, i32 0, i32 2
  %11 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %1, i32 0, i32 4
  %12 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0
  %13 = ptrtoint %struct.GPIO_TypeDef* %0 to i32
  %14 = add i32 %13, -1073872896
  %15 = tail call i32 @llvm.fshl.i32(i32 %14, i32 %14, i32 22), !dbg !7888
  %16 = icmp eq %struct.GPIO_TypeDef* %0, inttoptr (i32 1073882112 to %struct.GPIO_TypeDef*)
  %17 = select i1 %16, i32 9, i32 10
  %18 = bitcast i32* %3 to i8*
  %19 = icmp ult i32 %15, 9
  %20 = select i1 %19, i32 %15, i32 %17
  br label %21, !dbg !7889

21:                                               ; preds = %2, %120
  %22 = phi i32 [ 0, %2 ], [ %121, %120 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !7875, metadata !DIExpression()), !dbg !7888
  %23 = shl nuw nsw i32 1, %22, !dbg !7890
  call void @llvm.dbg.value(metadata i32 %23, metadata !7876, metadata !DIExpression()), !dbg !7888
  %24 = load i32, i32* %4, align 4, !dbg !7891, !tbaa !1037
  %25 = and i32 %24, %23, !dbg !7892
  call void @llvm.dbg.value(metadata i32 %25, metadata !7877, metadata !DIExpression()), !dbg !7888
  %26 = icmp eq i32 %25, %23, !dbg !7893
  br i1 %26, label %27, label %120, !dbg !7894

27:                                               ; preds = %21
  %28 = load i32, i32* %5, align 4, !dbg !7895, !tbaa !1040
  switch i32 %28, label %29 [
    i32 1, label %33
    i32 2, label %33
    i32 17, label %33
    i32 18, label %33
  ], !dbg !7897

29:                                               ; preds = %27
  %30 = shl nuw nsw i32 %22, 1, !dbg !7898
  %31 = shl nuw i32 3, %30, !dbg !7899
  %32 = xor i32 %31, -1, !dbg !7900
  br label %48, !dbg !7897

33:                                               ; preds = %27, %27, %27, %27
  %34 = load volatile i32, i32* %6, align 4, !dbg !7901, !tbaa !7903
  call void @llvm.dbg.value(metadata i32 %34, metadata !7878, metadata !DIExpression()), !dbg !7888
  %35 = shl nuw nsw i32 %22, 1, !dbg !7905
  %36 = shl nuw i32 3, %35, !dbg !7906
  %37 = xor i32 %36, -1, !dbg !7907
  %38 = and i32 %34, %37, !dbg !7908
  call void @llvm.dbg.value(metadata i32 %38, metadata !7878, metadata !DIExpression()), !dbg !7888
  %39 = load i32, i32* %7, align 4, !dbg !7909, !tbaa !1044
  %40 = shl i32 %39, %35, !dbg !7910
  %41 = or i32 %40, %38, !dbg !7911
  call void @llvm.dbg.value(metadata i32 %41, metadata !7878, metadata !DIExpression()), !dbg !7888
  store volatile i32 %41, i32* %6, align 4, !dbg !7912, !tbaa !7903
  %42 = load volatile i32, i32* %8, align 4, !dbg !7913, !tbaa !7914
  call void @llvm.dbg.value(metadata i32 %42, metadata !7878, metadata !DIExpression()), !dbg !7888
  %43 = xor i32 %23, -1, !dbg !7915
  %44 = and i32 %42, %43, !dbg !7916
  call void @llvm.dbg.value(metadata i32 %44, metadata !7878, metadata !DIExpression()), !dbg !7888
  %45 = lshr i32 %28, 4, !dbg !7917
  %46 = shl nuw nsw i32 %45, %22, !dbg !7918
  %47 = or i32 %44, %46, !dbg !7919
  call void @llvm.dbg.value(metadata i32 %47, metadata !7878, metadata !DIExpression()), !dbg !7888
  store volatile i32 %47, i32* %8, align 4, !dbg !7920, !tbaa !7914
  br label %48, !dbg !7921

48:                                               ; preds = %29, %33
  %49 = phi i32 [ %32, %29 ], [ %37, %33 ], !dbg !7900
  %50 = phi i32 [ %30, %29 ], [ %35, %33 ], !dbg !7898
  %51 = load volatile i32, i32* %9, align 4, !dbg !7922, !tbaa !7923
  call void @llvm.dbg.value(metadata i32 %51, metadata !7878, metadata !DIExpression()), !dbg !7888
  %52 = and i32 %51, %49, !dbg !7924
  call void @llvm.dbg.value(metadata i32 %52, metadata !7878, metadata !DIExpression()), !dbg !7888
  %53 = load i32, i32* %10, align 4, !dbg !7925, !tbaa !1042
  %54 = shl i32 %53, %50, !dbg !7926
  %55 = or i32 %54, %52, !dbg !7927
  call void @llvm.dbg.value(metadata i32 %55, metadata !7878, metadata !DIExpression()), !dbg !7888
  store volatile i32 %55, i32* %9, align 4, !dbg !7928, !tbaa !7923
  switch i32 %28, label %69 [
    i32 2, label %56
    i32 18, label %56
  ], !dbg !7929

56:                                               ; preds = %48, %48
  %57 = lshr i32 %22, 3, !dbg !7931
  %58 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 %57, !dbg !7933
  %59 = load volatile i32, i32* %58, align 4, !dbg !7933, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %59, metadata !7878, metadata !DIExpression()), !dbg !7888
  %60 = shl nuw nsw i32 %22, 2, !dbg !7934
  %61 = and i32 %60, 28, !dbg !7934
  %62 = shl nuw i32 15, %61, !dbg !7935
  %63 = xor i32 %62, -1, !dbg !7936
  %64 = and i32 %59, %63, !dbg !7937
  call void @llvm.dbg.value(metadata i32 %64, metadata !7878, metadata !DIExpression()), !dbg !7888
  %65 = load i32, i32* %11, align 4, !dbg !7938, !tbaa !1362
  %66 = shl i32 %65, %61, !dbg !7939
  %67 = or i32 %66, %64, !dbg !7940
  call void @llvm.dbg.value(metadata i32 %67, metadata !7878, metadata !DIExpression()), !dbg !7888
  store volatile i32 %67, i32* %58, align 4, !dbg !7941, !tbaa !1032
  %68 = load i32, i32* %5, align 4, !dbg !7942, !tbaa !1040
  br label %69, !dbg !7943

69:                                               ; preds = %48, %56
  %70 = phi i32 [ %28, %48 ], [ %68, %56 ], !dbg !7942
  %71 = load volatile i32, i32* %12, align 4, !dbg !7944, !tbaa !7945
  call void @llvm.dbg.value(metadata i32 %71, metadata !7878, metadata !DIExpression()), !dbg !7888
  %72 = and i32 %71, %49, !dbg !7946
  call void @llvm.dbg.value(metadata i32 %72, metadata !7878, metadata !DIExpression()), !dbg !7888
  %73 = and i32 %70, 3, !dbg !7947
  %74 = shl nuw i32 %73, %50, !dbg !7948
  %75 = or i32 %74, %72, !dbg !7949
  call void @llvm.dbg.value(metadata i32 %75, metadata !7878, metadata !DIExpression()), !dbg !7888
  store volatile i32 %75, i32* %12, align 4, !dbg !7950, !tbaa !7945
  %76 = and i32 %70, 268435456, !dbg !7951
  %77 = icmp eq i32 %76, 0, !dbg !7952
  br i1 %77, label %120, label %78, !dbg !7953

78:                                               ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18), !dbg !7954
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7879, metadata !DIExpression()), !dbg !7954
  store volatile i32 0, i32* %3, align 4, !dbg !7954, !tbaa !1032
  %79 = load volatile i32, i32* inttoptr (i32 1073887300 to i32*), align 4, !dbg !7954, !tbaa !7955
  %80 = or i32 %79, 16384, !dbg !7954
  store volatile i32 %80, i32* inttoptr (i32 1073887300 to i32*), align 4, !dbg !7954, !tbaa !7955
  %81 = load volatile i32, i32* inttoptr (i32 1073887300 to i32*), align 4, !dbg !7954, !tbaa !7955
  %82 = and i32 %81, 16384, !dbg !7954
  store volatile i32 %82, i32* %3, align 4, !dbg !7954, !tbaa !1032
  %83 = load volatile i32, i32* %3, align 4, !dbg !7954, !tbaa !1032
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18), !dbg !7956
  %84 = lshr i32 %22, 2, !dbg !7957
  %85 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %84, !dbg !7958
  %86 = load volatile i32, i32* %85, align 4, !dbg !7958, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %86, metadata !7878, metadata !DIExpression()), !dbg !7888
  %87 = shl nuw nsw i32 %22, 2, !dbg !7959
  %88 = and i32 %87, 12, !dbg !7959
  %89 = shl nuw nsw i32 15, %88, !dbg !7960
  %90 = xor i32 %89, -1, !dbg !7961
  %91 = and i32 %86, %90, !dbg !7962
  call void @llvm.dbg.value(metadata i32 %91, metadata !7878, metadata !DIExpression()), !dbg !7888
  %92 = shl nuw nsw i32 %20, %88, !dbg !7963
  %93 = or i32 %92, %91, !dbg !7964
  call void @llvm.dbg.value(metadata i32 %93, metadata !7878, metadata !DIExpression()), !dbg !7888
  store volatile i32 %93, i32* %85, align 4, !dbg !7965, !tbaa !1032
  %94 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7966, !tbaa !7967
  call void @llvm.dbg.value(metadata i32 %94, metadata !7878, metadata !DIExpression()), !dbg !7888
  %95 = xor i32 %23, -1, !dbg !7968
  %96 = and i32 %94, %95, !dbg !7969
  call void @llvm.dbg.value(metadata i32 %96, metadata !7878, metadata !DIExpression()), !dbg !7888
  %97 = load i32, i32* %5, align 4, !dbg !7970, !tbaa !1040
  %98 = and i32 %97, 65536, !dbg !7972
  %99 = icmp eq i32 %98, 0, !dbg !7973
  %100 = or i32 %94, %23
  %101 = select i1 %99, i32 %96, i32 %100, !dbg !7974
  call void @llvm.dbg.value(metadata i32 %101, metadata !7878, metadata !DIExpression()), !dbg !7888
  store volatile i32 %101, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7975, !tbaa !7967
  %102 = load volatile i32, i32* inttoptr (i32 1073822724 to i32*), align 4, !dbg !7976, !tbaa !7977
  call void @llvm.dbg.value(metadata i32 %102, metadata !7878, metadata !DIExpression()), !dbg !7888
  %103 = and i32 %102, %95, !dbg !7978
  call void @llvm.dbg.value(metadata i32 %103, metadata !7878, metadata !DIExpression()), !dbg !7888
  %104 = and i32 %97, 131072, !dbg !7979
  %105 = icmp eq i32 %104, 0, !dbg !7981
  %106 = or i32 %102, %23, !dbg !7982
  %107 = select i1 %105, i32 %103, i32 %106, !dbg !7982
  call void @llvm.dbg.value(metadata i32 %107, metadata !7878, metadata !DIExpression()), !dbg !7888
  store volatile i32 %107, i32* inttoptr (i32 1073822724 to i32*), align 4, !dbg !7983, !tbaa !7977
  %108 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7984, !tbaa !7985
  call void @llvm.dbg.value(metadata i32 %108, metadata !7878, metadata !DIExpression()), !dbg !7888
  %109 = and i32 %108, %95, !dbg !7986
  call void @llvm.dbg.value(metadata i32 %109, metadata !7878, metadata !DIExpression()), !dbg !7888
  %110 = and i32 %97, 1048576, !dbg !7987
  %111 = icmp eq i32 %110, 0, !dbg !7989
  %112 = or i32 %108, %23, !dbg !7990
  %113 = select i1 %111, i32 %109, i32 %112, !dbg !7990
  call void @llvm.dbg.value(metadata i32 %113, metadata !7878, metadata !DIExpression()), !dbg !7888
  store volatile i32 %113, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7991, !tbaa !7985
  %114 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7992, !tbaa !7993
  call void @llvm.dbg.value(metadata i32 %114, metadata !7878, metadata !DIExpression()), !dbg !7888
  %115 = and i32 %114, %95, !dbg !7994
  call void @llvm.dbg.value(metadata i32 %115, metadata !7878, metadata !DIExpression()), !dbg !7888
  %116 = and i32 %97, 2097152, !dbg !7995
  %117 = icmp eq i32 %116, 0, !dbg !7997
  %118 = or i32 %114, %23, !dbg !7998
  %119 = select i1 %117, i32 %115, i32 %118, !dbg !7998
  call void @llvm.dbg.value(metadata i32 %119, metadata !7878, metadata !DIExpression()), !dbg !7888
  store volatile i32 %119, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7999, !tbaa !7993
  br label %120, !dbg !8000

120:                                              ; preds = %21, %78, %69
  %121 = add nuw nsw i32 %22, 1, !dbg !8001
  call void @llvm.dbg.value(metadata i32 %121, metadata !7875, metadata !DIExpression()), !dbg !7888
  %122 = icmp eq i32 %121, 16, !dbg !8002
  br i1 %122, label %123, label %21, !dbg !7889, !llvm.loop !8003

123:                                              ; preds = %120
  ret void, !dbg !8005
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #1

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_GPIO_DeInit(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) local_unnamed_addr #7 !dbg !8006 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8010, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.value(metadata i32 %1, metadata !8011, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.value(metadata i32 0, metadata !8013, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.value(metadata i32 0, metadata !8014, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.value(metadata i32 0, metadata !8015, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.value(metadata i32 0, metadata !8012, metadata !DIExpression()), !dbg !8016
  %3 = ptrtoint %struct.GPIO_TypeDef* %0 to i32
  %4 = add i32 %3, -1073872896
  %5 = tail call i32 @llvm.fshl.i32(i32 %4, i32 %4, i32 22), !dbg !8016
  %6 = icmp eq %struct.GPIO_TypeDef* %0, inttoptr (i32 1073882112 to %struct.GPIO_TypeDef*)
  %7 = select i1 %6, i32 9, i32 10
  %8 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3
  %10 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1
  %11 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2
  %12 = icmp ult i32 %5, 9
  %13 = select i1 %12, i32 %5, i32 %7
  br label %14, !dbg !8017

14:                                               ; preds = %2, %61
  %15 = phi i32 [ 0, %2 ], [ %62, %61 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8012, metadata !DIExpression()), !dbg !8016
  %16 = shl nuw nsw i32 1, %15, !dbg !8019
  call void @llvm.dbg.value(metadata i32 %16, metadata !8013, metadata !DIExpression()), !dbg !8016
  %17 = and i32 %16, %1, !dbg !8022
  call void @llvm.dbg.value(metadata i32 %17, metadata !8014, metadata !DIExpression()), !dbg !8016
  %18 = icmp eq i32 %17, %16, !dbg !8023
  br i1 %18, label %19, label %61, !dbg !8025

19:                                               ; preds = %14
  %20 = lshr i32 %15, 2, !dbg !8026
  %21 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %20, !dbg !8028
  %22 = load volatile i32, i32* %21, align 4, !dbg !8028, !tbaa !1032
  call void @llvm.dbg.value(metadata i32 %22, metadata !8015, metadata !DIExpression()), !dbg !8016
  %23 = shl nuw nsw i32 %15, 2, !dbg !8029
  %24 = and i32 %23, 12, !dbg !8029
  %25 = shl nuw nsw i32 15, %24, !dbg !8030
  %26 = and i32 %22, %25, !dbg !8031
  call void @llvm.dbg.value(metadata i32 %26, metadata !8015, metadata !DIExpression()), !dbg !8016
  %27 = shl nuw nsw i32 %13, %24, !dbg !8032
  %28 = icmp eq i32 %26, %27, !dbg !8034
  %29 = xor i32 %16, -1, !dbg !8035
  br i1 %28, label %30, label %42, !dbg !8036

30:                                               ; preds = %19
  %31 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8037, !tbaa !7967
  %32 = and i32 %31, %29, !dbg !8037
  store volatile i32 %32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8037, !tbaa !7967
  %33 = load volatile i32, i32* inttoptr (i32 1073822724 to i32*), align 4, !dbg !8039, !tbaa !7977
  %34 = and i32 %33, %29, !dbg !8039
  store volatile i32 %34, i32* inttoptr (i32 1073822724 to i32*), align 4, !dbg !8039, !tbaa !7977
  %35 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8040, !tbaa !7985
  %36 = and i32 %35, %29, !dbg !8040
  store volatile i32 %36, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8040, !tbaa !7985
  %37 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8041, !tbaa !7993
  %38 = and i32 %37, %29, !dbg !8041
  store volatile i32 %38, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8041, !tbaa !7993
  call void @llvm.dbg.value(metadata i32 %25, metadata !8015, metadata !DIExpression()), !dbg !8016
  %39 = xor i32 %25, -1, !dbg !8042
  %40 = load volatile i32, i32* %21, align 4, !dbg !8043, !tbaa !1032
  %41 = and i32 %40, %39, !dbg !8043
  store volatile i32 %41, i32* %21, align 4, !dbg !8043, !tbaa !1032
  br label %42, !dbg !8044

42:                                               ; preds = %19, %30
  %43 = shl nuw nsw i32 %15, 1, !dbg !8045
  %44 = shl nuw i32 3, %43, !dbg !8046
  %45 = xor i32 %44, -1, !dbg !8047
  %46 = load volatile i32, i32* %8, align 4, !dbg !8048, !tbaa !7945
  %47 = and i32 %46, %45, !dbg !8048
  store volatile i32 %47, i32* %8, align 4, !dbg !8048, !tbaa !7945
  %48 = and i32 %23, 28, !dbg !8049
  %49 = shl nuw i32 15, %48, !dbg !8050
  %50 = xor i32 %49, -1, !dbg !8051
  %51 = lshr i32 %15, 3, !dbg !8052
  %52 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 %51, !dbg !8053
  %53 = load volatile i32, i32* %52, align 4, !dbg !8054, !tbaa !1032
  %54 = and i32 %53, %50, !dbg !8054
  store volatile i32 %54, i32* %52, align 4, !dbg !8054, !tbaa !1032
  %55 = load volatile i32, i32* %9, align 4, !dbg !8055, !tbaa !7923
  %56 = and i32 %55, %45, !dbg !8055
  store volatile i32 %56, i32* %9, align 4, !dbg !8055, !tbaa !7923
  %57 = load volatile i32, i32* %10, align 4, !dbg !8056, !tbaa !7914
  %58 = and i32 %57, %29, !dbg !8056
  store volatile i32 %58, i32* %10, align 4, !dbg !8056, !tbaa !7914
  %59 = load volatile i32, i32* %11, align 4, !dbg !8057, !tbaa !7903
  %60 = and i32 %59, %45, !dbg !8057
  store volatile i32 %60, i32* %11, align 4, !dbg !8057, !tbaa !7903
  br label %61, !dbg !8058

61:                                               ; preds = %14, %42
  %62 = add nuw nsw i32 %15, 1, !dbg !8059
  call void @llvm.dbg.value(metadata i32 %62, metadata !8012, metadata !DIExpression()), !dbg !8016
  %63 = icmp eq i32 %62, 16, !dbg !8060
  br i1 %63, label %64, label %14, !dbg !8017, !llvm.loop !8061

64:                                               ; preds = %61
  ret void, !dbg !8063
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_GPIO_ReadPin(%struct.GPIO_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #8 !dbg !8064 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8069, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.value(metadata i16 %1, metadata !8070, metadata !DIExpression()), !dbg !8072
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8073
  %4 = load volatile i32, i32* %3, align 4, !dbg !8073, !tbaa !8075
  %5 = zext i16 %1 to i32, !dbg !8076
  %6 = and i32 %4, %5, !dbg !8077
  %7 = icmp ne i32 %6, 0, !dbg !8078
  %8 = zext i1 %7 to i32
  call void @llvm.dbg.value(metadata i32 %8, metadata !8071, metadata !DIExpression()), !dbg !8072
  ret i32 %8, !dbg !8079
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_GPIO_WritePin(%struct.GPIO_TypeDef* noundef %0, i16 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #7 !dbg !8080 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8084, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.value(metadata i16 %1, metadata !8085, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.value(metadata i32 %2, metadata !8086, metadata !DIExpression()), !dbg !8087
  %4 = icmp eq i32 %2, 0, !dbg !8088
  %5 = zext i16 %1 to i32, !dbg !8090
  %6 = shl nuw i32 %5, 16, !dbg !8091
  %7 = select i1 %4, i32 %6, i32 %5, !dbg !8091
  %8 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8090
  store volatile i32 %7, i32* %8, align 4, !dbg !8090, !tbaa !8092
  ret void, !dbg !8093
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_GPIO_TogglePin(%struct.GPIO_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #7 !dbg !8094 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8098, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.value(metadata i16 %1, metadata !8099, metadata !DIExpression()), !dbg !8100
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8101
  %4 = load volatile i32, i32* %3, align 4, !dbg !8101, !tbaa !8103
  %5 = zext i16 %1 to i32, !dbg !8104
  %6 = and i32 %4, %5, !dbg !8105
  %7 = icmp eq i32 %6, %5, !dbg !8106
  %8 = shl nuw i32 %5, 16, !dbg !8107
  %9 = select i1 %7, i32 %8, i32 %5, !dbg !8107
  %10 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8108
  store volatile i32 %9, i32* %10, align 4, !dbg !8108, !tbaa !8092
  ret void, !dbg !8109
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @HAL_GPIO_LockPin(%struct.GPIO_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #15 !dbg !8110 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8114, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.value(metadata i16 %1, metadata !8115, metadata !DIExpression()), !dbg !8117
  %4 = bitcast i32* %3 to i8*, !dbg !8118
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !8118
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8116, metadata !DIExpression()), !dbg !8119
  store volatile i32 65536, i32* %3, align 4, !dbg !8119, !tbaa !1032
  %5 = zext i16 %1 to i32, !dbg !8120
  %6 = load volatile i32, i32* %3, align 4, !dbg !8121, !tbaa !1032
  %7 = or i32 %6, %5, !dbg !8121
  store volatile i32 %7, i32* %3, align 4, !dbg !8121, !tbaa !1032
  %8 = load volatile i32, i32* %3, align 4, !dbg !8122, !tbaa !1032
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 7, !dbg !8123
  store volatile i32 %8, i32* %9, align 4, !dbg !8124, !tbaa !8125
  store volatile i32 %5, i32* %9, align 4, !dbg !8126, !tbaa !8125
  %10 = load volatile i32, i32* %3, align 4, !dbg !8127, !tbaa !1032
  store volatile i32 %10, i32* %9, align 4, !dbg !8128, !tbaa !8125
  %11 = load volatile i32, i32* %9, align 4, !dbg !8129, !tbaa !8125
  store volatile i32 %11, i32* %3, align 4, !dbg !8130, !tbaa !1032
  %12 = load volatile i32, i32* %9, align 4, !dbg !8131, !tbaa !8125
  %13 = lshr i32 %12, 16, !dbg !8133
  %14 = and i32 %13, 1, !dbg !8133
  %15 = xor i32 %14, 1, !dbg !8133
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !8134
  ret i32 %15, !dbg !8134
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_GPIO_EXTI_IRQHandler(i16 noundef zeroext %0) local_unnamed_addr #3 !dbg !8135 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8139, metadata !DIExpression()), !dbg !8140
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8141, !tbaa !8143
  %3 = zext i16 %0 to i32, !dbg !8141
  %4 = and i32 %2, %3, !dbg !8141
  %5 = icmp eq i32 %4, 0, !dbg !8144
  br i1 %5, label %7, label %6, !dbg !8145

6:                                                ; preds = %1
  store volatile i32 %3, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8146, !tbaa !8143
  tail call void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0) #20, !dbg !8148
  br label %7, !dbg !8149

7:                                                ; preds = %6, %1
  ret void, !dbg !8150
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0) local_unnamed_addr #3 !dbg !8151 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8153, metadata !DIExpression()), !dbg !8154
  ret void, !dbg !8155
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #3 !dbg !8156 {
  ret i32 0, !dbg !8158
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #3 !dbg !8159 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !8183, metadata !DIExpression()), !dbg !8194
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !8195
  br i1 %3, label %302, label %4, !dbg !8197

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !8198
  %6 = load i32, i32* %5, align 4, !dbg !8198, !tbaa !1321
  %7 = and i32 %6, 1, !dbg !8200
  %8 = icmp eq i32 %7, 0, !dbg !8201
  br i1 %8, label %64, label %9, !dbg !8202

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8203, !tbaa !1398
  %11 = and i32 %10, 12, !dbg !8203
  %12 = icmp eq i32 %11, 4, !dbg !8206
  br i1 %12, label %21, label %13, !dbg !8207

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8208, !tbaa !1398
  %15 = and i32 %14, 12, !dbg !8208
  %16 = icmp eq i32 %15, 8, !dbg !8209
  br i1 %16, label %17, label %29, !dbg !8210

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8211, !tbaa !1404
  %19 = and i32 %18, 4194304, !dbg !8212
  %20 = icmp eq i32 %19, 0, !dbg !8213
  br i1 %20, label %29, label %21, !dbg !8214

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8215, !tbaa !8218
  %23 = and i32 %22, 131072, !dbg !8215
  %24 = icmp eq i32 %23, 0, !dbg !8215
  br i1 %24, label %64, label %25, !dbg !8219

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !8220
  %27 = load i32, i32* %26, align 4, !dbg !8220, !tbaa !1326
  %28 = icmp eq i32 %27, 0, !dbg !8221
  br i1 %28, label %302, label %64, !dbg !8222

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !8223
  %31 = load i32, i32* %30, align 4, !dbg !8223, !tbaa !1326
  switch i32 %31, label %35 [
    i32 65536, label %41
    i32 327680, label %32
  ], !dbg !8227

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8228, !tbaa !8218
  %34 = or i32 %33, 262144, !dbg !8228
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8228, !tbaa !8218
  br label %41, !dbg !8228

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8231, !tbaa !8218
  %37 = and i32 %36, -65537, !dbg !8231
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8231, !tbaa !8218
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8231, !tbaa !8218
  %39 = and i32 %38, -262145, !dbg !8231
  store volatile i32 %39, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8231, !tbaa !8218
  %40 = icmp eq i32 %31, 0, !dbg !8233
  br i1 %40, label %54, label %44, !dbg !8235

41:                                               ; preds = %29, %32
  %42 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8236, !tbaa !8218
  %43 = or i32 %42, 65536, !dbg !8236
  store volatile i32 %43, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8236, !tbaa !8218
  br label %44, !dbg !8237

44:                                               ; preds = %41, %35
  %45 = tail call i32 @HAL_GetTick() #19, !dbg !8237
  call void @llvm.dbg.value(metadata i32 %45, metadata !8184, metadata !DIExpression()), !dbg !8194
  br label %46, !dbg !8239

46:                                               ; preds = %50, %44
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8240, !tbaa !8218
  %48 = and i32 %47, 131072, !dbg !8241
  %49 = icmp eq i32 %48, 0, !dbg !8241
  br i1 %49, label %50, label %64, !dbg !8239

50:                                               ; preds = %46
  %51 = tail call i32 @HAL_GetTick() #19, !dbg !8242
  %52 = sub i32 %51, %45, !dbg !8245
  %53 = icmp ugt i32 %52, 100, !dbg !8246
  br i1 %53, label %302, label %46, !dbg !8247, !llvm.loop !8248

54:                                               ; preds = %35
  %55 = tail call i32 @HAL_GetTick() #19, !dbg !8250
  call void @llvm.dbg.value(metadata i32 %55, metadata !8184, metadata !DIExpression()), !dbg !8194
  br label %56, !dbg !8252

56:                                               ; preds = %60, %54
  %57 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8253, !tbaa !8218
  %58 = and i32 %57, 131072, !dbg !8253
  %59 = icmp eq i32 %58, 0, !dbg !8253
  br i1 %59, label %64, label %60, !dbg !8252

60:                                               ; preds = %56
  %61 = tail call i32 @HAL_GetTick() #19, !dbg !8254
  %62 = sub i32 %61, %55, !dbg !8257
  %63 = icmp ugt i32 %62, 100, !dbg !8258
  br i1 %63, label %302, label %56, !dbg !8259, !llvm.loop !8260

64:                                               ; preds = %46, %56, %25, %21, %4
  %65 = load i32, i32* %5, align 4, !dbg !8262, !tbaa !1321
  %66 = and i32 %65, 2, !dbg !8264
  %67 = icmp eq i32 %66, 0, !dbg !8265
  br i1 %67, label %119, label %68, !dbg !8266

68:                                               ; preds = %64
  %69 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8267, !tbaa !1398
  %70 = and i32 %69, 12, !dbg !8267
  %71 = icmp eq i32 %70, 0, !dbg !8270
  br i1 %71, label %80, label %72, !dbg !8271

72:                                               ; preds = %68
  %73 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8272, !tbaa !1398
  %74 = and i32 %73, 12, !dbg !8272
  %75 = icmp eq i32 %74, 8, !dbg !8273
  br i1 %75, label %76, label %88, !dbg !8274

76:                                               ; preds = %72
  %77 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8275, !tbaa !1404
  %78 = and i32 %77, 4194304, !dbg !8276
  %79 = icmp eq i32 %78, 0, !dbg !8277
  br i1 %79, label %80, label %88, !dbg !8278

80:                                               ; preds = %76, %68
  %81 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8279, !tbaa !8218
  %82 = and i32 %81, 2, !dbg !8279
  %83 = icmp eq i32 %82, 0, !dbg !8279
  br i1 %83, label %112, label %84, !dbg !8282

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !8283
  %86 = load i32, i32* %85, align 4, !dbg !8283, !tbaa !8284
  %87 = icmp eq i32 %86, 1, !dbg !8285
  br i1 %87, label %112, label %302, !dbg !8286

88:                                               ; preds = %76, %72
  %89 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !8287
  %90 = load i32, i32* %89, align 4, !dbg !8287, !tbaa !8284
  %91 = icmp eq i32 %90, 0, !dbg !8290
  br i1 %91, label %102, label %92, !dbg !8291

92:                                               ; preds = %88
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !8292, !tbaa !1032
  %93 = tail call i32 @HAL_GetTick() #19, !dbg !8294
  call void @llvm.dbg.value(metadata i32 %93, metadata !8184, metadata !DIExpression()), !dbg !8194
  br label %94, !dbg !8295

94:                                               ; preds = %98, %92
  %95 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8296, !tbaa !8218
  %96 = and i32 %95, 2, !dbg !8297
  %97 = icmp eq i32 %96, 0, !dbg !8297
  br i1 %97, label %98, label %112, !dbg !8295

98:                                               ; preds = %94
  %99 = tail call i32 @HAL_GetTick() #19, !dbg !8298
  %100 = sub i32 %99, %93, !dbg !8301
  %101 = icmp ugt i32 %100, 2, !dbg !8302
  br i1 %101, label %302, label %94, !dbg !8303, !llvm.loop !8304

102:                                              ; preds = %88
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !8306, !tbaa !1032
  %103 = tail call i32 @HAL_GetTick() #19, !dbg !8308
  call void @llvm.dbg.value(metadata i32 %103, metadata !8184, metadata !DIExpression()), !dbg !8194
  br label %104, !dbg !8309

104:                                              ; preds = %108, %102
  %105 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8310, !tbaa !8218
  %106 = and i32 %105, 2, !dbg !8310
  %107 = icmp eq i32 %106, 0, !dbg !8310
  br i1 %107, label %119, label %108, !dbg !8309

108:                                              ; preds = %104
  %109 = tail call i32 @HAL_GetTick() #19, !dbg !8311
  %110 = sub i32 %109, %103, !dbg !8314
  %111 = icmp ugt i32 %110, 2, !dbg !8315
  br i1 %111, label %302, label %104, !dbg !8316, !llvm.loop !8317

112:                                              ; preds = %94, %80, %84
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8319, !tbaa !8218
  %114 = and i32 %113, -249, !dbg !8319
  %115 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !8319
  %116 = load i32, i32* %115, align 4, !dbg !8319, !tbaa !8320
  %117 = shl i32 %116, 3, !dbg !8319
  %118 = or i32 %117, %114, !dbg !8319
  store volatile i32 %118, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8319, !tbaa !8218
  br label %119, !dbg !8321

119:                                              ; preds = %104, %112, %64
  %120 = load i32, i32* %5, align 4, !dbg !8321, !tbaa !1321
  %121 = and i32 %120, 8, !dbg !8323
  %122 = icmp eq i32 %121, 0, !dbg !8324
  br i1 %122, label %147, label %123, !dbg !8325

123:                                              ; preds = %119
  %124 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !8326
  %125 = load i32, i32* %124, align 4, !dbg !8326, !tbaa !8329
  %126 = icmp eq i32 %125, 0, !dbg !8330
  br i1 %126, label %137, label %127, !dbg !8331

127:                                              ; preds = %123
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !8332, !tbaa !1032
  %128 = tail call i32 @HAL_GetTick() #19, !dbg !8334
  call void @llvm.dbg.value(metadata i32 %128, metadata !8184, metadata !DIExpression()), !dbg !8194
  br label %129, !dbg !8335

129:                                              ; preds = %133, %127
  %130 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8336, !tbaa !8337
  %131 = and i32 %130, 2, !dbg !8338
  %132 = icmp eq i32 %131, 0, !dbg !8338
  br i1 %132, label %133, label %147, !dbg !8335

133:                                              ; preds = %129
  %134 = tail call i32 @HAL_GetTick() #19, !dbg !8339
  %135 = sub i32 %134, %128, !dbg !8342
  %136 = icmp ugt i32 %135, 2, !dbg !8343
  br i1 %136, label %302, label %129, !dbg !8344, !llvm.loop !8345

137:                                              ; preds = %123
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !8347, !tbaa !1032
  %138 = tail call i32 @HAL_GetTick() #19, !dbg !8349
  call void @llvm.dbg.value(metadata i32 %138, metadata !8184, metadata !DIExpression()), !dbg !8194
  br label %139, !dbg !8350

139:                                              ; preds = %143, %137
  %140 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8351, !tbaa !8337
  %141 = and i32 %140, 2, !dbg !8351
  %142 = icmp eq i32 %141, 0, !dbg !8351
  br i1 %142, label %147, label %143, !dbg !8350

143:                                              ; preds = %139
  %144 = tail call i32 @HAL_GetTick() #19, !dbg !8352
  %145 = sub i32 %144, %138, !dbg !8355
  %146 = icmp ugt i32 %145, 2, !dbg !8356
  br i1 %146, label %302, label %139, !dbg !8357, !llvm.loop !8358

147:                                              ; preds = %129, %139, %119
  %148 = load i32, i32* %5, align 4, !dbg !8360, !tbaa !1321
  %149 = and i32 %148, 4, !dbg !8361
  %150 = icmp eq i32 %149, 0, !dbg !8362
  br i1 %150, label %217, label %151, !dbg !8363

151:                                              ; preds = %147
  call void @llvm.dbg.value(metadata i32 0, metadata !8186, metadata !DIExpression()), !dbg !8364
  %152 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8365, !tbaa !1313
  %153 = and i32 %152, 268435456, !dbg !8365
  %154 = icmp eq i32 %153, 0, !dbg !8365
  br i1 %154, label %155, label %162, !dbg !8366

155:                                              ; preds = %151
  %156 = bitcast i32* %2 to i8*, !dbg !8367
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %156), !dbg !8367
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8190, metadata !DIExpression()), !dbg !8367
  store volatile i32 0, i32* %2, align 4, !dbg !8367, !tbaa !1032
  %157 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8367, !tbaa !1313
  %158 = or i32 %157, 268435456, !dbg !8367
  store volatile i32 %158, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8367, !tbaa !1313
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8367, !tbaa !1313
  %160 = and i32 %159, 268435456, !dbg !8367
  store volatile i32 %160, i32* %2, align 4, !dbg !8367, !tbaa !1032
  %161 = load volatile i32, i32* %2, align 4, !dbg !8367, !tbaa !1032
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %156), !dbg !8368
  call void @llvm.dbg.value(metadata i32 1, metadata !8186, metadata !DIExpression()), !dbg !8364
  br label %162, !dbg !8369

162:                                              ; preds = %155, %151
  call void @llvm.dbg.value(metadata i32 undef, metadata !8186, metadata !DIExpression()), !dbg !8364
  %163 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !8370, !tbaa !1316
  %164 = and i32 %163, 256, !dbg !8370
  %165 = icmp eq i32 %164, 0, !dbg !8370
  br i1 %165, label %166, label %178, !dbg !8372

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !8373, !tbaa !1316
  %168 = or i32 %167, 256, !dbg !8373
  store volatile i32 %168, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !8373, !tbaa !1316
  %169 = tail call i32 @HAL_GetTick() #19, !dbg !8375
  call void @llvm.dbg.value(metadata i32 %169, metadata !8184, metadata !DIExpression()), !dbg !8194
  br label %170, !dbg !8376

170:                                              ; preds = %174, %166
  %171 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !8377, !tbaa !1316
  %172 = and i32 %171, 256, !dbg !8377
  %173 = icmp eq i32 %172, 0, !dbg !8377
  br i1 %173, label %174, label %178, !dbg !8376

174:                                              ; preds = %170
  %175 = tail call i32 @HAL_GetTick() #19, !dbg !8378
  %176 = sub i32 %175, %169, !dbg !8381
  %177 = icmp ugt i32 %176, 2, !dbg !8382
  br i1 %177, label %302, label %170, !dbg !8383, !llvm.loop !8384

178:                                              ; preds = %170, %162
  %179 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !8386
  %180 = load i32, i32* %179, align 4, !dbg !8386, !tbaa !8389
  switch i32 %180, label %184 [
    i32 1, label %190
    i32 5, label %181
  ], !dbg !8390

181:                                              ; preds = %178
  %182 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !8391, !tbaa !8394
  %183 = or i32 %182, 4, !dbg !8391
  store volatile i32 %183, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !8391, !tbaa !8394
  br label %190, !dbg !8391

184:                                              ; preds = %178
  %185 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !8395, !tbaa !8394
  %186 = and i32 %185, -2, !dbg !8395
  store volatile i32 %186, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !8395, !tbaa !8394
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !8395, !tbaa !8394
  %188 = and i32 %187, -5, !dbg !8395
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !8395, !tbaa !8394
  %189 = icmp eq i32 %180, 0, !dbg !8397
  br i1 %189, label %203, label %193, !dbg !8399

190:                                              ; preds = %178, %181
  %191 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !8400, !tbaa !8394
  %192 = or i32 %191, 1, !dbg !8400
  store volatile i32 %192, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !8400, !tbaa !8394
  br label %193, !dbg !8401

193:                                              ; preds = %190, %184
  %194 = tail call i32 @HAL_GetTick() #19, !dbg !8401
  call void @llvm.dbg.value(metadata i32 %194, metadata !8184, metadata !DIExpression()), !dbg !8194
  br label %195, !dbg !8403

195:                                              ; preds = %199, %193
  %196 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !8404, !tbaa !8394
  %197 = and i32 %196, 2, !dbg !8405
  %198 = icmp eq i32 %197, 0, !dbg !8405
  br i1 %198, label %199, label %213, !dbg !8403

199:                                              ; preds = %195
  %200 = tail call i32 @HAL_GetTick() #19, !dbg !8406
  %201 = sub i32 %200, %194, !dbg !8409
  %202 = icmp ugt i32 %201, 5000, !dbg !8410
  br i1 %202, label %302, label %195, !dbg !8411, !llvm.loop !8412

203:                                              ; preds = %184
  %204 = tail call i32 @HAL_GetTick() #19, !dbg !8414
  call void @llvm.dbg.value(metadata i32 %204, metadata !8184, metadata !DIExpression()), !dbg !8194
  br label %205, !dbg !8416

205:                                              ; preds = %209, %203
  %206 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !8417, !tbaa !8394
  %207 = and i32 %206, 2, !dbg !8417
  %208 = icmp eq i32 %207, 0, !dbg !8417
  br i1 %208, label %213, label %209, !dbg !8416

209:                                              ; preds = %205
  %210 = tail call i32 @HAL_GetTick() #19, !dbg !8418
  %211 = sub i32 %210, %204, !dbg !8421
  %212 = icmp ugt i32 %211, 5000, !dbg !8422
  br i1 %212, label %302, label %205, !dbg !8423, !llvm.loop !8424

213:                                              ; preds = %195, %205
  br i1 %154, label %214, label %217, !dbg !8426

214:                                              ; preds = %213
  %215 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8427, !tbaa !1313
  %216 = and i32 %215, -268435457, !dbg !8427
  store volatile i32 %216, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8427, !tbaa !1313
  br label %217, !dbg !8430

217:                                              ; preds = %214, %213, %147
  %218 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !8431
  %219 = load i32, i32* %218, align 4, !dbg !8431, !tbaa !1329
  %220 = icmp eq i32 %219, 0, !dbg !8433
  br i1 %220, label %301, label %221, !dbg !8434

221:                                              ; preds = %217
  %222 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8435, !tbaa !1398
  %223 = and i32 %222, 12, !dbg !8435
  %224 = icmp eq i32 %223, 8, !dbg !8438
  br i1 %224, label %273, label %225, !dbg !8439

225:                                              ; preds = %221
  %226 = icmp eq i32 %219, 2, !dbg !8440
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !8443, !tbaa !1032
  %227 = tail call i32 @HAL_GetTick() #19, !dbg !8443
  call void @llvm.dbg.value(metadata i32 %227, metadata !8184, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i32 %227, metadata !8184, metadata !DIExpression()), !dbg !8194
  br i1 %226, label %228, label %265, !dbg !8444

228:                                              ; preds = %225, %232
  %229 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8445, !tbaa !8218
  %230 = and i32 %229, 33554432, !dbg !8445
  %231 = icmp eq i32 %230, 0, !dbg !8445
  br i1 %231, label %236, label %232, !dbg !8447

232:                                              ; preds = %228
  %233 = tail call i32 @HAL_GetTick() #19, !dbg !8448
  %234 = sub i32 %233, %227, !dbg !8451
  %235 = icmp ugt i32 %234, 2, !dbg !8452
  br i1 %235, label %302, label %228, !dbg !8453, !llvm.loop !8454

236:                                              ; preds = %228
  %237 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !8456
  %238 = load i32, i32* %237, align 4, !dbg !8456, !tbaa !1332
  %239 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !8456
  %240 = load i32, i32* %239, align 4, !dbg !8456, !tbaa !1335
  %241 = or i32 %240, %238, !dbg !8456
  %242 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !8456
  %243 = load i32, i32* %242, align 4, !dbg !8456, !tbaa !1338
  %244 = shl i32 %243, 6, !dbg !8456
  %245 = or i32 %241, %244, !dbg !8456
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !8456
  %247 = load i32, i32* %246, align 4, !dbg !8456, !tbaa !1341
  %248 = shl i32 %247, 15, !dbg !8456
  %249 = add i32 %248, -65536, !dbg !8456
  %250 = and i32 %249, -65536, !dbg !8456
  %251 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !8456
  %252 = load i32, i32* %251, align 4, !dbg !8456, !tbaa !1344
  %253 = shl i32 %252, 24, !dbg !8456
  %254 = or i32 %245, %253, !dbg !8456
  %255 = or i32 %254, %250, !dbg !8456
  store volatile i32 %255, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8456, !tbaa !1404
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !8457, !tbaa !1032
  %256 = tail call i32 @HAL_GetTick() #19, !dbg !8458
  call void @llvm.dbg.value(metadata i32 %256, metadata !8184, metadata !DIExpression()), !dbg !8194
  br label %257, !dbg !8459

257:                                              ; preds = %261, %236
  %258 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8460, !tbaa !8218
  %259 = and i32 %258, 33554432, !dbg !8461
  %260 = icmp eq i32 %259, 0, !dbg !8461
  br i1 %260, label %261, label %301, !dbg !8459

261:                                              ; preds = %257
  %262 = tail call i32 @HAL_GetTick() #19, !dbg !8462
  %263 = sub i32 %262, %256, !dbg !8465
  %264 = icmp ugt i32 %263, 2, !dbg !8466
  br i1 %264, label %302, label %257, !dbg !8467, !llvm.loop !8468

265:                                              ; preds = %225, %269
  %266 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8470, !tbaa !8218
  %267 = and i32 %266, 33554432, !dbg !8470
  %268 = icmp eq i32 %267, 0, !dbg !8470
  br i1 %268, label %301, label %269, !dbg !8472

269:                                              ; preds = %265
  %270 = tail call i32 @HAL_GetTick() #19, !dbg !8473
  %271 = sub i32 %270, %227, !dbg !8476
  %272 = icmp ugt i32 %271, 2, !dbg !8477
  br i1 %272, label %302, label %265, !dbg !8478, !llvm.loop !8479

273:                                              ; preds = %221
  %274 = icmp eq i32 %219, 1, !dbg !8481
  br i1 %274, label %302, label %275, !dbg !8484

275:                                              ; preds = %273
  %276 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8485, !tbaa !1398
  call void @llvm.dbg.value(metadata i32 %276, metadata !8185, metadata !DIExpression()), !dbg !8194
  %277 = and i32 %276, 4194304, !dbg !8487
  %278 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !8489
  %279 = load i32, i32* %278, align 4, !dbg !8489, !tbaa !1332
  %280 = icmp eq i32 %277, %279, !dbg !8490
  br i1 %280, label %281, label %302, !dbg !8491

281:                                              ; preds = %275
  %282 = and i32 %276, 63, !dbg !8492
  %283 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !8493
  %284 = load i32, i32* %283, align 4, !dbg !8493, !tbaa !1335
  %285 = icmp eq i32 %282, %284, !dbg !8494
  br i1 %285, label %286, label %302, !dbg !8495

286:                                              ; preds = %281
  %287 = and i32 %276, 32704, !dbg !8496
  %288 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !8497
  %289 = load i32, i32* %288, align 4, !dbg !8497, !tbaa !1338
  %290 = icmp eq i32 %287, %289, !dbg !8498
  br i1 %290, label %291, label %302, !dbg !8499

291:                                              ; preds = %286
  %292 = and i32 %276, 196608, !dbg !8500
  %293 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !8501
  %294 = load i32, i32* %293, align 4, !dbg !8501, !tbaa !1341
  %295 = icmp eq i32 %292, %294, !dbg !8502
  br i1 %295, label %296, label %302, !dbg !8503

296:                                              ; preds = %291
  %297 = and i32 %276, 251658240, !dbg !8504
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !8505
  %299 = load i32, i32* %298, align 4, !dbg !8505, !tbaa !1344
  %300 = icmp eq i32 %297, %299, !dbg !8506
  br i1 %300, label %301, label %302, !dbg !8507

301:                                              ; preds = %265, %257, %296, %217
  br label %302, !dbg !8508

302:                                              ; preds = %50, %60, %98, %108, %133, %143, %174, %199, %209, %269, %232, %261, %275, %281, %286, %291, %296, %273, %84, %25, %1, %301
  %303 = phi i32 [ 0, %301 ], [ 1, %1 ], [ 1, %25 ], [ 1, %84 ], [ 1, %273 ], [ 1, %296 ], [ 1, %291 ], [ 1, %286 ], [ 1, %281 ], [ 1, %275 ], [ 3, %261 ], [ 3, %232 ], [ 3, %269 ], [ 3, %209 ], [ 3, %199 ], [ 3, %174 ], [ 3, %143 ], [ 3, %133 ], [ 3, %108 ], [ 3, %98 ], [ 3, %60 ], [ 3, %50 ], !dbg !8194
  ret i32 %303, !dbg !8509
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.GPIO_InitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #3 !dbg !8510 {
  call void @llvm.dbg.value(metadata %struct.GPIO_InitTypeDef* %0, metadata !8523, metadata !DIExpression()), !dbg !8526
  call void @llvm.dbg.value(metadata i32 %1, metadata !8524, metadata !DIExpression()), !dbg !8526
  %3 = icmp eq %struct.GPIO_InitTypeDef* %0, null, !dbg !8527
  br i1 %3, label %109, label %4, !dbg !8529

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !8530, !tbaa !7267
  %6 = and i32 %5, 15, !dbg !8530
  %7 = icmp ult i32 %6, %1, !dbg !8532
  br i1 %7, label %8, label %13, !dbg !8533

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !8534
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !8534, !tbaa !1418
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !8536, !tbaa !7267
  %11 = and i32 %10, 15, !dbg !8536
  %12 = icmp eq i32 %11, %1, !dbg !8538
  br i1 %12, label %13, label %109, !dbg !8539

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %0, i32 0, i32 0, !dbg !8540
  %15 = load i32, i32* %14, align 4, !dbg !8540, !tbaa !1037
  %16 = and i32 %15, 2, !dbg !8542
  %17 = icmp eq i32 %16, 0, !dbg !8543
  br i1 %17, label %36, label %18, !dbg !8544

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !8545
  %20 = icmp eq i32 %19, 0, !dbg !8548
  br i1 %20, label %24, label %21, !dbg !8549

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8550, !tbaa !1398
  %23 = or i32 %22, 7168, !dbg !8550
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8550, !tbaa !1398
  br label %24, !dbg !8552

24:                                               ; preds = %21, %18
  %25 = and i32 %15, 8, !dbg !8553
  %26 = icmp eq i32 %25, 0, !dbg !8555
  br i1 %26, label %30, label %27, !dbg !8556

27:                                               ; preds = %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8557, !tbaa !1398
  %29 = or i32 %28, 57344, !dbg !8557
  store volatile i32 %29, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8557, !tbaa !1398
  br label %30, !dbg !8559

30:                                               ; preds = %27, %24
  %31 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8560, !tbaa !1398
  %32 = and i32 %31, -241, !dbg !8560
  %33 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %0, i32 0, i32 2, !dbg !8560
  %34 = load i32, i32* %33, align 4, !dbg !8560, !tbaa !1042
  %35 = or i32 %32, %34, !dbg !8560
  store volatile i32 %35, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8560, !tbaa !1398
  br label %36, !dbg !8561

36:                                               ; preds = %30, %13
  %37 = and i32 %15, 1, !dbg !8562
  %38 = icmp eq i32 %37, 0, !dbg !8564
  br i1 %38, label %69, label %39, !dbg !8565

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %0, i32 0, i32 1, !dbg !8566
  %41 = load i32, i32* %40, align 4, !dbg !8566, !tbaa !1040
  switch i32 %41, label %50 [
    i32 1, label %42
    i32 2, label %46
    i32 3, label %46
  ], !dbg !8569

42:                                               ; preds = %39
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8570, !tbaa !8218
  %44 = and i32 %43, 131072, !dbg !8573
  %45 = icmp eq i32 %44, 0, !dbg !8573
  br i1 %45, label %109, label %54, !dbg !8574

46:                                               ; preds = %39, %39
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8575, !tbaa !8218
  %48 = and i32 %47, 33554432, !dbg !8579
  %49 = icmp eq i32 %48, 0, !dbg !8579
  br i1 %49, label %109, label %54, !dbg !8580

50:                                               ; preds = %39
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8581, !tbaa !8218
  %52 = and i32 %51, 2, !dbg !8584
  %53 = icmp eq i32 %52, 0, !dbg !8584
  br i1 %53, label %109, label %54, !dbg !8585

54:                                               ; preds = %46, %50, %42
  %55 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8586, !tbaa !1398
  %56 = and i32 %55, -4, !dbg !8586
  %57 = or i32 %56, %41, !dbg !8586
  store volatile i32 %57, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8586, !tbaa !1398
  %58 = tail call i32 @HAL_GetTick() #19, !dbg !8587
  call void @llvm.dbg.value(metadata i32 %58, metadata !8525, metadata !DIExpression()), !dbg !8526
  br label %59, !dbg !8588

59:                                               ; preds = %65, %54
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8589, !tbaa !1398
  %61 = and i32 %60, 12, !dbg !8589
  %62 = load i32, i32* %40, align 4, !dbg !8590, !tbaa !1040
  %63 = shl i32 %62, 2, !dbg !8591
  %64 = icmp eq i32 %61, %63, !dbg !8592
  br i1 %64, label %69, label %65, !dbg !8588

65:                                               ; preds = %59
  %66 = tail call i32 @HAL_GetTick() #19, !dbg !8593
  %67 = sub i32 %66, %58, !dbg !8596
  %68 = icmp ugt i32 %67, 5000, !dbg !8597
  br i1 %68, label %109, label %59, !dbg !8598, !llvm.loop !8599

69:                                               ; preds = %59, %36
  %70 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !8601, !tbaa !7267
  %71 = and i32 %70, 15, !dbg !8601
  %72 = icmp ugt i32 %71, %1, !dbg !8603
  br i1 %72, label %73, label %78, !dbg !8604

73:                                               ; preds = %69
  %74 = trunc i32 %1 to i8, !dbg !8605
  store volatile i8 %74, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !8605, !tbaa !1418
  %75 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !8607, !tbaa !7267
  %76 = and i32 %75, 15, !dbg !8607
  %77 = icmp eq i32 %76, %1, !dbg !8609
  br i1 %77, label %78, label %109, !dbg !8610

78:                                               ; preds = %73, %69
  %79 = load i32, i32* %14, align 4, !dbg !8611, !tbaa !1037
  %80 = and i32 %79, 4, !dbg !8613
  %81 = icmp eq i32 %80, 0, !dbg !8614
  br i1 %81, label %88, label %82, !dbg !8615

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8616, !tbaa !1398
  %84 = and i32 %83, -7169, !dbg !8616
  %85 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %0, i32 0, i32 3, !dbg !8616
  %86 = load i32, i32* %85, align 4, !dbg !8616, !tbaa !1044
  %87 = or i32 %84, %86, !dbg !8616
  store volatile i32 %87, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8616, !tbaa !1398
  br label %88, !dbg !8618

88:                                               ; preds = %82, %78
  %89 = and i32 %79, 8, !dbg !8619
  %90 = icmp eq i32 %89, 0, !dbg !8621
  br i1 %90, label %98, label %91, !dbg !8622

91:                                               ; preds = %88
  %92 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8623, !tbaa !1398
  %93 = and i32 %92, -57345, !dbg !8623
  %94 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %0, i32 0, i32 4, !dbg !8623
  %95 = load i32, i32* %94, align 4, !dbg !8623, !tbaa !1362
  %96 = shl i32 %95, 3, !dbg !8623
  %97 = or i32 %96, %93, !dbg !8623
  store volatile i32 %97, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8623, !tbaa !1398
  br label %98, !dbg !8625

98:                                               ; preds = %91, %88
  %99 = tail call i32 @HAL_RCC_GetSysClockFreq() #20, !dbg !8626
  %100 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8627, !tbaa !1398
  %101 = lshr i32 %100, 4, !dbg !8628
  %102 = and i32 %101, 15, !dbg !8628
  %103 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %102, !dbg !8629
  %104 = load i8, i8* %103, align 1, !dbg !8629, !tbaa !1418
  %105 = zext i8 %104 to i32, !dbg !8629
  %106 = lshr i32 %99, %105, !dbg !8630
  store i32 %106, i32* @SystemCoreClock, align 4, !dbg !8631, !tbaa !1032
  %107 = load i32, i32* @uwTickPrio, align 4, !dbg !8632, !tbaa !1032
  %108 = tail call i32 @HAL_InitTick(i32 noundef %107) #19, !dbg !8633
  br label %109, !dbg !8634

109:                                              ; preds = %65, %73, %50, %46, %42, %8, %2, %98
  %110 = phi i32 [ 0, %98 ], [ 1, %2 ], [ 1, %8 ], [ 1, %42 ], [ 1, %46 ], [ 1, %50 ], [ 1, %73 ], [ 3, %65 ], !dbg !8526
  ret i32 %110, !dbg !8635
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #3 !dbg !8636 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8638, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 0, metadata !8639, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 0, metadata !8640, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 0, metadata !8641, metadata !DIExpression()), !dbg !8642
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8643, !tbaa !1398
  %2 = and i32 %1, 12, !dbg !8644
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !8645

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !8641, metadata !DIExpression()), !dbg !8642
  br label %29, !dbg !8646

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8649, !tbaa !1404
  %6 = and i32 %5, 63, !dbg !8651
  call void @llvm.dbg.value(metadata i32 %6, metadata !8638, metadata !DIExpression()), !dbg !8642
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8652, !tbaa !1404
  %8 = and i32 %7, 4194304, !dbg !8652
  %9 = icmp eq i32 %8, 0, !dbg !8654
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8655, !tbaa !1404
  %11 = lshr i32 %10, 6, !dbg !8655
  %12 = and i32 %11, 511, !dbg !8655
  br i1 %9, label %16, label %13, !dbg !8656

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !8657
  %15 = udiv i32 %14, %6, !dbg !8659
  call void @llvm.dbg.value(metadata i32 %15, metadata !8639, metadata !DIExpression()), !dbg !8642
  br label %22, !dbg !8660

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !8661
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !8663
  %19 = zext i32 %6 to i64, !dbg !8664
  %20 = udiv i64 %18, %19, !dbg !8665
  %21 = trunc i64 %20 to i32, !dbg !8666
  call void @llvm.dbg.value(metadata i32 %21, metadata !8639, metadata !DIExpression()), !dbg !8642
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !8655
  call void @llvm.dbg.value(metadata i32 %23, metadata !8639, metadata !DIExpression()), !dbg !8642
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8667, !tbaa !1404
  %25 = lshr i32 %24, 15, !dbg !8668
  %26 = and i32 %25, 6, !dbg !8668
  %27 = add nuw nsw i32 %26, 2, !dbg !8668
  call void @llvm.dbg.value(metadata i32 %27, metadata !8640, metadata !DIExpression()), !dbg !8642
  %28 = udiv i32 %23, %27, !dbg !8669
  call void @llvm.dbg.value(metadata i32 %28, metadata !8641, metadata !DIExpression()), !dbg !8642
  br label %29, !dbg !8670

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !8671
  call void @llvm.dbg.value(metadata i32 %30, metadata !8641, metadata !DIExpression()), !dbg !8642
  ret i32 %30, !dbg !8672
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !8673 {
  %4 = alloca %struct.GPIO_InitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8677, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i32 %1, metadata !8678, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i32 %2, metadata !8679, metadata !DIExpression()), !dbg !8696
  %7 = bitcast %struct.GPIO_InitTypeDef* %4 to i8*, !dbg !8697
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #21, !dbg !8697
  call void @llvm.dbg.declare(metadata %struct.GPIO_InitTypeDef* %4, metadata !8680, metadata !DIExpression()), !dbg !8698
  %8 = icmp eq i32 %0, 0, !dbg !8699
  br i1 %8, label %9, label %23, !dbg !8700

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !8701
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !8701
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8689, metadata !DIExpression()), !dbg !8701
  store volatile i32 0, i32* %5, align 4, !dbg !8701, !tbaa !1032
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !8701, !tbaa !1033
  %12 = or i32 %11, 1, !dbg !8701
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !8701, !tbaa !1033
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !8701, !tbaa !1033
  %14 = and i32 %13, 1, !dbg !8701
  store volatile i32 %14, i32* %5, align 4, !dbg !8701, !tbaa !1032
  %15 = load volatile i32, i32* %5, align 4, !dbg !8701, !tbaa !1032
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !8702
  %16 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %4, i32 0, i32 0, !dbg !8703
  store i32 256, i32* %16, align 4, !dbg !8704, !tbaa !1037
  %17 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %4, i32 0, i32 1, !dbg !8705
  store i32 2, i32* %17, align 4, !dbg !8706, !tbaa !1040
  %18 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %4, i32 0, i32 3, !dbg !8707
  store i32 3, i32* %18, align 4, !dbg !8708, !tbaa !1044
  %19 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %4, i32 0, i32 2, !dbg !8709
  store i32 0, i32* %19, align 4, !dbg !8710, !tbaa !1042
  %20 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %4, i32 0, i32 4, !dbg !8711
  store i32 0, i32* %20, align 4, !dbg !8712, !tbaa !1362
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.GPIO_InitTypeDef* noundef nonnull %4) #19, !dbg !8713
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8714, !tbaa !1398
  %22 = and i32 %21, -123731969, !dbg !8714
  br label %38, !dbg !8715

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !8716
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !8716
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8693, metadata !DIExpression()), !dbg !8716
  store volatile i32 0, i32* %6, align 4, !dbg !8716, !tbaa !1032
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !8716, !tbaa !1033
  %26 = or i32 %25, 4, !dbg !8716
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !8716, !tbaa !1033
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !8716, !tbaa !1033
  %28 = and i32 %27, 4, !dbg !8716
  store volatile i32 %28, i32* %6, align 4, !dbg !8716, !tbaa !1032
  %29 = load volatile i32, i32* %6, align 4, !dbg !8716, !tbaa !1032
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !8717
  %30 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %4, i32 0, i32 0, !dbg !8718
  store i32 512, i32* %30, align 4, !dbg !8719, !tbaa !1037
  %31 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %4, i32 0, i32 1, !dbg !8720
  store i32 2, i32* %31, align 4, !dbg !8721, !tbaa !1040
  %32 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %4, i32 0, i32 3, !dbg !8722
  store i32 3, i32* %32, align 4, !dbg !8723, !tbaa !1044
  %33 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %4, i32 0, i32 2, !dbg !8724
  store i32 0, i32* %33, align 4, !dbg !8725, !tbaa !1042
  %34 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %4, i32 0, i32 4, !dbg !8726
  store i32 0, i32* %34, align 4, !dbg !8727, !tbaa !1362
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.GPIO_InitTypeDef* noundef nonnull %4) #19, !dbg !8728
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8729, !tbaa !1398
  %36 = and i32 %35, 134217727, !dbg !8729
  %37 = shl i32 %2, 3, !dbg !8729
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !8730
  %42 = or i32 %41, %40, !dbg !8730
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8730, !tbaa !1398
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #21, !dbg !8731
  ret void, !dbg !8731
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #7 !dbg !8732 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !8733, !tbaa !1032
  ret void, !dbg !8734
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #7 !dbg !8735 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !8736, !tbaa !1032
  ret void, !dbg !8737
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !8738 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !8739, !tbaa !1032
  ret i32 %1, !dbg !8740
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #8 !dbg !8741 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #20, !dbg !8742
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8743, !tbaa !1398
  %3 = lshr i32 %2, 10, !dbg !8744
  %4 = and i32 %3, 7, !dbg !8744
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !8745
  %6 = load i8, i8* %5, align 1, !dbg !8745, !tbaa !1418
  %7 = zext i8 %6 to i32, !dbg !8745
  %8 = lshr i32 %1, %7, !dbg !8746
  ret i32 %8, !dbg !8747
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #8 !dbg !8748 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #20, !dbg !8749
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8750, !tbaa !1398
  %3 = lshr i32 %2, 13, !dbg !8751
  %4 = and i32 %3, 7, !dbg !8751
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !8752
  %6 = load i8, i8* %5, align 1, !dbg !8752, !tbaa !1418
  %7 = zext i8 %6 to i32, !dbg !8752
  %8 = lshr i32 %1, %7, !dbg !8753
  ret i32 %8, !dbg !8754
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #3 !dbg !8755 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !8759, metadata !DIExpression()), !dbg !8760
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !8761
  store i32 15, i32* %2, align 4, !dbg !8762, !tbaa !1321
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8763, !tbaa !8218
  %4 = and i32 %3, 262144, !dbg !8765
  %5 = icmp eq i32 %4, 0, !dbg !8766
  br i1 %5, label %8, label %6, !dbg !8767

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !8768
  store i32 327680, i32* %7, align 4, !dbg !8770, !tbaa !1326
  br label %15, !dbg !8771

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8772, !tbaa !8218
  %10 = and i32 %9, 65536, !dbg !8774
  %11 = icmp eq i32 %10, 0, !dbg !8775
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !8776
  br i1 %11, label %14, label %13, !dbg !8777

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !8778, !tbaa !1326
  br label %15, !dbg !8780

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !8781, !tbaa !1326
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8783, !tbaa !8218
  %17 = and i32 %16, 1, !dbg !8785
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !8786
  store i32 %17, i32* %18, align 4, !dbg !8788
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8789, !tbaa !8218
  %20 = lshr i32 %19, 3, !dbg !8790
  %21 = and i32 %20, 31, !dbg !8790
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !8791
  store i32 %21, i32* %22, align 4, !dbg !8792, !tbaa !8320
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !8793, !tbaa !8394
  %24 = and i32 %23, 4, !dbg !8795
  %25 = icmp eq i32 %24, 0, !dbg !8796
  br i1 %25, label %28, label %26, !dbg !8797

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !8798
  store i32 5, i32* %27, align 4, !dbg !8800, !tbaa !8389
  br label %35, !dbg !8801

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !8802, !tbaa !8394
  %30 = and i32 %29, 1, !dbg !8804
  %31 = icmp eq i32 %30, 0, !dbg !8805
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !8806
  br i1 %31, label %34, label %33, !dbg !8807

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !8808, !tbaa !8389
  br label %35, !dbg !8810

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !8811, !tbaa !8389
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8813, !tbaa !8337
  %37 = and i32 %36, 1, !dbg !8815
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !8816
  store i32 %37, i32* %38, align 4, !dbg !8818
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8819, !tbaa !8218
  %40 = and i32 %39, 16777216, !dbg !8821
  %41 = icmp eq i32 %40, 0, !dbg !8822
  %42 = select i1 %41, i32 1, i32 2, !dbg !8823
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !8824
  store i32 %42, i32* %43, align 4, !dbg !8826
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8827, !tbaa !1404
  %45 = and i32 %44, 4194304, !dbg !8828
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !8829
  store i32 %45, i32* %46, align 4, !dbg !8830, !tbaa !1332
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8831, !tbaa !1404
  %48 = and i32 %47, 63, !dbg !8832
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !8833
  store i32 %48, i32* %49, align 4, !dbg !8834, !tbaa !1335
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8835, !tbaa !1404
  %51 = lshr i32 %50, 6, !dbg !8836
  %52 = and i32 %51, 511, !dbg !8836
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !8837
  store i32 %52, i32* %53, align 4, !dbg !8838, !tbaa !1338
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8839, !tbaa !1404
  %55 = shl i32 %54, 1, !dbg !8840
  %56 = and i32 %55, 393216, !dbg !8840
  %57 = add nuw nsw i32 %56, 131072, !dbg !8840
  %58 = lshr exact i32 %57, 16, !dbg !8841
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !8842
  store i32 %58, i32* %59, align 4, !dbg !8843, !tbaa !1341
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8844, !tbaa !1404
  %61 = lshr i32 %60, 24, !dbg !8845
  %62 = and i32 %61, 15, !dbg !8845
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !8846
  store i32 %62, i32* %63, align 4, !dbg !8847, !tbaa !1344
  ret void, !dbg !8848
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.GPIO_InitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #8 !dbg !8849 {
  call void @llvm.dbg.value(metadata %struct.GPIO_InitTypeDef* %0, metadata !8853, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata i32* %1, metadata !8854, metadata !DIExpression()), !dbg !8855
  %3 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %0, i32 0, i32 0, !dbg !8856
  store i32 15, i32* %3, align 4, !dbg !8857, !tbaa !1037
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8858, !tbaa !1398
  %5 = and i32 %4, 3, !dbg !8859
  %6 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %0, i32 0, i32 1, !dbg !8860
  store i32 %5, i32* %6, align 4, !dbg !8861, !tbaa !1040
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8862, !tbaa !1398
  %8 = and i32 %7, 240, !dbg !8863
  %9 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %0, i32 0, i32 2, !dbg !8864
  store i32 %8, i32* %9, align 4, !dbg !8865, !tbaa !1042
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8866, !tbaa !1398
  %11 = and i32 %10, 7168, !dbg !8867
  %12 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %0, i32 0, i32 3, !dbg !8868
  store i32 %11, i32* %12, align 4, !dbg !8869, !tbaa !1044
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8870, !tbaa !1398
  %14 = lshr i32 %13, 3, !dbg !8871
  %15 = and i32 %14, 7168, !dbg !8871
  %16 = getelementptr inbounds %struct.GPIO_InitTypeDef, %struct.GPIO_InitTypeDef* %0, i32 0, i32 4, !dbg !8872
  store i32 %15, i32* %16, align 4, !dbg !8873, !tbaa !1362
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !8874, !tbaa !7267
  %18 = and i32 %17, 15, !dbg !8875
  store i32 %18, i32* %1, align 4, !dbg !8876, !tbaa !1032
  ret void, !dbg !8877
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #3 !dbg !8878 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !8879, !tbaa !8881
  %2 = and i32 %1, 128, !dbg !8879
  %3 = icmp eq i32 %2, 0, !dbg !8879
  br i1 %3, label %5, label %4, !dbg !8882

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #20, !dbg !8883
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !8885, !tbaa !1418
  br label %5, !dbg !8886

5:                                                ; preds = %4, %0
  ret void, !dbg !8887
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #3 !dbg !8888 {
  ret void, !dbg !8889
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @SomethingSimple(i8 noundef zeroext %0, i8 noundef zeroext %1) local_unnamed_addr #3 !dbg !8890 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8893, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.value(metadata i8 %1, metadata !8894, metadata !DIExpression()), !dbg !8895
  %3 = add i8 %1, %0, !dbg !8896
  %4 = tail call zeroext i8 @add(i8 noundef zeroext 1, i8 noundef zeroext 2) #19, !dbg !8897
  %5 = add i8 %3, %4, !dbg !8898
  ret i8 %5, !dbg !8899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @AnotherSimpleThing() local_unnamed_addr #6 !dbg !8900 {
  ret i8 2, !dbg !8903
}

attributes #0 = { noinline noreturn nounwind optsize "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { optsize "frame-pointer"="none" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noinline nounwind optsize "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { argmemonly nofree nounwind willreturn writeonly }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { nofree noinline norecurse nounwind optsize "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { naked noinline nounwind optsize "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="none" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #19 = { nobuiltin nounwind optsize "no-builtins" }
attributes #20 = { nobuiltin optsize "no-builtins" }
attributes #21 = { nounwind }
attributes #22 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !718, !634, !101, !237, !720, !314, !331, !366, !443, !745, !833, !910, !983}
!llvm.ident = !{!985, !985, !985, !985, !985, !985, !985, !985, !985, !985, !985, !985, !985, !985}
!llvm.module.flags = !{!986, !987, !988, !989, !990, !991, !992, !993}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "GPIO_InitStruct", scope: !2, file: !89, line: 51, type: !90, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !13, globals: !88, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/src/main.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build", checksumkind: CSK_MD5, checksum: "6abae0dd70445183569c6109a9828502")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 39, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "components/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "53425c2c922b747a5882ff8e41badc34")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "HAL_OK", value: 0)
!10 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!11 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!12 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!13 = !{!14, !36, !39, !41, !38, !78, !79, !85}
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 32)
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !16, line: 602, baseType: !17)
!16 = !DIFile(filename: "include/STM32F4xx/Include/stm32f429xx.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "c6d3c6b2f5b9e084704dda73702120b9")
!17 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 591, size: 320, elements: !18)
!18 = !{!19, !25, !26, !27, !28, !29, !30, !31, !32}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !17, file: !16, line: 593, baseType: !20, size: 32)
!20 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !21)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !22, line: 48, baseType: !23)
!22 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "ab914e287601b2385e57880e6599aa6b")
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !24, line: 79, baseType: !7)
!24 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "f7024d0682a918b41f94e8be9cd90461")
!25 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !17, file: !16, line: 594, baseType: !20, size: 32, offset: 32)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !17, file: !16, line: 595, baseType: !20, size: 32, offset: 64)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !17, file: !16, line: 596, baseType: !20, size: 32, offset: 96)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !17, file: !16, line: 597, baseType: !20, size: 32, offset: 128)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !17, file: !16, line: 598, baseType: !20, size: 32, offset: 160)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !17, file: !16, line: 599, baseType: !20, size: 32, offset: 192)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !17, file: !16, line: 600, baseType: !20, size: 32, offset: 224)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !17, file: !16, line: 601, baseType: !33, size: 64, offset: 256)
!33 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 64, elements: !34)
!34 = !{!35}
!35 = !DISubrange(count: 2)
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !22, line: 36, baseType: !37)
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !24, line: 57, baseType: !38)
!38 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "TickType_t", file: !40, line: 63, baseType: !21)
!40 = !DIFile(filename: "components/FreeRTOS-Kernel/portable/GCC/ARM_CM4F/portmacro.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "2f588c676c107f3d951beafdb8be240c")
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 32)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !16, line: 742, baseType: !43)
!43 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 708, size: 1152, elements: !44)
!44 = !{!45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77}
!45 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !43, file: !16, line: 710, baseType: !20, size: 32)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !43, file: !16, line: 711, baseType: !20, size: 32, offset: 32)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !43, file: !16, line: 712, baseType: !20, size: 32, offset: 64)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !43, file: !16, line: 713, baseType: !20, size: 32, offset: 96)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !43, file: !16, line: 714, baseType: !20, size: 32, offset: 128)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !43, file: !16, line: 715, baseType: !20, size: 32, offset: 160)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !43, file: !16, line: 716, baseType: !20, size: 32, offset: 192)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !43, file: !16, line: 717, baseType: !21, size: 32, offset: 224)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !43, file: !16, line: 718, baseType: !20, size: 32, offset: 256)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !43, file: !16, line: 719, baseType: !20, size: 32, offset: 288)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !43, file: !16, line: 720, baseType: !56, size: 64, offset: 320)
!56 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 64, elements: !34)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !43, file: !16, line: 721, baseType: !20, size: 32, offset: 384)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !43, file: !16, line: 722, baseType: !20, size: 32, offset: 416)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !43, file: !16, line: 723, baseType: !20, size: 32, offset: 448)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !43, file: !16, line: 724, baseType: !21, size: 32, offset: 480)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !43, file: !16, line: 725, baseType: !20, size: 32, offset: 512)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !43, file: !16, line: 726, baseType: !20, size: 32, offset: 544)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !43, file: !16, line: 727, baseType: !56, size: 64, offset: 576)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !43, file: !16, line: 728, baseType: !20, size: 32, offset: 640)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !43, file: !16, line: 729, baseType: !20, size: 32, offset: 672)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !43, file: !16, line: 730, baseType: !20, size: 32, offset: 704)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !43, file: !16, line: 731, baseType: !21, size: 32, offset: 736)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !43, file: !16, line: 732, baseType: !20, size: 32, offset: 768)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !43, file: !16, line: 733, baseType: !20, size: 32, offset: 800)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !43, file: !16, line: 734, baseType: !56, size: 64, offset: 832)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !43, file: !16, line: 735, baseType: !20, size: 32, offset: 896)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !43, file: !16, line: 736, baseType: !20, size: 32, offset: 928)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !43, file: !16, line: 737, baseType: !56, size: 64, offset: 960)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !43, file: !16, line: 738, baseType: !20, size: 32, offset: 1024)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !43, file: !16, line: 739, baseType: !20, size: 32, offset: 1056)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !43, file: !16, line: 740, baseType: !20, size: 32, offset: 1088)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !43, file: !16, line: 741, baseType: !20, size: 32, offset: 1120)
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 32)
!80 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !16, line: 702, baseType: !81)
!81 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 698, size: 64, elements: !82)
!82 = !{!83, !84}
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !81, file: !16, line: 700, baseType: !20, size: 32)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !81, file: !16, line: 701, baseType: !20, size: 32, offset: 32)
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !22, line: 24, baseType: !86)
!86 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !24, line: 43, baseType: !87)
!87 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!88 = !{!0}
!89 = !DIFile(filename: "src/main.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "6abae0dd70445183569c6109a9828502")
!90 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !91, line: 63, baseType: !92)
!91 = !DIFile(filename: "components/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "3deaed60d9879341cdc54a9e866f7bcb")
!92 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !91, line: 47, size: 160, elements: !93)
!93 = !{!94, !95, !96, !97, !98}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !92, file: !91, line: 49, baseType: !21, size: 32)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !92, file: !91, line: 52, baseType: !21, size: 32, offset: 32)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !92, file: !91, line: 55, baseType: !21, size: 32, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !92, file: !91, line: 58, baseType: !21, size: 32, offset: 96)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !92, file: !91, line: 61, baseType: !21, size: 32, offset: 128)
!99 = !DIGlobalVariableExpression(var: !100, expr: !DIExpression())
!100 = distinct !DIGlobalVariable(name: "pxCurrentTCB", scope: !101, file: !125, line: 337, type: !234, isLocal: false, isDefinition: true)
!101 = distinct !DICompileUnit(language: DW_LANG_C99, file: !102, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !103, retainedTypes: !120, globals: !187, splitDebugInlining: false, nameTableKind: None)
!102 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/components/FreeRTOS-Kernel/tasks.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build", checksumkind: CSK_MD5, checksum: "3077f31cd8847126f862071429f26fca")
!103 = !{!104, !113}
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !105, line: 79, baseType: !7, size: 32, elements: !106)
!105 = !DIFile(filename: "components/FreeRTOS-Kernel/include/task.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "d32690b14c9d0468891bf5e050752363")
!106 = !{!107, !108, !109, !110, !111, !112}
!107 = !DIEnumerator(name: "eRunning", value: 0)
!108 = !DIEnumerator(name: "eReady", value: 1)
!109 = !DIEnumerator(name: "eBlocked", value: 2)
!110 = !DIEnumerator(name: "eSuspended", value: 3)
!111 = !DIEnumerator(name: "eDeleted", value: 4)
!112 = !DIEnumerator(name: "eInvalid", value: 5)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !105, line: 90, baseType: !7, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118, !119}
!115 = !DIEnumerator(name: "eNoAction", value: 0)
!116 = !DIEnumerator(name: "eSetBits", value: 1)
!117 = !DIEnumerator(name: "eIncrement", value: 2)
!118 = !DIEnumerator(name: "eSetValueWithOverwrite", value: 3)
!119 = !DIEnumerator(name: "eSetValueWithoutOverwrite", value: 4)
!120 = !{!121, !78, !123, !21, !176, !149, !178, !39, !85, !38, !179, !181, !183, !185, !186, !163, !166, !36}
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !122, line: 209, baseType: !7)
!122 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/include/stddef.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "862bb94651e55628ab3700c73b0fcc15")
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCB_t", file: !125, line: 333, baseType: !126)
!125 = !DIFile(filename: "components/FreeRTOS-Kernel/tasks.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "3077f31cd8847126f862071429f26fca")
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "tskTCB", file: !125, line: 329, baseType: !127)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tskTaskControlBlock", file: !125, line: 252, size: 704, elements: !128)
!128 = !{!129, !133, !160, !161, !162, !164, !169, !170, !171, !172, !173, !174}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "pxTopOfStack", scope: !127, file: !125, line: 254, baseType: !130, size: 32)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !132)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "StackType_t", file: !40, line: 55, baseType: !21)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "xStateListItem", scope: !127, file: !125, line: 260, baseType: !134, size: 160, offset: 32)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !135, line: 150, baseType: !136)
!135 = !DIFile(filename: "components/FreeRTOS-Kernel/include/list.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "32966c16d63cc02c3c2085bb611d99cf")
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !135, line: 140, size: 160, elements: !137)
!137 = !{!138, !139, !141, !142, !143}
!138 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !136, file: !135, line: 143, baseType: !39, size: 32)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !136, file: !135, line: 144, baseType: !140, size: 32, offset: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !136, file: !135, line: 145, baseType: !140, size: 32, offset: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !136, file: !135, line: 146, baseType: !78, size: 32, offset: 96)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !136, file: !135, line: 147, baseType: !144, size: 32, offset: 128)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !135, line: 164, size: 160, elements: !146)
!146 = !{!147, !151, !153}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !145, file: !135, line: 167, baseType: !148, size: 32)
!148 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !149)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "UBaseType_t", file: !40, line: 57, baseType: !150)
!150 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !145, file: !135, line: 168, baseType: !152, size: 32, offset: 32)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !145, file: !135, line: 169, baseType: !154, size: 96, offset: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !135, line: 159, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !135, line: 152, size: 96, elements: !156)
!156 = !{!157, !158, !159}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !155, file: !135, line: 155, baseType: !39, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !155, file: !135, line: 156, baseType: !140, size: 32, offset: 32)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !155, file: !135, line: 157, baseType: !140, size: 32, offset: 64)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "xEventListItem", scope: !127, file: !125, line: 261, baseType: !134, size: 160, offset: 192)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "uxPriority", scope: !127, file: !125, line: 262, baseType: !149, size: 32, offset: 352)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "pxStack", scope: !127, file: !125, line: 263, baseType: !163, size: 32, offset: 384)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !127, file: !125, line: 264, baseType: !165, size: 80, offset: 416)
!165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 80, elements: !167)
!166 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!167 = !{!168}
!168 = !DISubrange(count: 10)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "uxTCBNumber", scope: !127, file: !125, line: 275, baseType: !149, size: 32, offset: 512)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "uxTaskNumber", scope: !127, file: !125, line: 276, baseType: !149, size: 32, offset: 544)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !127, file: !125, line: 280, baseType: !149, size: 32, offset: 576)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "uxMutexesHeld", scope: !127, file: !125, line: 281, baseType: !149, size: 32, offset: 608)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "ulNotifiedValue", scope: !127, file: !125, line: 311, baseType: !20, size: 32, offset: 640)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "ucNotifyState", scope: !127, file: !125, line: 312, baseType: !175, size: 8, offset: 672)
!175 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !85)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "BaseType_t", file: !40, line: 56, baseType: !177)
!177 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !135, line: 171, baseType: !145)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskHandle_t", file: !105, line: 70, baseType: !182)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 32)
!186 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!187 = !{!99, !188, !193, !196, !198, !200, !202, !204, !206, !208, !210, !212, !214, !216, !219, !221, !224, !226, !228, !230, !232}
!188 = !DIGlobalVariableExpression(var: !189, expr: !DIExpression())
!189 = distinct !DIGlobalVariable(name: "pxReadyTasksLists", scope: !101, file: !125, line: 343, type: !190, isLocal: true, isDefinition: true)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 800, elements: !191)
!191 = !{!192}
!192 = !DISubrange(count: 5)
!193 = !DIGlobalVariableExpression(var: !194, expr: !DIExpression())
!194 = distinct !DIGlobalVariable(name: "pxDelayedTaskList", scope: !101, file: !125, line: 346, type: !195, isLocal: true, isDefinition: true)
!195 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !179)
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(name: "pxOverflowDelayedTaskList", scope: !101, file: !125, line: 347, type: !195, isLocal: true, isDefinition: true)
!198 = !DIGlobalVariableExpression(var: !199, expr: !DIExpression())
!199 = distinct !DIGlobalVariable(name: "xPendingReadyList", scope: !101, file: !125, line: 348, type: !180, isLocal: true, isDefinition: true)
!200 = !DIGlobalVariableExpression(var: !201, expr: !DIExpression())
!201 = distinct !DIGlobalVariable(name: "xTasksWaitingTermination", scope: !101, file: !125, line: 352, type: !180, isLocal: true, isDefinition: true)
!202 = !DIGlobalVariableExpression(var: !203, expr: !DIExpression())
!203 = distinct !DIGlobalVariable(name: "xSuspendedTaskList", scope: !101, file: !125, line: 359, type: !180, isLocal: true, isDefinition: true)
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(name: "xDelayedTaskList1", scope: !101, file: !125, line: 344, type: !180, isLocal: true, isDefinition: true)
!206 = !DIGlobalVariableExpression(var: !207, expr: !DIExpression())
!207 = distinct !DIGlobalVariable(name: "xDelayedTaskList2", scope: !101, file: !125, line: 345, type: !180, isLocal: true, isDefinition: true)
!208 = !DIGlobalVariableExpression(var: !209, expr: !DIExpression())
!209 = distinct !DIGlobalVariable(name: "uxTopReadyPriority", scope: !101, file: !125, line: 372, type: !148, isLocal: true, isDefinition: true)
!210 = !DIGlobalVariableExpression(var: !211, expr: !DIExpression())
!211 = distinct !DIGlobalVariable(name: "uxTaskNumber", scope: !101, file: !125, line: 377, type: !149, isLocal: true, isDefinition: true)
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(name: "uxDeletedTasksWaitingCleanUp", scope: !101, file: !125, line: 353, type: !148, isLocal: true, isDefinition: true)
!214 = !DIGlobalVariableExpression(var: !215, expr: !DIExpression())
!215 = distinct !DIGlobalVariable(name: "uxCurrentNumberOfTasks", scope: !101, file: !125, line: 370, type: !148, isLocal: true, isDefinition: true)
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "xSchedulerRunning", scope: !101, file: !125, line: 373, type: !218, isLocal: true, isDefinition: true)
!218 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !176)
!219 = !DIGlobalVariableExpression(var: !220, expr: !DIExpression())
!220 = distinct !DIGlobalVariable(name: "uxSchedulerSuspended", scope: !101, file: !125, line: 389, type: !148, isLocal: true, isDefinition: true)
!221 = !DIGlobalVariableExpression(var: !222, expr: !DIExpression())
!222 = distinct !DIGlobalVariable(name: "xTickCount", scope: !101, file: !125, line: 371, type: !223, isLocal: true, isDefinition: true)
!223 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !39)
!224 = !DIGlobalVariableExpression(var: !225, expr: !DIExpression())
!225 = distinct !DIGlobalVariable(name: "xIdleTaskHandle", scope: !101, file: !125, line: 379, type: !181, isLocal: true, isDefinition: true)
!226 = !DIGlobalVariableExpression(var: !227, expr: !DIExpression())
!227 = distinct !DIGlobalVariable(name: "xNextTaskUnblockTime", scope: !101, file: !125, line: 378, type: !223, isLocal: true, isDefinition: true)
!228 = !DIGlobalVariableExpression(var: !229, expr: !DIExpression())
!229 = distinct !DIGlobalVariable(name: "xYieldPending", scope: !101, file: !125, line: 375, type: !218, isLocal: true, isDefinition: true)
!230 = !DIGlobalVariableExpression(var: !231, expr: !DIExpression())
!231 = distinct !DIGlobalVariable(name: "xPendedTicks", scope: !101, file: !125, line: 374, type: !223, isLocal: true, isDefinition: true)
!232 = !DIGlobalVariableExpression(var: !233, expr: !DIExpression())
!233 = distinct !DIGlobalVariable(name: "xNumOfOverflows", scope: !101, file: !125, line: 376, type: !218, isLocal: true, isDefinition: true)
!234 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !123)
!235 = !DIGlobalVariableExpression(var: !236, expr: !DIExpression())
!236 = distinct !DIGlobalVariable(name: "xTimerQueue", scope: !237, file: !242, line: 141, type: !308, isLocal: true, isDefinition: true)
!237 = distinct !DICompileUnit(language: DW_LANG_C99, file: !238, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !239, globals: !282, splitDebugInlining: false, nameTableKind: None)
!238 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/components/FreeRTOS-Kernel/timers.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build", checksumkind: CSK_MD5, checksum: "5a863362583252b1bb248767fbee5205")
!239 = !{!176, !78, !38, !149, !240, !39, !85, !178, !278}
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer_t", file: !242, line: 88, baseType: !243)
!242 = !DIFile(filename: "components/FreeRTOS-Kernel/timers.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "5a863362583252b1bb248767fbee5205")
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "xTIMER", file: !242, line: 84, baseType: !244)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerControl", file: !242, line: 73, size: 352, elements: !245)
!245 = !{!246, !247, !270, !271, !272, !280, !281}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "pcTimerName", scope: !244, file: !242, line: 75, baseType: !183, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerListItem", scope: !244, file: !242, line: 76, baseType: !248, size: 160, offset: 32)
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !135, line: 150, baseType: !249)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !135, line: 140, size: 160, elements: !250)
!250 = !{!251, !252, !254, !255, !256}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !249, file: !135, line: 143, baseType: !39, size: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !249, file: !135, line: 144, baseType: !253, size: 32, offset: 32)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !249, file: !135, line: 145, baseType: !253, size: 32, offset: 64)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !249, file: !135, line: 146, baseType: !78, size: 32, offset: 96)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !249, file: !135, line: 147, baseType: !257, size: 32, offset: 128)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !135, line: 164, size: 160, elements: !259)
!259 = !{!260, !261, !263}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !258, file: !135, line: 167, baseType: !148, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !258, file: !135, line: 168, baseType: !262, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !258, file: !135, line: 169, baseType: !264, size: 96, offset: 64)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !135, line: 159, baseType: !265)
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !135, line: 152, size: 96, elements: !266)
!266 = !{!267, !268, !269}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !265, file: !135, line: 155, baseType: !39, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !265, file: !135, line: 156, baseType: !253, size: 32, offset: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !265, file: !135, line: 157, baseType: !253, size: 32, offset: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerPeriodInTicks", scope: !244, file: !242, line: 77, baseType: !39, size: 32, offset: 192)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "pvTimerID", scope: !244, file: !242, line: 78, baseType: !78, size: 32, offset: 224)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "pxCallbackFunction", scope: !244, file: !242, line: 79, baseType: !273, size: 32, offset: 256)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerCallbackFunction_t", file: !274, line: 82, baseType: !275)
!274 = !DIFile(filename: "components/FreeRTOS-Kernel/include/timers.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "6c03cb4f5c43f4e8195fac8aa7087e34")
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DISubroutineType(types: !277)
!277 = !{null, !278}
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerHandle_t", file: !274, line: 77, baseType: !279)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "uxTimerNumber", scope: !244, file: !242, line: 81, baseType: !149, size: 32, offset: 288)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "ucStatus", scope: !244, file: !242, line: 83, baseType: !85, size: 8, offset: 320)
!282 = !{!235, !283, !288, !292, !302, !304, !306}
!283 = !DIGlobalVariableExpression(var: !284, expr: !DIExpression())
!284 = distinct !DIGlobalVariable(name: "xTimerTaskHandle", scope: !237, file: !242, line: 142, type: !285, isLocal: true, isDefinition: true)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskHandle_t", file: !105, line: 70, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 32)
!287 = !DICompositeType(tag: DW_TAG_structure_type, name: "tskTaskControlBlock", file: !105, line: 69, flags: DIFlagFwdDecl)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "pxCurrentTimerList", scope: !237, file: !242, line: 137, type: !290, isLocal: true, isDefinition: true)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !135, line: 171, baseType: !258)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "xLastTime", scope: !294, file: !242, line: 673, type: !39, isLocal: true, isDefinition: true)
!294 = distinct !DISubprogram(name: "prvSampleTimeNow", scope: !242, file: !242, line: 670, type: !295, scopeLine: 671, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !299)
!295 = !DISubroutineType(types: !296)
!296 = !{!39, !297}
!297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !298)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!299 = !{!300, !301}
!300 = !DILocalVariable(name: "pxTimerListsWereSwitched", arg: 1, scope: !294, file: !242, line: 670, type: !297)
!301 = !DILocalVariable(name: "xTimeNow", scope: !294, file: !242, line: 672, type: !39)
!302 = !DIGlobalVariableExpression(var: !303, expr: !DIExpression())
!303 = distinct !DIGlobalVariable(name: "pxOverflowTimerList", scope: !237, file: !242, line: 138, type: !290, isLocal: true, isDefinition: true)
!304 = !DIGlobalVariableExpression(var: !305, expr: !DIExpression())
!305 = distinct !DIGlobalVariable(name: "xActiveTimerList1", scope: !237, file: !242, line: 135, type: !291, isLocal: true, isDefinition: true)
!306 = !DIGlobalVariableExpression(var: !307, expr: !DIExpression())
!307 = distinct !DIGlobalVariable(name: "xActiveTimerList2", scope: !237, file: !242, line: 136, type: !291, isLocal: true, isDefinition: true)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueHandle_t", file: !309, line: 48, baseType: !310)
!309 = !DIFile(filename: "components/FreeRTOS-Kernel/include/queue.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "9ae99e0593f6fb04bc9aa05c6a5d4566")
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DICompositeType(tag: DW_TAG_structure_type, name: "QueueDefinition", file: !309, line: 47, flags: DIFlagFwdDecl)
!312 = !DIGlobalVariableExpression(var: !313, expr: !DIExpression())
!313 = distinct !DIGlobalVariable(name: "ucMaxSysCallPriority", scope: !314, file: !321, line: 177, type: !85, isLocal: true, isDefinition: true)
!314 = distinct !DICompileUnit(language: DW_LANG_C99, file: !315, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !316, globals: !318, splitDebugInlining: false, nameTableKind: None)
!315 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/components/FreeRTOS-Kernel/portable/GCC/ARM_CM4F/port.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build", checksumkind: CSK_MD5, checksum: "1aa31963b59d374ee2096bbebeac12d0")
!316 = !{!132, !178, !317, !85, !21, !176, !39}
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 32)
!318 = !{!319, !312, !325, !327}
!319 = !DIGlobalVariableExpression(var: !320, expr: !DIExpression())
!320 = distinct !DIGlobalVariable(name: "pcInterruptPriorityRegisters", scope: !314, file: !321, line: 179, type: !322, isLocal: true, isDefinition: true)
!321 = !DIFile(filename: "components/FreeRTOS-Kernel/portable/GCC/ARM_CM4F/port.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "1aa31963b59d374ee2096bbebeac12d0")
!322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 32)
!324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!325 = !DIGlobalVariableExpression(var: !326, expr: !DIExpression())
!326 = distinct !DIGlobalVariable(name: "ulMaxPRIGROUPValue", scope: !314, file: !321, line: 178, type: !21, isLocal: true, isDefinition: true)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "uxCriticalNesting", scope: !314, file: !321, line: 146, type: !149, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "pxEnd", scope: !331, file: !336, line: 98, type: !334, isLocal: true, isDefinition: true)
!331 = distinct !DICompileUnit(language: DW_LANG_C99, file: !332, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !333, globals: !342, splitDebugInlining: false, nameTableKind: None)
!332 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/components/FreeRTOS-Kernel/portable/MemMang/heap_4.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build", checksumkind: CSK_MD5, checksum: "d99d733b61c082b91d4b48dfb4c17242")
!333 = !{!78, !185, !121, !334, !39}
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 32)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockLink_t", file: !336, line: 73, baseType: !337)
!336 = !DIFile(filename: "components/FreeRTOS-Kernel/portable/MemMang/heap_4.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "d99d733b61c082b91d4b48dfb4c17242")
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "A_BLOCK_LINK", file: !336, line: 69, size: 64, elements: !338)
!338 = !{!339, !341}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "pxNextFreeBlock", scope: !337, file: !336, line: 71, baseType: !340, size: 32)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "xBlockSize", scope: !337, file: !336, line: 72, baseType: !121, size: 32, offset: 32)
!342 = !{!343, !346, !329, !348, !350, !352, !354, !356, !358}
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression(DW_OP_constu, 8, DW_OP_stack_value))
!344 = distinct !DIGlobalVariable(name: "xHeapStructSize", scope: !331, file: !336, line: 95, type: !345, isLocal: true, isDefinition: true)
!345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "xStart", scope: !331, file: !336, line: 98, type: !335, isLocal: true, isDefinition: true)
!348 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression())
!349 = distinct !DIGlobalVariable(name: "xBlockAllocatedBit", scope: !331, file: !336, line: 111, type: !121, isLocal: true, isDefinition: true)
!350 = !DIGlobalVariableExpression(var: !351, expr: !DIExpression())
!351 = distinct !DIGlobalVariable(name: "xFreeBytesRemaining", scope: !331, file: !336, line: 102, type: !121, isLocal: true, isDefinition: true)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "xMinimumEverFreeBytesRemaining", scope: !331, file: !336, line: 103, type: !121, isLocal: true, isDefinition: true)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "xNumberOfSuccessfulAllocations", scope: !331, file: !336, line: 104, type: !121, isLocal: true, isDefinition: true)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "xNumberOfSuccessfulFrees", scope: !331, file: !336, line: 105, type: !121, isLocal: true, isDefinition: true)
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "ucHeap", scope: !331, file: !336, line: 64, type: !360, isLocal: true, isDefinition: true)
!360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 614400, elements: !361)
!361 = !{!362}
!362 = !DISubrange(count: 76800)
!363 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 2147483648, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!364 = !DIGlobalVariableExpression(var: !365, expr: !DIExpression())
!365 = distinct !DIGlobalVariable(name: "xQueueRegistry", scope: !366, file: !374, line: 162, type: !432, isLocal: false, isDefinition: true)
!366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !367, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !368, globals: !431, splitDebugInlining: false, nameTableKind: None)
!367 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/components/FreeRTOS-Kernel/queue.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build", checksumkind: CSK_MD5, checksum: "09d9203a1eed33c92b33443d5d63bae9")
!368 = !{!149, !369, !176, !178, !121, !372, !78, !185, !39, !85, !429, !379}
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !22, line: 20, baseType: !370)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !24, line: 41, baseType: !371)
!371 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "Queue_t", file: !374, line: 135, baseType: !375)
!374 = !DIFile(filename: "components/FreeRTOS-Kernel/queue.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "09d9203a1eed33c92b33443d5d63bae9")
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQUEUE", file: !374, line: 131, baseType: !376)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QueueDefinition", file: !374, line: 97, size: 640, elements: !377)
!377 = !{!378, !380, !381, !396, !420, !421, !422, !423, !424, !426, !427, !428}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "pcHead", scope: !376, file: !374, line: 99, baseType: !379, size: 32)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 32)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "pcWriteTo", scope: !376, file: !374, line: 100, baseType: !379, size: 32, offset: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !376, file: !374, line: 106, baseType: !382, size: 64, offset: 64)
!382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !376, file: !374, line: 102, size: 64, elements: !383)
!383 = !{!384, !390}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "xQueue", scope: !382, file: !374, line: 104, baseType: !385, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueuePointers_t", file: !374, line: 71, baseType: !386)
!386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QueuePointers", file: !374, line: 67, size: 64, elements: !387)
!387 = !{!388, !389}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "pcTail", scope: !386, file: !374, line: 69, baseType: !379, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "pcReadFrom", scope: !386, file: !374, line: 70, baseType: !379, size: 32, offset: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "xSemaphore", scope: !382, file: !374, line: 105, baseType: !391, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreData_t", file: !374, line: 77, baseType: !392)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreData", file: !374, line: 73, size: 64, elements: !393)
!393 = !{!394, !395}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "xMutexHolder", scope: !392, file: !374, line: 75, baseType: !285, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "uxRecursiveCallCount", scope: !392, file: !374, line: 76, baseType: !149, size: 32, offset: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToSend", scope: !376, file: !374, line: 108, baseType: !397, size: 160, offset: 128)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !135, line: 171, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !135, line: 164, size: 160, elements: !399)
!399 = !{!400, !401, !413}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !398, file: !135, line: 167, baseType: !148, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !398, file: !135, line: 168, baseType: !402, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !135, line: 150, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !135, line: 140, size: 160, elements: !405)
!405 = !{!406, !407, !409, !410, !411}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !404, file: !135, line: 143, baseType: !39, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !404, file: !135, line: 144, baseType: !408, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !404, file: !135, line: 145, baseType: !408, size: 32, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !404, file: !135, line: 146, baseType: !78, size: 32, offset: 96)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !404, file: !135, line: 147, baseType: !412, size: 32, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !398, file: !135, line: 169, baseType: !414, size: 96, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !135, line: 159, baseType: !415)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !135, line: 152, size: 96, elements: !416)
!416 = !{!417, !418, !419}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !415, file: !135, line: 155, baseType: !39, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !415, file: !135, line: 156, baseType: !408, size: 32, offset: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !415, file: !135, line: 157, baseType: !408, size: 32, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToReceive", scope: !376, file: !374, line: 109, baseType: !397, size: 160, offset: 288)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "uxMessagesWaiting", scope: !376, file: !374, line: 111, baseType: !148, size: 32, offset: 448)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "uxLength", scope: !376, file: !374, line: 112, baseType: !149, size: 32, offset: 480)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "uxItemSize", scope: !376, file: !374, line: 113, baseType: !149, size: 32, offset: 512)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "cRxLock", scope: !376, file: !374, line: 115, baseType: !425, size: 8, offset: 544)
!425 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !369)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "cTxLock", scope: !376, file: !374, line: 116, baseType: !425, size: 8, offset: 552)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "uxQueueNumber", scope: !376, file: !374, line: 127, baseType: !149, size: 32, offset: 576)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "ucQueueType", scope: !376, file: !374, line: 128, baseType: !85, size: 8, offset: 608)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueHandle_t", file: !309, line: 48, baseType: !430)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!431 = !{!364}
!432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 512, elements: !439)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueRegistryItem_t", file: !374, line: 157, baseType: !434)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQueueRegistryItem", file: !374, line: 152, baseType: !435)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QUEUE_REGISTRY_ITEM", file: !374, line: 148, size: 64, elements: !436)
!436 = !{!437, !438}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "pcQueueName", scope: !435, file: !374, line: 150, baseType: !183, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !435, file: !374, line: 151, baseType: !429, size: 32, offset: 32)
!439 = !{!440}
!440 = !DISubrange(count: 8)
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "uwTickFreq", scope: !443, file: !628, line: 96, type: !631, isLocal: false, isDefinition: true)
!443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !445, retainedTypes: !558, globals: !625, splitDebugInlining: false, nameTableKind: None)
!444 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/components/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build", checksumkind: CSK_MD5, checksum: "a0b1e5cec8052b8fc102170a42173ec7")
!445 = !{!446, !5, !453, !553}
!446 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !447, line: 50, baseType: !7, size: 32, elements: !448)
!447 = !DIFile(filename: "components/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "722ee5c6882a57d23314df368dea592d")
!448 = !{!449, !450, !451, !452}
!449 = !DIEnumerator(name: "HAL_TICK_FREQ_10HZ", value: 100)
!450 = !DIEnumerator(name: "HAL_TICK_FREQ_100HZ", value: 10)
!451 = !DIEnumerator(name: "HAL_TICK_FREQ_1KHZ", value: 1)
!452 = !DIEnumerator(name: "HAL_TICK_FREQ_DEFAULT", value: 1)
!453 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !16, line: 82, baseType: !186, size: 32, elements: !454)
!454 = !{!455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552}
!455 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!456 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!457 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!458 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!459 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!460 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!461 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!462 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!463 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!464 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!465 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!466 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!467 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!468 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!469 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!470 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!471 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!472 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!473 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!474 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!475 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!476 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!477 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!478 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!479 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!480 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!481 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!482 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!483 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!484 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!485 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!486 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!487 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!488 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!489 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!490 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!491 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!492 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!493 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!494 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!495 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!496 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!497 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!498 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!499 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!500 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!501 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!502 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!503 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!504 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!505 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!506 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!507 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!508 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!509 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!510 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!511 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!512 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!513 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!514 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!515 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!516 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!517 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!518 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!519 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!520 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!521 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!522 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!523 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!524 = !DIEnumerator(name: "ETH_IRQn", value: 61)
!525 = !DIEnumerator(name: "ETH_WKUP_IRQn", value: 62)
!526 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!527 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!528 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!529 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!530 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!531 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!532 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!533 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!534 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!535 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!536 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!537 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!538 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!539 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!540 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!541 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!542 = !DIEnumerator(name: "HASH_RNG_IRQn", value: 80)
!543 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!544 = !DIEnumerator(name: "UART7_IRQn", value: 82)
!545 = !DIEnumerator(name: "UART8_IRQn", value: 83)
!546 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!547 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!548 = !DIEnumerator(name: "SPI6_IRQn", value: 86)
!549 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!550 = !DIEnumerator(name: "LTDC_IRQn", value: 88)
!551 = !DIEnumerator(name: "LTDC_ER_IRQn", value: 89)
!552 = !DIEnumerator(name: "DMA2D_IRQn", value: 90)
!553 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !554, line: 207, baseType: !7, size: 32, elements: !555)
!554 = !DIFile(filename: "include/STM32F4xx/Include/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "51afb6c510901ccc4bc88b495bfa7464")
!555 = !{!556, !557}
!556 = !DIEnumerator(name: "DISABLE", value: 0)
!557 = !DIEnumerator(name: "ENABLE", value: 1)
!558 = !{!559, !21, !570, !606, !616, !178, !624}
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !16, line: 520, baseType: !561)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 511, size: 224, elements: !562)
!562 = !{!563, !564, !565, !566, !567, !568, !569}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !561, file: !16, line: 513, baseType: !20, size: 32)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !561, file: !16, line: 514, baseType: !20, size: 32, offset: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !561, file: !16, line: 515, baseType: !20, size: 32, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !561, file: !16, line: 516, baseType: !20, size: 32, offset: 96)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !561, file: !16, line: 517, baseType: !20, size: 32, offset: 128)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !561, file: !16, line: 518, baseType: !20, size: 32, offset: 160)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !561, file: !16, line: 519, baseType: !20, size: 32, offset: 192)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !16, line: 742, baseType: !572)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 708, size: 1152, elements: !573)
!573 = !{!574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !572, file: !16, line: 710, baseType: !20, size: 32)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !572, file: !16, line: 711, baseType: !20, size: 32, offset: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !572, file: !16, line: 712, baseType: !20, size: 32, offset: 64)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !572, file: !16, line: 713, baseType: !20, size: 32, offset: 96)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !572, file: !16, line: 714, baseType: !20, size: 32, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !572, file: !16, line: 715, baseType: !20, size: 32, offset: 160)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !572, file: !16, line: 716, baseType: !20, size: 32, offset: 192)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !572, file: !16, line: 717, baseType: !21, size: 32, offset: 224)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !572, file: !16, line: 718, baseType: !20, size: 32, offset: 256)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !572, file: !16, line: 719, baseType: !20, size: 32, offset: 288)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !572, file: !16, line: 720, baseType: !56, size: 64, offset: 320)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !572, file: !16, line: 721, baseType: !20, size: 32, offset: 384)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !572, file: !16, line: 722, baseType: !20, size: 32, offset: 416)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !572, file: !16, line: 723, baseType: !20, size: 32, offset: 448)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !572, file: !16, line: 724, baseType: !21, size: 32, offset: 480)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !572, file: !16, line: 725, baseType: !20, size: 32, offset: 512)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !572, file: !16, line: 726, baseType: !20, size: 32, offset: 544)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !572, file: !16, line: 727, baseType: !56, size: 64, offset: 576)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !572, file: !16, line: 728, baseType: !20, size: 32, offset: 640)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !572, file: !16, line: 729, baseType: !20, size: 32, offset: 672)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !572, file: !16, line: 730, baseType: !20, size: 32, offset: 704)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !572, file: !16, line: 731, baseType: !21, size: 32, offset: 736)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !572, file: !16, line: 732, baseType: !20, size: 32, offset: 768)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !572, file: !16, line: 733, baseType: !20, size: 32, offset: 800)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !572, file: !16, line: 734, baseType: !56, size: 64, offset: 832)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !572, file: !16, line: 735, baseType: !20, size: 32, offset: 896)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !572, file: !16, line: 736, baseType: !20, size: 32, offset: 928)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !572, file: !16, line: 737, baseType: !56, size: 64, offset: 960)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !572, file: !16, line: 738, baseType: !20, size: 32, offset: 1024)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !572, file: !16, line: 739, baseType: !20, size: 32, offset: 1056)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !572, file: !16, line: 740, baseType: !20, size: 32, offset: 1088)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !572, file: !16, line: 741, baseType: !20, size: 32, offset: 1120)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !608, line: 765, baseType: !609)
!608 = !DIFile(filename: "components/CMSIS/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project")
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 759, size: 128, elements: !610)
!610 = !{!611, !612, !613, !614}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !609, file: !608, line: 761, baseType: !20, size: 32)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !609, file: !608, line: 762, baseType: !20, size: 32, offset: 32)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !609, file: !608, line: 763, baseType: !20, size: 32, offset: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !609, file: !608, line: 764, baseType: !615, size: 32, offset: 96)
!615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !20)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "DBGMCU_TypeDef", file: !16, line: 344, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 338, size: 128, elements: !619)
!619 = !{!620, !621, !622, !623}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "IDCODE", scope: !618, file: !16, line: 340, baseType: !20, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !618, file: !16, line: 341, baseType: !20, size: 32, offset: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "APB1FZ", scope: !618, file: !16, line: 342, baseType: !20, size: 32, offset: 64)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "APB2FZ", scope: !618, file: !16, line: 343, baseType: !20, size: 32, offset: 96)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 32)
!625 = !{!626, !441, !629}
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(name: "uwTickPrio", scope: !443, file: !628, line: 95, type: !21, isLocal: false, isDefinition: true)
!628 = !DIFile(filename: "components/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "a0b1e5cec8052b8fc102170a42173ec7")
!629 = !DIGlobalVariableExpression(var: !630, expr: !DIExpression())
!630 = distinct !DIGlobalVariable(name: "uwTick", scope: !443, file: !628, line: 94, type: !20, isLocal: false, isDefinition: true)
!631 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_TickFreqTypeDef", file: !447, line: 56, baseType: !446)
!632 = !DIGlobalVariableExpression(var: !633, expr: !DIExpression())
!633 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !634, file: !710, line: 137, type: !715, isLocal: false, isDefinition: true)
!634 = distinct !DICompileUnit(language: DW_LANG_C99, file: !635, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !636, globals: !707, splitDebugInlining: false, nameTableKind: None)
!635 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/include/STM32F4xx/Source/Templates/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build", checksumkind: CSK_MD5, checksum: "a84c873534ac98c6282618dead273457")
!636 = !{!637, !671, !21}
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !608, line: 463, baseType: !639)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 440, size: 1120, elements: !640)
!640 = !{!641, !642, !643, !644, !645, !646, !647, !651, !652, !653, !654, !655, !656, !657, !658, !660, !661, !662, !666, !668, !670}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !639, file: !608, line: 442, baseType: !615, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !639, file: !608, line: 443, baseType: !20, size: 32, offset: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !639, file: !608, line: 444, baseType: !20, size: 32, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !639, file: !608, line: 445, baseType: !20, size: 32, offset: 96)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !639, file: !608, line: 446, baseType: !20, size: 32, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !639, file: !608, line: 447, baseType: !20, size: 32, offset: 160)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !639, file: !608, line: 448, baseType: !648, size: 96, offset: 192)
!648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 96, elements: !649)
!649 = !{!650}
!650 = !DISubrange(count: 12)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !639, file: !608, line: 449, baseType: !20, size: 32, offset: 288)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !639, file: !608, line: 450, baseType: !20, size: 32, offset: 320)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !639, file: !608, line: 451, baseType: !20, size: 32, offset: 352)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !639, file: !608, line: 452, baseType: !20, size: 32, offset: 384)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !639, file: !608, line: 453, baseType: !20, size: 32, offset: 416)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !639, file: !608, line: 454, baseType: !20, size: 32, offset: 448)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !639, file: !608, line: 455, baseType: !20, size: 32, offset: 480)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !639, file: !608, line: 456, baseType: !659, size: 64, offset: 512)
!659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !615, size: 64, elements: !34)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !639, file: !608, line: 457, baseType: !615, size: 32, offset: 576)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !639, file: !608, line: 458, baseType: !615, size: 32, offset: 608)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !639, file: !608, line: 459, baseType: !663, size: 128, offset: 640)
!663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !615, size: 128, elements: !664)
!664 = !{!665}
!665 = !DISubrange(count: 4)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !639, file: !608, line: 460, baseType: !667, size: 160, offset: 768)
!667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !615, size: 160, elements: !191)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !639, file: !608, line: 461, baseType: !669, size: 160, offset: 928)
!669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 160, elements: !191)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !639, file: !608, line: 462, baseType: !20, size: 32, offset: 1088)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !16, line: 742, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 708, size: 1152, elements: !674)
!674 = !{!675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !673, file: !16, line: 710, baseType: !20, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !673, file: !16, line: 711, baseType: !20, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !673, file: !16, line: 712, baseType: !20, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !673, file: !16, line: 713, baseType: !20, size: 32, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !673, file: !16, line: 714, baseType: !20, size: 32, offset: 128)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !673, file: !16, line: 715, baseType: !20, size: 32, offset: 160)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !673, file: !16, line: 716, baseType: !20, size: 32, offset: 192)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !673, file: !16, line: 717, baseType: !21, size: 32, offset: 224)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !673, file: !16, line: 718, baseType: !20, size: 32, offset: 256)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !673, file: !16, line: 719, baseType: !20, size: 32, offset: 288)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !673, file: !16, line: 720, baseType: !56, size: 64, offset: 320)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !673, file: !16, line: 721, baseType: !20, size: 32, offset: 384)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !673, file: !16, line: 722, baseType: !20, size: 32, offset: 416)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !673, file: !16, line: 723, baseType: !20, size: 32, offset: 448)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !673, file: !16, line: 724, baseType: !21, size: 32, offset: 480)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !673, file: !16, line: 725, baseType: !20, size: 32, offset: 512)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !673, file: !16, line: 726, baseType: !20, size: 32, offset: 544)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !673, file: !16, line: 727, baseType: !56, size: 64, offset: 576)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !673, file: !16, line: 728, baseType: !20, size: 32, offset: 640)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !673, file: !16, line: 729, baseType: !20, size: 32, offset: 672)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !673, file: !16, line: 730, baseType: !20, size: 32, offset: 704)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !673, file: !16, line: 731, baseType: !21, size: 32, offset: 736)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !673, file: !16, line: 732, baseType: !20, size: 32, offset: 768)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !673, file: !16, line: 733, baseType: !20, size: 32, offset: 800)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !673, file: !16, line: 734, baseType: !56, size: 64, offset: 832)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !673, file: !16, line: 735, baseType: !20, size: 32, offset: 896)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !673, file: !16, line: 736, baseType: !20, size: 32, offset: 928)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !673, file: !16, line: 737, baseType: !56, size: 64, offset: 960)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !673, file: !16, line: 738, baseType: !20, size: 32, offset: 1024)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !673, file: !16, line: 739, baseType: !20, size: 32, offset: 1056)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !673, file: !16, line: 740, baseType: !20, size: 32, offset: 1088)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !673, file: !16, line: 741, baseType: !20, size: 32, offset: 1120)
!707 = !{!708, !632, !711}
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !634, file: !710, line: 136, type: !21, isLocal: false, isDefinition: true)
!710 = !DIFile(filename: "include/STM32F4xx/Source/Templates/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "a84c873534ac98c6282618dead273457")
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !634, file: !710, line: 138, type: !713, isLocal: false, isDefinition: true)
!713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !714, size: 64, elements: !439)
!714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !85)
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !714, size: 128, elements: !716)
!716 = !{!717}
!717 = !DISubrange(count: 16)
!718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!719 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/src/utilities.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build", checksumkind: CSK_MD5, checksum: "b85bee0dcdfb15e8d13f14dead690039")
!720 = distinct !DICompileUnit(language: DW_LANG_C99, file: !721, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !722, splitDebugInlining: false, nameTableKind: None)
!721 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/components/FreeRTOS-Kernel/list.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build", checksumkind: CSK_MD5, checksum: "37dd2e62432352aebec83527568c6a95")
!722 = !{!723, !39, !149}
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !135, line: 150, baseType: !725)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !135, line: 140, size: 160, elements: !726)
!726 = !{!727, !728, !730, !731, !732}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !725, file: !135, line: 143, baseType: !39, size: 32)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !725, file: !135, line: 144, baseType: !729, size: 32, offset: 32)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !725, file: !135, line: 145, baseType: !729, size: 32, offset: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !725, file: !135, line: 146, baseType: !78, size: 32, offset: 96)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !725, file: !135, line: 147, baseType: !733, size: 32, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 32)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !135, line: 164, size: 160, elements: !735)
!735 = !{!736, !737, !738}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !734, file: !135, line: 167, baseType: !148, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !734, file: !135, line: 168, baseType: !723, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !734, file: !135, line: 169, baseType: !739, size: 96, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !135, line: 159, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !135, line: 152, size: 96, elements: !741)
!741 = !{!742, !743, !744}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !740, file: !135, line: 155, baseType: !39, size: 32)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !740, file: !135, line: 156, baseType: !729, size: 32, offset: 32)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !740, file: !135, line: 157, baseType: !729, size: 32, offset: 64)
!745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !746, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !747, retainedTypes: !752, splitDebugInlining: false, nameTableKind: None)
!746 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/components/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build", checksumkind: CSK_MD5, checksum: "05ece9f7e15369346852cc9b0bea67a2")
!747 = !{!453, !748}
!748 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !554, line: 201, baseType: !7, size: 32, elements: !749)
!749 = !{!750, !751}
!750 = !DIEnumerator(name: "RESET", value: 0)
!751 = !DIEnumerator(name: "SET", value: 1)
!752 = !{!753, !778, !21, !793, !801, !85, !803}
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !608, line: 463, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 440, size: 1120, elements: !756)
!756 = !{!757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !755, file: !608, line: 442, baseType: !615, size: 32)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !755, file: !608, line: 443, baseType: !20, size: 32, offset: 32)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !755, file: !608, line: 444, baseType: !20, size: 32, offset: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !755, file: !608, line: 445, baseType: !20, size: 32, offset: 96)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !755, file: !608, line: 446, baseType: !20, size: 32, offset: 128)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !755, file: !608, line: 447, baseType: !20, size: 32, offset: 160)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !755, file: !608, line: 448, baseType: !648, size: 96, offset: 192)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !755, file: !608, line: 449, baseType: !20, size: 32, offset: 288)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !755, file: !608, line: 450, baseType: !20, size: 32, offset: 320)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !755, file: !608, line: 451, baseType: !20, size: 32, offset: 352)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !755, file: !608, line: 452, baseType: !20, size: 32, offset: 384)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !755, file: !608, line: 453, baseType: !20, size: 32, offset: 416)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !755, file: !608, line: 454, baseType: !20, size: 32, offset: 448)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !755, file: !608, line: 455, baseType: !20, size: 32, offset: 480)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !755, file: !608, line: 456, baseType: !659, size: 64, offset: 512)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !755, file: !608, line: 457, baseType: !615, size: 32, offset: 576)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !755, file: !608, line: 458, baseType: !615, size: 32, offset: 608)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !755, file: !608, line: 459, baseType: !663, size: 128, offset: 640)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !755, file: !608, line: 460, baseType: !667, size: 160, offset: 768)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !755, file: !608, line: 461, baseType: !669, size: 160, offset: 928)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !755, file: !608, line: 462, baseType: !20, size: 32, offset: 1088)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !608, line: 1221, baseType: !780)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 1208, size: 352, elements: !781)
!781 = !{!782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !780, file: !608, line: 1210, baseType: !615, size: 32)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !780, file: !608, line: 1211, baseType: !20, size: 32, offset: 32)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !780, file: !608, line: 1212, baseType: !20, size: 32, offset: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !780, file: !608, line: 1213, baseType: !20, size: 32, offset: 96)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !780, file: !608, line: 1214, baseType: !20, size: 32, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !780, file: !608, line: 1215, baseType: !20, size: 32, offset: 160)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !780, file: !608, line: 1216, baseType: !20, size: 32, offset: 192)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !780, file: !608, line: 1217, baseType: !20, size: 32, offset: 224)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !780, file: !608, line: 1218, baseType: !20, size: 32, offset: 256)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !780, file: !608, line: 1219, baseType: !20, size: 32, offset: 288)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !780, file: !608, line: 1220, baseType: !20, size: 32, offset: 320)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !608, line: 765, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 759, size: 128, elements: !796)
!796 = !{!797, !798, !799, !800}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !795, file: !608, line: 761, baseType: !20, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !795, file: !608, line: 762, baseType: !20, size: 32, offset: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !795, file: !608, line: 763, baseType: !20, size: 32, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !795, file: !608, line: 764, baseType: !615, size: 32, offset: 96)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !22, line: 44, baseType: !802)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !24, line: 77, baseType: !186)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !608, line: 421, baseType: !805)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 406, size: 28704, elements: !806)
!806 = !{!807, !809, !813, !814, !815, !816, !817, !818, !819, !820, !824, !828, !832}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !805, file: !608, line: 408, baseType: !808, size: 256)
!808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 256, elements: !439)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !805, file: !608, line: 409, baseType: !810, size: 768, offset: 256)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 768, elements: !811)
!811 = !{!812}
!812 = !DISubrange(count: 24)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !805, file: !608, line: 410, baseType: !808, size: 256, offset: 1024)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !805, file: !608, line: 411, baseType: !810, size: 768, offset: 1280)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !805, file: !608, line: 412, baseType: !808, size: 256, offset: 2048)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !805, file: !608, line: 413, baseType: !810, size: 768, offset: 2304)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !805, file: !608, line: 414, baseType: !808, size: 256, offset: 3072)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !805, file: !608, line: 415, baseType: !810, size: 768, offset: 3328)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !805, file: !608, line: 416, baseType: !808, size: 256, offset: 4096)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !805, file: !608, line: 417, baseType: !821, size: 1792, offset: 4352)
!821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 1792, elements: !822)
!822 = !{!823}
!823 = !DISubrange(count: 56)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !805, file: !608, line: 418, baseType: !825, size: 1920, offset: 6144)
!825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 1920, elements: !826)
!826 = !{!827}
!827 = !DISubrange(count: 240)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !805, file: !608, line: 419, baseType: !829, size: 20608, offset: 8064)
!829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 20608, elements: !830)
!830 = !{!831}
!831 = !DISubrange(count: 644)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !805, file: !608, line: 420, baseType: !20, size: 32, offset: 28672)
!833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !834, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !835, retainedTypes: !840, splitDebugInlining: false, nameTableKind: None)
!834 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/components/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_gpio.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build", checksumkind: CSK_MD5, checksum: "4ea3e82eda82f1384803ff9f4a532511")
!835 = !{!836, !5, !748}
!836 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !91, line: 68, baseType: !7, size: 32, elements: !837)
!837 = !{!838, !839}
!838 = !DIEnumerator(name: "GPIO_PIN_RESET", value: 0)
!839 = !DIEnumerator(name: "GPIO_PIN_SET", value: 1)
!840 = !{!21, !841, !877, !85, !887, !900}
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !16, line: 742, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 708, size: 1152, elements: !844)
!844 = !{!845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !843, file: !16, line: 710, baseType: !20, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !843, file: !16, line: 711, baseType: !20, size: 32, offset: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !843, file: !16, line: 712, baseType: !20, size: 32, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !843, file: !16, line: 713, baseType: !20, size: 32, offset: 96)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !843, file: !16, line: 714, baseType: !20, size: 32, offset: 128)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !843, file: !16, line: 715, baseType: !20, size: 32, offset: 160)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !843, file: !16, line: 716, baseType: !20, size: 32, offset: 192)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !843, file: !16, line: 717, baseType: !21, size: 32, offset: 224)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !843, file: !16, line: 718, baseType: !20, size: 32, offset: 256)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !843, file: !16, line: 719, baseType: !20, size: 32, offset: 288)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !843, file: !16, line: 720, baseType: !56, size: 64, offset: 320)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !843, file: !16, line: 721, baseType: !20, size: 32, offset: 384)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !843, file: !16, line: 722, baseType: !20, size: 32, offset: 416)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !843, file: !16, line: 723, baseType: !20, size: 32, offset: 448)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !843, file: !16, line: 724, baseType: !21, size: 32, offset: 480)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !843, file: !16, line: 725, baseType: !20, size: 32, offset: 512)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !843, file: !16, line: 726, baseType: !20, size: 32, offset: 544)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !843, file: !16, line: 727, baseType: !56, size: 64, offset: 576)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !843, file: !16, line: 728, baseType: !20, size: 32, offset: 640)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !843, file: !16, line: 729, baseType: !20, size: 32, offset: 672)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !843, file: !16, line: 730, baseType: !20, size: 32, offset: 704)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !843, file: !16, line: 731, baseType: !21, size: 32, offset: 736)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !843, file: !16, line: 732, baseType: !20, size: 32, offset: 768)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !843, file: !16, line: 733, baseType: !20, size: 32, offset: 800)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !843, file: !16, line: 734, baseType: !56, size: 64, offset: 832)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !843, file: !16, line: 735, baseType: !20, size: 32, offset: 896)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !843, file: !16, line: 736, baseType: !20, size: 32, offset: 928)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !843, file: !16, line: 737, baseType: !56, size: 64, offset: 960)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !843, file: !16, line: 738, baseType: !20, size: 32, offset: 1024)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !843, file: !16, line: 739, baseType: !20, size: 32, offset: 1056)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !843, file: !16, line: 740, baseType: !20, size: 32, offset: 1088)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !843, file: !16, line: 741, baseType: !20, size: 32, offset: 1120)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !16, line: 615, baseType: !879)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 608, size: 288, elements: !880)
!880 = !{!881, !882, !883, !885, !886}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !879, file: !16, line: 610, baseType: !20, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !879, file: !16, line: 611, baseType: !20, size: 32, offset: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !879, file: !16, line: 612, baseType: !884, size: 128, offset: 64)
!884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 128, elements: !664)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !879, file: !16, line: 613, baseType: !56, size: 64, offset: 192)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !879, file: !16, line: 614, baseType: !20, size: 32, offset: 256)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !16, line: 602, baseType: !889)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 591, size: 320, elements: !890)
!890 = !{!891, !892, !893, !894, !895, !896, !897, !898, !899}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !889, file: !16, line: 593, baseType: !20, size: 32)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !889, file: !16, line: 594, baseType: !20, size: 32, offset: 32)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !889, file: !16, line: 595, baseType: !20, size: 32, offset: 64)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !889, file: !16, line: 596, baseType: !20, size: 32, offset: 96)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !889, file: !16, line: 597, baseType: !20, size: 32, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !889, file: !16, line: 598, baseType: !20, size: 32, offset: 160)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !889, file: !16, line: 599, baseType: !20, size: 32, offset: 192)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !889, file: !16, line: 600, baseType: !20, size: 32, offset: 224)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !889, file: !16, line: 601, baseType: !33, size: 64, offset: 256)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !16, line: 505, baseType: !902)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 497, size: 192, elements: !903)
!903 = !{!904, !905, !906, !907, !908, !909}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !902, file: !16, line: 499, baseType: !20, size: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !902, file: !16, line: 500, baseType: !20, size: 32, offset: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !902, file: !16, line: 501, baseType: !20, size: 32, offset: 64)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !902, file: !16, line: 502, baseType: !20, size: 32, offset: 96)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !902, file: !16, line: 503, baseType: !20, size: 32, offset: 128)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !902, file: !16, line: 504, baseType: !20, size: 32, offset: 160)
!910 = distinct !DICompileUnit(language: DW_LANG_C99, file: !911, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !912, retainedTypes: !913, splitDebugInlining: false, nameTableKind: None)
!911 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/components/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build", checksumkind: CSK_MD5, checksum: "ef16e68bea181c9d4db7aec75a83c72a")
!912 = !{!5, !748, !553}
!913 = !{!78, !914, !85, !21, !178, !950, !956, !317, !36, !967, !980}
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !16, line: 742, baseType: !916)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 708, size: 1152, elements: !917)
!917 = !{!918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !916, file: !16, line: 710, baseType: !20, size: 32)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !916, file: !16, line: 711, baseType: !20, size: 32, offset: 32)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !916, file: !16, line: 712, baseType: !20, size: 32, offset: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !916, file: !16, line: 713, baseType: !20, size: 32, offset: 96)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !916, file: !16, line: 714, baseType: !20, size: 32, offset: 128)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !916, file: !16, line: 715, baseType: !20, size: 32, offset: 160)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !916, file: !16, line: 716, baseType: !20, size: 32, offset: 192)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !916, file: !16, line: 717, baseType: !21, size: 32, offset: 224)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !916, file: !16, line: 718, baseType: !20, size: 32, offset: 256)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !916, file: !16, line: 719, baseType: !20, size: 32, offset: 288)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !916, file: !16, line: 720, baseType: !56, size: 64, offset: 320)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !916, file: !16, line: 721, baseType: !20, size: 32, offset: 384)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !916, file: !16, line: 722, baseType: !20, size: 32, offset: 416)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !916, file: !16, line: 723, baseType: !20, size: 32, offset: 448)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !916, file: !16, line: 724, baseType: !21, size: 32, offset: 480)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !916, file: !16, line: 725, baseType: !20, size: 32, offset: 512)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !916, file: !16, line: 726, baseType: !20, size: 32, offset: 544)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !916, file: !16, line: 727, baseType: !56, size: 64, offset: 576)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !916, file: !16, line: 728, baseType: !20, size: 32, offset: 640)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !916, file: !16, line: 729, baseType: !20, size: 32, offset: 672)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !916, file: !16, line: 730, baseType: !20, size: 32, offset: 704)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !916, file: !16, line: 731, baseType: !21, size: 32, offset: 736)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !916, file: !16, line: 732, baseType: !20, size: 32, offset: 768)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !916, file: !16, line: 733, baseType: !20, size: 32, offset: 800)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !916, file: !16, line: 734, baseType: !56, size: 64, offset: 832)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !916, file: !16, line: 735, baseType: !20, size: 32, offset: 896)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !916, file: !16, line: 736, baseType: !20, size: 32, offset: 928)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !916, file: !16, line: 737, baseType: !56, size: 64, offset: 960)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !916, file: !16, line: 738, baseType: !20, size: 32, offset: 1024)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !916, file: !16, line: 739, baseType: !20, size: 32, offset: 1056)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !916, file: !16, line: 740, baseType: !20, size: 32, offset: 1088)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !916, file: !16, line: 741, baseType: !20, size: 32, offset: 1120)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !16, line: 702, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 698, size: 64, elements: !953)
!953 = !{!954, !955}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !952, file: !16, line: 700, baseType: !20, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !952, file: !16, line: 701, baseType: !20, size: 32, offset: 32)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !16, line: 520, baseType: !958)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 511, size: 224, elements: !959)
!959 = !{!960, !961, !962, !963, !964, !965, !966}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !958, file: !16, line: 513, baseType: !20, size: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !958, file: !16, line: 514, baseType: !20, size: 32, offset: 32)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !958, file: !16, line: 515, baseType: !20, size: 32, offset: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !958, file: !16, line: 516, baseType: !20, size: 32, offset: 96)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !958, file: !16, line: 517, baseType: !20, size: 32, offset: 128)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !958, file: !16, line: 518, baseType: !20, size: 32, offset: 160)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !958, file: !16, line: 519, baseType: !20, size: 32, offset: 192)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !16, line: 602, baseType: !969)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !16, line: 591, size: 320, elements: !970)
!970 = !{!971, !972, !973, !974, !975, !976, !977, !978, !979}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !969, file: !16, line: 593, baseType: !20, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !969, file: !16, line: 594, baseType: !20, size: 32, offset: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !969, file: !16, line: 595, baseType: !20, size: 32, offset: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !969, file: !16, line: 596, baseType: !20, size: 32, offset: 96)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !969, file: !16, line: 597, baseType: !20, size: 32, offset: 128)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !969, file: !16, line: 598, baseType: !20, size: 32, offset: 160)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !969, file: !16, line: 599, baseType: !20, size: 32, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !969, file: !16, line: 600, baseType: !20, size: 32, offset: 224)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !969, file: !16, line: 601, baseType: !33, size: 64, offset: 256)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !22, line: 60, baseType: !981)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !24, line: 105, baseType: !982)
!982 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!983 = distinct !DICompileUnit(language: DW_LANG_C99, file: !984, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!984 = !DIFile(filename: "/home/mjshen/RTOSExploration/STM32_Base_Project/modules/simple_module/simple_module.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project/build/modules/simple_module", checksumkind: CSK_MD5, checksum: "5d6ae3bf64b04df30949548f57f93207")
!985 = !{!"Ubuntu clang version 14.0.6"}
!986 = !{i32 7, !"Dwarf Version", i32 5}
!987 = !{i32 2, !"Debug Info Version", i32 3}
!988 = !{i32 1, !"wchar_size", i32 4}
!989 = !{i32 1, !"min_enum_size", i32 4}
!990 = !{i32 1, !"branch-target-enforcement", i32 0}
!991 = !{i32 1, !"sign-return-address", i32 0}
!992 = !{i32 1, !"sign-return-address-all", i32 0}
!993 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!994 = distinct !DISubprogram(name: "LedBlinky_Task", scope: !89, file: !89, line: 65, type: !995, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !997)
!995 = !DISubroutineType(types: !996)
!996 = !{null, !78}
!997 = !{!998}
!998 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !994, file: !89, line: 65, type: !78)
!999 = !DILocation(line: 0, scope: !994)
!1000 = !DILocation(line: 66, column: 5, scope: !994)
!1001 = !DILocation(line: 67, column: 9, scope: !1002)
!1002 = distinct !DILexicalBlock(scope: !994, file: !89, line: 66, column: 15)
!1003 = !DILocation(line: 68, column: 9, scope: !1002)
!1004 = distinct !{!1004, !1000, !1005}
!1005 = !DILocation(line: 69, column: 5, scope: !994)
!1006 = distinct !DISubprogram(name: "main", scope: !89, file: !89, line: 72, type: !1007, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1009)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!186}
!1009 = !{!1010}
!1010 = !DILocalVariable(name: "tmpreg", scope: !1011, file: !89, line: 81, type: !20)
!1011 = distinct !DILexicalBlock(scope: !1006, file: !89, line: 81, column: 5)
!1012 = !DILocation(line: 74, column: 5, scope: !1006)
!1013 = !DILocation(line: 75, column: 12, scope: !1006)
!1014 = !{!1015, !1015, i64 0}
!1015 = !{!"any pointer", !1016, i64 0}
!1016 = !{!"omnipotent char", !1017, i64 0}
!1017 = !{!"Simple C/C++ TBAA"}
!1018 = !{!1019, !1015, i64 8}
!1019 = !{!"_reent", !1020, i64 0, !1015, i64 4, !1015, i64 8, !1015, i64 12, !1020, i64 16, !1016, i64 20, !1020, i64 48, !1015, i64 52, !1020, i64 56, !1015, i64 60, !1015, i64 64, !1020, i64 68, !1015, i64 72, !1015, i64 76, !1020, i64 80, !1015, i64 84, !1016, i64 88, !1015, i64 328, !1021, i64 332, !1015, i64 732, !1024, i64 736, !1016, i64 748}
!1020 = !{!"int", !1016, i64 0}
!1021 = !{!"_atexit", !1015, i64 0, !1020, i64 4, !1016, i64 8, !1022, i64 136}
!1022 = !{!"_on_exit_args", !1016, i64 0, !1016, i64 128, !1023, i64 256, !1023, i64 260}
!1023 = !{!"long", !1016, i64 0}
!1024 = !{!"_glue", !1015, i64 0, !1020, i64 4, !1015, i64 8}
!1025 = !DILocation(line: 75, column: 5, scope: !1006)
!1026 = !DILocation(line: 77, column: 5, scope: !1027)
!1027 = distinct !DILexicalBlock(scope: !1028, file: !89, line: 77, column: 5)
!1028 = distinct !DILexicalBlock(scope: !1006, file: !89, line: 77, column: 5)
!1029 = !DILocation(line: 79, column: 5, scope: !1006)
!1030 = !DILocation(line: 80, column: 5, scope: !1006)
!1031 = !DILocation(line: 81, column: 5, scope: !1011)
!1032 = !{!1020, !1020, i64 0}
!1033 = !{!1034, !1020, i64 48}
!1034 = !{!"", !1020, i64 0, !1020, i64 4, !1020, i64 8, !1020, i64 12, !1020, i64 16, !1020, i64 20, !1020, i64 24, !1020, i64 28, !1020, i64 32, !1020, i64 36, !1016, i64 40, !1020, i64 48, !1020, i64 52, !1020, i64 56, !1020, i64 60, !1020, i64 64, !1020, i64 68, !1016, i64 72, !1020, i64 80, !1020, i64 84, !1020, i64 88, !1020, i64 92, !1020, i64 96, !1020, i64 100, !1016, i64 104, !1020, i64 112, !1020, i64 116, !1016, i64 120, !1020, i64 128, !1020, i64 132, !1020, i64 136, !1020, i64 140}
!1035 = !DILocation(line: 81, column: 5, scope: !1006)
!1036 = !DILocation(line: 82, column: 27, scope: !1006)
!1037 = !{!1038, !1020, i64 0}
!1038 = !{!"", !1020, i64 0, !1020, i64 4, !1020, i64 8, !1020, i64 12, !1020, i64 16}
!1039 = !DILocation(line: 83, column: 27, scope: !1006)
!1040 = !{!1038, !1020, i64 4}
!1041 = !DILocation(line: 84, column: 27, scope: !1006)
!1042 = !{!1038, !1020, i64 8}
!1043 = !DILocation(line: 85, column: 27, scope: !1006)
!1044 = !{!1038, !1020, i64 12}
!1045 = !DILocation(line: 86, column: 5, scope: !1006)
!1046 = !DILocation(line: 88, column: 5, scope: !1006)
!1047 = !DILocation(line: 89, column: 5, scope: !1006)
!1048 = !DILocation(line: 95, column: 5, scope: !1006)
!1049 = !DILocation(line: 96, column: 5, scope: !1006)
!1050 = distinct !{!1050, !1049, !1051}
!1051 = !DILocation(line: 97, column: 5, scope: !1006)
!1052 = !DISubprogram(name: "initialise_monitor_handles", scope: !1053, file: !1053, line: 44, type: !1054, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1056)
!1053 = !DIFile(filename: "include/utilities.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "c358348512f77e329f8d40f5d44b68bc")
!1054 = !DISubroutineType(types: !1055)
!1055 = !{null}
!1056 = !{}
!1057 = !DISubprogram(name: "setbuf", scope: !1058, file: !1058, line: 194, type: !1059, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1056)
!1058 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "f9fec3134fbe599333115bffe9fa8133")
!1059 = !DISubroutineType(types: !1060)
!1060 = !{null, !1061, !1266}
!1061 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1062)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1058, line: 66, baseType: !1064)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !1065, line: 292, baseType: !1066)
!1065 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "c7a2657565d7077fe3d3f464b271e0ba")
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !1065, line: 186, size: 832, elements: !1067)
!1067 = !{!1068, !1070, !1071, !1072, !1074, !1075, !1080, !1081, !1082, !1233, !1237, !1242, !1246, !1247, !1248, !1249, !1251, !1253, !1254, !1255, !1257, !1258, !1264, !1265}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !1066, file: !1065, line: 187, baseType: !1069, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !1066, file: !1065, line: 188, baseType: !186, size: 32, offset: 32)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !1066, file: !1065, line: 189, baseType: !186, size: 32, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1066, file: !1065, line: 190, baseType: !1073, size: 16, offset: 96)
!1073 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !1066, file: !1065, line: 191, baseType: !1073, size: 16, offset: 112)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !1066, file: !1065, line: 192, baseType: !1076, size: 64, offset: 128)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !1065, line: 122, size: 64, elements: !1077)
!1077 = !{!1078, !1079}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !1076, file: !1065, line: 123, baseType: !1069, size: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !1076, file: !1065, line: 124, baseType: !186, size: 32, offset: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !1066, file: !1065, line: 193, baseType: !186, size: 32, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !1066, file: !1065, line: 200, baseType: !78, size: 32, offset: 224)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !1066, file: !1065, line: 202, baseType: !1083, size: 32, offset: 256)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!186, !1086, !78, !1128, !186}
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !1065, line: 613, size: 8512, elements: !1088)
!1088 = !{!1089, !1090, !1092, !1093, !1094, !1095, !1099, !1100, !1103, !1104, !1108, !1122, !1123, !1124, !1126, !1127, !1129, !1199, !1218, !1219, !1224, !1231}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !1087, file: !1065, line: 615, baseType: !186, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !1087, file: !1065, line: 620, baseType: !1091, size: 32, offset: 32)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !1087, file: !1065, line: 620, baseType: !1091, size: 32, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !1087, file: !1065, line: 620, baseType: !1091, size: 32, offset: 96)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !1087, file: !1065, line: 622, baseType: !186, size: 32, offset: 128)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !1087, file: !1065, line: 623, baseType: !1096, size: 200, offset: 160)
!1096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 200, elements: !1097)
!1097 = !{!1098}
!1098 = !DISubrange(count: 25)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !1087, file: !1065, line: 626, baseType: !186, size: 32, offset: 384)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !1087, file: !1065, line: 627, baseType: !1101, size: 32, offset: 416)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !1065, line: 45, flags: DIFlagFwdDecl)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !1087, file: !1065, line: 629, baseType: !186, size: 32, offset: 448)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !1087, file: !1065, line: 631, baseType: !1105, size: 32, offset: 480)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{null, !1086}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !1087, file: !1065, line: 634, baseType: !1109, size: 32, offset: 512)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !1065, line: 52, size: 192, elements: !1111)
!1111 = !{!1112, !1113, !1114, !1115, !1116, !1117}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1110, file: !1065, line: 54, baseType: !1109, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !1110, file: !1065, line: 55, baseType: !186, size: 32, offset: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !1110, file: !1065, line: 55, baseType: !186, size: 32, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !1110, file: !1065, line: 55, baseType: !186, size: 32, offset: 96)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !1110, file: !1065, line: 55, baseType: !186, size: 32, offset: 128)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !1110, file: !1065, line: 56, baseType: !1118, size: 32, offset: 160)
!1118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1119, size: 32, elements: !1120)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !1065, line: 22, baseType: !150)
!1120 = !{!1121}
!1121 = !DISubrange(count: 1)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !1087, file: !1065, line: 635, baseType: !186, size: 32, offset: 544)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !1087, file: !1065, line: 636, baseType: !1109, size: 32, offset: 576)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !1087, file: !1065, line: 637, baseType: !1125, size: 32, offset: 608)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !1087, file: !1065, line: 640, baseType: !186, size: 32, offset: 640)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !1087, file: !1065, line: 641, baseType: !1128, size: 32, offset: 672)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "_new", scope: !1087, file: !1065, line: 676, baseType: !1130, size: 1920, offset: 704)
!1130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1087, file: !1065, line: 643, size: 1920, elements: !1131)
!1131 = !{!1132, !1190}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "_reent", scope: !1130, file: !1065, line: 666, baseType: !1133, size: 1664)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1130, file: !1065, line: 645, size: 1664, elements: !1134)
!1134 = !{!1135, !1136, !1137, !1141, !1153, !1154, !1155, !1164, !1177, !1178, !1179, !1181, !1183, !1184, !1185, !1186, !1187, !1188, !1189}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "_unused_rand", scope: !1133, file: !1065, line: 647, baseType: !7, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !1133, file: !1065, line: 648, baseType: !1128, size: 32, offset: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !1133, file: !1065, line: 649, baseType: !1138, size: 208, offset: 64)
!1138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 208, elements: !1139)
!1139 = !{!1140}
!1140 = !DISubrange(count: 26)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !1133, file: !1065, line: 650, baseType: !1142, size: 288, offset: 288)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !1065, line: 60, size: 288, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !1142, file: !1065, line: 62, baseType: !186, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !1142, file: !1065, line: 63, baseType: !186, size: 32, offset: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !1142, file: !1065, line: 64, baseType: !186, size: 32, offset: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !1142, file: !1065, line: 65, baseType: !186, size: 32, offset: 96)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !1142, file: !1065, line: 66, baseType: !186, size: 32, offset: 128)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !1142, file: !1065, line: 67, baseType: !186, size: 32, offset: 160)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !1142, file: !1065, line: 68, baseType: !186, size: 32, offset: 192)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !1142, file: !1065, line: 69, baseType: !186, size: 32, offset: 224)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !1142, file: !1065, line: 70, baseType: !186, size: 32, offset: 256)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !1133, file: !1065, line: 651, baseType: !186, size: 32, offset: 576)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !1133, file: !1065, line: 652, baseType: !982, size: 64, offset: 640)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !1133, file: !1065, line: 653, baseType: !1156, size: 112, offset: 704)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !1065, line: 324, size: 112, elements: !1157)
!1157 = !{!1158, !1162, !1163}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !1156, file: !1065, line: 325, baseType: !1159, size: 48)
!1159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 48, elements: !1160)
!1160 = !{!1161}
!1161 = !DISubrange(count: 3)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !1156, file: !1065, line: 326, baseType: !1159, size: 48, offset: 48)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !1156, file: !1065, line: 327, baseType: !38, size: 16, offset: 96)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !1133, file: !1065, line: 654, baseType: !1165, size: 64, offset: 832)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !1166, line: 170, baseType: !1167)
!1166 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "b45aad52ebaa1042158f2766af29f8e2")
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1166, line: 162, size: 64, elements: !1168)
!1168 = !{!1169, !1170}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1167, file: !1166, line: 164, baseType: !186, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1167, file: !1166, line: 169, baseType: !1171, size: 32, offset: 32)
!1171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1167, file: !1166, line: 165, size: 32, elements: !1172)
!1172 = !{!1173, !1175}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1171, file: !1166, line: 167, baseType: !1174, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !122, line: 350, baseType: !186)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1171, file: !1166, line: 168, baseType: !1176, size: 32)
!1176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 32, elements: !664)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !1133, file: !1065, line: 655, baseType: !1165, size: 64, offset: 896)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !1133, file: !1065, line: 656, baseType: !1165, size: 64, offset: 960)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !1133, file: !1065, line: 657, baseType: !1180, size: 64, offset: 1024)
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 64, elements: !439)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !1133, file: !1065, line: 658, baseType: !1182, size: 192, offset: 1088)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 192, elements: !811)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !1133, file: !1065, line: 659, baseType: !186, size: 32, offset: 1280)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !1133, file: !1065, line: 660, baseType: !1165, size: 64, offset: 1312)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !1133, file: !1065, line: 661, baseType: !1165, size: 64, offset: 1376)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !1133, file: !1065, line: 662, baseType: !1165, size: 64, offset: 1440)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !1133, file: !1065, line: 663, baseType: !1165, size: 64, offset: 1504)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !1133, file: !1065, line: 664, baseType: !1165, size: 64, offset: 1568)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "_h_errno", scope: !1133, file: !1065, line: 665, baseType: !186, size: 32, offset: 1632)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1130, file: !1065, line: 675, baseType: !1191, size: 1920)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1130, file: !1065, line: 670, size: 1920, elements: !1192)
!1192 = !{!1193, !1197}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "_nextf", scope: !1191, file: !1065, line: 673, baseType: !1194, size: 960)
!1194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1069, size: 960, elements: !1195)
!1195 = !{!1196}
!1196 = !DISubrange(count: 30)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "_nmalloc", scope: !1191, file: !1065, line: 674, baseType: !1198, size: 960, offset: 960)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 960, elements: !1195)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !1087, file: !1065, line: 680, baseType: !1200, size: 32, offset: 2624)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !1065, line: 98, size: 3200, elements: !1202)
!1202 = !{!1203, !1204, !1205, !1210}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1201, file: !1065, line: 99, baseType: !1200, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !1201, file: !1065, line: 100, baseType: !186, size: 32, offset: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !1201, file: !1065, line: 102, baseType: !1206, size: 1024, offset: 64)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 1024, elements: !1208)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!1208 = !{!1209}
!1209 = !DISubrange(count: 32)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args", scope: !1201, file: !1065, line: 103, baseType: !1211, size: 2112, offset: 1088)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !1065, line: 79, size: 2112, elements: !1212)
!1212 = !{!1213, !1215, !1216, !1217}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !1211, file: !1065, line: 80, baseType: !1214, size: 1024)
!1214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !78, size: 1024, elements: !1208)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !1211, file: !1065, line: 81, baseType: !1214, size: 1024, offset: 1024)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !1211, file: !1065, line: 83, baseType: !1119, size: 32, offset: 2048)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !1211, file: !1065, line: 86, baseType: !1119, size: 32, offset: 2080)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !1087, file: !1065, line: 681, baseType: !1201, size: 3200, offset: 2656)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !1087, file: !1065, line: 685, baseType: !1220, size: 32, offset: 5856)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{null, !186}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !1087, file: !1065, line: 690, baseType: !1225, size: 96, offset: 5888)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !1065, line: 296, size: 96, elements: !1226)
!1226 = !{!1227, !1229, !1230}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1225, file: !1065, line: 298, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !1225, file: !1065, line: 299, baseType: !186, size: 32, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !1225, file: !1065, line: 300, baseType: !1091, size: 32, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !1087, file: !1065, line: 692, baseType: !1232, size: 2496, offset: 5984)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1064, size: 2496, elements: !1160)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !1066, file: !1065, line: 204, baseType: !1234, size: 32, offset: 288)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!186, !1086, !78, !183, !186}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !1066, file: !1065, line: 207, baseType: !1238, size: 32, offset: 320)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 32)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{!1241, !1086, !78, !1241, !186}
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !1166, line: 116, baseType: !177)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !1066, file: !1065, line: 208, baseType: !1243, size: 32, offset: 352)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!186, !1086, !78}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !1066, file: !1065, line: 211, baseType: !1076, size: 64, offset: 384)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !1066, file: !1065, line: 212, baseType: !1069, size: 32, offset: 448)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !1066, file: !1065, line: 213, baseType: !186, size: 32, offset: 480)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !1066, file: !1065, line: 216, baseType: !1250, size: 24, offset: 512)
!1250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 24, elements: !1160)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !1066, file: !1065, line: 217, baseType: !1252, size: 8, offset: 536)
!1252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 8, elements: !1120)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !1066, file: !1065, line: 220, baseType: !1076, size: 64, offset: 544)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !1066, file: !1065, line: 223, baseType: !186, size: 32, offset: 608)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1066, file: !1065, line: 224, baseType: !1256, size: 32, offset: 640)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !1166, line: 46, baseType: !177)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !1066, file: !1065, line: 227, baseType: !1086, size: 32, offset: 672)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1066, file: !1065, line: 231, baseType: !1259, size: 32, offset: 704)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !1065, line: 35, baseType: !1260)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !1261, line: 34, baseType: !1262)
!1261 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "9390f2fa4a45b9ec624c9a037c5d6ca9")
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !1261, line: 33, flags: DIFlagFwdDecl)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !1066, file: !1065, line: 233, baseType: !1165, size: 64, offset: 736)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1066, file: !1065, line: 234, baseType: !186, size: 32, offset: 800)
!1266 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1128)
!1267 = !DISubprogram(name: "printf", scope: !1058, file: !1058, line: 200, type: !1268, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1056)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!186, !1270, null}
!1270 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !183)
!1271 = distinct !DISubprogram(name: "SystemClock_Config", scope: !89, file: !89, line: 108, type: !1054, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1272)
!1272 = !{!1273, !1295, !1304, !1306}
!1273 = !DILocalVariable(name: "RCC_OscInitStruct", scope: !1271, file: !89, line: 109, type: !1274)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !1275, line: 72, baseType: !1276)
!1275 = !DIFile(filename: "components/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "cfce2158aa0f1a6d1dc078504194a964")
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1275, line: 51, size: 384, elements: !1277)
!1277 = !{!1278, !1279, !1280, !1281, !1282, !1283, !1284}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !1276, file: !1275, line: 53, baseType: !21, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !1276, file: !1275, line: 56, baseType: !21, size: 32, offset: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !1276, file: !1275, line: 59, baseType: !21, size: 32, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !1276, file: !1275, line: 62, baseType: !21, size: 32, offset: 96)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !1276, file: !1275, line: 65, baseType: !21, size: 32, offset: 128)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !1276, file: !1275, line: 68, baseType: !21, size: 32, offset: 160)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !1276, file: !1275, line: 71, baseType: !1285, size: 192, offset: 192)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !1286, line: 75, baseType: !1287)
!1286 = !DIFile(filename: "components/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "2e3c88dbe70dd0ef8aa60b62d7280e00")
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1286, line: 47, size: 192, elements: !1288)
!1288 = !{!1289, !1290, !1291, !1292, !1293, !1294}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !1287, file: !1286, line: 49, baseType: !21, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !1287, file: !1286, line: 52, baseType: !21, size: 32, offset: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !1287, file: !1286, line: 55, baseType: !21, size: 32, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !1287, file: !1286, line: 58, baseType: !21, size: 32, offset: 96)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !1287, file: !1286, line: 62, baseType: !21, size: 32, offset: 128)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !1287, file: !1286, line: 65, baseType: !21, size: 32, offset: 160)
!1295 = !DILocalVariable(name: "RCC_ClkInitStruct", scope: !1271, file: !89, line: 110, type: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !1275, line: 94, baseType: !1297)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1275, line: 77, size: 160, elements: !1298)
!1298 = !{!1299, !1300, !1301, !1302, !1303}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !1297, file: !1275, line: 79, baseType: !21, size: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !1297, file: !1275, line: 82, baseType: !21, size: 32, offset: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !1297, file: !1275, line: 85, baseType: !21, size: 32, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !1297, file: !1275, line: 88, baseType: !21, size: 32, offset: 96)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !1297, file: !1275, line: 91, baseType: !21, size: 32, offset: 128)
!1304 = !DILocalVariable(name: "tmpreg", scope: !1305, file: !89, line: 113, type: !20)
!1305 = distinct !DILexicalBlock(scope: !1271, file: !89, line: 113, column: 5)
!1306 = !DILocalVariable(name: "tmpreg", scope: !1307, file: !89, line: 114, type: !20)
!1307 = distinct !DILexicalBlock(scope: !1271, file: !89, line: 114, column: 5)
!1308 = !DILocation(line: 109, column: 5, scope: !1271)
!1309 = !DILocation(line: 109, column: 24, scope: !1271)
!1310 = !DILocation(line: 110, column: 5, scope: !1271)
!1311 = !DILocation(line: 110, column: 24, scope: !1271)
!1312 = !DILocation(line: 113, column: 5, scope: !1305)
!1313 = !{!1034, !1020, i64 64}
!1314 = !DILocation(line: 113, column: 5, scope: !1271)
!1315 = !DILocation(line: 114, column: 5, scope: !1307)
!1316 = !{!1317, !1020, i64 0}
!1317 = !{!"", !1020, i64 0, !1020, i64 4}
!1318 = !DILocation(line: 114, column: 5, scope: !1271)
!1319 = !DILocation(line: 117, column: 23, scope: !1271)
!1320 = !DILocation(line: 117, column: 38, scope: !1271)
!1321 = !{!1322, !1020, i64 0}
!1322 = !{!"", !1020, i64 0, !1020, i64 4, !1020, i64 8, !1020, i64 12, !1020, i64 16, !1020, i64 20, !1323, i64 24}
!1323 = !{!"", !1020, i64 0, !1020, i64 4, !1020, i64 8, !1020, i64 12, !1020, i64 16, !1020, i64 20}
!1324 = !DILocation(line: 118, column: 23, scope: !1271)
!1325 = !DILocation(line: 118, column: 32, scope: !1271)
!1326 = !{!1322, !1020, i64 4}
!1327 = !DILocation(line: 119, column: 27, scope: !1271)
!1328 = !DILocation(line: 119, column: 36, scope: !1271)
!1329 = !{!1322, !1020, i64 24}
!1330 = !DILocation(line: 120, column: 27, scope: !1271)
!1331 = !DILocation(line: 120, column: 37, scope: !1271)
!1332 = !{!1322, !1020, i64 28}
!1333 = !DILocation(line: 121, column: 27, scope: !1271)
!1334 = !DILocation(line: 121, column: 32, scope: !1271)
!1335 = !{!1322, !1020, i64 32}
!1336 = !DILocation(line: 122, column: 27, scope: !1271)
!1337 = !DILocation(line: 122, column: 32, scope: !1271)
!1338 = !{!1322, !1020, i64 36}
!1339 = !DILocation(line: 123, column: 27, scope: !1271)
!1340 = !DILocation(line: 123, column: 32, scope: !1271)
!1341 = !{!1322, !1020, i64 40}
!1342 = !DILocation(line: 124, column: 27, scope: !1271)
!1343 = !DILocation(line: 124, column: 32, scope: !1271)
!1344 = !{!1322, !1020, i64 44}
!1345 = !DILocation(line: 125, column: 9, scope: !1346)
!1346 = distinct !DILexicalBlock(scope: !1271, file: !89, line: 125, column: 9)
!1347 = !DILocation(line: 125, column: 47, scope: !1346)
!1348 = !DILocation(line: 125, column: 9, scope: !1271)
!1349 = !DILocation(line: 126, column: 9, scope: !1350)
!1350 = distinct !DILexicalBlock(scope: !1346, file: !89, line: 125, column: 58)
!1351 = !DILocation(line: 127, column: 5, scope: !1350)
!1352 = !DILocation(line: 130, column: 23, scope: !1271)
!1353 = !DILocation(line: 130, column: 33, scope: !1271)
!1354 = !DILocation(line: 132, column: 23, scope: !1271)
!1355 = !DILocation(line: 132, column: 36, scope: !1271)
!1356 = !DILocation(line: 133, column: 23, scope: !1271)
!1357 = !DILocation(line: 133, column: 37, scope: !1271)
!1358 = !DILocation(line: 134, column: 23, scope: !1271)
!1359 = !DILocation(line: 134, column: 38, scope: !1271)
!1360 = !DILocation(line: 135, column: 23, scope: !1271)
!1361 = !DILocation(line: 135, column: 38, scope: !1271)
!1362 = !{!1038, !1020, i64 16}
!1363 = !DILocation(line: 136, column: 9, scope: !1364)
!1364 = distinct !DILexicalBlock(scope: !1271, file: !89, line: 136, column: 9)
!1365 = !DILocation(line: 136, column: 66, scope: !1364)
!1366 = !DILocation(line: 136, column: 9, scope: !1271)
!1367 = !DILocation(line: 137, column: 9, scope: !1368)
!1368 = distinct !DILexicalBlock(scope: !1364, file: !89, line: 136, column: 77)
!1369 = !DILocation(line: 138, column: 5, scope: !1368)
!1370 = !DILocation(line: 139, column: 1, scope: !1271)
!1371 = !DISubprogram(name: "Default_Handler", scope: !1053, file: !1053, line: 60, type: !1054, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1056)
!1372 = distinct !DISubprogram(name: "add", scope: !1373, file: !1373, line: 35, type: !1374, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !718, retainedNodes: !1376)
!1373 = !DIFile(filename: "src/utilities.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "b85bee0dcdfb15e8d13f14dead690039")
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!85, !85, !85}
!1376 = !{!1377, !1378}
!1377 = !DILocalVariable(name: "a", arg: 1, scope: !1372, file: !1373, line: 35, type: !85)
!1378 = !DILocalVariable(name: "b", arg: 2, scope: !1372, file: !1373, line: 35, type: !85)
!1379 = !DILocation(line: 0, scope: !1372)
!1380 = !DILocation(line: 36, column: 13, scope: !1372)
!1381 = !DILocation(line: 36, column: 5, scope: !1372)
!1382 = distinct !DISubprogram(name: "SystemInit", scope: !710, file: !710, line: 166, type: !1054, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !634, retainedNodes: !1056)
!1383 = !DILocation(line: 170, column: 16, scope: !1382)
!1384 = !{!1385, !1020, i64 136}
!1385 = !{!"", !1020, i64 0, !1020, i64 4, !1020, i64 8, !1020, i64 12, !1020, i64 16, !1020, i64 20, !1016, i64 24, !1020, i64 36, !1020, i64 40, !1020, i64 44, !1020, i64 48, !1020, i64 52, !1020, i64 56, !1020, i64 60, !1016, i64 64, !1020, i64 72, !1020, i64 76, !1016, i64 80, !1016, i64 96, !1016, i64 116, !1020, i64 136}
!1386 = !DILocation(line: 181, column: 13, scope: !1382)
!1387 = !{!1385, !1020, i64 8}
!1388 = !DILocation(line: 183, column: 1, scope: !1382)
!1389 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !710, file: !710, line: 221, type: !1054, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !634, retainedNodes: !1390)
!1390 = !{!1391, !1392, !1393, !1394, !1395}
!1391 = !DILocalVariable(name: "tmp", scope: !1389, file: !710, line: 223, type: !21)
!1392 = !DILocalVariable(name: "pllvco", scope: !1389, file: !710, line: 223, type: !21)
!1393 = !DILocalVariable(name: "pllp", scope: !1389, file: !710, line: 223, type: !21)
!1394 = !DILocalVariable(name: "pllsource", scope: !1389, file: !710, line: 223, type: !21)
!1395 = !DILocalVariable(name: "pllm", scope: !1389, file: !710, line: 223, type: !21)
!1396 = !DILocation(line: 0, scope: !1389)
!1397 = !DILocation(line: 226, column: 14, scope: !1389)
!1398 = !{!1034, !1020, i64 8}
!1399 = !DILocation(line: 226, column: 19, scope: !1389)
!1400 = !DILocation(line: 228, column: 3, scope: !1389)
!1401 = !DILocation(line: 235, column: 7, scope: !1402)
!1402 = distinct !DILexicalBlock(scope: !1389, file: !710, line: 229, column: 3)
!1403 = !DILocation(line: 241, column: 25, scope: !1402)
!1404 = !{!1034, !1020, i64 4}
!1405 = !DILocation(line: 242, column: 19, scope: !1402)
!1406 = !DILocation(line: 242, column: 27, scope: !1402)
!1407 = !DILocation(line: 244, column: 21, scope: !1408)
!1408 = distinct !DILexicalBlock(scope: !1402, file: !710, line: 244, column: 11)
!1409 = !DILocation(line: 0, scope: !1408)
!1410 = !DILocation(line: 255, column: 22, scope: !1402)
!1411 = !DILocation(line: 255, column: 62, scope: !1402)
!1412 = !DILocation(line: 256, column: 31, scope: !1402)
!1413 = !DILocation(line: 257, column: 7, scope: !1402)
!1414 = !DILocation(line: 0, scope: !1402)
!1415 = !DILocation(line: 264, column: 30, scope: !1389)
!1416 = !DILocation(line: 264, column: 52, scope: !1389)
!1417 = !DILocation(line: 264, column: 9, scope: !1389)
!1418 = !{!1016, !1016, i64 0}
!1419 = !DILocation(line: 266, column: 19, scope: !1389)
!1420 = !DILocation(line: 267, column: 1, scope: !1389)
!1421 = distinct !DISubprogram(name: "xTaskCreate", scope: !125, file: !125, line: 733, type: !1422, scopeLine: 739, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1432)
!1422 = !DISubroutineType(types: !1423)
!1423 = !{!176, !1424, !1427, !1428, !1429, !149, !1430}
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskFunction_t", file: !1425, line: 35, baseType: !1426)
!1425 = !DIFile(filename: "components/FreeRTOS-Kernel/include/projdefs.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "97308171ff91a1a07099a569c05b3eb7")
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !183)
!1428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !36)
!1429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !78)
!1430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1431)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!1432 = !{!1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441}
!1433 = !DILocalVariable(name: "pxTaskCode", arg: 1, scope: !1421, file: !125, line: 733, type: !1424)
!1434 = !DILocalVariable(name: "pcName", arg: 2, scope: !1421, file: !125, line: 734, type: !1427)
!1435 = !DILocalVariable(name: "usStackDepth", arg: 3, scope: !1421, file: !125, line: 735, type: !1428)
!1436 = !DILocalVariable(name: "pvParameters", arg: 4, scope: !1421, file: !125, line: 736, type: !1429)
!1437 = !DILocalVariable(name: "uxPriority", arg: 5, scope: !1421, file: !125, line: 737, type: !149)
!1438 = !DILocalVariable(name: "pxCreatedTask", arg: 6, scope: !1421, file: !125, line: 738, type: !1430)
!1439 = !DILocalVariable(name: "pxNewTCB", scope: !1421, file: !125, line: 740, type: !123)
!1440 = !DILocalVariable(name: "xReturn", scope: !1421, file: !125, line: 741, type: !176)
!1441 = !DILocalVariable(name: "pxStack", scope: !1442, file: !125, line: 770, type: !163)
!1442 = distinct !DILexicalBlock(scope: !1421, file: !125, line: 769, column: 3)
!1443 = !DILocation(line: 0, scope: !1421)
!1444 = !DILocation(line: 773, column: 32, scope: !1442)
!1445 = !DILocation(line: 773, column: 58, scope: !1442)
!1446 = !DILocation(line: 773, column: 14, scope: !1442)
!1447 = !DILocation(line: 0, scope: !1442)
!1448 = !DILocation(line: 775, column: 16, scope: !1449)
!1449 = distinct !DILexicalBlock(scope: !1442, file: !125, line: 775, column: 8)
!1450 = !DILocation(line: 775, column: 8, scope: !1442)
!1451 = !DILocation(line: 778, column: 28, scope: !1452)
!1452 = distinct !DILexicalBlock(scope: !1449, file: !125, line: 776, column: 4)
!1453 = !DILocation(line: 780, column: 18, scope: !1454)
!1454 = distinct !DILexicalBlock(scope: !1452, file: !125, line: 780, column: 9)
!1455 = !DILocation(line: 780, column: 9, scope: !1452)
!1456 = !DILocation(line: 789, column: 6, scope: !1457)
!1457 = distinct !DILexicalBlock(scope: !1454, file: !125, line: 786, column: 5)
!1458 = !DILocation(line: 778, column: 16, scope: !1452)
!1459 = !DILocation(line: 783, column: 16, scope: !1460)
!1460 = distinct !DILexicalBlock(scope: !1454, file: !125, line: 781, column: 5)
!1461 = !DILocation(line: 783, column: 24, scope: !1460)
!1462 = !{!1463, !1015, i64 48}
!1463 = !{!"tskTaskControlBlock", !1015, i64 0, !1464, i64 4, !1464, i64 24, !1023, i64 44, !1015, i64 48, !1016, i64 52, !1023, i64 64, !1023, i64 68, !1023, i64 72, !1023, i64 76, !1020, i64 80, !1016, i64 84}
!1464 = !{!"xLIST_ITEM", !1020, i64 0, !1015, i64 4, !1015, i64 8, !1015, i64 12, !1015, i64 16}
!1465 = !DILocation(line: 809, column: 4, scope: !1466)
!1466 = distinct !DILexicalBlock(scope: !1467, file: !125, line: 800, column: 3)
!1467 = distinct !DILexicalBlock(scope: !1421, file: !125, line: 799, column: 7)
!1468 = !DILocation(line: 810, column: 4, scope: !1466)
!1469 = !DILocation(line: 812, column: 3, scope: !1466)
!1470 = !DILocation(line: 0, scope: !1467)
!1471 = !DILocation(line: 818, column: 3, scope: !1421)
!1472 = distinct !DISubprogram(name: "prvInitialiseNewTask", scope: !125, file: !125, line: 824, type: !1473, scopeLine: 832, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1485)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{null, !1424, !1427, !1475, !1429, !149, !1430, !123, !1476}
!1475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!1476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1477)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1479)
!1479 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemoryRegion_t", file: !105, line: 116, baseType: !1480)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMEMORY_REGION", file: !105, line: 111, size: 96, elements: !1481)
!1481 = !{!1482, !1483, !1484}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "pvBaseAddress", scope: !1480, file: !105, line: 113, baseType: !78, size: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "ulLengthInBytes", scope: !1480, file: !105, line: 114, baseType: !21, size: 32, offset: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "ulParameters", scope: !1480, file: !105, line: 115, baseType: !21, size: 32, offset: 64)
!1485 = !{!1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495}
!1486 = !DILocalVariable(name: "pxTaskCode", arg: 1, scope: !1472, file: !125, line: 824, type: !1424)
!1487 = !DILocalVariable(name: "pcName", arg: 2, scope: !1472, file: !125, line: 825, type: !1427)
!1488 = !DILocalVariable(name: "ulStackDepth", arg: 3, scope: !1472, file: !125, line: 826, type: !1475)
!1489 = !DILocalVariable(name: "pvParameters", arg: 4, scope: !1472, file: !125, line: 827, type: !1429)
!1490 = !DILocalVariable(name: "uxPriority", arg: 5, scope: !1472, file: !125, line: 828, type: !149)
!1491 = !DILocalVariable(name: "pxCreatedTask", arg: 6, scope: !1472, file: !125, line: 829, type: !1430)
!1492 = !DILocalVariable(name: "pxNewTCB", arg: 7, scope: !1472, file: !125, line: 830, type: !123)
!1493 = !DILocalVariable(name: "xRegions", arg: 8, scope: !1472, file: !125, line: 831, type: !1476)
!1494 = !DILocalVariable(name: "pxTopOfStack", scope: !1472, file: !125, line: 833, type: !163)
!1495 = !DILocalVariable(name: "x", scope: !1472, file: !125, line: 834, type: !149)
!1496 = !DILocation(line: 0, scope: !1472)
!1497 = !DILocation(line: 854, column: 30, scope: !1498)
!1498 = distinct !DILexicalBlock(scope: !1472, file: !125, line: 852, column: 2)
!1499 = !DILocation(line: 854, column: 91, scope: !1498)
!1500 = !DILocation(line: 854, column: 12, scope: !1498)
!1501 = !DILocation(line: 864, column: 31, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1472, file: !125, line: 863, column: 2)
!1503 = !DILocation(line: 864, column: 53, scope: !1502)
!1504 = !DILocation(line: 864, column: 21, scope: !1502)
!1505 = !DILocation(line: 865, column: 40, scope: !1502)
!1506 = !DILocation(line: 865, column: 81, scope: !1502)
!1507 = !DILocation(line: 865, column: 18, scope: !1502)
!1508 = !DILocation(line: 892, column: 13, scope: !1509)
!1509 = distinct !DILexicalBlock(scope: !1472, file: !125, line: 892, column: 6)
!1510 = !DILocation(line: 892, column: 6, scope: !1472)
!1511 = !DILocation(line: 896, column: 32, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !1513, file: !125, line: 895, column: 3)
!1513 = distinct !DILexicalBlock(scope: !1514, file: !125, line: 894, column: 3)
!1514 = distinct !DILexicalBlock(scope: !1515, file: !125, line: 894, column: 3)
!1515 = distinct !DILexicalBlock(scope: !1509, file: !125, line: 893, column: 2)
!1516 = !DILocation(line: 896, column: 4, scope: !1512)
!1517 = !DILocation(line: 896, column: 30, scope: !1512)
!1518 = !DILocation(line: 901, column: 8, scope: !1519)
!1519 = distinct !DILexicalBlock(scope: !1512, file: !125, line: 901, column: 8)
!1520 = !DILocation(line: 901, column: 20, scope: !1519)
!1521 = !DILocation(line: 901, column: 8, scope: !1512)
!1522 = distinct !{!1522, !1523, !1524, !1525}
!1523 = !DILocation(line: 894, column: 3, scope: !1514)
!1524 = !DILocation(line: 909, column: 3, scope: !1514)
!1525 = !{!"llvm.loop.mustprogress"}
!1526 = !DILocation(line: 913, column: 3, scope: !1515)
!1527 = !DILocation(line: 913, column: 55, scope: !1515)
!1528 = !DILocation(line: 914, column: 2, scope: !1515)
!1529 = !DILocation(line: 919, column: 3, scope: !1530)
!1530 = distinct !DILexicalBlock(scope: !1509, file: !125, line: 916, column: 2)
!1531 = !DILocation(line: 919, column: 29, scope: !1530)
!1532 = !DILocation(line: 924, column: 6, scope: !1472)
!1533 = !DILocation(line: 933, column: 12, scope: !1472)
!1534 = !DILocation(line: 933, column: 23, scope: !1472)
!1535 = !{!1463, !1023, i64 44}
!1536 = !DILocation(line: 936, column: 13, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !1472, file: !125, line: 935, column: 2)
!1538 = !DILocation(line: 936, column: 28, scope: !1537)
!1539 = !{!1463, !1023, i64 72}
!1540 = !DILocation(line: 937, column: 13, scope: !1537)
!1541 = !DILocation(line: 937, column: 27, scope: !1537)
!1542 = !{!1463, !1023, i64 76}
!1543 = !DILocation(line: 941, column: 36, scope: !1472)
!1544 = !DILocation(line: 941, column: 2, scope: !1472)
!1545 = !DILocation(line: 942, column: 36, scope: !1472)
!1546 = !DILocation(line: 942, column: 2, scope: !1472)
!1547 = !DILocation(line: 946, column: 2, scope: !1472)
!1548 = !{!1463, !1015, i64 16}
!1549 = !DILocation(line: 949, column: 2, scope: !1472)
!1550 = !{!1463, !1020, i64 24}
!1551 = !DILocation(line: 950, column: 2, scope: !1472)
!1552 = !{!1463, !1015, i64 36}
!1553 = !DILocation(line: 992, column: 13, scope: !1554)
!1554 = distinct !DILexicalBlock(scope: !1472, file: !125, line: 991, column: 2)
!1555 = !DILocation(line: 992, column: 29, scope: !1554)
!1556 = !{!1463, !1020, i64 80}
!1557 = !DILocation(line: 993, column: 13, scope: !1554)
!1558 = !DILocation(line: 993, column: 27, scope: !1554)
!1559 = !{!1463, !1016, i64 84}
!1560 = !DILocation(line: 1058, column: 29, scope: !1561)
!1561 = distinct !DILexicalBlock(scope: !1562, file: !125, line: 1057, column: 3)
!1562 = distinct !DILexicalBlock(scope: !1472, file: !125, line: 1040, column: 2)
!1563 = !DILocation(line: 1058, column: 14, scope: !1561)
!1564 = !DILocation(line: 1058, column: 27, scope: !1561)
!1565 = !{!1463, !1015, i64 0}
!1566 = !DILocation(line: 1064, column: 20, scope: !1567)
!1567 = distinct !DILexicalBlock(scope: !1472, file: !125, line: 1064, column: 6)
!1568 = !DILocation(line: 1064, column: 6, scope: !1472)
!1569 = !DILocation(line: 1068, column: 18, scope: !1570)
!1570 = distinct !DILexicalBlock(scope: !1567, file: !125, line: 1065, column: 2)
!1571 = !DILocation(line: 1069, column: 2, scope: !1570)
!1572 = !DILocation(line: 1074, column: 1, scope: !1472)
!1573 = distinct !DISubprogram(name: "prvAddNewTaskToReadyList", scope: !125, file: !125, line: 1077, type: !1574, scopeLine: 1078, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1576)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{null, !123}
!1576 = !{!1577}
!1577 = !DILocalVariable(name: "pxNewTCB", arg: 1, scope: !1573, file: !125, line: 1077, type: !123)
!1578 = !DILocation(line: 0, scope: !1573)
!1579 = !DILocation(line: 1081, column: 2, scope: !1573)
!1580 = !DILocation(line: 1083, column: 25, scope: !1581)
!1581 = distinct !DILexicalBlock(scope: !1573, file: !125, line: 1082, column: 2)
!1582 = !{!1023, !1023, i64 0}
!1583 = !DILocation(line: 1084, column: 7, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1581, file: !125, line: 1084, column: 7)
!1585 = !DILocation(line: 1084, column: 20, scope: !1584)
!1586 = !DILocation(line: 1084, column: 7, scope: !1581)
!1587 = !DILocation(line: 1088, column: 17, scope: !1588)
!1588 = distinct !DILexicalBlock(scope: !1584, file: !125, line: 1085, column: 3)
!1589 = !DILocation(line: 1090, column: 8, scope: !1590)
!1590 = distinct !DILexicalBlock(scope: !1588, file: !125, line: 1090, column: 8)
!1591 = !DILocation(line: 1090, column: 31, scope: !1590)
!1592 = !DILocation(line: 1090, column: 8, scope: !1588)
!1593 = !DILocation(line: 1095, column: 5, scope: !1594)
!1594 = distinct !DILexicalBlock(scope: !1590, file: !125, line: 1091, column: 4)
!1595 = !DILocation(line: 1096, column: 4, scope: !1594)
!1596 = !DILocation(line: 1107, column: 8, scope: !1597)
!1597 = distinct !DILexicalBlock(scope: !1598, file: !125, line: 1107, column: 8)
!1598 = distinct !DILexicalBlock(scope: !1584, file: !125, line: 1103, column: 3)
!1599 = !DILocation(line: 1107, column: 26, scope: !1597)
!1600 = !DILocation(line: 1107, column: 8, scope: !1598)
!1601 = !DILocation(line: 1109, column: 9, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !1603, file: !125, line: 1109, column: 9)
!1603 = distinct !DILexicalBlock(scope: !1597, file: !125, line: 1108, column: 4)
!1604 = !DILocation(line: 1109, column: 23, scope: !1602)
!1605 = !DILocation(line: 1109, column: 47, scope: !1602)
!1606 = !DILocation(line: 1109, column: 34, scope: !1602)
!1607 = !DILocation(line: 1109, column: 9, scope: !1603)
!1608 = !DILocation(line: 1111, column: 19, scope: !1609)
!1609 = distinct !DILexicalBlock(scope: !1602, file: !125, line: 1110, column: 5)
!1610 = !DILocation(line: 1112, column: 5, scope: !1609)
!1611 = !DILocation(line: 1124, column: 15, scope: !1581)
!1612 = !DILocation(line: 1129, column: 14, scope: !1613)
!1613 = distinct !DILexicalBlock(scope: !1581, file: !125, line: 1127, column: 3)
!1614 = !DILocation(line: 1129, column: 26, scope: !1613)
!1615 = !{!1463, !1023, i64 64}
!1616 = !DILocation(line: 1134, column: 3, scope: !1581)
!1617 = !DILocation(line: 1138, column: 2, scope: !1573)
!1618 = !DILocation(line: 1140, column: 6, scope: !1619)
!1619 = distinct !DILexicalBlock(scope: !1573, file: !125, line: 1140, column: 6)
!1620 = !DILocation(line: 1140, column: 24, scope: !1619)
!1621 = !DILocation(line: 1140, column: 6, scope: !1573)
!1622 = !DILocation(line: 1144, column: 7, scope: !1623)
!1623 = distinct !DILexicalBlock(scope: !1624, file: !125, line: 1144, column: 7)
!1624 = distinct !DILexicalBlock(scope: !1619, file: !125, line: 1141, column: 2)
!1625 = !DILocation(line: 1144, column: 21, scope: !1623)
!1626 = !DILocation(line: 1144, column: 44, scope: !1623)
!1627 = !DILocation(line: 1144, column: 32, scope: !1623)
!1628 = !DILocation(line: 1144, column: 7, scope: !1624)
!1629 = !DILocation(line: 1146, column: 4, scope: !1630)
!1630 = distinct !DILexicalBlock(scope: !1631, file: !125, line: 1146, column: 4)
!1631 = distinct !DILexicalBlock(scope: !1623, file: !125, line: 1145, column: 3)
!1632 = !{i64 2148205911}
!1633 = !{i64 2148205962}
!1634 = !DILocation(line: 1147, column: 3, scope: !1631)
!1635 = !DILocation(line: 1157, column: 1, scope: !1573)
!1636 = distinct !DISubprogram(name: "prvInitialiseTaskLists", scope: !125, file: !125, line: 3607, type: !1054, scopeLine: 3608, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1637)
!1637 = !{!1638}
!1638 = !DILocalVariable(name: "uxPriority", scope: !1636, file: !125, line: 3609, type: !149)
!1639 = !DILocation(line: 0, scope: !1636)
!1640 = !DILocation(line: 3611, column: 2, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !1636, file: !125, line: 3611, column: 2)
!1642 = !DILocation(line: 3613, column: 23, scope: !1643)
!1643 = distinct !DILexicalBlock(scope: !1644, file: !125, line: 3612, column: 2)
!1644 = distinct !DILexicalBlock(scope: !1641, file: !125, line: 3611, column: 2)
!1645 = !DILocation(line: 3613, column: 3, scope: !1643)
!1646 = !DILocation(line: 3611, column: 101, scope: !1644)
!1647 = !DILocation(line: 3611, column: 51, scope: !1644)
!1648 = distinct !{!1648, !1640, !1649, !1525}
!1649 = !DILocation(line: 3614, column: 2, scope: !1641)
!1650 = !DILocation(line: 3616, column: 2, scope: !1636)
!1651 = !DILocation(line: 3617, column: 2, scope: !1636)
!1652 = !DILocation(line: 3618, column: 2, scope: !1636)
!1653 = !DILocation(line: 3622, column: 3, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !1636, file: !125, line: 3621, column: 2)
!1655 = !DILocation(line: 3628, column: 3, scope: !1656)
!1656 = distinct !DILexicalBlock(scope: !1636, file: !125, line: 3627, column: 2)
!1657 = !DILocation(line: 3634, column: 20, scope: !1636)
!1658 = !DILocation(line: 3635, column: 28, scope: !1636)
!1659 = !DILocation(line: 3636, column: 1, scope: !1636)
!1660 = !DISubprogram(name: "memset", scope: !1661, file: !1661, line: 33, type: !1662, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1056)
!1661 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/string.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "00b3471f69c722645cab66876c511e27")
!1662 = !DISubroutineType(types: !1663)
!1663 = !{!78, !78, !186, !121}
!1664 = distinct !DISubprogram(name: "vTaskDelete", scope: !125, file: !125, line: 1162, type: !1665, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1667)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{null, !181}
!1667 = !{!1668, !1669}
!1668 = !DILocalVariable(name: "xTaskToDelete", arg: 1, scope: !1664, file: !125, line: 1162, type: !181)
!1669 = !DILocalVariable(name: "pxTCB", scope: !1664, file: !125, line: 1164, type: !123)
!1670 = !DILocation(line: 0, scope: !1664)
!1671 = !DILocation(line: 1166, column: 3, scope: !1664)
!1672 = !DILocation(line: 1170, column: 12, scope: !1673)
!1673 = distinct !DILexicalBlock(scope: !1664, file: !125, line: 1167, column: 3)
!1674 = !DILocation(line: 1173, column: 32, scope: !1675)
!1675 = distinct !DILexicalBlock(scope: !1673, file: !125, line: 1173, column: 8)
!1676 = !DILocation(line: 1173, column: 8, scope: !1675)
!1677 = !DILocation(line: 1173, column: 51, scope: !1675)
!1678 = !DILocation(line: 1173, column: 8, scope: !1673)
!1679 = !DILocation(line: 1175, column: 5, scope: !1680)
!1680 = distinct !DILexicalBlock(scope: !1681, file: !125, line: 1175, column: 5)
!1681 = distinct !DILexicalBlock(scope: !1682, file: !125, line: 1175, column: 5)
!1682 = distinct !DILexicalBlock(scope: !1675, file: !125, line: 1174, column: 4)
!1683 = !{!1684, !1023, i64 0}
!1684 = !{!"xLIST", !1023, i64 0, !1015, i64 4, !1685, i64 8}
!1685 = !{!"xMINI_LIST_ITEM", !1020, i64 0, !1015, i64 4, !1015, i64 8}
!1686 = !DILocation(line: 1175, column: 5, scope: !1681)
!1687 = !DILocation(line: 1175, column: 5, scope: !1688)
!1688 = distinct !DILexicalBlock(scope: !1680, file: !125, line: 1175, column: 5)
!1689 = !DILocation(line: 1183, column: 8, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !1673, file: !125, line: 1183, column: 8)
!1691 = !{!1463, !1015, i64 40}
!1692 = !DILocation(line: 1183, column: 62, scope: !1690)
!1693 = !DILocation(line: 1183, column: 8, scope: !1673)
!1694 = !DILocation(line: 1185, column: 14, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1690, file: !125, line: 1184, column: 4)
!1696 = !DILocation(line: 1186, column: 4, scope: !1695)
!1697 = !DILocation(line: 1196, column: 16, scope: !1673)
!1698 = !DILocation(line: 1198, column: 17, scope: !1699)
!1699 = distinct !DILexicalBlock(scope: !1673, file: !125, line: 1198, column: 8)
!1700 = !DILocation(line: 1198, column: 14, scope: !1699)
!1701 = !DILocation(line: 1198, column: 8, scope: !1673)
!1702 = !DILocation(line: 1205, column: 5, scope: !1703)
!1703 = distinct !DILexicalBlock(scope: !1699, file: !125, line: 1199, column: 4)
!1704 = !DILocation(line: 1210, column: 5, scope: !1703)
!1705 = !DILocation(line: 1222, column: 4, scope: !1703)
!1706 = !DILocation(line: 1225, column: 5, scope: !1707)
!1707 = distinct !DILexicalBlock(scope: !1699, file: !125, line: 1224, column: 4)
!1708 = !DILocation(line: 1227, column: 5, scope: !1707)
!1709 = !DILocation(line: 1231, column: 5, scope: !1707)
!1710 = !DILocation(line: 1234, column: 3, scope: !1664)
!1711 = !DILocation(line: 1238, column: 7, scope: !1712)
!1712 = distinct !DILexicalBlock(scope: !1664, file: !125, line: 1238, column: 7)
!1713 = !DILocation(line: 1238, column: 25, scope: !1712)
!1714 = !DILocation(line: 1238, column: 7, scope: !1664)
!1715 = !DILocation(line: 1240, column: 17, scope: !1716)
!1716 = distinct !DILexicalBlock(scope: !1717, file: !125, line: 1240, column: 8)
!1717 = distinct !DILexicalBlock(scope: !1712, file: !125, line: 1239, column: 3)
!1718 = !DILocation(line: 1240, column: 14, scope: !1716)
!1719 = !DILocation(line: 1240, column: 8, scope: !1717)
!1720 = !DILocation(line: 1242, column: 5, scope: !1721)
!1721 = distinct !DILexicalBlock(scope: !1722, file: !125, line: 1242, column: 5)
!1722 = distinct !DILexicalBlock(scope: !1716, file: !125, line: 1241, column: 4)
!1723 = !DILocation(line: 1242, column: 5, scope: !1722)
!1724 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !1728)
!1725 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !40, file: !40, line: 191, type: !1054, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1726)
!1726 = !{!1727}
!1727 = !DILocalVariable(name: "ulNewBASEPRI", scope: !1725, file: !40, line: 193, type: !21)
!1728 = distinct !DILocation(line: 1242, column: 5, scope: !1729)
!1729 = distinct !DILexicalBlock(scope: !1721, file: !125, line: 1242, column: 5)
!1730 = !{i64 514398, i64 514432, i64 514469, i64 514497}
!1731 = !DILocation(line: 0, scope: !1725, inlinedAt: !1728)
!1732 = !DILocation(line: 1242, column: 5, scope: !1729)
!1733 = !DILocation(line: 1242, column: 5, scope: !1734)
!1734 = distinct !DILexicalBlock(scope: !1735, file: !125, line: 1242, column: 5)
!1735 = distinct !DILexicalBlock(scope: !1729, file: !125, line: 1242, column: 5)
!1736 = distinct !{!1736, !1737, !1737}
!1737 = !DILocation(line: 1242, column: 5, scope: !1735)
!1738 = !DILocation(line: 1243, column: 5, scope: !1739)
!1739 = distinct !DILexicalBlock(scope: !1722, file: !125, line: 1243, column: 5)
!1740 = !{i64 2148207289}
!1741 = !{i64 2148207340}
!1742 = !DILocation(line: 1244, column: 4, scope: !1722)
!1743 = !DILocation(line: 1250, column: 2, scope: !1664)
!1744 = distinct !DISubprogram(name: "prvDeleteTCB", scope: !125, file: !125, line: 3887, type: !1574, scopeLine: 3888, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1745)
!1745 = !{!1746}
!1746 = !DILocalVariable(name: "pxTCB", arg: 1, scope: !1744, file: !125, line: 3887, type: !123)
!1747 = !DILocation(line: 0, scope: !1744)
!1748 = !DILocation(line: 3908, column: 22, scope: !1749)
!1749 = distinct !DILexicalBlock(scope: !1744, file: !125, line: 3905, column: 3)
!1750 = !DILocation(line: 3908, column: 4, scope: !1749)
!1751 = !DILocation(line: 3909, column: 15, scope: !1749)
!1752 = !DILocation(line: 3909, column: 4, scope: !1749)
!1753 = !DILocation(line: 3938, column: 2, scope: !1744)
!1754 = distinct !DISubprogram(name: "prvResetNextTaskUnblockTime", scope: !125, file: !125, line: 3943, type: !1054, scopeLine: 3944, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1755)
!1755 = !{!1756}
!1756 = !DILocalVariable(name: "pxTCB", scope: !1754, file: !125, line: 3945, type: !123)
!1757 = !DILocation(line: 3947, column: 6, scope: !1758)
!1758 = distinct !DILexicalBlock(scope: !1754, file: !125, line: 3947, column: 6)
!1759 = !DILocation(line: 3947, column: 6, scope: !1754)
!1760 = !DILocation(line: 3961, column: 15, scope: !1761)
!1761 = distinct !DILexicalBlock(scope: !1758, file: !125, line: 3956, column: 2)
!1762 = !{!1684, !1015, i64 12}
!1763 = !{!1464, !1015, i64 12}
!1764 = !DILocation(line: 0, scope: !1754)
!1765 = !DILocation(line: 3962, column: 26, scope: !1761)
!1766 = !{!1463, !1020, i64 4}
!1767 = !DILocation(line: 0, scope: !1758)
!1768 = !DILocation(line: 3964, column: 1, scope: !1754)
!1769 = distinct !DISubprogram(name: "vTaskDelayUntil", scope: !125, file: !125, line: 1257, type: !1770, scopeLine: 1258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1775)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{null, !1772, !1774}
!1772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1773)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !39)
!1775 = !{!1776, !1777, !1778, !1779, !1780, !1781}
!1776 = !DILocalVariable(name: "pxPreviousWakeTime", arg: 1, scope: !1769, file: !125, line: 1257, type: !1772)
!1777 = !DILocalVariable(name: "xTimeIncrement", arg: 2, scope: !1769, file: !125, line: 1257, type: !1774)
!1778 = !DILocalVariable(name: "xTimeToWake", scope: !1769, file: !125, line: 1259, type: !39)
!1779 = !DILocalVariable(name: "xAlreadyYielded", scope: !1769, file: !125, line: 1260, type: !176)
!1780 = !DILocalVariable(name: "xShouldDelay", scope: !1769, file: !125, line: 1260, type: !176)
!1781 = !DILocalVariable(name: "xConstTickCount", scope: !1782, file: !125, line: 1270, type: !1774)
!1782 = distinct !DILexicalBlock(scope: !1769, file: !125, line: 1267, column: 3)
!1783 = !DILocation(line: 0, scope: !1769)
!1784 = !DILocation(line: 1262, column: 3, scope: !1785)
!1785 = distinct !DILexicalBlock(scope: !1769, file: !125, line: 1262, column: 3)
!1786 = !DILocation(line: 1262, column: 3, scope: !1769)
!1787 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !1788)
!1788 = distinct !DILocation(line: 1262, column: 3, scope: !1789)
!1789 = distinct !DILexicalBlock(scope: !1785, file: !125, line: 1262, column: 3)
!1790 = !DILocation(line: 0, scope: !1725, inlinedAt: !1788)
!1791 = !DILocation(line: 1262, column: 3, scope: !1789)
!1792 = !DILocation(line: 1262, column: 3, scope: !1793)
!1793 = distinct !DILexicalBlock(scope: !1794, file: !125, line: 1262, column: 3)
!1794 = distinct !DILexicalBlock(scope: !1789, file: !125, line: 1262, column: 3)
!1795 = distinct !{!1795, !1796, !1796}
!1796 = !DILocation(line: 1262, column: 3, scope: !1794)
!1797 = !DILocation(line: 1263, column: 3, scope: !1798)
!1798 = distinct !DILexicalBlock(scope: !1769, file: !125, line: 1263, column: 3)
!1799 = !DILocation(line: 1263, column: 3, scope: !1769)
!1800 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !1801)
!1801 = distinct !DILocation(line: 1263, column: 3, scope: !1802)
!1802 = distinct !DILexicalBlock(scope: !1798, file: !125, line: 1263, column: 3)
!1803 = !DILocation(line: 0, scope: !1725, inlinedAt: !1801)
!1804 = !DILocation(line: 1263, column: 3, scope: !1802)
!1805 = !DILocation(line: 1263, column: 3, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1807, file: !125, line: 1263, column: 3)
!1807 = distinct !DILexicalBlock(scope: !1802, file: !125, line: 1263, column: 3)
!1808 = distinct !{!1808, !1809, !1809}
!1809 = !DILocation(line: 1263, column: 3, scope: !1807)
!1810 = !DILocation(line: 1264, column: 3, scope: !1811)
!1811 = distinct !DILexicalBlock(scope: !1769, file: !125, line: 1264, column: 3)
!1812 = !DILocation(line: 1264, column: 3, scope: !1769)
!1813 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !1814)
!1814 = distinct !DILocation(line: 1264, column: 3, scope: !1815)
!1815 = distinct !DILexicalBlock(scope: !1811, file: !125, line: 1264, column: 3)
!1816 = !DILocation(line: 0, scope: !1725, inlinedAt: !1814)
!1817 = !DILocation(line: 1264, column: 3, scope: !1815)
!1818 = !DILocation(line: 1264, column: 3, scope: !1819)
!1819 = distinct !DILexicalBlock(scope: !1820, file: !125, line: 1264, column: 3)
!1820 = distinct !DILexicalBlock(scope: !1815, file: !125, line: 1264, column: 3)
!1821 = distinct !{!1821, !1822, !1822}
!1822 = !DILocation(line: 1264, column: 3, scope: !1820)
!1823 = !DILocation(line: 1266, column: 3, scope: !1769)
!1824 = !DILocation(line: 1270, column: 39, scope: !1782)
!1825 = !DILocation(line: 0, scope: !1782)
!1826 = !DILocation(line: 1273, column: 18, scope: !1782)
!1827 = !DILocation(line: 1273, column: 38, scope: !1782)
!1828 = !DILocation(line: 1275, column: 24, scope: !1829)
!1829 = distinct !DILexicalBlock(scope: !1782, file: !125, line: 1275, column: 8)
!1830 = !DILocation(line: 0, scope: !1829)
!1831 = !DILocation(line: 1275, column: 8, scope: !1782)
!1832 = !DILocation(line: 1282, column: 47, scope: !1833)
!1833 = distinct !DILexicalBlock(scope: !1834, file: !125, line: 1282, column: 9)
!1834 = distinct !DILexicalBlock(scope: !1829, file: !125, line: 1276, column: 4)
!1835 = !DILocation(line: 1296, column: 47, scope: !1836)
!1836 = distinct !DILexicalBlock(scope: !1837, file: !125, line: 1296, column: 9)
!1837 = distinct !DILexicalBlock(scope: !1829, file: !125, line: 1292, column: 4)
!1838 = !DILocation(line: 1307, column: 24, scope: !1782)
!1839 = !DILocation(line: 1309, column: 8, scope: !1782)
!1840 = !DILocation(line: 1315, column: 49, scope: !1841)
!1841 = distinct !DILexicalBlock(scope: !1842, file: !125, line: 1310, column: 4)
!1842 = distinct !DILexicalBlock(scope: !1782, file: !125, line: 1309, column: 8)
!1843 = !DILocation(line: 1315, column: 5, scope: !1841)
!1844 = !DILocation(line: 1316, column: 4, scope: !1841)
!1845 = !DILocation(line: 1322, column: 21, scope: !1769)
!1846 = !DILocation(line: 1326, column: 23, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1769, file: !125, line: 1326, column: 7)
!1848 = !DILocation(line: 1326, column: 7, scope: !1769)
!1849 = !DILocation(line: 1328, column: 4, scope: !1850)
!1850 = distinct !DILexicalBlock(scope: !1851, file: !125, line: 1328, column: 4)
!1851 = distinct !DILexicalBlock(scope: !1847, file: !125, line: 1327, column: 3)
!1852 = !{i64 2148208272}
!1853 = !{i64 2148208323}
!1854 = !DILocation(line: 1329, column: 3, scope: !1851)
!1855 = !DILocation(line: 1334, column: 2, scope: !1769)
!1856 = distinct !DISubprogram(name: "vTaskSuspendAll", scope: !125, file: !125, line: 2110, type: !1054, scopeLine: 2111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1056)
!1857 = !DILocation(line: 2123, column: 2, scope: !1856)
!1858 = !DILocation(line: 2127, column: 2, scope: !1856)
!1859 = !{i64 2148216463}
!1860 = !DILocation(line: 2128, column: 1, scope: !1856)
!1861 = distinct !DISubprogram(name: "prvAddCurrentTaskToDelayedList", scope: !125, file: !125, line: 5177, type: !1862, scopeLine: 5178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1865)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{null, !39, !1864}
!1864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!1865 = !{!1866, !1867, !1868, !1869}
!1866 = !DILocalVariable(name: "xTicksToWait", arg: 1, scope: !1861, file: !125, line: 5177, type: !39)
!1867 = !DILocalVariable(name: "xCanBlockIndefinitely", arg: 2, scope: !1861, file: !125, line: 5177, type: !1864)
!1868 = !DILocalVariable(name: "xTimeToWake", scope: !1861, file: !125, line: 5179, type: !39)
!1869 = !DILocalVariable(name: "xConstTickCount", scope: !1861, file: !125, line: 5180, type: !1774)
!1870 = !DILocation(line: 0, scope: !1861)
!1871 = !DILocation(line: 5180, column: 36, scope: !1861)
!1872 = !DILocation(line: 5193, column: 23, scope: !1873)
!1873 = distinct !DILexicalBlock(scope: !1861, file: !125, line: 5193, column: 6)
!1874 = !DILocation(line: 5193, column: 37, scope: !1873)
!1875 = !DILocation(line: 5193, column: 6, scope: !1873)
!1876 = !DILocation(line: 5193, column: 56, scope: !1873)
!1877 = !DILocation(line: 5193, column: 6, scope: !1861)
!1878 = !DILocation(line: 5197, column: 3, scope: !1879)
!1879 = distinct !DILexicalBlock(scope: !1873, file: !125, line: 5194, column: 2)
!1880 = !DILocation(line: 5198, column: 2, scope: !1879)
!1881 = !DILocation(line: 5206, column: 22, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1883, file: !125, line: 5206, column: 7)
!1883 = distinct !DILexicalBlock(scope: !1861, file: !125, line: 5205, column: 2)
!1884 = !DILocation(line: 5206, column: 41, scope: !1882)
!1885 = !DILocation(line: 5211, column: 44, scope: !1886)
!1886 = distinct !DILexicalBlock(scope: !1882, file: !125, line: 5207, column: 3)
!1887 = !DILocation(line: 5211, column: 58, scope: !1886)
!1888 = !DILocation(line: 5211, column: 4, scope: !1886)
!1889 = !DILocation(line: 5212, column: 3, scope: !1886)
!1890 = !DILocation(line: 5218, column: 34, scope: !1891)
!1891 = distinct !DILexicalBlock(scope: !1882, file: !125, line: 5214, column: 3)
!1892 = !DILocation(line: 5221, column: 4, scope: !1891)
!1893 = !DILocation(line: 5223, column: 20, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1891, file: !125, line: 5223, column: 8)
!1895 = !DILocation(line: 5223, column: 8, scope: !1891)
!1896 = !DILocation(line: 5227, column: 18, scope: !1897)
!1897 = distinct !DILexicalBlock(scope: !1894, file: !125, line: 5224, column: 4)
!1898 = !DILocation(line: 5227, column: 48, scope: !1897)
!1899 = !DILocation(line: 5227, column: 62, scope: !1897)
!1900 = !DILocation(line: 5227, column: 5, scope: !1897)
!1901 = !DILocation(line: 5228, column: 4, scope: !1897)
!1902 = !DILocation(line: 5233, column: 18, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1894, file: !125, line: 5230, column: 4)
!1904 = !DILocation(line: 5233, column: 40, scope: !1903)
!1905 = !DILocation(line: 5233, column: 54, scope: !1903)
!1906 = !DILocation(line: 5233, column: 5, scope: !1903)
!1907 = !DILocation(line: 5238, column: 23, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !1903, file: !125, line: 5238, column: 9)
!1909 = !DILocation(line: 5238, column: 21, scope: !1908)
!1910 = !DILocation(line: 5238, column: 9, scope: !1903)
!1911 = !DILocation(line: 5240, column: 27, scope: !1912)
!1912 = distinct !DILexicalBlock(scope: !1908, file: !125, line: 5239, column: 5)
!1913 = !DILocation(line: 5241, column: 5, scope: !1912)
!1914 = !DILocation(line: 5286, column: 1, scope: !1861)
!1915 = distinct !DISubprogram(name: "xTaskResumeAll", scope: !125, file: !125, line: 2194, type: !1916, scopeLine: 2195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1918)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!176}
!1918 = !{!1919, !1920, !1921}
!1919 = !DILocalVariable(name: "pxTCB", scope: !1915, file: !125, line: 2196, type: !123)
!1920 = !DILocalVariable(name: "xAlreadyYielded", scope: !1915, file: !125, line: 2197, type: !176)
!1921 = !DILocalVariable(name: "xPendedCounts", scope: !1922, file: !125, line: 2253, type: !39)
!1922 = distinct !DILexicalBlock(scope: !1923, file: !125, line: 2252, column: 5)
!1923 = distinct !DILexicalBlock(scope: !1924, file: !125, line: 2215, column: 4)
!1924 = distinct !DILexicalBlock(scope: !1925, file: !125, line: 2214, column: 8)
!1925 = distinct !DILexicalBlock(scope: !1926, file: !125, line: 2213, column: 3)
!1926 = distinct !DILexicalBlock(scope: !1927, file: !125, line: 2212, column: 7)
!1927 = distinct !DILexicalBlock(scope: !1915, file: !125, line: 2209, column: 2)
!1928 = !DILocation(line: 0, scope: !1915)
!1929 = !DILocation(line: 2201, column: 2, scope: !1930)
!1930 = distinct !DILexicalBlock(scope: !1915, file: !125, line: 2201, column: 2)
!1931 = !DILocation(line: 2201, column: 2, scope: !1915)
!1932 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !1933)
!1933 = distinct !DILocation(line: 2201, column: 2, scope: !1934)
!1934 = distinct !DILexicalBlock(scope: !1930, file: !125, line: 2201, column: 2)
!1935 = !DILocation(line: 0, scope: !1725, inlinedAt: !1933)
!1936 = !DILocation(line: 2201, column: 2, scope: !1934)
!1937 = !DILocation(line: 2201, column: 2, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1939, file: !125, line: 2201, column: 2)
!1939 = distinct !DILexicalBlock(scope: !1934, file: !125, line: 2201, column: 2)
!1940 = distinct !{!1940, !1941, !1941}
!1941 = !DILocation(line: 2201, column: 2, scope: !1939)
!1942 = !DILocation(line: 2208, column: 2, scope: !1915)
!1943 = !DILocation(line: 2210, column: 3, scope: !1927)
!1944 = !DILocation(line: 2212, column: 7, scope: !1926)
!1945 = !DILocation(line: 2212, column: 28, scope: !1926)
!1946 = !DILocation(line: 2212, column: 7, scope: !1927)
!1947 = !DILocation(line: 2214, column: 8, scope: !1924)
!1948 = !DILocation(line: 2214, column: 31, scope: !1924)
!1949 = !DILocation(line: 2214, column: 8, scope: !1925)
!1950 = !DILocation(line: 2218, column: 12, scope: !1923)
!1951 = !DILocation(line: 2218, column: 5, scope: !1923)
!1952 = !DILocation(line: 2220, column: 14, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1923, file: !125, line: 2219, column: 5)
!1954 = !DILocation(line: 2221, column: 39, scope: !1953)
!1955 = !DILocation(line: 2221, column: 15, scope: !1953)
!1956 = !DILocation(line: 2222, column: 39, scope: !1953)
!1957 = !DILocation(line: 2222, column: 15, scope: !1953)
!1958 = !DILocation(line: 2223, column: 6, scope: !1953)
!1959 = !DILocation(line: 2227, column: 17, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1953, file: !125, line: 2227, column: 10)
!1961 = !DILocation(line: 2227, column: 31, scope: !1960)
!1962 = !DILocation(line: 2227, column: 45, scope: !1960)
!1963 = !DILocation(line: 2227, column: 28, scope: !1960)
!1964 = !DILocation(line: 2227, column: 10, scope: !1953)
!1965 = !DILocation(line: 2229, column: 21, scope: !1966)
!1966 = distinct !DILexicalBlock(scope: !1960, file: !125, line: 2228, column: 6)
!1967 = !DILocation(line: 2230, column: 6, scope: !1966)
!1968 = distinct !{!1968, !1951, !1969, !1525}
!1969 = !DILocation(line: 2235, column: 5, scope: !1923)
!1970 = !DILocation(line: 2245, column: 6, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !1972, file: !125, line: 2238, column: 5)
!1972 = distinct !DILexicalBlock(scope: !1923, file: !125, line: 2237, column: 9)
!1973 = !DILocation(line: 2246, column: 5, scope: !1971)
!1974 = !DILocation(line: 2253, column: 33, scope: !1922)
!1975 = !DILocation(line: 0, scope: !1922)
!1976 = !DILocation(line: 2255, column: 24, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !1922, file: !125, line: 2255, column: 10)
!1978 = !DILocation(line: 2255, column: 10, scope: !1922)
!1979 = !DILocation(line: 2259, column: 12, scope: !1980)
!1980 = distinct !DILexicalBlock(scope: !1981, file: !125, line: 2259, column: 12)
!1981 = distinct !DILexicalBlock(scope: !1982, file: !125, line: 2258, column: 7)
!1982 = distinct !DILexicalBlock(scope: !1977, file: !125, line: 2256, column: 6)
!1983 = !DILocation(line: 2259, column: 33, scope: !1980)
!1984 = !DILocation(line: 2259, column: 12, scope: !1981)
!1985 = !DILocation(line: 2261, column: 23, scope: !1986)
!1986 = distinct !DILexicalBlock(scope: !1980, file: !125, line: 2260, column: 8)
!1987 = !DILocation(line: 2262, column: 8, scope: !1986)
!1988 = !DILocation(line: 2267, column: 8, scope: !1981)
!1989 = !DILocation(line: 2268, column: 30, scope: !1982)
!1990 = !DILocation(line: 2268, column: 7, scope: !1981)
!1991 = distinct !{!1991, !1992, !1993, !1525}
!1992 = !DILocation(line: 2257, column: 7, scope: !1982)
!1993 = !DILocation(line: 2268, column: 50, scope: !1982)
!1994 = !DILocation(line: 2270, column: 20, scope: !1982)
!1995 = !DILocation(line: 2271, column: 6, scope: !1982)
!1996 = !DILocation(line: 2278, column: 9, scope: !1997)
!1997 = distinct !DILexicalBlock(scope: !1923, file: !125, line: 2278, column: 9)
!1998 = !DILocation(line: 2278, column: 23, scope: !1997)
!1999 = !DILocation(line: 2278, column: 9, scope: !1923)
!2000 = !DILocation(line: 2285, column: 6, scope: !2001)
!2001 = distinct !DILexicalBlock(scope: !2002, file: !125, line: 2285, column: 6)
!2002 = distinct !DILexicalBlock(scope: !1997, file: !125, line: 2279, column: 5)
!2003 = !{i64 2148217891}
!2004 = !{i64 2148217942}
!2005 = !DILocation(line: 2286, column: 5, scope: !2002)
!2006 = !DILocation(line: 2298, column: 2, scope: !1915)
!2007 = !DILocation(line: 2300, column: 2, scope: !1915)
!2008 = distinct !DISubprogram(name: "xTaskIncrementTick", scope: !125, file: !125, line: 2707, type: !1916, scopeLine: 2708, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2009)
!2009 = !{!2010, !2011, !2012, !2013, !2016}
!2010 = !DILocalVariable(name: "pxTCB", scope: !2008, file: !125, line: 2709, type: !123)
!2011 = !DILocalVariable(name: "xItemValue", scope: !2008, file: !125, line: 2710, type: !39)
!2012 = !DILocalVariable(name: "xSwitchRequired", scope: !2008, file: !125, line: 2711, type: !176)
!2013 = !DILocalVariable(name: "xConstTickCount", scope: !2014, file: !125, line: 2721, type: !1774)
!2014 = distinct !DILexicalBlock(scope: !2015, file: !125, line: 2718, column: 2)
!2015 = distinct !DILexicalBlock(scope: !2008, file: !125, line: 2717, column: 6)
!2016 = !DILocalVariable(name: "pxTemp", scope: !2017, file: !125, line: 2729, type: !179)
!2017 = distinct !DILexicalBlock(scope: !2018, file: !125, line: 2729, column: 4)
!2018 = distinct !DILexicalBlock(scope: !2019, file: !125, line: 2728, column: 3)
!2019 = distinct !DILexicalBlock(scope: !2014, file: !125, line: 2727, column: 7)
!2020 = !DILocation(line: 0, scope: !2008)
!2021 = !DILocation(line: 2717, column: 6, scope: !2015)
!2022 = !DILocation(line: 2717, column: 27, scope: !2015)
!2023 = !DILocation(line: 2717, column: 6, scope: !2008)
!2024 = !DILocation(line: 2721, column: 38, scope: !2014)
!2025 = !DILocation(line: 2721, column: 49, scope: !2014)
!2026 = !DILocation(line: 0, scope: !2014)
!2027 = !DILocation(line: 2725, column: 14, scope: !2014)
!2028 = !DILocation(line: 2727, column: 23, scope: !2019)
!2029 = !DILocation(line: 2727, column: 7, scope: !2014)
!2030 = !DILocation(line: 2729, column: 4, scope: !2031)
!2031 = distinct !DILexicalBlock(scope: !2017, file: !125, line: 2729, column: 4)
!2032 = !DILocation(line: 2729, column: 4, scope: !2017)
!2033 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2034)
!2034 = distinct !DILocation(line: 2729, column: 4, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !2031, file: !125, line: 2729, column: 4)
!2036 = !DILocation(line: 0, scope: !1725, inlinedAt: !2034)
!2037 = !DILocation(line: 2729, column: 4, scope: !2035)
!2038 = !DILocation(line: 2729, column: 4, scope: !2039)
!2039 = distinct !DILexicalBlock(scope: !2040, file: !125, line: 2729, column: 4)
!2040 = distinct !DILexicalBlock(scope: !2035, file: !125, line: 2729, column: 4)
!2041 = distinct !{!2041, !2042, !2042}
!2042 = !DILocation(line: 2729, column: 4, scope: !2040)
!2043 = !DILocation(line: 0, scope: !2017)
!2044 = !DILocation(line: 2730, column: 3, scope: !2018)
!2045 = !DILocation(line: 2740, column: 26, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !2014, file: !125, line: 2740, column: 7)
!2047 = !DILocation(line: 2740, column: 23, scope: !2046)
!2048 = !DILocation(line: 2740, column: 7, scope: !2014)
!2049 = !DILocation(line: 2744, column: 9, scope: !2050)
!2050 = distinct !DILexicalBlock(scope: !2051, file: !125, line: 2744, column: 9)
!2051 = distinct !DILexicalBlock(scope: !2052, file: !125, line: 2743, column: 4)
!2052 = distinct !DILexicalBlock(scope: !2053, file: !125, line: 2742, column: 4)
!2053 = distinct !DILexicalBlock(scope: !2054, file: !125, line: 2742, column: 4)
!2054 = distinct !DILexicalBlock(scope: !2046, file: !125, line: 2741, column: 3)
!2055 = !DILocation(line: 2744, column: 9, scope: !2051)
!2056 = !DILocation(line: 2760, column: 14, scope: !2057)
!2057 = distinct !DILexicalBlock(scope: !2050, file: !125, line: 2755, column: 5)
!2058 = !DILocation(line: 2761, column: 19, scope: !2057)
!2059 = !DILocation(line: 2763, column: 26, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !2057, file: !125, line: 2763, column: 10)
!2061 = !DILocation(line: 2763, column: 10, scope: !2057)
!2062 = !DILocation(line: 2779, column: 15, scope: !2057)
!2063 = !DILocation(line: 2783, column: 10, scope: !2064)
!2064 = distinct !DILexicalBlock(scope: !2057, file: !125, line: 2783, column: 10)
!2065 = !DILocation(line: 2783, column: 64, scope: !2064)
!2066 = !DILocation(line: 2783, column: 10, scope: !2057)
!2067 = !DILocation(line: 2785, column: 16, scope: !2068)
!2068 = distinct !DILexicalBlock(scope: !2064, file: !125, line: 2784, column: 6)
!2069 = !DILocation(line: 2786, column: 6, scope: !2068)
!2070 = !DILocation(line: 2794, column: 6, scope: !2057)
!2071 = !DILocation(line: 2804, column: 18, scope: !2072)
!2072 = distinct !DILexicalBlock(scope: !2073, file: !125, line: 2804, column: 11)
!2073 = distinct !DILexicalBlock(scope: !2057, file: !125, line: 2799, column: 6)
!2074 = !DILocation(line: 2804, column: 32, scope: !2072)
!2075 = !DILocation(line: 2804, column: 46, scope: !2072)
!2076 = !DILocation(line: 2804, column: 29, scope: !2072)
!2077 = !DILocation(line: 2804, column: 11, scope: !2073)
!2078 = distinct !{!2078, !2079, !2080}
!2079 = !DILocation(line: 2742, column: 4, scope: !2053)
!2080 = !DILocation(line: 2815, column: 4, scope: !2053)
!2081 = !DILocation(line: 0, scope: !2050)
!2082 = !DILocation(line: 2823, column: 8, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !2084, file: !125, line: 2823, column: 8)
!2084 = distinct !DILexicalBlock(scope: !2014, file: !125, line: 2822, column: 3)
!2085 = !DILocation(line: 2711, column: 12, scope: !2008)
!2086 = !DILocation(line: 2823, column: 86, scope: !2083)
!2087 = !DILocation(line: 2823, column: 8, scope: !2084)
!2088 = !DILocation(line: 2851, column: 8, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !2090, file: !125, line: 2851, column: 8)
!2090 = distinct !DILexicalBlock(scope: !2014, file: !125, line: 2850, column: 3)
!2091 = !DILocation(line: 2851, column: 22, scope: !2089)
!2092 = !DILocation(line: 2851, column: 8, scope: !2090)
!2093 = !DILocation(line: 2861, column: 2, scope: !2014)
!2094 = !DILocation(line: 2864, column: 3, scope: !2095)
!2095 = distinct !DILexicalBlock(scope: !2015, file: !125, line: 2863, column: 2)
!2096 = !DILocation(line: 2875, column: 2, scope: !2008)
!2097 = distinct !DISubprogram(name: "vTaskDelay", scope: !125, file: !125, line: 1341, type: !2098, scopeLine: 1342, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2100)
!2098 = !DISubroutineType(types: !2099)
!2099 = !{null, !1774}
!2100 = !{!2101, !2102}
!2101 = !DILocalVariable(name: "xTicksToDelay", arg: 1, scope: !2097, file: !125, line: 1341, type: !1774)
!2102 = !DILocalVariable(name: "xAlreadyYielded", scope: !2097, file: !125, line: 1343, type: !176)
!2103 = !DILocation(line: 0, scope: !2097)
!2104 = !DILocation(line: 1346, column: 21, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2097, file: !125, line: 1346, column: 7)
!2106 = !DILocation(line: 1346, column: 7, scope: !2097)
!2107 = !DILocation(line: 1348, column: 4, scope: !2108)
!2108 = distinct !DILexicalBlock(scope: !2109, file: !125, line: 1348, column: 4)
!2109 = distinct !DILexicalBlock(scope: !2105, file: !125, line: 1347, column: 3)
!2110 = !DILocation(line: 1348, column: 4, scope: !2109)
!2111 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2112)
!2112 = distinct !DILocation(line: 1348, column: 4, scope: !2113)
!2113 = distinct !DILexicalBlock(scope: !2108, file: !125, line: 1348, column: 4)
!2114 = !DILocation(line: 0, scope: !1725, inlinedAt: !2112)
!2115 = !DILocation(line: 1348, column: 4, scope: !2113)
!2116 = !DILocation(line: 1348, column: 4, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !2118, file: !125, line: 1348, column: 4)
!2118 = distinct !DILexicalBlock(scope: !2113, file: !125, line: 1348, column: 4)
!2119 = distinct !{!2119, !2120, !2120}
!2120 = !DILocation(line: 1348, column: 4, scope: !2118)
!2121 = !DILocation(line: 1349, column: 4, scope: !2109)
!2122 = !DILocation(line: 1360, column: 5, scope: !2123)
!2123 = distinct !DILexicalBlock(scope: !2109, file: !125, line: 1350, column: 4)
!2124 = !DILocation(line: 1362, column: 22, scope: !2109)
!2125 = !DILocation(line: 1363, column: 3, scope: !2109)
!2126 = !DILocation(line: 1371, column: 7, scope: !2097)
!2127 = !DILocation(line: 1373, column: 4, scope: !2128)
!2128 = distinct !DILexicalBlock(scope: !2129, file: !125, line: 1373, column: 4)
!2129 = distinct !DILexicalBlock(scope: !2130, file: !125, line: 1372, column: 3)
!2130 = distinct !DILexicalBlock(scope: !2097, file: !125, line: 1371, column: 7)
!2131 = !{i64 2148208943}
!2132 = !{i64 2148208994}
!2133 = !DILocation(line: 1374, column: 3, scope: !2129)
!2134 = !DILocation(line: 1379, column: 2, scope: !2097)
!2135 = distinct !DISubprogram(name: "eTaskGetState", scope: !125, file: !125, line: 1386, type: !2136, scopeLine: 1387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2139)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{!2138, !181}
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "eTaskState", file: !105, line: 87, baseType: !104)
!2139 = !{!2140, !2141, !2142, !2145, !2146, !2147}
!2140 = !DILocalVariable(name: "xTask", arg: 1, scope: !2135, file: !125, line: 1386, type: !181)
!2141 = !DILocalVariable(name: "eReturn", scope: !2135, file: !125, line: 1388, type: !2138)
!2142 = !DILocalVariable(name: "pxStateList", scope: !2135, file: !125, line: 1389, type: !2143)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!2145 = !DILocalVariable(name: "pxDelayedList", scope: !2135, file: !125, line: 1389, type: !2143)
!2146 = !DILocalVariable(name: "pxOverflowedDelayedList", scope: !2135, file: !125, line: 1389, type: !2143)
!2147 = !DILocalVariable(name: "pxTCB", scope: !2135, file: !125, line: 1390, type: !2148)
!2148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2149)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !124)
!2151 = !DILocation(line: 0, scope: !2135)
!2152 = !DILocation(line: 1392, column: 3, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !2135, file: !125, line: 1392, column: 3)
!2154 = !DILocation(line: 1392, column: 3, scope: !2135)
!2155 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2156)
!2156 = distinct !DILocation(line: 1392, column: 3, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2153, file: !125, line: 1392, column: 3)
!2158 = !DILocation(line: 0, scope: !1725, inlinedAt: !2156)
!2159 = !DILocation(line: 1392, column: 3, scope: !2157)
!2160 = !DILocation(line: 1392, column: 3, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !2162, file: !125, line: 1392, column: 3)
!2162 = distinct !DILexicalBlock(scope: !2157, file: !125, line: 1392, column: 3)
!2163 = distinct !{!2163, !2164, !2164}
!2164 = !DILocation(line: 1392, column: 3, scope: !2162)
!2165 = !DILocation(line: 1394, column: 16, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2135, file: !125, line: 1394, column: 7)
!2167 = !DILocation(line: 1394, column: 13, scope: !2166)
!2168 = !DILocation(line: 1394, column: 7, scope: !2135)
!2169 = !DILocation(line: 1401, column: 4, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2166, file: !125, line: 1400, column: 3)
!2171 = !DILocation(line: 1403, column: 19, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2170, file: !125, line: 1402, column: 4)
!2173 = !{!1463, !1015, i64 20}
!2174 = !DILocation(line: 1404, column: 21, scope: !2172)
!2175 = !DILocation(line: 1405, column: 31, scope: !2172)
!2176 = !DILocation(line: 1407, column: 4, scope: !2170)
!2177 = !DILocation(line: 1409, column: 22, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2170, file: !125, line: 1409, column: 8)
!2179 = !DILocation(line: 1409, column: 41, scope: !2178)
!2180 = !DILocation(line: 1417, column: 26, scope: !2181)
!2181 = distinct !DILexicalBlock(scope: !2178, file: !125, line: 1417, column: 14)
!2182 = !DILocation(line: 1417, column: 14, scope: !2178)
!2183 = !DILocation(line: 1422, column: 10, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !2185, file: !125, line: 1422, column: 10)
!2185 = distinct !DILexicalBlock(scope: !2181, file: !125, line: 1418, column: 5)
!2186 = !DILocation(line: 1422, column: 64, scope: !2184)
!2187 = !DILocation(line: 1422, column: 10, scope: !2185)
!2188 = !DILocation(line: 1430, column: 19, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2190, file: !125, line: 1430, column: 12)
!2190 = distinct !DILexicalBlock(scope: !2191, file: !125, line: 1425, column: 7)
!2191 = distinct !DILexicalBlock(scope: !2184, file: !125, line: 1423, column: 6)
!2192 = !DILocation(line: 1430, column: 33, scope: !2189)
!2193 = !DILocation(line: 1453, column: 28, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !2181, file: !125, line: 1453, column: 14)
!2195 = !DILocation(line: 1453, column: 59, scope: !2194)
!2196 = !DILocation(line: 0, scope: !2166)
!2197 = !DILocation(line: 1470, column: 3, scope: !2135)
!2198 = distinct !DISubprogram(name: "uxTaskPriorityGet", scope: !125, file: !125, line: 1478, type: !2199, scopeLine: 1479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2202)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!149, !2201}
!2201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!2202 = !{!2203, !2204, !2205}
!2203 = !DILocalVariable(name: "xTask", arg: 1, scope: !2198, file: !125, line: 1478, type: !2201)
!2204 = !DILocalVariable(name: "pxTCB", scope: !2198, file: !125, line: 1480, type: !2149)
!2205 = !DILocalVariable(name: "uxReturn", scope: !2198, file: !125, line: 1481, type: !149)
!2206 = !DILocation(line: 0, scope: !2198)
!2207 = !DILocation(line: 1483, column: 3, scope: !2198)
!2208 = !DILocation(line: 1487, column: 12, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2198, file: !125, line: 1484, column: 3)
!2210 = !DILocation(line: 1488, column: 22, scope: !2209)
!2211 = !DILocation(line: 1490, column: 3, scope: !2198)
!2212 = !DILocation(line: 1492, column: 3, scope: !2198)
!2213 = distinct !DISubprogram(name: "uxTaskPriorityGetFromISR", scope: !125, file: !125, line: 1500, type: !2199, scopeLine: 1501, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2214)
!2214 = !{!2215, !2216, !2217, !2218}
!2215 = !DILocalVariable(name: "xTask", arg: 1, scope: !2213, file: !125, line: 1500, type: !2201)
!2216 = !DILocalVariable(name: "pxTCB", scope: !2213, file: !125, line: 1502, type: !2149)
!2217 = !DILocalVariable(name: "uxReturn", scope: !2213, file: !125, line: 1503, type: !149)
!2218 = !DILocalVariable(name: "uxSavedInterruptState", scope: !2213, file: !125, line: 1503, type: !149)
!2219 = !DILocation(line: 0, scope: !2213)
!2220 = !DILocation(line: 1521, column: 3, scope: !2213)
!2221 = !DILocation(line: 211, column: 2, scope: !2222, inlinedAt: !2228)
!2222 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !40, file: !40, line: 207, type: !2223, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2225)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{!21}
!2225 = !{!2226, !2227}
!2226 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !2222, file: !40, line: 209, type: !21)
!2227 = !DILocalVariable(name: "ulNewBASEPRI", scope: !2222, file: !40, line: 209, type: !21)
!2228 = distinct !DILocation(line: 1523, column: 27, scope: !2213)
!2229 = !{i64 514813, i64 514851, i64 514884, i64 514921, i64 514949}
!2230 = !DILocation(line: 0, scope: !2222, inlinedAt: !2228)
!2231 = !DILocation(line: 1527, column: 12, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !2213, file: !125, line: 1524, column: 3)
!2233 = !DILocation(line: 1528, column: 22, scope: !2232)
!2234 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !2235, file: !40, line: 227, type: !21)
!2235 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !40, file: !40, line: 227, type: !2236, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2238)
!2236 = !DISubroutineType(types: !2237)
!2237 = !{null, !21}
!2238 = !{!2234}
!2239 = !DILocation(line: 0, scope: !2235, inlinedAt: !2240)
!2240 = distinct !DILocation(line: 1530, column: 3, scope: !2213)
!2241 = !DILocation(line: 229, column: 2, scope: !2235, inlinedAt: !2240)
!2242 = !{i64 515375}
!2243 = !DILocation(line: 1532, column: 3, scope: !2213)
!2244 = distinct !DISubprogram(name: "vTaskPrioritySet", scope: !125, file: !125, line: 1540, type: !2245, scopeLine: 1541, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2247)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{null, !181, !149}
!2247 = !{!2248, !2249, !2250, !2251, !2252, !2253}
!2248 = !DILocalVariable(name: "xTask", arg: 1, scope: !2244, file: !125, line: 1540, type: !181)
!2249 = !DILocalVariable(name: "uxNewPriority", arg: 2, scope: !2244, file: !125, line: 1540, type: !149)
!2250 = !DILocalVariable(name: "pxTCB", scope: !2244, file: !125, line: 1542, type: !123)
!2251 = !DILocalVariable(name: "uxCurrentBasePriority", scope: !2244, file: !125, line: 1543, type: !149)
!2252 = !DILocalVariable(name: "uxPriorityUsedOnEntry", scope: !2244, file: !125, line: 1543, type: !149)
!2253 = !DILocalVariable(name: "xYieldRequired", scope: !2244, file: !125, line: 1544, type: !176)
!2254 = !DILocation(line: 0, scope: !2244)
!2255 = !DILocation(line: 1546, column: 3, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2244, file: !125, line: 1546, column: 3)
!2257 = !DILocation(line: 1546, column: 3, scope: !2244)
!2258 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2259)
!2259 = distinct !DILocation(line: 1546, column: 3, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2256, file: !125, line: 1546, column: 3)
!2261 = !DILocation(line: 0, scope: !1725, inlinedAt: !2259)
!2262 = !DILocation(line: 1546, column: 3, scope: !2260)
!2263 = !DILocation(line: 1546, column: 3, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2265, file: !125, line: 1546, column: 3)
!2265 = distinct !DILexicalBlock(scope: !2260, file: !125, line: 1546, column: 3)
!2266 = distinct !{!2266, !2267, !2267}
!2267 = !DILocation(line: 1546, column: 3, scope: !2265)
!2268 = !DILocation(line: 1558, column: 3, scope: !2244)
!2269 = !DILocation(line: 1562, column: 12, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2244, file: !125, line: 1559, column: 3)
!2271 = !DILocation(line: 1568, column: 36, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2270, file: !125, line: 1567, column: 4)
!2273 = !DILocation(line: 1576, column: 30, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !2270, file: !125, line: 1576, column: 8)
!2275 = !DILocation(line: 1576, column: 8, scope: !2270)
!2276 = !DILocation(line: 1580, column: 23, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2278, file: !125, line: 1580, column: 9)
!2278 = distinct !DILexicalBlock(scope: !2274, file: !125, line: 1577, column: 4)
!2279 = !DILocation(line: 0, scope: !2277)
!2280 = !DILocation(line: 1580, column: 9, scope: !2278)
!2281 = !DILocation(line: 1582, column: 16, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2283, file: !125, line: 1582, column: 10)
!2283 = distinct !DILexicalBlock(scope: !2277, file: !125, line: 1581, column: 5)
!2284 = !DILocation(line: 1582, column: 10, scope: !2283)
!2285 = !DILocation(line: 1587, column: 28, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2287, file: !125, line: 1587, column: 11)
!2287 = distinct !DILexicalBlock(scope: !2282, file: !125, line: 1583, column: 6)
!2288 = !DILocation(line: 1587, column: 42, scope: !2286)
!2289 = !DILocation(line: 1587, column: 25, scope: !2286)
!2290 = !DILocation(line: 1587, column: 11, scope: !2287)
!2291 = !DILocation(line: 1603, column: 20, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2277, file: !125, line: 1603, column: 14)
!2293 = !DILocation(line: 1603, column: 14, scope: !2277)
!2294 = !DILocation(line: 1620, column: 36, scope: !2278)
!2295 = !DILocation(line: 1626, column: 32, scope: !2296)
!2296 = distinct !DILexicalBlock(scope: !2297, file: !125, line: 1626, column: 10)
!2297 = distinct !DILexicalBlock(scope: !2278, file: !125, line: 1623, column: 5)
!2298 = !DILocation(line: 1626, column: 10, scope: !2297)
!2299 = !DILocation(line: 1628, column: 25, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2296, file: !125, line: 1627, column: 6)
!2301 = !DILocation(line: 1629, column: 6, scope: !2300)
!2302 = !DILocation(line: 1636, column: 28, scope: !2297)
!2303 = !DILocation(line: 1646, column: 11, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2278, file: !125, line: 1646, column: 9)
!2305 = !DILocation(line: 1646, column: 102, scope: !2304)
!2306 = !DILocation(line: 1646, column: 9, scope: !2278)
!2307 = !DILocation(line: 1648, column: 6, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2304, file: !125, line: 1647, column: 5)
!2309 = !DILocation(line: 1649, column: 5, scope: !2308)
!2310 = !DILocation(line: 1659, column: 9, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !2278, file: !125, line: 1659, column: 9)
!2312 = !DILocation(line: 1659, column: 9, scope: !2278)
!2313 = !DILocation(line: 1664, column: 10, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2315, file: !125, line: 1664, column: 10)
!2315 = distinct !DILexicalBlock(scope: !2311, file: !125, line: 1660, column: 5)
!2316 = !DILocation(line: 1664, column: 53, scope: !2314)
!2317 = !DILocation(line: 1664, column: 10, scope: !2315)
!2318 = !DILocation(line: 1669, column: 7, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !2314, file: !125, line: 1665, column: 6)
!2320 = !DILocation(line: 1670, column: 6, scope: !2319)
!2321 = !DILocation(line: 1675, column: 6, scope: !2315)
!2322 = !DILocation(line: 1676, column: 5, scope: !2315)
!2323 = !DILocation(line: 1682, column: 9, scope: !2278)
!2324 = !DILocation(line: 1684, column: 6, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2326, file: !125, line: 1684, column: 6)
!2326 = distinct !DILexicalBlock(scope: !2327, file: !125, line: 1683, column: 5)
!2327 = distinct !DILexicalBlock(scope: !2278, file: !125, line: 1682, column: 9)
!2328 = !{i64 2148211540}
!2329 = !{i64 2148211591}
!2330 = !DILocation(line: 1685, column: 5, scope: !2326)
!2331 = !DILocation(line: 1696, column: 3, scope: !2244)
!2332 = !DILocation(line: 1697, column: 2, scope: !2244)
!2333 = distinct !DISubprogram(name: "vTaskSuspend", scope: !125, file: !125, line: 1704, type: !1665, scopeLine: 1705, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2334)
!2334 = !{!2335, !2336}
!2335 = !DILocalVariable(name: "xTaskToSuspend", arg: 1, scope: !2333, file: !125, line: 1704, type: !181)
!2336 = !DILocalVariable(name: "pxTCB", scope: !2333, file: !125, line: 1706, type: !123)
!2337 = !DILocation(line: 0, scope: !2333)
!2338 = !DILocation(line: 1708, column: 3, scope: !2333)
!2339 = !DILocation(line: 1712, column: 12, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2333, file: !125, line: 1709, column: 3)
!2341 = !DILocation(line: 1718, column: 32, scope: !2342)
!2342 = distinct !DILexicalBlock(scope: !2340, file: !125, line: 1718, column: 8)
!2343 = !DILocation(line: 1718, column: 8, scope: !2342)
!2344 = !DILocation(line: 1718, column: 51, scope: !2342)
!2345 = !DILocation(line: 1718, column: 8, scope: !2340)
!2346 = !DILocation(line: 1720, column: 5, scope: !2347)
!2347 = distinct !DILexicalBlock(scope: !2348, file: !125, line: 1720, column: 5)
!2348 = distinct !DILexicalBlock(scope: !2349, file: !125, line: 1720, column: 5)
!2349 = distinct !DILexicalBlock(scope: !2342, file: !125, line: 1719, column: 4)
!2350 = !DILocation(line: 1720, column: 5, scope: !2348)
!2351 = !DILocation(line: 1720, column: 5, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2347, file: !125, line: 1720, column: 5)
!2353 = !DILocation(line: 1728, column: 8, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2340, file: !125, line: 1728, column: 8)
!2355 = !DILocation(line: 1728, column: 62, scope: !2354)
!2356 = !DILocation(line: 1728, column: 8, scope: !2340)
!2357 = !DILocation(line: 1730, column: 14, scope: !2358)
!2358 = distinct !DILexicalBlock(scope: !2354, file: !125, line: 1729, column: 4)
!2359 = !DILocation(line: 1731, column: 4, scope: !2358)
!2360 = !DILocation(line: 1737, column: 4, scope: !2340)
!2361 = !DILocation(line: 1741, column: 16, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2363, file: !125, line: 1741, column: 9)
!2363 = distinct !DILexicalBlock(scope: !2340, file: !125, line: 1740, column: 4)
!2364 = !DILocation(line: 1741, column: 30, scope: !2362)
!2365 = !DILocation(line: 1741, column: 9, scope: !2363)
!2366 = !DILocation(line: 1745, column: 27, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2362, file: !125, line: 1742, column: 5)
!2368 = !DILocation(line: 1746, column: 5, scope: !2367)
!2369 = !DILocation(line: 1750, column: 3, scope: !2333)
!2370 = !DILocation(line: 1752, column: 7, scope: !2371)
!2371 = distinct !DILexicalBlock(scope: !2333, file: !125, line: 1752, column: 7)
!2372 = !DILocation(line: 1752, column: 25, scope: !2371)
!2373 = !DILocation(line: 1752, column: 7, scope: !2333)
!2374 = !DILocation(line: 1756, column: 4, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !2371, file: !125, line: 1753, column: 3)
!2376 = !DILocation(line: 1758, column: 5, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2375, file: !125, line: 1757, column: 4)
!2378 = !DILocation(line: 1760, column: 4, scope: !2375)
!2379 = !DILocation(line: 1761, column: 3, scope: !2375)
!2380 = !DILocation(line: 1767, column: 16, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2333, file: !125, line: 1767, column: 7)
!2382 = !DILocation(line: 1767, column: 13, scope: !2381)
!2383 = !DILocation(line: 1767, column: 7, scope: !2333)
!2384 = !DILocation(line: 1769, column: 8, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2386, file: !125, line: 1769, column: 8)
!2386 = distinct !DILexicalBlock(scope: !2381, file: !125, line: 1768, column: 3)
!2387 = !DILocation(line: 1769, column: 26, scope: !2385)
!2388 = !DILocation(line: 1769, column: 8, scope: !2386)
!2389 = !DILocation(line: 1772, column: 5, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !2391, file: !125, line: 1772, column: 5)
!2391 = distinct !DILexicalBlock(scope: !2385, file: !125, line: 1770, column: 4)
!2392 = !DILocation(line: 1772, column: 5, scope: !2391)
!2393 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2394)
!2394 = distinct !DILocation(line: 1772, column: 5, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2390, file: !125, line: 1772, column: 5)
!2396 = !DILocation(line: 0, scope: !1725, inlinedAt: !2394)
!2397 = !DILocation(line: 1772, column: 5, scope: !2395)
!2398 = !DILocation(line: 1772, column: 5, scope: !2399)
!2399 = distinct !DILexicalBlock(scope: !2400, file: !125, line: 1772, column: 5)
!2400 = distinct !DILexicalBlock(scope: !2395, file: !125, line: 1772, column: 5)
!2401 = distinct !{!2401, !2402, !2402}
!2402 = !DILocation(line: 1772, column: 5, scope: !2400)
!2403 = !DILocation(line: 1773, column: 5, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2391, file: !125, line: 1773, column: 5)
!2405 = !{i64 2148213101}
!2406 = !{i64 2148213152}
!2407 = !DILocation(line: 1774, column: 4, scope: !2391)
!2408 = !DILocation(line: 1780, column: 9, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2410, file: !125, line: 1780, column: 9)
!2410 = distinct !DILexicalBlock(scope: !2385, file: !125, line: 1776, column: 4)
!2411 = !DILocation(line: 1780, column: 59, scope: !2409)
!2412 = !DILocation(line: 1780, column: 56, scope: !2409)
!2413 = !DILocation(line: 1780, column: 9, scope: !2410)
!2414 = !DILocation(line: 1786, column: 19, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2409, file: !125, line: 1781, column: 5)
!2416 = !DILocation(line: 1787, column: 5, scope: !2415)
!2417 = !DILocation(line: 1790, column: 6, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !2409, file: !125, line: 1789, column: 5)
!2419 = !DILocation(line: 1798, column: 2, scope: !2333)
!2420 = distinct !DISubprogram(name: "vTaskSwitchContext", scope: !125, file: !125, line: 2989, type: !1054, scopeLine: 2990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2421)
!2421 = !{!2422, !2426}
!2422 = !DILocalVariable(name: "uxTopPriority", scope: !2423, file: !125, line: 3041, type: !149)
!2423 = distinct !DILexicalBlock(scope: !2424, file: !125, line: 3041, column: 3)
!2424 = distinct !DILexicalBlock(scope: !2425, file: !125, line: 2998, column: 2)
!2425 = distinct !DILexicalBlock(scope: !2420, file: !125, line: 2991, column: 6)
!2426 = !DILocalVariable(name: "pxConstList", scope: !2427, file: !125, line: 3041, type: !2428)
!2427 = distinct !DILexicalBlock(scope: !2423, file: !125, line: 3041, column: 3)
!2428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !179)
!2429 = !DILocation(line: 2991, column: 6, scope: !2425)
!2430 = !DILocation(line: 2991, column: 27, scope: !2425)
!2431 = !DILocation(line: 2991, column: 6, scope: !2420)
!2432 = !DILocation(line: 2995, column: 17, scope: !2433)
!2433 = distinct !DILexicalBlock(scope: !2425, file: !125, line: 2992, column: 2)
!2434 = !DILocation(line: 2996, column: 2, scope: !2433)
!2435 = !DILocation(line: 2999, column: 17, scope: !2424)
!2436 = !DILocation(line: 3041, column: 3, scope: !2423)
!2437 = !DILocalVariable(name: "ulBitmap", arg: 1, scope: !2438, file: !40, line: 130, type: !21)
!2438 = distinct !DISubprogram(name: "ucPortCountLeadingZeros", scope: !40, file: !40, line: 130, type: !2439, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2441)
!2439 = !DISubroutineType(types: !2440)
!2440 = !{!85, !21}
!2441 = !{!2437, !2442}
!2442 = !DILocalVariable(name: "ucReturn", scope: !2438, file: !40, line: 132, type: !85)
!2443 = !DILocation(line: 0, scope: !2438, inlinedAt: !2444)
!2444 = distinct !DILocation(line: 3041, column: 3, scope: !2423)
!2445 = !DILocation(line: 134, column: 3, scope: !2438, inlinedAt: !2444)
!2446 = !{i64 512391}
!2447 = !DILocation(line: 0, scope: !2423)
!2448 = !DILocation(line: 3041, column: 3, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2423, file: !125, line: 3041, column: 3)
!2450 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2451)
!2451 = distinct !DILocation(line: 3041, column: 3, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2449, file: !125, line: 3041, column: 3)
!2453 = !DILocation(line: 0, scope: !1725, inlinedAt: !2451)
!2454 = !DILocation(line: 3041, column: 3, scope: !2452)
!2455 = !DILocation(line: 3041, column: 3, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2457, file: !125, line: 3041, column: 3)
!2457 = distinct !DILexicalBlock(scope: !2452, file: !125, line: 3041, column: 3)
!2458 = distinct !{!2458, !2459, !2459}
!2459 = !DILocation(line: 3041, column: 3, scope: !2457)
!2460 = !DILocation(line: 0, scope: !2427)
!2461 = !DILocation(line: 3041, column: 3, scope: !2427)
!2462 = !{!1684, !1015, i64 4}
!2463 = !{!1464, !1015, i64 4}
!2464 = !DILocation(line: 3041, column: 3, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2427, file: !125, line: 3041, column: 3)
!2466 = !DILocation(line: 3041, column: 3, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2465, file: !125, line: 3041, column: 3)
!2468 = !DILocation(line: 3061, column: 1, scope: !2420)
!2469 = distinct !DISubprogram(name: "vTaskResume", scope: !125, file: !125, line: 1851, type: !1665, scopeLine: 1852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2470)
!2470 = !{!2471, !2472}
!2471 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !2469, file: !125, line: 1851, type: !181)
!2472 = !DILocalVariable(name: "pxTCB", scope: !2469, file: !125, line: 1853, type: !2473)
!2473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!2474 = !DILocation(line: 0, scope: !2469)
!2475 = !DILocation(line: 1856, column: 3, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2469, file: !125, line: 1856, column: 3)
!2477 = !DILocation(line: 1856, column: 3, scope: !2469)
!2478 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2479)
!2479 = distinct !DILocation(line: 1856, column: 3, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !2476, file: !125, line: 1856, column: 3)
!2481 = !DILocation(line: 0, scope: !1725, inlinedAt: !2479)
!2482 = !DILocation(line: 1856, column: 3, scope: !2480)
!2483 = !DILocation(line: 1856, column: 3, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2485, file: !125, line: 1856, column: 3)
!2485 = distinct !DILexicalBlock(scope: !2480, file: !125, line: 1856, column: 3)
!2486 = distinct !{!2486, !2487, !2487}
!2487 = !DILocation(line: 1856, column: 3, scope: !2485)
!2488 = !DILocation(line: 1860, column: 18, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2469, file: !125, line: 1860, column: 7)
!2490 = !DILocation(line: 1860, column: 15, scope: !2489)
!2491 = !DILocation(line: 1860, column: 33, scope: !2489)
!2492 = !DILocation(line: 1862, column: 4, scope: !2493)
!2493 = distinct !DILexicalBlock(scope: !2489, file: !125, line: 1861, column: 3)
!2494 = !DILocation(line: 1864, column: 9, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2496, file: !125, line: 1864, column: 9)
!2496 = distinct !DILexicalBlock(scope: !2493, file: !125, line: 1863, column: 4)
!2497 = !DILocation(line: 1864, column: 41, scope: !2495)
!2498 = !DILocation(line: 1864, column: 9, scope: !2496)
!2499 = !DILocation(line: 1870, column: 40, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2495, file: !125, line: 1865, column: 5)
!2501 = !DILocation(line: 1870, column: 15, scope: !2500)
!2502 = !DILocation(line: 1871, column: 6, scope: !2500)
!2503 = !DILocation(line: 1874, column: 17, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2500, file: !125, line: 1874, column: 10)
!2505 = !DILocation(line: 1874, column: 31, scope: !2504)
!2506 = !DILocation(line: 1874, column: 45, scope: !2504)
!2507 = !DILocation(line: 1874, column: 28, scope: !2504)
!2508 = !DILocation(line: 1874, column: 10, scope: !2500)
!2509 = !DILocation(line: 1879, column: 7, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2511, file: !125, line: 1879, column: 7)
!2511 = distinct !DILexicalBlock(scope: !2504, file: !125, line: 1875, column: 6)
!2512 = !{i64 2148215089}
!2513 = !{i64 2148215140}
!2514 = !DILocation(line: 1880, column: 6, scope: !2511)
!2515 = !DILocation(line: 1891, column: 4, scope: !2493)
!2516 = !DILocation(line: 1892, column: 3, scope: !2493)
!2517 = !DILocation(line: 1897, column: 2, scope: !2469)
!2518 = distinct !DISubprogram(name: "prvTaskIsTaskSuspended", scope: !125, file: !125, line: 1805, type: !2519, scopeLine: 1806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2521)
!2519 = !DISubroutineType(types: !2520)
!2520 = !{!176, !2201}
!2521 = !{!2522, !2523, !2524}
!2522 = !DILocalVariable(name: "xTask", arg: 1, scope: !2518, file: !125, line: 1805, type: !2201)
!2523 = !DILocalVariable(name: "xReturn", scope: !2518, file: !125, line: 1807, type: !176)
!2524 = !DILocalVariable(name: "pxTCB", scope: !2518, file: !125, line: 1808, type: !2148)
!2525 = !DILocation(line: 0, scope: !2518)
!2526 = !DILocation(line: 1814, column: 3, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2518, file: !125, line: 1814, column: 3)
!2528 = !DILocation(line: 1814, column: 3, scope: !2518)
!2529 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2530)
!2530 = distinct !DILocation(line: 1814, column: 3, scope: !2531)
!2531 = distinct !DILexicalBlock(scope: !2527, file: !125, line: 1814, column: 3)
!2532 = !DILocation(line: 0, scope: !1725, inlinedAt: !2530)
!2533 = !DILocation(line: 1814, column: 3, scope: !2531)
!2534 = !DILocation(line: 1814, column: 3, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2536, file: !125, line: 1814, column: 3)
!2536 = distinct !DILexicalBlock(scope: !2531, file: !125, line: 1814, column: 3)
!2537 = distinct !{!2537, !2538, !2538}
!2538 = !DILocation(line: 1814, column: 3, scope: !2536)
!2539 = !DILocation(line: 1817, column: 7, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2518, file: !125, line: 1817, column: 7)
!2541 = !DILocation(line: 1817, column: 7, scope: !2518)
!2542 = !DILocation(line: 1820, column: 8, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2544, file: !125, line: 1820, column: 8)
!2544 = distinct !DILexicalBlock(scope: !2540, file: !125, line: 1818, column: 3)
!2545 = !DILocation(line: 1820, column: 8, scope: !2544)
!2546 = !DILocation(line: 1843, column: 3, scope: !2518)
!2547 = distinct !DISubprogram(name: "xTaskResumeFromISR", scope: !125, file: !125, line: 1905, type: !2548, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2550)
!2548 = !DISubroutineType(types: !2549)
!2549 = !{!176, !181}
!2550 = !{!2551, !2552, !2553, !2554}
!2551 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !2547, file: !125, line: 1905, type: !181)
!2552 = !DILocalVariable(name: "xYieldRequired", scope: !2547, file: !125, line: 1907, type: !176)
!2553 = !DILocalVariable(name: "pxTCB", scope: !2547, file: !125, line: 1908, type: !2473)
!2554 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !2547, file: !125, line: 1909, type: !149)
!2555 = !DILocation(line: 0, scope: !2547)
!2556 = !DILocation(line: 1911, column: 3, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2547, file: !125, line: 1911, column: 3)
!2558 = !DILocation(line: 1911, column: 3, scope: !2547)
!2559 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2560)
!2560 = distinct !DILocation(line: 1911, column: 3, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2557, file: !125, line: 1911, column: 3)
!2562 = !DILocation(line: 0, scope: !1725, inlinedAt: !2560)
!2563 = !DILocation(line: 1911, column: 3, scope: !2561)
!2564 = !DILocation(line: 1911, column: 3, scope: !2565)
!2565 = distinct !DILexicalBlock(scope: !2566, file: !125, line: 1911, column: 3)
!2566 = distinct !DILexicalBlock(scope: !2561, file: !125, line: 1911, column: 3)
!2567 = distinct !{!2567, !2568, !2568}
!2568 = !DILocation(line: 1911, column: 3, scope: !2566)
!2569 = !DILocation(line: 1929, column: 3, scope: !2547)
!2570 = !DILocation(line: 211, column: 2, scope: !2222, inlinedAt: !2571)
!2571 = distinct !DILocation(line: 1931, column: 28, scope: !2547)
!2572 = !DILocation(line: 0, scope: !2222, inlinedAt: !2571)
!2573 = !DILocation(line: 1933, column: 8, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2575, file: !125, line: 1933, column: 8)
!2575 = distinct !DILexicalBlock(scope: !2547, file: !125, line: 1932, column: 3)
!2576 = !DILocation(line: 1933, column: 40, scope: !2574)
!2577 = !DILocation(line: 1933, column: 8, scope: !2575)
!2578 = !DILocation(line: 1938, column: 9, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2580, file: !125, line: 1938, column: 9)
!2580 = distinct !DILexicalBlock(scope: !2574, file: !125, line: 1934, column: 4)
!2581 = !DILocation(line: 1938, column: 30, scope: !2579)
!2582 = !DILocation(line: 1938, column: 9, scope: !2580)
!2583 = !DILocation(line: 1942, column: 17, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2585, file: !125, line: 1942, column: 10)
!2585 = distinct !DILexicalBlock(scope: !2579, file: !125, line: 1939, column: 5)
!2586 = !DILocation(line: 1942, column: 31, scope: !2584)
!2587 = !DILocation(line: 1942, column: 45, scope: !2584)
!2588 = !DILocation(line: 1942, column: 28, scope: !2584)
!2589 = !DILocation(line: 1942, column: 10, scope: !2585)
!2590 = !DILocation(line: 1951, column: 39, scope: !2585)
!2591 = !DILocation(line: 1951, column: 15, scope: !2585)
!2592 = !DILocation(line: 1952, column: 6, scope: !2585)
!2593 = !DILocation(line: 1953, column: 5, scope: !2585)
!2594 = !DILocation(line: 1959, column: 56, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2579, file: !125, line: 1955, column: 5)
!2596 = !DILocation(line: 1959, column: 6, scope: !2595)
!2597 = !DILocation(line: 0, scope: !2235, inlinedAt: !2598)
!2598 = distinct !DILocation(line: 1967, column: 3, scope: !2547)
!2599 = !DILocation(line: 229, column: 2, scope: !2235, inlinedAt: !2598)
!2600 = !DILocation(line: 1969, column: 3, scope: !2547)
!2601 = distinct !DISubprogram(name: "vTaskStartScheduler", scope: !125, file: !125, line: 1975, type: !1054, scopeLine: 1976, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2602)
!2602 = !{!2603}
!2603 = !DILocalVariable(name: "xReturn", scope: !2601, file: !125, line: 1977, type: !176)
!2604 = !DILocation(line: 2009, column: 13, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2601, file: !125, line: 2007, column: 2)
!2606 = !DILocation(line: 0, scope: !2601)
!2607 = !DILocation(line: 2020, column: 15, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2609, file: !125, line: 2020, column: 7)
!2609 = distinct !DILexicalBlock(scope: !2601, file: !125, line: 2019, column: 2)
!2610 = !DILocation(line: 2020, column: 7, scope: !2609)
!2611 = !DILocation(line: 2022, column: 14, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2608, file: !125, line: 2021, column: 3)
!2613 = !DILocation(line: 2023, column: 3, scope: !2612)
!2614 = !DILocation(line: 2031, column: 6, scope: !2601)
!2615 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2616)
!2616 = distinct !DILocation(line: 2047, column: 3, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2618, file: !125, line: 2032, column: 2)
!2618 = distinct !DILexicalBlock(scope: !2601, file: !125, line: 2031, column: 6)
!2619 = !DILocation(line: 0, scope: !1725, inlinedAt: !2616)
!2620 = !DILocation(line: 2059, column: 24, scope: !2617)
!2621 = !DILocation(line: 2060, column: 21, scope: !2617)
!2622 = !DILocation(line: 2061, column: 14, scope: !2617)
!2623 = !DILocation(line: 2075, column: 7, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2617, file: !125, line: 2075, column: 7)
!2625 = !DILocation(line: 2084, column: 2, scope: !2617)
!2626 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2627)
!2627 = distinct !DILocation(line: 2090, column: 3, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2629, file: !125, line: 2090, column: 3)
!2629 = distinct !DILexicalBlock(scope: !2630, file: !125, line: 2090, column: 3)
!2630 = distinct !DILexicalBlock(scope: !2618, file: !125, line: 2086, column: 2)
!2631 = !DILocation(line: 0, scope: !1725, inlinedAt: !2627)
!2632 = !DILocation(line: 2090, column: 3, scope: !2628)
!2633 = !DILocation(line: 2090, column: 3, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2635, file: !125, line: 2090, column: 3)
!2635 = distinct !DILexicalBlock(scope: !2628, file: !125, line: 2090, column: 3)
!2636 = distinct !{!2636, !2637, !2637}
!2637 = !DILocation(line: 2090, column: 3, scope: !2635)
!2638 = !DILocation(line: 2096, column: 1, scope: !2601)
!2639 = distinct !DISubprogram(name: "prvIdleTask", scope: !125, file: !125, line: 3392, type: !995, scopeLine: 3393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2640)
!2640 = !{!2641}
!2641 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !2639, file: !125, line: 3392, type: !78)
!2642 = !DILocation(line: 0, scope: !2639)
!2643 = !DILocation(line: 3405, column: 2, scope: !2639)
!2644 = !DILocation(line: 3409, column: 3, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2646, file: !125, line: 3406, column: 2)
!2646 = distinct !DILexicalBlock(scope: !2647, file: !125, line: 3405, column: 2)
!2647 = distinct !DILexicalBlock(scope: !2639, file: !125, line: 3405, column: 2)
!2648 = !DILocation(line: 3432, column: 8, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2650, file: !125, line: 3432, column: 8)
!2650 = distinct !DILexicalBlock(scope: !2645, file: !125, line: 3422, column: 3)
!2651 = !DILocation(line: 3432, column: 78, scope: !2649)
!2652 = !DILocation(line: 3432, column: 8, scope: !2650)
!2653 = distinct !{!2653, !2654, !2655}
!2654 = !DILocation(line: 3405, column: 2, scope: !2647)
!2655 = !DILocation(line: 3505, column: 2, scope: !2647)
!2656 = !DILocation(line: 3434, column: 5, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2658, file: !125, line: 3434, column: 5)
!2658 = distinct !DILexicalBlock(scope: !2649, file: !125, line: 3433, column: 4)
!2659 = !{i64 2148225745}
!2660 = !{i64 2148225796}
!2661 = !DILocation(line: 3435, column: 4, scope: !2658)
!2662 = distinct !DISubprogram(name: "prvCheckTasksWaitingTermination", scope: !125, file: !125, line: 3639, type: !1054, scopeLine: 3640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2663)
!2663 = !{!2664}
!2664 = !DILocalVariable(name: "pxTCB", scope: !2665, file: !125, line: 3646, type: !123)
!2665 = distinct !DILexicalBlock(scope: !2662, file: !125, line: 3645, column: 2)
!2666 = !DILocation(line: 3650, column: 10, scope: !2665)
!2667 = !DILocation(line: 3650, column: 39, scope: !2665)
!2668 = !DILocation(line: 3650, column: 3, scope: !2665)
!2669 = !DILocation(line: 3652, column: 4, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2665, file: !125, line: 3651, column: 3)
!2671 = !DILocation(line: 3654, column: 13, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2670, file: !125, line: 3653, column: 4)
!2673 = !DILocation(line: 0, scope: !2665)
!2674 = !DILocation(line: 3655, column: 38, scope: !2672)
!2675 = !DILocation(line: 3655, column: 14, scope: !2672)
!2676 = !DILocation(line: 3656, column: 5, scope: !2672)
!2677 = !DILocation(line: 3657, column: 5, scope: !2672)
!2678 = !DILocation(line: 3659, column: 4, scope: !2670)
!2679 = !DILocation(line: 3661, column: 4, scope: !2670)
!2680 = distinct !{!2680, !2668, !2681, !1525}
!2681 = !DILocation(line: 3662, column: 3, scope: !2665)
!2682 = !DILocation(line: 3665, column: 1, scope: !2662)
!2683 = distinct !DISubprogram(name: "vTaskEndScheduler", scope: !125, file: !125, line: 2099, type: !1054, scopeLine: 2100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1056)
!2684 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2685)
!2685 = distinct !DILocation(line: 2104, column: 2, scope: !2683)
!2686 = !DILocation(line: 0, scope: !1725, inlinedAt: !2685)
!2687 = !DILocation(line: 2105, column: 20, scope: !2683)
!2688 = !DILocation(line: 2106, column: 2, scope: !2683)
!2689 = !DILocation(line: 2107, column: 1, scope: !2683)
!2690 = distinct !DISubprogram(name: "xTaskGetTickCount", scope: !125, file: !125, line: 2304, type: !2691, scopeLine: 2305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2693)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{!39}
!2693 = !{!2694}
!2694 = !DILocalVariable(name: "xTicks", scope: !2690, file: !125, line: 2306, type: !39)
!2695 = !DILocation(line: 2311, column: 12, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2690, file: !125, line: 2310, column: 2)
!2697 = !DILocation(line: 0, scope: !2690)
!2698 = !DILocation(line: 2315, column: 2, scope: !2690)
!2699 = distinct !DISubprogram(name: "xTaskGetTickCountFromISR", scope: !125, file: !125, line: 2319, type: !2691, scopeLine: 2320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2700)
!2700 = !{!2701, !2702}
!2701 = !DILocalVariable(name: "xReturn", scope: !2699, file: !125, line: 2321, type: !39)
!2702 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !2699, file: !125, line: 2322, type: !149)
!2703 = !DILocation(line: 2338, column: 2, scope: !2699)
!2704 = !DILocation(line: 0, scope: !2699)
!2705 = !DILocation(line: 2342, column: 13, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2699, file: !125, line: 2341, column: 2)
!2707 = !DILocation(line: 2346, column: 2, scope: !2699)
!2708 = distinct !DISubprogram(name: "uxTaskGetNumberOfTasks", scope: !125, file: !125, line: 2350, type: !2709, scopeLine: 2351, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1056)
!2709 = !DISubroutineType(types: !2710)
!2710 = !{!149}
!2711 = !DILocation(line: 2354, column: 9, scope: !2708)
!2712 = !DILocation(line: 2354, column: 2, scope: !2708)
!2713 = distinct !DISubprogram(name: "pcTaskGetName", scope: !125, file: !125, line: 2358, type: !2714, scopeLine: 2359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2716)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{!1128, !181}
!2716 = !{!2717, !2718}
!2717 = !DILocalVariable(name: "xTaskToQuery", arg: 1, scope: !2713, file: !125, line: 2358, type: !181)
!2718 = !DILocalVariable(name: "pxTCB", scope: !2713, file: !125, line: 2360, type: !123)
!2719 = !DILocation(line: 0, scope: !2713)
!2720 = !DILocation(line: 2364, column: 10, scope: !2713)
!2721 = !DILocation(line: 2365, column: 2, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2713, file: !125, line: 2365, column: 2)
!2723 = !DILocation(line: 2365, column: 2, scope: !2713)
!2724 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2725)
!2725 = distinct !DILocation(line: 2365, column: 2, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2722, file: !125, line: 2365, column: 2)
!2727 = !DILocation(line: 0, scope: !1725, inlinedAt: !2725)
!2728 = !DILocation(line: 2365, column: 2, scope: !2726)
!2729 = !DILocation(line: 2365, column: 2, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2731, file: !125, line: 2365, column: 2)
!2731 = distinct !DILexicalBlock(scope: !2726, file: !125, line: 2365, column: 2)
!2732 = distinct !{!2732, !2733, !2733}
!2733 = !DILocation(line: 2365, column: 2, scope: !2731)
!2734 = !DILocation(line: 2366, column: 12, scope: !2713)
!2735 = !DILocation(line: 2366, column: 2, scope: !2713)
!2736 = distinct !DISubprogram(name: "uxTaskGetSystemState", scope: !125, file: !125, line: 2505, type: !2737, scopeLine: 2506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2755)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{!149, !2739, !2753, !2754}
!2739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2740)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 32)
!2741 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskStatus_t", file: !105, line: 148, baseType: !2742)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTASK_STATUS", file: !105, line: 137, size: 288, elements: !2743)
!2743 = !{!2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !2742, file: !105, line: 139, baseType: !181, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !2742, file: !105, line: 140, baseType: !183, size: 32, offset: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "xTaskNumber", scope: !2742, file: !105, line: 141, baseType: !149, size: 32, offset: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "eCurrentState", scope: !2742, file: !105, line: 142, baseType: !2138, size: 32, offset: 96)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "uxCurrentPriority", scope: !2742, file: !105, line: 143, baseType: !149, size: 32, offset: 128)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !2742, file: !105, line: 144, baseType: !149, size: 32, offset: 160)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "ulRunTimeCounter", scope: !2742, file: !105, line: 145, baseType: !21, size: 32, offset: 192)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "pxStackBase", scope: !2742, file: !105, line: 146, baseType: !163, size: 32, offset: 224)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "usStackHighWaterMark", scope: !2742, file: !105, line: 147, baseType: !36, size: 16, offset: 256)
!2753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !149)
!2754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !624)
!2755 = !{!2756, !2757, !2758, !2759, !2760}
!2756 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !2736, file: !125, line: 2505, type: !2739)
!2757 = !DILocalVariable(name: "uxArraySize", arg: 2, scope: !2736, file: !125, line: 2505, type: !2753)
!2758 = !DILocalVariable(name: "pulTotalRunTime", arg: 3, scope: !2736, file: !125, line: 2505, type: !2754)
!2759 = !DILocalVariable(name: "uxTask", scope: !2736, file: !125, line: 2507, type: !149)
!2760 = !DILocalVariable(name: "uxQueue", scope: !2736, file: !125, line: 2507, type: !149)
!2761 = !DILocation(line: 0, scope: !2736)
!2762 = !DILocation(line: 2509, column: 3, scope: !2736)
!2763 = !DILocation(line: 2512, column: 23, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2765, file: !125, line: 2512, column: 8)
!2765 = distinct !DILexicalBlock(scope: !2736, file: !125, line: 2510, column: 3)
!2766 = !DILocation(line: 2512, column: 20, scope: !2764)
!2767 = !DILocation(line: 2512, column: 8, scope: !2765)
!2768 = !DILocation(line: 2518, column: 13, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2770, file: !125, line: 2517, column: 5)
!2770 = distinct !DILexicalBlock(scope: !2764, file: !125, line: 2513, column: 4)
!2771 = !DILocation(line: 2519, column: 49, scope: !2769)
!2772 = !DILocation(line: 2519, column: 83, scope: !2769)
!2773 = !DILocation(line: 2519, column: 16, scope: !2769)
!2774 = !DILocation(line: 2519, column: 13, scope: !2769)
!2775 = !DILocation(line: 2521, column: 22, scope: !2770)
!2776 = !DILocation(line: 2521, column: 5, scope: !2769)
!2777 = distinct !{!2777, !2778, !2779, !1525}
!2778 = !DILocation(line: 2516, column: 5, scope: !2770)
!2779 = !DILocation(line: 2521, column: 57, scope: !2770)
!2780 = !DILocation(line: 2525, column: 48, scope: !2770)
!2781 = !DILocation(line: 2525, column: 92, scope: !2770)
!2782 = !DILocation(line: 2525, column: 15, scope: !2770)
!2783 = !DILocation(line: 2525, column: 12, scope: !2770)
!2784 = !DILocation(line: 2526, column: 48, scope: !2770)
!2785 = !DILocation(line: 2526, column: 92, scope: !2770)
!2786 = !DILocation(line: 2526, column: 15, scope: !2770)
!2787 = !DILocation(line: 2526, column: 12, scope: !2770)
!2788 = !DILocation(line: 2532, column: 49, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2770, file: !125, line: 2529, column: 5)
!2790 = !DILocation(line: 2532, column: 16, scope: !2789)
!2791 = !DILocation(line: 2532, column: 13, scope: !2789)
!2792 = !DILocation(line: 2540, column: 49, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2770, file: !125, line: 2537, column: 5)
!2794 = !DILocation(line: 2540, column: 16, scope: !2793)
!2795 = !DILocation(line: 2540, column: 13, scope: !2793)
!2796 = !DILocation(line: 2557, column: 26, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2798, file: !125, line: 2557, column: 10)
!2798 = distinct !DILexicalBlock(scope: !2770, file: !125, line: 2556, column: 5)
!2799 = !DILocation(line: 2557, column: 10, scope: !2798)
!2800 = !DILocation(line: 2559, column: 24, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2797, file: !125, line: 2558, column: 6)
!2802 = !DILocation(line: 2560, column: 6, scope: !2801)
!2803 = !DILocation(line: 2569, column: 12, scope: !2736)
!2804 = !DILocation(line: 2571, column: 3, scope: !2736)
!2805 = distinct !DISubprogram(name: "prvListTasksWithinSingleList", scope: !125, file: !125, line: 3766, type: !2806, scopeLine: 3767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2808)
!2806 = !DISubroutineType(types: !2807)
!2807 = !{!149, !2740, !179, !2138}
!2808 = !{!2809, !2810, !2811, !2812, !2813, !2814, !2815, !2819}
!2809 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !2805, file: !125, line: 3766, type: !2740)
!2810 = !DILocalVariable(name: "pxList", arg: 2, scope: !2805, file: !125, line: 3766, type: !179)
!2811 = !DILocalVariable(name: "eState", arg: 3, scope: !2805, file: !125, line: 3766, type: !2138)
!2812 = !DILocalVariable(name: "pxNextTCB", scope: !2805, file: !125, line: 3768, type: !123)
!2813 = !DILocalVariable(name: "pxFirstTCB", scope: !2805, file: !125, line: 3768, type: !123)
!2814 = !DILocalVariable(name: "uxTask", scope: !2805, file: !125, line: 3769, type: !149)
!2815 = !DILocalVariable(name: "pxConstList", scope: !2816, file: !125, line: 3773, type: !2428)
!2816 = distinct !DILexicalBlock(scope: !2817, file: !125, line: 3773, column: 4)
!2817 = distinct !DILexicalBlock(scope: !2818, file: !125, line: 3772, column: 3)
!2818 = distinct !DILexicalBlock(scope: !2805, file: !125, line: 3771, column: 7)
!2819 = !DILocalVariable(name: "pxConstList", scope: !2820, file: !125, line: 3781, type: !2428)
!2820 = distinct !DILexicalBlock(scope: !2821, file: !125, line: 3781, column: 5)
!2821 = distinct !DILexicalBlock(scope: !2817, file: !125, line: 3780, column: 4)
!2822 = !DILocation(line: 0, scope: !2805)
!2823 = !DILocation(line: 3771, column: 7, scope: !2818)
!2824 = !DILocation(line: 3771, column: 41, scope: !2818)
!2825 = !DILocation(line: 3771, column: 7, scope: !2805)
!2826 = !DILocation(line: 0, scope: !2816)
!2827 = !DILocation(line: 3773, column: 4, scope: !2816)
!2828 = !DILocation(line: 3773, column: 4, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2816, file: !125, line: 3773, column: 4)
!2830 = !DILocation(line: 3773, column: 4, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2829, file: !125, line: 3773, column: 4)
!2832 = !DILocation(line: 3779, column: 4, scope: !2817)
!2833 = !DILocation(line: 3781, column: 5, scope: !2820)
!2834 = !DILocation(line: 0, scope: !2820)
!2835 = !DILocation(line: 3781, column: 5, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2820, file: !125, line: 3781, column: 5)
!2837 = !DILocation(line: 3781, column: 5, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2836, file: !125, line: 3781, column: 5)
!2839 = !DILocation(line: 3782, column: 50, scope: !2821)
!2840 = !DILocation(line: 3782, column: 5, scope: !2821)
!2841 = !DILocation(line: 3783, column: 11, scope: !2821)
!2842 = !DILocation(line: 3784, column: 23, scope: !2817)
!2843 = !DILocation(line: 3784, column: 4, scope: !2821)
!2844 = distinct !{!2844, !2832, !2845, !1525}
!2845 = !DILocation(line: 3784, column: 37, scope: !2817)
!2846 = !DILocation(line: 3791, column: 3, scope: !2805)
!2847 = distinct !DISubprogram(name: "vTaskGetInfo", scope: !125, file: !125, line: 3670, type: !2848, scopeLine: 3671, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2850)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{null, !181, !2740, !176, !2138}
!2850 = !{!2851, !2852, !2853, !2854, !2855}
!2851 = !DILocalVariable(name: "xTask", arg: 1, scope: !2847, file: !125, line: 3670, type: !181)
!2852 = !DILocalVariable(name: "pxTaskStatus", arg: 2, scope: !2847, file: !125, line: 3670, type: !2740)
!2853 = !DILocalVariable(name: "xGetFreeStackSpace", arg: 3, scope: !2847, file: !125, line: 3670, type: !176)
!2854 = !DILocalVariable(name: "eState", arg: 4, scope: !2847, file: !125, line: 3670, type: !2138)
!2855 = !DILocalVariable(name: "pxTCB", scope: !2847, file: !125, line: 3672, type: !123)
!2856 = !DILocation(line: 0, scope: !2847)
!2857 = !DILocation(line: 3675, column: 11, scope: !2847)
!2858 = !DILocation(line: 3677, column: 17, scope: !2847)
!2859 = !DILocation(line: 3677, column: 25, scope: !2847)
!2860 = !{!2861, !1015, i64 0}
!2861 = !{!"xTASK_STATUS", !1015, i64 0, !1015, i64 4, !1023, i64 8, !1016, i64 12, !1023, i64 16, !1023, i64 20, !1020, i64 24, !1015, i64 28, !2862, i64 32}
!2862 = !{!"short", !1016, i64 0}
!2863 = !DILocation(line: 3678, column: 50, scope: !2847)
!2864 = !DILocation(line: 3678, column: 17, scope: !2847)
!2865 = !DILocation(line: 3678, column: 28, scope: !2847)
!2866 = !{!2861, !1015, i64 4}
!2867 = !DILocation(line: 3679, column: 44, scope: !2847)
!2868 = !DILocation(line: 3679, column: 17, scope: !2847)
!2869 = !DILocation(line: 3679, column: 35, scope: !2847)
!2870 = !{!2861, !1023, i64 16}
!2871 = !DILocation(line: 3680, column: 38, scope: !2847)
!2872 = !DILocation(line: 3680, column: 17, scope: !2847)
!2873 = !DILocation(line: 3680, column: 29, scope: !2847)
!2874 = !{!2861, !1015, i64 28}
!2875 = !DILocation(line: 3681, column: 38, scope: !2847)
!2876 = !DILocation(line: 3681, column: 17, scope: !2847)
!2877 = !DILocation(line: 3681, column: 29, scope: !2847)
!2878 = !{!2861, !1023, i64 8}
!2879 = !DILocation(line: 3685, column: 42, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2847, file: !125, line: 3684, column: 3)
!2881 = !DILocation(line: 3685, column: 18, scope: !2880)
!2882 = !DILocation(line: 3685, column: 33, scope: !2880)
!2883 = !{!2861, !1023, i64 20}
!2884 = !DILocation(line: 3699, column: 18, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2847, file: !125, line: 3698, column: 3)
!2886 = !DILocation(line: 3699, column: 35, scope: !2885)
!2887 = !{!2861, !1020, i64 24}
!2888 = !DILocation(line: 3706, column: 14, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2847, file: !125, line: 3706, column: 7)
!2890 = !DILocation(line: 3706, column: 7, scope: !2847)
!2891 = !DILocation(line: 3708, column: 17, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2893, file: !125, line: 3708, column: 8)
!2893 = distinct !DILexicalBlock(scope: !2889, file: !125, line: 3707, column: 3)
!2894 = !DILocation(line: 3708, column: 14, scope: !2892)
!2895 = !DILocation(line: 0, scope: !2892)
!2896 = !DILocation(line: 3708, column: 8, scope: !2893)
!2897 = !DILocation(line: 3710, column: 33, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2892, file: !125, line: 3709, column: 4)
!2899 = !{!2861, !1016, i64 12}
!2900 = !DILocation(line: 3711, column: 4, scope: !2898)
!2901 = !DILocation(line: 3714, column: 33, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2892, file: !125, line: 3713, column: 4)
!2903 = !DILocation(line: 3721, column: 17, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2905, file: !125, line: 3721, column: 10)
!2905 = distinct !DILexicalBlock(scope: !2902, file: !125, line: 3717, column: 5)
!2906 = !DILocation(line: 3721, column: 10, scope: !2905)
!2907 = !DILocation(line: 3723, column: 7, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2904, file: !125, line: 3722, column: 6)
!2909 = !DILocation(line: 3725, column: 12, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2911, file: !125, line: 3725, column: 12)
!2911 = distinct !DILexicalBlock(scope: !2908, file: !125, line: 3724, column: 7)
!2912 = !DILocation(line: 3725, column: 66, scope: !2910)
!2913 = !DILocation(line: 3725, column: 12, scope: !2911)
!2914 = !DILocation(line: 3727, column: 37, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2910, file: !125, line: 3726, column: 8)
!2916 = !DILocation(line: 3728, column: 8, scope: !2915)
!2917 = !DILocation(line: 3730, column: 16, scope: !2908)
!2918 = !DILocation(line: 3731, column: 6, scope: !2908)
!2919 = !DILocation(line: 3738, column: 34, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2889, file: !125, line: 3737, column: 3)
!2921 = !DILocation(line: 3738, column: 18, scope: !2920)
!2922 = !DILocation(line: 3738, column: 32, scope: !2920)
!2923 = !DILocation(line: 3743, column: 26, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2847, file: !125, line: 3743, column: 7)
!2925 = !DILocation(line: 3743, column: 7, scope: !2847)
!2926 = !DILocation(line: 3751, column: 91, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2928, file: !125, line: 3750, column: 4)
!2928 = distinct !DILexicalBlock(scope: !2924, file: !125, line: 3744, column: 3)
!2929 = !DILocation(line: 3751, column: 42, scope: !2927)
!2930 = !DILocation(line: 3754, column: 3, scope: !2928)
!2931 = !DILocation(line: 0, scope: !2924)
!2932 = !DILocation(line: 3757, column: 18, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2924, file: !125, line: 3756, column: 3)
!2934 = !DILocation(line: 3757, column: 39, scope: !2933)
!2935 = !DILocation(line: 3759, column: 2, scope: !2847)
!2936 = distinct !DISubprogram(name: "prvTaskCheckFreeStackSpace", scope: !125, file: !125, line: 3799, type: !2937, scopeLine: 3800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2940)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{!36, !2939}
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 32)
!2940 = !{!2941, !2942}
!2941 = !DILocalVariable(name: "pucStackByte", arg: 1, scope: !2936, file: !125, line: 3799, type: !2939)
!2942 = !DILocalVariable(name: "ulCount", scope: !2936, file: !125, line: 3801, type: !21)
!2943 = !DILocation(line: 0, scope: !2936)
!2944 = !DILocation(line: 3803, column: 10, scope: !2936)
!2945 = !DILocation(line: 3803, column: 24, scope: !2936)
!2946 = !DILocation(line: 3803, column: 3, scope: !2936)
!2947 = !DILocation(line: 3805, column: 17, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2936, file: !125, line: 3804, column: 3)
!2949 = !DILocation(line: 3806, column: 11, scope: !2948)
!2950 = distinct !{!2950, !2946, !2951, !1525}
!2951 = !DILocation(line: 3807, column: 3, scope: !2936)
!2952 = !DILocation(line: 3809, column: 11, scope: !2936)
!2953 = !DILocation(line: 3811, column: 3, scope: !2936)
!2954 = distinct !DISubprogram(name: "xTaskCatchUpTicks", scope: !125, file: !125, line: 2609, type: !2955, scopeLine: 2610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2957)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{!176, !39}
!2957 = !{!2958, !2959}
!2958 = !DILocalVariable(name: "xTicksToCatchUp", arg: 1, scope: !2954, file: !125, line: 2609, type: !39)
!2959 = !DILocalVariable(name: "xYieldRequired", scope: !2954, file: !125, line: 2611, type: !176)
!2960 = !DILocation(line: 0, scope: !2954)
!2961 = !DILocation(line: 2615, column: 2, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2954, file: !125, line: 2615, column: 2)
!2963 = !DILocation(line: 2615, column: 2, scope: !2954)
!2964 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2965)
!2965 = distinct !DILocation(line: 2615, column: 2, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2962, file: !125, line: 2615, column: 2)
!2967 = !DILocation(line: 0, scope: !1725, inlinedAt: !2965)
!2968 = !DILocation(line: 2615, column: 2, scope: !2966)
!2969 = !DILocation(line: 2615, column: 2, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2971, file: !125, line: 2615, column: 2)
!2971 = distinct !DILexicalBlock(scope: !2966, file: !125, line: 2615, column: 2)
!2972 = distinct !{!2972, !2973, !2973}
!2973 = !DILocation(line: 2615, column: 2, scope: !2971)
!2974 = !DILocation(line: 2619, column: 2, scope: !2954)
!2975 = !DILocation(line: 2620, column: 15, scope: !2954)
!2976 = !DILocation(line: 2621, column: 19, scope: !2954)
!2977 = !DILocation(line: 2623, column: 2, scope: !2954)
!2978 = distinct !DISubprogram(name: "vTaskPlaceOnEventList", scope: !125, file: !125, line: 3064, type: !2979, scopeLine: 3065, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !2981)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{null, !2428, !1774}
!2981 = !{!2982, !2983}
!2982 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !2978, file: !125, line: 3064, type: !2428)
!2983 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !2978, file: !125, line: 3064, type: !1774)
!2984 = !DILocation(line: 0, scope: !2978)
!2985 = !DILocation(line: 3066, column: 2, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2978, file: !125, line: 3066, column: 2)
!2987 = !DILocation(line: 3066, column: 2, scope: !2978)
!2988 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !2989)
!2989 = distinct !DILocation(line: 3066, column: 2, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2986, file: !125, line: 3066, column: 2)
!2991 = !DILocation(line: 0, scope: !1725, inlinedAt: !2989)
!2992 = !DILocation(line: 3066, column: 2, scope: !2990)
!2993 = !DILocation(line: 3066, column: 2, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2995, file: !125, line: 3066, column: 2)
!2995 = distinct !DILexicalBlock(scope: !2990, file: !125, line: 3066, column: 2)
!2996 = distinct !{!2996, !2997, !2997}
!2997 = !DILocation(line: 3066, column: 2, scope: !2995)
!2998 = !DILocation(line: 3075, column: 31, scope: !2978)
!2999 = !DILocation(line: 3075, column: 45, scope: !2978)
!3000 = !DILocation(line: 3075, column: 2, scope: !2978)
!3001 = !DILocation(line: 3077, column: 2, scope: !2978)
!3002 = !DILocation(line: 3078, column: 1, scope: !2978)
!3003 = distinct !DISubprogram(name: "vTaskPlaceOnUnorderedEventList", scope: !125, file: !125, line: 3081, type: !3004, scopeLine: 3082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3006)
!3004 = !DISubroutineType(types: !3005)
!3005 = !{null, !179, !1774, !1774}
!3006 = !{!3007, !3008, !3009}
!3007 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !3003, file: !125, line: 3081, type: !179)
!3008 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !3003, file: !125, line: 3081, type: !1774)
!3009 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !3003, file: !125, line: 3081, type: !1774)
!3010 = !DILocation(line: 0, scope: !3003)
!3011 = !DILocation(line: 3083, column: 2, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3003, file: !125, line: 3083, column: 2)
!3013 = !DILocation(line: 3083, column: 2, scope: !3003)
!3014 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3015)
!3015 = distinct !DILocation(line: 3083, column: 2, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3012, file: !125, line: 3083, column: 2)
!3017 = !DILocation(line: 0, scope: !1725, inlinedAt: !3015)
!3018 = !DILocation(line: 3083, column: 2, scope: !3016)
!3019 = !DILocation(line: 3083, column: 2, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3021, file: !125, line: 3083, column: 2)
!3021 = distinct !DILexicalBlock(scope: !3016, file: !125, line: 3083, column: 2)
!3022 = distinct !{!3022, !3023, !3023}
!3023 = !DILocation(line: 3083, column: 2, scope: !3021)
!3024 = !DILocation(line: 3087, column: 2, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3003, file: !125, line: 3087, column: 2)
!3026 = !DILocation(line: 3087, column: 2, scope: !3003)
!3027 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3028)
!3028 = distinct !DILocation(line: 3087, column: 2, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3025, file: !125, line: 3087, column: 2)
!3030 = !DILocation(line: 0, scope: !1725, inlinedAt: !3028)
!3031 = !DILocation(line: 3087, column: 2, scope: !3029)
!3032 = !DILocation(line: 3087, column: 2, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !125, line: 3087, column: 2)
!3034 = distinct !DILexicalBlock(scope: !3029, file: !125, line: 3087, column: 2)
!3035 = distinct !{!3035, !3036, !3036}
!3036 = !DILocation(line: 3087, column: 2, scope: !3034)
!3037 = !DILocation(line: 3092, column: 2, scope: !3003)
!3038 = !DILocation(line: 3099, column: 34, scope: !3003)
!3039 = !DILocation(line: 3099, column: 48, scope: !3003)
!3040 = !DILocation(line: 3099, column: 2, scope: !3003)
!3041 = !DILocation(line: 3101, column: 2, scope: !3003)
!3042 = !DILocation(line: 3102, column: 1, scope: !3003)
!3043 = distinct !DISubprogram(name: "vTaskPlaceOnEventListRestricted", scope: !125, file: !125, line: 3107, type: !3044, scopeLine: 3108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3046)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{null, !2428, !39, !1864}
!3046 = !{!3047, !3048, !3049}
!3047 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !3043, file: !125, line: 3107, type: !2428)
!3048 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !3043, file: !125, line: 3107, type: !39)
!3049 = !DILocalVariable(name: "xWaitIndefinitely", arg: 3, scope: !3043, file: !125, line: 3107, type: !1864)
!3050 = !DILocation(line: 0, scope: !3043)
!3051 = !DILocation(line: 3109, column: 3, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3043, file: !125, line: 3109, column: 3)
!3053 = !DILocation(line: 3109, column: 3, scope: !3043)
!3054 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3055)
!3055 = distinct !DILocation(line: 3109, column: 3, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3052, file: !125, line: 3109, column: 3)
!3057 = !DILocation(line: 0, scope: !1725, inlinedAt: !3055)
!3058 = !DILocation(line: 3109, column: 3, scope: !3056)
!3059 = !DILocation(line: 3109, column: 3, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3061, file: !125, line: 3109, column: 3)
!3061 = distinct !DILexicalBlock(scope: !3056, file: !125, line: 3109, column: 3)
!3062 = distinct !{!3062, !3063, !3063}
!3063 = !DILocation(line: 3109, column: 3, scope: !3061)
!3064 = !DILocation(line: 3121, column: 35, scope: !3043)
!3065 = !DILocation(line: 3121, column: 49, scope: !3043)
!3066 = !DILocation(line: 3121, column: 3, scope: !3043)
!3067 = !DILocation(line: 3126, column: 25, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3043, file: !125, line: 3126, column: 7)
!3069 = !DILocation(line: 3126, column: 7, scope: !3043)
!3070 = !DILocation(line: 3132, column: 3, scope: !3043)
!3071 = !DILocation(line: 3133, column: 2, scope: !3043)
!3072 = distinct !DISubprogram(name: "xTaskRemoveFromEventList", scope: !125, file: !125, line: 3138, type: !3073, scopeLine: 3139, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3076)
!3073 = !DISubroutineType(types: !3074)
!3074 = !{!176, !3075}
!3075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2143)
!3076 = !{!3077, !3078, !3079}
!3077 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !3072, file: !125, line: 3138, type: !3075)
!3078 = !DILocalVariable(name: "pxUnblockedTCB", scope: !3072, file: !125, line: 3140, type: !123)
!3079 = !DILocalVariable(name: "xReturn", scope: !3072, file: !125, line: 3141, type: !176)
!3080 = !DILocation(line: 0, scope: !3072)
!3081 = !DILocation(line: 3156, column: 19, scope: !3072)
!3082 = !DILocation(line: 3157, column: 2, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3072, file: !125, line: 3157, column: 2)
!3084 = !DILocation(line: 3157, column: 2, scope: !3072)
!3085 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3086)
!3086 = distinct !DILocation(line: 3157, column: 2, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3083, file: !125, line: 3157, column: 2)
!3088 = !DILocation(line: 0, scope: !1725, inlinedAt: !3086)
!3089 = !DILocation(line: 3157, column: 2, scope: !3087)
!3090 = !DILocation(line: 3157, column: 2, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3092, file: !125, line: 3157, column: 2)
!3092 = distinct !DILexicalBlock(scope: !3087, file: !125, line: 3157, column: 2)
!3093 = distinct !{!3093, !3094, !3094}
!3094 = !DILocation(line: 3157, column: 2, scope: !3092)
!3095 = !DILocation(line: 3158, column: 44, scope: !3072)
!3096 = !DILocation(line: 3158, column: 11, scope: !3072)
!3097 = !DILocation(line: 3160, column: 6, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3072, file: !125, line: 3160, column: 6)
!3099 = !DILocation(line: 3160, column: 27, scope: !3098)
!3100 = !DILocation(line: 3160, column: 6, scope: !3072)
!3101 = !DILocation(line: 3162, column: 45, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3098, file: !125, line: 3161, column: 2)
!3103 = !DILocation(line: 3162, column: 12, scope: !3102)
!3104 = !DILocation(line: 3163, column: 3, scope: !3102)
!3105 = !DILocation(line: 3178, column: 2, scope: !3102)
!3106 = !DILocation(line: 3183, column: 3, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3098, file: !125, line: 3180, column: 2)
!3108 = !DILocation(line: 3186, column: 22, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3072, file: !125, line: 3186, column: 6)
!3110 = !DILocation(line: 3186, column: 35, scope: !3109)
!3111 = !DILocation(line: 3186, column: 49, scope: !3109)
!3112 = !DILocation(line: 3186, column: 33, scope: !3109)
!3113 = !DILocation(line: 3186, column: 6, scope: !3072)
!3114 = !DILocation(line: 3195, column: 17, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3109, file: !125, line: 3187, column: 2)
!3116 = !DILocation(line: 3196, column: 2, scope: !3115)
!3117 = !DILocation(line: 0, scope: !3109)
!3118 = !DILocation(line: 3202, column: 2, scope: !3072)
!3119 = distinct !DISubprogram(name: "vTaskRemoveFromUnorderedEventList", scope: !125, file: !125, line: 3206, type: !3120, scopeLine: 3207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3122)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{null, !152, !1774}
!3122 = !{!3123, !3124, !3125}
!3123 = !DILocalVariable(name: "pxEventListItem", arg: 1, scope: !3119, file: !125, line: 3206, type: !152)
!3124 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !3119, file: !125, line: 3206, type: !1774)
!3125 = !DILocalVariable(name: "pxUnblockedTCB", scope: !3119, file: !125, line: 3208, type: !123)
!3126 = !DILocation(line: 0, scope: !3119)
!3127 = !DILocation(line: 3212, column: 2, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3119, file: !125, line: 3212, column: 2)
!3129 = !DILocation(line: 3212, column: 2, scope: !3119)
!3130 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3131)
!3131 = distinct !DILocation(line: 3212, column: 2, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3128, file: !125, line: 3212, column: 2)
!3133 = !DILocation(line: 0, scope: !1725, inlinedAt: !3131)
!3134 = !DILocation(line: 3212, column: 2, scope: !3132)
!3135 = !DILocation(line: 3212, column: 2, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3137, file: !125, line: 3212, column: 2)
!3137 = distinct !DILexicalBlock(scope: !3132, file: !125, line: 3212, column: 2)
!3138 = distinct !{!3138, !3139, !3139}
!3139 = !DILocation(line: 3212, column: 2, scope: !3137)
!3140 = !DILocation(line: 3215, column: 2, scope: !3119)
!3141 = !{!1464, !1020, i64 0}
!3142 = !DILocation(line: 3219, column: 19, scope: !3119)
!3143 = !DILocation(line: 3220, column: 2, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3119, file: !125, line: 3220, column: 2)
!3145 = !DILocation(line: 3220, column: 2, scope: !3119)
!3146 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3147)
!3147 = distinct !DILocation(line: 3220, column: 2, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3144, file: !125, line: 3220, column: 2)
!3149 = !DILocation(line: 0, scope: !1725, inlinedAt: !3147)
!3150 = !DILocation(line: 3220, column: 2, scope: !3148)
!3151 = !DILocation(line: 3220, column: 2, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3153, file: !125, line: 3220, column: 2)
!3153 = distinct !DILexicalBlock(scope: !3148, file: !125, line: 3220, column: 2)
!3154 = distinct !{!3154, !3155, !3155}
!3155 = !DILocation(line: 3220, column: 2, scope: !3153)
!3156 = !DILocation(line: 3221, column: 11, scope: !3119)
!3157 = !DILocation(line: 3240, column: 44, scope: !3119)
!3158 = !DILocation(line: 3240, column: 11, scope: !3119)
!3159 = !DILocation(line: 3241, column: 2, scope: !3119)
!3160 = !DILocation(line: 3243, column: 22, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3119, file: !125, line: 3243, column: 6)
!3162 = !DILocation(line: 3243, column: 35, scope: !3161)
!3163 = !DILocation(line: 3243, column: 49, scope: !3161)
!3164 = !DILocation(line: 3243, column: 33, scope: !3161)
!3165 = !DILocation(line: 3243, column: 6, scope: !3119)
!3166 = !DILocation(line: 3249, column: 17, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3161, file: !125, line: 3244, column: 2)
!3168 = !DILocation(line: 3250, column: 2, scope: !3167)
!3169 = !DILocation(line: 3251, column: 1, scope: !3119)
!3170 = distinct !DISubprogram(name: "vTaskSetTimeOutState", scope: !125, file: !125, line: 3254, type: !3171, scopeLine: 3255, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3180)
!3171 = !DISubroutineType(types: !3172)
!3172 = !{null, !3173}
!3173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3174)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 32)
!3175 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !105, line: 106, baseType: !3176)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !105, line: 102, size: 64, elements: !3177)
!3177 = !{!3178, !3179}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !3176, file: !105, line: 104, baseType: !176, size: 32)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !3176, file: !105, line: 105, baseType: !39, size: 32, offset: 32)
!3180 = !{!3181}
!3181 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !3170, file: !125, line: 3254, type: !3173)
!3182 = !DILocation(line: 0, scope: !3170)
!3183 = !DILocation(line: 3256, column: 2, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3170, file: !125, line: 3256, column: 2)
!3185 = !DILocation(line: 3256, column: 2, scope: !3170)
!3186 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3187)
!3187 = distinct !DILocation(line: 3256, column: 2, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3184, file: !125, line: 3256, column: 2)
!3189 = !DILocation(line: 0, scope: !1725, inlinedAt: !3187)
!3190 = !DILocation(line: 3256, column: 2, scope: !3188)
!3191 = !DILocation(line: 3256, column: 2, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3193, file: !125, line: 3256, column: 2)
!3193 = distinct !DILexicalBlock(scope: !3188, file: !125, line: 3256, column: 2)
!3194 = distinct !{!3194, !3195, !3195}
!3195 = !DILocation(line: 3256, column: 2, scope: !3193)
!3196 = !DILocation(line: 3257, column: 2, scope: !3170)
!3197 = !DILocation(line: 3259, column: 31, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3170, file: !125, line: 3258, column: 2)
!3199 = !DILocation(line: 3259, column: 14, scope: !3198)
!3200 = !DILocation(line: 3259, column: 29, scope: !3198)
!3201 = !{!3202, !1023, i64 0}
!3202 = !{!"xTIME_OUT", !1023, i64 0, !1020, i64 4}
!3203 = !DILocation(line: 3260, column: 32, scope: !3198)
!3204 = !DILocation(line: 3260, column: 14, scope: !3198)
!3205 = !DILocation(line: 3260, column: 30, scope: !3198)
!3206 = !{!3202, !1020, i64 4}
!3207 = !DILocation(line: 3262, column: 2, scope: !3170)
!3208 = !DILocation(line: 3263, column: 1, scope: !3170)
!3209 = distinct !DISubprogram(name: "vTaskInternalSetTimeOutState", scope: !125, file: !125, line: 3266, type: !3171, scopeLine: 3267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3210)
!3210 = !{!3211}
!3211 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !3209, file: !125, line: 3266, type: !3173)
!3212 = !DILocation(line: 0, scope: !3209)
!3213 = !DILocation(line: 3269, column: 30, scope: !3209)
!3214 = !DILocation(line: 3269, column: 13, scope: !3209)
!3215 = !DILocation(line: 3269, column: 28, scope: !3209)
!3216 = !DILocation(line: 3270, column: 31, scope: !3209)
!3217 = !DILocation(line: 3270, column: 13, scope: !3209)
!3218 = !DILocation(line: 3270, column: 29, scope: !3209)
!3219 = !DILocation(line: 3271, column: 1, scope: !3209)
!3220 = distinct !DISubprogram(name: "xTaskCheckForTimeOut", scope: !125, file: !125, line: 3274, type: !3221, scopeLine: 3275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3223)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{!176, !3173, !1772}
!3223 = !{!3224, !3225, !3226, !3227, !3229}
!3224 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !3220, file: !125, line: 3274, type: !3173)
!3225 = !DILocalVariable(name: "pxTicksToWait", arg: 2, scope: !3220, file: !125, line: 3274, type: !1772)
!3226 = !DILocalVariable(name: "xReturn", scope: !3220, file: !125, line: 3276, type: !176)
!3227 = !DILocalVariable(name: "xConstTickCount", scope: !3228, file: !125, line: 3284, type: !1774)
!3228 = distinct !DILexicalBlock(scope: !3220, file: !125, line: 3282, column: 2)
!3229 = !DILocalVariable(name: "xElapsedTime", scope: !3228, file: !125, line: 3285, type: !1774)
!3230 = !DILocation(line: 0, scope: !3220)
!3231 = !DILocation(line: 3278, column: 2, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3220, file: !125, line: 3278, column: 2)
!3233 = !DILocation(line: 3278, column: 2, scope: !3220)
!3234 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3235)
!3235 = distinct !DILocation(line: 3278, column: 2, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3232, file: !125, line: 3278, column: 2)
!3237 = !DILocation(line: 0, scope: !1725, inlinedAt: !3235)
!3238 = !DILocation(line: 3278, column: 2, scope: !3236)
!3239 = !DILocation(line: 3278, column: 2, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3241, file: !125, line: 3278, column: 2)
!3241 = distinct !DILexicalBlock(scope: !3236, file: !125, line: 3278, column: 2)
!3242 = distinct !{!3242, !3243, !3243}
!3243 = !DILocation(line: 3278, column: 2, scope: !3241)
!3244 = !DILocation(line: 3279, column: 2, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3220, file: !125, line: 3279, column: 2)
!3246 = !DILocation(line: 3279, column: 2, scope: !3220)
!3247 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3248)
!3248 = distinct !DILocation(line: 3279, column: 2, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3245, file: !125, line: 3279, column: 2)
!3250 = !DILocation(line: 0, scope: !1725, inlinedAt: !3248)
!3251 = !DILocation(line: 3279, column: 2, scope: !3249)
!3252 = !DILocation(line: 3279, column: 2, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3254, file: !125, line: 3279, column: 2)
!3254 = distinct !DILexicalBlock(scope: !3249, file: !125, line: 3279, column: 2)
!3255 = distinct !{!3255, !3256, !3256}
!3256 = !DILocation(line: 3279, column: 2, scope: !3254)
!3257 = !DILocation(line: 3281, column: 2, scope: !3220)
!3258 = !DILocation(line: 3284, column: 38, scope: !3228)
!3259 = !DILocation(line: 0, scope: !3228)
!3260 = !DILocation(line: 3285, column: 64, scope: !3228)
!3261 = !DILocation(line: 3285, column: 51, scope: !3228)
!3262 = !DILocation(line: 3299, column: 8, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3228, file: !125, line: 3299, column: 8)
!3264 = !DILocation(line: 3299, column: 23, scope: !3263)
!3265 = !DILocation(line: 3299, column: 8, scope: !3228)
!3266 = !DILocation(line: 3309, column: 9, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3263, file: !125, line: 3309, column: 7)
!3268 = !DILocation(line: 3309, column: 39, scope: !3267)
!3269 = !DILocation(line: 3309, column: 25, scope: !3267)
!3270 = !DILocation(line: 3309, column: 56, scope: !3267)
!3271 = !DILocation(line: 3318, column: 25, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3267, file: !125, line: 3318, column: 12)
!3273 = !DILocation(line: 3318, column: 12, scope: !3267)
!3274 = !DILocation(line: 3321, column: 19, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3272, file: !125, line: 3319, column: 3)
!3276 = !DILocation(line: 3322, column: 4, scope: !3275)
!3277 = !DILocation(line: 3324, column: 3, scope: !3275)
!3278 = !DILocation(line: 3327, column: 19, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3272, file: !125, line: 3326, column: 3)
!3280 = !DILocation(line: 0, scope: !3263)
!3281 = !DILocation(line: 3331, column: 2, scope: !3220)
!3282 = !DILocation(line: 3333, column: 2, scope: !3220)
!3283 = distinct !DISubprogram(name: "vTaskMissedYield", scope: !125, file: !125, line: 3337, type: !1054, scopeLine: 3338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1056)
!3284 = !DILocation(line: 3339, column: 16, scope: !3283)
!3285 = !DILocation(line: 3340, column: 1, scope: !3283)
!3286 = distinct !DISubprogram(name: "uxTaskGetTaskNumber", scope: !125, file: !125, line: 3345, type: !3287, scopeLine: 3346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3289)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!149, !181}
!3289 = !{!3290, !3291, !3292}
!3290 = !DILocalVariable(name: "xTask", arg: 1, scope: !3286, file: !125, line: 3345, type: !181)
!3291 = !DILocalVariable(name: "uxReturn", scope: !3286, file: !125, line: 3347, type: !149)
!3292 = !DILocalVariable(name: "pxTCB", scope: !3286, file: !125, line: 3348, type: !2149)
!3293 = !DILocation(line: 0, scope: !3286)
!3294 = !DILocation(line: 3350, column: 13, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3286, file: !125, line: 3350, column: 7)
!3296 = !DILocation(line: 3350, column: 7, scope: !3286)
!3297 = !DILocation(line: 3353, column: 22, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3295, file: !125, line: 3351, column: 3)
!3299 = !{!1463, !1023, i64 68}
!3300 = !DILocation(line: 3354, column: 3, scope: !3298)
!3301 = !DILocation(line: 0, scope: !3295)
!3302 = !DILocation(line: 3360, column: 3, scope: !3286)
!3303 = distinct !DISubprogram(name: "vTaskSetTaskNumber", scope: !125, file: !125, line: 3368, type: !3304, scopeLine: 3369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3306)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{null, !181, !2753}
!3306 = !{!3307, !3308, !3309}
!3307 = !DILocalVariable(name: "xTask", arg: 1, scope: !3303, file: !125, line: 3368, type: !181)
!3308 = !DILocalVariable(name: "uxHandle", arg: 2, scope: !3303, file: !125, line: 3368, type: !2753)
!3309 = !DILocalVariable(name: "pxTCB", scope: !3303, file: !125, line: 3370, type: !123)
!3310 = !DILocation(line: 0, scope: !3303)
!3311 = !DILocation(line: 3372, column: 13, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3303, file: !125, line: 3372, column: 7)
!3313 = !DILocation(line: 3372, column: 7, scope: !3303)
!3314 = !DILocation(line: 3375, column: 11, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3312, file: !125, line: 3373, column: 3)
!3316 = !DILocation(line: 3375, column: 24, scope: !3315)
!3317 = !DILocation(line: 3376, column: 3, scope: !3315)
!3318 = !DILocation(line: 3377, column: 2, scope: !3303)
!3319 = distinct !DISubprogram(name: "xTaskGetCurrentTaskHandle", scope: !125, file: !125, line: 3969, type: !3320, scopeLine: 3970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3322)
!3320 = !DISubroutineType(types: !3321)
!3321 = !{!181}
!3322 = !{!3323}
!3323 = !DILocalVariable(name: "xReturn", scope: !3319, file: !125, line: 3971, type: !181)
!3324 = !DILocation(line: 3976, column: 13, scope: !3319)
!3325 = !DILocation(line: 0, scope: !3319)
!3326 = !DILocation(line: 3978, column: 3, scope: !3319)
!3327 = distinct !DISubprogram(name: "xTaskGetSchedulerState", scope: !125, file: !125, line: 3986, type: !1916, scopeLine: 3987, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3328)
!3328 = !{!3329}
!3329 = !DILocalVariable(name: "xReturn", scope: !3327, file: !125, line: 3988, type: !176)
!3330 = !DILocation(line: 3990, column: 7, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3327, file: !125, line: 3990, column: 7)
!3332 = !DILocation(line: 3990, column: 25, scope: !3331)
!3333 = !DILocation(line: 3990, column: 7, scope: !3327)
!3334 = !DILocation(line: 3996, column: 8, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3336, file: !125, line: 3996, column: 8)
!3336 = distinct !DILexicalBlock(scope: !3331, file: !125, line: 3995, column: 3)
!3337 = !DILocation(line: 3996, column: 29, scope: !3335)
!3338 = !DILocation(line: 0, scope: !3331)
!3339 = !DILocation(line: 0, scope: !3327)
!3340 = !DILocation(line: 4006, column: 3, scope: !3327)
!3341 = distinct !DISubprogram(name: "xTaskPriorityInherit", scope: !125, file: !125, line: 4014, type: !2519, scopeLine: 4015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3342)
!3342 = !{!3343, !3344, !3345}
!3343 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !3341, file: !125, line: 4014, type: !2201)
!3344 = !DILocalVariable(name: "pxMutexHolderTCB", scope: !3341, file: !125, line: 4016, type: !2473)
!3345 = !DILocalVariable(name: "xReturn", scope: !3341, file: !125, line: 4017, type: !176)
!3346 = !DILocation(line: 0, scope: !3341)
!3347 = !DILocation(line: 4022, column: 21, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3341, file: !125, line: 4022, column: 7)
!3349 = !DILocation(line: 4022, column: 7, scope: !3341)
!3350 = !DILocation(line: 4027, column: 26, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3352, file: !125, line: 4027, column: 8)
!3352 = distinct !DILexicalBlock(scope: !3348, file: !125, line: 4023, column: 3)
!3353 = !DILocation(line: 4027, column: 39, scope: !3351)
!3354 = !DILocation(line: 4027, column: 53, scope: !3351)
!3355 = !DILocation(line: 4027, column: 37, scope: !3351)
!3356 = !DILocation(line: 4027, column: 8, scope: !3352)
!3357 = !DILocation(line: 4032, column: 11, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3359, file: !125, line: 4032, column: 9)
!3359 = distinct !DILexicalBlock(scope: !3351, file: !125, line: 4028, column: 4)
!3360 = !DILocation(line: 4032, column: 113, scope: !3358)
!3361 = !DILocation(line: 4032, column: 9, scope: !3359)
!3362 = !DILocation(line: 4034, column: 6, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3358, file: !125, line: 4033, column: 5)
!3364 = !DILocation(line: 4035, column: 5, scope: !3363)
!3365 = !DILocation(line: 4043, column: 9, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3359, file: !125, line: 4043, column: 9)
!3367 = !DILocation(line: 4043, column: 9, scope: !3359)
!3368 = !DILocation(line: 4045, column: 10, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3370, file: !125, line: 4045, column: 10)
!3370 = distinct !DILexicalBlock(scope: !3366, file: !125, line: 4044, column: 5)
!3371 = !DILocation(line: 4045, column: 64, scope: !3369)
!3372 = !DILocation(line: 4045, column: 10, scope: !3370)
!3373 = !DILocation(line: 4050, column: 7, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3369, file: !125, line: 4046, column: 6)
!3375 = !DILocation(line: 4051, column: 6, scope: !3374)
!3376 = !DILocation(line: 4058, column: 37, scope: !3370)
!3377 = !DILocation(line: 4058, column: 51, scope: !3370)
!3378 = !DILocation(line: 4058, column: 35, scope: !3370)
!3379 = !DILocation(line: 4059, column: 6, scope: !3370)
!3380 = !DILocation(line: 4060, column: 5, scope: !3370)
!3381 = !DILocation(line: 4064, column: 37, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3366, file: !125, line: 4062, column: 5)
!3383 = !DILocation(line: 4064, column: 51, scope: !3382)
!3384 = !DILocation(line: 4064, column: 35, scope: !3382)
!3385 = !DILocation(line: 4074, column: 27, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !125, line: 4074, column: 9)
!3387 = distinct !DILexicalBlock(scope: !3351, file: !125, line: 4073, column: 4)
!3388 = !DILocation(line: 4074, column: 44, scope: !3386)
!3389 = !DILocation(line: 4074, column: 58, scope: !3386)
!3390 = !DILocation(line: 4074, column: 42, scope: !3386)
!3391 = !DILocation(line: 4074, column: 9, scope: !3387)
!3392 = !DILocation(line: 4096, column: 3, scope: !3341)
!3393 = distinct !DISubprogram(name: "xTaskPriorityDisinherit", scope: !125, file: !125, line: 4104, type: !2519, scopeLine: 4105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3394)
!3394 = !{!3395, !3396, !3397}
!3395 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !3393, file: !125, line: 4104, type: !2201)
!3396 = !DILocalVariable(name: "pxTCB", scope: !3393, file: !125, line: 4106, type: !2473)
!3397 = !DILocalVariable(name: "xReturn", scope: !3393, file: !125, line: 4107, type: !176)
!3398 = !DILocation(line: 0, scope: !3393)
!3399 = !DILocation(line: 4109, column: 21, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3393, file: !125, line: 4109, column: 7)
!3401 = !DILocation(line: 4109, column: 7, scope: !3393)
!3402 = !DILocation(line: 4115, column: 4, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !125, line: 4115, column: 4)
!3404 = distinct !DILexicalBlock(scope: !3400, file: !125, line: 4110, column: 3)
!3405 = !DILocation(line: 4115, column: 4, scope: !3404)
!3406 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3407)
!3407 = distinct !DILocation(line: 4115, column: 4, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3403, file: !125, line: 4115, column: 4)
!3409 = !DILocation(line: 0, scope: !1725, inlinedAt: !3407)
!3410 = !DILocation(line: 4115, column: 4, scope: !3408)
!3411 = !DILocation(line: 4115, column: 4, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !125, line: 4115, column: 4)
!3413 = distinct !DILexicalBlock(scope: !3408, file: !125, line: 4115, column: 4)
!3414 = distinct !{!3414, !3415, !3415}
!3415 = !DILocation(line: 4115, column: 4, scope: !3413)
!3416 = !DILocation(line: 4116, column: 4, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3404, file: !125, line: 4116, column: 4)
!3418 = !DILocation(line: 4116, column: 4, scope: !3404)
!3419 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3420)
!3420 = distinct !DILocation(line: 4116, column: 4, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3417, file: !125, line: 4116, column: 4)
!3422 = !DILocation(line: 0, scope: !1725, inlinedAt: !3420)
!3423 = !DILocation(line: 4116, column: 4, scope: !3421)
!3424 = !DILocation(line: 4116, column: 4, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !125, line: 4116, column: 4)
!3426 = distinct !DILexicalBlock(scope: !3421, file: !125, line: 4116, column: 4)
!3427 = distinct !{!3427, !3428, !3428}
!3428 = !DILocation(line: 4116, column: 4, scope: !3426)
!3429 = !DILocation(line: 4117, column: 28, scope: !3404)
!3430 = !DILocation(line: 4121, column: 15, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3404, file: !125, line: 4121, column: 8)
!3432 = !DILocation(line: 4121, column: 36, scope: !3431)
!3433 = !DILocation(line: 4121, column: 26, scope: !3431)
!3434 = !DILocation(line: 4121, column: 8, scope: !3404)
!3435 = !DILocation(line: 4131, column: 34, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !125, line: 4131, column: 10)
!3437 = distinct !DILexicalBlock(scope: !3438, file: !125, line: 4125, column: 5)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !125, line: 4124, column: 9)
!3439 = distinct !DILexicalBlock(scope: !3431, file: !125, line: 4122, column: 4)
!3440 = !DILocation(line: 4131, column: 10, scope: !3436)
!3441 = !DILocation(line: 4131, column: 53, scope: !3436)
!3442 = !DILocation(line: 4131, column: 10, scope: !3437)
!3443 = !DILocation(line: 4133, column: 7, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !125, line: 4133, column: 7)
!3445 = distinct !DILexicalBlock(scope: !3446, file: !125, line: 4133, column: 7)
!3446 = distinct !DILexicalBlock(scope: !3436, file: !125, line: 4132, column: 6)
!3447 = !DILocation(line: 4133, column: 7, scope: !3445)
!3448 = !DILocation(line: 4133, column: 7, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3444, file: !125, line: 4133, column: 7)
!3450 = !DILocation(line: 4143, column: 33, scope: !3437)
!3451 = !DILocation(line: 4143, column: 24, scope: !3437)
!3452 = !DILocation(line: 4148, column: 6, scope: !3437)
!3453 = !DILocation(line: 4149, column: 6, scope: !3437)
!3454 = !DILocation(line: 4160, column: 5, scope: !3437)
!3455 = !DILocation(line: 4176, column: 3, scope: !3393)
!3456 = distinct !DISubprogram(name: "vTaskPriorityDisinheritAfterTimeout", scope: !125, file: !125, line: 4184, type: !3457, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3459)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{null, !2201, !149}
!3459 = !{!3460, !3461, !3462, !3463, !3464, !3465}
!3460 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !3456, file: !125, line: 4184, type: !2201)
!3461 = !DILocalVariable(name: "uxHighestPriorityWaitingTask", arg: 2, scope: !3456, file: !125, line: 4184, type: !149)
!3462 = !DILocalVariable(name: "pxTCB", scope: !3456, file: !125, line: 4186, type: !2473)
!3463 = !DILocalVariable(name: "uxPriorityUsedOnEntry", scope: !3456, file: !125, line: 4187, type: !149)
!3464 = !DILocalVariable(name: "uxPriorityToUse", scope: !3456, file: !125, line: 4187, type: !149)
!3465 = !DILocalVariable(name: "uxOnlyOneMutexHeld", scope: !3456, file: !125, line: 4188, type: !2753)
!3466 = !DILocation(line: 0, scope: !3456)
!3467 = !DILocation(line: 4190, column: 21, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3456, file: !125, line: 4190, column: 7)
!3469 = !DILocation(line: 4190, column: 7, scope: !3456)
!3470 = !DILocation(line: 4194, column: 4, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3472, file: !125, line: 4194, column: 4)
!3472 = distinct !DILexicalBlock(scope: !3468, file: !125, line: 4191, column: 3)
!3473 = !DILocation(line: 4194, column: 4, scope: !3472)
!3474 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3475)
!3475 = distinct !DILocation(line: 4194, column: 4, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3471, file: !125, line: 4194, column: 4)
!3477 = !DILocation(line: 0, scope: !1725, inlinedAt: !3475)
!3478 = !DILocation(line: 4194, column: 4, scope: !3476)
!3479 = !DILocation(line: 4194, column: 4, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !125, line: 4194, column: 4)
!3481 = distinct !DILexicalBlock(scope: !3476, file: !125, line: 4194, column: 4)
!3482 = distinct !{!3482, !3483, !3483}
!3483 = !DILocation(line: 4194, column: 4, scope: !3481)
!3484 = !DILocation(line: 4200, column: 15, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3472, file: !125, line: 4200, column: 8)
!3486 = !DILocation(line: 4200, column: 30, scope: !3485)
!3487 = !DILocation(line: 4210, column: 15, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3472, file: !125, line: 4210, column: 8)
!3489 = !DILocation(line: 4210, column: 26, scope: !3488)
!3490 = !DILocation(line: 4210, column: 8, scope: !3472)
!3491 = !DILocation(line: 4221, column: 6, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !125, line: 4221, column: 6)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !125, line: 4217, column: 5)
!3494 = distinct !DILexicalBlock(scope: !3495, file: !125, line: 4216, column: 9)
!3495 = distinct !DILexicalBlock(scope: !3488, file: !125, line: 4211, column: 4)
!3496 = !DILocation(line: 4221, column: 6, scope: !3493)
!3497 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3498)
!3498 = distinct !DILocation(line: 4221, column: 6, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3492, file: !125, line: 4221, column: 6)
!3500 = !DILocation(line: 0, scope: !1725, inlinedAt: !3498)
!3501 = !DILocation(line: 4221, column: 6, scope: !3499)
!3502 = !DILocation(line: 4221, column: 6, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !125, line: 4221, column: 6)
!3504 = distinct !DILexicalBlock(scope: !3499, file: !125, line: 4221, column: 6)
!3505 = distinct !{!3505, !3506, !3506}
!3506 = !DILocation(line: 4221, column: 6, scope: !3504)
!3507 = !DILocation(line: 4228, column: 24, scope: !3493)
!3508 = !DILocation(line: 4232, column: 12, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3493, file: !125, line: 4232, column: 10)
!3510 = !DILocation(line: 4232, column: 103, scope: !3509)
!3511 = !DILocation(line: 4232, column: 10, scope: !3493)
!3512 = !DILocation(line: 4234, column: 7, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3509, file: !125, line: 4233, column: 6)
!3514 = !DILocation(line: 4235, column: 6, scope: !3513)
!3515 = !DILocation(line: 4247, column: 10, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3493, file: !125, line: 4247, column: 10)
!3517 = !DILocation(line: 4247, column: 10, scope: !3493)
!3518 = !DILocation(line: 4249, column: 11, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3520, file: !125, line: 4249, column: 11)
!3520 = distinct !DILexicalBlock(scope: !3516, file: !125, line: 4248, column: 6)
!3521 = !DILocation(line: 4249, column: 54, scope: !3519)
!3522 = !DILocation(line: 0, scope: !3520)
!3523 = !DILocation(line: 4249, column: 11, scope: !3520)
!3524 = !DILocation(line: 4254, column: 8, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3519, file: !125, line: 4250, column: 7)
!3526 = !DILocation(line: 4255, column: 7, scope: !3525)
!3527 = !DILocation(line: 4261, column: 7, scope: !3520)
!3528 = !DILocation(line: 4262, column: 6, scope: !3520)
!3529 = !DILocation(line: 4282, column: 2, scope: !3456)
!3530 = distinct !DISubprogram(name: "uxTaskResetEventItemValue", scope: !125, file: !125, line: 4602, type: !2691, scopeLine: 4603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3531)
!3531 = !{!3532}
!3532 = !DILocalVariable(name: "uxReturn", scope: !3530, file: !125, line: 4604, type: !39)
!3533 = !DILocation(line: 4606, column: 13, scope: !3530)
!3534 = !DILocation(line: 0, scope: !3530)
!3535 = !DILocation(line: 4610, column: 2, scope: !3530)
!3536 = !DILocation(line: 4612, column: 2, scope: !3530)
!3537 = distinct !DISubprogram(name: "pvTaskIncrementMutexHeldCount", scope: !125, file: !125, line: 4618, type: !3320, scopeLine: 4619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !1056)
!3538 = !DILocation(line: 4622, column: 7, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3537, file: !125, line: 4622, column: 7)
!3540 = !DILocation(line: 4622, column: 20, scope: !3539)
!3541 = !DILocation(line: 4622, column: 7, scope: !3537)
!3542 = !DILocation(line: 4624, column: 6, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3539, file: !125, line: 4623, column: 3)
!3544 = !DILocation(line: 4624, column: 20, scope: !3543)
!3545 = !DILocation(line: 4624, column: 35, scope: !3543)
!3546 = !DILocation(line: 4625, column: 3, scope: !3543)
!3547 = !DILocation(line: 4627, column: 10, scope: !3537)
!3548 = !DILocation(line: 4627, column: 3, scope: !3537)
!3549 = distinct !DISubprogram(name: "ulTaskNotifyTake", scope: !125, file: !125, line: 4635, type: !3550, scopeLine: 4636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3552)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{!21, !176, !39}
!3552 = !{!3553, !3554, !3555}
!3553 = !DILocalVariable(name: "xClearCountOnExit", arg: 1, scope: !3549, file: !125, line: 4635, type: !176)
!3554 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !3549, file: !125, line: 4635, type: !39)
!3555 = !DILocalVariable(name: "ulReturn", scope: !3549, file: !125, line: 4637, type: !21)
!3556 = !DILocation(line: 0, scope: !3549)
!3557 = !DILocation(line: 4639, column: 3, scope: !3549)
!3558 = !DILocation(line: 4642, column: 8, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !125, line: 4642, column: 8)
!3560 = distinct !DILexicalBlock(scope: !3549, file: !125, line: 4640, column: 3)
!3561 = !DILocation(line: 4642, column: 22, scope: !3559)
!3562 = !DILocation(line: 4642, column: 38, scope: !3559)
!3563 = !DILocation(line: 4642, column: 8, scope: !3560)
!3564 = !DILocation(line: 4645, column: 5, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3559, file: !125, line: 4643, column: 4)
!3566 = !DILocation(line: 4645, column: 19, scope: !3565)
!3567 = !DILocation(line: 4645, column: 33, scope: !3565)
!3568 = !DILocation(line: 4647, column: 22, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3565, file: !125, line: 4647, column: 9)
!3570 = !DILocation(line: 4647, column: 9, scope: !3565)
!3571 = !DILocation(line: 4649, column: 6, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3569, file: !125, line: 4648, column: 5)
!3573 = !DILocation(line: 4656, column: 6, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3572, file: !125, line: 4656, column: 6)
!3575 = !{i64 2148232587}
!3576 = !{i64 2148232638}
!3577 = !DILocation(line: 4657, column: 5, scope: !3572)
!3578 = !DILocation(line: 4668, column: 3, scope: !3549)
!3579 = !DILocation(line: 4670, column: 3, scope: !3549)
!3580 = !DILocation(line: 4673, column: 15, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3549, file: !125, line: 4671, column: 3)
!3582 = !DILocation(line: 4673, column: 29, scope: !3581)
!3583 = !DILocation(line: 4675, column: 17, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3581, file: !125, line: 4675, column: 8)
!3585 = !DILocation(line: 4675, column: 8, scope: !3581)
!3586 = !DILocation(line: 4677, column: 27, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !125, line: 4677, column: 9)
!3588 = distinct !DILexicalBlock(scope: !3584, file: !125, line: 4676, column: 4)
!3589 = !DILocation(line: 4677, column: 9, scope: !3588)
!3590 = !DILocation(line: 0, scope: !3587)
!3591 = !DILocation(line: 4691, column: 4, scope: !3581)
!3592 = !DILocation(line: 4691, column: 18, scope: !3581)
!3593 = !DILocation(line: 4691, column: 32, scope: !3581)
!3594 = !DILocation(line: 4693, column: 3, scope: !3549)
!3595 = !DILocation(line: 4695, column: 3, scope: !3549)
!3596 = distinct !DISubprogram(name: "xTaskNotifyWait", scope: !125, file: !125, line: 4703, type: !3597, scopeLine: 4704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3599)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{!176, !21, !21, !624, !39}
!3599 = !{!3600, !3601, !3602, !3603, !3604}
!3600 = !DILocalVariable(name: "ulBitsToClearOnEntry", arg: 1, scope: !3596, file: !125, line: 4703, type: !21)
!3601 = !DILocalVariable(name: "ulBitsToClearOnExit", arg: 2, scope: !3596, file: !125, line: 4703, type: !21)
!3602 = !DILocalVariable(name: "pulNotificationValue", arg: 3, scope: !3596, file: !125, line: 4703, type: !624)
!3603 = !DILocalVariable(name: "xTicksToWait", arg: 4, scope: !3596, file: !125, line: 4703, type: !39)
!3604 = !DILocalVariable(name: "xReturn", scope: !3596, file: !125, line: 4705, type: !176)
!3605 = !DILocation(line: 0, scope: !3596)
!3606 = !DILocation(line: 4707, column: 3, scope: !3596)
!3607 = !DILocation(line: 4710, column: 8, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !125, line: 4710, column: 8)
!3609 = distinct !DILexicalBlock(scope: !3596, file: !125, line: 4708, column: 3)
!3610 = !DILocation(line: 4710, column: 22, scope: !3608)
!3611 = !DILocation(line: 4710, column: 36, scope: !3608)
!3612 = !DILocation(line: 4710, column: 8, scope: !3609)
!3613 = !DILocation(line: 4715, column: 38, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3608, file: !125, line: 4711, column: 4)
!3615 = !DILocation(line: 4715, column: 5, scope: !3614)
!3616 = !DILocation(line: 4715, column: 19, scope: !3614)
!3617 = !DILocation(line: 4715, column: 35, scope: !3614)
!3618 = !DILocation(line: 4718, column: 5, scope: !3614)
!3619 = !DILocation(line: 4718, column: 19, scope: !3614)
!3620 = !DILocation(line: 4718, column: 33, scope: !3614)
!3621 = !DILocation(line: 4720, column: 22, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3614, file: !125, line: 4720, column: 9)
!3623 = !DILocation(line: 4720, column: 9, scope: !3614)
!3624 = !DILocation(line: 4722, column: 6, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3622, file: !125, line: 4721, column: 5)
!3626 = !DILocation(line: 4729, column: 6, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3625, file: !125, line: 4729, column: 6)
!3628 = !{i64 2148233326}
!3629 = !{i64 2148233377}
!3630 = !DILocation(line: 4730, column: 5, scope: !3625)
!3631 = !DILocation(line: 4741, column: 3, scope: !3596)
!3632 = !DILocation(line: 4743, column: 3, scope: !3596)
!3633 = !DILocation(line: 4747, column: 29, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !125, line: 4747, column: 8)
!3635 = distinct !DILexicalBlock(scope: !3596, file: !125, line: 4744, column: 3)
!3636 = !DILocation(line: 4747, column: 8, scope: !3635)
!3637 = !DILocation(line: 4751, column: 29, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3634, file: !125, line: 4748, column: 4)
!3639 = !DILocation(line: 4751, column: 43, scope: !3638)
!3640 = !DILocation(line: 4751, column: 27, scope: !3638)
!3641 = !DILocation(line: 4752, column: 4, scope: !3638)
!3642 = !DILocation(line: 4758, column: 8, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3635, file: !125, line: 4758, column: 8)
!3644 = !DILocation(line: 4758, column: 22, scope: !3643)
!3645 = !DILocation(line: 4758, column: 36, scope: !3643)
!3646 = !DILocation(line: 4758, column: 8, scope: !3635)
!3647 = !DILocation(line: 4767, column: 38, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3643, file: !125, line: 4764, column: 4)
!3649 = !DILocation(line: 4767, column: 5, scope: !3648)
!3650 = !DILocation(line: 4767, column: 19, scope: !3648)
!3651 = !DILocation(line: 4767, column: 35, scope: !3648)
!3652 = !DILocation(line: 0, scope: !3643)
!3653 = !DILocation(line: 4771, column: 4, scope: !3635)
!3654 = !DILocation(line: 4771, column: 18, scope: !3635)
!3655 = !DILocation(line: 4771, column: 32, scope: !3635)
!3656 = !DILocation(line: 4773, column: 3, scope: !3596)
!3657 = !DILocation(line: 4775, column: 3, scope: !3596)
!3658 = distinct !DISubprogram(name: "xTaskGenericNotify", scope: !125, file: !125, line: 4783, type: !3659, scopeLine: 4784, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3662)
!3659 = !DISubroutineType(types: !3660)
!3660 = !{!176, !181, !21, !3661, !624}
!3661 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyAction", file: !105, line: 97, baseType: !113)
!3662 = !{!3663, !3664, !3665, !3666, !3667, !3668, !3669}
!3663 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !3658, file: !125, line: 4783, type: !181)
!3664 = !DILocalVariable(name: "ulValue", arg: 2, scope: !3658, file: !125, line: 4783, type: !21)
!3665 = !DILocalVariable(name: "eAction", arg: 3, scope: !3658, file: !125, line: 4783, type: !3661)
!3666 = !DILocalVariable(name: "pulPreviousNotificationValue", arg: 4, scope: !3658, file: !125, line: 4783, type: !624)
!3667 = !DILocalVariable(name: "pxTCB", scope: !3658, file: !125, line: 4785, type: !123)
!3668 = !DILocalVariable(name: "xReturn", scope: !3658, file: !125, line: 4786, type: !176)
!3669 = !DILocalVariable(name: "ucOriginalNotifyState", scope: !3658, file: !125, line: 4787, type: !85)
!3670 = !DILocation(line: 0, scope: !3658)
!3671 = !DILocation(line: 4789, column: 3, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3658, file: !125, line: 4789, column: 3)
!3673 = !DILocation(line: 4789, column: 3, scope: !3658)
!3674 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3675)
!3675 = distinct !DILocation(line: 4789, column: 3, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3672, file: !125, line: 4789, column: 3)
!3677 = !DILocation(line: 0, scope: !1725, inlinedAt: !3675)
!3678 = !DILocation(line: 4789, column: 3, scope: !3676)
!3679 = !DILocation(line: 4789, column: 3, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !125, line: 4789, column: 3)
!3681 = distinct !DILexicalBlock(scope: !3676, file: !125, line: 4789, column: 3)
!3682 = distinct !{!3682, !3683, !3683}
!3683 = !DILocation(line: 4789, column: 3, scope: !3681)
!3684 = !DILocation(line: 4792, column: 3, scope: !3658)
!3685 = !DILocation(line: 4794, column: 37, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !125, line: 4794, column: 8)
!3687 = distinct !DILexicalBlock(scope: !3658, file: !125, line: 4793, column: 3)
!3688 = !DILocation(line: 4794, column: 8, scope: !3687)
!3689 = !DILocation(line: 4796, column: 44, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3686, file: !125, line: 4795, column: 4)
!3691 = !DILocation(line: 4796, column: 35, scope: !3690)
!3692 = !DILocation(line: 4797, column: 4, scope: !3690)
!3693 = !DILocation(line: 4799, column: 35, scope: !3687)
!3694 = !DILocation(line: 4801, column: 25, scope: !3687)
!3695 = !DILocation(line: 4803, column: 4, scope: !3687)
!3696 = !DILocation(line: 4806, column: 13, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3687, file: !125, line: 4804, column: 4)
!3698 = !DILocation(line: 4806, column: 29, scope: !3697)
!3699 = !DILocation(line: 4807, column: 6, scope: !3697)
!3700 = !DILocation(line: 4810, column: 15, scope: !3697)
!3701 = !DILocation(line: 4810, column: 32, scope: !3697)
!3702 = !DILocation(line: 4811, column: 6, scope: !3697)
!3703 = !DILocation(line: 4814, column: 13, scope: !3697)
!3704 = !DILocation(line: 4814, column: 29, scope: !3697)
!3705 = !DILocation(line: 4815, column: 6, scope: !3697)
!3706 = !DILocation(line: 4818, column: 32, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3697, file: !125, line: 4818, column: 10)
!3708 = !DILocation(line: 4818, column: 10, scope: !3697)
!3709 = !DILocation(line: 4820, column: 14, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3707, file: !125, line: 4819, column: 6)
!3711 = !DILocation(line: 4820, column: 30, scope: !3710)
!3712 = !DILocation(line: 4821, column: 6, scope: !3710)
!3713 = !DILocation(line: 4838, column: 6, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3697, file: !125, line: 4838, column: 6)
!3715 = !DILocation(line: 4838, column: 6, scope: !3697)
!3716 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3717)
!3717 = distinct !DILocation(line: 4838, column: 6, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3714, file: !125, line: 4838, column: 6)
!3719 = !DILocation(line: 0, scope: !1725, inlinedAt: !3717)
!3720 = !DILocation(line: 4838, column: 6, scope: !3718)
!3721 = !DILocation(line: 4838, column: 6, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3723, file: !125, line: 4838, column: 6)
!3723 = distinct !DILexicalBlock(scope: !3718, file: !125, line: 4838, column: 6)
!3724 = distinct !{!3724, !3725, !3725}
!3725 = !DILocation(line: 4838, column: 6, scope: !3723)
!3726 = !DILocation(line: 4847, column: 30, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3687, file: !125, line: 4847, column: 8)
!3728 = !DILocation(line: 4847, column: 8, scope: !3687)
!3729 = !DILocation(line: 4849, column: 38, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3727, file: !125, line: 4848, column: 4)
!3731 = !DILocation(line: 4849, column: 14, scope: !3730)
!3732 = !DILocation(line: 4850, column: 5, scope: !3730)
!3733 = !DILocation(line: 4853, column: 5, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3730, file: !125, line: 4853, column: 5)
!3735 = !DILocation(line: 4853, column: 5, scope: !3730)
!3736 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3737)
!3737 = distinct !DILocation(line: 4853, column: 5, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3734, file: !125, line: 4853, column: 5)
!3739 = !DILocation(line: 0, scope: !1725, inlinedAt: !3737)
!3740 = !DILocation(line: 4853, column: 5, scope: !3738)
!3741 = !DILocation(line: 4853, column: 5, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3743, file: !125, line: 4853, column: 5)
!3743 = distinct !DILexicalBlock(scope: !3738, file: !125, line: 4853, column: 5)
!3744 = distinct !{!3744, !3745, !3745}
!3745 = !DILocation(line: 4853, column: 5, scope: !3743)
!3746 = !DILocation(line: 4871, column: 16, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3730, file: !125, line: 4871, column: 9)
!3748 = !DILocation(line: 4871, column: 29, scope: !3747)
!3749 = !DILocation(line: 4871, column: 43, scope: !3747)
!3750 = !DILocation(line: 4871, column: 27, scope: !3747)
!3751 = !DILocation(line: 4871, column: 9, scope: !3730)
!3752 = !DILocation(line: 4875, column: 6, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !125, line: 4875, column: 6)
!3754 = distinct !DILexicalBlock(scope: !3747, file: !125, line: 4872, column: 5)
!3755 = !{i64 2148235193}
!3756 = !{i64 2148235244}
!3757 = !DILocation(line: 4876, column: 5, scope: !3754)
!3758 = !DILocation(line: 4887, column: 3, scope: !3658)
!3759 = !DILocation(line: 4889, column: 3, scope: !3658)
!3760 = distinct !DISubprogram(name: "xTaskGenericNotifyFromISR", scope: !125, file: !125, line: 4897, type: !3761, scopeLine: 4898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3763)
!3761 = !DISubroutineType(types: !3762)
!3762 = !{!176, !181, !21, !3661, !624, !298}
!3763 = !{!3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772}
!3764 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !3760, file: !125, line: 4897, type: !181)
!3765 = !DILocalVariable(name: "ulValue", arg: 2, scope: !3760, file: !125, line: 4897, type: !21)
!3766 = !DILocalVariable(name: "eAction", arg: 3, scope: !3760, file: !125, line: 4897, type: !3661)
!3767 = !DILocalVariable(name: "pulPreviousNotificationValue", arg: 4, scope: !3760, file: !125, line: 4897, type: !624)
!3768 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 5, scope: !3760, file: !125, line: 4897, type: !298)
!3769 = !DILocalVariable(name: "pxTCB", scope: !3760, file: !125, line: 4899, type: !123)
!3770 = !DILocalVariable(name: "ucOriginalNotifyState", scope: !3760, file: !125, line: 4900, type: !85)
!3771 = !DILocalVariable(name: "xReturn", scope: !3760, file: !125, line: 4901, type: !176)
!3772 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !3760, file: !125, line: 4902, type: !149)
!3773 = !DILocation(line: 0, scope: !3760)
!3774 = !DILocation(line: 4904, column: 3, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3760, file: !125, line: 4904, column: 3)
!3776 = !DILocation(line: 4904, column: 3, scope: !3760)
!3777 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3778)
!3778 = distinct !DILocation(line: 4904, column: 3, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3775, file: !125, line: 4904, column: 3)
!3780 = !DILocation(line: 0, scope: !1725, inlinedAt: !3778)
!3781 = !DILocation(line: 4904, column: 3, scope: !3779)
!3782 = !DILocation(line: 4904, column: 3, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !125, line: 4904, column: 3)
!3784 = distinct !DILexicalBlock(scope: !3779, file: !125, line: 4904, column: 3)
!3785 = distinct !{!3785, !3786, !3786}
!3786 = !DILocation(line: 4904, column: 3, scope: !3784)
!3787 = !DILocation(line: 4922, column: 3, scope: !3760)
!3788 = !DILocation(line: 211, column: 2, scope: !2222, inlinedAt: !3789)
!3789 = distinct !DILocation(line: 4926, column: 28, scope: !3760)
!3790 = !DILocation(line: 0, scope: !2222, inlinedAt: !3789)
!3791 = !DILocation(line: 4928, column: 37, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !125, line: 4928, column: 8)
!3793 = distinct !DILexicalBlock(scope: !3760, file: !125, line: 4927, column: 3)
!3794 = !DILocation(line: 4928, column: 8, scope: !3793)
!3795 = !DILocation(line: 4930, column: 44, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3792, file: !125, line: 4929, column: 4)
!3797 = !DILocation(line: 4930, column: 35, scope: !3796)
!3798 = !DILocation(line: 4931, column: 4, scope: !3796)
!3799 = !DILocation(line: 4933, column: 35, scope: !3793)
!3800 = !DILocation(line: 4934, column: 25, scope: !3793)
!3801 = !DILocation(line: 4936, column: 4, scope: !3793)
!3802 = !DILocation(line: 4939, column: 13, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3793, file: !125, line: 4937, column: 4)
!3804 = !DILocation(line: 4939, column: 29, scope: !3803)
!3805 = !DILocation(line: 4940, column: 6, scope: !3803)
!3806 = !DILocation(line: 4943, column: 15, scope: !3803)
!3807 = !DILocation(line: 4943, column: 32, scope: !3803)
!3808 = !DILocation(line: 4944, column: 6, scope: !3803)
!3809 = !DILocation(line: 4947, column: 13, scope: !3803)
!3810 = !DILocation(line: 4947, column: 29, scope: !3803)
!3811 = !DILocation(line: 4948, column: 6, scope: !3803)
!3812 = !DILocation(line: 4951, column: 32, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3803, file: !125, line: 4951, column: 10)
!3814 = !DILocation(line: 4951, column: 10, scope: !3803)
!3815 = !DILocation(line: 4953, column: 14, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3813, file: !125, line: 4952, column: 6)
!3817 = !DILocation(line: 4953, column: 30, scope: !3816)
!3818 = !DILocation(line: 4954, column: 6, scope: !3816)
!3819 = !DILocation(line: 4971, column: 6, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3803, file: !125, line: 4971, column: 6)
!3821 = !DILocation(line: 4971, column: 6, scope: !3803)
!3822 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3823)
!3823 = distinct !DILocation(line: 4971, column: 6, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3820, file: !125, line: 4971, column: 6)
!3825 = !DILocation(line: 0, scope: !1725, inlinedAt: !3823)
!3826 = !DILocation(line: 4971, column: 6, scope: !3824)
!3827 = !DILocation(line: 4971, column: 6, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !125, line: 4971, column: 6)
!3829 = distinct !DILexicalBlock(scope: !3824, file: !125, line: 4971, column: 6)
!3830 = distinct !{!3830, !3831, !3831}
!3831 = !DILocation(line: 4971, column: 6, scope: !3829)
!3832 = !DILocation(line: 4979, column: 30, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3793, file: !125, line: 4979, column: 8)
!3834 = !DILocation(line: 4979, column: 8, scope: !3793)
!3835 = !DILocation(line: 4982, column: 5, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !125, line: 4982, column: 5)
!3837 = distinct !DILexicalBlock(scope: !3833, file: !125, line: 4980, column: 4)
!3838 = !DILocation(line: 4982, column: 5, scope: !3837)
!3839 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3840)
!3840 = distinct !DILocation(line: 4982, column: 5, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3836, file: !125, line: 4982, column: 5)
!3842 = !DILocation(line: 0, scope: !1725, inlinedAt: !3840)
!3843 = !DILocation(line: 4982, column: 5, scope: !3841)
!3844 = !DILocation(line: 4982, column: 5, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !125, line: 4982, column: 5)
!3846 = distinct !DILexicalBlock(scope: !3841, file: !125, line: 4982, column: 5)
!3847 = distinct !{!3847, !3848, !3848}
!3848 = !DILocation(line: 4982, column: 5, scope: !3846)
!3849 = !DILocation(line: 4984, column: 9, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3837, file: !125, line: 4984, column: 9)
!3851 = !DILocation(line: 4984, column: 30, scope: !3850)
!3852 = !DILocation(line: 4984, column: 9, scope: !3837)
!3853 = !DILocation(line: 4986, column: 39, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3850, file: !125, line: 4985, column: 5)
!3855 = !DILocation(line: 4986, column: 15, scope: !3854)
!3856 = !DILocation(line: 4987, column: 6, scope: !3854)
!3857 = !DILocation(line: 4988, column: 5, scope: !3854)
!3858 = !DILocation(line: 4993, column: 6, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3850, file: !125, line: 4990, column: 5)
!3860 = !DILocation(line: 4996, column: 16, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3837, file: !125, line: 4996, column: 9)
!3862 = !DILocation(line: 4996, column: 29, scope: !3861)
!3863 = !DILocation(line: 4996, column: 43, scope: !3861)
!3864 = !DILocation(line: 4996, column: 27, scope: !3861)
!3865 = !DILocation(line: 4996, column: 9, scope: !3837)
!3866 = !DILocation(line: 5000, column: 36, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3868, file: !125, line: 5000, column: 10)
!3868 = distinct !DILexicalBlock(scope: !3861, file: !125, line: 4997, column: 5)
!3869 = !DILocation(line: 5000, column: 10, scope: !3868)
!3870 = !DILocation(line: 5002, column: 34, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3867, file: !125, line: 5001, column: 6)
!3872 = !DILocation(line: 5003, column: 6, scope: !3871)
!3873 = !DILocation(line: 5008, column: 20, scope: !3868)
!3874 = !DILocation(line: 5009, column: 5, scope: !3868)
!3875 = !DILocation(line: 0, scope: !2235, inlinedAt: !3876)
!3876 = distinct !DILocation(line: 5016, column: 3, scope: !3760)
!3877 = !DILocation(line: 229, column: 2, scope: !2235, inlinedAt: !3876)
!3878 = !DILocation(line: 5018, column: 3, scope: !3760)
!3879 = distinct !DISubprogram(name: "vTaskNotifyGiveFromISR", scope: !125, file: !125, line: 5026, type: !3880, scopeLine: 5027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3882)
!3880 = !DISubroutineType(types: !3881)
!3881 = !{null, !181, !298}
!3882 = !{!3883, !3884, !3885, !3886, !3887}
!3883 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !3879, file: !125, line: 5026, type: !181)
!3884 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !3879, file: !125, line: 5026, type: !298)
!3885 = !DILocalVariable(name: "pxTCB", scope: !3879, file: !125, line: 5028, type: !123)
!3886 = !DILocalVariable(name: "ucOriginalNotifyState", scope: !3879, file: !125, line: 5029, type: !85)
!3887 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !3879, file: !125, line: 5030, type: !149)
!3888 = !DILocation(line: 0, scope: !3879)
!3889 = !DILocation(line: 5032, column: 3, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3879, file: !125, line: 5032, column: 3)
!3891 = !DILocation(line: 5032, column: 3, scope: !3879)
!3892 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3893)
!3893 = distinct !DILocation(line: 5032, column: 3, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3890, file: !125, line: 5032, column: 3)
!3895 = !DILocation(line: 0, scope: !1725, inlinedAt: !3893)
!3896 = !DILocation(line: 5032, column: 3, scope: !3894)
!3897 = !DILocation(line: 5032, column: 3, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3899, file: !125, line: 5032, column: 3)
!3899 = distinct !DILexicalBlock(scope: !3894, file: !125, line: 5032, column: 3)
!3900 = distinct !{!3900, !3901, !3901}
!3901 = !DILocation(line: 5032, column: 3, scope: !3899)
!3902 = !DILocation(line: 5050, column: 3, scope: !3879)
!3903 = !DILocation(line: 211, column: 2, scope: !2222, inlinedAt: !3904)
!3904 = distinct !DILocation(line: 5054, column: 28, scope: !3879)
!3905 = !DILocation(line: 0, scope: !2222, inlinedAt: !3904)
!3906 = !DILocation(line: 5056, column: 35, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3879, file: !125, line: 5055, column: 3)
!3908 = !DILocation(line: 5057, column: 25, scope: !3907)
!3909 = !DILocation(line: 5061, column: 13, scope: !3907)
!3910 = !DILocation(line: 5061, column: 30, scope: !3907)
!3911 = !DILocation(line: 5067, column: 30, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3907, file: !125, line: 5067, column: 8)
!3913 = !DILocation(line: 5067, column: 8, scope: !3907)
!3914 = !DILocation(line: 5070, column: 5, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !125, line: 5070, column: 5)
!3916 = distinct !DILexicalBlock(scope: !3912, file: !125, line: 5068, column: 4)
!3917 = !DILocation(line: 5070, column: 5, scope: !3916)
!3918 = !DILocation(line: 195, column: 2, scope: !1725, inlinedAt: !3919)
!3919 = distinct !DILocation(line: 5070, column: 5, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3915, file: !125, line: 5070, column: 5)
!3921 = !DILocation(line: 0, scope: !1725, inlinedAt: !3919)
!3922 = !DILocation(line: 5070, column: 5, scope: !3920)
!3923 = !DILocation(line: 5070, column: 5, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3925, file: !125, line: 5070, column: 5)
!3925 = distinct !DILexicalBlock(scope: !3920, file: !125, line: 5070, column: 5)
!3926 = distinct !{!3926, !3927, !3927}
!3927 = !DILocation(line: 5070, column: 5, scope: !3925)
!3928 = !DILocation(line: 5072, column: 9, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3916, file: !125, line: 5072, column: 9)
!3930 = !DILocation(line: 5072, column: 30, scope: !3929)
!3931 = !DILocation(line: 5072, column: 9, scope: !3916)
!3932 = !DILocation(line: 5074, column: 39, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3929, file: !125, line: 5073, column: 5)
!3934 = !DILocation(line: 5074, column: 15, scope: !3933)
!3935 = !DILocation(line: 5075, column: 6, scope: !3933)
!3936 = !DILocation(line: 5076, column: 5, scope: !3933)
!3937 = !DILocation(line: 5081, column: 6, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3929, file: !125, line: 5078, column: 5)
!3939 = !DILocation(line: 5084, column: 16, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3916, file: !125, line: 5084, column: 9)
!3941 = !DILocation(line: 5084, column: 29, scope: !3940)
!3942 = !DILocation(line: 5084, column: 43, scope: !3940)
!3943 = !DILocation(line: 5084, column: 27, scope: !3940)
!3944 = !DILocation(line: 5084, column: 9, scope: !3916)
!3945 = !DILocation(line: 5088, column: 36, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3947, file: !125, line: 5088, column: 10)
!3947 = distinct !DILexicalBlock(scope: !3940, file: !125, line: 5085, column: 5)
!3948 = !DILocation(line: 5088, column: 10, scope: !3947)
!3949 = !DILocation(line: 5090, column: 34, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3946, file: !125, line: 5089, column: 6)
!3951 = !DILocation(line: 5091, column: 6, scope: !3950)
!3952 = !DILocation(line: 5096, column: 20, scope: !3947)
!3953 = !DILocation(line: 5097, column: 5, scope: !3947)
!3954 = !DILocation(line: 0, scope: !2235, inlinedAt: !3955)
!3955 = distinct !DILocation(line: 5104, column: 3, scope: !3879)
!3956 = !DILocation(line: 229, column: 2, scope: !2235, inlinedAt: !3955)
!3957 = !DILocation(line: 5105, column: 2, scope: !3879)
!3958 = distinct !DISubprogram(name: "xTaskNotifyStateClear", scope: !125, file: !125, line: 5112, type: !2548, scopeLine: 5113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3959)
!3959 = !{!3960, !3961, !3962}
!3960 = !DILocalVariable(name: "xTask", arg: 1, scope: !3958, file: !125, line: 5112, type: !181)
!3961 = !DILocalVariable(name: "pxTCB", scope: !3958, file: !125, line: 5114, type: !123)
!3962 = !DILocalVariable(name: "xReturn", scope: !3958, file: !125, line: 5115, type: !176)
!3963 = !DILocation(line: 0, scope: !3958)
!3964 = !DILocation(line: 5119, column: 11, scope: !3958)
!3965 = !DILocation(line: 5121, column: 3, scope: !3958)
!3966 = !DILocation(line: 5123, column: 15, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3968, file: !125, line: 5123, column: 8)
!3968 = distinct !DILexicalBlock(scope: !3958, file: !125, line: 5122, column: 3)
!3969 = !DILocation(line: 5123, column: 29, scope: !3967)
!3970 = !DILocation(line: 5123, column: 8, scope: !3968)
!3971 = !DILocation(line: 5125, column: 26, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3967, file: !125, line: 5124, column: 4)
!3973 = !DILocation(line: 5127, column: 4, scope: !3972)
!3974 = !DILocation(line: 0, scope: !3967)
!3975 = !DILocation(line: 5133, column: 3, scope: !3958)
!3976 = !DILocation(line: 5135, column: 3, scope: !3958)
!3977 = distinct !DISubprogram(name: "ulTaskNotifyValueClear", scope: !125, file: !125, line: 5143, type: !3978, scopeLine: 5144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !101, retainedNodes: !3980)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{!21, !181, !21}
!3980 = !{!3981, !3982, !3983, !3984}
!3981 = !DILocalVariable(name: "xTask", arg: 1, scope: !3977, file: !125, line: 5143, type: !181)
!3982 = !DILocalVariable(name: "ulBitsToClear", arg: 2, scope: !3977, file: !125, line: 5143, type: !21)
!3983 = !DILocalVariable(name: "pxTCB", scope: !3977, file: !125, line: 5145, type: !123)
!3984 = !DILocalVariable(name: "ulReturn", scope: !3977, file: !125, line: 5146, type: !21)
!3985 = !DILocation(line: 0, scope: !3977)
!3986 = !DILocation(line: 5150, column: 11, scope: !3977)
!3987 = !DILocation(line: 5152, column: 3, scope: !3977)
!3988 = !DILocation(line: 5156, column: 15, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3977, file: !125, line: 5153, column: 3)
!3990 = !DILocation(line: 5156, column: 29, scope: !3989)
!3991 = !DILocation(line: 5157, column: 30, scope: !3989)
!3992 = !DILocation(line: 5157, column: 11, scope: !3989)
!3993 = !DILocation(line: 5157, column: 27, scope: !3989)
!3994 = !DILocation(line: 5159, column: 3, scope: !3977)
!3995 = !DILocation(line: 5161, column: 3, scope: !3977)
!3996 = distinct !DISubprogram(name: "xTimerCreateTimerTask", scope: !242, file: !242, line: 227, type: !1916, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !3997)
!3997 = !{!3998}
!3998 = !DILocalVariable(name: "xReturn", scope: !3996, file: !242, line: 229, type: !176)
!3999 = !DILocation(line: 0, scope: !3996)
!4000 = !DILocation(line: 235, column: 2, scope: !3996)
!4001 = !DILocation(line: 237, column: 6, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3996, file: !242, line: 237, column: 6)
!4003 = !DILocation(line: 237, column: 18, scope: !4002)
!4004 = !DILocation(line: 237, column: 6, scope: !3996)
!4005 = !DILocation(line: 261, column: 14, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !242, line: 260, column: 3)
!4007 = distinct !DILexicalBlock(scope: !4002, file: !242, line: 238, column: 2)
!4008 = !DILocation(line: 275, column: 2, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !3996, file: !242, line: 275, column: 2)
!4010 = !DILocation(line: 275, column: 2, scope: !3996)
!4011 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4015)
!4012 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !40, file: !40, line: 191, type: !1054, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4013)
!4013 = !{!4014}
!4014 = !DILocalVariable(name: "ulNewBASEPRI", scope: !4012, file: !40, line: 193, type: !21)
!4015 = distinct !DILocation(line: 275, column: 2, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4009, file: !242, line: 275, column: 2)
!4017 = !{i64 354348, i64 354382, i64 354419, i64 354447}
!4018 = !DILocation(line: 0, scope: !4012, inlinedAt: !4015)
!4019 = !DILocation(line: 275, column: 2, scope: !4016)
!4020 = !DILocation(line: 275, column: 2, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !242, line: 275, column: 2)
!4022 = distinct !DILexicalBlock(scope: !4016, file: !242, line: 275, column: 2)
!4023 = distinct !{!4023, !4024, !4024}
!4024 = !DILocation(line: 275, column: 2, scope: !4022)
!4025 = !DILocation(line: 276, column: 2, scope: !3996)
!4026 = distinct !DISubprogram(name: "prvCheckForValidListAndQueue", scope: !242, file: !242, line: 941, type: !1054, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !1056)
!4027 = !DILocation(line: 946, column: 2, scope: !4026)
!4028 = !DILocation(line: 948, column: 7, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !242, line: 948, column: 7)
!4030 = distinct !DILexicalBlock(scope: !4026, file: !242, line: 947, column: 2)
!4031 = !DILocation(line: 948, column: 19, scope: !4029)
!4032 = !DILocation(line: 948, column: 7, scope: !4030)
!4033 = !DILocation(line: 950, column: 4, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4029, file: !242, line: 949, column: 3)
!4035 = !DILocation(line: 951, column: 4, scope: !4034)
!4036 = !DILocation(line: 952, column: 23, scope: !4034)
!4037 = !DILocation(line: 953, column: 24, scope: !4034)
!4038 = !DILocation(line: 966, column: 19, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4034, file: !242, line: 965, column: 4)
!4040 = !DILocation(line: 966, column: 17, scope: !4039)
!4041 = !DILocation(line: 972, column: 21, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !242, line: 972, column: 9)
!4043 = distinct !DILexicalBlock(scope: !4034, file: !242, line: 971, column: 4)
!4044 = !DILocation(line: 972, column: 9, scope: !4043)
!4045 = !DILocation(line: 974, column: 6, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4042, file: !242, line: 973, column: 5)
!4047 = !DILocation(line: 975, column: 5, scope: !4046)
!4048 = !DILocation(line: 988, column: 2, scope: !4026)
!4049 = !DILocation(line: 989, column: 1, scope: !4026)
!4050 = distinct !DISubprogram(name: "prvTimerTask", scope: !242, file: !242, line: 548, type: !995, scopeLine: 549, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4051)
!4051 = !{!4052, !4053, !4054}
!4052 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !4050, file: !242, line: 548, type: !78)
!4053 = !DILocalVariable(name: "xNextExpireTime", scope: !4050, file: !242, line: 550, type: !39)
!4054 = !DILocalVariable(name: "xListWasEmpty", scope: !4050, file: !242, line: 551, type: !176)
!4055 = !DILocation(line: 0, scope: !4050)
!4056 = !DILocation(line: 551, column: 1, scope: !4050)
!4057 = !DILocation(line: 568, column: 2, scope: !4050)
!4058 = !DILocation(line: 572, column: 21, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4060, file: !242, line: 569, column: 2)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !242, line: 568, column: 2)
!4061 = distinct !DILexicalBlock(scope: !4050, file: !242, line: 568, column: 2)
!4062 = !DILocation(line: 576, column: 48, scope: !4059)
!4063 = !DILocation(line: 576, column: 3, scope: !4059)
!4064 = !DILocation(line: 579, column: 3, scope: !4059)
!4065 = !DILocation(line: 568, column: 2, scope: !4060)
!4066 = distinct !{!4066, !4067, !4068}
!4067 = !DILocation(line: 568, column: 2, scope: !4061)
!4068 = !DILocation(line: 580, column: 2, scope: !4061)
!4069 = distinct !DISubprogram(name: "prvGetNextExpireTime", scope: !242, file: !242, line: 644, type: !295, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4070)
!4070 = !{!4071, !4072}
!4071 = !DILocalVariable(name: "pxListWasEmpty", arg: 1, scope: !4069, file: !242, line: 644, type: !297)
!4072 = !DILocalVariable(name: "xNextExpireTime", scope: !4069, file: !242, line: 646, type: !39)
!4073 = !DILocation(line: 0, scope: !4069)
!4074 = !DILocation(line: 655, column: 20, scope: !4069)
!4075 = !DILocation(line: 655, column: 18, scope: !4069)
!4076 = !DILocation(line: 656, column: 6, scope: !4069)
!4077 = !DILocation(line: 658, column: 21, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !242, line: 657, column: 2)
!4079 = distinct !DILexicalBlock(scope: !4069, file: !242, line: 656, column: 6)
!4080 = !DILocation(line: 659, column: 2, scope: !4078)
!4081 = !DILocation(line: 0, scope: !4079)
!4082 = !DILocation(line: 666, column: 2, scope: !4069)
!4083 = distinct !DISubprogram(name: "prvProcessTimerOrBlockTask", scope: !242, file: !242, line: 584, type: !4084, scopeLine: 585, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4086)
!4084 = !DISubroutineType(types: !4085)
!4085 = !{null, !1774, !176}
!4086 = !{!4087, !4088, !4089, !4090}
!4087 = !DILocalVariable(name: "xNextExpireTime", arg: 1, scope: !4083, file: !242, line: 584, type: !1774)
!4088 = !DILocalVariable(name: "xListWasEmpty", arg: 2, scope: !4083, file: !242, line: 584, type: !176)
!4089 = !DILocalVariable(name: "xTimeNow", scope: !4083, file: !242, line: 586, type: !39)
!4090 = !DILocalVariable(name: "xTimerListsWereSwitched", scope: !4083, file: !242, line: 587, type: !176)
!4091 = !DILocation(line: 0, scope: !4083)
!4092 = !DILocation(line: 587, column: 1, scope: !4083)
!4093 = !DILocation(line: 589, column: 2, scope: !4083)
!4094 = !DILocation(line: 596, column: 14, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4083, file: !242, line: 590, column: 2)
!4096 = !DILocation(line: 597, column: 7, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4095, file: !242, line: 597, column: 7)
!4098 = !DILocation(line: 597, column: 31, scope: !4097)
!4099 = !DILocation(line: 597, column: 7, scope: !4095)
!4100 = !DILocation(line: 600, column: 24, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4102, file: !242, line: 600, column: 8)
!4102 = distinct !DILexicalBlock(scope: !4097, file: !242, line: 598, column: 3)
!4103 = !DILocation(line: 600, column: 37, scope: !4101)
!4104 = !DILocation(line: 602, column: 14, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4101, file: !242, line: 601, column: 4)
!4106 = !DILocation(line: 603, column: 5, scope: !4105)
!4107 = !DILocation(line: 604, column: 4, scope: !4105)
!4108 = !DILocation(line: 613, column: 23, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !242, line: 613, column: 9)
!4110 = distinct !DILexicalBlock(scope: !4101, file: !242, line: 606, column: 4)
!4111 = !DILocation(line: 613, column: 9, scope: !4110)
!4112 = !DILocation(line: 617, column: 22, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4109, file: !242, line: 614, column: 5)
!4114 = !DILocation(line: 618, column: 5, scope: !4113)
!4115 = !DILocation(line: 620, column: 37, scope: !4110)
!4116 = !DILocation(line: 620, column: 68, scope: !4110)
!4117 = !DILocation(line: 620, column: 5, scope: !4110)
!4118 = !DILocation(line: 622, column: 9, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4110, file: !242, line: 622, column: 9)
!4120 = !DILocation(line: 622, column: 26, scope: !4119)
!4121 = !DILocation(line: 622, column: 9, scope: !4110)
!4122 = !DILocation(line: 628, column: 6, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4124, file: !242, line: 628, column: 6)
!4124 = distinct !DILexicalBlock(scope: !4119, file: !242, line: 623, column: 5)
!4125 = !{i64 2148102300}
!4126 = !{i64 2148102351}
!4127 = !DILocation(line: 629, column: 5, scope: !4124)
!4128 = !DILocation(line: 638, column: 13, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4097, file: !242, line: 637, column: 3)
!4130 = !DILocation(line: 641, column: 1, scope: !4083)
!4131 = distinct !DISubprogram(name: "prvProcessReceivedCommands", scope: !242, file: !242, line: 734, type: !1054, scopeLine: 735, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4132)
!4132 = !{!4133, !4147, !4148, !4149, !4150}
!4133 = !DILocalVariable(name: "xMessage", scope: !4131, file: !242, line: 736, type: !4134)
!4134 = !DIDerivedType(tag: DW_TAG_typedef, name: "DaemonTaskMessage_t", file: !242, line: 124, baseType: !4135)
!4135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerQueueMessage", file: !242, line: 111, size: 96, elements: !4136)
!4136 = !{!4137, !4138}
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "xMessageID", scope: !4135, file: !242, line: 113, baseType: !176, size: 32)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !4135, file: !242, line: 123, baseType: !4139, size: 64, offset: 32)
!4139 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4135, file: !242, line: 114, size: 64, elements: !4140)
!4140 = !{!4141}
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerParameters", scope: !4139, file: !242, line: 116, baseType: !4142, size: 64)
!4142 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerParameter_t", file: !242, line: 99, baseType: !4143)
!4143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerParameters", file: !242, line: 95, size: 64, elements: !4144)
!4144 = !{!4145, !4146}
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "xMessageValue", scope: !4143, file: !242, line: 97, baseType: !39, size: 32)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "pxTimer", scope: !4143, file: !242, line: 98, baseType: !240, size: 32, offset: 32)
!4147 = !DILocalVariable(name: "pxTimer", scope: !4131, file: !242, line: 737, type: !240)
!4148 = !DILocalVariable(name: "xTimerListsWereSwitched", scope: !4131, file: !242, line: 738, type: !176)
!4149 = !DILocalVariable(name: "xResult", scope: !4131, file: !242, line: 738, type: !176)
!4150 = !DILocalVariable(name: "xTimeNow", scope: !4131, file: !242, line: 739, type: !39)
!4151 = !DILocation(line: 736, column: 1, scope: !4131)
!4152 = !DILocation(line: 736, column: 21, scope: !4131)
!4153 = !DILocation(line: 738, column: 1, scope: !4131)
!4154 = !DILocation(line: 741, column: 24, scope: !4131)
!4155 = !DILocation(line: 741, column: 9, scope: !4131)
!4156 = !DILocation(line: 741, column: 62, scope: !4131)
!4157 = !DILocation(line: 741, column: 2, scope: !4131)
!4158 = !DILocation(line: 767, column: 16, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4160, file: !242, line: 767, column: 7)
!4160 = distinct !DILexicalBlock(scope: !4131, file: !242, line: 742, column: 2)
!4161 = !{!4162, !1023, i64 0}
!4162 = !{!"tmrTimerQueueMessage", !1023, i64 0, !1016, i64 4}
!4163 = !DILocation(line: 767, column: 27, scope: !4159)
!4164 = !DILocation(line: 767, column: 7, scope: !4160)
!4165 = !DILocation(line: 771, column: 42, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4159, file: !242, line: 768, column: 3)
!4167 = !DILocation(line: 0, scope: !4131)
!4168 = !DILocation(line: 773, column: 8, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4166, file: !242, line: 773, column: 8)
!4170 = !{!4171, !1015, i64 20}
!4171 = !{!"tmrTimerControl", !1015, i64 0, !1464, i64 4, !1020, i64 24, !1015, i64 28, !1015, i64 32, !1023, i64 36, !1016, i64 40}
!4172 = !DILocation(line: 773, column: 8, scope: !4166)
!4173 = !DILocation(line: 776, column: 14, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4169, file: !242, line: 774, column: 4)
!4175 = !DILocation(line: 777, column: 4, scope: !4174)
!4176 = !DILocation(line: 791, column: 15, scope: !4166)
!4177 = !DILocation(line: 793, column: 21, scope: !4166)
!4178 = !DILocation(line: 793, column: 4, scope: !4166)
!4179 = !DILocation(line: 801, column: 15, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4166, file: !242, line: 794, column: 4)
!4181 = !DILocation(line: 801, column: 24, scope: !4180)
!4182 = !{!4171, !1016, i64 40}
!4183 = !DILocation(line: 802, column: 76, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4180, file: !242, line: 802, column: 10)
!4185 = !DILocation(line: 802, column: 101, scope: !4184)
!4186 = !{!4171, !1020, i64 24}
!4187 = !DILocation(line: 802, column: 90, scope: !4184)
!4188 = !DILocation(line: 802, column: 10, scope: !4184)
!4189 = !DILocation(line: 802, column: 176, scope: !4184)
!4190 = !DILocation(line: 802, column: 10, scope: !4180)
!4191 = !DILocation(line: 806, column: 16, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4184, file: !242, line: 803, column: 6)
!4193 = !{!4171, !1015, i64 32}
!4194 = !DILocation(line: 806, column: 7, scope: !4192)
!4195 = !DILocation(line: 809, column: 22, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4192, file: !242, line: 809, column: 11)
!4197 = !DILocation(line: 809, column: 31, scope: !4196)
!4198 = !DILocation(line: 809, column: 59, scope: !4196)
!4199 = !DILocation(line: 809, column: 11, scope: !4192)
!4200 = !DILocation(line: 811, column: 106, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4196, file: !242, line: 810, column: 7)
!4202 = !DILocation(line: 811, column: 131, scope: !4201)
!4203 = !DILocation(line: 811, column: 120, scope: !4201)
!4204 = !DILocation(line: 811, column: 18, scope: !4201)
!4205 = !DILocation(line: 812, column: 8, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4201, file: !242, line: 812, column: 8)
!4207 = !DILocation(line: 812, column: 8, scope: !4201)
!4208 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4209)
!4209 = distinct !DILocation(line: 812, column: 8, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4206, file: !242, line: 812, column: 8)
!4211 = !DILocation(line: 0, scope: !4012, inlinedAt: !4209)
!4212 = !DILocation(line: 812, column: 8, scope: !4210)
!4213 = !DILocation(line: 812, column: 8, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !242, line: 812, column: 8)
!4215 = distinct !DILexicalBlock(scope: !4210, file: !242, line: 812, column: 8)
!4216 = distinct !{!4216, !4217, !4217}
!4217 = !DILocation(line: 812, column: 8, scope: !4215)
!4218 = !DILocation(line: 829, column: 15, scope: !4180)
!4219 = !DILocation(line: 829, column: 24, scope: !4180)
!4220 = !DILocation(line: 830, column: 6, scope: !4180)
!4221 = !DILocation(line: 834, column: 15, scope: !4180)
!4222 = !DILocation(line: 834, column: 24, scope: !4180)
!4223 = !DILocation(line: 835, column: 65, scope: !4180)
!4224 = !DILocation(line: 835, column: 15, scope: !4180)
!4225 = !DILocation(line: 835, column: 35, scope: !4180)
!4226 = !DILocation(line: 836, column: 6, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4180, file: !242, line: 836, column: 6)
!4228 = !DILocation(line: 836, column: 6, scope: !4180)
!4229 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4230)
!4230 = distinct !DILocation(line: 836, column: 6, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4227, file: !242, line: 836, column: 6)
!4232 = !DILocation(line: 0, scope: !4012, inlinedAt: !4230)
!4233 = !DILocation(line: 836, column: 6, scope: !4231)
!4234 = !DILocation(line: 836, column: 6, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !242, line: 836, column: 6)
!4236 = distinct !DILexicalBlock(scope: !4231, file: !242, line: 836, column: 6)
!4237 = distinct !{!4237, !4238, !4238}
!4238 = !DILocation(line: 836, column: 6, scope: !4236)
!4239 = !DILocation(line: 844, column: 63, scope: !4180)
!4240 = !DILocation(line: 844, column: 15, scope: !4180)
!4241 = !DILocation(line: 845, column: 6, scope: !4180)
!4242 = !DILocation(line: 853, column: 22, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4244, file: !242, line: 853, column: 11)
!4244 = distinct !DILexicalBlock(scope: !4180, file: !242, line: 849, column: 6)
!4245 = !DILocation(line: 853, column: 31, scope: !4243)
!4246 = !DILocation(line: 853, column: 69, scope: !4243)
!4247 = !DILocation(line: 853, column: 11, scope: !4244)
!4248 = !DILocation(line: 855, column: 19, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4243, file: !242, line: 854, column: 7)
!4250 = !DILocation(line: 855, column: 8, scope: !4249)
!4251 = !DILocation(line: 856, column: 7, scope: !4249)
!4252 = !DILocation(line: 859, column: 26, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4243, file: !242, line: 858, column: 7)
!4254 = distinct !{!4254, !4157, !4255, !1525}
!4255 = !DILocation(line: 878, column: 2, scope: !4131)
!4256 = !DILocation(line: 879, column: 1, scope: !4131)
!4257 = !DILocation(line: 0, scope: !294)
!4258 = !DILocation(line: 675, column: 13, scope: !294)
!4259 = !DILocation(line: 677, column: 17, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !294, file: !242, line: 677, column: 6)
!4261 = !DILocation(line: 677, column: 15, scope: !4260)
!4262 = !DILocation(line: 677, column: 6, scope: !294)
!4263 = !DILocation(line: 679, column: 3, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4260, file: !242, line: 678, column: 2)
!4265 = !DILocation(line: 681, column: 2, scope: !4264)
!4266 = !DILocation(line: 0, scope: !4260)
!4267 = !DILocation(line: 687, column: 12, scope: !294)
!4268 = !DILocation(line: 689, column: 2, scope: !294)
!4269 = distinct !DISubprogram(name: "prvInsertTimerInActiveList", scope: !242, file: !242, line: 693, type: !4270, scopeLine: 694, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4273)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{!176, !4272, !1774, !1774, !1774}
!4272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!4273 = !{!4274, !4275, !4276, !4277, !4278}
!4274 = !DILocalVariable(name: "pxTimer", arg: 1, scope: !4269, file: !242, line: 693, type: !4272)
!4275 = !DILocalVariable(name: "xNextExpiryTime", arg: 2, scope: !4269, file: !242, line: 693, type: !1774)
!4276 = !DILocalVariable(name: "xTimeNow", arg: 3, scope: !4269, file: !242, line: 693, type: !1774)
!4277 = !DILocalVariable(name: "xCommandTime", arg: 4, scope: !4269, file: !242, line: 693, type: !1774)
!4278 = !DILocalVariable(name: "xProcessTimerNow", scope: !4269, file: !242, line: 695, type: !176)
!4279 = !DILocation(line: 0, scope: !4269)
!4280 = !DILocation(line: 697, column: 2, scope: !4269)
!4281 = !{!4171, !1020, i64 4}
!4282 = !DILocation(line: 698, column: 2, scope: !4269)
!4283 = !{!4171, !1015, i64 16}
!4284 = !DILocation(line: 700, column: 22, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4269, file: !242, line: 700, column: 6)
!4286 = !DILocation(line: 700, column: 6, scope: !4269)
!4287 = !DILocation(line: 704, column: 35, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !242, line: 704, column: 7)
!4289 = distinct !DILexicalBlock(scope: !4285, file: !242, line: 701, column: 2)
!4290 = !DILocation(line: 704, column: 66, scope: !4288)
!4291 = !DILocation(line: 704, column: 54, scope: !4288)
!4292 = !DILocation(line: 704, column: 7, scope: !4289)
!4293 = !DILocation(line: 717, column: 18, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4295, file: !242, line: 717, column: 7)
!4295 = distinct !DILexicalBlock(scope: !4285, file: !242, line: 716, column: 2)
!4296 = !DILocation(line: 717, column: 35, scope: !4294)
!4297 = !DILocation(line: 0, scope: !4285)
!4298 = !DILocation(line: 730, column: 2, scope: !4269)
!4299 = distinct !DISubprogram(name: "xTimerGenericCommand", scope: !242, file: !242, line: 381, type: !4300, scopeLine: 382, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4302)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!176, !278, !1864, !1774, !297, !1774}
!4302 = !{!4303, !4304, !4305, !4306, !4307, !4308, !4309}
!4303 = !DILocalVariable(name: "xTimer", arg: 1, scope: !4299, file: !242, line: 381, type: !278)
!4304 = !DILocalVariable(name: "xCommandID", arg: 2, scope: !4299, file: !242, line: 381, type: !1864)
!4305 = !DILocalVariable(name: "xOptionalValue", arg: 3, scope: !4299, file: !242, line: 381, type: !1774)
!4306 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 4, scope: !4299, file: !242, line: 381, type: !297)
!4307 = !DILocalVariable(name: "xTicksToWait", arg: 5, scope: !4299, file: !242, line: 381, type: !1774)
!4308 = !DILocalVariable(name: "xReturn", scope: !4299, file: !242, line: 383, type: !176)
!4309 = !DILocalVariable(name: "xMessage", scope: !4299, file: !242, line: 384, type: !4134)
!4310 = !DILocation(line: 0, scope: !4299)
!4311 = !DILocation(line: 384, column: 1, scope: !4299)
!4312 = !DILocation(line: 384, column: 21, scope: !4299)
!4313 = !DILocation(line: 386, column: 2, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4299, file: !242, line: 386, column: 2)
!4315 = !DILocation(line: 386, column: 2, scope: !4299)
!4316 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4317)
!4317 = distinct !DILocation(line: 386, column: 2, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4314, file: !242, line: 386, column: 2)
!4319 = !DILocation(line: 0, scope: !4012, inlinedAt: !4317)
!4320 = !DILocation(line: 386, column: 2, scope: !4318)
!4321 = !DILocation(line: 386, column: 2, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4323, file: !242, line: 386, column: 2)
!4323 = distinct !DILexicalBlock(scope: !4318, file: !242, line: 386, column: 2)
!4324 = distinct !{!4324, !4325, !4325}
!4325 = !DILocation(line: 386, column: 2, scope: !4323)
!4326 = !DILocation(line: 390, column: 6, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4299, file: !242, line: 390, column: 6)
!4328 = !DILocation(line: 390, column: 18, scope: !4327)
!4329 = !DILocation(line: 390, column: 6, scope: !4299)
!4330 = !DILocation(line: 393, column: 12, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4327, file: !242, line: 391, column: 2)
!4332 = !DILocation(line: 393, column: 23, scope: !4331)
!4333 = !DILocation(line: 394, column: 31, scope: !4331)
!4334 = !DILocation(line: 394, column: 45, scope: !4331)
!4335 = !DILocation(line: 395, column: 31, scope: !4331)
!4336 = !DILocation(line: 395, column: 39, scope: !4331)
!4337 = !DILocation(line: 397, column: 18, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4331, file: !242, line: 397, column: 7)
!4339 = !DILocation(line: 397, column: 7, scope: !4331)
!4340 = !DILocation(line: 399, column: 8, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !242, line: 399, column: 8)
!4342 = distinct !DILexicalBlock(scope: !4338, file: !242, line: 398, column: 3)
!4343 = !DILocation(line: 399, column: 33, scope: !4341)
!4344 = !DILocation(line: 0, scope: !4341)
!4345 = !DILocation(line: 399, column: 8, scope: !4342)
!4346 = !DILocation(line: 401, column: 15, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4341, file: !242, line: 400, column: 4)
!4348 = !DILocation(line: 402, column: 4, scope: !4347)
!4349 = !DILocation(line: 405, column: 15, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4341, file: !242, line: 404, column: 4)
!4351 = !DILocation(line: 410, column: 14, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4338, file: !242, line: 409, column: 3)
!4353 = !DILocation(line: 421, column: 1, scope: !4299)
!4354 = !DILocation(line: 420, column: 2, scope: !4299)
!4355 = distinct !DISubprogram(name: "prvSwitchTimerLists", scope: !242, file: !242, line: 882, type: !1054, scopeLine: 883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4356)
!4356 = !{!4357, !4358, !4359, !4360, !4361}
!4357 = !DILocalVariable(name: "xNextExpireTime", scope: !4355, file: !242, line: 884, type: !39)
!4358 = !DILocalVariable(name: "xReloadTime", scope: !4355, file: !242, line: 884, type: !39)
!4359 = !DILocalVariable(name: "pxTemp", scope: !4355, file: !242, line: 885, type: !290)
!4360 = !DILocalVariable(name: "pxTimer", scope: !4355, file: !242, line: 886, type: !240)
!4361 = !DILocalVariable(name: "xResult", scope: !4355, file: !242, line: 887, type: !176)
!4362 = !DILocation(line: 893, column: 9, scope: !4355)
!4363 = !DILocation(line: 893, column: 2, scope: !4355)
!4364 = !DILocation(line: 895, column: 21, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4355, file: !242, line: 894, column: 2)
!4366 = !DILocation(line: 0, scope: !4355)
!4367 = !DILocation(line: 898, column: 27, scope: !4365)
!4368 = !DILocation(line: 898, column: 13, scope: !4365)
!4369 = !DILocation(line: 899, column: 38, scope: !4365)
!4370 = !DILocation(line: 899, column: 12, scope: !4365)
!4371 = !DILocation(line: 905, column: 12, scope: !4365)
!4372 = !DILocation(line: 905, column: 3, scope: !4365)
!4373 = !DILocation(line: 907, column: 18, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4365, file: !242, line: 907, column: 7)
!4375 = !DILocation(line: 907, column: 27, scope: !4374)
!4376 = !DILocation(line: 907, column: 55, scope: !4374)
!4377 = !DILocation(line: 907, column: 7, scope: !4365)
!4378 = !DILocation(line: 915, column: 47, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4374, file: !242, line: 908, column: 3)
!4380 = !DILocation(line: 915, column: 36, scope: !4379)
!4381 = !DILocation(line: 916, column: 20, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4379, file: !242, line: 916, column: 8)
!4383 = !DILocation(line: 916, column: 8, scope: !4379)
!4384 = !DILocation(line: 918, column: 5, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4382, file: !242, line: 917, column: 4)
!4386 = !DILocation(line: 919, column: 5, scope: !4385)
!4387 = !DILocation(line: 920, column: 18, scope: !4385)
!4388 = !DILocation(line: 920, column: 5, scope: !4385)
!4389 = !DILocation(line: 921, column: 4, scope: !4385)
!4390 = !DILocation(line: 924, column: 15, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4382, file: !242, line: 923, column: 4)
!4392 = !DILocation(line: 925, column: 5, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4391, file: !242, line: 925, column: 5)
!4394 = !DILocation(line: 925, column: 5, scope: !4391)
!4395 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4396)
!4396 = distinct !DILocation(line: 925, column: 5, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4393, file: !242, line: 925, column: 5)
!4398 = !DILocation(line: 0, scope: !4012, inlinedAt: !4396)
!4399 = !DILocation(line: 925, column: 5, scope: !4397)
!4400 = !DILocation(line: 925, column: 5, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !242, line: 925, column: 5)
!4402 = distinct !DILexicalBlock(scope: !4397, file: !242, line: 925, column: 5)
!4403 = distinct !{!4403, !4404, !4404}
!4404 = !DILocation(line: 925, column: 5, scope: !4402)
!4405 = distinct !{!4405, !4363, !4406, !1525}
!4406 = !DILocation(line: 933, column: 2, scope: !4355)
!4407 = !DILocation(line: 936, column: 23, scope: !4355)
!4408 = !DILocation(line: 936, column: 21, scope: !4355)
!4409 = !DILocation(line: 937, column: 22, scope: !4355)
!4410 = !DILocation(line: 938, column: 1, scope: !4355)
!4411 = distinct !DISubprogram(name: "prvProcessExpiredTimer", scope: !242, file: !242, line: 507, type: !4412, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4414)
!4412 = !DISubroutineType(types: !4413)
!4413 = !{null, !1774, !1774}
!4414 = !{!4415, !4416, !4417, !4418}
!4415 = !DILocalVariable(name: "xNextExpireTime", arg: 1, scope: !4411, file: !242, line: 507, type: !1774)
!4416 = !DILocalVariable(name: "xTimeNow", arg: 2, scope: !4411, file: !242, line: 507, type: !1774)
!4417 = !DILocalVariable(name: "xResult", scope: !4411, file: !242, line: 509, type: !176)
!4418 = !DILocalVariable(name: "pxTimer", scope: !4411, file: !242, line: 510, type: !4272)
!4419 = !DILocation(line: 0, scope: !4411)
!4420 = !DILocation(line: 510, column: 41, scope: !4411)
!4421 = !DILocation(line: 514, column: 37, scope: !4411)
!4422 = !DILocation(line: 514, column: 11, scope: !4411)
!4423 = !DILocation(line: 519, column: 17, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4411, file: !242, line: 519, column: 6)
!4425 = !DILocation(line: 519, column: 26, scope: !4424)
!4426 = !DILocation(line: 519, column: 54, scope: !4424)
!4427 = !DILocation(line: 519, column: 6, scope: !4411)
!4428 = !DILocation(line: 524, column: 73, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !242, line: 524, column: 7)
!4430 = distinct !DILexicalBlock(scope: !4424, file: !242, line: 520, column: 2)
!4431 = !DILocation(line: 524, column: 62, scope: !4429)
!4432 = !DILocation(line: 524, column: 7, scope: !4429)
!4433 = !DILocation(line: 524, column: 124, scope: !4429)
!4434 = !DILocation(line: 524, column: 7, scope: !4430)
!4435 = !DILocation(line: 528, column: 14, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4429, file: !242, line: 525, column: 3)
!4437 = !DILocation(line: 529, column: 4, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4436, file: !242, line: 529, column: 4)
!4439 = !DILocation(line: 529, column: 4, scope: !4436)
!4440 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4441)
!4441 = distinct !DILocation(line: 529, column: 4, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4438, file: !242, line: 529, column: 4)
!4443 = !DILocation(line: 0, scope: !4012, inlinedAt: !4441)
!4444 = !DILocation(line: 529, column: 4, scope: !4442)
!4445 = !DILocation(line: 529, column: 4, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4447, file: !242, line: 529, column: 4)
!4447 = distinct !DILexicalBlock(scope: !4442, file: !242, line: 529, column: 4)
!4448 = distinct !{!4448, !4449, !4449}
!4449 = !DILocation(line: 529, column: 4, scope: !4447)
!4450 = !DILocation(line: 539, column: 21, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4424, file: !242, line: 538, column: 2)
!4452 = !DILocation(line: 544, column: 11, scope: !4411)
!4453 = !DILocation(line: 544, column: 2, scope: !4411)
!4454 = !DILocation(line: 545, column: 1, scope: !4411)
!4455 = distinct !DISubprogram(name: "xTimerCreate", scope: !242, file: !242, line: 282, type: !4456, scopeLine: 287, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4458)
!4456 = !DISubroutineType(types: !4457)
!4457 = !{!278, !1427, !1774, !2753, !1429, !273}
!4458 = !{!4459, !4460, !4461, !4462, !4463, !4464}
!4459 = !DILocalVariable(name: "pcTimerName", arg: 1, scope: !4455, file: !242, line: 282, type: !1427)
!4460 = !DILocalVariable(name: "xTimerPeriodInTicks", arg: 2, scope: !4455, file: !242, line: 283, type: !1774)
!4461 = !DILocalVariable(name: "uxAutoReload", arg: 3, scope: !4455, file: !242, line: 284, type: !2753)
!4462 = !DILocalVariable(name: "pvTimerID", arg: 4, scope: !4455, file: !242, line: 285, type: !1429)
!4463 = !DILocalVariable(name: "pxCallbackFunction", arg: 5, scope: !4455, file: !242, line: 286, type: !273)
!4464 = !DILocalVariable(name: "pxNewTimer", scope: !4455, file: !242, line: 288, type: !240)
!4465 = !DILocation(line: 0, scope: !4455)
!4466 = !DILocation(line: 290, column: 30, scope: !4455)
!4467 = !DILocation(line: 290, column: 16, scope: !4455)
!4468 = !DILocation(line: 292, column: 18, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4455, file: !242, line: 292, column: 7)
!4470 = !DILocation(line: 292, column: 7, scope: !4455)
!4471 = !DILocation(line: 297, column: 16, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4469, file: !242, line: 293, column: 3)
!4473 = !DILocation(line: 297, column: 25, scope: !4472)
!4474 = !DILocation(line: 298, column: 4, scope: !4472)
!4475 = !DILocation(line: 299, column: 3, scope: !4472)
!4476 = !DILocation(line: 301, column: 3, scope: !4455)
!4477 = distinct !DISubprogram(name: "prvInitialiseNewTimer", scope: !242, file: !242, line: 349, type: !4478, scopeLine: 355, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4480)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{null, !1427, !1774, !2753, !1429, !273, !240}
!4480 = !{!4481, !4482, !4483, !4484, !4485, !4486}
!4481 = !DILocalVariable(name: "pcTimerName", arg: 1, scope: !4477, file: !242, line: 349, type: !1427)
!4482 = !DILocalVariable(name: "xTimerPeriodInTicks", arg: 2, scope: !4477, file: !242, line: 350, type: !1774)
!4483 = !DILocalVariable(name: "uxAutoReload", arg: 3, scope: !4477, file: !242, line: 351, type: !2753)
!4484 = !DILocalVariable(name: "pvTimerID", arg: 4, scope: !4477, file: !242, line: 352, type: !1429)
!4485 = !DILocalVariable(name: "pxCallbackFunction", arg: 5, scope: !4477, file: !242, line: 353, type: !273)
!4486 = !DILocalVariable(name: "pxNewTimer", arg: 6, scope: !4477, file: !242, line: 354, type: !240)
!4487 = !DILocation(line: 0, scope: !4477)
!4488 = !DILocation(line: 357, column: 2, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4477, file: !242, line: 357, column: 2)
!4490 = !DILocation(line: 357, column: 2, scope: !4477)
!4491 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4492)
!4492 = distinct !DILocation(line: 357, column: 2, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4489, file: !242, line: 357, column: 2)
!4494 = !DILocation(line: 0, scope: !4012, inlinedAt: !4492)
!4495 = !DILocation(line: 357, column: 2, scope: !4493)
!4496 = !DILocation(line: 357, column: 2, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4498, file: !242, line: 357, column: 2)
!4498 = distinct !DILexicalBlock(scope: !4493, file: !242, line: 357, column: 2)
!4499 = distinct !{!4499, !4500, !4500}
!4500 = !DILocation(line: 357, column: 2, scope: !4498)
!4501 = !DILocation(line: 359, column: 17, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4477, file: !242, line: 359, column: 6)
!4503 = !DILocation(line: 359, column: 6, scope: !4477)
!4504 = !DILocation(line: 363, column: 3, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4502, file: !242, line: 360, column: 2)
!4506 = !DILocation(line: 367, column: 15, scope: !4505)
!4507 = !DILocation(line: 367, column: 27, scope: !4505)
!4508 = !{!4171, !1015, i64 0}
!4509 = !DILocation(line: 368, column: 15, scope: !4505)
!4510 = !DILocation(line: 368, column: 35, scope: !4505)
!4511 = !DILocation(line: 369, column: 15, scope: !4505)
!4512 = !DILocation(line: 369, column: 25, scope: !4505)
!4513 = !{!4171, !1015, i64 28}
!4514 = !DILocation(line: 370, column: 15, scope: !4505)
!4515 = !DILocation(line: 370, column: 34, scope: !4505)
!4516 = !DILocation(line: 371, column: 39, scope: !4505)
!4517 = !DILocation(line: 371, column: 3, scope: !4505)
!4518 = !DILocation(line: 372, column: 20, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4505, file: !242, line: 372, column: 7)
!4520 = !DILocation(line: 372, column: 7, scope: !4505)
!4521 = !DILocation(line: 374, column: 16, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4519, file: !242, line: 373, column: 3)
!4523 = !DILocation(line: 374, column: 25, scope: !4522)
!4524 = !DILocation(line: 375, column: 3, scope: !4522)
!4525 = !DILocation(line: 378, column: 1, scope: !4477)
!4526 = distinct !DISubprogram(name: "xTimerGetTimerDaemonTaskHandle", scope: !242, file: !242, line: 424, type: !4527, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !1056)
!4527 = !DISubroutineType(types: !4528)
!4528 = !{!285}
!4529 = !DILocation(line: 428, column: 2, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4526, file: !242, line: 428, column: 2)
!4531 = !DILocation(line: 428, column: 2, scope: !4526)
!4532 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4533)
!4533 = distinct !DILocation(line: 428, column: 2, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4530, file: !242, line: 428, column: 2)
!4535 = !DILocation(line: 0, scope: !4012, inlinedAt: !4533)
!4536 = !DILocation(line: 428, column: 2, scope: !4534)
!4537 = !DILocation(line: 428, column: 2, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !242, line: 428, column: 2)
!4539 = distinct !DILexicalBlock(scope: !4534, file: !242, line: 428, column: 2)
!4540 = distinct !{!4540, !4541, !4541}
!4541 = !DILocation(line: 428, column: 2, scope: !4539)
!4542 = !DILocation(line: 429, column: 2, scope: !4526)
!4543 = distinct !DISubprogram(name: "xTimerGetPeriod", scope: !242, file: !242, line: 433, type: !4544, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4546)
!4544 = !DISubroutineType(types: !4545)
!4545 = !{!39, !278}
!4546 = !{!4547, !4548}
!4547 = !DILocalVariable(name: "xTimer", arg: 1, scope: !4543, file: !242, line: 433, type: !278)
!4548 = !DILocalVariable(name: "pxTimer", scope: !4543, file: !242, line: 435, type: !240)
!4549 = !DILocation(line: 0, scope: !4543)
!4550 = !DILocation(line: 437, column: 2, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4543, file: !242, line: 437, column: 2)
!4552 = !DILocation(line: 437, column: 2, scope: !4543)
!4553 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4554)
!4554 = distinct !DILocation(line: 437, column: 2, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4551, file: !242, line: 437, column: 2)
!4556 = !DILocation(line: 0, scope: !4012, inlinedAt: !4554)
!4557 = !DILocation(line: 437, column: 2, scope: !4555)
!4558 = !DILocation(line: 437, column: 2, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !242, line: 437, column: 2)
!4560 = distinct !DILexicalBlock(scope: !4555, file: !242, line: 437, column: 2)
!4561 = distinct !{!4561, !4562, !4562}
!4562 = !DILocation(line: 437, column: 2, scope: !4560)
!4563 = !DILocation(line: 438, column: 18, scope: !4543)
!4564 = !DILocation(line: 438, column: 2, scope: !4543)
!4565 = distinct !DISubprogram(name: "vTimerSetReloadMode", scope: !242, file: !242, line: 442, type: !4566, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4568)
!4566 = !DISubroutineType(types: !4567)
!4567 = !{null, !278, !2753}
!4568 = !{!4569, !4570, !4571}
!4569 = !DILocalVariable(name: "xTimer", arg: 1, scope: !4565, file: !242, line: 442, type: !278)
!4570 = !DILocalVariable(name: "uxAutoReload", arg: 2, scope: !4565, file: !242, line: 442, type: !2753)
!4571 = !DILocalVariable(name: "pxTimer", scope: !4565, file: !242, line: 444, type: !240)
!4572 = !DILocation(line: 0, scope: !4565)
!4573 = !DILocation(line: 446, column: 2, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4565, file: !242, line: 446, column: 2)
!4575 = !DILocation(line: 446, column: 2, scope: !4565)
!4576 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4577)
!4577 = distinct !DILocation(line: 446, column: 2, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4574, file: !242, line: 446, column: 2)
!4579 = !DILocation(line: 0, scope: !4012, inlinedAt: !4577)
!4580 = !DILocation(line: 446, column: 2, scope: !4578)
!4581 = !DILocation(line: 446, column: 2, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4583, file: !242, line: 446, column: 2)
!4583 = distinct !DILexicalBlock(scope: !4578, file: !242, line: 446, column: 2)
!4584 = distinct !{!4584, !4585, !4585}
!4585 = !DILocation(line: 446, column: 2, scope: !4583)
!4586 = !DILocation(line: 447, column: 2, scope: !4565)
!4587 = !DILocation(line: 449, column: 20, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4589, file: !242, line: 449, column: 7)
!4589 = distinct !DILexicalBlock(scope: !4565, file: !242, line: 448, column: 2)
!4590 = !DILocation(line: 0, scope: !4588)
!4591 = !DILocation(line: 449, column: 7, scope: !4589)
!4592 = !DILocation(line: 458, column: 2, scope: !4565)
!4593 = !DILocation(line: 459, column: 1, scope: !4565)
!4594 = distinct !DISubprogram(name: "uxTimerGetReloadMode", scope: !242, file: !242, line: 462, type: !4595, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4597)
!4595 = !DISubroutineType(types: !4596)
!4596 = !{!149, !278}
!4597 = !{!4598, !4599, !4600}
!4598 = !DILocalVariable(name: "xTimer", arg: 1, scope: !4594, file: !242, line: 462, type: !278)
!4599 = !DILocalVariable(name: "pxTimer", scope: !4594, file: !242, line: 464, type: !240)
!4600 = !DILocalVariable(name: "uxReturn", scope: !4594, file: !242, line: 465, type: !149)
!4601 = !DILocation(line: 0, scope: !4594)
!4602 = !DILocation(line: 467, column: 2, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4594, file: !242, line: 467, column: 2)
!4604 = !DILocation(line: 467, column: 2, scope: !4594)
!4605 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4606)
!4606 = distinct !DILocation(line: 467, column: 2, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4603, file: !242, line: 467, column: 2)
!4608 = !DILocation(line: 0, scope: !4012, inlinedAt: !4606)
!4609 = !DILocation(line: 467, column: 2, scope: !4607)
!4610 = !DILocation(line: 467, column: 2, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4612, file: !242, line: 467, column: 2)
!4612 = distinct !DILexicalBlock(scope: !4607, file: !242, line: 467, column: 2)
!4613 = distinct !{!4613, !4614, !4614}
!4614 = !DILocation(line: 467, column: 2, scope: !4612)
!4615 = !DILocation(line: 468, column: 2, scope: !4594)
!4616 = !DILocation(line: 470, column: 18, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4618, file: !242, line: 470, column: 7)
!4618 = distinct !DILexicalBlock(scope: !4594, file: !242, line: 469, column: 2)
!4619 = !DILocation(line: 481, column: 2, scope: !4594)
!4620 = !DILocation(line: 483, column: 2, scope: !4594)
!4621 = distinct !DISubprogram(name: "xTimerGetExpiryTime", scope: !242, file: !242, line: 487, type: !4544, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4622)
!4622 = !{!4623, !4624, !4625}
!4623 = !DILocalVariable(name: "xTimer", arg: 1, scope: !4621, file: !242, line: 487, type: !278)
!4624 = !DILocalVariable(name: "pxTimer", scope: !4621, file: !242, line: 489, type: !240)
!4625 = !DILocalVariable(name: "xReturn", scope: !4621, file: !242, line: 490, type: !39)
!4626 = !DILocation(line: 0, scope: !4621)
!4627 = !DILocation(line: 492, column: 2, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4621, file: !242, line: 492, column: 2)
!4629 = !DILocation(line: 492, column: 2, scope: !4621)
!4630 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4631)
!4631 = distinct !DILocation(line: 492, column: 2, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4628, file: !242, line: 492, column: 2)
!4633 = !DILocation(line: 0, scope: !4012, inlinedAt: !4631)
!4634 = !DILocation(line: 492, column: 2, scope: !4632)
!4635 = !DILocation(line: 492, column: 2, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !242, line: 492, column: 2)
!4637 = distinct !DILexicalBlock(scope: !4632, file: !242, line: 492, column: 2)
!4638 = distinct !{!4638, !4639, !4639}
!4639 = !DILocation(line: 492, column: 2, scope: !4637)
!4640 = !DILocation(line: 493, column: 12, scope: !4621)
!4641 = !DILocation(line: 494, column: 2, scope: !4621)
!4642 = distinct !DISubprogram(name: "pcTimerGetName", scope: !242, file: !242, line: 498, type: !4643, scopeLine: 499, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4645)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{!183, !278}
!4645 = !{!4646, !4647}
!4646 = !DILocalVariable(name: "xTimer", arg: 1, scope: !4642, file: !242, line: 498, type: !278)
!4647 = !DILocalVariable(name: "pxTimer", scope: !4642, file: !242, line: 500, type: !240)
!4648 = !DILocation(line: 0, scope: !4642)
!4649 = !DILocation(line: 502, column: 2, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4642, file: !242, line: 502, column: 2)
!4651 = !DILocation(line: 502, column: 2, scope: !4642)
!4652 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4653)
!4653 = distinct !DILocation(line: 502, column: 2, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4650, file: !242, line: 502, column: 2)
!4655 = !DILocation(line: 0, scope: !4012, inlinedAt: !4653)
!4656 = !DILocation(line: 502, column: 2, scope: !4654)
!4657 = !DILocation(line: 502, column: 2, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !242, line: 502, column: 2)
!4659 = distinct !DILexicalBlock(scope: !4654, file: !242, line: 502, column: 2)
!4660 = distinct !{!4660, !4661, !4661}
!4661 = !DILocation(line: 502, column: 2, scope: !4659)
!4662 = !DILocation(line: 503, column: 18, scope: !4642)
!4663 = !DILocation(line: 503, column: 2, scope: !4642)
!4664 = distinct !DISubprogram(name: "xTimerIsTimerActive", scope: !242, file: !242, line: 992, type: !4665, scopeLine: 993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4667)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{!176, !278}
!4667 = !{!4668, !4669, !4670}
!4668 = !DILocalVariable(name: "xTimer", arg: 1, scope: !4664, file: !242, line: 992, type: !278)
!4669 = !DILocalVariable(name: "xReturn", scope: !4664, file: !242, line: 994, type: !176)
!4670 = !DILocalVariable(name: "pxTimer", scope: !4664, file: !242, line: 995, type: !240)
!4671 = !DILocation(line: 0, scope: !4664)
!4672 = !DILocation(line: 997, column: 2, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4664, file: !242, line: 997, column: 2)
!4674 = !DILocation(line: 997, column: 2, scope: !4664)
!4675 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4676)
!4676 = distinct !DILocation(line: 997, column: 2, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4673, file: !242, line: 997, column: 2)
!4678 = !DILocation(line: 0, scope: !4012, inlinedAt: !4676)
!4679 = !DILocation(line: 997, column: 2, scope: !4677)
!4680 = !DILocation(line: 997, column: 2, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !242, line: 997, column: 2)
!4682 = distinct !DILexicalBlock(scope: !4677, file: !242, line: 997, column: 2)
!4683 = distinct !{!4683, !4684, !4684}
!4684 = !DILocation(line: 997, column: 2, scope: !4682)
!4685 = !DILocation(line: 1000, column: 2, scope: !4664)
!4686 = !DILocation(line: 1002, column: 18, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4688, file: !242, line: 1002, column: 7)
!4688 = distinct !DILexicalBlock(scope: !4664, file: !242, line: 1001, column: 2)
!4689 = !DILocation(line: 1002, column: 27, scope: !4687)
!4690 = !DILocation(line: 1011, column: 2, scope: !4664)
!4691 = !DILocation(line: 1013, column: 2, scope: !4664)
!4692 = distinct !DISubprogram(name: "pvTimerGetTimerID", scope: !242, file: !242, line: 1017, type: !4693, scopeLine: 1018, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4696)
!4693 = !DISubroutineType(types: !4694)
!4694 = !{!78, !4695}
!4695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!4696 = !{!4697, !4698, !4699}
!4697 = !DILocalVariable(name: "xTimer", arg: 1, scope: !4692, file: !242, line: 1017, type: !4695)
!4698 = !DILocalVariable(name: "pxTimer", scope: !4692, file: !242, line: 1019, type: !4272)
!4699 = !DILocalVariable(name: "pvReturn", scope: !4692, file: !242, line: 1020, type: !78)
!4700 = !DILocation(line: 0, scope: !4692)
!4701 = !DILocation(line: 1022, column: 2, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4692, file: !242, line: 1022, column: 2)
!4703 = !DILocation(line: 1022, column: 2, scope: !4692)
!4704 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4705)
!4705 = distinct !DILocation(line: 1022, column: 2, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4702, file: !242, line: 1022, column: 2)
!4707 = !DILocation(line: 0, scope: !4012, inlinedAt: !4705)
!4708 = !DILocation(line: 1022, column: 2, scope: !4706)
!4709 = !DILocation(line: 1022, column: 2, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !242, line: 1022, column: 2)
!4711 = distinct !DILexicalBlock(scope: !4706, file: !242, line: 1022, column: 2)
!4712 = distinct !{!4712, !4713, !4713}
!4713 = !DILocation(line: 1022, column: 2, scope: !4711)
!4714 = !DILocation(line: 1024, column: 2, scope: !4692)
!4715 = !DILocation(line: 1026, column: 23, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4692, file: !242, line: 1025, column: 2)
!4717 = !DILocation(line: 1028, column: 2, scope: !4692)
!4718 = !DILocation(line: 1030, column: 2, scope: !4692)
!4719 = distinct !DISubprogram(name: "vTimerSetTimerID", scope: !242, file: !242, line: 1034, type: !4720, scopeLine: 1035, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4722)
!4720 = !DISubroutineType(types: !4721)
!4721 = !{null, !278, !78}
!4722 = !{!4723, !4724, !4725}
!4723 = !DILocalVariable(name: "xTimer", arg: 1, scope: !4719, file: !242, line: 1034, type: !278)
!4724 = !DILocalVariable(name: "pvNewID", arg: 2, scope: !4719, file: !242, line: 1034, type: !78)
!4725 = !DILocalVariable(name: "pxTimer", scope: !4719, file: !242, line: 1036, type: !4272)
!4726 = !DILocation(line: 0, scope: !4719)
!4727 = !DILocation(line: 1038, column: 2, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4719, file: !242, line: 1038, column: 2)
!4729 = !DILocation(line: 1038, column: 2, scope: !4719)
!4730 = !DILocation(line: 195, column: 2, scope: !4012, inlinedAt: !4731)
!4731 = distinct !DILocation(line: 1038, column: 2, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4728, file: !242, line: 1038, column: 2)
!4733 = !DILocation(line: 0, scope: !4012, inlinedAt: !4731)
!4734 = !DILocation(line: 1038, column: 2, scope: !4732)
!4735 = !DILocation(line: 1038, column: 2, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !242, line: 1038, column: 2)
!4737 = distinct !DILexicalBlock(scope: !4732, file: !242, line: 1038, column: 2)
!4738 = distinct !{!4738, !4739, !4739}
!4739 = !DILocation(line: 1038, column: 2, scope: !4737)
!4740 = !DILocation(line: 1040, column: 2, scope: !4719)
!4741 = !DILocation(line: 1042, column: 12, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4719, file: !242, line: 1041, column: 2)
!4743 = !DILocation(line: 1042, column: 22, scope: !4742)
!4744 = !DILocation(line: 1044, column: 2, scope: !4719)
!4745 = !DILocation(line: 1045, column: 1, scope: !4719)
!4746 = distinct !DISubprogram(name: "uxTimerGetTimerNumber", scope: !242, file: !242, line: 1103, type: !4595, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4747)
!4747 = !{!4748}
!4748 = !DILocalVariable(name: "xTimer", arg: 1, scope: !4746, file: !242, line: 1103, type: !278)
!4749 = !DILocation(line: 0, scope: !4746)
!4750 = !DILocation(line: 1105, column: 36, scope: !4746)
!4751 = !{!4171, !1023, i64 36}
!4752 = !DILocation(line: 1105, column: 3, scope: !4746)
!4753 = distinct !DISubprogram(name: "vTimerSetTimerNumber", scope: !242, file: !242, line: 1113, type: !4754, scopeLine: 1114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !237, retainedNodes: !4756)
!4754 = !DISubroutineType(types: !4755)
!4755 = !{null, !278, !149}
!4756 = !{!4757, !4758}
!4757 = !DILocalVariable(name: "xTimer", arg: 1, scope: !4753, file: !242, line: 1113, type: !278)
!4758 = !DILocalVariable(name: "uxTimerNumber", arg: 2, scope: !4753, file: !242, line: 1113, type: !149)
!4759 = !DILocation(line: 0, scope: !4753)
!4760 = !DILocation(line: 1115, column: 29, scope: !4753)
!4761 = !DILocation(line: 1115, column: 43, scope: !4753)
!4762 = !DILocation(line: 1116, column: 2, scope: !4753)
!4763 = distinct !DISubprogram(name: "vListInitialise", scope: !4764, file: !4764, line: 37, type: !4765, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !4770)
!4764 = !DIFile(filename: "components/FreeRTOS-Kernel/list.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "37dd2e62432352aebec83527568c6a95")
!4765 = !DISubroutineType(types: !4766)
!4766 = !{null, !4767}
!4767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4768)
!4768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4769, size: 32)
!4769 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !135, line: 171, baseType: !734)
!4770 = !{!4771}
!4771 = !DILocalVariable(name: "pxList", arg: 1, scope: !4763, file: !4764, line: 37, type: !4767)
!4772 = !DILocation(line: 0, scope: !4763)
!4773 = !DILocation(line: 42, column: 48, scope: !4763)
!4774 = !DILocation(line: 42, column: 10, scope: !4763)
!4775 = !DILocation(line: 42, column: 18, scope: !4763)
!4776 = !DILocation(line: 46, column: 19, scope: !4763)
!4777 = !DILocation(line: 46, column: 30, scope: !4763)
!4778 = !{!1684, !1020, i64 8}
!4779 = !DILocation(line: 50, column: 19, scope: !4763)
!4780 = !DILocation(line: 50, column: 26, scope: !4763)
!4781 = !DILocation(line: 51, column: 19, scope: !4763)
!4782 = !DILocation(line: 51, column: 30, scope: !4763)
!4783 = !{!1684, !1015, i64 16}
!4784 = !DILocation(line: 53, column: 10, scope: !4763)
!4785 = !DILocation(line: 53, column: 26, scope: !4763)
!4786 = !DILocation(line: 59, column: 1, scope: !4763)
!4787 = distinct !DISubprogram(name: "vListInitialiseItem", scope: !4764, file: !4764, line: 62, type: !4788, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !4791)
!4788 = !DISubroutineType(types: !4789)
!4789 = !{null, !4790}
!4790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !723)
!4791 = !{!4792}
!4792 = !DILocalVariable(name: "pxItem", arg: 1, scope: !4787, file: !4764, line: 62, type: !4790)
!4793 = !DILocation(line: 0, scope: !4787)
!4794 = !DILocation(line: 65, column: 10, scope: !4787)
!4795 = !DILocation(line: 65, column: 22, scope: !4787)
!4796 = !{!1464, !1015, i64 16}
!4797 = !DILocation(line: 71, column: 1, scope: !4787)
!4798 = distinct !DISubprogram(name: "vListInsertEnd", scope: !4764, file: !4764, line: 74, type: !4799, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !4801)
!4799 = !DISubroutineType(types: !4800)
!4800 = !{null, !4767, !4790}
!4801 = !{!4802, !4803, !4804}
!4802 = !DILocalVariable(name: "pxList", arg: 1, scope: !4798, file: !4764, line: 74, type: !4767)
!4803 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !4798, file: !4764, line: 74, type: !4790)
!4804 = !DILocalVariable(name: "pxIndex", scope: !4798, file: !4764, line: 76, type: !4790)
!4805 = !DILocation(line: 0, scope: !4798)
!4806 = !DILocation(line: 76, column: 38, scope: !4798)
!4807 = !DILocation(line: 87, column: 17, scope: !4798)
!4808 = !DILocation(line: 87, column: 24, scope: !4798)
!4809 = !DILocation(line: 88, column: 39, scope: !4798)
!4810 = !{!1464, !1015, i64 8}
!4811 = !DILocation(line: 88, column: 17, scope: !4798)
!4812 = !DILocation(line: 88, column: 28, scope: !4798)
!4813 = !DILocation(line: 93, column: 11, scope: !4798)
!4814 = !DILocation(line: 93, column: 23, scope: !4798)
!4815 = !DILocation(line: 93, column: 30, scope: !4798)
!4816 = !DILocation(line: 94, column: 22, scope: !4798)
!4817 = !DILocation(line: 97, column: 17, scope: !4798)
!4818 = !DILocation(line: 97, column: 29, scope: !4798)
!4819 = !DILocation(line: 99, column: 12, scope: !4798)
!4820 = !DILocation(line: 99, column: 29, scope: !4798)
!4821 = !DILocation(line: 100, column: 1, scope: !4798)
!4822 = distinct !DISubprogram(name: "vListInsert", scope: !4764, file: !4764, line: 103, type: !4799, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !4823)
!4823 = !{!4824, !4825, !4826, !4827}
!4824 = !DILocalVariable(name: "pxList", arg: 1, scope: !4822, file: !4764, line: 103, type: !4767)
!4825 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !4822, file: !4764, line: 103, type: !4790)
!4826 = !DILocalVariable(name: "pxIterator", scope: !4822, file: !4764, line: 105, type: !723)
!4827 = !DILocalVariable(name: "xValueOfInsertion", scope: !4822, file: !4764, line: 106, type: !1774)
!4828 = !DILocation(line: 0, scope: !4822)
!4829 = !DILocation(line: 106, column: 53, scope: !4822)
!4830 = !DILocation(line: 122, column: 24, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4822, file: !4764, line: 122, column: 6)
!4832 = !DILocation(line: 122, column: 6, scope: !4822)
!4833 = !DILocation(line: 124, column: 33, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4831, file: !4764, line: 123, column: 2)
!4835 = !DILocation(line: 157, column: 38, scope: !4822)
!4836 = !DILocation(line: 125, column: 2, scope: !4834)
!4837 = !DILocation(line: 150, column: 49, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4839, file: !4764, line: 150, column: 3)
!4839 = distinct !DILexicalBlock(scope: !4831, file: !4764, line: 127, column: 2)
!4840 = !DILocation(line: 150, column: 21, scope: !4838)
!4841 = !DILocation(line: 150, column: 8, scope: !4838)
!4842 = !DILocation(line: 0, scope: !4838)
!4843 = !DILocation(line: 150, column: 73, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4838, file: !4764, line: 150, column: 3)
!4845 = !DILocation(line: 150, column: 81, scope: !4844)
!4846 = !DILocation(line: 150, column: 92, scope: !4844)
!4847 = !DILocation(line: 150, column: 3, scope: !4838)
!4848 = distinct !{!4848, !4847, !4849, !1525}
!4849 = !DILocation(line: 154, column: 3, scope: !4838)
!4850 = !DILocation(line: 0, scope: !4831)
!4851 = !DILocation(line: 157, column: 17, scope: !4822)
!4852 = !DILocation(line: 157, column: 24, scope: !4822)
!4853 = !DILocation(line: 158, column: 25, scope: !4822)
!4854 = !DILocation(line: 158, column: 36, scope: !4822)
!4855 = !DILocation(line: 159, column: 17, scope: !4822)
!4856 = !DILocation(line: 159, column: 28, scope: !4822)
!4857 = !DILocation(line: 160, column: 21, scope: !4822)
!4858 = !DILocation(line: 164, column: 17, scope: !4822)
!4859 = !DILocation(line: 164, column: 29, scope: !4822)
!4860 = !DILocation(line: 166, column: 12, scope: !4822)
!4861 = !DILocation(line: 166, column: 29, scope: !4822)
!4862 = !DILocation(line: 167, column: 1, scope: !4822)
!4863 = distinct !DISubprogram(name: "uxListRemove", scope: !4764, file: !4764, line: 170, type: !4864, scopeLine: 171, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !4866)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{!149, !4790}
!4866 = !{!4867, !4868}
!4867 = !DILocalVariable(name: "pxItemToRemove", arg: 1, scope: !4863, file: !4764, line: 170, type: !4790)
!4868 = !DILocalVariable(name: "pxList", scope: !4863, file: !4764, line: 174, type: !4767)
!4869 = !DILocation(line: 0, scope: !4863)
!4870 = !DILocation(line: 174, column: 41, scope: !4863)
!4871 = !DILocation(line: 176, column: 55, scope: !4863)
!4872 = !DILocation(line: 176, column: 18, scope: !4863)
!4873 = !DILocation(line: 176, column: 26, scope: !4863)
!4874 = !DILocation(line: 176, column: 37, scope: !4863)
!4875 = !DILocation(line: 177, column: 18, scope: !4863)
!4876 = !DILocation(line: 177, column: 30, scope: !4863)
!4877 = !DILocation(line: 177, column: 37, scope: !4863)
!4878 = !DILocation(line: 183, column: 14, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4863, file: !4764, line: 183, column: 6)
!4880 = !DILocation(line: 183, column: 22, scope: !4879)
!4881 = !DILocation(line: 183, column: 6, scope: !4863)
!4882 = !DILocation(line: 185, column: 19, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4879, file: !4764, line: 184, column: 2)
!4884 = !DILocation(line: 186, column: 2, scope: !4883)
!4885 = !DILocation(line: 192, column: 30, scope: !4863)
!4886 = !DILocation(line: 193, column: 12, scope: !4863)
!4887 = !DILocation(line: 193, column: 29, scope: !4863)
!4888 = !DILocation(line: 195, column: 17, scope: !4863)
!4889 = !DILocation(line: 195, column: 2, scope: !4863)
!4890 = distinct !DISubprogram(name: "pxPortInitialiseStack", scope: !321, file: !321, line: 187, type: !4891, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !4893)
!4891 = !DISubroutineType(types: !4892)
!4892 = !{!163, !163, !1424, !78}
!4893 = !{!4894, !4895, !4896}
!4894 = !DILocalVariable(name: "pxTopOfStack", arg: 1, scope: !4890, file: !321, line: 187, type: !163)
!4895 = !DILocalVariable(name: "pxCode", arg: 2, scope: !4890, file: !321, line: 187, type: !1424)
!4896 = !DILocalVariable(name: "pvParameters", arg: 3, scope: !4890, file: !321, line: 187, type: !78)
!4897 = !DILocation(line: 0, scope: !4890)
!4898 = !DILocation(line: 194, column: 14, scope: !4890)
!4899 = !DILocation(line: 196, column: 16, scope: !4890)
!4900 = !DILocation(line: 197, column: 14, scope: !4890)
!4901 = !DILocation(line: 198, column: 20, scope: !4890)
!4902 = !DILocation(line: 198, column: 45, scope: !4890)
!4903 = !DILocation(line: 198, column: 16, scope: !4890)
!4904 = !DILocation(line: 199, column: 14, scope: !4890)
!4905 = !DILocation(line: 200, column: 16, scope: !4890)
!4906 = !DILocation(line: 203, column: 15, scope: !4890)
!4907 = !DILocation(line: 204, column: 18, scope: !4890)
!4908 = !DILocation(line: 204, column: 16, scope: !4890)
!4909 = !DILocation(line: 208, column: 14, scope: !4890)
!4910 = !DILocation(line: 209, column: 16, scope: !4890)
!4911 = !DILocation(line: 211, column: 15, scope: !4890)
!4912 = !DILocation(line: 213, column: 2, scope: !4890)
!4913 = distinct !DISubprogram(name: "prvTaskExitError", scope: !321, file: !321, line: 217, type: !1054, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !4914)
!4914 = !{!4915}
!4915 = !DILocalVariable(name: "ulDummy", scope: !4913, file: !321, line: 219, type: !20)
!4916 = !DILocation(line: 219, column: 1, scope: !4913)
!4917 = !DILocation(line: 219, column: 19, scope: !4913)
!4918 = !DILocation(line: 227, column: 2, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4913, file: !321, line: 227, column: 2)
!4920 = !DILocation(line: 0, scope: !4913)
!4921 = !DILocation(line: 227, column: 2, scope: !4913)
!4922 = !DILocation(line: 227, column: 2, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !321, line: 227, column: 2)
!4924 = distinct !DILexicalBlock(scope: !4925, file: !321, line: 227, column: 2)
!4925 = distinct !DILexicalBlock(scope: !4919, file: !321, line: 227, column: 2)
!4926 = distinct !{!4926, !4927, !4927}
!4927 = !DILocation(line: 227, column: 2, scope: !4924)
!4928 = !DILocation(line: 229, column: 9, scope: !4913)
!4929 = !DILocation(line: 229, column: 17, scope: !4913)
!4930 = !DILocation(line: 229, column: 2, scope: !4913)
!4931 = distinct !{!4931, !4930, !4932, !1525}
!4932 = !DILocation(line: 238, column: 2, scope: !4913)
!4933 = !DILocation(line: 239, column: 1, scope: !4913)
!4934 = distinct !DISubprogram(name: "SVC_Handler", scope: !321, file: !321, line: 242, type: !1054, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !1056)
!4935 = !DILocation(line: 244, column: 2, scope: !4934)
!4936 = !{i64 9642, i64 9710, i64 9800, i64 9892, i64 10038, i64 10105, i64 10128, i64 10157, i64 10189, i64 10214, i64 10234, i64 10260}
!4937 = !DILocation(line: 258, column: 1, scope: !4934)
!4938 = distinct !DISubprogram(name: "xPortStartScheduler", scope: !321, file: !321, line: 287, type: !1916, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !4939)
!4939 = !{!4940, !4942, !4944}
!4940 = !DILocalVariable(name: "ulOriginalPriority", scope: !4941, file: !321, line: 301, type: !20)
!4941 = distinct !DILexicalBlock(scope: !4938, file: !321, line: 300, column: 2)
!4942 = !DILocalVariable(name: "pucFirstUserPriorityRegister", scope: !4941, file: !321, line: 302, type: !4943)
!4943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!4944 = !DILocalVariable(name: "ucMaxPriorityValue", scope: !4941, file: !321, line: 303, type: !175)
!4945 = !DILocation(line: 296, column: 2, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4938, file: !321, line: 296, column: 2)
!4947 = !DILocation(line: 296, column: 2, scope: !4938)
!4948 = !DILocation(line: 195, column: 2, scope: !4949, inlinedAt: !4952)
!4949 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !40, file: !40, line: 191, type: !1054, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !4950)
!4950 = !{!4951}
!4951 = !DILocalVariable(name: "ulNewBASEPRI", scope: !4949, file: !40, line: 193, type: !21)
!4952 = distinct !DILocation(line: 296, column: 2, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4946, file: !321, line: 296, column: 2)
!4954 = !{i64 180614, i64 180648, i64 180685, i64 180713}
!4955 = !DILocation(line: 0, scope: !4949, inlinedAt: !4952)
!4956 = !DILocation(line: 296, column: 2, scope: !4953)
!4957 = !DILocation(line: 296, column: 2, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4959, file: !321, line: 296, column: 2)
!4959 = distinct !DILexicalBlock(scope: !4953, file: !321, line: 296, column: 2)
!4960 = distinct !{!4960, !4961, !4961}
!4961 = !DILocation(line: 296, column: 2, scope: !4959)
!4962 = !DILocation(line: 297, column: 2, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4938, file: !321, line: 297, column: 2)
!4964 = !DILocation(line: 297, column: 2, scope: !4938)
!4965 = !DILocation(line: 195, column: 2, scope: !4949, inlinedAt: !4966)
!4966 = distinct !DILocation(line: 297, column: 2, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4963, file: !321, line: 297, column: 2)
!4968 = !DILocation(line: 0, scope: !4949, inlinedAt: !4966)
!4969 = !DILocation(line: 297, column: 2, scope: !4967)
!4970 = !DILocation(line: 297, column: 2, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4972, file: !321, line: 297, column: 2)
!4972 = distinct !DILexicalBlock(scope: !4967, file: !321, line: 297, column: 2)
!4973 = distinct !{!4973, !4974, !4974}
!4974 = !DILocation(line: 297, column: 2, scope: !4972)
!4975 = !DILocation(line: 301, column: 3, scope: !4941)
!4976 = !DILocation(line: 301, column: 21, scope: !4941)
!4977 = !DILocation(line: 0, scope: !4941)
!4978 = !DILocation(line: 303, column: 3, scope: !4941)
!4979 = !DILocation(line: 303, column: 20, scope: !4941)
!4980 = !DILocation(line: 311, column: 24, scope: !4941)
!4981 = !DILocation(line: 311, column: 22, scope: !4941)
!4982 = !DILocation(line: 315, column: 33, scope: !4941)
!4983 = !DILocation(line: 318, column: 24, scope: !4941)
!4984 = !DILocation(line: 318, column: 22, scope: !4941)
!4985 = !DILocation(line: 321, column: 65, scope: !4941)
!4986 = !DILocation(line: 321, column: 63, scope: !4941)
!4987 = !DILocation(line: 321, column: 24, scope: !4941)
!4988 = !DILocation(line: 325, column: 22, scope: !4941)
!4989 = !DILocation(line: 326, column: 12, scope: !4941)
!4990 = !DILocation(line: 326, column: 55, scope: !4941)
!4991 = !DILocation(line: 326, column: 3, scope: !4941)
!4992 = !DILocation(line: 328, column: 22, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4941, file: !321, line: 327, column: 3)
!4994 = !DILocation(line: 329, column: 23, scope: !4993)
!4995 = distinct !{!4995, !4991, !4996, !1525}
!4996 = !DILocation(line: 330, column: 3, scope: !4941)
!4997 = !DILocation(line: 346, column: 4, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4999, file: !321, line: 346, column: 4)
!4999 = distinct !DILexicalBlock(scope: !4941, file: !321, line: 342, column: 3)
!5000 = !DILocation(line: 346, column: 4, scope: !4999)
!5001 = !DILocation(line: 195, column: 2, scope: !4949, inlinedAt: !5002)
!5002 = distinct !DILocation(line: 346, column: 4, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4998, file: !321, line: 346, column: 4)
!5004 = !DILocation(line: 0, scope: !4949, inlinedAt: !5002)
!5005 = !DILocation(line: 346, column: 4, scope: !5003)
!5006 = !DILocation(line: 346, column: 4, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5008, file: !321, line: 346, column: 4)
!5008 = distinct !DILexicalBlock(scope: !5003, file: !321, line: 346, column: 4)
!5009 = distinct !{!5009, !5010, !5010}
!5010 = !DILocation(line: 346, column: 4, scope: !5008)
!5011 = !DILocation(line: 353, column: 22, scope: !4941)
!5012 = !DILocation(line: 357, column: 35, scope: !4941)
!5013 = !DILocation(line: 357, column: 33, scope: !4941)
!5014 = !DILocation(line: 358, column: 2, scope: !4938)
!5015 = !DILocation(line: 362, column: 23, scope: !4938)
!5016 = !DILocation(line: 363, column: 23, scope: !4938)
!5017 = !DILocation(line: 367, column: 2, scope: !4938)
!5018 = !DILocation(line: 370, column: 20, scope: !4938)
!5019 = !DILocation(line: 373, column: 2, scope: !4938)
!5020 = !DILocation(line: 376, column: 17, scope: !4938)
!5021 = !DILocation(line: 379, column: 2, scope: !4938)
!5022 = !DILocation(line: 387, column: 2, scope: !4938)
!5023 = !DILocation(line: 388, column: 2, scope: !4938)
!5024 = !DILocation(line: 391, column: 2, scope: !4938)
!5025 = distinct !DISubprogram(name: "vPortSetupTimerInterrupt", scope: !321, file: !321, line: 679, type: !1054, scopeLine: 680, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !1056)
!5026 = !DILocation(line: 691, column: 28, scope: !5025)
!5027 = !DILocation(line: 692, column: 37, scope: !5025)
!5028 = !DILocation(line: 695, column: 32, scope: !5025)
!5029 = !DILocation(line: 695, column: 55, scope: !5025)
!5030 = !DILocation(line: 695, column: 78, scope: !5025)
!5031 = !DILocation(line: 695, column: 28, scope: !5025)
!5032 = !DILocation(line: 696, column: 28, scope: !5025)
!5033 = !DILocation(line: 697, column: 1, scope: !5025)
!5034 = distinct !DISubprogram(name: "vPortEnableVFP", scope: !321, file: !321, line: 701, type: !1054, scopeLine: 702, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !1056)
!5035 = !DILocation(line: 703, column: 2, scope: !5034)
!5036 = !{i64 27136, i64 27213, i64 27238, i64 27254, i64 27347, i64 27372}
!5037 = !DILocation(line: 712, column: 1, scope: !5034)
!5038 = distinct !DISubprogram(name: "prvPortStartFirstTask", scope: !321, file: !321, line: 261, type: !1054, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !1056)
!5039 = !DILocation(line: 267, column: 2, scope: !5038)
!5040 = !{i64 10725, i64 10815, i64 10843, i64 10871, i64 10947, i64 11045, i64 11074, i64 11131, i64 11154, i64 11174, i64 11194, i64 11255}
!5041 = !DILocation(line: 281, column: 1, scope: !5038)
!5042 = distinct !DISubprogram(name: "vPortEndScheduler", scope: !321, file: !321, line: 395, type: !1054, scopeLine: 396, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !1056)
!5043 = !DILocation(line: 399, column: 2, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5042, file: !321, line: 399, column: 2)
!5045 = !DILocation(line: 399, column: 2, scope: !5042)
!5046 = !DILocation(line: 195, column: 2, scope: !4949, inlinedAt: !5047)
!5047 = distinct !DILocation(line: 399, column: 2, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5044, file: !321, line: 399, column: 2)
!5049 = !DILocation(line: 0, scope: !4949, inlinedAt: !5047)
!5050 = !DILocation(line: 399, column: 2, scope: !5048)
!5051 = !DILocation(line: 399, column: 2, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5053, file: !321, line: 399, column: 2)
!5053 = distinct !DILexicalBlock(scope: !5048, file: !321, line: 399, column: 2)
!5054 = distinct !{!5054, !5055, !5055}
!5055 = !DILocation(line: 399, column: 2, scope: !5053)
!5056 = !DILocation(line: 400, column: 1, scope: !5042)
!5057 = distinct !DISubprogram(name: "vPortEnterCritical", scope: !321, file: !321, line: 403, type: !1054, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !1056)
!5058 = !DILocation(line: 195, column: 2, scope: !4949, inlinedAt: !5059)
!5059 = distinct !DILocation(line: 405, column: 2, scope: !5057)
!5060 = !DILocation(line: 0, scope: !4949, inlinedAt: !5059)
!5061 = !DILocation(line: 406, column: 19, scope: !5057)
!5062 = !DILocation(line: 413, column: 24, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5057, file: !321, line: 413, column: 6)
!5064 = !DILocation(line: 413, column: 6, scope: !5057)
!5065 = !DILocation(line: 415, column: 3, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5067, file: !321, line: 415, column: 3)
!5067 = distinct !DILexicalBlock(scope: !5063, file: !321, line: 414, column: 2)
!5068 = !DILocation(line: 415, column: 3, scope: !5067)
!5069 = !DILocation(line: 195, column: 2, scope: !4949, inlinedAt: !5070)
!5070 = distinct !DILocation(line: 415, column: 3, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5066, file: !321, line: 415, column: 3)
!5072 = !DILocation(line: 0, scope: !4949, inlinedAt: !5070)
!5073 = !DILocation(line: 415, column: 3, scope: !5071)
!5074 = !DILocation(line: 415, column: 3, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5076, file: !321, line: 415, column: 3)
!5076 = distinct !DILexicalBlock(scope: !5071, file: !321, line: 415, column: 3)
!5077 = distinct !{!5077, !5078, !5078}
!5078 = !DILocation(line: 415, column: 3, scope: !5076)
!5079 = !DILocation(line: 417, column: 1, scope: !5057)
!5080 = distinct !DISubprogram(name: "vPortExitCritical", scope: !321, file: !321, line: 420, type: !1054, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !1056)
!5081 = !DILocation(line: 422, column: 2, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5080, file: !321, line: 422, column: 2)
!5083 = !DILocation(line: 422, column: 2, scope: !5080)
!5084 = !DILocation(line: 195, column: 2, scope: !4949, inlinedAt: !5085)
!5085 = distinct !DILocation(line: 422, column: 2, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5082, file: !321, line: 422, column: 2)
!5087 = !DILocation(line: 0, scope: !4949, inlinedAt: !5085)
!5088 = !DILocation(line: 422, column: 2, scope: !5086)
!5089 = !DILocation(line: 422, column: 2, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5091, file: !321, line: 422, column: 2)
!5091 = distinct !DILexicalBlock(scope: !5086, file: !321, line: 422, column: 2)
!5092 = distinct !{!5092, !5093, !5093}
!5093 = !DILocation(line: 422, column: 2, scope: !5091)
!5094 = !DILocation(line: 423, column: 19, scope: !5080)
!5095 = !DILocation(line: 424, column: 24, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5080, file: !321, line: 424, column: 6)
!5097 = !DILocation(line: 424, column: 6, scope: !5080)
!5098 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !5099, file: !40, line: 227, type: !21)
!5099 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !40, file: !40, line: 227, type: !2236, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !5100)
!5100 = !{!5098}
!5101 = !DILocation(line: 0, scope: !5099, inlinedAt: !5102)
!5102 = distinct !DILocation(line: 426, column: 3, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5096, file: !321, line: 425, column: 2)
!5104 = !DILocation(line: 229, column: 2, scope: !5099, inlinedAt: !5102)
!5105 = !{i64 181591}
!5106 = !DILocation(line: 427, column: 2, scope: !5103)
!5107 = !DILocation(line: 428, column: 1, scope: !5080)
!5108 = distinct !DISubprogram(name: "PendSV_Handler", scope: !321, file: !321, line: 431, type: !1054, scopeLine: 432, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !1056)
!5109 = !DILocation(line: 435, column: 2, scope: !5108)
!5110 = !{i64 16626, i64 16653, i64 16673, i64 16690, i64 16769, i64 16795, i64 16812, i64 16914, i64 16935, i64 16970, i64 16987, i64 17053, i64 17145, i64 17162, i64 17194, i64 17220, i64 17249, i64 17269, i64 17289, i64 17322, i64 17347, i64 17376, i64 17408, i64 17425, i64 17514, i64 17540, i64 17557, i64 17622, i64 17639, i64 17748, i64 17769, i64 17804, i64 17821, i64 17847, i64 17867, i64 18059, i64 18076, i64 18098, i64 18115, i64 18138}
!5111 = !DILocation(line: 485, column: 1, scope: !5108)
!5112 = distinct !DISubprogram(name: "SysTick_Handler", scope: !321, file: !321, line: 488, type: !1054, scopeLine: 489, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !1056)
!5113 = !DILocation(line: 195, column: 2, scope: !4949, inlinedAt: !5114)
!5114 = distinct !DILocation(line: 494, column: 2, scope: !5112)
!5115 = !DILocation(line: 0, scope: !4949, inlinedAt: !5114)
!5116 = !DILocation(line: 497, column: 7, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5118, file: !321, line: 497, column: 7)
!5118 = distinct !DILexicalBlock(scope: !5112, file: !321, line: 495, column: 2)
!5119 = !DILocation(line: 497, column: 28, scope: !5117)
!5120 = !DILocation(line: 497, column: 7, scope: !5118)
!5121 = !DILocation(line: 501, column: 26, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5117, file: !321, line: 498, column: 3)
!5123 = !DILocation(line: 502, column: 3, scope: !5122)
!5124 = !DILocation(line: 0, scope: !5099, inlinedAt: !5125)
!5125 = distinct !DILocation(line: 504, column: 2, scope: !5112)
!5126 = !DILocation(line: 229, column: 2, scope: !5099, inlinedAt: !5125)
!5127 = !DILocation(line: 505, column: 1, scope: !5112)
!5128 = distinct !DISubprogram(name: "vPortValidateInterruptPriority", scope: !321, file: !321, line: 717, type: !1054, scopeLine: 718, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !314, retainedNodes: !5129)
!5129 = !{!5130, !5131}
!5130 = !DILocalVariable(name: "ulCurrentInterrupt", scope: !5128, file: !321, line: 719, type: !21)
!5131 = !DILocalVariable(name: "ucCurrentPriority", scope: !5128, file: !321, line: 720, type: !85)
!5132 = !DILocation(line: 723, column: 3, scope: !5128)
!5133 = !{i64 27694}
!5134 = !DILocation(line: 0, scope: !5128)
!5135 = !DILocation(line: 726, column: 26, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5128, file: !321, line: 726, column: 7)
!5137 = !DILocation(line: 726, column: 7, scope: !5128)
!5138 = !DILocation(line: 729, column: 24, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5136, file: !321, line: 727, column: 3)
!5140 = !DILocation(line: 754, column: 4, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5139, file: !321, line: 754, column: 4)
!5142 = !DILocation(line: 754, column: 4, scope: !5139)
!5143 = !DILocation(line: 195, column: 2, scope: !4949, inlinedAt: !5144)
!5144 = distinct !DILocation(line: 754, column: 4, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5141, file: !321, line: 754, column: 4)
!5146 = !DILocation(line: 0, scope: !4949, inlinedAt: !5144)
!5147 = !DILocation(line: 754, column: 4, scope: !5145)
!5148 = !DILocation(line: 754, column: 4, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5150, file: !321, line: 754, column: 4)
!5150 = distinct !DILexicalBlock(scope: !5145, file: !321, line: 754, column: 4)
!5151 = distinct !{!5151, !5152, !5152}
!5152 = !DILocation(line: 754, column: 4, scope: !5150)
!5153 = !DILocation(line: 770, column: 3, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5128, file: !321, line: 770, column: 3)
!5155 = !DILocation(line: 770, column: 3, scope: !5128)
!5156 = !DILocation(line: 195, column: 2, scope: !4949, inlinedAt: !5157)
!5157 = distinct !DILocation(line: 770, column: 3, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5154, file: !321, line: 770, column: 3)
!5159 = !DILocation(line: 0, scope: !4949, inlinedAt: !5157)
!5160 = !DILocation(line: 770, column: 3, scope: !5158)
!5161 = !DILocation(line: 770, column: 3, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5163, file: !321, line: 770, column: 3)
!5163 = distinct !DILexicalBlock(scope: !5158, file: !321, line: 770, column: 3)
!5164 = distinct !{!5164, !5165, !5165}
!5165 = !DILocation(line: 770, column: 3, scope: !5163)
!5166 = !DILocation(line: 771, column: 2, scope: !5128)
!5167 = distinct !DISubprogram(name: "pvPortMalloc", scope: !336, file: !336, line: 115, type: !5168, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !331, retainedNodes: !5170)
!5168 = !DISubroutineType(types: !5169)
!5169 = !{!78, !121}
!5170 = !{!5171, !5172, !5173, !5174, !5175}
!5171 = !DILocalVariable(name: "xWantedSize", arg: 1, scope: !5167, file: !336, line: 115, type: !121)
!5172 = !DILocalVariable(name: "pxBlock", scope: !5167, file: !336, line: 117, type: !334)
!5173 = !DILocalVariable(name: "pxPreviousBlock", scope: !5167, file: !336, line: 117, type: !334)
!5174 = !DILocalVariable(name: "pxNewBlockLink", scope: !5167, file: !336, line: 117, type: !334)
!5175 = !DILocalVariable(name: "pvReturn", scope: !5167, file: !336, line: 118, type: !78)
!5176 = !DILocation(line: 0, scope: !5167)
!5177 = !DILocation(line: 120, column: 2, scope: !5167)
!5178 = !DILocation(line: 124, column: 7, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5180, file: !336, line: 124, column: 7)
!5180 = distinct !DILexicalBlock(scope: !5167, file: !336, line: 121, column: 2)
!5181 = !DILocation(line: 124, column: 13, scope: !5179)
!5182 = !DILocation(line: 124, column: 7, scope: !5180)
!5183 = !DILocation(line: 126, column: 4, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5179, file: !336, line: 125, column: 3)
!5185 = !DILocation(line: 127, column: 3, scope: !5184)
!5186 = !DILocation(line: 137, column: 23, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5180, file: !336, line: 137, column: 7)
!5188 = !DILocation(line: 137, column: 21, scope: !5187)
!5189 = !DILocation(line: 137, column: 44, scope: !5187)
!5190 = !DILocation(line: 137, column: 7, scope: !5180)
!5191 = !DILocation(line: 143, column: 17, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5193, file: !336, line: 142, column: 4)
!5193 = distinct !DILexicalBlock(scope: !5194, file: !336, line: 141, column: 8)
!5194 = distinct !DILexicalBlock(scope: !5187, file: !336, line: 138, column: 3)
!5195 = !DILocation(line: 147, column: 23, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5192, file: !336, line: 147, column: 9)
!5197 = !DILocation(line: 147, column: 51, scope: !5196)
!5198 = !DILocation(line: 147, column: 9, scope: !5192)
!5199 = !DILocation(line: 163, column: 22, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5194, file: !336, line: 163, column: 8)
!5201 = !DILocation(line: 163, column: 28, scope: !5200)
!5202 = !DILocation(line: 168, column: 22, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5200, file: !336, line: 164, column: 4)
!5204 = !{!5205, !1015, i64 0}
!5205 = !{!"A_BLOCK_LINK", !1015, i64 0, !1020, i64 4}
!5206 = !DILocation(line: 169, column: 23, scope: !5203)
!5207 = !{!5205, !1020, i64 4}
!5208 = !DILocation(line: 169, column: 34, scope: !5203)
!5209 = !DILocation(line: 169, column: 50, scope: !5203)
!5210 = !DILocation(line: 169, column: 64, scope: !5203)
!5211 = !DILocation(line: 169, column: 80, scope: !5203)
!5212 = !DILocation(line: 169, column: 5, scope: !5203)
!5213 = distinct !{!5213, !5212, !5214, !1525}
!5214 = !DILocation(line: 173, column: 5, scope: !5203)
!5215 = !DILocation(line: 0, scope: !5203)
!5216 = !DILocation(line: 177, column: 20, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5203, file: !336, line: 177, column: 9)
!5218 = !DILocation(line: 177, column: 17, scope: !5217)
!5219 = !DILocation(line: 177, column: 9, scope: !5203)
!5220 = !DILocation(line: 181, column: 63, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5217, file: !336, line: 178, column: 5)
!5222 = !DILocation(line: 181, column: 81, scope: !5221)
!5223 = !DILocation(line: 185, column: 50, scope: !5221)
!5224 = !DILocation(line: 185, column: 39, scope: !5221)
!5225 = !DILocation(line: 189, column: 32, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5221, file: !336, line: 189, column: 10)
!5227 = !DILocation(line: 189, column: 48, scope: !5226)
!5228 = !DILocation(line: 189, column: 10, scope: !5221)
!5229 = !DILocation(line: 195, column: 39, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5226, file: !336, line: 190, column: 6)
!5231 = !DILocation(line: 195, column: 63, scope: !5230)
!5232 = !DILocation(line: 196, column: 7, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5230, file: !336, line: 196, column: 7)
!5234 = !DILocation(line: 196, column: 7, scope: !5230)
!5235 = !DILocation(line: 195, column: 2, scope: !5236, inlinedAt: !5239)
!5236 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !40, file: !40, line: 191, type: !1054, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !331, retainedNodes: !5237)
!5237 = !{!5238}
!5238 = !DILocalVariable(name: "ulNewBASEPRI", scope: !5236, file: !40, line: 193, type: !21)
!5239 = distinct !DILocation(line: 196, column: 7, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5233, file: !336, line: 196, column: 7)
!5241 = !{i64 329267, i64 329301, i64 329338, i64 329366}
!5242 = !DILocation(line: 0, scope: !5236, inlinedAt: !5239)
!5243 = !DILocation(line: 196, column: 7, scope: !5240)
!5244 = !DILocation(line: 196, column: 7, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5246, file: !336, line: 196, column: 7)
!5246 = distinct !DILexicalBlock(scope: !5240, file: !336, line: 196, column: 7)
!5247 = distinct !{!5247, !5248, !5248}
!5248 = !DILocation(line: 196, column: 7, scope: !5246)
!5249 = !DILocation(line: 195, column: 24, scope: !5230)
!5250 = !DILocation(line: 200, column: 23, scope: !5230)
!5251 = !DILocation(line: 200, column: 34, scope: !5230)
!5252 = !DILocation(line: 201, column: 27, scope: !5230)
!5253 = !DILocation(line: 204, column: 7, scope: !5230)
!5254 = !DILocation(line: 205, column: 6, scope: !5230)
!5255 = !DILocation(line: 211, column: 38, scope: !5221)
!5256 = !DILocation(line: 211, column: 26, scope: !5221)
!5257 = !DILocation(line: 213, column: 32, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5221, file: !336, line: 213, column: 10)
!5259 = !DILocation(line: 213, column: 30, scope: !5258)
!5260 = !DILocation(line: 213, column: 10, scope: !5221)
!5261 = !DILocation(line: 215, column: 38, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5258, file: !336, line: 214, column: 6)
!5263 = !DILocation(line: 216, column: 6, scope: !5262)
!5264 = !DILocation(line: 224, column: 29, scope: !5221)
!5265 = !DILocation(line: 224, column: 26, scope: !5221)
!5266 = !DILocation(line: 225, column: 31, scope: !5221)
!5267 = !DILocation(line: 226, column: 36, scope: !5221)
!5268 = !DILocation(line: 227, column: 5, scope: !5221)
!5269 = !DILocation(line: 245, column: 11, scope: !5167)
!5270 = !DILocation(line: 261, column: 2, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5167, file: !336, line: 261, column: 2)
!5272 = !DILocation(line: 261, column: 2, scope: !5167)
!5273 = !DILocation(line: 195, column: 2, scope: !5236, inlinedAt: !5274)
!5274 = distinct !DILocation(line: 261, column: 2, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5271, file: !336, line: 261, column: 2)
!5276 = !DILocation(line: 0, scope: !5236, inlinedAt: !5274)
!5277 = !DILocation(line: 261, column: 2, scope: !5275)
!5278 = !DILocation(line: 261, column: 2, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5280, file: !336, line: 261, column: 2)
!5280 = distinct !DILexicalBlock(scope: !5275, file: !336, line: 261, column: 2)
!5281 = distinct !{!5281, !5282, !5282}
!5282 = !DILocation(line: 261, column: 2, scope: !5280)
!5283 = !DILocation(line: 262, column: 2, scope: !5167)
!5284 = distinct !DISubprogram(name: "prvHeapInit", scope: !336, file: !336, line: 333, type: !1054, scopeLine: 334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !331, retainedNodes: !5285)
!5285 = !{!5286, !5287, !5288, !5289}
!5286 = !DILocalVariable(name: "pxFirstFreeBlock", scope: !5284, file: !336, line: 335, type: !334)
!5287 = !DILocalVariable(name: "pucAlignedHeap", scope: !5284, file: !336, line: 336, type: !185)
!5288 = !DILocalVariable(name: "uxAddress", scope: !5284, file: !336, line: 337, type: !121)
!5289 = !DILocalVariable(name: "xTotalHeapSize", scope: !5284, file: !336, line: 338, type: !121)
!5290 = !DILocation(line: 0, scope: !5284)
!5291 = !DILocation(line: 354, column: 25, scope: !5284)
!5292 = !DILocation(line: 355, column: 20, scope: !5284)
!5293 = !DILocation(line: 362, column: 8, scope: !5284)
!5294 = !DILocation(line: 363, column: 20, scope: !5284)
!5295 = !DILocation(line: 364, column: 25, scope: !5284)
!5296 = !DILocation(line: 369, column: 31, scope: !5284)
!5297 = !DILocation(line: 370, column: 38, scope: !5284)
!5298 = !DILocation(line: 370, column: 36, scope: !5284)
!5299 = !DILocation(line: 373, column: 33, scope: !5284)
!5300 = !DILocation(line: 374, column: 22, scope: !5284)
!5301 = !DILocation(line: 377, column: 21, scope: !5284)
!5302 = !DILocation(line: 378, column: 1, scope: !5284)
!5303 = distinct !DISubprogram(name: "prvInsertBlockIntoFreeList", scope: !336, file: !336, line: 381, type: !5304, scopeLine: 382, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !331, retainedNodes: !5306)
!5304 = !DISubroutineType(types: !5305)
!5305 = !{null, !334}
!5306 = !{!5307, !5308, !5309}
!5307 = !DILocalVariable(name: "pxBlockToInsert", arg: 1, scope: !5303, file: !336, line: 381, type: !334)
!5308 = !DILocalVariable(name: "pxIterator", scope: !5303, file: !336, line: 383, type: !334)
!5309 = !DILocalVariable(name: "puc", scope: !5303, file: !336, line: 384, type: !185)
!5310 = !DILocation(line: 0, scope: !5303)
!5311 = !DILocation(line: 388, column: 7, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5303, file: !336, line: 388, column: 2)
!5313 = !DILocation(line: 0, scope: !5312)
!5314 = !DILocation(line: 388, column: 41, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5312, file: !336, line: 388, column: 2)
!5316 = !DILocation(line: 388, column: 57, scope: !5315)
!5317 = !DILocation(line: 388, column: 2, scope: !5312)
!5318 = distinct !{!5318, !5317, !5319, !1525}
!5319 = !DILocation(line: 391, column: 2, scope: !5312)
!5320 = !DILocation(line: 395, column: 8, scope: !5303)
!5321 = !DILocation(line: 396, column: 26, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5303, file: !336, line: 396, column: 6)
!5323 = !DILocation(line: 396, column: 12, scope: !5322)
!5324 = !DILocation(line: 396, column: 42, scope: !5322)
!5325 = !DILocation(line: 396, column: 39, scope: !5322)
!5326 = !DILocation(line: 396, column: 6, scope: !5303)
!5327 = !DILocation(line: 398, column: 26, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5322, file: !336, line: 397, column: 2)
!5329 = !DILocation(line: 400, column: 2, scope: !5328)
!5330 = !DILocation(line: 408, column: 8, scope: !5303)
!5331 = !DILocation(line: 409, column: 31, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5303, file: !336, line: 409, column: 6)
!5333 = !DILocation(line: 409, column: 12, scope: !5332)
!5334 = !DILocation(line: 409, column: 47, scope: !5332)
!5335 = !DILocation(line: 409, column: 44, scope: !5332)
!5336 = !DILocation(line: 409, column: 6, scope: !5303)
!5337 = !DILocation(line: 414, column: 64, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5339, file: !336, line: 412, column: 3)
!5339 = distinct !DILexicalBlock(scope: !5340, file: !336, line: 411, column: 7)
!5340 = distinct !DILexicalBlock(scope: !5332, file: !336, line: 410, column: 2)
!5341 = !DILocation(line: 414, column: 32, scope: !5338)
!5342 = !DILocation(line: 415, column: 68, scope: !5338)
!5343 = !DILocation(line: 416, column: 3, scope: !5338)
!5344 = !DILocation(line: 0, scope: !5332)
!5345 = !DILocation(line: 431, column: 17, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5303, file: !336, line: 431, column: 6)
!5347 = !DILocation(line: 431, column: 6, scope: !5303)
!5348 = !DILocation(line: 433, column: 31, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5346, file: !336, line: 432, column: 2)
!5350 = !DILocation(line: 434, column: 2, scope: !5349)
!5351 = !DILocation(line: 439, column: 1, scope: !5303)
!5352 = distinct !DISubprogram(name: "vPortFree", scope: !336, file: !336, line: 266, type: !995, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !331, retainedNodes: !5353)
!5353 = !{!5354, !5355, !5356}
!5354 = !DILocalVariable(name: "pv", arg: 1, scope: !5352, file: !336, line: 266, type: !78)
!5355 = !DILocalVariable(name: "puc", scope: !5352, file: !336, line: 268, type: !185)
!5356 = !DILocalVariable(name: "pxLink", scope: !5352, file: !336, line: 269, type: !334)
!5357 = !DILocation(line: 0, scope: !5352)
!5358 = !DILocation(line: 271, column: 9, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5352, file: !336, line: 271, column: 6)
!5360 = !DILocation(line: 271, column: 6, scope: !5352)
!5361 = !DILocation(line: 275, column: 7, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5359, file: !336, line: 272, column: 2)
!5363 = !DILocation(line: 278, column: 12, scope: !5362)
!5364 = !DILocation(line: 281, column: 3, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5362, file: !336, line: 281, column: 3)
!5366 = !DILocation(line: 281, column: 3, scope: !5362)
!5367 = !DILocation(line: 195, column: 2, scope: !5236, inlinedAt: !5368)
!5368 = distinct !DILocation(line: 281, column: 3, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5365, file: !336, line: 281, column: 3)
!5370 = !DILocation(line: 0, scope: !5236, inlinedAt: !5368)
!5371 = !DILocation(line: 281, column: 3, scope: !5369)
!5372 = !DILocation(line: 281, column: 3, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5374, file: !336, line: 281, column: 3)
!5374 = distinct !DILexicalBlock(scope: !5369, file: !336, line: 281, column: 3)
!5375 = distinct !{!5375, !5376, !5376}
!5376 = !DILocation(line: 281, column: 3, scope: !5374)
!5377 = !DILocation(line: 282, column: 3, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5362, file: !336, line: 282, column: 3)
!5379 = !DILocation(line: 282, column: 3, scope: !5362)
!5380 = !DILocation(line: 195, column: 2, scope: !5236, inlinedAt: !5381)
!5381 = distinct !DILocation(line: 282, column: 3, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5378, file: !336, line: 282, column: 3)
!5383 = !DILocation(line: 0, scope: !5236, inlinedAt: !5381)
!5384 = !DILocation(line: 282, column: 3, scope: !5382)
!5385 = !DILocation(line: 282, column: 3, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5387, file: !336, line: 282, column: 3)
!5387 = distinct !DILexicalBlock(scope: !5382, file: !336, line: 282, column: 3)
!5388 = distinct !{!5388, !5389, !5389}
!5389 = !DILocation(line: 282, column: 3, scope: !5387)
!5390 = !DILocation(line: 290, column: 27, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !336, line: 287, column: 4)
!5392 = distinct !DILexicalBlock(scope: !5393, file: !336, line: 286, column: 8)
!5393 = distinct !DILexicalBlock(scope: !5394, file: !336, line: 285, column: 3)
!5394 = distinct !DILexicalBlock(scope: !5362, file: !336, line: 284, column: 7)
!5395 = !DILocation(line: 290, column: 24, scope: !5391)
!5396 = !DILocation(line: 292, column: 5, scope: !5391)
!5397 = !DILocation(line: 295, column: 37, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5391, file: !336, line: 293, column: 5)
!5399 = !DILocation(line: 295, column: 26, scope: !5398)
!5400 = !DILocation(line: 297, column: 6, scope: !5398)
!5401 = !DILocation(line: 298, column: 30, scope: !5398)
!5402 = !DILocation(line: 300, column: 14, scope: !5391)
!5403 = !DILocation(line: 301, column: 4, scope: !5391)
!5404 = !DILocation(line: 312, column: 1, scope: !5352)
!5405 = distinct !DISubprogram(name: "xPortGetFreeHeapSize", scope: !336, file: !336, line: 315, type: !5406, scopeLine: 316, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !331, retainedNodes: !1056)
!5406 = !DISubroutineType(types: !5407)
!5407 = !{!121}
!5408 = !DILocation(line: 317, column: 9, scope: !5405)
!5409 = !DILocation(line: 317, column: 2, scope: !5405)
!5410 = distinct !DISubprogram(name: "xPortGetMinimumEverFreeHeapSize", scope: !336, file: !336, line: 321, type: !5406, scopeLine: 322, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !331, retainedNodes: !1056)
!5411 = !DILocation(line: 323, column: 9, scope: !5410)
!5412 = !DILocation(line: 323, column: 2, scope: !5410)
!5413 = distinct !DISubprogram(name: "vPortInitialiseBlocks", scope: !336, file: !336, line: 327, type: !1054, scopeLine: 328, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !331, retainedNodes: !1056)
!5414 = !DILocation(line: 330, column: 1, scope: !5413)
!5415 = distinct !DISubprogram(name: "vPortGetHeapStats", scope: !336, file: !336, line: 442, type: !5416, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !331, retainedNodes: !5430)
!5416 = !DISubroutineType(types: !5417)
!5417 = !{null, !5418}
!5418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5419, size: 32)
!5419 = !DIDerivedType(tag: DW_TAG_typedef, name: "HeapStats_t", file: !5420, line: 139, baseType: !5421)
!5420 = !DIFile(filename: "components/FreeRTOS-Kernel/include/portable.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "e840e66f546b20c0566f6a36dce43f25")
!5421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xHeapStats", file: !5420, line: 130, size: 224, elements: !5422)
!5422 = !{!5423, !5424, !5425, !5426, !5427, !5428, !5429}
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "xAvailableHeapSpaceInBytes", scope: !5421, file: !5420, line: 132, baseType: !121, size: 32)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "xSizeOfLargestFreeBlockInBytes", scope: !5421, file: !5420, line: 133, baseType: !121, size: 32, offset: 32)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "xSizeOfSmallestFreeBlockInBytes", scope: !5421, file: !5420, line: 134, baseType: !121, size: 32, offset: 64)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "xNumberOfFreeBlocks", scope: !5421, file: !5420, line: 135, baseType: !121, size: 32, offset: 96)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "xMinimumEverFreeBytesRemaining", scope: !5421, file: !5420, line: 136, baseType: !121, size: 32, offset: 128)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "xNumberOfSuccessfulAllocations", scope: !5421, file: !5420, line: 137, baseType: !121, size: 32, offset: 160)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "xNumberOfSuccessfulFrees", scope: !5421, file: !5420, line: 138, baseType: !121, size: 32, offset: 192)
!5430 = !{!5431, !5432, !5433, !5434, !5435}
!5431 = !DILocalVariable(name: "pxHeapStats", arg: 1, scope: !5415, file: !336, line: 442, type: !5418)
!5432 = !DILocalVariable(name: "pxBlock", scope: !5415, file: !336, line: 444, type: !334)
!5433 = !DILocalVariable(name: "xBlocks", scope: !5415, file: !336, line: 445, type: !121)
!5434 = !DILocalVariable(name: "xMaxSize", scope: !5415, file: !336, line: 445, type: !121)
!5435 = !DILocalVariable(name: "xMinSize", scope: !5415, file: !336, line: 445, type: !121)
!5436 = !DILocation(line: 0, scope: !5415)
!5437 = !DILocation(line: 447, column: 2, scope: !5415)
!5438 = !DILocation(line: 449, column: 20, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5415, file: !336, line: 448, column: 2)
!5440 = !DILocation(line: 453, column: 15, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5439, file: !336, line: 453, column: 7)
!5442 = !DILocation(line: 453, column: 7, scope: !5439)
!5443 = !DILocation(line: 455, column: 4, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5441, file: !336, line: 454, column: 3)
!5445 = !DILocation(line: 0, scope: !5439)
!5446 = !DILocation(line: 459, column: 12, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5444, file: !336, line: 456, column: 4)
!5448 = !DILocation(line: 461, column: 18, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5447, file: !336, line: 461, column: 9)
!5450 = !DILocation(line: 461, column: 29, scope: !5449)
!5451 = !DILocation(line: 461, column: 9, scope: !5447)
!5452 = !DILocation(line: 466, column: 29, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5447, file: !336, line: 466, column: 9)
!5454 = !DILocation(line: 466, column: 9, scope: !5447)
!5455 = !DILocation(line: 473, column: 24, scope: !5447)
!5456 = !DILocation(line: 474, column: 21, scope: !5444)
!5457 = !DILocation(line: 474, column: 4, scope: !5447)
!5458 = distinct !{!5458, !5443, !5459, !1525}
!5459 = !DILocation(line: 474, column: 30, scope: !5444)
!5460 = !DILocation(line: 477, column: 2, scope: !5415)
!5461 = !DILocation(line: 479, column: 15, scope: !5415)
!5462 = !DILocation(line: 479, column: 46, scope: !5415)
!5463 = !{!5464, !1020, i64 4}
!5464 = !{!"xHeapStats", !1020, i64 0, !1020, i64 4, !1020, i64 8, !1020, i64 12, !1020, i64 16, !1020, i64 20, !1020, i64 24}
!5465 = !DILocation(line: 480, column: 15, scope: !5415)
!5466 = !DILocation(line: 480, column: 47, scope: !5415)
!5467 = !{!5464, !1020, i64 8}
!5468 = !DILocation(line: 481, column: 15, scope: !5415)
!5469 = !DILocation(line: 481, column: 35, scope: !5415)
!5470 = !{!5464, !1020, i64 12}
!5471 = !DILocation(line: 483, column: 2, scope: !5415)
!5472 = !DILocation(line: 485, column: 45, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5415, file: !336, line: 484, column: 2)
!5474 = !DILocation(line: 485, column: 16, scope: !5473)
!5475 = !DILocation(line: 485, column: 43, scope: !5473)
!5476 = !{!5464, !1020, i64 0}
!5477 = !DILocation(line: 486, column: 49, scope: !5473)
!5478 = !DILocation(line: 486, column: 16, scope: !5473)
!5479 = !DILocation(line: 486, column: 47, scope: !5473)
!5480 = !{!5464, !1020, i64 20}
!5481 = !DILocation(line: 487, column: 43, scope: !5473)
!5482 = !DILocation(line: 487, column: 16, scope: !5473)
!5483 = !DILocation(line: 487, column: 41, scope: !5473)
!5484 = !{!5464, !1020, i64 24}
!5485 = !DILocation(line: 488, column: 49, scope: !5473)
!5486 = !DILocation(line: 488, column: 16, scope: !5473)
!5487 = !DILocation(line: 488, column: 47, scope: !5473)
!5488 = !{!5464, !1020, i64 16}
!5489 = !DILocation(line: 490, column: 2, scope: !5415)
!5490 = !DILocation(line: 491, column: 1, scope: !5415)
!5491 = distinct !DISubprogram(name: "xQueueGenericReset", scope: !374, file: !374, line: 255, type: !5492, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !5494)
!5492 = !DISubroutineType(types: !5493)
!5493 = !{!176, !429, !176}
!5494 = !{!5495, !5496, !5497}
!5495 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5491, file: !374, line: 255, type: !429)
!5496 = !DILocalVariable(name: "xNewQueue", arg: 2, scope: !5491, file: !374, line: 255, type: !176)
!5497 = !DILocalVariable(name: "pxQueue", scope: !5491, file: !374, line: 257, type: !5498)
!5498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!5499 = !DILocation(line: 0, scope: !5491)
!5500 = !DILocation(line: 259, column: 2, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5491, file: !374, line: 259, column: 2)
!5502 = !DILocation(line: 259, column: 2, scope: !5491)
!5503 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !5507)
!5504 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !40, file: !40, line: 191, type: !1054, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !5505)
!5505 = !{!5506}
!5506 = !DILocalVariable(name: "ulNewBASEPRI", scope: !5504, file: !40, line: 193, type: !21)
!5507 = distinct !DILocation(line: 259, column: 2, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5501, file: !374, line: 259, column: 2)
!5509 = !{i64 432351, i64 432385, i64 432422, i64 432450}
!5510 = !DILocation(line: 0, scope: !5504, inlinedAt: !5507)
!5511 = !DILocation(line: 259, column: 2, scope: !5508)
!5512 = !DILocation(line: 259, column: 2, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5514, file: !374, line: 259, column: 2)
!5514 = distinct !DILexicalBlock(scope: !5508, file: !374, line: 259, column: 2)
!5515 = distinct !{!5515, !5516, !5516}
!5516 = !DILocation(line: 259, column: 2, scope: !5514)
!5517 = !DILocation(line: 261, column: 2, scope: !5491)
!5518 = !DILocation(line: 263, column: 39, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5491, file: !374, line: 262, column: 2)
!5520 = !{!5521, !1015, i64 0}
!5521 = !{!"QueueDefinition", !1015, i64 0, !1015, i64 4, !1016, i64 8, !1684, i64 16, !1684, i64 36, !1023, i64 56, !1023, i64 60, !1023, i64 64, !1016, i64 68, !1016, i64 69, !1023, i64 72, !1016, i64 76}
!5522 = !DILocation(line: 263, column: 59, scope: !5519)
!5523 = !{!5521, !1023, i64 60}
!5524 = !DILocation(line: 263, column: 79, scope: !5519)
!5525 = !{!5521, !1023, i64 64}
!5526 = !DILocation(line: 263, column: 68, scope: !5519)
!5527 = !DILocation(line: 263, column: 46, scope: !5519)
!5528 = !DILocation(line: 263, column: 21, scope: !5519)
!5529 = !DILocation(line: 263, column: 28, scope: !5519)
!5530 = !DILocation(line: 264, column: 12, scope: !5519)
!5531 = !DILocation(line: 264, column: 30, scope: !5519)
!5532 = !{!5521, !1023, i64 56}
!5533 = !DILocation(line: 265, column: 12, scope: !5519)
!5534 = !DILocation(line: 265, column: 22, scope: !5519)
!5535 = !{!5521, !1015, i64 4}
!5536 = !DILocation(line: 266, column: 74, scope: !5519)
!5537 = !DILocation(line: 266, column: 81, scope: !5519)
!5538 = !DILocation(line: 266, column: 50, scope: !5519)
!5539 = !DILocation(line: 266, column: 21, scope: !5519)
!5540 = !DILocation(line: 266, column: 32, scope: !5519)
!5541 = !DILocation(line: 267, column: 12, scope: !5519)
!5542 = !DILocation(line: 267, column: 20, scope: !5519)
!5543 = !{!5521, !1016, i64 68}
!5544 = !DILocation(line: 268, column: 12, scope: !5519)
!5545 = !DILocation(line: 268, column: 20, scope: !5519)
!5546 = !{!5521, !1016, i64 69}
!5547 = !DILocation(line: 270, column: 17, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5519, file: !374, line: 270, column: 7)
!5549 = !DILocation(line: 0, scope: !5548)
!5550 = !DILocation(line: 270, column: 7, scope: !5519)
!5551 = !DILocation(line: 277, column: 8, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5553, file: !374, line: 277, column: 8)
!5553 = distinct !DILexicalBlock(scope: !5548, file: !374, line: 271, column: 3)
!5554 = !{!5521, !1023, i64 16}
!5555 = !DILocation(line: 277, column: 8, scope: !5553)
!5556 = !DILocation(line: 279, column: 9, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5558, file: !374, line: 279, column: 9)
!5558 = distinct !DILexicalBlock(scope: !5552, file: !374, line: 278, column: 4)
!5559 = !DILocation(line: 279, column: 71, scope: !5557)
!5560 = !DILocation(line: 279, column: 9, scope: !5558)
!5561 = !DILocation(line: 281, column: 6, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5563, file: !374, line: 281, column: 6)
!5563 = distinct !DILexicalBlock(scope: !5557, file: !374, line: 280, column: 5)
!5564 = !{i64 2148116376}
!5565 = !{i64 2148116427}
!5566 = !DILocation(line: 282, column: 5, scope: !5563)
!5567 = !DILocation(line: 296, column: 4, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5548, file: !374, line: 294, column: 3)
!5569 = !DILocation(line: 297, column: 33, scope: !5568)
!5570 = !DILocation(line: 297, column: 4, scope: !5568)
!5571 = !DILocation(line: 300, column: 2, scope: !5491)
!5572 = !DILocation(line: 304, column: 2, scope: !5491)
!5573 = distinct !DISubprogram(name: "xQueueGenericCreate", scope: !374, file: !374, line: 368, type: !5574, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !5576)
!5574 = !DISubroutineType(types: !5575)
!5575 = !{!429, !2753, !2753, !714}
!5576 = !{!5577, !5578, !5579, !5580, !5581, !5582}
!5577 = !DILocalVariable(name: "uxQueueLength", arg: 1, scope: !5573, file: !374, line: 368, type: !2753)
!5578 = !DILocalVariable(name: "uxItemSize", arg: 2, scope: !5573, file: !374, line: 368, type: !2753)
!5579 = !DILocalVariable(name: "ucQueueType", arg: 3, scope: !5573, file: !374, line: 368, type: !714)
!5580 = !DILocalVariable(name: "pxNewQueue", scope: !5573, file: !374, line: 370, type: !372)
!5581 = !DILocalVariable(name: "xQueueSizeInBytes", scope: !5573, file: !374, line: 371, type: !121)
!5582 = !DILocalVariable(name: "pucQueueStorage", scope: !5573, file: !374, line: 372, type: !185)
!5583 = !DILocation(line: 0, scope: !5573)
!5584 = !DILocation(line: 374, column: 3, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5573, file: !374, line: 374, column: 3)
!5586 = !DILocation(line: 374, column: 3, scope: !5573)
!5587 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !5588)
!5588 = distinct !DILocation(line: 374, column: 3, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5585, file: !374, line: 374, column: 3)
!5590 = !DILocation(line: 0, scope: !5504, inlinedAt: !5588)
!5591 = !DILocation(line: 374, column: 3, scope: !5589)
!5592 = !DILocation(line: 374, column: 3, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5594, file: !374, line: 374, column: 3)
!5594 = distinct !DILexicalBlock(scope: !5589, file: !374, line: 374, column: 3)
!5595 = distinct !{!5595, !5596, !5596}
!5596 = !DILocation(line: 374, column: 3, scope: !5594)
!5597 = !DILocation(line: 379, column: 50, scope: !5573)
!5598 = !DILocation(line: 390, column: 62, scope: !5573)
!5599 = !DILocation(line: 390, column: 30, scope: !5573)
!5600 = !DILocation(line: 390, column: 16, scope: !5573)
!5601 = !DILocation(line: 392, column: 18, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5573, file: !374, line: 392, column: 7)
!5603 = !DILocation(line: 392, column: 7, scope: !5573)
!5604 = !DILocation(line: 397, column: 20, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5602, file: !374, line: 393, column: 3)
!5606 = !DILocation(line: 408, column: 4, scope: !5605)
!5607 = !DILocation(line: 409, column: 3, scope: !5605)
!5608 = !DILocation(line: 416, column: 3, scope: !5573)
!5609 = distinct !DISubprogram(name: "prvInitialiseNewQueue", scope: !374, file: !374, line: 422, type: !5610, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !5612)
!5610 = !DISubroutineType(types: !5611)
!5611 = !{null, !2753, !2753, !185, !714, !372}
!5612 = !{!5613, !5614, !5615, !5616, !5617}
!5613 = !DILocalVariable(name: "uxQueueLength", arg: 1, scope: !5609, file: !374, line: 422, type: !2753)
!5614 = !DILocalVariable(name: "uxItemSize", arg: 2, scope: !5609, file: !374, line: 422, type: !2753)
!5615 = !DILocalVariable(name: "pucQueueStorage", arg: 3, scope: !5609, file: !374, line: 422, type: !185)
!5616 = !DILocalVariable(name: "ucQueueType", arg: 4, scope: !5609, file: !374, line: 422, type: !714)
!5617 = !DILocalVariable(name: "pxNewQueue", arg: 5, scope: !5609, file: !374, line: 422, type: !372)
!5618 = !DILocation(line: 0, scope: !5609)
!5619 = !DILocation(line: 428, column: 17, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5609, file: !374, line: 428, column: 6)
!5621 = !DILocation(line: 428, column: 6, scope: !5609)
!5622 = !DILocation(line: 434, column: 22, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5620, file: !374, line: 429, column: 2)
!5624 = !DILocation(line: 435, column: 2, scope: !5623)
!5625 = !DILocation(line: 439, column: 15, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5620, file: !374, line: 437, column: 2)
!5627 = !DILocation(line: 439, column: 22, scope: !5626)
!5628 = !DILocation(line: 444, column: 14, scope: !5609)
!5629 = !DILocation(line: 444, column: 23, scope: !5609)
!5630 = !DILocation(line: 445, column: 14, scope: !5609)
!5631 = !DILocation(line: 445, column: 25, scope: !5609)
!5632 = !DILocation(line: 446, column: 11, scope: !5609)
!5633 = !DILocation(line: 450, column: 15, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5609, file: !374, line: 449, column: 2)
!5635 = !DILocation(line: 450, column: 27, scope: !5634)
!5636 = !{!5521, !1016, i64 76}
!5637 = !DILocation(line: 461, column: 1, scope: !5609)
!5638 = distinct !DISubprogram(name: "xQueueCreateMutex", scope: !374, file: !374, line: 496, type: !5639, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !5641)
!5639 = !DISubroutineType(types: !5640)
!5640 = !{!429, !714}
!5641 = !{!5642, !5643, !5644, !5645}
!5642 = !DILocalVariable(name: "ucQueueType", arg: 1, scope: !5638, file: !374, line: 496, type: !714)
!5643 = !DILocalVariable(name: "xNewQueue", scope: !5638, file: !374, line: 498, type: !429)
!5644 = !DILocalVariable(name: "uxMutexLength", scope: !5638, file: !374, line: 499, type: !2753)
!5645 = !DILocalVariable(name: "uxMutexSize", scope: !5638, file: !374, line: 499, type: !2753)
!5646 = !DILocation(line: 0, scope: !5638)
!5647 = !DILocation(line: 501, column: 15, scope: !5638)
!5648 = !DILocation(line: 502, column: 3, scope: !5638)
!5649 = !DILocation(line: 504, column: 3, scope: !5638)
!5650 = distinct !DISubprogram(name: "prvInitialiseMutex", scope: !374, file: !374, line: 466, type: !5651, scopeLine: 467, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !5653)
!5651 = !DISubroutineType(types: !5652)
!5652 = !{null, !372}
!5653 = !{!5654}
!5654 = !DILocalVariable(name: "pxNewQueue", arg: 1, scope: !5650, file: !374, line: 466, type: !372)
!5655 = !DILocation(line: 0, scope: !5650)
!5656 = !DILocation(line: 468, column: 18, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5650, file: !374, line: 468, column: 7)
!5658 = !DILocation(line: 468, column: 7, scope: !5650)
!5659 = !DILocation(line: 474, column: 16, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5657, file: !374, line: 469, column: 3)
!5661 = !DILocation(line: 474, column: 29, scope: !5660)
!5662 = !DILocation(line: 474, column: 42, scope: !5660)
!5663 = !DILocation(line: 475, column: 16, scope: !5660)
!5664 = !DILocation(line: 475, column: 28, scope: !5660)
!5665 = !DILocation(line: 478, column: 29, scope: !5660)
!5666 = !DILocation(line: 478, column: 50, scope: !5660)
!5667 = !DILocation(line: 483, column: 13, scope: !5660)
!5668 = !DILocation(line: 484, column: 3, scope: !5660)
!5669 = !DILocation(line: 489, column: 2, scope: !5650)
!5670 = distinct !DISubprogram(name: "xQueueGenericSend", scope: !374, file: !374, line: 740, type: !5671, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !5676)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{!176, !429, !5673, !39, !1864}
!5673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5674)
!5674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5675, size: 32)
!5675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!5676 = !{!5677, !5678, !5679, !5680, !5681, !5682, !5683, !5689}
!5677 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5670, file: !374, line: 740, type: !429)
!5678 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !5670, file: !374, line: 740, type: !5673)
!5679 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !5670, file: !374, line: 740, type: !39)
!5680 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !5670, file: !374, line: 740, type: !1864)
!5681 = !DILocalVariable(name: "xEntryTimeSet", scope: !5670, file: !374, line: 742, type: !176)
!5682 = !DILocalVariable(name: "xYieldRequired", scope: !5670, file: !374, line: 742, type: !176)
!5683 = !DILocalVariable(name: "xTimeOut", scope: !5670, file: !374, line: 743, type: !5684)
!5684 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !105, line: 106, baseType: !5685)
!5685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !105, line: 102, size: 64, elements: !5686)
!5686 = !{!5687, !5688}
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !5685, file: !105, line: 104, baseType: !176, size: 32)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !5685, file: !105, line: 105, baseType: !39, size: 32, offset: 32)
!5689 = !DILocalVariable(name: "pxQueue", scope: !5670, file: !374, line: 744, type: !5498)
!5690 = !DILocation(line: 0, scope: !5670)
!5691 = !DILocation(line: 743, column: 1, scope: !5670)
!5692 = !DILocation(line: 743, column: 11, scope: !5670)
!5693 = !DILocation(line: 746, column: 2, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5670, file: !374, line: 746, column: 2)
!5695 = !DILocation(line: 746, column: 2, scope: !5670)
!5696 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !5697)
!5697 = distinct !DILocation(line: 746, column: 2, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5694, file: !374, line: 746, column: 2)
!5699 = !DILocation(line: 0, scope: !5504, inlinedAt: !5697)
!5700 = !DILocation(line: 746, column: 2, scope: !5698)
!5701 = !DILocation(line: 746, column: 2, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5703, file: !374, line: 746, column: 2)
!5703 = distinct !DILexicalBlock(scope: !5698, file: !374, line: 746, column: 2)
!5704 = distinct !{!5704, !5705, !5705}
!5705 = !DILocation(line: 746, column: 2, scope: !5703)
!5706 = !DILocation(line: 747, column: 2, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5670, file: !374, line: 747, column: 2)
!5708 = !DILocation(line: 747, column: 2, scope: !5670)
!5709 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !5710)
!5710 = distinct !DILocation(line: 747, column: 2, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5707, file: !374, line: 747, column: 2)
!5712 = !DILocation(line: 0, scope: !5504, inlinedAt: !5710)
!5713 = !DILocation(line: 747, column: 2, scope: !5711)
!5714 = !DILocation(line: 747, column: 2, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5716, file: !374, line: 747, column: 2)
!5716 = distinct !DILexicalBlock(scope: !5711, file: !374, line: 747, column: 2)
!5717 = distinct !{!5717, !5718, !5718}
!5718 = !DILocation(line: 747, column: 2, scope: !5716)
!5719 = !DILocation(line: 748, column: 2, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5670, file: !374, line: 748, column: 2)
!5721 = !DILocation(line: 748, column: 2, scope: !5670)
!5722 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !5723)
!5723 = distinct !DILocation(line: 748, column: 2, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5720, file: !374, line: 748, column: 2)
!5725 = !DILocation(line: 0, scope: !5504, inlinedAt: !5723)
!5726 = !DILocation(line: 748, column: 2, scope: !5724)
!5727 = !DILocation(line: 748, column: 2, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5729, file: !374, line: 748, column: 2)
!5729 = distinct !DILexicalBlock(scope: !5724, file: !374, line: 748, column: 2)
!5730 = distinct !{!5730, !5731, !5731}
!5731 = !DILocation(line: 748, column: 2, scope: !5729)
!5732 = !DILocation(line: 751, column: 3, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5734, file: !374, line: 751, column: 3)
!5734 = distinct !DILexicalBlock(scope: !5670, file: !374, line: 750, column: 2)
!5735 = !DILocation(line: 751, column: 3, scope: !5734)
!5736 = !DILocation(line: 761, column: 3, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5738, file: !374, line: 760, column: 2)
!5738 = distinct !DILexicalBlock(scope: !5739, file: !374, line: 759, column: 2)
!5739 = distinct !DILexicalBlock(scope: !5670, file: !374, line: 759, column: 2)
!5740 = !DILocation(line: 767, column: 19, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5742, file: !374, line: 767, column: 8)
!5742 = distinct !DILexicalBlock(scope: !5737, file: !374, line: 762, column: 3)
!5743 = !DILocation(line: 767, column: 48, scope: !5741)
!5744 = !DILocation(line: 767, column: 37, scope: !5741)
!5745 = !DILocation(line: 767, column: 59, scope: !5741)
!5746 = !DILocation(line: 872, column: 22, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !374, line: 872, column: 9)
!5748 = distinct !DILexicalBlock(scope: !5741, file: !374, line: 871, column: 4)
!5749 = !DILocation(line: 872, column: 9, scope: !5748)
!5750 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !5751)
!5751 = distinct !DILocation(line: 751, column: 3, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5733, file: !374, line: 751, column: 3)
!5753 = !DILocation(line: 0, scope: !5504, inlinedAt: !5751)
!5754 = !DILocation(line: 751, column: 3, scope: !5752)
!5755 = !DILocation(line: 751, column: 3, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5757, file: !374, line: 751, column: 3)
!5757 = distinct !DILexicalBlock(scope: !5752, file: !374, line: 751, column: 3)
!5758 = distinct !{!5758, !5759, !5759}
!5759 = !DILocation(line: 751, column: 3, scope: !5757)
!5760 = !DILocation(line: 833, column: 23, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5762, file: !374, line: 832, column: 5)
!5762 = distinct !DILexicalBlock(scope: !5741, file: !374, line: 768, column: 4)
!5763 = !DILocation(line: 837, column: 10, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5761, file: !374, line: 837, column: 10)
!5765 = !{!5521, !1023, i64 36}
!5766 = !DILocation(line: 837, column: 10, scope: !5761)
!5767 = !DILocation(line: 839, column: 11, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5769, file: !374, line: 839, column: 11)
!5769 = distinct !DILexicalBlock(scope: !5764, file: !374, line: 838, column: 6)
!5770 = !DILocation(line: 839, column: 76, scope: !5768)
!5771 = !DILocation(line: 839, column: 11, scope: !5769)
!5772 = !DILocation(line: 845, column: 8, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5774, file: !374, line: 845, column: 8)
!5774 = distinct !DILexicalBlock(scope: !5768, file: !374, line: 840, column: 7)
!5775 = !{i64 2148119016}
!5776 = !{i64 2148119067}
!5777 = !DILocation(line: 846, column: 7, scope: !5774)
!5778 = !DILocation(line: 852, column: 30, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5764, file: !374, line: 852, column: 15)
!5780 = !DILocation(line: 852, column: 15, scope: !5764)
!5781 = !DILocation(line: 858, column: 7, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5783, file: !374, line: 858, column: 7)
!5783 = distinct !DILexicalBlock(scope: !5779, file: !374, line: 853, column: 6)
!5784 = !{i64 2148119537}
!5785 = !{i64 2148119588}
!5786 = !DILocation(line: 859, column: 6, scope: !5783)
!5787 = !DILocation(line: 867, column: 5, scope: !5762)
!5788 = !DILocation(line: 868, column: 5, scope: !5762)
!5789 = !DILocation(line: 876, column: 6, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5747, file: !374, line: 873, column: 5)
!5791 = !DILocation(line: 881, column: 6, scope: !5790)
!5792 = !DILocation(line: 887, column: 6, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5794, file: !374, line: 884, column: 5)
!5794 = distinct !DILexicalBlock(scope: !5747, file: !374, line: 883, column: 14)
!5795 = !DILocation(line: 889, column: 5, scope: !5793)
!5796 = !DILocation(line: 897, column: 3, scope: !5737)
!5797 = !DILocation(line: 902, column: 3, scope: !5737)
!5798 = !DILocation(line: 903, column: 3, scope: !5737)
!5799 = !DILocation(line: 903, column: 3, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5801, file: !374, line: 903, column: 3)
!5801 = distinct !DILexicalBlock(scope: !5737, file: !374, line: 903, column: 3)
!5802 = !DILocation(line: 903, column: 3, scope: !5801)
!5803 = !DILocation(line: 903, column: 3, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5800, file: !374, line: 903, column: 3)
!5805 = !DILocation(line: 903, column: 3, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5801, file: !374, line: 903, column: 3)
!5807 = !DILocation(line: 903, column: 3, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5806, file: !374, line: 903, column: 3)
!5809 = !DILocation(line: 906, column: 7, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5737, file: !374, line: 906, column: 7)
!5811 = !DILocation(line: 906, column: 56, scope: !5810)
!5812 = !DILocation(line: 906, column: 7, scope: !5737)
!5813 = !DILocation(line: 908, column: 8, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5815, file: !374, line: 908, column: 8)
!5815 = distinct !DILexicalBlock(scope: !5810, file: !374, line: 907, column: 3)
!5816 = !DILocation(line: 908, column: 34, scope: !5814)
!5817 = !DILocation(line: 908, column: 8, scope: !5815)
!5818 = !DILocation(line: 911, column: 63, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5814, file: !374, line: 909, column: 4)
!5820 = !DILocation(line: 911, column: 5, scope: !5819)
!5821 = !DILocation(line: 918, column: 5, scope: !5819)
!5822 = !DILocation(line: 925, column: 9, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5819, file: !374, line: 925, column: 9)
!5824 = !DILocation(line: 925, column: 26, scope: !5823)
!5825 = !DILocation(line: 925, column: 9, scope: !5819)
!5826 = !DILocation(line: 927, column: 6, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5828, file: !374, line: 927, column: 6)
!5828 = distinct !DILexicalBlock(scope: !5823, file: !374, line: 926, column: 5)
!5829 = !{i64 2148120852}
!5830 = !{i64 2148120903}
!5831 = !DILocation(line: 928, column: 5, scope: !5828)
!5832 = !DILocation(line: 933, column: 5, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5814, file: !374, line: 931, column: 4)
!5834 = !DILocation(line: 934, column: 14, scope: !5833)
!5835 = !DILocation(line: 940, column: 4, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5810, file: !374, line: 938, column: 3)
!5837 = !DILocation(line: 941, column: 13, scope: !5836)
!5838 = !DILocation(line: 944, column: 4, scope: !5836)
!5839 = distinct !{!5839, !5840, !5841}
!5840 = !DILocation(line: 759, column: 2, scope: !5739)
!5841 = !DILocation(line: 946, column: 2, scope: !5739)
!5842 = !DILocation(line: 872, column: 9, scope: !5747)
!5843 = !DILocation(line: 0, scope: !5737)
!5844 = !DILocation(line: 947, column: 1, scope: !5670)
!5845 = distinct !DISubprogram(name: "prvCopyDataToQueue", scope: !374, file: !374, line: 2074, type: !5846, scopeLine: 2075, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !5848)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!176, !5498, !5674, !1864}
!5848 = !{!5849, !5850, !5851, !5852, !5853}
!5849 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !5845, file: !374, line: 2074, type: !5498)
!5850 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !5845, file: !374, line: 2074, type: !5674)
!5851 = !DILocalVariable(name: "xPosition", arg: 3, scope: !5845, file: !374, line: 2074, type: !1864)
!5852 = !DILocalVariable(name: "xReturn", scope: !5845, file: !374, line: 2076, type: !176)
!5853 = !DILocalVariable(name: "uxMessagesWaiting", scope: !5845, file: !374, line: 2077, type: !149)
!5854 = !DILocation(line: 0, scope: !5845)
!5855 = !DILocation(line: 2081, column: 31, scope: !5845)
!5856 = !DILocation(line: 2083, column: 15, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5845, file: !374, line: 2083, column: 6)
!5858 = !DILocation(line: 2083, column: 26, scope: !5857)
!5859 = !DILocation(line: 2083, column: 6, scope: !5845)
!5860 = !DILocation(line: 2087, column: 17, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5862, file: !374, line: 2087, column: 8)
!5862 = distinct !DILexicalBlock(scope: !5863, file: !374, line: 2086, column: 3)
!5863 = distinct !DILexicalBlock(scope: !5857, file: !374, line: 2084, column: 2)
!5864 = !DILocation(line: 2087, column: 29, scope: !5861)
!5865 = !DILocation(line: 2087, column: 8, scope: !5862)
!5866 = !DILocation(line: 2090, column: 49, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5861, file: !374, line: 2088, column: 4)
!5868 = !DILocation(line: 2090, column: 62, scope: !5867)
!5869 = !DILocation(line: 2090, column: 15, scope: !5867)
!5870 = !DILocation(line: 2091, column: 40, scope: !5867)
!5871 = !DILocation(line: 2092, column: 4, scope: !5867)
!5872 = !DILocation(line: 2100, column: 21, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5857, file: !374, line: 2100, column: 11)
!5874 = !DILocation(line: 2100, column: 11, scope: !5857)
!5875 = !DILocation(line: 2102, column: 40, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5873, file: !374, line: 2101, column: 2)
!5877 = !DILocation(line: 2102, column: 12, scope: !5876)
!5878 = !DILocation(line: 2103, column: 34, scope: !5876)
!5879 = !DILocation(line: 2103, column: 22, scope: !5876)
!5880 = !DILocation(line: 2104, column: 47, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5876, file: !374, line: 2104, column: 7)
!5882 = !DILocation(line: 2104, column: 26, scope: !5881)
!5883 = !DILocation(line: 2104, column: 7, scope: !5876)
!5884 = !DILocation(line: 2106, column: 34, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5881, file: !374, line: 2105, column: 3)
!5886 = !DILocation(line: 2106, column: 23, scope: !5885)
!5887 = !DILocation(line: 2107, column: 3, scope: !5885)
!5888 = !DILocation(line: 2115, column: 49, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5873, file: !374, line: 2114, column: 2)
!5890 = !DILocation(line: 2115, column: 12, scope: !5889)
!5891 = !DILocation(line: 2116, column: 44, scope: !5889)
!5892 = !DILocation(line: 2116, column: 32, scope: !5889)
!5893 = !DILocation(line: 2117, column: 47, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5889, file: !374, line: 2117, column: 7)
!5895 = !DILocation(line: 2117, column: 36, scope: !5894)
!5896 = !DILocation(line: 2117, column: 7, scope: !5889)
!5897 = !DILocation(line: 2119, column: 55, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5894, file: !374, line: 2118, column: 3)
!5899 = !DILocation(line: 2119, column: 62, scope: !5898)
!5900 = !DILocation(line: 2119, column: 33, scope: !5898)
!5901 = !DILocation(line: 2120, column: 3, scope: !5898)
!5902 = !DILocation(line: 2126, column: 17, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5889, file: !374, line: 2126, column: 7)
!5904 = !DILocation(line: 2126, column: 7, scope: !5889)
!5905 = !DILocation(line: 2147, column: 49, scope: !5845)
!5906 = !DILocation(line: 2147, column: 29, scope: !5845)
!5907 = !DILocation(line: 2149, column: 2, scope: !5845)
!5908 = distinct !DISubprogram(name: "prvIsQueueFull", scope: !374, file: !374, line: 2331, type: !5909, scopeLine: 2332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !5913)
!5909 = !DISubroutineType(types: !5910)
!5910 = !{!176, !5911}
!5911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5912, size: 32)
!5912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!5913 = !{!5914, !5915}
!5914 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !5908, file: !374, line: 2331, type: !5911)
!5915 = !DILocalVariable(name: "xReturn", scope: !5908, file: !374, line: 2333, type: !176)
!5916 = !DILocation(line: 0, scope: !5908)
!5917 = !DILocation(line: 2335, column: 2, scope: !5908)
!5918 = !DILocation(line: 2337, column: 16, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5920, file: !374, line: 2337, column: 7)
!5920 = distinct !DILexicalBlock(scope: !5908, file: !374, line: 2336, column: 2)
!5921 = !DILocation(line: 2337, column: 46, scope: !5919)
!5922 = !DILocation(line: 2337, column: 34, scope: !5919)
!5923 = !DILocation(line: 2346, column: 2, scope: !5908)
!5924 = !DILocation(line: 2348, column: 2, scope: !5908)
!5925 = distinct !DISubprogram(name: "prvUnlockQueue", scope: !374, file: !374, line: 2171, type: !5926, scopeLine: 2172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !5928)
!5926 = !DISubroutineType(types: !5927)
!5927 = !{null, !5498}
!5928 = !{!5929, !5930, !5932}
!5929 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !5925, file: !374, line: 2171, type: !5498)
!5930 = !DILocalVariable(name: "cTxLock", scope: !5931, file: !374, line: 2181, type: !369)
!5931 = distinct !DILexicalBlock(scope: !5925, file: !374, line: 2180, column: 2)
!5932 = !DILocalVariable(name: "cRxLock", scope: !5933, file: !374, line: 2262, type: !369)
!5933 = distinct !DILexicalBlock(scope: !5925, file: !374, line: 2261, column: 2)
!5934 = !DILocation(line: 0, scope: !5925)
!5935 = !DILocation(line: 2179, column: 2, scope: !5925)
!5936 = !DILocation(line: 2181, column: 29, scope: !5931)
!5937 = !DILocation(line: 0, scope: !5931)
!5938 = !DILocation(line: 2232, column: 9, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5940, file: !374, line: 2232, column: 9)
!5940 = distinct !DILexicalBlock(scope: !5941, file: !374, line: 2229, column: 4)
!5941 = distinct !DILexicalBlock(scope: !5931, file: !374, line: 2185, column: 3)
!5942 = !DILocation(line: 2184, column: 18, scope: !5931)
!5943 = !DILocation(line: 2184, column: 3, scope: !5931)
!5944 = !DILocation(line: 2232, column: 9, scope: !5940)
!5945 = !DILocation(line: 2234, column: 10, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5947, file: !374, line: 2234, column: 10)
!5947 = distinct !DILexicalBlock(scope: !5939, file: !374, line: 2233, column: 5)
!5948 = !DILocation(line: 2234, column: 75, scope: !5946)
!5949 = !DILocation(line: 2234, column: 10, scope: !5947)
!5950 = !DILocation(line: 2238, column: 7, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5946, file: !374, line: 2235, column: 6)
!5952 = !DILocation(line: 2239, column: 6, scope: !5951)
!5953 = !DILocation(line: 2252, column: 4, scope: !5941)
!5954 = distinct !{!5954, !5943, !5955, !1525}
!5955 = !DILocation(line: 2253, column: 3, scope: !5931)
!5956 = !DILocation(line: 2255, column: 20, scope: !5931)
!5957 = !DILocation(line: 2257, column: 2, scope: !5925)
!5958 = !DILocation(line: 2260, column: 2, scope: !5925)
!5959 = !DILocation(line: 2262, column: 29, scope: !5933)
!5960 = !DILocation(line: 0, scope: !5933)
!5961 = !DILocation(line: 2266, column: 8, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5963, file: !374, line: 2266, column: 8)
!5963 = distinct !DILexicalBlock(scope: !5933, file: !374, line: 2265, column: 3)
!5964 = !DILocation(line: 2264, column: 18, scope: !5933)
!5965 = !DILocation(line: 2264, column: 3, scope: !5933)
!5966 = !DILocation(line: 2266, column: 8, scope: !5963)
!5967 = !DILocation(line: 2268, column: 9, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5969, file: !374, line: 2268, column: 9)
!5969 = distinct !DILexicalBlock(scope: !5962, file: !374, line: 2267, column: 4)
!5970 = !DILocation(line: 2268, column: 71, scope: !5968)
!5971 = !DILocation(line: 2268, column: 9, scope: !5969)
!5972 = !DILocation(line: 2270, column: 6, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5968, file: !374, line: 2269, column: 5)
!5974 = !DILocation(line: 2271, column: 5, scope: !5973)
!5975 = !DILocation(line: 2277, column: 5, scope: !5969)
!5976 = distinct !{!5976, !5965, !5977, !1525}
!5977 = !DILocation(line: 2283, column: 3, scope: !5933)
!5978 = !DILocation(line: 2285, column: 20, scope: !5933)
!5979 = !DILocation(line: 2287, column: 2, scope: !5925)
!5980 = !DILocation(line: 2288, column: 1, scope: !5925)
!5981 = !DISubprogram(name: "memcpy", scope: !1661, file: !1661, line: 31, type: !5982, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1056)
!5982 = !DISubroutineType(types: !5983)
!5983 = !{!78, !5984, !5985, !121}
!5984 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !78)
!5985 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !5674)
!5986 = distinct !DISubprogram(name: "xQueueGiveMutexRecursive", scope: !374, file: !374, line: 589, type: !5987, scopeLine: 590, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !5989)
!5987 = !DISubroutineType(types: !5988)
!5988 = !{!176, !429}
!5989 = !{!5990, !5991, !5992}
!5990 = !DILocalVariable(name: "xMutex", arg: 1, scope: !5986, file: !374, line: 589, type: !429)
!5991 = !DILocalVariable(name: "xReturn", scope: !5986, file: !374, line: 591, type: !176)
!5992 = !DILocalVariable(name: "pxMutex", scope: !5986, file: !374, line: 592, type: !5498)
!5993 = !DILocation(line: 0, scope: !5986)
!5994 = !DILocation(line: 594, column: 3, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5986, file: !374, line: 594, column: 3)
!5996 = !DILocation(line: 594, column: 3, scope: !5986)
!5997 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !5998)
!5998 = distinct !DILocation(line: 594, column: 3, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5995, file: !374, line: 594, column: 3)
!6000 = !DILocation(line: 0, scope: !5504, inlinedAt: !5998)
!6001 = !DILocation(line: 594, column: 3, scope: !5999)
!6002 = !DILocation(line: 594, column: 3, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !6004, file: !374, line: 594, column: 3)
!6004 = distinct !DILexicalBlock(scope: !5999, file: !374, line: 594, column: 3)
!6005 = distinct !{!6005, !6006, !6006}
!6006 = !DILocation(line: 594, column: 3, scope: !6004)
!6007 = !DILocation(line: 602, column: 16, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5986, file: !374, line: 602, column: 7)
!6009 = !DILocation(line: 602, column: 29, scope: !6008)
!6010 = !DILocation(line: 602, column: 45, scope: !6008)
!6011 = !DILocation(line: 602, column: 42, scope: !6008)
!6012 = !DILocation(line: 602, column: 7, scope: !5986)
!6013 = !DILocation(line: 611, column: 28, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6008, file: !374, line: 603, column: 3)
!6015 = !DILocation(line: 611, column: 50, scope: !6014)
!6016 = !DILocation(line: 614, column: 51, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6014, file: !374, line: 614, column: 8)
!6018 = !DILocation(line: 614, column: 8, scope: !6014)
!6019 = !DILocation(line: 618, column: 14, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6017, file: !374, line: 615, column: 4)
!6021 = !DILocation(line: 619, column: 4, scope: !6020)
!6022 = !DILocation(line: 0, scope: !6008)
!6023 = !DILocation(line: 636, column: 3, scope: !5986)
!6024 = distinct !DISubprogram(name: "xQueueTakeMutexRecursive", scope: !374, file: !374, line: 644, type: !6025, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6027)
!6025 = !DISubroutineType(types: !6026)
!6026 = !{!176, !429, !39}
!6027 = !{!6028, !6029, !6030, !6031}
!6028 = !DILocalVariable(name: "xMutex", arg: 1, scope: !6024, file: !374, line: 644, type: !429)
!6029 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !6024, file: !374, line: 644, type: !39)
!6030 = !DILocalVariable(name: "xReturn", scope: !6024, file: !374, line: 646, type: !176)
!6031 = !DILocalVariable(name: "pxMutex", scope: !6024, file: !374, line: 647, type: !5498)
!6032 = !DILocation(line: 0, scope: !6024)
!6033 = !DILocation(line: 649, column: 3, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6024, file: !374, line: 649, column: 3)
!6035 = !DILocation(line: 649, column: 3, scope: !6024)
!6036 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6037)
!6037 = distinct !DILocation(line: 649, column: 3, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6034, file: !374, line: 649, column: 3)
!6039 = !DILocation(line: 0, scope: !5504, inlinedAt: !6037)
!6040 = !DILocation(line: 649, column: 3, scope: !6038)
!6041 = !DILocation(line: 649, column: 3, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6043, file: !374, line: 649, column: 3)
!6043 = distinct !DILexicalBlock(scope: !6038, file: !374, line: 649, column: 3)
!6044 = distinct !{!6044, !6045, !6045}
!6045 = !DILocation(line: 649, column: 3, scope: !6043)
!6046 = !DILocation(line: 656, column: 16, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6024, file: !374, line: 656, column: 7)
!6048 = !DILocation(line: 656, column: 29, scope: !6047)
!6049 = !DILocation(line: 656, column: 45, scope: !6047)
!6050 = !DILocation(line: 656, column: 42, scope: !6047)
!6051 = !DILocation(line: 656, column: 7, scope: !6024)
!6052 = !DILocation(line: 663, column: 14, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6047, file: !374, line: 662, column: 3)
!6054 = !DILocation(line: 668, column: 16, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6053, file: !374, line: 668, column: 8)
!6056 = !DILocation(line: 668, column: 8, scope: !6053)
!6057 = !DILocation(line: 0, scope: !6047)
!6058 = !DILocation(line: 678, column: 3, scope: !6024)
!6059 = distinct !DISubprogram(name: "xQueueSemaphoreTake", scope: !374, file: !374, line: 1418, type: !6025, scopeLine: 1419, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6060)
!6060 = !{!6061, !6062, !6063, !6064, !6065, !6066, !6067, !6072}
!6061 = !DILocalVariable(name: "xQueue", arg: 1, scope: !6059, file: !374, line: 1418, type: !429)
!6062 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !6059, file: !374, line: 1418, type: !39)
!6063 = !DILocalVariable(name: "xEntryTimeSet", scope: !6059, file: !374, line: 1420, type: !176)
!6064 = !DILocalVariable(name: "xTimeOut", scope: !6059, file: !374, line: 1421, type: !5684)
!6065 = !DILocalVariable(name: "pxQueue", scope: !6059, file: !374, line: 1422, type: !5498)
!6066 = !DILocalVariable(name: "xInheritanceOccurred", scope: !6059, file: !374, line: 1425, type: !176)
!6067 = !DILocalVariable(name: "uxSemaphoreCount", scope: !6068, file: !374, line: 1452, type: !2753)
!6068 = distinct !DILexicalBlock(scope: !6069, file: !374, line: 1449, column: 3)
!6069 = distinct !DILexicalBlock(scope: !6070, file: !374, line: 1447, column: 2)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !374, line: 1446, column: 2)
!6071 = distinct !DILexicalBlock(scope: !6059, file: !374, line: 1446, column: 2)
!6072 = !DILocalVariable(name: "uxHighestWaitingPriority", scope: !6073, file: !374, line: 1609, type: !149)
!6073 = distinct !DILexicalBlock(scope: !6074, file: !374, line: 1608, column: 7)
!6074 = distinct !DILexicalBlock(scope: !6075, file: !374, line: 1606, column: 6)
!6075 = distinct !DILexicalBlock(scope: !6076, file: !374, line: 1605, column: 10)
!6076 = distinct !DILexicalBlock(scope: !6077, file: !374, line: 1601, column: 5)
!6077 = distinct !DILexicalBlock(scope: !6078, file: !374, line: 1599, column: 4)
!6078 = distinct !DILexicalBlock(scope: !6079, file: !374, line: 1598, column: 8)
!6079 = distinct !DILexicalBlock(scope: !6080, file: !374, line: 1589, column: 3)
!6080 = distinct !DILexicalBlock(scope: !6069, file: !374, line: 1542, column: 7)
!6081 = !DILocation(line: 0, scope: !6059)
!6082 = !DILocation(line: 1421, column: 1, scope: !6059)
!6083 = !DILocation(line: 1421, column: 11, scope: !6059)
!6084 = !DILocation(line: 1429, column: 2, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6059, file: !374, line: 1429, column: 2)
!6086 = !DILocation(line: 1429, column: 2, scope: !6059)
!6087 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6088)
!6088 = distinct !DILocation(line: 1429, column: 2, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6085, file: !374, line: 1429, column: 2)
!6090 = !DILocation(line: 0, scope: !5504, inlinedAt: !6088)
!6091 = !DILocation(line: 1429, column: 2, scope: !6089)
!6092 = !DILocation(line: 1429, column: 2, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6094, file: !374, line: 1429, column: 2)
!6094 = distinct !DILexicalBlock(scope: !6089, file: !374, line: 1429, column: 2)
!6095 = distinct !{!6095, !6096, !6096}
!6096 = !DILocation(line: 1429, column: 2, scope: !6094)
!6097 = !DILocation(line: 1433, column: 2, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6059, file: !374, line: 1433, column: 2)
!6099 = !DILocation(line: 1433, column: 2, scope: !6059)
!6100 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6101)
!6101 = distinct !DILocation(line: 1433, column: 2, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6098, file: !374, line: 1433, column: 2)
!6103 = !DILocation(line: 0, scope: !5504, inlinedAt: !6101)
!6104 = !DILocation(line: 1433, column: 2, scope: !6102)
!6105 = !DILocation(line: 1433, column: 2, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6107, file: !374, line: 1433, column: 2)
!6107 = distinct !DILexicalBlock(scope: !6102, file: !374, line: 1433, column: 2)
!6108 = distinct !{!6108, !6109, !6109}
!6109 = !DILocation(line: 1433, column: 2, scope: !6107)
!6110 = !DILocation(line: 1438, column: 3, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6112, file: !374, line: 1438, column: 3)
!6112 = distinct !DILexicalBlock(scope: !6059, file: !374, line: 1437, column: 2)
!6113 = !DILocation(line: 1438, column: 3, scope: !6112)
!6114 = !DILocation(line: 1448, column: 3, scope: !6069)
!6115 = !DILocation(line: 1452, column: 50, scope: !6068)
!6116 = !DILocation(line: 0, scope: !6068)
!6117 = !DILocation(line: 1456, column: 25, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6068, file: !374, line: 1456, column: 8)
!6119 = !DILocation(line: 1456, column: 8, scope: !6068)
!6120 = !DILocation(line: 1502, column: 22, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6122, file: !374, line: 1502, column: 9)
!6122 = distinct !DILexicalBlock(scope: !6118, file: !374, line: 1501, column: 4)
!6123 = !DILocation(line: 1502, column: 9, scope: !6122)
!6124 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6125)
!6125 = distinct !DILocation(line: 1438, column: 3, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6111, file: !374, line: 1438, column: 3)
!6127 = !DILocation(line: 0, scope: !5504, inlinedAt: !6125)
!6128 = !DILocation(line: 1438, column: 3, scope: !6126)
!6129 = !DILocation(line: 1438, column: 3, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6131, file: !374, line: 1438, column: 3)
!6131 = distinct !DILexicalBlock(scope: !6126, file: !374, line: 1438, column: 3)
!6132 = distinct !{!6132, !6133, !6133}
!6133 = !DILocation(line: 1438, column: 3, scope: !6131)
!6134 = !DILocation(line: 1462, column: 51, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6118, file: !374, line: 1457, column: 4)
!6136 = !DILocation(line: 1462, column: 32, scope: !6135)
!6137 = !DILocation(line: 1466, column: 19, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6139, file: !374, line: 1466, column: 10)
!6139 = distinct !DILexicalBlock(scope: !6135, file: !374, line: 1465, column: 5)
!6140 = !DILocation(line: 1466, column: 31, scope: !6138)
!6141 = !DILocation(line: 1466, column: 10, scope: !6139)
!6142 = !DILocation(line: 1470, column: 44, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6138, file: !374, line: 1467, column: 6)
!6144 = !DILocation(line: 1470, column: 16, scope: !6143)
!6145 = !DILocation(line: 1470, column: 29, scope: !6143)
!6146 = !DILocation(line: 1470, column: 42, scope: !6143)
!6147 = !DILocation(line: 1471, column: 6, scope: !6143)
!6148 = !DILocation(line: 1481, column: 9, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6135, file: !374, line: 1481, column: 9)
!6150 = !DILocation(line: 1481, column: 9, scope: !6135)
!6151 = !DILocation(line: 1483, column: 10, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6153, file: !374, line: 1483, column: 10)
!6153 = distinct !DILexicalBlock(scope: !6149, file: !374, line: 1482, column: 5)
!6154 = !DILocation(line: 1483, column: 72, scope: !6152)
!6155 = !DILocation(line: 1483, column: 10, scope: !6153)
!6156 = !DILocation(line: 1485, column: 7, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6158, file: !374, line: 1485, column: 7)
!6158 = distinct !DILexicalBlock(scope: !6152, file: !374, line: 1484, column: 6)
!6159 = !{i64 2148126587}
!6160 = !{i64 2148126638}
!6161 = !DILocation(line: 1486, column: 6, scope: !6158)
!6162 = !DILocation(line: 1509, column: 7, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6164, file: !374, line: 1509, column: 7)
!6164 = distinct !DILexicalBlock(scope: !6165, file: !374, line: 1508, column: 6)
!6165 = distinct !DILexicalBlock(scope: !6121, file: !374, line: 1503, column: 5)
!6166 = !DILocation(line: 1509, column: 7, scope: !6164)
!6167 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6168)
!6168 = distinct !DILocation(line: 1509, column: 7, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6163, file: !374, line: 1509, column: 7)
!6170 = !DILocation(line: 0, scope: !5504, inlinedAt: !6168)
!6171 = !DILocation(line: 1509, column: 7, scope: !6169)
!6172 = !DILocation(line: 1509, column: 7, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !374, line: 1509, column: 7)
!6174 = distinct !DILexicalBlock(scope: !6169, file: !374, line: 1509, column: 7)
!6175 = distinct !{!6175, !6176, !6176}
!6176 = !DILocation(line: 1509, column: 7, scope: !6174)
!6177 = !DILocation(line: 1519, column: 14, scope: !6121)
!6178 = !DILocation(line: 1523, column: 6, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6180, file: !374, line: 1520, column: 5)
!6180 = distinct !DILexicalBlock(scope: !6121, file: !374, line: 1519, column: 14)
!6181 = !DILocation(line: 1525, column: 5, scope: !6179)
!6182 = !DILocation(line: 1533, column: 3, scope: !6069)
!6183 = !DILocation(line: 1538, column: 3, scope: !6069)
!6184 = !DILocation(line: 1539, column: 3, scope: !6069)
!6185 = !DILocation(line: 1539, column: 3, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6187, file: !374, line: 1539, column: 3)
!6187 = distinct !DILexicalBlock(scope: !6069, file: !374, line: 1539, column: 3)
!6188 = !DILocation(line: 1539, column: 3, scope: !6187)
!6189 = !DILocation(line: 1539, column: 3, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6186, file: !374, line: 1539, column: 3)
!6191 = !DILocation(line: 1539, column: 3, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6187, file: !374, line: 1539, column: 3)
!6193 = !DILocation(line: 1539, column: 3, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6192, file: !374, line: 1539, column: 3)
!6195 = !DILocation(line: 1542, column: 7, scope: !6080)
!6196 = !DILocation(line: 1542, column: 56, scope: !6080)
!6197 = !DILocation(line: 1542, column: 7, scope: !6069)
!6198 = !DILocation(line: 1548, column: 8, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !374, line: 1548, column: 8)
!6200 = distinct !DILexicalBlock(scope: !6080, file: !374, line: 1543, column: 3)
!6201 = !DILocation(line: 1548, column: 35, scope: !6199)
!6202 = !DILocation(line: 1548, column: 8, scope: !6200)
!6203 = !DILocation(line: 1554, column: 19, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6205, file: !374, line: 1554, column: 10)
!6205 = distinct !DILexicalBlock(scope: !6206, file: !374, line: 1553, column: 5)
!6206 = distinct !DILexicalBlock(scope: !6199, file: !374, line: 1549, column: 4)
!6207 = !DILocation(line: 1554, column: 31, scope: !6204)
!6208 = !DILocation(line: 1554, column: 10, scope: !6205)
!6209 = !DILocation(line: 1556, column: 7, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6204, file: !374, line: 1555, column: 6)
!6211 = !DILocation(line: 1558, column: 75, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6210, file: !374, line: 1557, column: 7)
!6213 = !DILocation(line: 1558, column: 31, scope: !6212)
!6214 = !DILocation(line: 1560, column: 7, scope: !6210)
!6215 = !DILocation(line: 1561, column: 6, scope: !6210)
!6216 = !DILocation(line: 1569, column: 66, scope: !6206)
!6217 = !DILocation(line: 1569, column: 5, scope: !6206)
!6218 = !DILocation(line: 1570, column: 5, scope: !6206)
!6219 = !DILocation(line: 1571, column: 9, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6206, file: !374, line: 1571, column: 9)
!6221 = !DILocation(line: 1571, column: 26, scope: !6220)
!6222 = !DILocation(line: 1571, column: 9, scope: !6206)
!6223 = !DILocation(line: 1573, column: 6, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6225, file: !374, line: 1573, column: 6)
!6225 = distinct !DILexicalBlock(scope: !6220, file: !374, line: 1572, column: 5)
!6226 = !{i64 2148128181}
!6227 = !{i64 2148128232}
!6228 = !DILocation(line: 1574, column: 5, scope: !6225)
!6229 = !DILocation(line: 1584, column: 5, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6199, file: !374, line: 1581, column: 4)
!6231 = !DILocation(line: 1585, column: 14, scope: !6230)
!6232 = !DILocation(line: 1591, column: 4, scope: !6079)
!6233 = !DILocation(line: 1592, column: 13, scope: !6079)
!6234 = !DILocation(line: 1598, column: 8, scope: !6078)
!6235 = !DILocation(line: 1598, column: 35, scope: !6078)
!6236 = !DILocation(line: 1598, column: 8, scope: !6079)
!6237 = !DILocation(line: 1605, column: 31, scope: !6075)
!6238 = !DILocation(line: 1605, column: 10, scope: !6076)
!6239 = !DILocation(line: 1607, column: 7, scope: !6074)
!6240 = !DILocation(line: 1616, column: 35, scope: !6073)
!6241 = !DILocation(line: 0, scope: !6073)
!6242 = !DILocation(line: 1617, column: 67, scope: !6073)
!6243 = !DILocation(line: 1617, column: 8, scope: !6073)
!6244 = !DILocation(line: 1620, column: 6, scope: !6074)
!6245 = distinct !{!6245, !6246, !6247}
!6246 = !DILocation(line: 1446, column: 2, scope: !6071)
!6247 = !DILocation(line: 1632, column: 2, scope: !6071)
!6248 = !DILocation(line: 1502, column: 9, scope: !6121)
!6249 = !DILocation(line: 0, scope: !6069)
!6250 = !DILocation(line: 1633, column: 1, scope: !6059)
!6251 = distinct !DISubprogram(name: "prvIsQueueEmpty", scope: !374, file: !374, line: 2291, type: !5909, scopeLine: 2292, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6252)
!6252 = !{!6253, !6254}
!6253 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !6251, file: !374, line: 2291, type: !5911)
!6254 = !DILocalVariable(name: "xReturn", scope: !6251, file: !374, line: 2293, type: !176)
!6255 = !DILocation(line: 0, scope: !6251)
!6256 = !DILocation(line: 2295, column: 2, scope: !6251)
!6257 = !DILocation(line: 2297, column: 16, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6259, file: !374, line: 2297, column: 7)
!6259 = distinct !DILexicalBlock(scope: !6251, file: !374, line: 2296, column: 2)
!6260 = !DILocation(line: 2297, column: 34, scope: !6258)
!6261 = !DILocation(line: 2306, column: 2, scope: !6251)
!6262 = !DILocation(line: 2308, column: 2, scope: !6251)
!6263 = distinct !DISubprogram(name: "prvGetDisinheritPriorityAfterTimeout", scope: !374, file: !374, line: 2049, type: !6264, scopeLine: 2050, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6267)
!6264 = !DISubroutineType(types: !6265)
!6265 = !{!149, !6266}
!6266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5911)
!6267 = !{!6268, !6269}
!6268 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !6263, file: !374, line: 2049, type: !6266)
!6269 = !DILocalVariable(name: "uxHighestPriorityOfWaitingTasks", scope: !6263, file: !374, line: 2051, type: !149)
!6270 = !DILocation(line: 0, scope: !6263)
!6271 = !DILocation(line: 2059, column: 7, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6263, file: !374, line: 2059, column: 7)
!6273 = !DILocation(line: 2059, column: 71, scope: !6272)
!6274 = !DILocation(line: 2059, column: 7, scope: !6263)
!6275 = !DILocation(line: 2061, column: 93, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6272, file: !374, line: 2060, column: 3)
!6277 = !{!5521, !1015, i64 48}
!6278 = !DILocation(line: 2061, column: 75, scope: !6276)
!6279 = !DILocation(line: 2062, column: 3, scope: !6276)
!6280 = !DILocation(line: 0, scope: !6272)
!6281 = !DILocation(line: 2068, column: 3, scope: !6263)
!6282 = distinct !DISubprogram(name: "xQueueCreateCountingSemaphore", scope: !374, file: !374, line: 714, type: !6283, scopeLine: 715, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6285)
!6283 = !DISubroutineType(types: !6284)
!6284 = !{!429, !2753, !2753}
!6285 = !{!6286, !6287, !6288}
!6286 = !DILocalVariable(name: "uxMaxCount", arg: 1, scope: !6282, file: !374, line: 714, type: !2753)
!6287 = !DILocalVariable(name: "uxInitialCount", arg: 2, scope: !6282, file: !374, line: 714, type: !2753)
!6288 = !DILocalVariable(name: "xHandle", scope: !6282, file: !374, line: 716, type: !429)
!6289 = !DILocation(line: 0, scope: !6282)
!6290 = !DILocation(line: 718, column: 3, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6282, file: !374, line: 718, column: 3)
!6292 = !DILocation(line: 718, column: 3, scope: !6282)
!6293 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6294)
!6294 = distinct !DILocation(line: 718, column: 3, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6291, file: !374, line: 718, column: 3)
!6296 = !DILocation(line: 0, scope: !5504, inlinedAt: !6294)
!6297 = !DILocation(line: 718, column: 3, scope: !6295)
!6298 = !DILocation(line: 718, column: 3, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6300, file: !374, line: 718, column: 3)
!6300 = distinct !DILexicalBlock(scope: !6295, file: !374, line: 718, column: 3)
!6301 = distinct !{!6301, !6302, !6302}
!6302 = !DILocation(line: 718, column: 3, scope: !6300)
!6303 = !DILocation(line: 719, column: 3, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6282, file: !374, line: 719, column: 3)
!6305 = !DILocation(line: 719, column: 3, scope: !6282)
!6306 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6307)
!6307 = distinct !DILocation(line: 719, column: 3, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6304, file: !374, line: 719, column: 3)
!6309 = !DILocation(line: 0, scope: !5504, inlinedAt: !6307)
!6310 = !DILocation(line: 719, column: 3, scope: !6308)
!6311 = !DILocation(line: 719, column: 3, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !374, line: 719, column: 3)
!6313 = distinct !DILexicalBlock(scope: !6308, file: !374, line: 719, column: 3)
!6314 = distinct !{!6314, !6315, !6315}
!6315 = !DILocation(line: 719, column: 3, scope: !6313)
!6316 = !DILocation(line: 721, column: 13, scope: !6282)
!6317 = !DILocation(line: 723, column: 15, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6282, file: !374, line: 723, column: 7)
!6319 = !DILocation(line: 723, column: 7, scope: !6282)
!6320 = !DILocation(line: 725, column: 31, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6318, file: !374, line: 724, column: 3)
!6322 = !DILocation(line: 725, column: 49, scope: !6321)
!6323 = !DILocation(line: 728, column: 3, scope: !6321)
!6324 = !DILocation(line: 734, column: 3, scope: !6282)
!6325 = distinct !DISubprogram(name: "xQueueGenericSendFromISR", scope: !374, file: !374, line: 950, type: !6326, scopeLine: 951, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6328)
!6326 = !DISubroutineType(types: !6327)
!6327 = !{!176, !429, !5673, !297, !1864}
!6328 = !{!6329, !6330, !6331, !6332, !6333, !6334, !6335, !6336, !6341}
!6329 = !DILocalVariable(name: "xQueue", arg: 1, scope: !6325, file: !374, line: 950, type: !429)
!6330 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !6325, file: !374, line: 950, type: !5673)
!6331 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !6325, file: !374, line: 950, type: !297)
!6332 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !6325, file: !374, line: 950, type: !1864)
!6333 = !DILocalVariable(name: "xReturn", scope: !6325, file: !374, line: 952, type: !176)
!6334 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !6325, file: !374, line: 953, type: !149)
!6335 = !DILocalVariable(name: "pxQueue", scope: !6325, file: !374, line: 954, type: !5498)
!6336 = !DILocalVariable(name: "cTxLock", scope: !6337, file: !374, line: 985, type: !6340)
!6337 = distinct !DILexicalBlock(scope: !6338, file: !374, line: 984, column: 3)
!6338 = distinct !DILexicalBlock(scope: !6339, file: !374, line: 983, column: 7)
!6339 = distinct !DILexicalBlock(scope: !6325, file: !374, line: 982, column: 2)
!6340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!6341 = !DILocalVariable(name: "uxPreviousMessagesWaiting", scope: !6337, file: !374, line: 986, type: !2753)
!6342 = !DILocation(line: 0, scope: !6325)
!6343 = !DILocation(line: 956, column: 2, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6325, file: !374, line: 956, column: 2)
!6345 = !DILocation(line: 956, column: 2, scope: !6325)
!6346 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6347)
!6347 = distinct !DILocation(line: 956, column: 2, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6344, file: !374, line: 956, column: 2)
!6349 = !DILocation(line: 0, scope: !5504, inlinedAt: !6347)
!6350 = !DILocation(line: 956, column: 2, scope: !6348)
!6351 = !DILocation(line: 956, column: 2, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6353, file: !374, line: 956, column: 2)
!6353 = distinct !DILexicalBlock(scope: !6348, file: !374, line: 956, column: 2)
!6354 = distinct !{!6354, !6355, !6355}
!6355 = !DILocation(line: 956, column: 2, scope: !6353)
!6356 = !DILocation(line: 957, column: 2, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6325, file: !374, line: 957, column: 2)
!6358 = !DILocation(line: 957, column: 2, scope: !6325)
!6359 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6360)
!6360 = distinct !DILocation(line: 957, column: 2, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6357, file: !374, line: 957, column: 2)
!6362 = !DILocation(line: 0, scope: !5504, inlinedAt: !6360)
!6363 = !DILocation(line: 957, column: 2, scope: !6361)
!6364 = !DILocation(line: 957, column: 2, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !374, line: 957, column: 2)
!6366 = distinct !DILexicalBlock(scope: !6361, file: !374, line: 957, column: 2)
!6367 = distinct !{!6367, !6368, !6368}
!6368 = !DILocation(line: 957, column: 2, scope: !6366)
!6369 = !DILocation(line: 958, column: 2, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6325, file: !374, line: 958, column: 2)
!6371 = !DILocation(line: 958, column: 2, scope: !6325)
!6372 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6373)
!6373 = distinct !DILocation(line: 958, column: 2, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6370, file: !374, line: 958, column: 2)
!6375 = !DILocation(line: 0, scope: !5504, inlinedAt: !6373)
!6376 = !DILocation(line: 958, column: 2, scope: !6374)
!6377 = !DILocation(line: 958, column: 2, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6379, file: !374, line: 958, column: 2)
!6379 = distinct !DILexicalBlock(scope: !6374, file: !374, line: 958, column: 2)
!6380 = distinct !{!6380, !6381, !6381}
!6381 = !DILocation(line: 958, column: 2, scope: !6379)
!6382 = !DILocation(line: 974, column: 2, scope: !6325)
!6383 = !DILocation(line: 211, column: 2, scope: !6384, inlinedAt: !6388)
!6384 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !40, file: !40, line: 207, type: !2223, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6385)
!6385 = !{!6386, !6387}
!6386 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !6384, file: !40, line: 209, type: !21)
!6387 = !DILocalVariable(name: "ulNewBASEPRI", scope: !6384, file: !40, line: 209, type: !21)
!6388 = distinct !DILocation(line: 981, column: 27, scope: !6325)
!6389 = !{i64 432766, i64 432804, i64 432837, i64 432874, i64 432902}
!6390 = !DILocation(line: 0, scope: !6384, inlinedAt: !6388)
!6391 = !DILocation(line: 983, column: 18, scope: !6338)
!6392 = !DILocation(line: 983, column: 47, scope: !6338)
!6393 = !DILocation(line: 983, column: 36, scope: !6338)
!6394 = !DILocation(line: 983, column: 58, scope: !6338)
!6395 = !DILocation(line: 985, column: 36, scope: !6337)
!6396 = !DILocation(line: 0, scope: !6337)
!6397 = !DILocation(line: 986, column: 59, scope: !6337)
!6398 = !DILocation(line: 995, column: 13, scope: !6337)
!6399 = !DILocation(line: 999, column: 16, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6337, file: !374, line: 999, column: 8)
!6401 = !DILocation(line: 999, column: 8, scope: !6337)
!6402 = !DILocation(line: 1061, column: 10, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6404, file: !374, line: 1061, column: 10)
!6404 = distinct !DILexicalBlock(scope: !6405, file: !374, line: 1060, column: 5)
!6405 = distinct !DILexicalBlock(scope: !6400, file: !374, line: 1000, column: 4)
!6406 = !DILocation(line: 1061, column: 10, scope: !6404)
!6407 = !DILocation(line: 1063, column: 11, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6409, file: !374, line: 1063, column: 11)
!6409 = distinct !DILexicalBlock(scope: !6403, file: !374, line: 1062, column: 6)
!6410 = !DILocation(line: 1063, column: 76, scope: !6408)
!6411 = !DILocation(line: 1063, column: 11, scope: !6409)
!6412 = !DILocation(line: 1069, column: 36, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6414, file: !374, line: 1068, column: 8)
!6414 = distinct !DILexicalBlock(scope: !6415, file: !374, line: 1067, column: 12)
!6415 = distinct !DILexicalBlock(scope: !6408, file: !374, line: 1064, column: 7)
!6416 = !DILocation(line: 1070, column: 8, scope: !6413)
!6417 = !DILocation(line: 1095, column: 45, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6400, file: !374, line: 1092, column: 4)
!6419 = !DILocation(line: 1095, column: 22, scope: !6418)
!6420 = !DILocation(line: 0, scope: !6338)
!6421 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !6422, file: !40, line: 227, type: !21)
!6422 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !40, file: !40, line: 227, type: !2236, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6423)
!6423 = !{!6421}
!6424 = !DILocation(line: 0, scope: !6422, inlinedAt: !6425)
!6425 = distinct !DILocation(line: 1106, column: 2, scope: !6325)
!6426 = !DILocation(line: 229, column: 2, scope: !6422, inlinedAt: !6425)
!6427 = !{i64 433328}
!6428 = !DILocation(line: 1108, column: 2, scope: !6325)
!6429 = distinct !DISubprogram(name: "xQueueGiveFromISR", scope: !374, file: !374, line: 1112, type: !6430, scopeLine: 1113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6432)
!6430 = !DISubroutineType(types: !6431)
!6431 = !{!176, !429, !297}
!6432 = !{!6433, !6434, !6435, !6436, !6437, !6438, !6440}
!6433 = !DILocalVariable(name: "xQueue", arg: 1, scope: !6429, file: !374, line: 1112, type: !429)
!6434 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !6429, file: !374, line: 1112, type: !297)
!6435 = !DILocalVariable(name: "xReturn", scope: !6429, file: !374, line: 1114, type: !176)
!6436 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !6429, file: !374, line: 1115, type: !149)
!6437 = !DILocalVariable(name: "pxQueue", scope: !6429, file: !374, line: 1116, type: !5498)
!6438 = !DILocalVariable(name: "uxMessagesWaiting", scope: !6439, file: !374, line: 1153, type: !2753)
!6439 = distinct !DILexicalBlock(scope: !6429, file: !374, line: 1152, column: 2)
!6440 = !DILocalVariable(name: "cTxLock", scope: !6441, file: !374, line: 1160, type: !6340)
!6441 = distinct !DILexicalBlock(scope: !6442, file: !374, line: 1159, column: 3)
!6442 = distinct !DILexicalBlock(scope: !6439, file: !374, line: 1158, column: 7)
!6443 = !DILocation(line: 0, scope: !6429)
!6444 = !DILocation(line: 1124, column: 2, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6429, file: !374, line: 1124, column: 2)
!6446 = !DILocation(line: 1124, column: 2, scope: !6429)
!6447 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6448)
!6448 = distinct !DILocation(line: 1124, column: 2, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6445, file: !374, line: 1124, column: 2)
!6450 = !DILocation(line: 0, scope: !5504, inlinedAt: !6448)
!6451 = !DILocation(line: 1124, column: 2, scope: !6449)
!6452 = !DILocation(line: 1124, column: 2, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6454, file: !374, line: 1124, column: 2)
!6454 = distinct !DILexicalBlock(scope: !6449, file: !374, line: 1124, column: 2)
!6455 = distinct !{!6455, !6456, !6456}
!6456 = !DILocation(line: 1124, column: 2, scope: !6454)
!6457 = !DILocation(line: 1128, column: 2, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6429, file: !374, line: 1128, column: 2)
!6459 = !DILocation(line: 1128, column: 2, scope: !6429)
!6460 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6461)
!6461 = distinct !DILocation(line: 1128, column: 2, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6458, file: !374, line: 1128, column: 2)
!6463 = !DILocation(line: 0, scope: !5504, inlinedAt: !6461)
!6464 = !DILocation(line: 1128, column: 2, scope: !6462)
!6465 = !DILocation(line: 1128, column: 2, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6467, file: !374, line: 1128, column: 2)
!6467 = distinct !DILexicalBlock(scope: !6462, file: !374, line: 1128, column: 2)
!6468 = distinct !{!6468, !6469, !6469}
!6469 = !DILocation(line: 1128, column: 2, scope: !6467)
!6470 = !DILocation(line: 1133, column: 2, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6429, file: !374, line: 1133, column: 2)
!6472 = !DILocation(line: 1133, column: 2, scope: !6429)
!6473 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6474)
!6474 = distinct !DILocation(line: 1133, column: 2, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6471, file: !374, line: 1133, column: 2)
!6476 = !DILocation(line: 0, scope: !5504, inlinedAt: !6474)
!6477 = !DILocation(line: 1133, column: 2, scope: !6475)
!6478 = !DILocation(line: 1133, column: 2, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6480, file: !374, line: 1133, column: 2)
!6480 = distinct !DILexicalBlock(scope: !6475, file: !374, line: 1133, column: 2)
!6481 = distinct !{!6481, !6482, !6482}
!6482 = !DILocation(line: 1133, column: 2, scope: !6480)
!6483 = !DILocation(line: 1149, column: 2, scope: !6429)
!6484 = !DILocation(line: 211, column: 2, scope: !6384, inlinedAt: !6485)
!6485 = distinct !DILocation(line: 1151, column: 27, scope: !6429)
!6486 = !DILocation(line: 0, scope: !6384, inlinedAt: !6485)
!6487 = !DILocation(line: 1153, column: 50, scope: !6439)
!6488 = !DILocation(line: 0, scope: !6439)
!6489 = !DILocation(line: 1158, column: 36, scope: !6442)
!6490 = !DILocation(line: 1158, column: 25, scope: !6442)
!6491 = !DILocation(line: 1158, column: 7, scope: !6439)
!6492 = !DILocation(line: 1160, column: 36, scope: !6441)
!6493 = !DILocation(line: 0, scope: !6441)
!6494 = !DILocation(line: 1170, column: 51, scope: !6441)
!6495 = !DILocation(line: 1170, column: 31, scope: !6441)
!6496 = !DILocation(line: 1174, column: 16, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6441, file: !374, line: 1174, column: 8)
!6498 = !DILocation(line: 1174, column: 8, scope: !6441)
!6499 = !DILocation(line: 1229, column: 10, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6501, file: !374, line: 1229, column: 10)
!6501 = distinct !DILexicalBlock(scope: !6502, file: !374, line: 1228, column: 5)
!6502 = distinct !DILexicalBlock(scope: !6497, file: !374, line: 1175, column: 4)
!6503 = !DILocation(line: 1229, column: 10, scope: !6501)
!6504 = !DILocation(line: 1231, column: 11, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6506, file: !374, line: 1231, column: 11)
!6506 = distinct !DILexicalBlock(scope: !6500, file: !374, line: 1230, column: 6)
!6507 = !DILocation(line: 1231, column: 76, scope: !6505)
!6508 = !DILocation(line: 1231, column: 11, scope: !6506)
!6509 = !DILocation(line: 1237, column: 36, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6511, file: !374, line: 1236, column: 8)
!6511 = distinct !DILexicalBlock(scope: !6512, file: !374, line: 1235, column: 12)
!6512 = distinct !DILexicalBlock(scope: !6505, file: !374, line: 1232, column: 7)
!6513 = !DILocation(line: 1238, column: 8, scope: !6510)
!6514 = !DILocation(line: 1260, column: 45, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6497, file: !374, line: 1257, column: 4)
!6516 = !DILocation(line: 1260, column: 22, scope: !6515)
!6517 = !DILocation(line: 0, scope: !6442)
!6518 = !DILocation(line: 0, scope: !6422, inlinedAt: !6519)
!6519 = distinct !DILocation(line: 1271, column: 2, scope: !6429)
!6520 = !DILocation(line: 229, column: 2, scope: !6422, inlinedAt: !6519)
!6521 = !DILocation(line: 1273, column: 2, scope: !6429)
!6522 = distinct !DISubprogram(name: "xQueueReceive", scope: !374, file: !374, line: 1277, type: !6523, scopeLine: 1278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6525)
!6523 = !DISubroutineType(types: !6524)
!6524 = !{!176, !429, !1429, !39}
!6525 = !{!6526, !6527, !6528, !6529, !6530, !6531, !6532}
!6526 = !DILocalVariable(name: "xQueue", arg: 1, scope: !6522, file: !374, line: 1277, type: !429)
!6527 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !6522, file: !374, line: 1277, type: !1429)
!6528 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !6522, file: !374, line: 1277, type: !39)
!6529 = !DILocalVariable(name: "xEntryTimeSet", scope: !6522, file: !374, line: 1279, type: !176)
!6530 = !DILocalVariable(name: "xTimeOut", scope: !6522, file: !374, line: 1280, type: !5684)
!6531 = !DILocalVariable(name: "pxQueue", scope: !6522, file: !374, line: 1281, type: !5498)
!6532 = !DILocalVariable(name: "uxMessagesWaiting", scope: !6533, file: !374, line: 1305, type: !2753)
!6533 = distinct !DILexicalBlock(scope: !6534, file: !374, line: 1304, column: 3)
!6534 = distinct !DILexicalBlock(scope: !6535, file: !374, line: 1302, column: 2)
!6535 = distinct !DILexicalBlock(scope: !6536, file: !374, line: 1301, column: 2)
!6536 = distinct !DILexicalBlock(scope: !6522, file: !374, line: 1301, column: 2)
!6537 = !DILocation(line: 0, scope: !6522)
!6538 = !DILocation(line: 1280, column: 1, scope: !6522)
!6539 = !DILocation(line: 1280, column: 11, scope: !6522)
!6540 = !DILocation(line: 1284, column: 2, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6522, file: !374, line: 1284, column: 2)
!6542 = !DILocation(line: 1284, column: 2, scope: !6522)
!6543 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6544)
!6544 = distinct !DILocation(line: 1284, column: 2, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6541, file: !374, line: 1284, column: 2)
!6546 = !DILocation(line: 0, scope: !5504, inlinedAt: !6544)
!6547 = !DILocation(line: 1284, column: 2, scope: !6545)
!6548 = !DILocation(line: 1284, column: 2, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !374, line: 1284, column: 2)
!6550 = distinct !DILexicalBlock(scope: !6545, file: !374, line: 1284, column: 2)
!6551 = distinct !{!6551, !6552, !6552}
!6552 = !DILocation(line: 1284, column: 2, scope: !6550)
!6553 = !DILocation(line: 1288, column: 2, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6522, file: !374, line: 1288, column: 2)
!6555 = !DILocation(line: 1288, column: 2, scope: !6522)
!6556 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6557)
!6557 = distinct !DILocation(line: 1288, column: 2, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6554, file: !374, line: 1288, column: 2)
!6559 = !DILocation(line: 0, scope: !5504, inlinedAt: !6557)
!6560 = !DILocation(line: 1288, column: 2, scope: !6558)
!6561 = !DILocation(line: 1288, column: 2, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6563, file: !374, line: 1288, column: 2)
!6563 = distinct !DILexicalBlock(scope: !6558, file: !374, line: 1288, column: 2)
!6564 = distinct !{!6564, !6565, !6565}
!6565 = !DILocation(line: 1288, column: 2, scope: !6563)
!6566 = !DILocation(line: 1293, column: 3, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6568, file: !374, line: 1293, column: 3)
!6568 = distinct !DILexicalBlock(scope: !6522, file: !374, line: 1292, column: 2)
!6569 = !DILocation(line: 1293, column: 3, scope: !6568)
!6570 = !DILocation(line: 1303, column: 3, scope: !6534)
!6571 = !DILocation(line: 1305, column: 51, scope: !6533)
!6572 = !DILocation(line: 0, scope: !6533)
!6573 = !DILocation(line: 1309, column: 26, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6533, file: !374, line: 1309, column: 8)
!6575 = !DILocation(line: 1309, column: 8, scope: !6533)
!6576 = !DILocation(line: 1340, column: 22, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6578, file: !374, line: 1340, column: 9)
!6578 = distinct !DILexicalBlock(scope: !6574, file: !374, line: 1339, column: 4)
!6579 = !DILocation(line: 1340, column: 9, scope: !6578)
!6580 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6581)
!6581 = distinct !DILocation(line: 1293, column: 3, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6567, file: !374, line: 1293, column: 3)
!6583 = !DILocation(line: 0, scope: !5504, inlinedAt: !6581)
!6584 = !DILocation(line: 1293, column: 3, scope: !6582)
!6585 = !DILocation(line: 1293, column: 3, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6587, file: !374, line: 1293, column: 3)
!6587 = distinct !DILexicalBlock(scope: !6582, file: !374, line: 1293, column: 3)
!6588 = distinct !{!6588, !6589, !6589}
!6589 = !DILocation(line: 1293, column: 3, scope: !6587)
!6590 = !DILocation(line: 1312, column: 5, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6574, file: !374, line: 1310, column: 4)
!6592 = !DILocation(line: 1314, column: 52, scope: !6591)
!6593 = !DILocation(line: 1314, column: 32, scope: !6591)
!6594 = !DILocation(line: 1319, column: 9, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6591, file: !374, line: 1319, column: 9)
!6596 = !DILocation(line: 1319, column: 9, scope: !6591)
!6597 = !DILocation(line: 1321, column: 10, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6599, file: !374, line: 1321, column: 10)
!6599 = distinct !DILexicalBlock(scope: !6595, file: !374, line: 1320, column: 5)
!6600 = !DILocation(line: 1321, column: 72, scope: !6598)
!6601 = !DILocation(line: 1321, column: 10, scope: !6599)
!6602 = !DILocation(line: 1323, column: 7, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6604, file: !374, line: 1323, column: 7)
!6604 = distinct !DILexicalBlock(scope: !6598, file: !374, line: 1322, column: 6)
!6605 = !{i64 2148123970}
!6606 = !{i64 2148124021}
!6607 = !DILocation(line: 1324, column: 6, scope: !6604)
!6608 = !DILocation(line: 1352, column: 6, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6610, file: !374, line: 1349, column: 5)
!6610 = distinct !DILexicalBlock(scope: !6577, file: !374, line: 1348, column: 14)
!6611 = !DILocation(line: 1354, column: 5, scope: !6609)
!6612 = !DILocation(line: 1362, column: 3, scope: !6534)
!6613 = !DILocation(line: 1367, column: 3, scope: !6534)
!6614 = !DILocation(line: 1368, column: 3, scope: !6534)
!6615 = !DILocation(line: 1368, column: 3, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6617, file: !374, line: 1368, column: 3)
!6617 = distinct !DILexicalBlock(scope: !6534, file: !374, line: 1368, column: 3)
!6618 = !DILocation(line: 1368, column: 3, scope: !6617)
!6619 = !DILocation(line: 1368, column: 3, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6616, file: !374, line: 1368, column: 3)
!6621 = !DILocation(line: 1368, column: 3, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6617, file: !374, line: 1368, column: 3)
!6623 = !DILocation(line: 1368, column: 3, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6622, file: !374, line: 1368, column: 3)
!6625 = !DILocation(line: 1371, column: 7, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6534, file: !374, line: 1371, column: 7)
!6627 = !DILocation(line: 1371, column: 56, scope: !6626)
!6628 = !DILocation(line: 1371, column: 7, scope: !6534)
!6629 = !DILocation(line: 1375, column: 8, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6631, file: !374, line: 1375, column: 8)
!6631 = distinct !DILexicalBlock(scope: !6626, file: !374, line: 1372, column: 3)
!6632 = !DILocation(line: 1375, column: 35, scope: !6630)
!6633 = !DILocation(line: 1375, column: 8, scope: !6631)
!6634 = !DILocation(line: 1378, column: 66, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6630, file: !374, line: 1376, column: 4)
!6636 = !DILocation(line: 1378, column: 5, scope: !6635)
!6637 = !DILocation(line: 1379, column: 5, scope: !6635)
!6638 = !DILocation(line: 1380, column: 9, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6635, file: !374, line: 1380, column: 9)
!6640 = !DILocation(line: 1380, column: 26, scope: !6639)
!6641 = !DILocation(line: 1380, column: 9, scope: !6635)
!6642 = !DILocation(line: 1382, column: 6, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6644, file: !374, line: 1382, column: 6)
!6644 = distinct !DILexicalBlock(scope: !6639, file: !374, line: 1381, column: 5)
!6645 = !{i64 2148125285}
!6646 = !{i64 2148125336}
!6647 = !DILocation(line: 1383, column: 5, scope: !6644)
!6648 = !DILocation(line: 1393, column: 5, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6630, file: !374, line: 1390, column: 4)
!6650 = !DILocation(line: 1394, column: 14, scope: !6649)
!6651 = !DILocation(line: 1401, column: 4, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6626, file: !374, line: 1398, column: 3)
!6653 = !DILocation(line: 1402, column: 13, scope: !6652)
!6654 = !DILocation(line: 1404, column: 8, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6652, file: !374, line: 1404, column: 8)
!6656 = !DILocation(line: 1404, column: 35, scope: !6655)
!6657 = !DILocation(line: 1404, column: 8, scope: !6652)
!6658 = distinct !{!6658, !6659, !6660}
!6659 = !DILocation(line: 1301, column: 2, scope: !6536)
!6660 = !DILocation(line: 1414, column: 2, scope: !6536)
!6661 = !DILocation(line: 1340, column: 9, scope: !6577)
!6662 = !DILocation(line: 0, scope: !6574)
!6663 = !DILocation(line: 1415, column: 1, scope: !6522)
!6664 = !DILocation(line: 0, scope: !6534)
!6665 = distinct !DISubprogram(name: "prvCopyDataFromQueue", scope: !374, file: !374, line: 2153, type: !6666, scopeLine: 2154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6668)
!6666 = !DISubroutineType(types: !6667)
!6667 = !{null, !5498, !1429}
!6668 = !{!6669, !6670}
!6669 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !6665, file: !374, line: 2153, type: !5498)
!6670 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !6665, file: !374, line: 2153, type: !1429)
!6671 = !DILocation(line: 0, scope: !6665)
!6672 = !DILocation(line: 2155, column: 15, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6665, file: !374, line: 2155, column: 6)
!6674 = !DILocation(line: 2155, column: 26, scope: !6673)
!6675 = !DILocation(line: 2155, column: 6, scope: !6665)
!6676 = !DILocation(line: 2157, column: 21, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6673, file: !374, line: 2156, column: 2)
!6678 = !DILocation(line: 2157, column: 32, scope: !6677)
!6679 = !DILocation(line: 2158, column: 57, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6677, file: !374, line: 2158, column: 7)
!6681 = !DILocation(line: 2158, column: 36, scope: !6680)
!6682 = !DILocation(line: 2158, column: 7, scope: !6677)
!6683 = !DILocation(line: 2160, column: 44, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6680, file: !374, line: 2159, column: 3)
!6685 = !DILocation(line: 2160, column: 33, scope: !6684)
!6686 = !DILocation(line: 2161, column: 3, scope: !6684)
!6687 = !DILocation(line: 2166, column: 70, scope: !6677)
!6688 = !DILocation(line: 2166, column: 12, scope: !6677)
!6689 = !DILocation(line: 2167, column: 2, scope: !6677)
!6690 = !DILocation(line: 2168, column: 1, scope: !6665)
!6691 = distinct !DISubprogram(name: "xQueuePeek", scope: !374, file: !374, line: 1636, type: !6523, scopeLine: 1637, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6692)
!6692 = !{!6693, !6694, !6695, !6696, !6697, !6698, !6699, !6700}
!6693 = !DILocalVariable(name: "xQueue", arg: 1, scope: !6691, file: !374, line: 1636, type: !429)
!6694 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !6691, file: !374, line: 1636, type: !1429)
!6695 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !6691, file: !374, line: 1636, type: !39)
!6696 = !DILocalVariable(name: "xEntryTimeSet", scope: !6691, file: !374, line: 1638, type: !176)
!6697 = !DILocalVariable(name: "xTimeOut", scope: !6691, file: !374, line: 1639, type: !5684)
!6698 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !6691, file: !374, line: 1640, type: !379)
!6699 = !DILocalVariable(name: "pxQueue", scope: !6691, file: !374, line: 1641, type: !5498)
!6700 = !DILocalVariable(name: "uxMessagesWaiting", scope: !6701, file: !374, line: 1665, type: !2753)
!6701 = distinct !DILexicalBlock(scope: !6702, file: !374, line: 1664, column: 3)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !374, line: 1662, column: 2)
!6703 = distinct !DILexicalBlock(scope: !6704, file: !374, line: 1661, column: 2)
!6704 = distinct !DILexicalBlock(scope: !6691, file: !374, line: 1661, column: 2)
!6705 = !DILocation(line: 0, scope: !6691)
!6706 = !DILocation(line: 1639, column: 1, scope: !6691)
!6707 = !DILocation(line: 1639, column: 11, scope: !6691)
!6708 = !DILocation(line: 1644, column: 2, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6691, file: !374, line: 1644, column: 2)
!6710 = !DILocation(line: 1644, column: 2, scope: !6691)
!6711 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6712)
!6712 = distinct !DILocation(line: 1644, column: 2, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6709, file: !374, line: 1644, column: 2)
!6714 = !DILocation(line: 0, scope: !5504, inlinedAt: !6712)
!6715 = !DILocation(line: 1644, column: 2, scope: !6713)
!6716 = !DILocation(line: 1644, column: 2, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6718, file: !374, line: 1644, column: 2)
!6718 = distinct !DILexicalBlock(scope: !6713, file: !374, line: 1644, column: 2)
!6719 = distinct !{!6719, !6720, !6720}
!6720 = !DILocation(line: 1644, column: 2, scope: !6718)
!6721 = !DILocation(line: 1648, column: 2, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6691, file: !374, line: 1648, column: 2)
!6723 = !DILocation(line: 1648, column: 2, scope: !6691)
!6724 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6725)
!6725 = distinct !DILocation(line: 1648, column: 2, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6722, file: !374, line: 1648, column: 2)
!6727 = !DILocation(line: 0, scope: !5504, inlinedAt: !6725)
!6728 = !DILocation(line: 1648, column: 2, scope: !6726)
!6729 = !DILocation(line: 1648, column: 2, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !374, line: 1648, column: 2)
!6731 = distinct !DILexicalBlock(scope: !6726, file: !374, line: 1648, column: 2)
!6732 = distinct !{!6732, !6733, !6733}
!6733 = !DILocation(line: 1648, column: 2, scope: !6731)
!6734 = !DILocation(line: 1653, column: 3, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !374, line: 1653, column: 3)
!6736 = distinct !DILexicalBlock(scope: !6691, file: !374, line: 1652, column: 2)
!6737 = !DILocation(line: 1653, column: 3, scope: !6736)
!6738 = !DILocation(line: 1663, column: 3, scope: !6702)
!6739 = !DILocation(line: 1665, column: 51, scope: !6701)
!6740 = !DILocation(line: 0, scope: !6701)
!6741 = !DILocation(line: 1669, column: 26, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6701, file: !374, line: 1669, column: 8)
!6743 = !DILocation(line: 1669, column: 8, scope: !6701)
!6744 = !DILocation(line: 1706, column: 22, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !374, line: 1706, column: 9)
!6746 = distinct !DILexicalBlock(scope: !6742, file: !374, line: 1705, column: 4)
!6747 = !DILocation(line: 1706, column: 9, scope: !6746)
!6748 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6749)
!6749 = distinct !DILocation(line: 1653, column: 3, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6735, file: !374, line: 1653, column: 3)
!6751 = !DILocation(line: 0, scope: !5504, inlinedAt: !6749)
!6752 = !DILocation(line: 1653, column: 3, scope: !6750)
!6753 = !DILocation(line: 1653, column: 3, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6755, file: !374, line: 1653, column: 3)
!6755 = distinct !DILexicalBlock(scope: !6750, file: !374, line: 1653, column: 3)
!6756 = distinct !{!6756, !6757, !6757}
!6757 = !DILocation(line: 1653, column: 3, scope: !6755)
!6758 = !DILocation(line: 1674, column: 48, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6742, file: !374, line: 1670, column: 4)
!6760 = !DILocation(line: 1676, column: 5, scope: !6759)
!6761 = !DILocation(line: 1680, column: 34, scope: !6759)
!6762 = !DILocation(line: 1684, column: 9, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6759, file: !374, line: 1684, column: 9)
!6764 = !DILocation(line: 1684, column: 9, scope: !6759)
!6765 = !DILocation(line: 1686, column: 10, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !374, line: 1686, column: 10)
!6767 = distinct !DILexicalBlock(scope: !6763, file: !374, line: 1685, column: 5)
!6768 = !DILocation(line: 1686, column: 75, scope: !6766)
!6769 = !DILocation(line: 1686, column: 10, scope: !6767)
!6770 = !DILocation(line: 1689, column: 7, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !374, line: 1689, column: 7)
!6772 = distinct !DILexicalBlock(scope: !6766, file: !374, line: 1687, column: 6)
!6773 = !{i64 2148129619}
!6774 = !{i64 2148129670}
!6775 = !DILocation(line: 1690, column: 6, scope: !6772)
!6776 = !DILocation(line: 1719, column: 6, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !374, line: 1715, column: 5)
!6778 = distinct !DILexicalBlock(scope: !6745, file: !374, line: 1714, column: 14)
!6779 = !DILocation(line: 1721, column: 5, scope: !6777)
!6780 = !DILocation(line: 1729, column: 3, scope: !6702)
!6781 = !DILocation(line: 1734, column: 3, scope: !6702)
!6782 = !DILocation(line: 1735, column: 3, scope: !6702)
!6783 = !DILocation(line: 1735, column: 3, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !374, line: 1735, column: 3)
!6785 = distinct !DILexicalBlock(scope: !6702, file: !374, line: 1735, column: 3)
!6786 = !DILocation(line: 1735, column: 3, scope: !6785)
!6787 = !DILocation(line: 1735, column: 3, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6784, file: !374, line: 1735, column: 3)
!6789 = !DILocation(line: 1735, column: 3, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6785, file: !374, line: 1735, column: 3)
!6791 = !DILocation(line: 1735, column: 3, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6790, file: !374, line: 1735, column: 3)
!6793 = !DILocation(line: 1738, column: 7, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6702, file: !374, line: 1738, column: 7)
!6795 = !DILocation(line: 1738, column: 56, scope: !6794)
!6796 = !DILocation(line: 1738, column: 7, scope: !6702)
!6797 = !DILocation(line: 1742, column: 8, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !374, line: 1742, column: 8)
!6799 = distinct !DILexicalBlock(scope: !6794, file: !374, line: 1739, column: 3)
!6800 = !DILocation(line: 1742, column: 35, scope: !6798)
!6801 = !DILocation(line: 1742, column: 8, scope: !6799)
!6802 = !DILocation(line: 1745, column: 66, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6798, file: !374, line: 1743, column: 4)
!6804 = !DILocation(line: 1745, column: 5, scope: !6803)
!6805 = !DILocation(line: 1746, column: 5, scope: !6803)
!6806 = !DILocation(line: 1747, column: 9, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6803, file: !374, line: 1747, column: 9)
!6808 = !DILocation(line: 1747, column: 26, scope: !6807)
!6809 = !DILocation(line: 1747, column: 9, scope: !6803)
!6810 = !DILocation(line: 1749, column: 6, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !374, line: 1749, column: 6)
!6812 = distinct !DILexicalBlock(scope: !6807, file: !374, line: 1748, column: 5)
!6813 = !{i64 2148130934}
!6814 = !{i64 2148130985}
!6815 = !DILocation(line: 1750, column: 5, scope: !6812)
!6816 = !DILocation(line: 1760, column: 5, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6798, file: !374, line: 1757, column: 4)
!6818 = !DILocation(line: 1761, column: 14, scope: !6817)
!6819 = !DILocation(line: 1768, column: 4, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6794, file: !374, line: 1765, column: 3)
!6821 = !DILocation(line: 1769, column: 13, scope: !6820)
!6822 = !DILocation(line: 1771, column: 8, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6820, file: !374, line: 1771, column: 8)
!6824 = !DILocation(line: 1771, column: 35, scope: !6823)
!6825 = !DILocation(line: 1771, column: 8, scope: !6820)
!6826 = distinct !{!6826, !6827, !6828}
!6827 = !DILocation(line: 1661, column: 2, scope: !6704)
!6828 = !DILocation(line: 1781, column: 2, scope: !6704)
!6829 = !DILocation(line: 1706, column: 9, scope: !6745)
!6830 = !DILocation(line: 0, scope: !6742)
!6831 = !DILocation(line: 1782, column: 1, scope: !6691)
!6832 = !DILocation(line: 0, scope: !6702)
!6833 = distinct !DISubprogram(name: "xQueueReceiveFromISR", scope: !374, file: !374, line: 1785, type: !6834, scopeLine: 1786, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6836)
!6834 = !DISubroutineType(types: !6835)
!6835 = !{!176, !429, !1429, !297}
!6836 = !{!6837, !6838, !6839, !6840, !6841, !6842, !6843, !6845}
!6837 = !DILocalVariable(name: "xQueue", arg: 1, scope: !6833, file: !374, line: 1785, type: !429)
!6838 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !6833, file: !374, line: 1785, type: !1429)
!6839 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !6833, file: !374, line: 1785, type: !297)
!6840 = !DILocalVariable(name: "xReturn", scope: !6833, file: !374, line: 1787, type: !176)
!6841 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !6833, file: !374, line: 1788, type: !149)
!6842 = !DILocalVariable(name: "pxQueue", scope: !6833, file: !374, line: 1789, type: !5498)
!6843 = !DILocalVariable(name: "uxMessagesWaiting", scope: !6844, file: !374, line: 1812, type: !2753)
!6844 = distinct !DILexicalBlock(scope: !6833, file: !374, line: 1811, column: 2)
!6845 = !DILocalVariable(name: "cRxLock", scope: !6846, file: !374, line: 1817, type: !6340)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !374, line: 1816, column: 3)
!6847 = distinct !DILexicalBlock(scope: !6844, file: !374, line: 1815, column: 7)
!6848 = !DILocation(line: 0, scope: !6833)
!6849 = !DILocation(line: 1791, column: 2, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6833, file: !374, line: 1791, column: 2)
!6851 = !DILocation(line: 1791, column: 2, scope: !6833)
!6852 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6853)
!6853 = distinct !DILocation(line: 1791, column: 2, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6850, file: !374, line: 1791, column: 2)
!6855 = !DILocation(line: 0, scope: !5504, inlinedAt: !6853)
!6856 = !DILocation(line: 1791, column: 2, scope: !6854)
!6857 = !DILocation(line: 1791, column: 2, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6859, file: !374, line: 1791, column: 2)
!6859 = distinct !DILexicalBlock(scope: !6854, file: !374, line: 1791, column: 2)
!6860 = distinct !{!6860, !6861, !6861}
!6861 = !DILocation(line: 1791, column: 2, scope: !6859)
!6862 = !DILocation(line: 1792, column: 2, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6833, file: !374, line: 1792, column: 2)
!6864 = !DILocation(line: 1792, column: 2, scope: !6833)
!6865 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6866)
!6866 = distinct !DILocation(line: 1792, column: 2, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6863, file: !374, line: 1792, column: 2)
!6868 = !DILocation(line: 0, scope: !5504, inlinedAt: !6866)
!6869 = !DILocation(line: 1792, column: 2, scope: !6867)
!6870 = !DILocation(line: 1792, column: 2, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !374, line: 1792, column: 2)
!6872 = distinct !DILexicalBlock(scope: !6867, file: !374, line: 1792, column: 2)
!6873 = distinct !{!6873, !6874, !6874}
!6874 = !DILocation(line: 1792, column: 2, scope: !6872)
!6875 = !DILocation(line: 1808, column: 2, scope: !6833)
!6876 = !DILocation(line: 211, column: 2, scope: !6384, inlinedAt: !6877)
!6877 = distinct !DILocation(line: 1810, column: 27, scope: !6833)
!6878 = !DILocation(line: 0, scope: !6384, inlinedAt: !6877)
!6879 = !DILocation(line: 1812, column: 50, scope: !6844)
!6880 = !DILocation(line: 0, scope: !6844)
!6881 = !DILocation(line: 1815, column: 25, scope: !6847)
!6882 = !DILocation(line: 1815, column: 7, scope: !6844)
!6883 = !DILocation(line: 1817, column: 36, scope: !6846)
!6884 = !DILocation(line: 0, scope: !6846)
!6885 = !DILocation(line: 1821, column: 4, scope: !6846)
!6886 = !DILocation(line: 1822, column: 51, scope: !6846)
!6887 = !DILocation(line: 1822, column: 31, scope: !6846)
!6888 = !DILocation(line: 1828, column: 16, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6846, file: !374, line: 1828, column: 8)
!6890 = !DILocation(line: 1828, column: 8, scope: !6846)
!6891 = !DILocation(line: 1830, column: 9, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !374, line: 1830, column: 9)
!6893 = distinct !DILexicalBlock(scope: !6889, file: !374, line: 1829, column: 4)
!6894 = !DILocation(line: 1830, column: 9, scope: !6893)
!6895 = !DILocation(line: 1832, column: 10, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6897, file: !374, line: 1832, column: 10)
!6897 = distinct !DILexicalBlock(scope: !6892, file: !374, line: 1831, column: 5)
!6898 = !DILocation(line: 1832, column: 72, scope: !6896)
!6899 = !DILocation(line: 1832, column: 10, scope: !6897)
!6900 = !DILocation(line: 1838, column: 35, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !374, line: 1837, column: 7)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !374, line: 1836, column: 11)
!6903 = distinct !DILexicalBlock(scope: !6896, file: !374, line: 1833, column: 6)
!6904 = !DILocation(line: 1839, column: 7, scope: !6901)
!6905 = !DILocation(line: 1859, column: 45, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6889, file: !374, line: 1856, column: 4)
!6907 = !DILocation(line: 1859, column: 22, scope: !6906)
!6908 = !DILocation(line: 0, scope: !6847)
!6909 = !DILocation(line: 0, scope: !6422, inlinedAt: !6910)
!6910 = distinct !DILocation(line: 1870, column: 2, scope: !6833)
!6911 = !DILocation(line: 229, column: 2, scope: !6422, inlinedAt: !6910)
!6912 = !DILocation(line: 1872, column: 2, scope: !6833)
!6913 = distinct !DISubprogram(name: "xQueuePeekFromISR", scope: !374, file: !374, line: 1876, type: !6914, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6916)
!6914 = !DISubroutineType(types: !6915)
!6915 = !{!176, !429, !1429}
!6916 = !{!6917, !6918, !6919, !6920, !6921, !6922}
!6917 = !DILocalVariable(name: "xQueue", arg: 1, scope: !6913, file: !374, line: 1876, type: !429)
!6918 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !6913, file: !374, line: 1876, type: !1429)
!6919 = !DILocalVariable(name: "xReturn", scope: !6913, file: !374, line: 1878, type: !176)
!6920 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !6913, file: !374, line: 1879, type: !149)
!6921 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !6913, file: !374, line: 1880, type: !379)
!6922 = !DILocalVariable(name: "pxQueue", scope: !6913, file: !374, line: 1881, type: !5498)
!6923 = !DILocation(line: 0, scope: !6913)
!6924 = !DILocation(line: 1883, column: 2, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6913, file: !374, line: 1883, column: 2)
!6926 = !DILocation(line: 1883, column: 2, scope: !6913)
!6927 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6928)
!6928 = distinct !DILocation(line: 1883, column: 2, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6925, file: !374, line: 1883, column: 2)
!6930 = !DILocation(line: 0, scope: !5504, inlinedAt: !6928)
!6931 = !DILocation(line: 1883, column: 2, scope: !6929)
!6932 = !DILocation(line: 1883, column: 2, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !374, line: 1883, column: 2)
!6934 = distinct !DILexicalBlock(scope: !6929, file: !374, line: 1883, column: 2)
!6935 = distinct !{!6935, !6936, !6936}
!6936 = !DILocation(line: 1883, column: 2, scope: !6934)
!6937 = !DILocation(line: 1884, column: 2, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6913, file: !374, line: 1884, column: 2)
!6939 = !DILocation(line: 1884, column: 2, scope: !6913)
!6940 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6941)
!6941 = distinct !DILocation(line: 1884, column: 2, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6938, file: !374, line: 1884, column: 2)
!6943 = !DILocation(line: 0, scope: !5504, inlinedAt: !6941)
!6944 = !DILocation(line: 1884, column: 2, scope: !6942)
!6945 = !DILocation(line: 1884, column: 2, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !374, line: 1884, column: 2)
!6947 = distinct !DILexicalBlock(scope: !6942, file: !374, line: 1884, column: 2)
!6948 = distinct !{!6948, !6949, !6949}
!6949 = !DILocation(line: 1884, column: 2, scope: !6947)
!6950 = !DILocation(line: 1885, column: 2, scope: !6913)
!6951 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6952)
!6952 = distinct !DILocation(line: 1885, column: 2, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6954, file: !374, line: 1885, column: 2)
!6954 = distinct !DILexicalBlock(scope: !6913, file: !374, line: 1885, column: 2)
!6955 = !DILocation(line: 0, scope: !5504, inlinedAt: !6952)
!6956 = !DILocation(line: 1885, column: 2, scope: !6953)
!6957 = !DILocation(line: 1885, column: 2, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !374, line: 1885, column: 2)
!6959 = distinct !DILexicalBlock(scope: !6953, file: !374, line: 1885, column: 2)
!6960 = distinct !{!6960, !6961, !6961}
!6961 = !DILocation(line: 1885, column: 2, scope: !6959)
!6962 = !DILocation(line: 1901, column: 2, scope: !6913)
!6963 = !DILocation(line: 211, column: 2, scope: !6384, inlinedAt: !6964)
!6964 = distinct !DILocation(line: 1903, column: 27, scope: !6913)
!6965 = !DILocation(line: 0, scope: !6384, inlinedAt: !6964)
!6966 = !DILocation(line: 1906, column: 16, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !374, line: 1906, column: 7)
!6968 = distinct !DILexicalBlock(scope: !6913, file: !374, line: 1904, column: 2)
!6969 = !DILocation(line: 1906, column: 34, scope: !6967)
!6970 = !DILocation(line: 1906, column: 7, scope: !6968)
!6971 = !DILocation(line: 1912, column: 47, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6967, file: !374, line: 1907, column: 3)
!6973 = !DILocation(line: 1913, column: 4, scope: !6972)
!6974 = !DILocation(line: 1914, column: 33, scope: !6972)
!6975 = !DILocation(line: 1917, column: 3, scope: !6972)
!6976 = !DILocation(line: 0, scope: !6967)
!6977 = !DILocation(line: 0, scope: !6422, inlinedAt: !6978)
!6978 = distinct !DILocation(line: 1924, column: 2, scope: !6913)
!6979 = !DILocation(line: 229, column: 2, scope: !6422, inlinedAt: !6978)
!6980 = !DILocation(line: 1926, column: 2, scope: !6913)
!6981 = distinct !DISubprogram(name: "uxQueueMessagesWaiting", scope: !374, file: !374, line: 1930, type: !6982, scopeLine: 1931, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !6985)
!6982 = !DISubroutineType(types: !6983)
!6983 = !{!149, !6984}
!6984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !429)
!6985 = !{!6986, !6987}
!6986 = !DILocalVariable(name: "xQueue", arg: 1, scope: !6981, file: !374, line: 1930, type: !6984)
!6987 = !DILocalVariable(name: "uxReturn", scope: !6981, file: !374, line: 1932, type: !149)
!6988 = !DILocation(line: 0, scope: !6981)
!6989 = !DILocation(line: 1934, column: 2, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6981, file: !374, line: 1934, column: 2)
!6991 = !DILocation(line: 1934, column: 2, scope: !6981)
!6992 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !6993)
!6993 = distinct !DILocation(line: 1934, column: 2, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6990, file: !374, line: 1934, column: 2)
!6995 = !DILocation(line: 0, scope: !5504, inlinedAt: !6993)
!6996 = !DILocation(line: 1934, column: 2, scope: !6994)
!6997 = !DILocation(line: 1934, column: 2, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !374, line: 1934, column: 2)
!6999 = distinct !DILexicalBlock(scope: !6994, file: !374, line: 1934, column: 2)
!7000 = distinct !{!7000, !7001, !7001}
!7001 = !DILocation(line: 1934, column: 2, scope: !6999)
!7002 = !DILocation(line: 1936, column: 2, scope: !6981)
!7003 = !DILocation(line: 1938, column: 40, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6981, file: !374, line: 1937, column: 2)
!7005 = !DILocation(line: 1940, column: 2, scope: !6981)
!7006 = !DILocation(line: 1942, column: 2, scope: !6981)
!7007 = distinct !DISubprogram(name: "uxQueueSpacesAvailable", scope: !374, file: !374, line: 1946, type: !6982, scopeLine: 1947, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !7008)
!7008 = !{!7009, !7010, !7011}
!7009 = !DILocalVariable(name: "xQueue", arg: 1, scope: !7007, file: !374, line: 1946, type: !6984)
!7010 = !DILocalVariable(name: "uxReturn", scope: !7007, file: !374, line: 1948, type: !149)
!7011 = !DILocalVariable(name: "pxQueue", scope: !7007, file: !374, line: 1949, type: !5498)
!7012 = !DILocation(line: 0, scope: !7007)
!7013 = !DILocation(line: 1951, column: 2, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7007, file: !374, line: 1951, column: 2)
!7015 = !DILocation(line: 1951, column: 2, scope: !7007)
!7016 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !7017)
!7017 = distinct !DILocation(line: 1951, column: 2, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7014, file: !374, line: 1951, column: 2)
!7019 = !DILocation(line: 0, scope: !5504, inlinedAt: !7017)
!7020 = !DILocation(line: 1951, column: 2, scope: !7018)
!7021 = !DILocation(line: 1951, column: 2, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7023, file: !374, line: 1951, column: 2)
!7023 = distinct !DILexicalBlock(scope: !7018, file: !374, line: 1951, column: 2)
!7024 = distinct !{!7024, !7025, !7025}
!7025 = !DILocation(line: 1951, column: 2, scope: !7023)
!7026 = !DILocation(line: 1953, column: 2, scope: !7007)
!7027 = !DILocation(line: 1955, column: 23, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7007, file: !374, line: 1954, column: 2)
!7029 = !DILocation(line: 1955, column: 43, scope: !7028)
!7030 = !DILocation(line: 1955, column: 32, scope: !7028)
!7031 = !DILocation(line: 1957, column: 2, scope: !7007)
!7032 = !DILocation(line: 1959, column: 2, scope: !7007)
!7033 = distinct !DISubprogram(name: "uxQueueMessagesWaitingFromISR", scope: !374, file: !374, line: 1963, type: !6982, scopeLine: 1964, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !7034)
!7034 = !{!7035, !7036, !7037}
!7035 = !DILocalVariable(name: "xQueue", arg: 1, scope: !7033, file: !374, line: 1963, type: !6984)
!7036 = !DILocalVariable(name: "uxReturn", scope: !7033, file: !374, line: 1965, type: !149)
!7037 = !DILocalVariable(name: "pxQueue", scope: !7033, file: !374, line: 1966, type: !5498)
!7038 = !DILocation(line: 0, scope: !7033)
!7039 = !DILocation(line: 1968, column: 2, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7033, file: !374, line: 1968, column: 2)
!7041 = !DILocation(line: 1968, column: 2, scope: !7033)
!7042 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !7043)
!7043 = distinct !DILocation(line: 1968, column: 2, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7040, file: !374, line: 1968, column: 2)
!7045 = !DILocation(line: 0, scope: !5504, inlinedAt: !7043)
!7046 = !DILocation(line: 1968, column: 2, scope: !7044)
!7047 = !DILocation(line: 1968, column: 2, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !374, line: 1968, column: 2)
!7049 = distinct !DILexicalBlock(scope: !7044, file: !374, line: 1968, column: 2)
!7050 = distinct !{!7050, !7051, !7051}
!7051 = !DILocation(line: 1968, column: 2, scope: !7049)
!7052 = !DILocation(line: 1969, column: 22, scope: !7033)
!7053 = !DILocation(line: 1971, column: 2, scope: !7033)
!7054 = distinct !DISubprogram(name: "vQueueDelete", scope: !374, file: !374, line: 1975, type: !7055, scopeLine: 1976, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !7057)
!7055 = !DISubroutineType(types: !7056)
!7056 = !{null, !429}
!7057 = !{!7058, !7059}
!7058 = !DILocalVariable(name: "xQueue", arg: 1, scope: !7054, file: !374, line: 1975, type: !429)
!7059 = !DILocalVariable(name: "pxQueue", scope: !7054, file: !374, line: 1977, type: !5498)
!7060 = !DILocation(line: 0, scope: !7054)
!7061 = !DILocation(line: 1979, column: 2, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7054, file: !374, line: 1979, column: 2)
!7063 = !DILocation(line: 1979, column: 2, scope: !7054)
!7064 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !7065)
!7065 = distinct !DILocation(line: 1979, column: 2, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7062, file: !374, line: 1979, column: 2)
!7067 = !DILocation(line: 0, scope: !5504, inlinedAt: !7065)
!7068 = !DILocation(line: 1979, column: 2, scope: !7066)
!7069 = !DILocation(line: 1979, column: 2, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !374, line: 1979, column: 2)
!7071 = distinct !DILexicalBlock(scope: !7066, file: !374, line: 1979, column: 2)
!7072 = distinct !{!7072, !7073, !7073}
!7073 = !DILocation(line: 1979, column: 2, scope: !7071)
!7074 = !DILocation(line: 1984, column: 3, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7054, file: !374, line: 1983, column: 2)
!7076 = !DILocation(line: 1992, column: 14, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7054, file: !374, line: 1989, column: 2)
!7078 = !DILocation(line: 1992, column: 3, scope: !7077)
!7079 = !DILocation(line: 2014, column: 1, scope: !7054)
!7080 = distinct !DISubprogram(name: "vQueueUnregisterQueue", scope: !374, file: !374, line: 2705, type: !7055, scopeLine: 2706, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !7081)
!7081 = !{!7082, !7083}
!7082 = !DILocalVariable(name: "xQueue", arg: 1, scope: !7080, file: !374, line: 2705, type: !429)
!7083 = !DILocalVariable(name: "ux", scope: !7080, file: !374, line: 2707, type: !149)
!7084 = !DILocation(line: 0, scope: !7080)
!7085 = !DILocation(line: 2711, column: 3, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7080, file: !374, line: 2711, column: 3)
!7087 = !DILocation(line: 2713, column: 29, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7089, file: !374, line: 2713, column: 8)
!7089 = distinct !DILexicalBlock(scope: !7090, file: !374, line: 2712, column: 3)
!7090 = distinct !DILexicalBlock(scope: !7086, file: !374, line: 2711, column: 3)
!7091 = !{!7092, !1015, i64 4}
!7092 = !{!"QUEUE_REGISTRY_ITEM", !1015, i64 0, !1015, i64 4}
!7093 = !DILocation(line: 2713, column: 37, scope: !7088)
!7094 = !DILocation(line: 2713, column: 8, scope: !7089)
!7095 = !DILocation(line: 2716, column: 26, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7088, file: !374, line: 2714, column: 4)
!7097 = !DILocation(line: 2716, column: 38, scope: !7096)
!7098 = !{!7092, !1015, i64 0}
!7099 = !DILocation(line: 2721, column: 34, scope: !7096)
!7100 = !DILocation(line: 2722, column: 5, scope: !7096)
!7101 = !DILocation(line: 2711, column: 83, scope: !7090)
!7102 = !DILocation(line: 2711, column: 36, scope: !7090)
!7103 = distinct !{!7103, !7085, !7104, !1525}
!7104 = !DILocation(line: 2728, column: 3, scope: !7086)
!7105 = !DILocation(line: 2730, column: 2, scope: !7080)
!7106 = distinct !DISubprogram(name: "uxQueueGetQueueNumber", scope: !374, file: !374, line: 2019, type: !7107, scopeLine: 2020, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !7109)
!7107 = !DISubroutineType(types: !7108)
!7108 = !{!149, !429}
!7109 = !{!7110}
!7110 = !DILocalVariable(name: "xQueue", arg: 1, scope: !7106, file: !374, line: 2019, type: !429)
!7111 = !DILocation(line: 0, scope: !7106)
!7112 = !DILocation(line: 2021, column: 36, scope: !7106)
!7113 = !{!5521, !1023, i64 72}
!7114 = !DILocation(line: 2021, column: 3, scope: !7106)
!7115 = distinct !DISubprogram(name: "vQueueSetQueueNumber", scope: !374, file: !374, line: 2029, type: !7116, scopeLine: 2030, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !7118)
!7116 = !DISubroutineType(types: !7117)
!7117 = !{null, !429, !149}
!7118 = !{!7119, !7120}
!7119 = !DILocalVariable(name: "xQueue", arg: 1, scope: !7115, file: !374, line: 2029, type: !429)
!7120 = !DILocalVariable(name: "uxQueueNumber", arg: 2, scope: !7115, file: !374, line: 2029, type: !149)
!7121 = !DILocation(line: 0, scope: !7115)
!7122 = !DILocation(line: 2031, column: 29, scope: !7115)
!7123 = !DILocation(line: 2031, column: 43, scope: !7115)
!7124 = !DILocation(line: 2032, column: 2, scope: !7115)
!7125 = distinct !DISubprogram(name: "ucQueueGetQueueType", scope: !374, file: !374, line: 2039, type: !7126, scopeLine: 2040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !7128)
!7126 = !DISubroutineType(types: !7127)
!7127 = !{!85, !429}
!7128 = !{!7129}
!7129 = !DILocalVariable(name: "xQueue", arg: 1, scope: !7125, file: !374, line: 2039, type: !429)
!7130 = !DILocation(line: 0, scope: !7125)
!7131 = !DILocation(line: 2041, column: 36, scope: !7125)
!7132 = !DILocation(line: 2041, column: 3, scope: !7125)
!7133 = distinct !DISubprogram(name: "xQueueIsQueueEmptyFromISR", scope: !374, file: !374, line: 2312, type: !7134, scopeLine: 2313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !7136)
!7134 = !DISubroutineType(types: !7135)
!7135 = !{!176, !6984}
!7136 = !{!7137, !7138, !7139}
!7137 = !DILocalVariable(name: "xQueue", arg: 1, scope: !7133, file: !374, line: 2312, type: !6984)
!7138 = !DILocalVariable(name: "xReturn", scope: !7133, file: !374, line: 2314, type: !176)
!7139 = !DILocalVariable(name: "pxQueue", scope: !7133, file: !374, line: 2315, type: !5498)
!7140 = !DILocation(line: 0, scope: !7133)
!7141 = !DILocation(line: 2317, column: 2, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7133, file: !374, line: 2317, column: 2)
!7143 = !DILocation(line: 2317, column: 2, scope: !7133)
!7144 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !7145)
!7145 = distinct !DILocation(line: 2317, column: 2, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7142, file: !374, line: 2317, column: 2)
!7147 = !DILocation(line: 0, scope: !5504, inlinedAt: !7145)
!7148 = !DILocation(line: 2317, column: 2, scope: !7146)
!7149 = !DILocation(line: 2317, column: 2, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7151, file: !374, line: 2317, column: 2)
!7151 = distinct !DILexicalBlock(scope: !7146, file: !374, line: 2317, column: 2)
!7152 = distinct !{!7152, !7153, !7153}
!7153 = !DILocation(line: 2317, column: 2, scope: !7151)
!7154 = !DILocation(line: 2318, column: 15, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7133, file: !374, line: 2318, column: 6)
!7156 = !DILocation(line: 2318, column: 33, scope: !7155)
!7157 = !DILocation(line: 2327, column: 2, scope: !7133)
!7158 = distinct !DISubprogram(name: "xQueueIsQueueFullFromISR", scope: !374, file: !374, line: 2352, type: !7134, scopeLine: 2353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !7159)
!7159 = !{!7160, !7161, !7162}
!7160 = !DILocalVariable(name: "xQueue", arg: 1, scope: !7158, file: !374, line: 2352, type: !6984)
!7161 = !DILocalVariable(name: "xReturn", scope: !7158, file: !374, line: 2354, type: !176)
!7162 = !DILocalVariable(name: "pxQueue", scope: !7158, file: !374, line: 2355, type: !5498)
!7163 = !DILocation(line: 0, scope: !7158)
!7164 = !DILocation(line: 2357, column: 2, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7158, file: !374, line: 2357, column: 2)
!7166 = !DILocation(line: 2357, column: 2, scope: !7158)
!7167 = !DILocation(line: 195, column: 2, scope: !5504, inlinedAt: !7168)
!7168 = distinct !DILocation(line: 2357, column: 2, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7165, file: !374, line: 2357, column: 2)
!7170 = !DILocation(line: 0, scope: !5504, inlinedAt: !7168)
!7171 = !DILocation(line: 2357, column: 2, scope: !7169)
!7172 = !DILocation(line: 2357, column: 2, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7174, file: !374, line: 2357, column: 2)
!7174 = distinct !DILexicalBlock(scope: !7169, file: !374, line: 2357, column: 2)
!7175 = distinct !{!7175, !7176, !7176}
!7176 = !DILocation(line: 2357, column: 2, scope: !7174)
!7177 = !DILocation(line: 2358, column: 15, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7158, file: !374, line: 2358, column: 6)
!7179 = !DILocation(line: 2358, column: 45, scope: !7178)
!7180 = !DILocation(line: 2358, column: 33, scope: !7178)
!7181 = !DILocation(line: 2367, column: 2, scope: !7158)
!7182 = distinct !DISubprogram(name: "vQueueAddToRegistry", scope: !374, file: !374, line: 2648, type: !7183, scopeLine: 2649, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !7185)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{null, !429, !183}
!7185 = !{!7186, !7187, !7188}
!7186 = !DILocalVariable(name: "xQueue", arg: 1, scope: !7182, file: !374, line: 2648, type: !429)
!7187 = !DILocalVariable(name: "pcQueueName", arg: 2, scope: !7182, file: !374, line: 2648, type: !183)
!7188 = !DILocalVariable(name: "ux", scope: !7182, file: !374, line: 2650, type: !149)
!7189 = !DILocation(line: 0, scope: !7182)
!7190 = !DILocation(line: 2654, column: 3, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7182, file: !374, line: 2654, column: 3)
!7192 = !DILocation(line: 2656, column: 29, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !374, line: 2656, column: 8)
!7194 = distinct !DILexicalBlock(scope: !7195, file: !374, line: 2655, column: 3)
!7195 = distinct !DILexicalBlock(scope: !7191, file: !374, line: 2654, column: 3)
!7196 = !DILocation(line: 2656, column: 41, scope: !7193)
!7197 = !DILocation(line: 2656, column: 8, scope: !7194)
!7198 = !DILocation(line: 2659, column: 38, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7193, file: !374, line: 2657, column: 4)
!7200 = !DILocation(line: 2660, column: 26, scope: !7199)
!7201 = !DILocation(line: 2660, column: 34, scope: !7199)
!7202 = !DILocation(line: 2663, column: 5, scope: !7199)
!7203 = !DILocation(line: 2654, column: 83, scope: !7195)
!7204 = !DILocation(line: 2654, column: 36, scope: !7195)
!7205 = distinct !{!7205, !7190, !7206, !1525}
!7206 = !DILocation(line: 2669, column: 3, scope: !7191)
!7207 = !DILocation(line: 2670, column: 2, scope: !7182)
!7208 = distinct !DISubprogram(name: "pcQueueGetName", scope: !374, file: !374, line: 2677, type: !7209, scopeLine: 2678, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !7211)
!7209 = !DISubroutineType(types: !7210)
!7210 = !{!183, !429}
!7211 = !{!7212, !7213, !7214}
!7212 = !DILocalVariable(name: "xQueue", arg: 1, scope: !7208, file: !374, line: 2677, type: !429)
!7213 = !DILocalVariable(name: "ux", scope: !7208, file: !374, line: 2679, type: !149)
!7214 = !DILocalVariable(name: "pcReturn", scope: !7208, file: !374, line: 2680, type: !183)
!7215 = !DILocation(line: 0, scope: !7208)
!7216 = !DILocation(line: 2684, column: 3, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7208, file: !374, line: 2684, column: 3)
!7218 = !DILocation(line: 2686, column: 29, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7220, file: !374, line: 2686, column: 8)
!7220 = distinct !DILexicalBlock(scope: !7221, file: !374, line: 2685, column: 3)
!7221 = distinct !DILexicalBlock(scope: !7217, file: !374, line: 2684, column: 3)
!7222 = !DILocation(line: 2686, column: 37, scope: !7219)
!7223 = !DILocation(line: 2686, column: 8, scope: !7220)
!7224 = !DILocation(line: 2688, column: 37, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7219, file: !374, line: 2687, column: 4)
!7226 = !DILocation(line: 2689, column: 5, scope: !7225)
!7227 = !DILocation(line: 2684, column: 83, scope: !7221)
!7228 = !DILocation(line: 2684, column: 36, scope: !7221)
!7229 = distinct !{!7229, !7216, !7230, !1525}
!7230 = !DILocation(line: 2695, column: 3, scope: !7217)
!7231 = !DILocation(line: 2697, column: 3, scope: !7208)
!7232 = distinct !DISubprogram(name: "vQueueWaitForMessageRestricted", scope: !374, file: !374, line: 2737, type: !7233, scopeLine: 2738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !366, retainedNodes: !7235)
!7233 = !DISubroutineType(types: !7234)
!7234 = !{null, !429, !39, !1864}
!7235 = !{!7236, !7237, !7238, !7239}
!7236 = !DILocalVariable(name: "xQueue", arg: 1, scope: !7232, file: !374, line: 2737, type: !429)
!7237 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !7232, file: !374, line: 2737, type: !39)
!7238 = !DILocalVariable(name: "xWaitIndefinitely", arg: 3, scope: !7232, file: !374, line: 2737, type: !1864)
!7239 = !DILocalVariable(name: "pxQueue", scope: !7232, file: !374, line: 2739, type: !5498)
!7240 = !DILocation(line: 0, scope: !7232)
!7241 = !DILocation(line: 2755, column: 3, scope: !7232)
!7242 = !DILocation(line: 2755, column: 3, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7244, file: !374, line: 2755, column: 3)
!7244 = distinct !DILexicalBlock(scope: !7232, file: !374, line: 2755, column: 3)
!7245 = !DILocation(line: 2755, column: 3, scope: !7244)
!7246 = !DILocation(line: 2755, column: 3, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7243, file: !374, line: 2755, column: 3)
!7248 = !DILocation(line: 2755, column: 3, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7244, file: !374, line: 2755, column: 3)
!7250 = !DILocation(line: 2755, column: 3, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7249, file: !374, line: 2755, column: 3)
!7252 = !DILocation(line: 2756, column: 16, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7232, file: !374, line: 2756, column: 7)
!7254 = !DILocation(line: 2756, column: 34, scope: !7253)
!7255 = !DILocation(line: 2756, column: 7, scope: !7232)
!7256 = !DILocation(line: 2759, column: 49, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7253, file: !374, line: 2757, column: 3)
!7258 = !DILocation(line: 2759, column: 4, scope: !7257)
!7259 = !DILocation(line: 2760, column: 3, scope: !7257)
!7260 = !DILocation(line: 2765, column: 3, scope: !7232)
!7261 = !DILocation(line: 2766, column: 2, scope: !7232)
!7262 = distinct !DISubprogram(name: "HAL_Init", scope: !628, file: !628, line: 157, type: !7263, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7263 = !DISubroutineType(types: !7264)
!7264 = !{!7265}
!7265 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !6, line: 45, baseType: !5)
!7266 = !DILocation(line: 161, column: 3, scope: !7262)
!7267 = !{!7268, !1020, i64 0}
!7268 = !{!"", !1020, i64 0, !1020, i64 4, !1020, i64 8, !1020, i64 12, !1020, i64 16, !1020, i64 20, !1020, i64 24}
!7269 = !DILocation(line: 165, column: 3, scope: !7262)
!7270 = !DILocation(line: 169, column: 3, scope: !7262)
!7271 = !DILocation(line: 173, column: 3, scope: !7262)
!7272 = !DILocation(line: 176, column: 3, scope: !7262)
!7273 = !DILocation(line: 179, column: 3, scope: !7262)
!7274 = !DILocation(line: 182, column: 3, scope: !7262)
!7275 = distinct !DISubprogram(name: "HAL_InitTick", scope: !628, file: !628, line: 253, type: !7276, scopeLine: 254, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !7278)
!7276 = !DISubroutineType(types: !7277)
!7277 = !{!7265, !21}
!7278 = !{!7279}
!7279 = !DILocalVariable(name: "TickPriority", arg: 1, scope: !7275, file: !628, line: 253, type: !21)
!7280 = !DILocation(line: 0, scope: !7275)
!7281 = !DILocation(line: 256, column: 26, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7275, file: !628, line: 256, column: 7)
!7283 = !DILocation(line: 256, column: 53, scope: !7282)
!7284 = !DILocation(line: 256, column: 51, scope: !7282)
!7285 = !DILocation(line: 256, column: 42, scope: !7282)
!7286 = !DILocation(line: 256, column: 7, scope: !7282)
!7287 = !DILocation(line: 256, column: 66, scope: !7282)
!7288 = !DILocation(line: 256, column: 7, scope: !7275)
!7289 = !DILocation(line: 264, column: 5, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7291, file: !628, line: 263, column: 3)
!7291 = distinct !DILexicalBlock(scope: !7275, file: !628, line: 262, column: 7)
!7292 = !DILocation(line: 265, column: 16, scope: !7290)
!7293 = !DILocation(line: 273, column: 3, scope: !7275)
!7294 = !DILocation(line: 274, column: 1, scope: !7275)
!7295 = distinct !DISubprogram(name: "HAL_MspInit", scope: !628, file: !628, line: 219, type: !1054, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7296 = !DILocation(line: 224, column: 1, scope: !7295)
!7297 = distinct !DISubprogram(name: "HAL_DeInit", scope: !628, file: !628, line: 190, type: !7263, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7298 = !DILocation(line: 193, column: 3, scope: !7297)
!7299 = !{!1034, !1020, i64 32}
!7300 = !DILocation(line: 194, column: 3, scope: !7297)
!7301 = !DILocation(line: 196, column: 3, scope: !7297)
!7302 = !{!1034, !1020, i64 36}
!7303 = !DILocation(line: 197, column: 3, scope: !7297)
!7304 = !DILocation(line: 199, column: 3, scope: !7297)
!7305 = !{!1034, !1020, i64 16}
!7306 = !DILocation(line: 200, column: 3, scope: !7297)
!7307 = !DILocation(line: 202, column: 3, scope: !7297)
!7308 = !{!1034, !1020, i64 20}
!7309 = !DILocation(line: 203, column: 3, scope: !7297)
!7310 = !DILocation(line: 205, column: 3, scope: !7297)
!7311 = !{!1034, !1020, i64 24}
!7312 = !DILocation(line: 206, column: 3, scope: !7297)
!7313 = !DILocation(line: 209, column: 3, scope: !7297)
!7314 = !DILocation(line: 212, column: 3, scope: !7297)
!7315 = distinct !DISubprogram(name: "HAL_MspDeInit", scope: !628, file: !628, line: 230, type: !1054, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7316 = !DILocation(line: 235, column: 1, scope: !7315)
!7317 = distinct !DISubprogram(name: "HAL_IncTick", scope: !628, file: !628, line: 312, type: !1054, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7318 = !DILocation(line: 314, column: 13, scope: !7317)
!7319 = !DILocation(line: 314, column: 10, scope: !7317)
!7320 = !DILocation(line: 315, column: 1, scope: !7317)
!7321 = distinct !DISubprogram(name: "HAL_GetTick", scope: !628, file: !628, line: 323, type: !2223, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7322 = !DILocation(line: 325, column: 10, scope: !7321)
!7323 = !DILocation(line: 325, column: 3, scope: !7321)
!7324 = distinct !DISubprogram(name: "HAL_GetTickPrio", scope: !628, file: !628, line: 332, type: !2223, scopeLine: 333, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7325 = !DILocation(line: 334, column: 10, scope: !7324)
!7326 = !DILocation(line: 334, column: 3, scope: !7324)
!7327 = distinct !DISubprogram(name: "HAL_SetTickFreq", scope: !628, file: !628, line: 341, type: !7328, scopeLine: 342, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !7330)
!7328 = !DISubroutineType(types: !7329)
!7329 = !{!7265, !631}
!7330 = !{!7331, !7332, !7333}
!7331 = !DILocalVariable(name: "Freq", arg: 1, scope: !7327, file: !628, line: 341, type: !631)
!7332 = !DILocalVariable(name: "status", scope: !7327, file: !628, line: 343, type: !7265)
!7333 = !DILocalVariable(name: "prevTickFreq", scope: !7327, file: !628, line: 344, type: !631)
!7334 = !DILocation(line: 0, scope: !7327)
!7335 = !DILocation(line: 348, column: 7, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7327, file: !628, line: 348, column: 7)
!7337 = !DILocation(line: 348, column: 18, scope: !7336)
!7338 = !DILocation(line: 348, column: 7, scope: !7327)
!7339 = !DILocation(line: 354, column: 16, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7336, file: !628, line: 349, column: 3)
!7341 = !DILocation(line: 357, column: 27, scope: !7340)
!7342 = !DILocation(line: 357, column: 14, scope: !7340)
!7343 = !DILocation(line: 359, column: 16, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7340, file: !628, line: 359, column: 9)
!7345 = !DILocation(line: 359, column: 9, scope: !7340)
!7346 = !DILocation(line: 362, column: 18, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7344, file: !628, line: 360, column: 5)
!7348 = !DILocation(line: 363, column: 5, scope: !7347)
!7349 = !DILocation(line: 366, column: 3, scope: !7327)
!7350 = distinct !DISubprogram(name: "HAL_GetTickFreq", scope: !628, file: !628, line: 373, type: !7351, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7351 = !DISubroutineType(types: !7352)
!7352 = !{!631}
!7353 = !DILocation(line: 375, column: 10, scope: !7350)
!7354 = !DILocation(line: 375, column: 3, scope: !7350)
!7355 = distinct !DISubprogram(name: "HAL_Delay", scope: !628, file: !628, line: 389, type: !2236, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !7356)
!7356 = !{!7357, !7358, !7359}
!7357 = !DILocalVariable(name: "Delay", arg: 1, scope: !7355, file: !628, line: 389, type: !21)
!7358 = !DILocalVariable(name: "tickstart", scope: !7355, file: !628, line: 391, type: !21)
!7359 = !DILocalVariable(name: "wait", scope: !7355, file: !628, line: 392, type: !21)
!7360 = !DILocation(line: 0, scope: !7355)
!7361 = !DILocation(line: 391, column: 24, scope: !7355)
!7362 = !DILocation(line: 395, column: 12, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7355, file: !628, line: 395, column: 7)
!7364 = !DILocation(line: 395, column: 7, scope: !7355)
!7365 = !DILocation(line: 400, column: 3, scope: !7355)
!7366 = !DILocation(line: 400, column: 10, scope: !7355)
!7367 = !DILocation(line: 400, column: 24, scope: !7355)
!7368 = !DILocation(line: 400, column: 37, scope: !7355)
!7369 = distinct !{!7369, !7365, !7370, !1525}
!7370 = !DILocation(line: 402, column: 3, scope: !7355)
!7371 = !DILocation(line: 403, column: 1, scope: !7355)
!7372 = distinct !DISubprogram(name: "HAL_SuspendTick", scope: !628, file: !628, line: 415, type: !1054, scopeLine: 416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7373 = !DILocation(line: 418, column: 17, scope: !7372)
!7374 = !{!7375, !1020, i64 0}
!7375 = !{!"", !1020, i64 0, !1020, i64 4, !1020, i64 8, !1020, i64 12}
!7376 = !DILocation(line: 419, column: 1, scope: !7372)
!7377 = distinct !DISubprogram(name: "HAL_ResumeTick", scope: !628, file: !628, line: 431, type: !1054, scopeLine: 432, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7378 = !DILocation(line: 434, column: 18, scope: !7377)
!7379 = !DILocation(line: 435, column: 1, scope: !7377)
!7380 = distinct !DISubprogram(name: "HAL_GetHalVersion", scope: !628, file: !628, line: 441, type: !2223, scopeLine: 442, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7381 = !DILocation(line: 443, column: 3, scope: !7380)
!7382 = distinct !DISubprogram(name: "HAL_GetREVID", scope: !628, file: !628, line: 450, type: !2223, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7383 = !DILocation(line: 452, column: 19, scope: !7382)
!7384 = !DILocation(line: 452, column: 27, scope: !7382)
!7385 = !DILocation(line: 452, column: 3, scope: !7382)
!7386 = distinct !DISubprogram(name: "HAL_GetDEVID", scope: !628, file: !628, line: 459, type: !2223, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7387 = !DILocation(line: 461, column: 19, scope: !7386)
!7388 = !DILocation(line: 461, column: 27, scope: !7386)
!7389 = !DILocation(line: 461, column: 3, scope: !7386)
!7390 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGSleepMode", scope: !628, file: !628, line: 468, type: !1054, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7391 = !DILocation(line: 470, column: 3, scope: !7390)
!7392 = !{!7375, !1020, i64 4}
!7393 = !DILocation(line: 471, column: 1, scope: !7390)
!7394 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGSleepMode", scope: !628, file: !628, line: 477, type: !1054, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7395 = !DILocation(line: 479, column: 3, scope: !7394)
!7396 = !DILocation(line: 480, column: 1, scope: !7394)
!7397 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStopMode", scope: !628, file: !628, line: 486, type: !1054, scopeLine: 487, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7398 = !DILocation(line: 488, column: 3, scope: !7397)
!7399 = !DILocation(line: 489, column: 1, scope: !7397)
!7400 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStopMode", scope: !628, file: !628, line: 495, type: !1054, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7401 = !DILocation(line: 497, column: 3, scope: !7400)
!7402 = !DILocation(line: 498, column: 1, scope: !7400)
!7403 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStandbyMode", scope: !628, file: !628, line: 504, type: !1054, scopeLine: 505, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7404 = !DILocation(line: 506, column: 3, scope: !7403)
!7405 = !DILocation(line: 507, column: 1, scope: !7403)
!7406 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStandbyMode", scope: !628, file: !628, line: 513, type: !1054, scopeLine: 514, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7407 = !DILocation(line: 515, column: 3, scope: !7406)
!7408 = !DILocation(line: 516, column: 1, scope: !7406)
!7409 = distinct !DISubprogram(name: "HAL_EnableCompensationCell", scope: !628, file: !628, line: 524, type: !1054, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7410 = !DILocation(line: 526, column: 37, scope: !7409)
!7411 = !DILocation(line: 527, column: 1, scope: !7409)
!7412 = distinct !DISubprogram(name: "HAL_DisableCompensationCell", scope: !628, file: !628, line: 535, type: !1054, scopeLine: 536, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7413 = !DILocation(line: 537, column: 37, scope: !7412)
!7414 = !DILocation(line: 538, column: 1, scope: !7412)
!7415 = distinct !DISubprogram(name: "HAL_GetUIDw0", scope: !628, file: !628, line: 544, type: !2223, scopeLine: 545, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7416 = !DILocation(line: 546, column: 11, scope: !7415)
!7417 = !DILocation(line: 546, column: 3, scope: !7415)
!7418 = distinct !DISubprogram(name: "HAL_GetUIDw1", scope: !628, file: !628, line: 553, type: !2223, scopeLine: 554, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7419 = !DILocation(line: 555, column: 11, scope: !7418)
!7420 = !DILocation(line: 555, column: 3, scope: !7418)
!7421 = distinct !DISubprogram(name: "HAL_GetUIDw2", scope: !628, file: !628, line: 562, type: !2223, scopeLine: 563, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7422 = !DILocation(line: 564, column: 11, scope: !7421)
!7423 = !DILocation(line: 564, column: 3, scope: !7421)
!7424 = distinct !DISubprogram(name: "HAL_EnableMemorySwappingBank", scope: !628, file: !628, line: 579, type: !1054, scopeLine: 580, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7425 = !DILocation(line: 581, column: 33, scope: !7424)
!7426 = !DILocation(line: 582, column: 1, scope: !7424)
!7427 = distinct !DISubprogram(name: "HAL_DisableMemorySwappingBank", scope: !628, file: !628, line: 594, type: !1054, scopeLine: 595, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !1056)
!7428 = !DILocation(line: 596, column: 33, scope: !7427)
!7429 = !DILocation(line: 597, column: 1, scope: !7427)
!7430 = distinct !DISubprogram(name: "HAL_NVIC_SetPriorityGrouping", scope: !7431, file: !7431, line: 143, type: !2236, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7432)
!7431 = !DIFile(filename: "components/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "05ece9f7e15369346852cc9b0bea67a2")
!7432 = !{!7433}
!7433 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !7430, file: !7431, line: 143, type: !21)
!7434 = !DILocation(line: 0, scope: !7430)
!7435 = !DILocation(line: 149, column: 3, scope: !7430)
!7436 = !DILocation(line: 150, column: 1, scope: !7430)
!7437 = distinct !DISubprogram(name: "__NVIC_SetPriorityGrouping", scope: !608, file: !608, line: 1648, type: !2236, scopeLine: 1649, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7438)
!7438 = !{!7439, !7440, !7441}
!7439 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !7437, file: !608, line: 1648, type: !21)
!7440 = !DILocalVariable(name: "reg_value", scope: !7437, file: !608, line: 1650, type: !21)
!7441 = !DILocalVariable(name: "PriorityGroupTmp", scope: !7437, file: !608, line: 1651, type: !21)
!7442 = !DILocation(line: 0, scope: !7437)
!7443 = !DILocation(line: 1653, column: 22, scope: !7437)
!7444 = !{!1385, !1020, i64 12}
!7445 = !DILocation(line: 1654, column: 13, scope: !7437)
!7446 = !DILocation(line: 1657, column: 35, scope: !7437)
!7447 = !DILocation(line: 1656, column: 62, scope: !7437)
!7448 = !DILocation(line: 1658, column: 14, scope: !7437)
!7449 = !DILocation(line: 1659, column: 1, scope: !7437)
!7450 = distinct !DISubprogram(name: "HAL_NVIC_SetPriority", scope: !7431, file: !7431, line: 165, type: !7451, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7454)
!7451 = !DISubroutineType(types: !7452)
!7452 = !{null, !7453, !21, !21}
!7453 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !16, line: 184, baseType: !453)
!7454 = !{!7455, !7456, !7457, !7458}
!7455 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7450, file: !7431, line: 165, type: !7453)
!7456 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !7450, file: !7431, line: 165, type: !21)
!7457 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !7450, file: !7431, line: 165, type: !21)
!7458 = !DILocalVariable(name: "prioritygroup", scope: !7450, file: !7431, line: 167, type: !21)
!7459 = !DILocation(line: 0, scope: !7450)
!7460 = !DILocation(line: 173, column: 19, scope: !7450)
!7461 = !{i32 0, i32 8}
!7462 = !DILocation(line: 175, column: 26, scope: !7450)
!7463 = !DILocation(line: 175, column: 3, scope: !7450)
!7464 = !DILocation(line: 176, column: 1, scope: !7450)
!7465 = distinct !DISubprogram(name: "__NVIC_GetPriorityGrouping", scope: !608, file: !608, line: 1667, type: !2223, scopeLine: 1668, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !1056)
!7466 = !DILocation(line: 1669, column: 28, scope: !7465)
!7467 = !DILocation(line: 1669, column: 60, scope: !7465)
!7468 = !DILocation(line: 1669, column: 3, scope: !7465)
!7469 = distinct !DISubprogram(name: "NVIC_EncodePriority", scope: !608, file: !608, line: 1856, type: !7470, scopeLine: 1857, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7472)
!7470 = !DISubroutineType(types: !7471)
!7471 = !{!21, !21, !21, !21}
!7472 = !{!7473, !7474, !7475, !7476, !7477, !7478}
!7473 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !7469, file: !608, line: 1856, type: !21)
!7474 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !7469, file: !608, line: 1856, type: !21)
!7475 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !7469, file: !608, line: 1856, type: !21)
!7476 = !DILocalVariable(name: "PriorityGroupTmp", scope: !7469, file: !608, line: 1858, type: !21)
!7477 = !DILocalVariable(name: "PreemptPriorityBits", scope: !7469, file: !608, line: 1859, type: !21)
!7478 = !DILocalVariable(name: "SubPriorityBits", scope: !7469, file: !608, line: 1860, type: !21)
!7479 = !DILocation(line: 0, scope: !7469)
!7480 = !DILocation(line: 1858, column: 46, scope: !7469)
!7481 = !DILocation(line: 1862, column: 31, scope: !7469)
!7482 = !DILocation(line: 1862, column: 25, scope: !7469)
!7483 = !DILocation(line: 1863, column: 25, scope: !7469)
!7484 = !DILocation(line: 1866, column: 74, scope: !7469)
!7485 = !DILocation(line: 1866, column: 30, scope: !7469)
!7486 = !DILocation(line: 1866, column: 82, scope: !7469)
!7487 = !DILocation(line: 1867, column: 74, scope: !7469)
!7488 = !DILocation(line: 1867, column: 30, scope: !7469)
!7489 = !DILocation(line: 1866, column: 102, scope: !7469)
!7490 = !DILocation(line: 1865, column: 3, scope: !7469)
!7491 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !608, file: !608, line: 1809, type: !7492, scopeLine: 1810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7494)
!7492 = !DISubroutineType(types: !7493)
!7493 = !{null, !7453, !21}
!7494 = !{!7495, !7496}
!7495 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7491, file: !608, line: 1809, type: !7453)
!7496 = !DILocalVariable(name: "priority", arg: 2, scope: !7491, file: !608, line: 1809, type: !21)
!7497 = !DILocation(line: 0, scope: !7491)
!7498 = !DILocation(line: 0, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7491, file: !608, line: 1811, column: 7)
!7500 = !DILocation(line: 1811, column: 7, scope: !7491)
!7501 = !DILocation(line: 1819, column: 1, scope: !7491)
!7502 = distinct !DISubprogram(name: "HAL_NVIC_EnableIRQ", scope: !7431, file: !7431, line: 187, type: !7503, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7505)
!7503 = !DISubroutineType(types: !7504)
!7504 = !{null, !7453}
!7505 = !{!7506}
!7506 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7502, file: !7431, line: 187, type: !7453)
!7507 = !DILocation(line: 0, scope: !7502)
!7508 = !DILocation(line: 193, column: 3, scope: !7502)
!7509 = !DILocation(line: 194, column: 1, scope: !7502)
!7510 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !608, file: !608, line: 1679, type: !7503, scopeLine: 1680, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7511)
!7511 = !{!7512}
!7512 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7510, file: !608, line: 1679, type: !7453)
!7513 = !DILocation(line: 0, scope: !7510)
!7514 = !DILocation(line: 1681, column: 23, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7510, file: !608, line: 1681, column: 7)
!7516 = !DILocation(line: 1681, column: 7, scope: !7510)
!7517 = !DILocation(line: 1683, column: 5, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7515, file: !608, line: 1682, column: 3)
!7519 = !{i64 2149370558}
!7520 = !DILocation(line: 1684, column: 81, scope: !7518)
!7521 = !DILocation(line: 1684, column: 60, scope: !7518)
!7522 = !DILocation(line: 1684, column: 34, scope: !7518)
!7523 = !DILocation(line: 1684, column: 5, scope: !7518)
!7524 = !DILocation(line: 1684, column: 43, scope: !7518)
!7525 = !DILocation(line: 1685, column: 5, scope: !7518)
!7526 = !{i64 2149370672}
!7527 = !DILocation(line: 1686, column: 3, scope: !7518)
!7528 = !DILocation(line: 1687, column: 1, scope: !7510)
!7529 = distinct !DISubprogram(name: "HAL_NVIC_DisableIRQ", scope: !7431, file: !7431, line: 203, type: !7503, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7530)
!7530 = !{!7531}
!7531 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7529, file: !7431, line: 203, type: !7453)
!7532 = !DILocation(line: 0, scope: !7529)
!7533 = !DILocation(line: 209, column: 3, scope: !7529)
!7534 = !DILocation(line: 210, column: 1, scope: !7529)
!7535 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !608, file: !608, line: 1717, type: !7503, scopeLine: 1718, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7536)
!7536 = !{!7537}
!7537 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7535, file: !608, line: 1717, type: !7453)
!7538 = !DILocation(line: 0, scope: !7535)
!7539 = !DILocation(line: 1719, column: 23, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7535, file: !608, line: 1719, column: 7)
!7541 = !DILocation(line: 1719, column: 7, scope: !7535)
!7542 = !DILocation(line: 1721, column: 81, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7540, file: !608, line: 1720, column: 3)
!7544 = !DILocation(line: 1721, column: 60, scope: !7543)
!7545 = !DILocation(line: 1721, column: 34, scope: !7543)
!7546 = !DILocation(line: 1721, column: 5, scope: !7543)
!7547 = !DILocation(line: 1721, column: 43, scope: !7543)
!7548 = !DILocation(line: 946, column: 3, scope: !7549, inlinedAt: !7551)
!7549 = distinct !DISubprogram(name: "__DSB", scope: !7550, file: !7550, line: 944, type: !1054, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !1056)
!7550 = !DIFile(filename: "components/CMSIS/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "20108ceddd4a9d4a0a19772c6459d82d")
!7551 = distinct !DILocation(line: 1722, column: 5, scope: !7543)
!7552 = !{i64 1845559}
!7553 = !DILocation(line: 935, column: 3, scope: !7554, inlinedAt: !7555)
!7554 = distinct !DISubprogram(name: "__ISB", scope: !7550, file: !7550, line: 933, type: !1054, scopeLine: 934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !1056)
!7555 = distinct !DILocation(line: 1723, column: 5, scope: !7543)
!7556 = !{i64 1845276}
!7557 = !DILocation(line: 1724, column: 3, scope: !7543)
!7558 = !DILocation(line: 1725, column: 1, scope: !7535)
!7559 = distinct !DISubprogram(name: "HAL_NVIC_SystemReset", scope: !7431, file: !7431, line: 216, type: !1054, scopeLine: 217, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !1056)
!7560 = !DILocation(line: 219, column: 3, scope: !7559)
!7561 = distinct !DISubprogram(name: "__NVIC_SystemReset", scope: !608, file: !608, line: 1933, type: !1054, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !1056)
!7562 = !DILocation(line: 946, column: 3, scope: !7549, inlinedAt: !7563)
!7563 = distinct !DILocation(line: 1935, column: 3, scope: !7561)
!7564 = !DILocation(line: 1938, column: 34, scope: !7561)
!7565 = !DILocation(line: 1938, column: 40, scope: !7561)
!7566 = !DILocation(line: 1938, column: 66, scope: !7561)
!7567 = !DILocation(line: 1937, column: 15, scope: !7561)
!7568 = !DILocation(line: 946, column: 3, scope: !7549, inlinedAt: !7569)
!7569 = distinct !DILocation(line: 1940, column: 3, scope: !7561)
!7570 = !DILocation(line: 1942, column: 3, scope: !7561)
!7571 = !DILocation(line: 1944, column: 5, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7573, file: !608, line: 1943, column: 3)
!7573 = distinct !DILexicalBlock(scope: !7574, file: !608, line: 1942, column: 3)
!7574 = distinct !DILexicalBlock(scope: !7561, file: !608, line: 1942, column: 3)
!7575 = !{i64 2149372132}
!7576 = !DILocation(line: 1942, column: 3, scope: !7573)
!7577 = distinct !{!7577, !7578, !7579}
!7578 = !DILocation(line: 1942, column: 3, scope: !7574)
!7579 = !DILocation(line: 1945, column: 3, scope: !7574)
!7580 = distinct !DISubprogram(name: "HAL_SYSTICK_Config", scope: !7431, file: !7431, line: 229, type: !7581, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7583)
!7581 = !DISubroutineType(types: !7582)
!7582 = !{!21, !21}
!7583 = !{!7584}
!7584 = !DILocalVariable(name: "TicksNumb", arg: 1, scope: !7580, file: !7431, line: 229, type: !21)
!7585 = !DILocation(line: 0, scope: !7580)
!7586 = !DILocation(line: 231, column: 11, scope: !7580)
!7587 = !DILocation(line: 231, column: 4, scope: !7580)
!7588 = distinct !DISubprogram(name: "SysTick_Config", scope: !608, file: !608, line: 2017, type: !7581, scopeLine: 2018, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7589)
!7589 = !{!7590}
!7590 = !DILocalVariable(name: "ticks", arg: 1, scope: !7588, file: !608, line: 2017, type: !21)
!7591 = !DILocation(line: 0, scope: !7588)
!7592 = !DILocation(line: 2019, column: 14, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7588, file: !608, line: 2019, column: 7)
!7594 = !DILocation(line: 2019, column: 21, scope: !7593)
!7595 = !DILocation(line: 2019, column: 7, scope: !7588)
!7596 = !DILocation(line: 2024, column: 18, scope: !7588)
!7597 = !DILocation(line: 2025, column: 3, scope: !7588)
!7598 = !DILocation(line: 2026, column: 18, scope: !7588)
!7599 = !{!7375, !1020, i64 8}
!7600 = !DILocation(line: 2027, column: 18, scope: !7588)
!7601 = !DILocation(line: 2030, column: 3, scope: !7588)
!7602 = !DILocation(line: 2031, column: 1, scope: !7588)
!7603 = distinct !DISubprogram(name: "HAL_MPU_Disable", scope: !7431, file: !7431, line: 258, type: !1054, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !1056)
!7604 = !DILocation(line: 957, column: 3, scope: !7605, inlinedAt: !7606)
!7605 = distinct !DISubprogram(name: "__DMB", scope: !7550, file: !7550, line: 955, type: !1054, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !1056)
!7606 = distinct !DILocation(line: 261, column: 3, scope: !7603)
!7607 = !{i64 1845835}
!7608 = !DILocation(line: 264, column: 14, scope: !7603)
!7609 = !{!1385, !1020, i64 36}
!7610 = !DILocation(line: 267, column: 13, scope: !7603)
!7611 = !{!7612, !1020, i64 4}
!7612 = !{!"", !1020, i64 0, !1020, i64 4, !1020, i64 8, !1020, i64 12, !1020, i64 16, !1020, i64 20, !1020, i64 24, !1020, i64 28, !1020, i64 32, !1020, i64 36, !1020, i64 40}
!7613 = !DILocation(line: 268, column: 1, scope: !7603)
!7614 = distinct !DISubprogram(name: "HAL_MPU_Enable", scope: !7431, file: !7431, line: 281, type: !2236, scopeLine: 282, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7615)
!7615 = !{!7616}
!7616 = !DILocalVariable(name: "MPU_Control", arg: 1, scope: !7614, file: !7431, line: 281, type: !21)
!7617 = !DILocation(line: 0, scope: !7614)
!7618 = !DILocation(line: 284, column: 27, scope: !7614)
!7619 = !DILocation(line: 284, column: 13, scope: !7614)
!7620 = !DILocation(line: 287, column: 14, scope: !7614)
!7621 = !DILocation(line: 946, column: 3, scope: !7549, inlinedAt: !7622)
!7622 = distinct !DILocation(line: 290, column: 3, scope: !7614)
!7623 = !DILocation(line: 935, column: 3, scope: !7554, inlinedAt: !7624)
!7624 = distinct !DILocation(line: 291, column: 3, scope: !7614)
!7625 = !DILocation(line: 292, column: 1, scope: !7614)
!7626 = distinct !DISubprogram(name: "HAL_MPU_ConfigRegion", scope: !7431, file: !7431, line: 300, type: !7627, scopeLine: 301, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7645)
!7627 = !DISubroutineType(types: !7628)
!7628 = !{null, !7629}
!7629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7630, size: 32)
!7630 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Region_InitTypeDef", file: !7631, line: 71, baseType: !7632)
!7631 = !DIFile(filename: "components/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "67b9ea6d67e789f5152add9169ee4ba0")
!7632 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7631, line: 48, size: 128, elements: !7633)
!7633 = !{!7634, !7635, !7636, !7637, !7638, !7639, !7640, !7641, !7642, !7643, !7644}
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "Enable", scope: !7632, file: !7631, line: 50, baseType: !85, size: 8)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "Number", scope: !7632, file: !7631, line: 52, baseType: !85, size: 8, offset: 8)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !7632, file: !7631, line: 54, baseType: !21, size: 32, offset: 32)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !7632, file: !7631, line: 55, baseType: !85, size: 8, offset: 64)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "SubRegionDisable", scope: !7632, file: !7631, line: 57, baseType: !85, size: 8, offset: 72)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "TypeExtField", scope: !7632, file: !7631, line: 59, baseType: !85, size: 8, offset: 80)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "AccessPermission", scope: !7632, file: !7631, line: 61, baseType: !85, size: 8, offset: 88)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "DisableExec", scope: !7632, file: !7631, line: 63, baseType: !85, size: 8, offset: 96)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "IsShareable", scope: !7632, file: !7631, line: 65, baseType: !85, size: 8, offset: 104)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "IsCacheable", scope: !7632, file: !7631, line: 67, baseType: !85, size: 8, offset: 112)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "IsBufferable", scope: !7632, file: !7631, line: 69, baseType: !85, size: 8, offset: 120)
!7645 = !{!7646}
!7646 = !DILocalVariable(name: "MPU_Init", arg: 1, scope: !7626, file: !7431, line: 300, type: !7629)
!7647 = !DILocation(line: 0, scope: !7626)
!7648 = !DILocation(line: 307, column: 24, scope: !7626)
!7649 = !{!7650, !1016, i64 1}
!7650 = !{!"", !1016, i64 0, !1016, i64 1, !1020, i64 4, !1016, i64 8, !1016, i64 9, !1016, i64 10, !1016, i64 11, !1016, i64 12, !1016, i64 13, !1016, i64 14, !1016, i64 15}
!7651 = !DILocation(line: 307, column: 14, scope: !7626)
!7652 = !DILocation(line: 307, column: 12, scope: !7626)
!7653 = !{!7612, !1020, i64 8}
!7654 = !DILocation(line: 309, column: 18, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7626, file: !7431, line: 309, column: 7)
!7656 = !{!7650, !1016, i64 0}
!7657 = !DILocation(line: 309, column: 26, scope: !7655)
!7658 = !DILocation(line: 309, column: 7, scope: !7626)
!7659 = !DILocation(line: 321, column: 27, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7655, file: !7431, line: 310, column: 3)
!7661 = !{!7650, !1020, i64 4}
!7662 = !DILocation(line: 321, column: 15, scope: !7660)
!7663 = !{!7612, !1020, i64 12}
!7664 = !DILocation(line: 322, column: 38, scope: !7660)
!7665 = !{!7650, !1016, i64 12}
!7666 = !DILocation(line: 322, column: 18, scope: !7660)
!7667 = !DILocation(line: 322, column: 62, scope: !7660)
!7668 = !DILocation(line: 323, column: 38, scope: !7660)
!7669 = !{!7650, !1016, i64 11}
!7670 = !DILocation(line: 323, column: 18, scope: !7660)
!7671 = !DILocation(line: 323, column: 62, scope: !7660)
!7672 = !DILocation(line: 324, column: 38, scope: !7660)
!7673 = !{!7650, !1016, i64 10}
!7674 = !DILocation(line: 324, column: 18, scope: !7660)
!7675 = !DILocation(line: 324, column: 62, scope: !7660)
!7676 = !DILocation(line: 325, column: 38, scope: !7660)
!7677 = !{!7650, !1016, i64 13}
!7678 = !DILocation(line: 325, column: 18, scope: !7660)
!7679 = !DILocation(line: 325, column: 62, scope: !7660)
!7680 = !DILocation(line: 326, column: 38, scope: !7660)
!7681 = !{!7650, !1016, i64 14}
!7682 = !DILocation(line: 326, column: 18, scope: !7660)
!7683 = !DILocation(line: 326, column: 62, scope: !7660)
!7684 = !DILocation(line: 327, column: 38, scope: !7660)
!7685 = !{!7650, !1016, i64 15}
!7686 = !DILocation(line: 327, column: 18, scope: !7660)
!7687 = !DILocation(line: 327, column: 62, scope: !7660)
!7688 = !DILocation(line: 328, column: 38, scope: !7660)
!7689 = !{!7650, !1016, i64 9}
!7690 = !DILocation(line: 328, column: 18, scope: !7660)
!7691 = !DILocation(line: 328, column: 62, scope: !7660)
!7692 = !DILocation(line: 329, column: 38, scope: !7660)
!7693 = !{!7650, !1016, i64 8}
!7694 = !DILocation(line: 329, column: 18, scope: !7660)
!7695 = !DILocation(line: 329, column: 62, scope: !7660)
!7696 = !DILocation(line: 330, column: 18, scope: !7660)
!7697 = !DILocation(line: 322, column: 84, scope: !7660)
!7698 = !DILocation(line: 323, column: 84, scope: !7660)
!7699 = !DILocation(line: 324, column: 84, scope: !7660)
!7700 = !DILocation(line: 325, column: 84, scope: !7660)
!7701 = !DILocation(line: 326, column: 84, scope: !7660)
!7702 = !DILocation(line: 327, column: 84, scope: !7660)
!7703 = !DILocation(line: 328, column: 84, scope: !7660)
!7704 = !DILocation(line: 329, column: 84, scope: !7660)
!7705 = !DILocation(line: 331, column: 3, scope: !7660)
!7706 = !DILocation(line: 334, column: 15, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7655, file: !7431, line: 333, column: 3)
!7708 = !DILocation(line: 0, scope: !7655)
!7709 = !{!7612, !1020, i64 16}
!7710 = !DILocation(line: 337, column: 1, scope: !7626)
!7711 = distinct !DISubprogram(name: "HAL_NVIC_GetPriorityGrouping", scope: !7431, file: !7431, line: 344, type: !2223, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !1056)
!7712 = !DILocation(line: 347, column: 10, scope: !7711)
!7713 = !DILocation(line: 347, column: 3, scope: !7711)
!7714 = distinct !DISubprogram(name: "HAL_NVIC_GetPriority", scope: !7431, file: !7431, line: 371, type: !7715, scopeLine: 372, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7717)
!7715 = !DISubroutineType(types: !7716)
!7716 = !{null, !7453, !21, !624, !624}
!7717 = !{!7718, !7719, !7720, !7721}
!7718 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7714, file: !7431, line: 371, type: !7453)
!7719 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !7714, file: !7431, line: 371, type: !21)
!7720 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !7714, file: !7431, line: 371, type: !624)
!7721 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !7714, file: !7431, line: 371, type: !624)
!7722 = !DILocation(line: 0, scope: !7714)
!7723 = !DILocation(line: 376, column: 23, scope: !7714)
!7724 = !{i32 0, i32 16}
!7725 = !DILocation(line: 376, column: 3, scope: !7714)
!7726 = !DILocation(line: 377, column: 1, scope: !7714)
!7727 = distinct !DISubprogram(name: "__NVIC_GetPriority", scope: !608, file: !608, line: 1831, type: !7728, scopeLine: 1832, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7730)
!7728 = !DISubroutineType(types: !7729)
!7729 = !{!21, !7453}
!7730 = !{!7731}
!7731 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7727, file: !608, line: 1831, type: !7453)
!7732 = !DILocation(line: 0, scope: !7727)
!7733 = !DILocation(line: 1834, column: 7, scope: !7727)
!7734 = !DILocation(line: 0, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7727, file: !608, line: 1834, column: 7)
!7736 = !DILocation(line: 1842, column: 1, scope: !7727)
!7737 = distinct !DISubprogram(name: "NVIC_DecodePriority", scope: !608, file: !608, line: 1883, type: !7738, scopeLine: 1884, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7740)
!7738 = !DISubroutineType(types: !7739)
!7739 = !{null, !21, !21, !2754, !2754}
!7740 = !{!7741, !7742, !7743, !7744, !7745, !7746, !7747}
!7741 = !DILocalVariable(name: "Priority", arg: 1, scope: !7737, file: !608, line: 1883, type: !21)
!7742 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !7737, file: !608, line: 1883, type: !21)
!7743 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !7737, file: !608, line: 1883, type: !2754)
!7744 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !7737, file: !608, line: 1883, type: !2754)
!7745 = !DILocalVariable(name: "PriorityGroupTmp", scope: !7737, file: !608, line: 1885, type: !21)
!7746 = !DILocalVariable(name: "PreemptPriorityBits", scope: !7737, file: !608, line: 1886, type: !21)
!7747 = !DILocalVariable(name: "SubPriorityBits", scope: !7737, file: !608, line: 1887, type: !21)
!7748 = !DILocation(line: 0, scope: !7737)
!7749 = !DILocation(line: 1885, column: 46, scope: !7737)
!7750 = !DILocation(line: 1889, column: 31, scope: !7737)
!7751 = !DILocation(line: 1889, column: 25, scope: !7737)
!7752 = !DILocation(line: 1890, column: 25, scope: !7737)
!7753 = !DILocation(line: 1892, column: 33, scope: !7737)
!7754 = !DILocation(line: 1892, column: 97, scope: !7737)
!7755 = !DILocation(line: 1892, column: 53, scope: !7737)
!7756 = !DILocation(line: 1892, column: 21, scope: !7737)
!7757 = !DILocation(line: 1893, column: 97, scope: !7737)
!7758 = !DILocation(line: 1893, column: 53, scope: !7737)
!7759 = !DILocation(line: 1893, column: 21, scope: !7737)
!7760 = !DILocation(line: 1894, column: 1, scope: !7737)
!7761 = distinct !DISubprogram(name: "HAL_NVIC_SetPendingIRQ", scope: !7431, file: !7431, line: 386, type: !7503, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7762)
!7762 = !{!7763}
!7763 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7761, file: !7431, line: 386, type: !7453)
!7764 = !DILocation(line: 0, scope: !7761)
!7765 = !DILocation(line: 392, column: 3, scope: !7761)
!7766 = !DILocation(line: 393, column: 1, scope: !7761)
!7767 = distinct !DISubprogram(name: "__NVIC_SetPendingIRQ", scope: !608, file: !608, line: 1755, type: !7503, scopeLine: 1756, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7768)
!7768 = !{!7769}
!7769 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7767, file: !608, line: 1755, type: !7453)
!7770 = !DILocation(line: 0, scope: !7767)
!7771 = !DILocation(line: 1757, column: 23, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7767, file: !608, line: 1757, column: 7)
!7773 = !DILocation(line: 1757, column: 7, scope: !7767)
!7774 = !DILocation(line: 1759, column: 81, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7772, file: !608, line: 1758, column: 3)
!7776 = !DILocation(line: 1759, column: 60, scope: !7775)
!7777 = !DILocation(line: 1759, column: 34, scope: !7775)
!7778 = !DILocation(line: 1759, column: 5, scope: !7775)
!7779 = !DILocation(line: 1759, column: 43, scope: !7775)
!7780 = !DILocation(line: 1760, column: 3, scope: !7775)
!7781 = !DILocation(line: 1761, column: 1, scope: !7767)
!7782 = distinct !DISubprogram(name: "HAL_NVIC_GetPendingIRQ", scope: !7431, file: !7431, line: 404, type: !7728, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7783)
!7783 = !{!7784}
!7784 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7782, file: !7431, line: 404, type: !7453)
!7785 = !DILocation(line: 0, scope: !7782)
!7786 = !DILocation(line: 410, column: 10, scope: !7782)
!7787 = !DILocation(line: 410, column: 3, scope: !7782)
!7788 = distinct !DISubprogram(name: "__NVIC_GetPendingIRQ", scope: !608, file: !608, line: 1736, type: !7728, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7789)
!7789 = !{!7790}
!7790 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7788, file: !608, line: 1736, type: !7453)
!7791 = !DILocation(line: 0, scope: !7788)
!7792 = !DILocation(line: 1738, column: 23, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7788, file: !608, line: 1738, column: 7)
!7794 = !DILocation(line: 1738, column: 7, scope: !7788)
!7795 = !DILocation(line: 1740, column: 54, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7793, file: !608, line: 1739, column: 3)
!7797 = !DILocation(line: 1740, column: 25, scope: !7796)
!7798 = !DILocation(line: 1740, column: 91, scope: !7796)
!7799 = !DILocation(line: 1740, column: 23, scope: !7796)
!7800 = !DILocation(line: 1740, column: 5, scope: !7796)
!7801 = !DILocation(line: 0, scope: !7793)
!7802 = !DILocation(line: 1746, column: 1, scope: !7788)
!7803 = distinct !DISubprogram(name: "HAL_NVIC_ClearPendingIRQ", scope: !7431, file: !7431, line: 420, type: !7503, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7804)
!7804 = !{!7805}
!7805 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7803, file: !7431, line: 420, type: !7453)
!7806 = !DILocation(line: 0, scope: !7803)
!7807 = !DILocation(line: 426, column: 3, scope: !7803)
!7808 = !DILocation(line: 427, column: 1, scope: !7803)
!7809 = distinct !DISubprogram(name: "__NVIC_ClearPendingIRQ", scope: !608, file: !608, line: 1770, type: !7503, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7810)
!7810 = !{!7811}
!7811 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7809, file: !608, line: 1770, type: !7453)
!7812 = !DILocation(line: 0, scope: !7809)
!7813 = !DILocation(line: 1772, column: 23, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7809, file: !608, line: 1772, column: 7)
!7815 = !DILocation(line: 1772, column: 7, scope: !7809)
!7816 = !DILocation(line: 1774, column: 81, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7814, file: !608, line: 1773, column: 3)
!7818 = !DILocation(line: 1774, column: 60, scope: !7817)
!7819 = !DILocation(line: 1774, column: 34, scope: !7817)
!7820 = !DILocation(line: 1774, column: 5, scope: !7817)
!7821 = !DILocation(line: 1774, column: 43, scope: !7817)
!7822 = !DILocation(line: 1775, column: 3, scope: !7817)
!7823 = !DILocation(line: 1776, column: 1, scope: !7809)
!7824 = distinct !DISubprogram(name: "HAL_NVIC_GetActive", scope: !7431, file: !7431, line: 437, type: !7728, scopeLine: 438, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7825)
!7825 = !{!7826}
!7826 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7824, file: !7431, line: 437, type: !7453)
!7827 = !DILocation(line: 0, scope: !7824)
!7828 = !DILocation(line: 443, column: 10, scope: !7824)
!7829 = !DILocation(line: 443, column: 3, scope: !7824)
!7830 = distinct !DISubprogram(name: "__NVIC_GetActive", scope: !608, file: !608, line: 1787, type: !7728, scopeLine: 1788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7831)
!7831 = !{!7832}
!7832 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7830, file: !608, line: 1787, type: !7453)
!7833 = !DILocation(line: 0, scope: !7830)
!7834 = !DILocation(line: 1789, column: 23, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7830, file: !608, line: 1789, column: 7)
!7836 = !DILocation(line: 1789, column: 7, scope: !7830)
!7837 = !DILocation(line: 1791, column: 54, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7835, file: !608, line: 1790, column: 3)
!7839 = !DILocation(line: 1791, column: 25, scope: !7838)
!7840 = !DILocation(line: 1791, column: 91, scope: !7838)
!7841 = !DILocation(line: 1791, column: 23, scope: !7838)
!7842 = !DILocation(line: 1791, column: 5, scope: !7838)
!7843 = !DILocation(line: 0, scope: !7835)
!7844 = !DILocation(line: 1797, column: 1, scope: !7830)
!7845 = distinct !DISubprogram(name: "HAL_SYSTICK_CLKSourceConfig", scope: !7431, file: !7431, line: 454, type: !2236, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !7846)
!7846 = !{!7847}
!7847 = !DILocalVariable(name: "CLKSource", arg: 1, scope: !7845, file: !7431, line: 454, type: !21)
!7848 = !DILocation(line: 0, scope: !7845)
!7849 = !DILocation(line: 458, column: 17, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7845, file: !7431, line: 458, column: 7)
!7851 = !DILocation(line: 0, scope: !7850)
!7852 = !DILocation(line: 458, column: 7, scope: !7845)
!7853 = !DILocation(line: 466, column: 1, scope: !7845)
!7854 = distinct !DISubprogram(name: "HAL_SYSTICK_IRQHandler", scope: !7431, file: !7431, line: 472, type: !1054, scopeLine: 473, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !1056)
!7855 = !DILocation(line: 474, column: 3, scope: !7854)
!7856 = !DILocation(line: 475, column: 1, scope: !7854)
!7857 = distinct !DISubprogram(name: "HAL_SYSTICK_Callback", scope: !7431, file: !7431, line: 481, type: !1054, scopeLine: 482, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !1056)
!7858 = !DILocation(line: 486, column: 1, scope: !7857)
!7859 = distinct !DISubprogram(name: "HAL_GPIO_Init", scope: !7860, file: !7860, line: 171, type: !7861, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !7872)
!7860 = !DIFile(filename: "components/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_gpio.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "4ea3e82eda82f1384803ff9f4a532511")
!7861 = !DISubroutineType(types: !7862)
!7862 = !{null, !887, !7863}
!7863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7864, size: 32)
!7864 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !91, line: 63, baseType: !7865)
!7865 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !91, line: 47, size: 160, elements: !7866)
!7866 = !{!7867, !7868, !7869, !7870, !7871}
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !7865, file: !91, line: 49, baseType: !21, size: 32)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !7865, file: !91, line: 52, baseType: !21, size: 32, offset: 32)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !7865, file: !91, line: 55, baseType: !21, size: 32, offset: 64)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !7865, file: !91, line: 58, baseType: !21, size: 32, offset: 96)
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !7865, file: !91, line: 61, baseType: !21, size: 32, offset: 128)
!7872 = !{!7873, !7874, !7875, !7876, !7877, !7878, !7879}
!7873 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7859, file: !7860, line: 171, type: !887)
!7874 = !DILocalVariable(name: "GPIO_Init", arg: 2, scope: !7859, file: !7860, line: 171, type: !7863)
!7875 = !DILocalVariable(name: "position", scope: !7859, file: !7860, line: 173, type: !21)
!7876 = !DILocalVariable(name: "ioposition", scope: !7859, file: !7860, line: 174, type: !21)
!7877 = !DILocalVariable(name: "iocurrent", scope: !7859, file: !7860, line: 175, type: !21)
!7878 = !DILocalVariable(name: "temp", scope: !7859, file: !7860, line: 176, type: !21)
!7879 = !DILocalVariable(name: "tmpreg", scope: !7880, file: !7860, line: 243, type: !20)
!7880 = distinct !DILexicalBlock(scope: !7881, file: !7860, line: 243, column: 9)
!7881 = distinct !DILexicalBlock(scope: !7882, file: !7860, line: 241, column: 7)
!7882 = distinct !DILexicalBlock(scope: !7883, file: !7860, line: 240, column: 10)
!7883 = distinct !DILexicalBlock(scope: !7884, file: !7860, line: 193, column: 5)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !7860, line: 192, column: 8)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !7860, line: 186, column: 3)
!7886 = distinct !DILexicalBlock(scope: !7887, file: !7860, line: 185, column: 3)
!7887 = distinct !DILexicalBlock(scope: !7859, file: !7860, line: 185, column: 3)
!7888 = !DILocation(line: 0, scope: !7859)
!7889 = !DILocation(line: 185, column: 3, scope: !7887)
!7890 = !DILocation(line: 188, column: 24, scope: !7885)
!7891 = !DILocation(line: 190, column: 39, scope: !7885)
!7892 = !DILocation(line: 190, column: 44, scope: !7885)
!7893 = !DILocation(line: 192, column: 18, scope: !7884)
!7894 = !DILocation(line: 192, column: 8, scope: !7885)
!7895 = !DILocation(line: 196, column: 22, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7883, file: !7860, line: 196, column: 10)
!7897 = !DILocation(line: 196, column: 51, scope: !7896)
!7898 = !DILocation(line: 216, column: 48, scope: !7883)
!7899 = !DILocation(line: 216, column: 35, scope: !7883)
!7900 = !DILocation(line: 216, column: 15, scope: !7883)
!7901 = !DILocation(line: 202, column: 23, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7896, file: !7860, line: 198, column: 7)
!7903 = !{!7904, !1020, i64 8}
!7904 = !{!"", !1020, i64 0, !1020, i64 4, !1020, i64 8, !1020, i64 12, !1020, i64 16, !1020, i64 20, !1020, i64 24, !1020, i64 28, !1016, i64 32}
!7905 = !DILocation(line: 203, column: 55, scope: !7902)
!7906 = !DILocation(line: 203, column: 42, scope: !7902)
!7907 = !DILocation(line: 203, column: 17, scope: !7902)
!7908 = !DILocation(line: 203, column: 14, scope: !7902)
!7909 = !DILocation(line: 204, column: 29, scope: !7902)
!7910 = !DILocation(line: 204, column: 35, scope: !7902)
!7911 = !DILocation(line: 204, column: 14, scope: !7902)
!7912 = !DILocation(line: 205, column: 24, scope: !7902)
!7913 = !DILocation(line: 208, column: 23, scope: !7902)
!7914 = !{!7904, !1020, i64 4}
!7915 = !DILocation(line: 209, column: 17, scope: !7902)
!7916 = !DILocation(line: 209, column: 14, scope: !7902)
!7917 = !DILocation(line: 210, column: 56, scope: !7902)
!7918 = !DILocation(line: 210, column: 63, scope: !7902)
!7919 = !DILocation(line: 210, column: 14, scope: !7902)
!7920 = !DILocation(line: 211, column: 23, scope: !7902)
!7921 = !DILocation(line: 212, column: 8, scope: !7902)
!7922 = !DILocation(line: 215, column: 21, scope: !7883)
!7923 = !{!7904, !1020, i64 12}
!7924 = !DILocation(line: 216, column: 12, scope: !7883)
!7925 = !DILocation(line: 217, column: 28, scope: !7883)
!7926 = !DILocation(line: 217, column: 34, scope: !7883)
!7927 = !DILocation(line: 217, column: 12, scope: !7883)
!7928 = !DILocation(line: 218, column: 20, scope: !7883)
!7929 = !DILocation(line: 221, column: 47, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7883, file: !7860, line: 221, column: 10)
!7931 = !DILocation(line: 226, column: 36, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7930, file: !7860, line: 222, column: 7)
!7933 = !DILocation(line: 226, column: 16, scope: !7932)
!7934 = !DILocation(line: 227, column: 57, scope: !7932)
!7935 = !DILocation(line: 227, column: 24, scope: !7932)
!7936 = !DILocation(line: 227, column: 17, scope: !7932)
!7937 = !DILocation(line: 227, column: 14, scope: !7932)
!7938 = !DILocation(line: 228, column: 40, scope: !7932)
!7939 = !DILocation(line: 228, column: 51, scope: !7932)
!7940 = !DILocation(line: 228, column: 14, scope: !7932)
!7941 = !DILocation(line: 229, column: 36, scope: !7932)
!7942 = !DILocation(line: 235, column: 28, scope: !7883)
!7943 = !DILocation(line: 230, column: 7, scope: !7932)
!7944 = !DILocation(line: 233, column: 21, scope: !7883)
!7945 = !{!7904, !1020, i64 0}
!7946 = !DILocation(line: 234, column: 12, scope: !7883)
!7947 = !DILocation(line: 235, column: 33, scope: !7883)
!7948 = !DILocation(line: 235, column: 46, scope: !7883)
!7949 = !DILocation(line: 235, column: 12, scope: !7883)
!7950 = !DILocation(line: 236, column: 20, scope: !7883)
!7951 = !DILocation(line: 240, column: 27, scope: !7882)
!7952 = !DILocation(line: 240, column: 40, scope: !7882)
!7953 = !DILocation(line: 240, column: 10, scope: !7883)
!7954 = !DILocation(line: 243, column: 9, scope: !7880)
!7955 = !{!1034, !1020, i64 68}
!7956 = !DILocation(line: 243, column: 9, scope: !7881)
!7957 = !DILocation(line: 245, column: 40, scope: !7881)
!7958 = !DILocation(line: 245, column: 16, scope: !7881)
!7959 = !DILocation(line: 246, column: 32, scope: !7881)
!7960 = !DILocation(line: 246, column: 25, scope: !7881)
!7961 = !DILocation(line: 246, column: 17, scope: !7881)
!7962 = !DILocation(line: 246, column: 14, scope: !7881)
!7963 = !DILocation(line: 247, column: 52, scope: !7881)
!7964 = !DILocation(line: 247, column: 14, scope: !7881)
!7965 = !DILocation(line: 248, column: 40, scope: !7881)
!7966 = !DILocation(line: 251, column: 22, scope: !7881)
!7967 = !{!1323, !1020, i64 0}
!7968 = !DILocation(line: 252, column: 17, scope: !7881)
!7969 = !DILocation(line: 252, column: 14, scope: !7881)
!7970 = !DILocation(line: 253, column: 24, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7881, file: !7860, line: 253, column: 12)
!7972 = !DILocation(line: 253, column: 29, scope: !7971)
!7973 = !DILocation(line: 253, column: 45, scope: !7971)
!7974 = !DILocation(line: 253, column: 12, scope: !7881)
!7975 = !DILocation(line: 257, column: 19, scope: !7881)
!7976 = !DILocation(line: 259, column: 22, scope: !7881)
!7977 = !{!1323, !1020, i64 4}
!7978 = !DILocation(line: 260, column: 14, scope: !7881)
!7979 = !DILocation(line: 261, column: 29, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7881, file: !7860, line: 261, column: 12)
!7981 = !DILocation(line: 261, column: 46, scope: !7980)
!7982 = !DILocation(line: 261, column: 12, scope: !7881)
!7983 = !DILocation(line: 265, column: 19, scope: !7881)
!7984 = !DILocation(line: 268, column: 22, scope: !7881)
!7985 = !{!1323, !1020, i64 8}
!7986 = !DILocation(line: 269, column: 14, scope: !7881)
!7987 = !DILocation(line: 270, column: 29, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7881, file: !7860, line: 270, column: 12)
!7989 = !DILocation(line: 270, column: 44, scope: !7988)
!7990 = !DILocation(line: 270, column: 12, scope: !7881)
!7991 = !DILocation(line: 274, column: 20, scope: !7881)
!7992 = !DILocation(line: 276, column: 22, scope: !7881)
!7993 = !{!1323, !1020, i64 12}
!7994 = !DILocation(line: 277, column: 14, scope: !7881)
!7995 = !DILocation(line: 278, column: 29, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7881, file: !7860, line: 278, column: 12)
!7997 = !DILocation(line: 278, column: 45, scope: !7996)
!7998 = !DILocation(line: 278, column: 12, scope: !7881)
!7999 = !DILocation(line: 282, column: 20, scope: !7881)
!8000 = !DILocation(line: 283, column: 7, scope: !7881)
!8001 = !DILocation(line: 185, column: 54, scope: !7886)
!8002 = !DILocation(line: 185, column: 31, scope: !7886)
!8003 = distinct !{!8003, !7889, !8004, !1525}
!8004 = !DILocation(line: 285, column: 3, scope: !7887)
!8005 = !DILocation(line: 286, column: 1, scope: !7859)
!8006 = distinct !DISubprogram(name: "HAL_GPIO_DeInit", scope: !7860, file: !7860, line: 296, type: !8007, scopeLine: 297, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8009)
!8007 = !DISubroutineType(types: !8008)
!8008 = !{null, !887, !21}
!8009 = !{!8010, !8011, !8012, !8013, !8014, !8015}
!8010 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8006, file: !7860, line: 296, type: !887)
!8011 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !8006, file: !7860, line: 296, type: !21)
!8012 = !DILocalVariable(name: "position", scope: !8006, file: !7860, line: 298, type: !21)
!8013 = !DILocalVariable(name: "ioposition", scope: !8006, file: !7860, line: 299, type: !21)
!8014 = !DILocalVariable(name: "iocurrent", scope: !8006, file: !7860, line: 300, type: !21)
!8015 = !DILocalVariable(name: "tmp", scope: !8006, file: !7860, line: 301, type: !21)
!8016 = !DILocation(line: 0, scope: !8006)
!8017 = !DILocation(line: 307, column: 3, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8006, file: !7860, line: 307, column: 3)
!8019 = !DILocation(line: 310, column: 24, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8021, file: !7860, line: 308, column: 3)
!8021 = distinct !DILexicalBlock(scope: !8018, file: !7860, line: 307, column: 3)
!8022 = !DILocation(line: 312, column: 28, scope: !8020)
!8023 = !DILocation(line: 314, column: 18, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8020, file: !7860, line: 314, column: 8)
!8025 = !DILocation(line: 314, column: 8, scope: !8020)
!8026 = !DILocation(line: 317, column: 37, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8024, file: !7860, line: 315, column: 5)
!8028 = !DILocation(line: 317, column: 13, scope: !8027)
!8029 = !DILocation(line: 318, column: 28, scope: !8027)
!8030 = !DILocation(line: 318, column: 21, scope: !8027)
!8031 = !DILocation(line: 318, column: 11, scope: !8027)
!8032 = !DILocation(line: 319, column: 52, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8027, file: !7860, line: 319, column: 10)
!8034 = !DILocation(line: 319, column: 14, scope: !8033)
!8035 = !DILocation(line: 0, scope: !8027)
!8036 = !DILocation(line: 319, column: 10, scope: !8027)
!8037 = !DILocation(line: 322, column: 19, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8033, file: !7860, line: 320, column: 7)
!8039 = !DILocation(line: 323, column: 19, scope: !8038)
!8040 = !DILocation(line: 326, column: 20, scope: !8038)
!8041 = !DILocation(line: 327, column: 20, scope: !8038)
!8042 = !DILocation(line: 331, column: 43, scope: !8038)
!8043 = !DILocation(line: 331, column: 40, scope: !8038)
!8044 = !DILocation(line: 332, column: 7, scope: !8038)
!8045 = !DILocation(line: 336, column: 56, scope: !8027)
!8046 = !DILocation(line: 336, column: 43, scope: !8027)
!8047 = !DILocation(line: 336, column: 23, scope: !8027)
!8048 = !DILocation(line: 336, column: 20, scope: !8027)
!8049 = !DILocation(line: 339, column: 77, scope: !8027)
!8050 = !DILocation(line: 339, column: 44, scope: !8027)
!8051 = !DILocation(line: 339, column: 37, scope: !8027)
!8052 = !DILocation(line: 339, column: 27, scope: !8027)
!8053 = !DILocation(line: 339, column: 7, scope: !8027)
!8054 = !DILocation(line: 339, column: 34, scope: !8027)
!8055 = !DILocation(line: 342, column: 20, scope: !8027)
!8056 = !DILocation(line: 345, column: 22, scope: !8027)
!8057 = !DILocation(line: 348, column: 22, scope: !8027)
!8058 = !DILocation(line: 349, column: 5, scope: !8027)
!8059 = !DILocation(line: 307, column: 54, scope: !8021)
!8060 = !DILocation(line: 307, column: 31, scope: !8021)
!8061 = distinct !{!8061, !8017, !8062, !1525}
!8062 = !DILocation(line: 350, column: 3, scope: !8018)
!8063 = !DILocation(line: 351, column: 1, scope: !8006)
!8064 = distinct !DISubprogram(name: "HAL_GPIO_ReadPin", scope: !7860, file: !7860, line: 377, type: !8065, scopeLine: 378, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8068)
!8065 = !DISubroutineType(types: !8066)
!8066 = !{!8067, !887, !36}
!8067 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PinState", file: !91, line: 72, baseType: !836)
!8068 = !{!8069, !8070, !8071}
!8069 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8064, file: !7860, line: 377, type: !887)
!8070 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !8064, file: !7860, line: 377, type: !36)
!8071 = !DILocalVariable(name: "bitstatus", scope: !8064, file: !7860, line: 379, type: !8067)
!8072 = !DILocation(line: 0, scope: !8064)
!8073 = !DILocation(line: 384, column: 14, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8064, file: !7860, line: 384, column: 6)
!8075 = !{!7904, !1020, i64 16}
!8076 = !DILocation(line: 384, column: 20, scope: !8074)
!8077 = !DILocation(line: 384, column: 18, scope: !8074)
!8078 = !DILocation(line: 384, column: 30, scope: !8074)
!8079 = !DILocation(line: 392, column: 3, scope: !8064)
!8080 = distinct !DISubprogram(name: "HAL_GPIO_WritePin", scope: !7860, file: !7860, line: 412, type: !8081, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8083)
!8081 = !DISubroutineType(types: !8082)
!8082 = !{null, !887, !36, !8067}
!8083 = !{!8084, !8085, !8086}
!8084 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8080, file: !7860, line: 412, type: !887)
!8085 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !8080, file: !7860, line: 412, type: !36)
!8086 = !DILocalVariable(name: "PinState", arg: 3, scope: !8080, file: !7860, line: 412, type: !8067)
!8087 = !DILocation(line: 0, scope: !8080)
!8088 = !DILocation(line: 418, column: 15, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8080, file: !7860, line: 418, column: 6)
!8090 = !DILocation(line: 0, scope: !8089)
!8091 = !DILocation(line: 418, column: 6, scope: !8080)
!8092 = !{!7904, !1020, i64 24}
!8093 = !DILocation(line: 426, column: 1, scope: !8080)
!8094 = distinct !DISubprogram(name: "HAL_GPIO_TogglePin", scope: !7860, file: !7860, line: 435, type: !8095, scopeLine: 436, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8097)
!8095 = !DISubroutineType(types: !8096)
!8096 = !{null, !887, !36}
!8097 = !{!8098, !8099}
!8098 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8094, file: !7860, line: 435, type: !887)
!8099 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !8094, file: !7860, line: 435, type: !36)
!8100 = !DILocation(line: 0, scope: !8094)
!8101 = !DILocation(line: 440, column: 15, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8094, file: !7860, line: 440, column: 7)
!8103 = !{!7904, !1020, i64 20}
!8104 = !DILocation(line: 440, column: 21, scope: !8102)
!8105 = !DILocation(line: 440, column: 19, scope: !8102)
!8106 = !DILocation(line: 440, column: 31, scope: !8102)
!8107 = !DILocation(line: 440, column: 7, scope: !8094)
!8108 = !DILocation(line: 0, scope: !8102)
!8109 = !DILocation(line: 448, column: 1, scope: !8094)
!8110 = distinct !DISubprogram(name: "HAL_GPIO_LockPin", scope: !7860, file: !7860, line: 461, type: !8111, scopeLine: 462, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8113)
!8111 = !DISubroutineType(types: !8112)
!8112 = !{!7265, !887, !36}
!8113 = !{!8114, !8115, !8116}
!8114 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8110, file: !7860, line: 461, type: !887)
!8115 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !8110, file: !7860, line: 461, type: !36)
!8116 = !DILocalVariable(name: "tmp", scope: !8110, file: !7860, line: 463, type: !20)
!8117 = !DILocation(line: 0, scope: !8110)
!8118 = !DILocation(line: 463, column: 3, scope: !8110)
!8119 = !DILocation(line: 463, column: 17, scope: !8110)
!8120 = !DILocation(line: 469, column: 10, scope: !8110)
!8121 = !DILocation(line: 469, column: 7, scope: !8110)
!8122 = !DILocation(line: 471, column: 17, scope: !8110)
!8123 = !DILocation(line: 471, column: 10, scope: !8110)
!8124 = !DILocation(line: 471, column: 15, scope: !8110)
!8125 = !{!7904, !1020, i64 28}
!8126 = !DILocation(line: 473, column: 15, scope: !8110)
!8127 = !DILocation(line: 475, column: 17, scope: !8110)
!8128 = !DILocation(line: 475, column: 15, scope: !8110)
!8129 = !DILocation(line: 477, column: 16, scope: !8110)
!8130 = !DILocation(line: 477, column: 7, scope: !8110)
!8131 = !DILocation(line: 480, column: 13, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8110, file: !7860, line: 480, column: 5)
!8133 = !DILocation(line: 0, scope: !8132)
!8134 = !DILocation(line: 488, column: 1, scope: !8110)
!8135 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_IRQHandler", scope: !7860, file: !7860, line: 495, type: !8136, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8138)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{null, !36}
!8138 = !{!8139}
!8139 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !8135, file: !7860, line: 495, type: !36)
!8140 = !DILocation(line: 0, scope: !8135)
!8141 = !DILocation(line: 498, column: 6, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8135, file: !7860, line: 498, column: 6)
!8143 = !{!1323, !1020, i64 20}
!8144 = !DILocation(line: 498, column: 39, scope: !8142)
!8145 = !DILocation(line: 498, column: 6, scope: !8135)
!8146 = !DILocation(line: 500, column: 5, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8142, file: !7860, line: 499, column: 3)
!8148 = !DILocation(line: 501, column: 5, scope: !8147)
!8149 = !DILocation(line: 502, column: 3, scope: !8147)
!8150 = !DILocation(line: 503, column: 1, scope: !8135)
!8151 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_Callback", scope: !7860, file: !7860, line: 510, type: !8136, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !833, retainedNodes: !8152)
!8152 = !{!8153}
!8153 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !8151, file: !7860, line: 510, type: !36)
!8154 = !DILocation(line: 0, scope: !8151)
!8155 = !DILocation(line: 517, column: 1, scope: !8151)
!8156 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !8157, file: !8157, line: 202, type: !7263, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !1056)
!8157 = !DIFile(filename: "components/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "ef16e68bea181c9d4db7aec75a83c72a")
!8158 = !DILocation(line: 204, column: 3, scope: !8156)
!8159 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !8157, file: !8157, line: 221, type: !8160, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !8182)
!8160 = !DISubroutineType(types: !8161)
!8161 = !{!7265, !8162}
!8162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8163, size: 32)
!8163 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !1275, line: 72, baseType: !8164)
!8164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1275, line: 51, size: 384, elements: !8165)
!8165 = !{!8166, !8167, !8168, !8169, !8170, !8171, !8172}
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !8164, file: !1275, line: 53, baseType: !21, size: 32)
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !8164, file: !1275, line: 56, baseType: !21, size: 32, offset: 32)
!8168 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !8164, file: !1275, line: 59, baseType: !21, size: 32, offset: 64)
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !8164, file: !1275, line: 62, baseType: !21, size: 32, offset: 96)
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !8164, file: !1275, line: 65, baseType: !21, size: 32, offset: 128)
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !8164, file: !1275, line: 68, baseType: !21, size: 32, offset: 160)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !8164, file: !1275, line: 71, baseType: !8173, size: 192, offset: 192)
!8173 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !1286, line: 75, baseType: !8174)
!8174 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1286, line: 47, size: 192, elements: !8175)
!8175 = !{!8176, !8177, !8178, !8179, !8180, !8181}
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !8174, file: !1286, line: 49, baseType: !21, size: 32)
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !8174, file: !1286, line: 52, baseType: !21, size: 32, offset: 32)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !8174, file: !1286, line: 55, baseType: !21, size: 32, offset: 64)
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !8174, file: !1286, line: 58, baseType: !21, size: 32, offset: 96)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !8174, file: !1286, line: 62, baseType: !21, size: 32, offset: 128)
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !8174, file: !1286, line: 65, baseType: !21, size: 32, offset: 160)
!8182 = !{!8183, !8184, !8185, !8186, !8190}
!8183 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !8159, file: !8157, line: 221, type: !8162)
!8184 = !DILocalVariable(name: "tickstart", scope: !8159, file: !8157, line: 223, type: !21)
!8185 = !DILocalVariable(name: "pll_config", scope: !8159, file: !8157, line: 223, type: !21)
!8186 = !DILocalVariable(name: "pwrclkchanged", scope: !8187, file: !8157, line: 393, type: !8189)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !8157, line: 392, column: 3)
!8188 = distinct !DILexicalBlock(scope: !8159, file: !8157, line: 391, column: 6)
!8189 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !554, line: 205, baseType: !748)
!8190 = !DILocalVariable(name: "tmpreg", scope: !8191, file: !8157, line: 402, type: !20)
!8191 = distinct !DILexicalBlock(scope: !8192, file: !8157, line: 402, column: 7)
!8192 = distinct !DILexicalBlock(scope: !8193, file: !8157, line: 401, column: 5)
!8193 = distinct !DILexicalBlock(scope: !8187, file: !8157, line: 400, column: 8)
!8194 = !DILocation(line: 0, scope: !8159)
!8195 = !DILocation(line: 226, column: 24, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8159, file: !8157, line: 226, column: 6)
!8197 = !DILocation(line: 226, column: 6, scope: !8159)
!8198 = !DILocation(line: 234, column: 27, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8159, file: !8157, line: 234, column: 6)
!8200 = !DILocation(line: 234, column: 43, scope: !8199)
!8201 = !DILocation(line: 234, column: 69, scope: !8199)
!8202 = !DILocation(line: 234, column: 6, scope: !8159)
!8203 = !DILocation(line: 239, column: 9, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8205, file: !8157, line: 239, column: 8)
!8205 = distinct !DILexicalBlock(scope: !8199, file: !8157, line: 235, column: 3)
!8206 = !DILocation(line: 239, column: 39, scope: !8204)
!8207 = !DILocation(line: 239, column: 60, scope: !8204)
!8208 = !DILocation(line: 240, column: 9, scope: !8204)
!8209 = !DILocation(line: 240, column: 39, scope: !8204)
!8210 = !DILocation(line: 240, column: 60, scope: !8204)
!8211 = !DILocation(line: 240, column: 70, scope: !8204)
!8212 = !DILocation(line: 240, column: 78, scope: !8204)
!8213 = !DILocation(line: 240, column: 100, scope: !8204)
!8214 = !DILocation(line: 239, column: 8, scope: !8205)
!8215 = !DILocation(line: 242, column: 11, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8217, file: !8157, line: 242, column: 10)
!8217 = distinct !DILexicalBlock(scope: !8204, file: !8157, line: 241, column: 5)
!8218 = !{!1034, !1020, i64 0}
!8219 = !DILocation(line: 242, column: 57, scope: !8216)
!8220 = !DILocation(line: 242, column: 80, scope: !8216)
!8221 = !DILocation(line: 242, column: 89, scope: !8216)
!8222 = !DILocation(line: 242, column: 10, scope: !8217)
!8223 = !DILocation(line: 250, column: 7, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8225, file: !8157, line: 250, column: 7)
!8225 = distinct !DILexicalBlock(scope: !8226, file: !8157, line: 250, column: 7)
!8226 = distinct !DILexicalBlock(scope: !8204, file: !8157, line: 248, column: 5)
!8227 = !DILocation(line: 250, column: 7, scope: !8225)
!8228 = !DILocation(line: 250, column: 7, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8230, file: !8157, line: 250, column: 7)
!8230 = distinct !DILexicalBlock(scope: !8224, file: !8157, line: 250, column: 7)
!8231 = !DILocation(line: 250, column: 7, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8230, file: !8157, line: 250, column: 7)
!8233 = !DILocation(line: 253, column: 40, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8226, file: !8157, line: 253, column: 10)
!8235 = !DILocation(line: 253, column: 10, scope: !8226)
!8236 = !DILocation(line: 0, scope: !8224)
!8237 = !DILocation(line: 256, column: 21, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8234, file: !8157, line: 254, column: 7)
!8239 = !DILocation(line: 259, column: 9, scope: !8238)
!8240 = !DILocation(line: 259, column: 15, scope: !8238)
!8241 = !DILocation(line: 259, column: 51, scope: !8238)
!8242 = !DILocation(line: 261, column: 15, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8244, file: !8157, line: 261, column: 14)
!8244 = distinct !DILexicalBlock(scope: !8238, file: !8157, line: 260, column: 9)
!8245 = !DILocation(line: 261, column: 29, scope: !8243)
!8246 = !DILocation(line: 261, column: 43, scope: !8243)
!8247 = !DILocation(line: 261, column: 14, scope: !8244)
!8248 = distinct !{!8248, !8239, !8249, !1525}
!8249 = !DILocation(line: 265, column: 9, scope: !8238)
!8250 = !DILocation(line: 270, column: 21, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8234, file: !8157, line: 268, column: 7)
!8252 = !DILocation(line: 273, column: 9, scope: !8251)
!8253 = !DILocation(line: 273, column: 15, scope: !8251)
!8254 = !DILocation(line: 275, column: 15, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8256, file: !8157, line: 275, column: 14)
!8256 = distinct !DILexicalBlock(scope: !8251, file: !8157, line: 274, column: 9)
!8257 = !DILocation(line: 275, column: 29, scope: !8255)
!8258 = !DILocation(line: 275, column: 43, scope: !8255)
!8259 = !DILocation(line: 275, column: 14, scope: !8256)
!8260 = distinct !{!8260, !8252, !8261, !1525}
!8261 = !DILocation(line: 279, column: 9, scope: !8251)
!8262 = !DILocation(line: 284, column: 27, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8159, file: !8157, line: 284, column: 6)
!8264 = !DILocation(line: 284, column: 43, scope: !8263)
!8265 = !DILocation(line: 284, column: 69, scope: !8263)
!8266 = !DILocation(line: 284, column: 6, scope: !8159)
!8267 = !DILocation(line: 291, column: 9, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8269, file: !8157, line: 291, column: 8)
!8269 = distinct !DILexicalBlock(scope: !8263, file: !8157, line: 285, column: 3)
!8270 = !DILocation(line: 291, column: 39, scope: !8268)
!8271 = !DILocation(line: 291, column: 60, scope: !8268)
!8272 = !DILocation(line: 292, column: 9, scope: !8268)
!8273 = !DILocation(line: 292, column: 39, scope: !8268)
!8274 = !DILocation(line: 292, column: 60, scope: !8268)
!8275 = !DILocation(line: 292, column: 70, scope: !8268)
!8276 = !DILocation(line: 292, column: 78, scope: !8268)
!8277 = !DILocation(line: 292, column: 100, scope: !8268)
!8278 = !DILocation(line: 291, column: 8, scope: !8269)
!8279 = !DILocation(line: 295, column: 11, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !8157, line: 295, column: 10)
!8281 = distinct !DILexicalBlock(scope: !8268, file: !8157, line: 293, column: 5)
!8282 = !DILocation(line: 295, column: 57, scope: !8280)
!8283 = !DILocation(line: 295, column: 80, scope: !8280)
!8284 = !{!1322, !1020, i64 12}
!8285 = !DILocation(line: 295, column: 89, scope: !8280)
!8286 = !DILocation(line: 295, column: 10, scope: !8281)
!8287 = !DILocation(line: 309, column: 30, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8289, file: !8157, line: 309, column: 10)
!8289 = distinct !DILexicalBlock(scope: !8268, file: !8157, line: 307, column: 5)
!8290 = !DILocation(line: 309, column: 39, scope: !8288)
!8291 = !DILocation(line: 309, column: 10, scope: !8289)
!8292 = !DILocation(line: 312, column: 9, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8288, file: !8157, line: 310, column: 7)
!8294 = !DILocation(line: 315, column: 21, scope: !8293)
!8295 = !DILocation(line: 318, column: 9, scope: !8293)
!8296 = !DILocation(line: 318, column: 15, scope: !8293)
!8297 = !DILocation(line: 318, column: 51, scope: !8293)
!8298 = !DILocation(line: 320, column: 15, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8300, file: !8157, line: 320, column: 14)
!8300 = distinct !DILexicalBlock(scope: !8293, file: !8157, line: 319, column: 9)
!8301 = !DILocation(line: 320, column: 29, scope: !8299)
!8302 = !DILocation(line: 320, column: 43, scope: !8299)
!8303 = !DILocation(line: 320, column: 14, scope: !8300)
!8304 = distinct !{!8304, !8295, !8305, !1525}
!8305 = !DILocation(line: 324, column: 9, scope: !8293)
!8306 = !DILocation(line: 332, column: 9, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8288, file: !8157, line: 330, column: 7)
!8308 = !DILocation(line: 335, column: 21, scope: !8307)
!8309 = !DILocation(line: 338, column: 9, scope: !8307)
!8310 = !DILocation(line: 338, column: 15, scope: !8307)
!8311 = !DILocation(line: 340, column: 15, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8313, file: !8157, line: 340, column: 14)
!8313 = distinct !DILexicalBlock(scope: !8307, file: !8157, line: 339, column: 9)
!8314 = !DILocation(line: 340, column: 29, scope: !8312)
!8315 = !DILocation(line: 340, column: 43, scope: !8312)
!8316 = !DILocation(line: 340, column: 14, scope: !8313)
!8317 = distinct !{!8317, !8309, !8318, !1525}
!8318 = !DILocation(line: 344, column: 9, scope: !8307)
!8319 = !DILocation(line: 0, scope: !8268)
!8320 = !{!1322, !1020, i64 16}
!8321 = !DILocation(line: 349, column: 27, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !8159, file: !8157, line: 349, column: 6)
!8323 = !DILocation(line: 349, column: 43, scope: !8322)
!8324 = !DILocation(line: 349, column: 69, scope: !8322)
!8325 = !DILocation(line: 349, column: 6, scope: !8159)
!8326 = !DILocation(line: 355, column: 28, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8328, file: !8157, line: 355, column: 8)
!8328 = distinct !DILexicalBlock(scope: !8322, file: !8157, line: 350, column: 3)
!8329 = !{!1322, !1020, i64 20}
!8330 = !DILocation(line: 355, column: 37, scope: !8327)
!8331 = !DILocation(line: 355, column: 8, scope: !8328)
!8332 = !DILocation(line: 358, column: 7, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8327, file: !8157, line: 356, column: 5)
!8334 = !DILocation(line: 361, column: 19, scope: !8333)
!8335 = !DILocation(line: 364, column: 7, scope: !8333)
!8336 = !DILocation(line: 364, column: 13, scope: !8333)
!8337 = !{!1034, !1020, i64 116}
!8338 = !DILocation(line: 364, column: 49, scope: !8333)
!8339 = !DILocation(line: 366, column: 13, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8341, file: !8157, line: 366, column: 12)
!8341 = distinct !DILexicalBlock(scope: !8333, file: !8157, line: 365, column: 7)
!8342 = !DILocation(line: 366, column: 27, scope: !8340)
!8343 = !DILocation(line: 366, column: 41, scope: !8340)
!8344 = !DILocation(line: 366, column: 12, scope: !8341)
!8345 = distinct !{!8345, !8335, !8346, !1525}
!8346 = !DILocation(line: 370, column: 7, scope: !8333)
!8347 = !DILocation(line: 375, column: 7, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8327, file: !8157, line: 373, column: 5)
!8349 = !DILocation(line: 378, column: 19, scope: !8348)
!8350 = !DILocation(line: 381, column: 7, scope: !8348)
!8351 = !DILocation(line: 381, column: 13, scope: !8348)
!8352 = !DILocation(line: 383, column: 13, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !8157, line: 383, column: 12)
!8354 = distinct !DILexicalBlock(scope: !8348, file: !8157, line: 382, column: 7)
!8355 = !DILocation(line: 383, column: 27, scope: !8353)
!8356 = !DILocation(line: 383, column: 41, scope: !8353)
!8357 = !DILocation(line: 383, column: 12, scope: !8354)
!8358 = distinct !{!8358, !8350, !8359, !1525}
!8359 = !DILocation(line: 387, column: 7, scope: !8348)
!8360 = !DILocation(line: 391, column: 27, scope: !8188)
!8361 = !DILocation(line: 391, column: 43, scope: !8188)
!8362 = !DILocation(line: 391, column: 69, scope: !8188)
!8363 = !DILocation(line: 391, column: 6, scope: !8159)
!8364 = !DILocation(line: 0, scope: !8187)
!8365 = !DILocation(line: 400, column: 8, scope: !8193)
!8366 = !DILocation(line: 400, column: 8, scope: !8187)
!8367 = !DILocation(line: 402, column: 7, scope: !8191)
!8368 = !DILocation(line: 402, column: 7, scope: !8192)
!8369 = !DILocation(line: 404, column: 5, scope: !8192)
!8370 = !DILocation(line: 406, column: 8, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8187, file: !8157, line: 406, column: 8)
!8372 = !DILocation(line: 406, column: 8, scope: !8187)
!8373 = !DILocation(line: 409, column: 7, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8371, file: !8157, line: 407, column: 5)
!8375 = !DILocation(line: 412, column: 19, scope: !8374)
!8376 = !DILocation(line: 414, column: 7, scope: !8374)
!8377 = !DILocation(line: 414, column: 13, scope: !8374)
!8378 = !DILocation(line: 416, column: 13, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8380, file: !8157, line: 416, column: 12)
!8380 = distinct !DILexicalBlock(scope: !8374, file: !8157, line: 415, column: 7)
!8381 = !DILocation(line: 416, column: 27, scope: !8379)
!8382 = !DILocation(line: 416, column: 40, scope: !8379)
!8383 = !DILocation(line: 416, column: 12, scope: !8380)
!8384 = distinct !{!8384, !8376, !8385, !1525}
!8385 = !DILocation(line: 420, column: 7, scope: !8374)
!8386 = !DILocation(line: 424, column: 5, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8388, file: !8157, line: 424, column: 5)
!8388 = distinct !DILexicalBlock(scope: !8187, file: !8157, line: 424, column: 5)
!8389 = !{!1322, !1020, i64 8}
!8390 = !DILocation(line: 424, column: 5, scope: !8388)
!8391 = !DILocation(line: 424, column: 5, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !8157, line: 424, column: 5)
!8393 = distinct !DILexicalBlock(scope: !8387, file: !8157, line: 424, column: 5)
!8394 = !{!1034, !1020, i64 112}
!8395 = !DILocation(line: 424, column: 5, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8393, file: !8157, line: 424, column: 5)
!8397 = !DILocation(line: 426, column: 38, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8187, file: !8157, line: 426, column: 8)
!8399 = !DILocation(line: 426, column: 8, scope: !8187)
!8400 = !DILocation(line: 0, scope: !8387)
!8401 = !DILocation(line: 429, column: 19, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8398, file: !8157, line: 427, column: 5)
!8403 = !DILocation(line: 432, column: 7, scope: !8402)
!8404 = !DILocation(line: 432, column: 13, scope: !8402)
!8405 = !DILocation(line: 432, column: 49, scope: !8402)
!8406 = !DILocation(line: 434, column: 13, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !8157, line: 434, column: 12)
!8408 = distinct !DILexicalBlock(scope: !8402, file: !8157, line: 433, column: 7)
!8409 = !DILocation(line: 434, column: 27, scope: !8407)
!8410 = !DILocation(line: 434, column: 41, scope: !8407)
!8411 = !DILocation(line: 434, column: 12, scope: !8408)
!8412 = distinct !{!8412, !8403, !8413, !1525}
!8413 = !DILocation(line: 438, column: 7, scope: !8402)
!8414 = !DILocation(line: 443, column: 19, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8398, file: !8157, line: 441, column: 5)
!8416 = !DILocation(line: 446, column: 7, scope: !8415)
!8417 = !DILocation(line: 446, column: 13, scope: !8415)
!8418 = !DILocation(line: 448, column: 13, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8420, file: !8157, line: 448, column: 12)
!8420 = distinct !DILexicalBlock(scope: !8415, file: !8157, line: 447, column: 7)
!8421 = !DILocation(line: 448, column: 27, scope: !8419)
!8422 = !DILocation(line: 448, column: 41, scope: !8419)
!8423 = !DILocation(line: 448, column: 12, scope: !8420)
!8424 = distinct !{!8424, !8416, !8425, !1525}
!8425 = !DILocation(line: 452, column: 7, scope: !8415)
!8426 = !DILocation(line: 456, column: 8, scope: !8187)
!8427 = !DILocation(line: 458, column: 7, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8429, file: !8157, line: 457, column: 5)
!8429 = distinct !DILexicalBlock(scope: !8187, file: !8157, line: 456, column: 8)
!8430 = !DILocation(line: 459, column: 5, scope: !8428)
!8431 = !DILocation(line: 464, column: 31, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8159, file: !8157, line: 464, column: 7)
!8433 = !DILocation(line: 464, column: 41, scope: !8432)
!8434 = !DILocation(line: 464, column: 7, scope: !8159)
!8435 = !DILocation(line: 467, column: 8, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8437, file: !8157, line: 467, column: 8)
!8437 = distinct !DILexicalBlock(scope: !8432, file: !8157, line: 465, column: 3)
!8438 = !DILocation(line: 467, column: 38, scope: !8436)
!8439 = !DILocation(line: 467, column: 8, scope: !8437)
!8440 = !DILocation(line: 469, column: 44, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8442, file: !8157, line: 469, column: 10)
!8442 = distinct !DILexicalBlock(scope: !8436, file: !8157, line: 468, column: 5)
!8443 = !DILocation(line: 0, scope: !8441)
!8444 = !DILocation(line: 469, column: 10, scope: !8442)
!8445 = !DILocation(line: 485, column: 15, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8441, file: !8157, line: 470, column: 7)
!8447 = !DILocation(line: 485, column: 9, scope: !8446)
!8448 = !DILocation(line: 487, column: 15, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8450, file: !8157, line: 487, column: 14)
!8450 = distinct !DILexicalBlock(scope: !8446, file: !8157, line: 486, column: 9)
!8451 = !DILocation(line: 487, column: 29, scope: !8449)
!8452 = !DILocation(line: 487, column: 43, scope: !8449)
!8453 = !DILocation(line: 487, column: 14, scope: !8450)
!8454 = distinct !{!8454, !8447, !8455, !1525}
!8455 = !DILocation(line: 491, column: 9, scope: !8446)
!8456 = !DILocation(line: 494, column: 9, scope: !8446)
!8457 = !DILocation(line: 500, column: 9, scope: !8446)
!8458 = !DILocation(line: 503, column: 21, scope: !8446)
!8459 = !DILocation(line: 506, column: 9, scope: !8446)
!8460 = !DILocation(line: 506, column: 15, scope: !8446)
!8461 = !DILocation(line: 506, column: 51, scope: !8446)
!8462 = !DILocation(line: 508, column: 15, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !8157, line: 508, column: 14)
!8464 = distinct !DILexicalBlock(scope: !8446, file: !8157, line: 507, column: 9)
!8465 = !DILocation(line: 508, column: 29, scope: !8463)
!8466 = !DILocation(line: 508, column: 43, scope: !8463)
!8467 = !DILocation(line: 508, column: 14, scope: !8464)
!8468 = distinct !{!8468, !8459, !8469, !1525}
!8469 = !DILocation(line: 512, column: 9, scope: !8446)
!8470 = !DILocation(line: 523, column: 15, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8441, file: !8157, line: 515, column: 7)
!8472 = !DILocation(line: 523, column: 9, scope: !8471)
!8473 = !DILocation(line: 525, column: 15, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !8157, line: 525, column: 14)
!8475 = distinct !DILexicalBlock(scope: !8471, file: !8157, line: 524, column: 9)
!8476 = !DILocation(line: 525, column: 29, scope: !8474)
!8477 = !DILocation(line: 525, column: 43, scope: !8474)
!8478 = !DILocation(line: 525, column: 14, scope: !8475)
!8479 = distinct !{!8479, !8472, !8480, !1525}
!8480 = !DILocation(line: 529, column: 9, scope: !8471)
!8481 = !DILocation(line: 535, column: 44, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !8157, line: 535, column: 10)
!8483 = distinct !DILexicalBlock(scope: !8436, file: !8157, line: 533, column: 5)
!8484 = !DILocation(line: 535, column: 10, scope: !8483)
!8485 = !DILocation(line: 542, column: 27, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8482, file: !8157, line: 540, column: 7)
!8487 = !DILocation(line: 543, column: 13, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8486, file: !8157, line: 543, column: 12)
!8489 = !DILocation(line: 543, column: 80, scope: !8488)
!8490 = !DILocation(line: 543, column: 54, scope: !8488)
!8491 = !DILocation(line: 543, column: 91, scope: !8488)
!8492 = !DILocation(line: 544, column: 13, scope: !8488)
!8493 = !DILocation(line: 544, column: 78, scope: !8488)
!8494 = !DILocation(line: 544, column: 52, scope: !8488)
!8495 = !DILocation(line: 544, column: 84, scope: !8488)
!8496 = !DILocation(line: 545, column: 13, scope: !8488)
!8497 = !DILocation(line: 545, column: 78, scope: !8488)
!8498 = !DILocation(line: 545, column: 52, scope: !8488)
!8499 = !DILocation(line: 545, column: 84, scope: !8488)
!8500 = !DILocation(line: 546, column: 13, scope: !8488)
!8501 = !DILocation(line: 546, column: 78, scope: !8488)
!8502 = !DILocation(line: 546, column: 52, scope: !8488)
!8503 = !DILocation(line: 546, column: 84, scope: !8488)
!8504 = !DILocation(line: 547, column: 13, scope: !8488)
!8505 = !DILocation(line: 547, column: 78, scope: !8488)
!8506 = !DILocation(line: 547, column: 52, scope: !8488)
!8507 = !DILocation(line: 543, column: 12, scope: !8486)
!8508 = !DILocation(line: 554, column: 3, scope: !8159)
!8509 = !DILocation(line: 555, column: 1, scope: !8159)
!8510 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !8157, file: !8157, line: 582, type: !8511, scopeLine: 583, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !8522)
!8511 = !DISubroutineType(types: !8512)
!8512 = !{!7265, !8513, !21}
!8513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8514, size: 32)
!8514 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !1275, line: 94, baseType: !8515)
!8515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1275, line: 77, size: 160, elements: !8516)
!8516 = !{!8517, !8518, !8519, !8520, !8521}
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !8515, file: !1275, line: 79, baseType: !21, size: 32)
!8518 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !8515, file: !1275, line: 82, baseType: !21, size: 32, offset: 32)
!8519 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !8515, file: !1275, line: 85, baseType: !21, size: 32, offset: 64)
!8520 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !8515, file: !1275, line: 88, baseType: !21, size: 32, offset: 96)
!8521 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !8515, file: !1275, line: 91, baseType: !21, size: 32, offset: 128)
!8522 = !{!8523, !8524, !8525}
!8523 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !8510, file: !8157, line: 582, type: !8513)
!8524 = !DILocalVariable(name: "FLatency", arg: 2, scope: !8510, file: !8157, line: 582, type: !21)
!8525 = !DILocalVariable(name: "tickstart", scope: !8510, file: !8157, line: 584, type: !21)
!8526 = !DILocation(line: 0, scope: !8510)
!8527 = !DILocation(line: 587, column: 24, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8510, file: !8157, line: 587, column: 6)
!8529 = !DILocation(line: 587, column: 6, scope: !8510)
!8530 = !DILocation(line: 601, column: 17, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8510, file: !8157, line: 601, column: 6)
!8532 = !DILocation(line: 601, column: 15, scope: !8531)
!8533 = !DILocation(line: 601, column: 6, scope: !8510)
!8534 = !DILocation(line: 604, column: 5, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8531, file: !8157, line: 602, column: 3)
!8536 = !DILocation(line: 608, column: 8, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8535, file: !8157, line: 608, column: 8)
!8538 = !DILocation(line: 608, column: 34, scope: !8537)
!8539 = !DILocation(line: 608, column: 8, scope: !8535)
!8540 = !DILocation(line: 615, column: 27, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8510, file: !8157, line: 615, column: 6)
!8542 = !DILocation(line: 615, column: 38, scope: !8541)
!8543 = !DILocation(line: 615, column: 60, scope: !8541)
!8544 = !DILocation(line: 615, column: 6, scope: !8510)
!8545 = !DILocation(line: 619, column: 40, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8547, file: !8157, line: 619, column: 8)
!8547 = distinct !DILexicalBlock(scope: !8541, file: !8157, line: 616, column: 3)
!8548 = !DILocation(line: 619, column: 63, scope: !8546)
!8549 = !DILocation(line: 619, column: 8, scope: !8547)
!8550 = !DILocation(line: 621, column: 7, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8546, file: !8157, line: 620, column: 5)
!8552 = !DILocation(line: 622, column: 5, scope: !8551)
!8553 = !DILocation(line: 624, column: 40, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8547, file: !8157, line: 624, column: 8)
!8555 = !DILocation(line: 624, column: 63, scope: !8554)
!8556 = !DILocation(line: 624, column: 8, scope: !8547)
!8557 = !DILocation(line: 626, column: 7, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8554, file: !8157, line: 625, column: 5)
!8559 = !DILocation(line: 627, column: 5, scope: !8558)
!8560 = !DILocation(line: 630, column: 5, scope: !8547)
!8561 = !DILocation(line: 631, column: 3, scope: !8547)
!8562 = !DILocation(line: 634, column: 38, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8510, file: !8157, line: 634, column: 6)
!8564 = !DILocation(line: 634, column: 62, scope: !8563)
!8565 = !DILocation(line: 634, column: 6, scope: !8510)
!8566 = !DILocation(line: 639, column: 27, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8568, file: !8157, line: 639, column: 8)
!8568 = distinct !DILexicalBlock(scope: !8563, file: !8157, line: 635, column: 3)
!8569 = !DILocation(line: 639, column: 8, scope: !8568)
!8570 = !DILocation(line: 642, column: 10, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8572, file: !8157, line: 642, column: 10)
!8572 = distinct !DILexicalBlock(scope: !8567, file: !8157, line: 640, column: 5)
!8573 = !DILocation(line: 642, column: 46, scope: !8571)
!8574 = !DILocation(line: 642, column: 10, scope: !8572)
!8575 = !DILocation(line: 652, column: 10, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8577, file: !8157, line: 652, column: 10)
!8577 = distinct !DILexicalBlock(scope: !8578, file: !8157, line: 650, column: 5)
!8578 = distinct !DILexicalBlock(scope: !8567, file: !8157, line: 648, column: 13)
!8579 = !DILocation(line: 652, column: 46, scope: !8576)
!8580 = !DILocation(line: 652, column: 10, scope: !8577)
!8581 = !DILocation(line: 661, column: 10, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8583, file: !8157, line: 661, column: 10)
!8583 = distinct !DILexicalBlock(scope: !8578, file: !8157, line: 659, column: 5)
!8584 = !DILocation(line: 661, column: 46, scope: !8582)
!8585 = !DILocation(line: 661, column: 10, scope: !8583)
!8586 = !DILocation(line: 667, column: 5, scope: !8568)
!8587 = !DILocation(line: 670, column: 17, scope: !8568)
!8588 = !DILocation(line: 672, column: 5, scope: !8568)
!8589 = !DILocation(line: 672, column: 12, scope: !8568)
!8590 = !DILocation(line: 672, column: 65, scope: !8568)
!8591 = !DILocation(line: 672, column: 78, scope: !8568)
!8592 = !DILocation(line: 672, column: 42, scope: !8568)
!8593 = !DILocation(line: 674, column: 12, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8595, file: !8157, line: 674, column: 11)
!8595 = distinct !DILexicalBlock(scope: !8568, file: !8157, line: 673, column: 5)
!8596 = !DILocation(line: 674, column: 26, scope: !8594)
!8597 = !DILocation(line: 674, column: 39, scope: !8594)
!8598 = !DILocation(line: 674, column: 11, scope: !8595)
!8599 = distinct !{!8599, !8588, !8600, !1525}
!8600 = !DILocation(line: 678, column: 5, scope: !8568)
!8601 = !DILocation(line: 682, column: 17, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8510, file: !8157, line: 682, column: 6)
!8603 = !DILocation(line: 682, column: 15, scope: !8602)
!8604 = !DILocation(line: 682, column: 6, scope: !8510)
!8605 = !DILocation(line: 685, column: 5, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8602, file: !8157, line: 683, column: 3)
!8607 = !DILocation(line: 689, column: 8, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8606, file: !8157, line: 689, column: 8)
!8609 = !DILocation(line: 689, column: 34, scope: !8608)
!8610 = !DILocation(line: 689, column: 8, scope: !8606)
!8611 = !DILocation(line: 696, column: 27, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8510, file: !8157, line: 696, column: 6)
!8613 = !DILocation(line: 696, column: 38, scope: !8612)
!8614 = !DILocation(line: 696, column: 61, scope: !8612)
!8615 = !DILocation(line: 696, column: 6, scope: !8510)
!8616 = !DILocation(line: 699, column: 5, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8612, file: !8157, line: 697, column: 3)
!8618 = !DILocation(line: 700, column: 3, scope: !8617)
!8619 = !DILocation(line: 703, column: 38, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8510, file: !8157, line: 703, column: 6)
!8621 = !DILocation(line: 703, column: 61, scope: !8620)
!8622 = !DILocation(line: 703, column: 6, scope: !8510)
!8623 = !DILocation(line: 706, column: 5, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8620, file: !8157, line: 704, column: 3)
!8625 = !DILocation(line: 707, column: 3, scope: !8624)
!8626 = !DILocation(line: 710, column: 21, scope: !8510)
!8627 = !DILocation(line: 710, column: 70, scope: !8510)
!8628 = !DILocation(line: 710, column: 91, scope: !8510)
!8629 = !DILocation(line: 710, column: 50, scope: !8510)
!8630 = !DILocation(line: 710, column: 47, scope: !8510)
!8631 = !DILocation(line: 710, column: 19, scope: !8510)
!8632 = !DILocation(line: 713, column: 17, scope: !8510)
!8633 = !DILocation(line: 713, column: 3, scope: !8510)
!8634 = !DILocation(line: 715, column: 3, scope: !8510)
!8635 = !DILocation(line: 716, column: 1, scope: !8510)
!8636 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !8157, file: !8157, line: 876, type: !2223, scopeLine: 877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !8637)
!8637 = !{!8638, !8639, !8640, !8641}
!8638 = !DILocalVariable(name: "pllm", scope: !8636, file: !8157, line: 878, type: !21)
!8639 = !DILocalVariable(name: "pllvco", scope: !8636, file: !8157, line: 878, type: !21)
!8640 = !DILocalVariable(name: "pllp", scope: !8636, file: !8157, line: 878, type: !21)
!8641 = !DILocalVariable(name: "sysclockfreq", scope: !8636, file: !8157, line: 879, type: !21)
!8642 = !DILocation(line: 0, scope: !8636)
!8643 = !DILocation(line: 882, column: 16, scope: !8636)
!8644 = !DILocation(line: 882, column: 21, scope: !8636)
!8645 = !DILocation(line: 882, column: 3, scope: !8636)
!8646 = !DILocation(line: 892, column: 7, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8648, file: !8157, line: 890, column: 5)
!8648 = distinct !DILexicalBlock(scope: !8636, file: !8157, line: 883, column: 3)
!8649 = !DILocation(line: 898, column: 19, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8648, file: !8157, line: 895, column: 5)
!8651 = !DILocation(line: 898, column: 27, scope: !8650)
!8652 = !DILocation(line: 899, column: 10, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8650, file: !8157, line: 899, column: 10)
!8654 = !DILocation(line: 899, column: 40, scope: !8653)
!8655 = !DILocation(line: 0, scope: !8653)
!8656 = !DILocation(line: 899, column: 10, scope: !8650)
!8657 = !DILocation(line: 902, column: 53, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8653, file: !8157, line: 900, column: 7)
!8659 = !DILocation(line: 902, column: 130, scope: !8658)
!8660 = !DILocation(line: 903, column: 7, scope: !8658)
!8661 = !DILocation(line: 907, column: 56, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8653, file: !8157, line: 905, column: 7)
!8663 = !DILocation(line: 907, column: 53, scope: !8662)
!8664 = !DILocation(line: 907, column: 132, scope: !8662)
!8665 = !DILocation(line: 907, column: 130, scope: !8662)
!8666 = !DILocation(line: 907, column: 18, scope: !8662)
!8667 = !DILocation(line: 909, column: 23, scope: !8650)
!8668 = !DILocation(line: 909, column: 82, scope: !8650)
!8669 = !DILocation(line: 911, column: 28, scope: !8650)
!8670 = !DILocation(line: 912, column: 7, scope: !8650)
!8671 = !DILocation(line: 0, scope: !8648)
!8672 = !DILocation(line: 920, column: 3, scope: !8636)
!8673 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !8157, file: !8157, line: 766, type: !8674, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !8676)
!8674 = !DISubroutineType(types: !8675)
!8675 = !{null, !21, !21, !21}
!8676 = !{!8677, !8678, !8679, !8680, !8689, !8693}
!8677 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !8673, file: !8157, line: 766, type: !21)
!8678 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !8673, file: !8157, line: 766, type: !21)
!8679 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !8673, file: !8157, line: 766, type: !21)
!8680 = !DILocalVariable(name: "GPIO_InitStruct", scope: !8673, file: !8157, line: 768, type: !8681)
!8681 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !91, line: 63, baseType: !8682)
!8682 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !91, line: 47, size: 160, elements: !8683)
!8683 = !{!8684, !8685, !8686, !8687, !8688}
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !8682, file: !91, line: 49, baseType: !21, size: 32)
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !8682, file: !91, line: 52, baseType: !21, size: 32, offset: 32)
!8686 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !8682, file: !91, line: 55, baseType: !21, size: 32, offset: 64)
!8687 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !8682, file: !91, line: 58, baseType: !21, size: 32, offset: 96)
!8688 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !8682, file: !91, line: 61, baseType: !21, size: 32, offset: 128)
!8689 = !DILocalVariable(name: "tmpreg", scope: !8690, file: !8157, line: 778, type: !20)
!8690 = distinct !DILexicalBlock(scope: !8691, file: !8157, line: 778, column: 5)
!8691 = distinct !DILexicalBlock(scope: !8692, file: !8157, line: 774, column: 3)
!8692 = distinct !DILexicalBlock(scope: !8673, file: !8157, line: 773, column: 6)
!8693 = !DILocalVariable(name: "tmpreg", scope: !8694, file: !8157, line: 802, type: !20)
!8694 = distinct !DILexicalBlock(scope: !8695, file: !8157, line: 802, column: 5)
!8695 = distinct !DILexicalBlock(scope: !8692, file: !8157, line: 798, column: 3)
!8696 = !DILocation(line: 0, scope: !8673)
!8697 = !DILocation(line: 768, column: 3, scope: !8673)
!8698 = !DILocation(line: 768, column: 20, scope: !8673)
!8699 = !DILocation(line: 773, column: 15, scope: !8692)
!8700 = !DILocation(line: 773, column: 6, scope: !8673)
!8701 = !DILocation(line: 778, column: 5, scope: !8690)
!8702 = !DILocation(line: 778, column: 5, scope: !8691)
!8703 = !DILocation(line: 781, column: 21, scope: !8691)
!8704 = !DILocation(line: 781, column: 25, scope: !8691)
!8705 = !DILocation(line: 782, column: 21, scope: !8691)
!8706 = !DILocation(line: 782, column: 26, scope: !8691)
!8707 = !DILocation(line: 783, column: 21, scope: !8691)
!8708 = !DILocation(line: 783, column: 27, scope: !8691)
!8709 = !DILocation(line: 784, column: 21, scope: !8691)
!8710 = !DILocation(line: 784, column: 26, scope: !8691)
!8711 = !DILocation(line: 785, column: 21, scope: !8691)
!8712 = !DILocation(line: 785, column: 31, scope: !8691)
!8713 = !DILocation(line: 786, column: 5, scope: !8691)
!8714 = !DILocation(line: 789, column: 5, scope: !8691)
!8715 = !DILocation(line: 795, column: 3, scope: !8691)
!8716 = !DILocation(line: 802, column: 5, scope: !8694)
!8717 = !DILocation(line: 802, column: 5, scope: !8695)
!8718 = !DILocation(line: 805, column: 21, scope: !8695)
!8719 = !DILocation(line: 805, column: 25, scope: !8695)
!8720 = !DILocation(line: 806, column: 21, scope: !8695)
!8721 = !DILocation(line: 806, column: 26, scope: !8695)
!8722 = !DILocation(line: 807, column: 21, scope: !8695)
!8723 = !DILocation(line: 807, column: 27, scope: !8695)
!8724 = !DILocation(line: 808, column: 21, scope: !8695)
!8725 = !DILocation(line: 808, column: 26, scope: !8695)
!8726 = !DILocation(line: 809, column: 21, scope: !8695)
!8727 = !DILocation(line: 809, column: 31, scope: !8695)
!8728 = !DILocation(line: 810, column: 5, scope: !8695)
!8729 = !DILocation(line: 813, column: 5, scope: !8695)
!8730 = !DILocation(line: 0, scope: !8692)
!8731 = !DILocation(line: 821, column: 1, scope: !8673)
!8732 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !8157, file: !8157, line: 832, type: !1054, scopeLine: 833, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !1056)
!8733 = !DILocation(line: 834, column: 38, scope: !8732)
!8734 = !DILocation(line: 835, column: 1, scope: !8732)
!8735 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !8157, file: !8157, line: 841, type: !1054, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !1056)
!8736 = !DILocation(line: 843, column: 38, scope: !8735)
!8737 = !DILocation(line: 844, column: 1, scope: !8735)
!8738 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !8157, file: !8157, line: 932, type: !2223, scopeLine: 933, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !1056)
!8739 = !DILocation(line: 934, column: 10, scope: !8738)
!8740 = !DILocation(line: 934, column: 3, scope: !8738)
!8741 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !8157, file: !8157, line: 943, type: !2223, scopeLine: 944, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !1056)
!8742 = !DILocation(line: 946, column: 11, scope: !8741)
!8743 = !DILocation(line: 946, column: 56, scope: !8741)
!8744 = !DILocation(line: 946, column: 78, scope: !8741)
!8745 = !DILocation(line: 946, column: 36, scope: !8741)
!8746 = !DILocation(line: 946, column: 33, scope: !8741)
!8747 = !DILocation(line: 946, column: 3, scope: !8741)
!8748 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !8157, file: !8157, line: 955, type: !2223, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !1056)
!8749 = !DILocation(line: 958, column: 11, scope: !8748)
!8750 = !DILocation(line: 958, column: 55, scope: !8748)
!8751 = !DILocation(line: 958, column: 77, scope: !8748)
!8752 = !DILocation(line: 958, column: 35, scope: !8748)
!8753 = !DILocation(line: 958, column: 32, scope: !8748)
!8754 = !DILocation(line: 958, column: 3, scope: !8748)
!8755 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !8157, file: !8157, line: 968, type: !8756, scopeLine: 969, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !8758)
!8756 = !DISubroutineType(types: !8757)
!8757 = !{null, !8162}
!8758 = !{!8759}
!8759 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !8755, file: !8157, line: 968, type: !8162)
!8760 = !DILocation(line: 0, scope: !8755)
!8761 = !DILocation(line: 971, column: 22, scope: !8755)
!8762 = !DILocation(line: 971, column: 37, scope: !8755)
!8763 = !DILocation(line: 974, column: 12, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8755, file: !8157, line: 974, column: 6)
!8765 = !DILocation(line: 974, column: 15, scope: !8764)
!8766 = !DILocation(line: 974, column: 31, scope: !8764)
!8767 = !DILocation(line: 974, column: 6, scope: !8755)
!8768 = !DILocation(line: 976, column: 24, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8764, file: !8157, line: 975, column: 3)
!8770 = !DILocation(line: 976, column: 33, scope: !8769)
!8771 = !DILocation(line: 977, column: 3, scope: !8769)
!8772 = !DILocation(line: 978, column: 17, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8764, file: !8157, line: 978, column: 11)
!8774 = !DILocation(line: 978, column: 20, scope: !8773)
!8775 = !DILocation(line: 978, column: 35, scope: !8773)
!8776 = !DILocation(line: 0, scope: !8773)
!8777 = !DILocation(line: 978, column: 11, scope: !8764)
!8778 = !DILocation(line: 980, column: 33, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8773, file: !8157, line: 979, column: 3)
!8780 = !DILocation(line: 981, column: 3, scope: !8779)
!8781 = !DILocation(line: 984, column: 33, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8773, file: !8157, line: 983, column: 3)
!8783 = !DILocation(line: 988, column: 12, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8755, file: !8157, line: 988, column: 6)
!8785 = !DILocation(line: 988, column: 15, scope: !8784)
!8786 = !DILocation(line: 994, column: 24, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8784, file: !8157, line: 993, column: 3)
!8788 = !DILocation(line: 994, column: 33, scope: !8787)
!8789 = !DILocation(line: 997, column: 61, scope: !8755)
!8790 = !DILocation(line: 997, column: 81, scope: !8755)
!8791 = !DILocation(line: 997, column: 22, scope: !8755)
!8792 = !DILocation(line: 997, column: 42, scope: !8755)
!8793 = !DILocation(line: 1000, column: 12, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8755, file: !8157, line: 1000, column: 6)
!8795 = !DILocation(line: 1000, column: 17, scope: !8794)
!8796 = !DILocation(line: 1000, column: 35, scope: !8794)
!8797 = !DILocation(line: 1000, column: 6, scope: !8755)
!8798 = !DILocation(line: 1002, column: 24, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8794, file: !8157, line: 1001, column: 3)
!8800 = !DILocation(line: 1002, column: 33, scope: !8799)
!8801 = !DILocation(line: 1003, column: 3, scope: !8799)
!8802 = !DILocation(line: 1004, column: 17, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8794, file: !8157, line: 1004, column: 11)
!8804 = !DILocation(line: 1004, column: 22, scope: !8803)
!8805 = !DILocation(line: 1004, column: 39, scope: !8803)
!8806 = !DILocation(line: 0, scope: !8803)
!8807 = !DILocation(line: 1004, column: 11, scope: !8794)
!8808 = !DILocation(line: 1006, column: 33, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8803, file: !8157, line: 1005, column: 3)
!8810 = !DILocation(line: 1007, column: 3, scope: !8809)
!8811 = !DILocation(line: 1010, column: 33, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8803, file: !8157, line: 1009, column: 3)
!8813 = !DILocation(line: 1014, column: 12, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8755, file: !8157, line: 1014, column: 6)
!8815 = !DILocation(line: 1014, column: 16, scope: !8814)
!8816 = !DILocation(line: 1020, column: 24, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8814, file: !8157, line: 1019, column: 3)
!8818 = !DILocation(line: 1020, column: 33, scope: !8817)
!8819 = !DILocation(line: 1024, column: 12, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8755, file: !8157, line: 1024, column: 6)
!8821 = !DILocation(line: 1024, column: 15, scope: !8820)
!8822 = !DILocation(line: 1024, column: 30, scope: !8820)
!8823 = !DILocation(line: 1024, column: 6, scope: !8755)
!8824 = !DILocation(line: 1030, column: 28, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8820, file: !8157, line: 1029, column: 3)
!8826 = !DILocation(line: 1030, column: 37, scope: !8825)
!8827 = !DILocation(line: 1032, column: 54, scope: !8755)
!8828 = !DILocation(line: 1032, column: 62, scope: !8755)
!8829 = !DILocation(line: 1032, column: 26, scope: !8755)
!8830 = !DILocation(line: 1032, column: 36, scope: !8755)
!8831 = !DILocation(line: 1033, column: 49, scope: !8755)
!8832 = !DILocation(line: 1033, column: 57, scope: !8755)
!8833 = !DILocation(line: 1033, column: 26, scope: !8755)
!8834 = !DILocation(line: 1033, column: 31, scope: !8755)
!8835 = !DILocation(line: 1034, column: 50, scope: !8755)
!8836 = !DILocation(line: 1034, column: 78, scope: !8755)
!8837 = !DILocation(line: 1034, column: 26, scope: !8755)
!8838 = !DILocation(line: 1034, column: 31, scope: !8755)
!8839 = !DILocation(line: 1035, column: 52, scope: !8755)
!8840 = !DILocation(line: 1035, column: 102, scope: !8755)
!8841 = !DILocation(line: 1035, column: 109, scope: !8755)
!8842 = !DILocation(line: 1035, column: 26, scope: !8755)
!8843 = !DILocation(line: 1035, column: 31, scope: !8755)
!8844 = !DILocation(line: 1036, column: 50, scope: !8755)
!8845 = !DILocation(line: 1036, column: 78, scope: !8755)
!8846 = !DILocation(line: 1036, column: 26, scope: !8755)
!8847 = !DILocation(line: 1036, column: 31, scope: !8755)
!8848 = !DILocation(line: 1037, column: 1, scope: !8755)
!8849 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !8157, file: !8157, line: 1047, type: !8850, scopeLine: 1048, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !8852)
!8850 = !DISubroutineType(types: !8851)
!8851 = !{null, !8513, !624}
!8852 = !{!8853, !8854}
!8853 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !8849, file: !8157, line: 1047, type: !8513)
!8854 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !8849, file: !8157, line: 1047, type: !624)
!8855 = !DILocation(line: 0, scope: !8849)
!8856 = !DILocation(line: 1050, column: 22, scope: !8849)
!8857 = !DILocation(line: 1050, column: 32, scope: !8849)
!8858 = !DILocation(line: 1053, column: 53, scope: !8849)
!8859 = !DILocation(line: 1053, column: 58, scope: !8849)
!8860 = !DILocation(line: 1053, column: 22, scope: !8849)
!8861 = !DILocation(line: 1053, column: 35, scope: !8849)
!8862 = !DILocation(line: 1056, column: 54, scope: !8849)
!8863 = !DILocation(line: 1056, column: 59, scope: !8849)
!8864 = !DILocation(line: 1056, column: 22, scope: !8849)
!8865 = !DILocation(line: 1056, column: 36, scope: !8849)
!8866 = !DILocation(line: 1059, column: 55, scope: !8849)
!8867 = !DILocation(line: 1059, column: 60, scope: !8849)
!8868 = !DILocation(line: 1059, column: 22, scope: !8849)
!8869 = !DILocation(line: 1059, column: 37, scope: !8849)
!8870 = !DILocation(line: 1062, column: 56, scope: !8849)
!8871 = !DILocation(line: 1062, column: 79, scope: !8849)
!8872 = !DILocation(line: 1062, column: 22, scope: !8849)
!8873 = !DILocation(line: 1062, column: 37, scope: !8849)
!8874 = !DILocation(line: 1065, column: 34, scope: !8849)
!8875 = !DILocation(line: 1065, column: 38, scope: !8849)
!8876 = !DILocation(line: 1065, column: 14, scope: !8849)
!8877 = !DILocation(line: 1066, column: 1, scope: !8849)
!8878 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !8157, file: !8157, line: 1073, type: !1054, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !1056)
!8879 = !DILocation(line: 1076, column: 6, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8878, file: !8157, line: 1076, column: 6)
!8881 = !{!1034, !1020, i64 12}
!8882 = !DILocation(line: 1076, column: 6, scope: !8878)
!8883 = !DILocation(line: 1079, column: 5, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8880, file: !8157, line: 1077, column: 3)
!8885 = !DILocation(line: 1082, column: 5, scope: !8884)
!8886 = !DILocation(line: 1083, column: 3, scope: !8884)
!8887 = !DILocation(line: 1084, column: 1, scope: !8878)
!8888 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !8157, file: !8157, line: 1090, type: !1054, scopeLine: 1091, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !1056)
!8889 = !DILocation(line: 1095, column: 1, scope: !8888)
!8890 = distinct !DISubprogram(name: "SomethingSimple", scope: !8891, file: !8891, line: 36, type: !1374, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !8892)
!8891 = !DIFile(filename: "modules/simple_module/simple_module.c", directory: "/home/mjshen/RTOSExploration/STM32_Base_Project", checksumkind: CSK_MD5, checksum: "5d6ae3bf64b04df30949548f57f93207")
!8892 = !{!8893, !8894}
!8893 = !DILocalVariable(name: "a", arg: 1, scope: !8890, file: !8891, line: 36, type: !85)
!8894 = !DILocalVariable(name: "b", arg: 2, scope: !8890, file: !8891, line: 36, type: !85)
!8895 = !DILocation(line: 0, scope: !8890)
!8896 = !DILocation(line: 37, column: 13, scope: !8890)
!8897 = !DILocation(line: 37, column: 18, scope: !8890)
!8898 = !DILocation(line: 37, column: 16, scope: !8890)
!8899 = !DILocation(line: 37, column: 5, scope: !8890)
!8900 = distinct !DISubprogram(name: "AnotherSimpleThing", scope: !8891, file: !8891, line: 40, type: !8901, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !1056)
!8901 = !DISubroutineType(types: !8902)
!8902 = !{!85}
!8903 = !DILocation(line: 41, column: 5, scope: !8900)
