; ModuleID = './examples/printf.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%"class.Cicada::Stm32Uart" = type { %"class.Cicada::BufferedSerial", i8, %struct.__UART_HandleTypeDef, %struct.USART_TypeDef*, i16, i16, i32 }
%"class.Cicada::BufferedSerial" = type { %"class.Cicada::IBufferedSerial", %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer" }
%"class.Cicada::IBufferedSerial" = type { %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice" }
%"class.Cicada::ICommDevice" = type { i32 (...)** }
%"class.Cicada::LineCircularBuffer" = type { %"class.Cicada::CircularBuffer.base", i16, [2 x i8] }
%"class.Cicada::CircularBuffer.base" = type <{ i32 (...)**, [4 x i8], i64, i64, i64, i64, i8* }>
%struct.__UART_HandleTypeDef = type { %struct.USART_TypeDef*, %struct.USART_TypeDef, i8*, i16, i16, i8*, i16, i16, %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef*, i32, i32, i32, i32 }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.__DMA_HandleTypeDef = type { %struct.DMA_Channel_TypeDef*, %struct.USART_TypeDef, i32, i32, i8*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, i32, %struct.DMA_TypeDef*, i32 }
%struct.DMA_Channel_TypeDef = type { i32, i32, i32, i32 }
%struct.DMA_TypeDef = type { i32, i32 }
%"class.Cicada::Scheduler" = type { i32 ()*, %"class.Cicada::Task"**, %"class.Cicada::Task"** }
%"class.Cicada::Task" = type { i32 (...)**, i16, i32, i8, i32 }
%class.SerialTask = type { %"class.Cicada::Task", %"class.Cicada::BufferedSerial"*, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.__va_list = type { i8* }
%struct.out_fct_wrap_type = type { void (i8, i8*)*, i8* }
%"class.Cicada::CircularBuffer" = type <{ i32 (...)**, [4 x i8], i64, i64, i64, i64, i8*, [4 x i8] }>

$_ZN10SerialTaskC2ERN6Cicada14BufferedSerialE = comdat any

$_ZN6Cicada4TaskD2Ev = comdat any

$_ZN6Cicada4TaskC2Et = comdat any

$_ZN10SerialTaskD0Ev = comdat any

$_ZN10SerialTask3runEv = comdat any

$_ZN6Cicada4Task8setDelayEt = comdat any

$_ZN6Cicada4TaskD0Ev = comdat any

$_ZNK6Cicada4Task5delayEv = comdat any

$_ZN6Cicada4Task7lastRunEv = comdat any

$_ZN6Cicada4Task10setLastRunEj = comdat any

$_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv = comdat any

$_ZN6Cicada14BufferedSerialD2Ev = comdat any

$_ZN6Cicada14CircularBufferIcED2Ev = comdat any

$_ZN6Cicada15IBufferedSerialD2Ev = comdat any

$_ZN6Cicada7ISerialD2Ev = comdat any

$_ZN6Cicada11ICommDeviceD2Ev = comdat any

$_ZN6Cicada14BufferedSerialD0Ev = comdat any

$_ZThn4_N6Cicada14BufferedSerialD1Ev = comdat any

$_ZThn4_N6Cicada14BufferedSerialD0Ev = comdat any

$_ZNK6Cicada14CircularBufferIcE4sizeEv = comdat any

$_ZN6Cicada18LineCircularBuffer5flushEv = comdat any

$_ZN6Cicada14CircularBufferIcE5flushEv = comdat any

$_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv = comdat any

$_ZN6Cicada18LineCircularBuffer4pushEc = comdat any

$_ZN6Cicada14CircularBufferIcE4pushEc = comdat any

$_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy = comdat any

$_ZN6Cicada18LineCircularBuffer4pullEv = comdat any

$_ZN6Cicada14CircularBufferIcE4pullEv = comdat any

$_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv = comdat any

$_ZN6Cicada15IBufferedSerialC2Ev = comdat any

$_ZN6Cicada18LineCircularBufferC2EPcy = comdat any

$_ZN6Cicada14CircularBufferIcEC2EPcy = comdat any

$_ZN6Cicada18LineCircularBufferD0Ev = comdat any

$_ZN6Cicada18LineCircularBuffer4pushEPKcy = comdat any

$_ZN6Cicada18LineCircularBuffer4pullEPcy = comdat any

$_ZN6Cicada14CircularBufferIcE4readEv = comdat any

$_ZNK6Cicada14CircularBufferIcE7isEmptyEv = comdat any

$_ZNK6Cicada14CircularBufferIcE6isFullEv = comdat any

$_ZN6Cicada14CircularBufferIcED0Ev = comdat any

$_ZN6Cicada14CircularBufferIcE4pushEPKcy = comdat any

$_ZN6Cicada14CircularBufferIcE4pullEPcy = comdat any

$_ZN6Cicada11ICommDeviceC2Ev = comdat any

$_ZN6Cicada7ISerialC2Ev = comdat any

$_ZN6Cicada15IBufferedSerialD0Ev = comdat any

$_ZThn4_N6Cicada15IBufferedSerialD1Ev = comdat any

$_ZThn4_N6Cicada15IBufferedSerialD0Ev = comdat any

$_ZN6Cicada7ISerialD0Ev = comdat any

$_ZN6Cicada11ICommDeviceD0Ev = comdat any

$_ZTV10SerialTask = comdat any

$_ZTS10SerialTask = comdat any

$_ZTSN6Cicada4TaskE = comdat any

$_ZTIN6Cicada4TaskE = comdat any

$_ZTI10SerialTask = comdat any

$_ZTVN6Cicada4TaskE = comdat any

$_ZZN10SerialTask3runEvE10entrypoint = comdat any

$_ZTSN6Cicada15IBufferedSerialE = comdat any

$_ZTSN6Cicada11ICommDeviceE = comdat any

$_ZTIN6Cicada11ICommDeviceE = comdat any

$_ZTSN6Cicada7ISerialE = comdat any

$_ZTIN6Cicada7ISerialE = comdat any

$_ZTIN6Cicada15IBufferedSerialE = comdat any

$_ZTVN6Cicada15IBufferedSerialE = comdat any

$_ZTVN6Cicada11ICommDeviceE = comdat any

$_ZTVN6Cicada7ISerialE = comdat any

$_ZTVN6Cicada18LineCircularBufferE = comdat any

$_ZTSN6Cicada18LineCircularBufferE = comdat any

$_ZTSN6Cicada14CircularBufferIcEE = comdat any

$_ZTIN6Cicada14CircularBufferIcEE = comdat any

$_ZTIN6Cicada18LineCircularBufferE = comdat any

$_ZTVN6Cicada14CircularBufferIcEE = comdat any

@_ZZ17USART2_IRQHandlerE8instance = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !0
@_ZGVZ17USART2_IRQHandlerE8instance = internal global i32 0, align 4
@_ZZ8_putcharE6serial = internal unnamed_addr global %"class.Cicada::Stm32Uart"* null, align 4, !dbg !100
@_ZTV10SerialTask = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI10SerialTask to i8*), i8* bitcast (%"class.Cicada::Task"* (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD2Ev to i8*), i8* bitcast (void (%class.SerialTask*)* @_ZN10SerialTaskD0Ev to i8*), i8* bitcast (void (%class.SerialTask*)* @_ZN10SerialTask3runEv to i8*)] }, comdat, align 4
@_ZTS10SerialTask = linkonce_odr dso_local constant [13 x i8] c"10SerialTask\00", comdat, align 1
@_ZTSN6Cicada4TaskE = linkonce_odr dso_local constant [15 x i8] c"N6Cicada4TaskE\00", comdat, align 1
@_ZTIN6Cicada4TaskE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZTSN6Cicada4TaskE, i32 0, i32 0) }, comdat, align 4
@_ZTI10SerialTask = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZTS10SerialTask, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada4TaskE to i8*) }, comdat, align 4
@_ZTVN6Cicada4TaskE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada4TaskE to i8*), i8* bitcast (%"class.Cicada::Task"* (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Task"*)* @_ZN6Cicada4TaskD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZZN10SerialTask3runEvE10entrypoint = linkonce_odr dso_local local_unnamed_addr global i8 0, comdat, align 1, !dbg !111
@.str = private unnamed_addr constant [14 x i8] c"Hello world\0D\0A\00", align 1
@_ftoa.pow10 = internal unnamed_addr constant [10 x double] [double 1.000000e+00, double 1.000000e+01, double 1.000000e+02, double 1.000000e+03, double 1.000000e+04, double 1.000000e+05, double 1.000000e+06, double 1.000000e+07, double 1.000000e+08, double 1.000000e+09], align 8, !dbg !284
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !346
@__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable = private unnamed_addr constant [16 x i8] c"\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\10", align 1
@__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable = private unnamed_addr constant [2 x i8] c"\01\02", align 1
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !415
@uwTickPrio = dso_local local_unnamed_addr global i32 16, align 4, !dbg !424
@uwTickFreq = dso_local local_unnamed_addr global i32 1, align 4, !dbg !540
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !413
@uwTick = dso_local global i32 0, align 4, !dbg !543
@_ZN6Cicada9Stm32Uart8instanceE = dso_local local_unnamed_addr global [4 x %"class.Cicada::Stm32Uart"*] zeroinitializer, align 4, !dbg !545
@_ZTVN6Cicada9Stm32UartE = dso_local unnamed_addr constant { [26 x i8*], [12 x i8*] } { [26 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada9Stm32UartE to i8*), i8* bitcast (%"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD2Ev to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14spaceAvailableEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial5writeEPKhy to i8*), i8* bitcast (i8 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial4readEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*)* @_ZN6Cicada14BufferedSerial5writeEPKh to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*, i8)* @_ZN6Cicada14BufferedSerial5writeEh to i8*), i8* bitcast (i1 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial11canReadLineEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial8readLineEPhy to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial14readBufferSizeEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial15writeBufferSizeEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart4openEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZN6Cicada9Stm32Uart4openEh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart6isOpenEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i32, i8)* @_ZN6Cicada9Stm32Uart15setSerialConfigEjh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart5closeEv to i8*), i8* bitcast (i8* (%"class.Cicada::Stm32Uart"*)* @_ZNK6Cicada9Stm32Uart8portNameEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8*)* @_ZN6Cicada9Stm32Uart7rawReadERh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZN6Cicada9Stm32Uart8rawWriteEh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32Uart13startTransmitEv to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada9Stm32UartE to i8*), i8* bitcast (%"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32UartD1Ev to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32UartD0Ev to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart4openEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart6isOpenEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i32, i8)* @_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart5closeEv to i8*), i8* bitcast (i8* (%"class.Cicada::Stm32Uart"*)* @_ZThn4_NK6Cicada9Stm32Uart8portNameEv to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8*)* @_ZThn4_N6Cicada9Stm32Uart7rawReadERh to i8*), i8* bitcast (i1 (%"class.Cicada::Stm32Uart"*, i8)* @_ZThn4_N6Cicada9Stm32Uart8rawWriteEh to i8*), i8* bitcast (void (%"class.Cicada::Stm32Uart"*)* @_ZThn4_N6Cicada9Stm32Uart13startTransmitEv to i8*)] }, align 4
@_ZTSN6Cicada9Stm32UartE = dso_local constant [20 x i8] c"N6Cicada9Stm32UartE\00", align 1
@_ZTIN6Cicada9Stm32UartE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTSN6Cicada9Stm32UartE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*) }, align 4
@_ZTVN6Cicada14BufferedSerialE = dso_local unnamed_addr constant { [17 x i8*], [12 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*), i8* bitcast (%"class.Cicada::BufferedSerial"* (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerialD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial14spaceAvailableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial4readEPhy to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial5writeEPKhy to i8*), i8* bitcast (i8 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial4readEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*)* @_ZN6Cicada14BufferedSerial5writeEPKh to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*, i8)* @_ZN6Cicada14BufferedSerial5writeEh to i8*), i8* bitcast (i1 (%"class.Cicada::BufferedSerial"*)* @_ZNK6Cicada14BufferedSerial11canReadLineEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*, i8*, i64)* @_ZN6Cicada14BufferedSerial8readLineEPhy to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial14readBufferSizeEv to i8*), i8* bitcast (i64 (%"class.Cicada::BufferedSerial"*)* @_ZN6Cicada14BufferedSerial15writeBufferSizeEv to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada14BufferedSerialE to i8*), i8* bitcast (%"class.Cicada::BufferedSerial"* (%"class.Cicada::BufferedSerial"*)* @_ZThn4_N6Cicada14BufferedSerialD1Ev to i8*), i8* bitcast (void (%"class.Cicada::BufferedSerial"*)* @_ZThn4_N6Cicada14BufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 4
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada14BufferedSerialE = dso_local constant [26 x i8] c"N6Cicada14BufferedSerialE\00", align 1
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada15IBufferedSerialE = linkonce_odr dso_local constant [27 x i8] c"N6Cicada15IBufferedSerialE\00", comdat, align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTSN6Cicada11ICommDeviceE = linkonce_odr dso_local constant [23 x i8] c"N6Cicada11ICommDeviceE\00", comdat, align 1
@_ZTIN6Cicada11ICommDeviceE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @_ZTSN6Cicada11ICommDeviceE, i32 0, i32 0) }, comdat, align 4
@_ZTSN6Cicada7ISerialE = linkonce_odr dso_local constant [18 x i8] c"N6Cicada7ISerialE\00", comdat, align 1
@_ZTIN6Cicada7ISerialE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN6Cicada7ISerialE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada15IBufferedSerialE = linkonce_odr dso_local constant { i8*, i8*, i32, i32, i8*, i32, i8*, i32 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN6Cicada15IBufferedSerialE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*), i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada7ISerialE to i8*), i32 1026 }, comdat, align 4
@_ZTIN6Cicada14BufferedSerialE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN6Cicada14BufferedSerialE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*) }, align 4
@_ZTVN6Cicada15IBufferedSerialE = linkonce_odr dso_local unnamed_addr constant { [17 x i8*], [12 x i8*] } { [17 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*), i8* bitcast (%"class.Cicada::IBufferedSerial"* (%"class.Cicada::IBufferedSerial"*)* @_ZN6Cicada15IBufferedSerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::IBufferedSerial"*)* @_ZN6Cicada15IBufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [12 x i8*] [i8* inttoptr (i32 -4 to i8*), i8* bitcast ({ i8*, i8*, i32, i32, i8*, i32, i8*, i32 }* @_ZTIN6Cicada15IBufferedSerialE to i8*), i8* bitcast (%"class.Cicada::IBufferedSerial"* (%"class.Cicada::IBufferedSerial"*)* @_ZThn4_N6Cicada15IBufferedSerialD1Ev to i8*), i8* bitcast (void (%"class.Cicada::IBufferedSerial"*)* @_ZThn4_N6Cicada15IBufferedSerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada11ICommDeviceE = linkonce_odr dso_local unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada11ICommDeviceE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada11ICommDeviceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada7ISerialE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada7ISerialE to i8*), i8* bitcast (%"class.Cicada::ICommDevice"* (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada7ISerialD2Ev to i8*), i8* bitcast (void (%"class.Cicada::ICommDevice"*)* @_ZN6Cicada7ISerialD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 4
@_ZTVN6Cicada18LineCircularBufferE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6Cicada18LineCircularBufferE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer"* (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcED2Ev to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBufferD0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::LineCircularBuffer"*, i8*, i64)* @_ZN6Cicada18LineCircularBuffer4pushEPKcy to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*, i8)* @_ZN6Cicada18LineCircularBuffer4pushEc to i8*), i8* bitcast (i64 (%"class.Cicada::LineCircularBuffer"*, i8*, i64)* @_ZN6Cicada18LineCircularBuffer4pullEPcy to i8*), i8* bitcast (i8 (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBuffer4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcE4readEv to i8*), i8* bitcast (void (%"class.Cicada::LineCircularBuffer"*)* @_ZN6Cicada18LineCircularBuffer5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE4sizeEv to i8*)] }, comdat, align 4
@_ZTSN6Cicada18LineCircularBufferE = linkonce_odr dso_local constant [30 x i8] c"N6Cicada18LineCircularBufferE\00", comdat, align 1
@_ZTSN6Cicada14CircularBufferIcEE = linkonce_odr dso_local constant [29 x i8] c"N6Cicada14CircularBufferIcEE\00", comdat, align 1
@_ZTIN6Cicada14CircularBufferIcEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6Cicada14CircularBufferIcEE, i32 0, i32 0) }, comdat, align 4
@_ZTIN6Cicada18LineCircularBufferE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i32 2) to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @_ZTSN6Cicada18LineCircularBufferE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIcEE to i8*) }, comdat, align 4
@_ZTVN6Cicada14CircularBufferIcEE = linkonce_odr dso_local unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6Cicada14CircularBufferIcEE to i8*), i8* bitcast (%"class.Cicada::CircularBuffer"* (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcED2Ev to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcED0Ev to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*, i8*, i64)* @_ZN6Cicada14CircularBufferIcE4pushEPKcy to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer"*, i8)* @_ZN6Cicada14CircularBufferIcE4pushEc to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*, i8*, i64)* @_ZN6Cicada14CircularBufferIcE4pullEPcy to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcE4pullEv to i8*), i8* bitcast (i8 (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcE4readEv to i8*), i8* bitcast (void (%"class.Cicada::CircularBuffer"*)* @_ZN6Cicada14CircularBufferIcE5flushEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE7isEmptyEv to i8*), i8* bitcast (i1 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE6isFullEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv to i8*), i8* bitcast (i64 (%"class.Cicada::CircularBuffer"*)* @_ZNK6Cicada14CircularBufferIcE4sizeEv to i8*)] }, comdat, align 4

@_ZN6Cicada9SchedulerC1EPFjvEPPNS_4TaskE = dso_local unnamed_addr alias %"class.Cicada::Scheduler"* (%"class.Cicada::Scheduler"*, i32 ()*, %"class.Cicada::Task"**), %"class.Cicada::Scheduler"* (%"class.Cicada::Scheduler"*, i32 ()*, %"class.Cicada::Task"**)* @_ZN6Cicada9SchedulerC2EPFjvEPPNS_4TaskE
@_ZN6Cicada9Stm32UartC1EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16)* @_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt
@_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*, i8*, i8*, i64, %struct.USART_TypeDef*, %struct.USART_TypeDef*, i16, i16)* @_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt
@_ZN6Cicada9Stm32UartD1Ev = dso_local unnamed_addr alias %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*), %"class.Cicada::Stm32Uart"* (%"class.Cicada::Stm32Uart"*)* @_ZN6Cicada9Stm32UartD2Ev

; Function Attrs: mustprogress noinline norecurse nounwind
define dso_local noundef i32 @main(i32 noundef %0, i8** nocapture noundef readnone %1) local_unnamed_addr #0 !dbg !1283 {
  %3 = alloca [1504 x i8], align 1
  %4 = alloca [1504 x i8], align 1
  %5 = alloca %"class.Cicada::Stm32Uart", align 8
  %6 = alloca %class.SerialTask, align 4
  %7 = alloca [2 x %"class.Cicada::Task"*], align 4
  %8 = alloca %"class.Cicada::Scheduler", align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !1288, metadata !DIExpression()), !dbg !1302
  call void @llvm.dbg.value(metadata i8** %1, metadata !1289, metadata !DIExpression()), !dbg !1302
  %9 = call i32 @HAL_Init() #26, !dbg !1303
  call fastcc void @_ZL18SystemClock_Configv(), !dbg !1304
  call void @llvm.dbg.value(metadata i16 1504, metadata !1290, metadata !DIExpression()), !dbg !1302
  %10 = getelementptr inbounds [1504 x i8], [1504 x i8]* %3, i32 0, i32 0, !dbg !1305
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %10) #26, !dbg !1305
  call void @llvm.dbg.declare(metadata [1504 x i8]* %3, metadata !1292, metadata !DIExpression()), !dbg !1306
  %11 = getelementptr inbounds [1504 x i8], [1504 x i8]* %4, i32 0, i32 0, !dbg !1307
  call void @llvm.lifetime.start.p0i8(i64 1504, i8* nonnull %11) #26, !dbg !1307
  call void @llvm.dbg.declare(metadata [1504 x i8]* %4, metadata !1296, metadata !DIExpression()), !dbg !1308
  %12 = bitcast %"class.Cicada::Stm32Uart"* %5 to i8*, !dbg !1309
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %12) #26, !dbg !1309
  call void @llvm.dbg.declare(metadata %"class.Cicada::Stm32Uart"* %5, metadata !1297, metadata !DIExpression()), !dbg !1310
  %13 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC1EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5, i8* noundef nonnull %10, i8* noundef nonnull %11, i64 noundef 1504, %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), i16 noundef zeroext 4, i16 noundef zeroext 8) #26, !dbg !1310
  %14 = bitcast %class.SerialTask* %6 to i8*, !dbg !1311
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %14) #26, !dbg !1311
  call void @llvm.dbg.declare(metadata %class.SerialTask* %6, metadata !1298, metadata !DIExpression()), !dbg !1312
  %15 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %5, i32 0, i32 0, !dbg !1313
  %16 = call noundef %class.SerialTask* @_ZN10SerialTaskC2ERN6Cicada14BufferedSerialE(%class.SerialTask* noundef nonnull align 4 dereferenceable(28) %6, %"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %15), !dbg !1312
  %17 = bitcast [2 x %"class.Cicada::Task"*]* %7 to i8*, !dbg !1314
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #26, !dbg !1314
  call void @llvm.dbg.declare(metadata [2 x %"class.Cicada::Task"*]* %7, metadata !1299, metadata !DIExpression()), !dbg !1315
  %18 = getelementptr inbounds [2 x %"class.Cicada::Task"*], [2 x %"class.Cicada::Task"*]* %7, i32 0, i32 0, !dbg !1316
  %19 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %6, i32 0, i32 0, !dbg !1317
  store %"class.Cicada::Task"* %19, %"class.Cicada::Task"** %18, align 4, !dbg !1316, !tbaa !1318
  %20 = getelementptr inbounds [2 x %"class.Cicada::Task"*], [2 x %"class.Cicada::Task"*]* %7, i32 0, i32 1, !dbg !1316
  store %"class.Cicada::Task"* null, %"class.Cicada::Task"** %20, align 4, !dbg !1316, !tbaa !1318
  %21 = bitcast %"class.Cicada::Scheduler"* %8 to i8*, !dbg !1322
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %21) #26, !dbg !1322
  call void @llvm.dbg.declare(metadata %"class.Cicada::Scheduler"* %8, metadata !1301, metadata !DIExpression()), !dbg !1323
  %22 = call noundef %"class.Cicada::Scheduler"* @_ZN6Cicada9SchedulerC1EPFjvEPPNS_4TaskE(%"class.Cicada::Scheduler"* noundef nonnull align 4 dereferenceable(12) %8, i32 ()* noundef nonnull @_Z13eTickFunctionv, %"class.Cicada::Task"** noundef nonnull %18) #26, !dbg !1323
  call void @_ZN6Cicada9Scheduler5startEv(%"class.Cicada::Scheduler"* noundef nonnull align 4 dereferenceable(12) %8) #26, !dbg !1324
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %21) #26, !dbg !1325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #26, !dbg !1325
  %23 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(28) %19) #26, !dbg !1325
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %14) #26, !dbg !1325
  %24 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD1Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5) #26, !dbg !1325
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %12) #26, !dbg !1325
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %11) #26, !dbg !1325
  call void @llvm.lifetime.end.p0i8(i64 1504, i8* nonnull %10) #26, !dbg !1325
  ret i32 0, !dbg !1325
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: mustprogress noinline norecurse nounwind
define internal fastcc void @_ZL18SystemClock_Configv() unnamed_addr #0 !dbg !1326 {
  %1 = alloca %struct.RCC_OscInitTypeDef, align 4
  %2 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %3 = bitcast %struct.RCC_OscInitTypeDef* %1 to i8*, !dbg !1357
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #26, !dbg !1357
  call void @llvm.dbg.declare(metadata %struct.RCC_OscInitTypeDef* %1, metadata !1328, metadata !DIExpression()), !dbg !1358
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %3, i8 0, i32 40, i1 false), !dbg !1358
  %4 = bitcast %struct.RCC_ClkInitTypeDef* %2 to i8*, !dbg !1359
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #26, !dbg !1359
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %2, metadata !1348, metadata !DIExpression()), !dbg !1360
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(20) %4, i8 0, i32 20, i1 false), !dbg !1360
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 0, !dbg !1361
  store i32 2, i32* %5, align 4, !dbg !1362, !tbaa !1363
  %6 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 4, !dbg !1367
  store i32 1, i32* %6, align 4, !dbg !1368, !tbaa !1369
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 5, !dbg !1370
  store i32 16, i32* %7, align 4, !dbg !1371, !tbaa !1372
  %8 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 0, !dbg !1373
  store i32 2, i32* %8, align 4, !dbg !1374, !tbaa !1375
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 1, !dbg !1376
  store i32 0, i32* %9, align 4, !dbg !1377, !tbaa !1378
  %10 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %1, i32 0, i32 7, i32 2, !dbg !1379
  store i32 3670016, i32* %10, align 4, !dbg !1380, !tbaa !1381
  %11 = call i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef nonnull %1) #26, !dbg !1382
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 0, !dbg !1383
  store i32 15, i32* %12, align 4, !dbg !1384, !tbaa !1385
  %13 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 1, !dbg !1387
  store i32 2, i32* %13, align 4, !dbg !1388, !tbaa !1389
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 2, !dbg !1390
  store i32 0, i32* %14, align 4, !dbg !1391, !tbaa !1392
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 3, !dbg !1393
  store i32 1024, i32* %15, align 4, !dbg !1394, !tbaa !1395
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %2, i32 0, i32 4, !dbg !1396
  store i32 0, i32* %16, align 4, !dbg !1397, !tbaa !1398
  %17 = call i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef nonnull %2, i32 noundef 2) #26, !dbg !1399
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #26, !dbg !1400
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #26, !dbg !1400
  ret void, !dbg !1400
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %class.SerialTask* @_ZN10SerialTaskC2ERN6Cicada14BufferedSerialE(%class.SerialTask* noundef nonnull returned align 4 dereferenceable(28) %0, %"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %1) unnamed_addr #3 comdat align 2 !dbg !1401 {
  call void @llvm.dbg.value(metadata %class.SerialTask* %0, metadata !1403, metadata !DIExpression()), !dbg !1405
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %1, metadata !1404, metadata !DIExpression()), !dbg !1405
  %3 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 0, !dbg !1406
  %4 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %3, i16 noundef zeroext 0), !dbg !1407
  %5 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 0, i32 0, !dbg !1406
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV10SerialTask, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 4, !dbg !1406, !tbaa !1408
  %6 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 1, !dbg !1410
  store %"class.Cicada::BufferedSerial"* %1, %"class.Cicada::BufferedSerial"** %6, align 4, !dbg !1410, !tbaa !1318
  %7 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 2, !dbg !1411
  store i32 0, i32* %7, align 4, !dbg !1411, !tbaa !1412
  ret %class.SerialTask* %0, !dbg !1414
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull returned align 4 dereferenceable(20) %0) unnamed_addr #3 comdat align 2 !dbg !1415 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !1417, metadata !DIExpression()), !dbg !1418
  ret %"class.Cicada::Task"* %0, !dbg !1419
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskC2Et(%"class.Cicada::Task"* noundef nonnull returned align 4 dereferenceable(20) %0, i16 noundef zeroext %1) unnamed_addr #3 comdat align 2 !dbg !1420 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !1422, metadata !DIExpression()), !dbg !1424
  call void @llvm.dbg.value(metadata i16 %1, metadata !1423, metadata !DIExpression()), !dbg !1424
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 0, !dbg !1425
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6Cicada4TaskE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %3, align 4, !dbg !1425, !tbaa !1408
  %4 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !1426
  store i16 %1, i16* %4, align 4, !dbg !1426, !tbaa !1427
  %5 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 3, !dbg !1431
  store i8 0, i8* %5, align 4, !dbg !1431, !tbaa !1432
  %6 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 4, !dbg !1433
  store i32 0, i32* %6, align 4, !dbg !1433, !tbaa !1434
  ret %"class.Cicada::Task"* %0, !dbg !1435
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN10SerialTaskD0Ev(%class.SerialTask* noundef nonnull align 4 dereferenceable(28) %0) unnamed_addr #3 comdat align 2 !dbg !1436 {
  call void @llvm.dbg.value(metadata %class.SerialTask* %0, metadata !1439, metadata !DIExpression()), !dbg !1440
  %2 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 0, !dbg !1441
  %3 = call noundef %"class.Cicada::Task"* @_ZN6Cicada4TaskD2Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(28) %2) #26, !dbg !1441
  %4 = bitcast %class.SerialTask* %0 to i8*, !dbg !1441
  call void @_ZdlPv(i8* noundef %4) #27, !dbg !1441
  ret void, !dbg !1441
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN10SerialTask3runEv(%class.SerialTask* noundef nonnull align 4 dereferenceable(28) %0) unnamed_addr #4 comdat align 2 !dbg !113 {
  call void @llvm.dbg.value(metadata %class.SerialTask* %0, metadata !115, metadata !DIExpression()), !dbg !1442
  %2 = load i8, i8* @_ZZN10SerialTask3runEvE10entrypoint, align 1, !dbg !1443, !tbaa !1444
  switch i8 %2, label %28 [
    i8 0, label %3
    i8 1, label %22
    i8 2, label %22
  ], !dbg !1443, !llvm.loop !1445

3:                                                ; preds = %1
  %4 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 1, !dbg !1452
  %5 = bitcast %"class.Cicada::BufferedSerial"** %4 to i8**, !dbg !1452
  %6 = load i8*, i8** %5, align 4, !dbg !1452, !tbaa !1454
  %7 = getelementptr inbounds i8, i8* %6, i32 4, !dbg !1452
  %8 = bitcast i8* %7 to %"class.Cicada::ICommDevice"*, !dbg !1452
  %9 = bitcast i8* %7 to i1 (%"class.Cicada::ICommDevice"*, i32, i8)***, !dbg !1455
  %10 = load i1 (%"class.Cicada::ICommDevice"*, i32, i8)**, i1 (%"class.Cicada::ICommDevice"*, i32, i8)*** %9, align 4, !dbg !1455, !tbaa !1408
  %11 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*, i32, i8)*, i1 (%"class.Cicada::ICommDevice"*, i32, i8)** %10, i32 4, !dbg !1455
  %12 = load i1 (%"class.Cicada::ICommDevice"*, i32, i8)*, i1 (%"class.Cicada::ICommDevice"*, i32, i8)** %11, align 4, !dbg !1455
  %13 = call noundef zeroext i1 %12(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %8, i32 noundef 115200, i8 noundef zeroext 8) #26, !dbg !1455
  %14 = load i8*, i8** %5, align 4, !dbg !1456, !tbaa !1454
  %15 = getelementptr inbounds i8, i8* %14, i32 4, !dbg !1456
  %16 = bitcast i8* %15 to %"class.Cicada::ICommDevice"*, !dbg !1456
  %17 = bitcast i8* %15 to i1 (%"class.Cicada::ICommDevice"*)***, !dbg !1458
  %18 = load i1 (%"class.Cicada::ICommDevice"*)**, i1 (%"class.Cicada::ICommDevice"*)*** %17, align 4, !dbg !1458, !tbaa !1408
  %19 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %18, i32 2, !dbg !1458
  %20 = load i1 (%"class.Cicada::ICommDevice"*)*, i1 (%"class.Cicada::ICommDevice"*)** %19, align 4, !dbg !1458
  %21 = call noundef zeroext i1 %20(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %16) #26, !dbg !1458
  br label %24, !dbg !1459

22:                                               ; preds = %1, %1
  %23 = call i32 (i8*, ...) @printf_(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0)) #26, !dbg !1460
  br label %24, !dbg !1463

24:                                               ; preds = %22, %3
  %25 = phi i16 [ 100, %3 ], [ 500, %22 ]
  %26 = phi i8 [ 1, %3 ], [ 2, %22 ]
  %27 = getelementptr inbounds %class.SerialTask, %class.SerialTask* %0, i32 0, i32 0, !dbg !1464
  call void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %27, i16 noundef zeroext %25), !dbg !1464
  store i8 %26, i8* @_ZZN10SerialTask3runEvE10entrypoint, align 1, !dbg !1464, !tbaa !1444
  br label %28, !dbg !1465

28:                                               ; preds = %24, %1
  ret void, !dbg !1465
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4Task8setDelayEt(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0, i16 noundef zeroext %1) local_unnamed_addr #4 comdat align 2 !dbg !1466 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !1468, metadata !DIExpression()), !dbg !1470
  call void @llvm.dbg.value(metadata i16 %1, metadata !1469, metadata !DIExpression()), !dbg !1470
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !1471
  store i16 %1, i16* %3, align 4, !dbg !1472, !tbaa !1427
  ret void, !dbg !1473
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4TaskD0Ev(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) unnamed_addr #3 comdat align 2 !dbg !1474 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !1476, metadata !DIExpression()), !dbg !1477
  call void @llvm.trap() #28, !dbg !1478
  unreachable, !dbg !1478
}

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #7

; Function Attrs: mustprogress noinline nounwind
define dso_local void @SysTick_Handler() local_unnamed_addr #4 !dbg !1479 {
  call void @HAL_IncTick() #26, !dbg !1480
  ret void, !dbg !1481
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @USART2_IRQHandler() local_unnamed_addr #4 !dbg !2 {
  %1 = load atomic i8, i8* bitcast (i32* @_ZGVZ17USART2_IRQHandlerE8instance to i8*) acquire, align 4, !dbg !1482
  %2 = and i8 %1, 1, !dbg !1482
  %3 = icmp eq i8 %2, 0, !dbg !1482
  br i1 %3, label %4, label %9, !dbg !1482, !prof !1483

4:                                                ; preds = %0
  %5 = call i32 @__cxa_guard_acquire(i32* nonnull @_ZGVZ17USART2_IRQHandlerE8instance) #26, !dbg !1482
  %6 = icmp eq i32 %5, 0, !dbg !1482
  br i1 %6, label %9, label %7, !dbg !1482

7:                                                ; preds = %4
  %8 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*)) #26, !dbg !1484
  store %"class.Cicada::Stm32Uart"* %8, %"class.Cicada::Stm32Uart"** @_ZZ17USART2_IRQHandlerE8instance, align 4, !dbg !1482, !tbaa !1318
  call void @__cxa_guard_release(i32* nonnull @_ZGVZ17USART2_IRQHandlerE8instance) #26, !dbg !1482
  br label %9, !dbg !1482

9:                                                ; preds = %7, %4, %0
  %10 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ17USART2_IRQHandlerE8instance, align 4, !dbg !1485, !tbaa !1318
  call void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %10) #26, !dbg !1486
  ret void, !dbg !1487
}

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_guard_acquire(i32*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare dso_local void @__cxa_guard_release(i32*) local_unnamed_addr #8

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_putchar(i8 noundef zeroext %0) local_unnamed_addr #4 !dbg !102 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !107, metadata !DIExpression()), !dbg !1488
  %2 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial, align 4, !dbg !1489, !tbaa !1318
  %3 = icmp eq %"class.Cicada::Stm32Uart"* %2, null, !dbg !1489
  br i1 %3, label %4, label %6, !dbg !1491

4:                                                ; preds = %1
  %5 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073759232 to %struct.USART_TypeDef*)) #26, !dbg !1492
  store %"class.Cicada::Stm32Uart"* %5, %"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial, align 4, !dbg !1494, !tbaa !1318
  br label %6, !dbg !1495

6:                                                ; preds = %4, %1
  %7 = load %"class.Cicada::BufferedSerial"*, %"class.Cicada::BufferedSerial"** bitcast (%"class.Cicada::Stm32Uart"** @_ZZ8_putcharE6serial to %"class.Cicada::BufferedSerial"**), align 4, !dbg !1496, !tbaa !1318
  %8 = bitcast %"class.Cicada::BufferedSerial"* %7 to void (%"class.Cicada::BufferedSerial"*, i8)***, !dbg !1497
  %9 = load void (%"class.Cicada::BufferedSerial"*, i8)**, void (%"class.Cicada::BufferedSerial"*, i8)*** %8, align 8, !dbg !1497, !tbaa !1408
  %10 = getelementptr inbounds void (%"class.Cicada::BufferedSerial"*, i8)*, void (%"class.Cicada::BufferedSerial"*, i8)** %9, i32 9, !dbg !1497
  %11 = load void (%"class.Cicada::BufferedSerial"*, i8)*, void (%"class.Cicada::BufferedSerial"*, i8)** %10, align 4, !dbg !1497
  call void %11(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %7, i8 noundef zeroext %0) #26, !dbg !1497
  ret void, !dbg !1498
}

; Function Attrs: noinline nounwind
define dso_local i32 @printf_(i8* noundef %0, ...) local_unnamed_addr #3 !dbg !1499 {
  %2 = alloca %struct.__va_list, align 4
  %3 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !1503, metadata !DIExpression()), !dbg !1518
  %4 = bitcast %struct.__va_list* %2 to i8*, !dbg !1519
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #26, !dbg !1519
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !1504, metadata !DIExpression()), !dbg !1520
  call void @llvm.va_start(i8* nonnull %4), !dbg !1521
  %5 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i32 0, i32 0, !dbg !1522
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #26, !dbg !1522
  call void @llvm.dbg.declare(metadata [1 x i8]* %3, metadata !1512, metadata !DIExpression()), !dbg !1523
  %6 = bitcast %struct.__va_list* %2 to i32*, !dbg !1524
  %7 = load i32, i32* %6, align 4, !dbg !1524
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !1524
  %9 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_char, i8* noundef nonnull %5, i32 noundef -1, i8* noundef %0, [1 x i32] %8), !dbg !1524
  call void @llvm.dbg.value(metadata i32 %9, metadata !1516, metadata !DIExpression()), !dbg !1518
  call void @llvm.va_end(i8* %4), !dbg !1525
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #26, !dbg !1526
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #26, !dbg !1526
  ret i32 %9, !dbg !1527
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #9

; Function Attrs: noinline nounwind
define internal void @_out_char(i8 noundef zeroext %0, i8* nocapture noundef readnone %1, i32 noundef %2, i32 noundef %3) #3 !dbg !1528 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1530, metadata !DIExpression()), !dbg !1534
  call void @llvm.dbg.value(metadata i8* %1, metadata !1531, metadata !DIExpression()), !dbg !1534
  call void @llvm.dbg.value(metadata i32 %2, metadata !1532, metadata !DIExpression()), !dbg !1534
  call void @llvm.dbg.value(metadata i32 %3, metadata !1533, metadata !DIExpression()), !dbg !1534
  %5 = icmp eq i8 %0, 0, !dbg !1535
  br i1 %5, label %7, label %6, !dbg !1537

6:                                                ; preds = %4
  call void @_putchar(i8 noundef zeroext %0) #26, !dbg !1538
  br label %7, !dbg !1540

7:                                                ; preds = %6, %4
  ret void, !dbg !1541
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) unnamed_addr #3 !dbg !1542 {
  %6 = alloca i8*, align 4
  %7 = extractvalue [1 x i32] %4, 0
  %8 = inttoptr i32 %7 to i8*
  call void @llvm.dbg.value(metadata i8* %8, metadata !1550, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !1546, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i8* %1, metadata !1547, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %2, metadata !1548, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i8* %3, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %3, i8** %6, align 4, !tbaa !1598
  call void @llvm.dbg.value(metadata i32 0, metadata !1555, metadata !DIExpression()), !dbg !1597
  %9 = icmp eq i8* %1, null, !dbg !1602
  %10 = select i1 %9, void (i8, i8*, i32, i32)* @_out_null, void (i8, i8*, i32, i32)* %0, !dbg !1604
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %10, metadata !1546, metadata !DIExpression()), !dbg !1597
  br label %11, !dbg !1605

11:                                               ; preds = %354, %5
  %12 = phi i32 [ 0, %5 ], [ %355, %354 ]
  %13 = phi i8* [ %8, %5 ], [ %356, %354 ]
  br label %14, !dbg !1605

14:                                               ; preds = %11, %18
  %15 = phi i32 [ %19, %18 ], [ %12, %11 ], !dbg !1597
  call void @llvm.dbg.value(metadata i8* %13, metadata !1550, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %15, metadata !1555, metadata !DIExpression()), !dbg !1597
  %16 = load i8*, i8** %6, align 4, !dbg !1606, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %16, metadata !1549, metadata !DIExpression()), !dbg !1597
  %17 = load i8, i8* %16, align 1, !dbg !1607, !tbaa !1608
  switch i8 %17, label %18 [
    i8 0, label %357
    i8 37, label %22
  ], !dbg !1605

18:                                               ; preds = %14
  %19 = add i32 %15, 1, !dbg !1609
  call void @llvm.dbg.value(metadata i32 %19, metadata !1555, metadata !DIExpression()), !dbg !1597
  call void %10(i8 noundef zeroext %17, i8* noundef %1, i32 noundef %15, i32 noundef %2) #26, !dbg !1612, !callees !1613
  %20 = load i8*, i8** %6, align 4, !dbg !1614, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %20, metadata !1549, metadata !DIExpression()), !dbg !1597
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !1614
  call void @llvm.dbg.value(metadata i8* %21, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %21, i8** %6, align 4, !dbg !1614, !tbaa !1598
  br label %14, !dbg !1615, !llvm.loop !1616

22:                                               ; preds = %14
  %23 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !1618
  call void @llvm.dbg.value(metadata i8* %23, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %23, i8** %6, align 4, !dbg !1618, !tbaa !1598
  call void @llvm.dbg.value(metadata i32 0, metadata !1551, metadata !DIExpression()), !dbg !1597
  br label %24, !dbg !1620

24:                                               ; preds = %43, %22
  %25 = phi i32 [ 0, %22 ], [ %45, %43 ], !dbg !1621
  call void @llvm.dbg.value(metadata i32 %25, metadata !1551, metadata !DIExpression()), !dbg !1597
  %26 = load i8*, i8** %6, align 4, !dbg !1622, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %26, metadata !1549, metadata !DIExpression()), !dbg !1597
  %27 = load i8, i8* %26, align 1, !dbg !1624, !tbaa !1608
  switch i8 %27, label %43 [
    i8 48, label %28
    i8 45, label %31
    i8 43, label %34
    i8 32, label %37
    i8 35, label %40
  ], !dbg !1625

28:                                               ; preds = %24
  %29 = or i32 %25, 1, !dbg !1626
  call void @llvm.dbg.value(metadata i32 %29, metadata !1551, metadata !DIExpression()), !dbg !1597
  %30 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1628
  call void @llvm.dbg.value(metadata i8* %30, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %30, i8** %6, align 4, !dbg !1628, !tbaa !1598
  call void @llvm.dbg.value(metadata i32 1, metadata !1554, metadata !DIExpression()), !dbg !1597
  br label %43, !dbg !1629

31:                                               ; preds = %24
  %32 = or i32 %25, 2, !dbg !1630
  call void @llvm.dbg.value(metadata i32 %32, metadata !1551, metadata !DIExpression()), !dbg !1597
  %33 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1631
  call void @llvm.dbg.value(metadata i8* %33, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %33, i8** %6, align 4, !dbg !1631, !tbaa !1598
  call void @llvm.dbg.value(metadata i32 1, metadata !1554, metadata !DIExpression()), !dbg !1597
  br label %43, !dbg !1632

34:                                               ; preds = %24
  %35 = or i32 %25, 4, !dbg !1633
  call void @llvm.dbg.value(metadata i32 %35, metadata !1551, metadata !DIExpression()), !dbg !1597
  %36 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1634
  call void @llvm.dbg.value(metadata i8* %36, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %36, i8** %6, align 4, !dbg !1634, !tbaa !1598
  call void @llvm.dbg.value(metadata i32 1, metadata !1554, metadata !DIExpression()), !dbg !1597
  br label %43, !dbg !1635

37:                                               ; preds = %24
  %38 = or i32 %25, 8, !dbg !1636
  call void @llvm.dbg.value(metadata i32 %38, metadata !1551, metadata !DIExpression()), !dbg !1597
  %39 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1637
  call void @llvm.dbg.value(metadata i8* %39, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %39, i8** %6, align 4, !dbg !1637, !tbaa !1598
  call void @llvm.dbg.value(metadata i32 1, metadata !1554, metadata !DIExpression()), !dbg !1597
  br label %43, !dbg !1638

40:                                               ; preds = %24
  %41 = or i32 %25, 16, !dbg !1639
  call void @llvm.dbg.value(metadata i32 %41, metadata !1551, metadata !DIExpression()), !dbg !1597
  %42 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !1640
  call void @llvm.dbg.value(metadata i8* %42, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %42, i8** %6, align 4, !dbg !1640, !tbaa !1598
  call void @llvm.dbg.value(metadata i32 1, metadata !1554, metadata !DIExpression()), !dbg !1597
  br label %43, !dbg !1641

43:                                               ; preds = %24, %28, %31, %34, %37, %40
  %44 = phi i1 [ false, %28 ], [ false, %31 ], [ false, %34 ], [ false, %37 ], [ false, %40 ], [ true, %24 ], !dbg !1642
  %45 = phi i32 [ %29, %28 ], [ %32, %31 ], [ %35, %34 ], [ %38, %37 ], [ %41, %40 ], [ %25, %24 ], !dbg !1643
  call void @llvm.dbg.value(metadata i32 %45, metadata !1551, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 undef, metadata !1554, metadata !DIExpression()), !dbg !1597
  br i1 %44, label %46, label %24, !dbg !1644, !llvm.loop !1645

46:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 0, metadata !1552, metadata !DIExpression()), !dbg !1597
  %47 = load i8*, i8** %6, align 4, !dbg !1647, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %47, metadata !1549, metadata !DIExpression()), !dbg !1597
  %48 = load i8, i8* %47, align 1, !dbg !1648, !tbaa !1608
  %49 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %48), !dbg !1649
  br i1 %49, label %50, label %52, !dbg !1650

50:                                               ; preds = %46
  call void @llvm.dbg.value(metadata i8** %6, metadata !1549, metadata !DIExpression(DW_OP_deref)), !dbg !1597
  %51 = call fastcc i32 @_atoi(i8** noundef nonnull %6), !dbg !1651
  call void @llvm.dbg.value(metadata i32 %51, metadata !1552, metadata !DIExpression()), !dbg !1597
  br label %64, !dbg !1653

52:                                               ; preds = %46
  call void @llvm.dbg.value(metadata i8* %47, metadata !1549, metadata !DIExpression()), !dbg !1597
  %53 = icmp eq i8 %48, 42, !dbg !1654
  br i1 %53, label %54, label %64, !dbg !1655

54:                                               ; preds = %52
  %55 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !1656
  call void @llvm.dbg.value(metadata i8* %55, metadata !1550, metadata !DIExpression()), !dbg !1597
  %56 = bitcast i8* %13 to i32*, !dbg !1656
  %57 = load i32, i32* %56, align 4, !dbg !1656
  call void @llvm.dbg.value(metadata i32 %57, metadata !1556, metadata !DIExpression()), !dbg !1657
  %58 = icmp slt i32 %57, 0, !dbg !1658
  %59 = or i32 %45, 2, !dbg !1660
  %60 = sub nsw i32 0, %57, !dbg !1660
  %61 = select i1 %58, i32 %60, i32 %57, !dbg !1660
  %62 = select i1 %58, i32 %59, i32 %45, !dbg !1660
  call void @llvm.dbg.value(metadata i32 %62, metadata !1551, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %61, metadata !1552, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i8* %47, metadata !1549, metadata !DIExpression()), !dbg !1597
  %63 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !1661
  call void @llvm.dbg.value(metadata i8* %63, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %63, i8** %6, align 4, !dbg !1661, !tbaa !1598
  br label %64, !dbg !1662

64:                                               ; preds = %52, %54, %50
  %65 = phi i32 [ %51, %50 ], [ %61, %54 ], [ 0, %52 ], !dbg !1643
  %66 = phi i32 [ %45, %50 ], [ %62, %54 ], [ %45, %52 ], !dbg !1643
  %67 = phi i8* [ %13, %50 ], [ %55, %54 ], [ %13, %52 ]
  call void @llvm.dbg.value(metadata i8* %67, metadata !1550, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %66, metadata !1551, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %65, metadata !1552, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 0, metadata !1553, metadata !DIExpression()), !dbg !1597
  %68 = load i8*, i8** %6, align 4, !dbg !1663, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %68, metadata !1549, metadata !DIExpression()), !dbg !1597
  %69 = load i8, i8* %68, align 1, !dbg !1664, !tbaa !1608
  %70 = icmp eq i8 %69, 46, !dbg !1665
  br i1 %70, label %71, label %87, !dbg !1666

71:                                               ; preds = %64
  %72 = or i32 %66, 1024, !dbg !1667
  call void @llvm.dbg.value(metadata i32 %72, metadata !1551, metadata !DIExpression()), !dbg !1597
  %73 = getelementptr inbounds i8, i8* %68, i32 1, !dbg !1668
  call void @llvm.dbg.value(metadata i8* %73, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %73, i8** %6, align 4, !dbg !1668, !tbaa !1598
  %74 = load i8, i8* %73, align 1, !dbg !1669, !tbaa !1608
  %75 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %74), !dbg !1670
  br i1 %75, label %76, label %78, !dbg !1671

76:                                               ; preds = %71
  call void @llvm.dbg.value(metadata i8** %6, metadata !1549, metadata !DIExpression(DW_OP_deref)), !dbg !1597
  %77 = call fastcc i32 @_atoi(i8** noundef nonnull %6), !dbg !1672
  call void @llvm.dbg.value(metadata i32 %77, metadata !1553, metadata !DIExpression()), !dbg !1597
  br label %87, !dbg !1674

78:                                               ; preds = %71
  call void @llvm.dbg.value(metadata i8* %73, metadata !1549, metadata !DIExpression()), !dbg !1597
  %79 = icmp eq i8 %74, 42, !dbg !1675
  br i1 %79, label %80, label %87, !dbg !1676

80:                                               ; preds = %78
  %81 = getelementptr inbounds i8, i8* %67, i32 4, !dbg !1677
  call void @llvm.dbg.value(metadata i8* %81, metadata !1550, metadata !DIExpression()), !dbg !1597
  %82 = bitcast i8* %67 to i32*, !dbg !1677
  %83 = load i32, i32* %82, align 4, !dbg !1677
  call void @llvm.dbg.value(metadata i32 %83, metadata !1561, metadata !DIExpression()), !dbg !1678
  %84 = icmp sgt i32 %83, 0, !dbg !1679
  %85 = select i1 %84, i32 %83, i32 0, !dbg !1680
  call void @llvm.dbg.value(metadata i32 %85, metadata !1553, metadata !DIExpression()), !dbg !1597
  %86 = getelementptr inbounds i8, i8* %68, i32 2, !dbg !1681
  call void @llvm.dbg.value(metadata i8* %86, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %86, i8** %6, align 4, !dbg !1681, !tbaa !1598
  br label %87, !dbg !1682

87:                                               ; preds = %76, %80, %78, %64
  %88 = phi i32 [ %77, %76 ], [ %85, %80 ], [ 0, %78 ], [ 0, %64 ], !dbg !1643
  %89 = phi i32 [ %72, %76 ], [ %72, %80 ], [ %72, %78 ], [ %66, %64 ], !dbg !1643
  %90 = phi i8* [ %67, %76 ], [ %81, %80 ], [ %67, %78 ], [ %67, %64 ]
  call void @llvm.dbg.value(metadata i8* %90, metadata !1550, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %89, metadata !1551, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %88, metadata !1553, metadata !DIExpression()), !dbg !1597
  %91 = load i8*, i8** %6, align 4, !dbg !1683, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %91, metadata !1549, metadata !DIExpression()), !dbg !1597
  %92 = load i8, i8* %91, align 1, !dbg !1684, !tbaa !1608
  %93 = zext i8 %92 to i32, !dbg !1684
  %94 = add nsw i32 %93, -104, !dbg !1685
  %95 = call i32 @llvm.fshl.i32(i32 %94, i32 %94, i32 31), !dbg !1685
  switch i32 %95, label %121 [
    i32 2, label %96
    i32 0, label %104
    i32 6, label %112
    i32 1, label %115
    i32 9, label %118
  ], !dbg !1685

96:                                               ; preds = %87
  %97 = or i32 %89, 256, !dbg !1686
  call void @llvm.dbg.value(metadata i32 %97, metadata !1551, metadata !DIExpression()), !dbg !1597
  %98 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1688
  call void @llvm.dbg.value(metadata i8* %98, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %98, i8** %6, align 4, !dbg !1688, !tbaa !1598
  %99 = load i8, i8* %98, align 1, !dbg !1689, !tbaa !1608
  %100 = icmp eq i8 %99, 108, !dbg !1691
  br i1 %100, label %101, label %121, !dbg !1692

101:                                              ; preds = %96
  %102 = or i32 %89, 768, !dbg !1693
  call void @llvm.dbg.value(metadata i32 %102, metadata !1551, metadata !DIExpression()), !dbg !1597
  %103 = getelementptr inbounds i8, i8* %91, i32 2, !dbg !1695
  call void @llvm.dbg.value(metadata i8* %103, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %103, i8** %6, align 4, !dbg !1695, !tbaa !1598
  br label %121, !dbg !1696

104:                                              ; preds = %87
  %105 = or i32 %89, 128, !dbg !1697
  call void @llvm.dbg.value(metadata i32 %105, metadata !1551, metadata !DIExpression()), !dbg !1597
  %106 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1698
  call void @llvm.dbg.value(metadata i8* %106, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %106, i8** %6, align 4, !dbg !1698, !tbaa !1598
  %107 = load i8, i8* %106, align 1, !dbg !1699, !tbaa !1608
  %108 = icmp eq i8 %107, 104, !dbg !1701
  br i1 %108, label %109, label %121, !dbg !1702

109:                                              ; preds = %104
  %110 = or i32 %89, 192, !dbg !1703
  call void @llvm.dbg.value(metadata i32 %110, metadata !1551, metadata !DIExpression()), !dbg !1597
  %111 = getelementptr inbounds i8, i8* %91, i32 2, !dbg !1705
  call void @llvm.dbg.value(metadata i8* %111, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %111, i8** %6, align 4, !dbg !1705, !tbaa !1598
  br label %121, !dbg !1706

112:                                              ; preds = %87
  %113 = or i32 %89, 256, !dbg !1707
  call void @llvm.dbg.value(metadata i32 %113, metadata !1551, metadata !DIExpression()), !dbg !1597
  %114 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1708
  call void @llvm.dbg.value(metadata i8* %114, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %114, i8** %6, align 4, !dbg !1708, !tbaa !1598
  br label %121, !dbg !1709

115:                                              ; preds = %87
  %116 = or i32 %89, 512, !dbg !1710
  call void @llvm.dbg.value(metadata i32 %116, metadata !1551, metadata !DIExpression()), !dbg !1597
  %117 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1711
  call void @llvm.dbg.value(metadata i8* %117, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %117, i8** %6, align 4, !dbg !1711, !tbaa !1598
  br label %121, !dbg !1712

118:                                              ; preds = %87
  %119 = or i32 %89, 256, !dbg !1713
  call void @llvm.dbg.value(metadata i32 %119, metadata !1551, metadata !DIExpression()), !dbg !1597
  %120 = getelementptr inbounds i8, i8* %91, i32 1, !dbg !1714
  call void @llvm.dbg.value(metadata i8* %120, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %120, i8** %6, align 4, !dbg !1714, !tbaa !1598
  br label %121, !dbg !1715

121:                                              ; preds = %87, %104, %109, %96, %101, %118, %115, %112
  %122 = phi i32 [ %89, %87 ], [ %119, %118 ], [ %116, %115 ], [ %113, %112 ], [ %110, %109 ], [ %105, %104 ], [ %102, %101 ], [ %97, %96 ], !dbg !1643
  call void @llvm.dbg.value(metadata i32 %122, metadata !1551, metadata !DIExpression()), !dbg !1597
  %123 = load i8*, i8** %6, align 4, !dbg !1716, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %123, metadata !1549, metadata !DIExpression()), !dbg !1597
  %124 = load i8, i8* %123, align 1, !dbg !1717, !tbaa !1608
  switch i8 %124, label %350 [
    i8 37, label %346
    i8 112, label %337
    i8 115, label %278
    i8 99, label %244
    i8 70, label %233
    i8 102, label %233
    i8 120, label %129
    i8 88, label %129
    i8 111, label %125
    i8 98, label %126
    i8 100, label %127
    i8 105, label %127
    i8 117, label %127
  ], !dbg !1718

125:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 8, metadata !1567, metadata !DIExpression()), !dbg !1719
  br label %129, !dbg !1720

126:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 2, metadata !1567, metadata !DIExpression()), !dbg !1719
  br label %129, !dbg !1724

127:                                              ; preds = %121, %121, %121
  call void @llvm.dbg.value(metadata i32 10, metadata !1567, metadata !DIExpression()), !dbg !1719
  %128 = and i32 %122, -17, !dbg !1727
  call void @llvm.dbg.value(metadata i32 %128, metadata !1551, metadata !DIExpression()), !dbg !1597
  br label %129

129:                                              ; preds = %121, %121, %125, %127, %126
  %130 = phi i32 [ 8, %125 ], [ 2, %126 ], [ 10, %127 ], [ 16, %121 ], [ 16, %121 ], !dbg !1729
  %131 = phi i32 [ %122, %125 ], [ %122, %126 ], [ %128, %127 ], [ %122, %121 ], [ %122, %121 ], !dbg !1643
  call void @llvm.dbg.value(metadata i32 %131, metadata !1551, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %130, metadata !1567, metadata !DIExpression()), !dbg !1719
  call void @llvm.dbg.value(metadata i8* %123, metadata !1549, metadata !DIExpression()), !dbg !1597
  %132 = icmp eq i8 %124, 88, !dbg !1730
  %133 = or i32 %131, 32
  %134 = select i1 %132, i32 %133, i32 %131, !dbg !1732
  call void @llvm.dbg.value(metadata i32 %134, metadata !1551, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i8* %123, metadata !1549, metadata !DIExpression()), !dbg !1597
  switch i8 %124, label %135 [
    i8 105, label %137
    i8 100, label %137
  ], !dbg !1733

135:                                              ; preds = %129
  %136 = and i32 %134, -13, !dbg !1735
  call void @llvm.dbg.value(metadata i32 %136, metadata !1551, metadata !DIExpression()), !dbg !1597
  br label %137, !dbg !1737

137:                                              ; preds = %129, %129, %135
  %138 = phi i32 [ %136, %135 ], [ %134, %129 ], [ %134, %129 ], !dbg !1719
  call void @llvm.dbg.value(metadata i32 %138, metadata !1551, metadata !DIExpression()), !dbg !1597
  %139 = and i32 %138, 1024, !dbg !1738
  %140 = icmp eq i32 %139, 0, !dbg !1738
  %141 = and i32 %138, -2
  %142 = select i1 %140, i32 %138, i32 %141, !dbg !1740
  call void @llvm.dbg.value(metadata i32 %142, metadata !1551, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i8* %123, metadata !1549, metadata !DIExpression()), !dbg !1597
  switch i8 %124, label %189 [
    i8 105, label %143
    i8 100, label %143
  ], !dbg !1741

143:                                              ; preds = %137, %137
  %144 = and i32 %142, 512, !dbg !1742
  %145 = icmp eq i32 %144, 0, !dbg !1742
  br i1 %145, label %158, label %146, !dbg !1743

146:                                              ; preds = %143
  %147 = ptrtoint i8* %90 to i32, !dbg !1744
  %148 = add i32 %147, 7, !dbg !1744
  %149 = and i32 %148, -8, !dbg !1744
  %150 = inttoptr i32 %149 to i8*, !dbg !1744
  %151 = getelementptr inbounds i8, i8* %150, i32 8, !dbg !1744
  call void @llvm.dbg.value(metadata i8* %151, metadata !1550, metadata !DIExpression()), !dbg !1597
  %152 = inttoptr i32 %149 to i64*, !dbg !1744
  %153 = load i64, i64* %152, align 8, !dbg !1744
  call void @llvm.dbg.value(metadata i64 %153, metadata !1570, metadata !DIExpression()), !dbg !1745
  %154 = call i64 @llvm.abs.i64(i64 %153, i1 true), !dbg !1746
  %155 = icmp slt i64 %153, 0, !dbg !1747
  %156 = zext i32 %130 to i64, !dbg !1748
  %157 = call fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i64 noundef %154, i1 noundef zeroext %155, i64 noundef %156, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1749
  call void @llvm.dbg.value(metadata i32 %157, metadata !1555, metadata !DIExpression()), !dbg !1597
  br label %228, !dbg !1750

158:                                              ; preds = %143
  %159 = and i32 %142, 256, !dbg !1751
  %160 = icmp eq i32 %159, 0, !dbg !1751
  br i1 %160, label %168, label %161, !dbg !1752

161:                                              ; preds = %158
  %162 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1753
  call void @llvm.dbg.value(metadata i8* %162, metadata !1550, metadata !DIExpression()), !dbg !1597
  %163 = bitcast i8* %90 to i32*, !dbg !1753
  %164 = load i32, i32* %163, align 4, !dbg !1753
  call void @llvm.dbg.value(metadata i32 %164, metadata !1576, metadata !DIExpression()), !dbg !1754
  %165 = call i32 @llvm.abs.i32(i32 %164, i1 true), !dbg !1755
  %166 = icmp slt i32 %164, 0, !dbg !1756
  %167 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %165, i1 noundef zeroext %166, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1757
  call void @llvm.dbg.value(metadata i32 %167, metadata !1555, metadata !DIExpression()), !dbg !1597
  br label %228, !dbg !1758

168:                                              ; preds = %158
  %169 = and i32 %142, 64, !dbg !1759
  %170 = icmp eq i32 %169, 0, !dbg !1759
  br i1 %170, label %175, label %171, !dbg !1760

171:                                              ; preds = %168
  call void @llvm.dbg.value(metadata i8* %90, metadata !1550, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1597
  %172 = bitcast i8* %90 to i32*, !dbg !1761
  %173 = load i32, i32* %172, align 4, !dbg !1761
  %174 = and i32 %173, 255, !dbg !1762
  br label %183, !dbg !1760

175:                                              ; preds = %168
  %176 = and i32 %142, 128, !dbg !1763
  %177 = icmp eq i32 %176, 0, !dbg !1763
  call void @llvm.dbg.value(metadata i8* %90, metadata !1550, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1597
  call void @llvm.dbg.value(metadata i8* %90, metadata !1550, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1597
  %178 = bitcast i8* %90 to i32*, !dbg !1764
  %179 = load i32, i32* %178, align 4, !dbg !1764
  br i1 %177, label %183, label %180, !dbg !1765

180:                                              ; preds = %175
  %181 = shl i32 %179, 16, !dbg !1766
  %182 = ashr exact i32 %181, 16, !dbg !1766
  br label %183, !dbg !1765

183:                                              ; preds = %175, %180, %171
  %184 = phi i32 [ %174, %171 ], [ %182, %180 ], [ %179, %175 ], !dbg !1760
  %185 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1764
  call void @llvm.dbg.value(metadata i8* %185, metadata !1550, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %184, metadata !1581, metadata !DIExpression()), !dbg !1764
  %186 = call i32 @llvm.abs.i32(i32 %184, i1 true), !dbg !1767
  %187 = icmp slt i32 %184, 0, !dbg !1768
  %188 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %186, i1 noundef zeroext %187, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1769
  call void @llvm.dbg.value(metadata i32 %188, metadata !1555, metadata !DIExpression()), !dbg !1597
  br label %228

189:                                              ; preds = %137
  %190 = and i32 %142, 512, !dbg !1770
  %191 = icmp eq i32 %190, 0, !dbg !1770
  br i1 %191, label %202, label %192, !dbg !1771

192:                                              ; preds = %189
  %193 = ptrtoint i8* %90 to i32, !dbg !1772
  %194 = add i32 %193, 7, !dbg !1772
  %195 = and i32 %194, -8, !dbg !1772
  %196 = inttoptr i32 %195 to i8*, !dbg !1772
  %197 = getelementptr inbounds i8, i8* %196, i32 8, !dbg !1772
  call void @llvm.dbg.value(metadata i8* %197, metadata !1550, metadata !DIExpression()), !dbg !1597
  %198 = inttoptr i32 %195 to i64*, !dbg !1772
  %199 = load i64, i64* %198, align 8, !dbg !1772
  %200 = zext i32 %130 to i64, !dbg !1774
  %201 = call fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i64 noundef %199, i1 noundef zeroext false, i64 noundef %200, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1775
  call void @llvm.dbg.value(metadata i32 %201, metadata !1555, metadata !DIExpression()), !dbg !1597
  br label %228, !dbg !1776

202:                                              ; preds = %189
  %203 = and i32 %142, 256, !dbg !1777
  %204 = icmp eq i32 %203, 0, !dbg !1777
  br i1 %204, label %210, label %205, !dbg !1778

205:                                              ; preds = %202
  %206 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1779
  call void @llvm.dbg.value(metadata i8* %206, metadata !1550, metadata !DIExpression()), !dbg !1597
  %207 = bitcast i8* %90 to i32*, !dbg !1779
  %208 = load i32, i32* %207, align 4, !dbg !1779
  %209 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %208, i1 noundef zeroext false, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1781
  call void @llvm.dbg.value(metadata i32 %209, metadata !1555, metadata !DIExpression()), !dbg !1597
  br label %228, !dbg !1782

210:                                              ; preds = %202
  %211 = and i32 %142, 64, !dbg !1783
  %212 = icmp eq i32 %211, 0, !dbg !1783
  br i1 %212, label %217, label %213, !dbg !1784

213:                                              ; preds = %210
  call void @llvm.dbg.value(metadata i8* %90, metadata !1550, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1597
  %214 = bitcast i8* %90 to i32*, !dbg !1785
  %215 = load i32, i32* %214, align 4, !dbg !1785
  %216 = and i32 %215, 255, !dbg !1786
  br label %224, !dbg !1784

217:                                              ; preds = %210
  %218 = and i32 %142, 128, !dbg !1787
  %219 = icmp eq i32 %218, 0, !dbg !1787
  call void @llvm.dbg.value(metadata i8* %90, metadata !1550, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1597
  call void @llvm.dbg.value(metadata i8* %90, metadata !1550, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !1597
  %220 = bitcast i8* %90 to i32*, !dbg !1788
  %221 = load i32, i32* %220, align 4, !dbg !1788
  %222 = and i32 %221, 65535
  %223 = select i1 %219, i32 %221, i32 %222, !dbg !1789
  br label %224, !dbg !1789

224:                                              ; preds = %217, %213
  %225 = phi i32 [ %216, %213 ], [ %223, %217 ], !dbg !1784
  %226 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1788
  call void @llvm.dbg.value(metadata i8* %226, metadata !1550, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %225, metadata !1583, metadata !DIExpression()), !dbg !1788
  %227 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %225, i1 noundef zeroext false, i32 noundef %130, i32 noundef %88, i32 noundef %65, i32 noundef %142), !dbg !1790
  call void @llvm.dbg.value(metadata i32 %227, metadata !1555, metadata !DIExpression()), !dbg !1597
  br label %228

228:                                              ; preds = %192, %224, %205, %146, %183, %161
  %229 = phi i32 [ %157, %146 ], [ %167, %161 ], [ %188, %183 ], [ %201, %192 ], [ %209, %205 ], [ %227, %224 ], !dbg !1791
  %230 = phi i8* [ %151, %146 ], [ %162, %161 ], [ %185, %183 ], [ %197, %192 ], [ %206, %205 ], [ %226, %224 ], !dbg !1791
  call void @llvm.dbg.value(metadata i8* %230, metadata !1550, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %229, metadata !1555, metadata !DIExpression()), !dbg !1597
  %231 = load i8*, i8** %6, align 4, !dbg !1792, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %231, metadata !1549, metadata !DIExpression()), !dbg !1597
  %232 = getelementptr inbounds i8, i8* %231, i32 1, !dbg !1792
  call void @llvm.dbg.value(metadata i8* %232, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %232, i8** %6, align 4, !dbg !1792, !tbaa !1598
  br label %354

233:                                              ; preds = %121, %121
  %234 = ptrtoint i8* %90 to i32, !dbg !1793
  %235 = add i32 %234, 7, !dbg !1793
  %236 = and i32 %235, -8, !dbg !1793
  %237 = inttoptr i32 %236 to i8*, !dbg !1793
  %238 = getelementptr inbounds i8, i8* %237, i32 8, !dbg !1793
  call void @llvm.dbg.value(metadata i8* %238, metadata !1550, metadata !DIExpression()), !dbg !1597
  %239 = inttoptr i32 %236 to double*, !dbg !1793
  %240 = load double, double* %239, align 8, !dbg !1793
  %241 = call fastcc i32 @_ftoa(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, double noundef %240, i32 noundef %88, i32 noundef %65, i32 noundef %122), !dbg !1794
  call void @llvm.dbg.value(metadata i32 %241, metadata !1555, metadata !DIExpression()), !dbg !1597
  %242 = load i8*, i8** %6, align 4, !dbg !1795, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %242, metadata !1549, metadata !DIExpression()), !dbg !1597
  %243 = getelementptr inbounds i8, i8* %242, i32 1, !dbg !1795
  call void @llvm.dbg.value(metadata i8* %243, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %243, i8** %6, align 4, !dbg !1795, !tbaa !1598
  br label %354, !dbg !1796

244:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 1, metadata !1589, metadata !DIExpression()), !dbg !1797
  %245 = and i32 %122, 2, !dbg !1798
  %246 = icmp eq i32 %245, 0, !dbg !1798
  br i1 %246, label %247, label %257, !dbg !1800

247:                                              ; preds = %244
  call void @llvm.dbg.value(metadata i32 1, metadata !1589, metadata !DIExpression()), !dbg !1797
  call void @llvm.dbg.value(metadata i32 %15, metadata !1555, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 2, metadata !1589, metadata !DIExpression()), !dbg !1797
  %248 = icmp ugt i32 %65, 1, !dbg !1801
  br i1 %248, label %249, label %257, !dbg !1803

249:                                              ; preds = %247
  %250 = add i32 %65, 1, !dbg !1803
  br label %251, !dbg !1803

251:                                              ; preds = %249, %251
  %252 = phi i32 [ %255, %251 ], [ 2, %249 ]
  %253 = phi i32 [ %254, %251 ], [ %15, %249 ]
  call void @llvm.dbg.value(metadata i32 %253, metadata !1555, metadata !DIExpression()), !dbg !1597
  %254 = add i32 %253, 1, !dbg !1804
  call void @llvm.dbg.value(metadata i32 %254, metadata !1555, metadata !DIExpression()), !dbg !1597
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %253, i32 noundef %2) #26, !dbg !1806, !callees !1613
  call void @llvm.dbg.value(metadata i32 %252, metadata !1589, metadata !DIExpression()), !dbg !1797
  %255 = add i32 %252, 1, !dbg !1807
  call void @llvm.dbg.value(metadata i32 %255, metadata !1589, metadata !DIExpression()), !dbg !1797
  %256 = icmp eq i32 %252, %65, !dbg !1801
  br i1 %256, label %257, label %251, !dbg !1803, !llvm.loop !1808

257:                                              ; preds = %251, %247, %244
  %258 = phi i32 [ %15, %244 ], [ %15, %247 ], [ %254, %251 ], !dbg !1810
  %259 = phi i32 [ 1, %244 ], [ 2, %247 ], [ %250, %251 ], !dbg !1797
  call void @llvm.dbg.value(metadata i32 %259, metadata !1589, metadata !DIExpression()), !dbg !1797
  call void @llvm.dbg.value(metadata i32 %258, metadata !1555, metadata !DIExpression()), !dbg !1597
  %260 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1811
  call void @llvm.dbg.value(metadata i8* %260, metadata !1550, metadata !DIExpression()), !dbg !1597
  %261 = bitcast i8* %90 to i32*, !dbg !1811
  %262 = load i32, i32* %261, align 4, !dbg !1811
  %263 = trunc i32 %262 to i8, !dbg !1812
  %264 = add i32 %258, 1, !dbg !1813
  call void @llvm.dbg.value(metadata i32 %264, metadata !1555, metadata !DIExpression()), !dbg !1597
  call void %10(i8 noundef zeroext %263, i8* noundef %1, i32 noundef %258, i32 noundef %2) #26, !dbg !1814, !callees !1613
  %265 = xor i1 %246, true, !dbg !1815
  %266 = icmp ult i32 %259, %65
  %267 = select i1 %265, i1 %266, i1 false, !dbg !1815
  call void @llvm.dbg.value(metadata i32 %259, metadata !1589, metadata !DIExpression()), !dbg !1797
  call void @llvm.dbg.value(metadata i32 %264, metadata !1555, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %259, metadata !1589, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1797
  br i1 %267, label %268, label %274, !dbg !1815

268:                                              ; preds = %257, %268
  %269 = phi i32 [ %271, %268 ], [ %259, %257 ]
  %270 = phi i32 [ %272, %268 ], [ %264, %257 ]
  call void @llvm.dbg.value(metadata i32 %269, metadata !1589, metadata !DIExpression()), !dbg !1797
  call void @llvm.dbg.value(metadata i32 %270, metadata !1555, metadata !DIExpression()), !dbg !1597
  %271 = add nuw i32 %269, 1, !dbg !1816
  call void @llvm.dbg.value(metadata i32 %271, metadata !1589, metadata !DIExpression()), !dbg !1797
  %272 = add i32 %270, 1, !dbg !1819
  call void @llvm.dbg.value(metadata i32 %272, metadata !1555, metadata !DIExpression()), !dbg !1597
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %270, i32 noundef %2) #26, !dbg !1821, !callees !1613
  call void @llvm.dbg.value(metadata i32 %271, metadata !1589, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1797
  %273 = icmp eq i32 %271, %65, !dbg !1822
  br i1 %273, label %274, label %268, !dbg !1823, !llvm.loop !1824

274:                                              ; preds = %268, %257
  %275 = phi i32 [ %264, %257 ], [ %272, %268 ], !dbg !1813
  call void @llvm.dbg.value(metadata i32 %275, metadata !1555, metadata !DIExpression()), !dbg !1597
  %276 = load i8*, i8** %6, align 4, !dbg !1826, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %276, metadata !1549, metadata !DIExpression()), !dbg !1597
  %277 = getelementptr inbounds i8, i8* %276, i32 1, !dbg !1826
  call void @llvm.dbg.value(metadata i8* %277, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %277, i8** %6, align 4, !dbg !1826, !tbaa !1598
  br label %354

278:                                              ; preds = %121
  %279 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1827
  call void @llvm.dbg.value(metadata i8* %279, metadata !1550, metadata !DIExpression()), !dbg !1597
  %280 = bitcast i8* %90 to i8**, !dbg !1827
  %281 = load i8*, i8** %280, align 4, !dbg !1827
  call void @llvm.dbg.value(metadata i8* %281, metadata !1591, metadata !DIExpression()), !dbg !1828
  %282 = icmp eq i32 %88, 0, !dbg !1829
  %283 = select i1 %282, i32 -1, i32 %88, !dbg !1829
  %284 = call fastcc i32 @_strnlen_s(i8* noundef %281, i32 noundef %283), !dbg !1830
  call void @llvm.dbg.value(metadata i32 %284, metadata !1593, metadata !DIExpression()), !dbg !1828
  %285 = and i32 %122, 1024, !dbg !1831
  %286 = icmp eq i32 %285, 0, !dbg !1831
  %287 = icmp ult i32 %284, %88, !dbg !1833
  %288 = select i1 %286, i1 true, i1 %287, !dbg !1833
  %289 = select i1 %288, i32 %284, i32 %88, !dbg !1833
  call void @llvm.dbg.value(metadata i32 %289, metadata !1593, metadata !DIExpression()), !dbg !1828
  %290 = and i32 %122, 2, !dbg !1834
  %291 = icmp eq i32 %290, 0, !dbg !1834
  br i1 %291, label %292, label %303, !dbg !1836

292:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 %289, metadata !1593, metadata !DIExpression()), !dbg !1828
  call void @llvm.dbg.value(metadata i32 %15, metadata !1555, metadata !DIExpression()), !dbg !1597
  %293 = add i32 %289, 1, !dbg !1837
  call void @llvm.dbg.value(metadata i32 %293, metadata !1593, metadata !DIExpression()), !dbg !1828
  %294 = icmp ult i32 %289, %65, !dbg !1839
  br i1 %294, label %295, label %303, !dbg !1840

295:                                              ; preds = %292
  %296 = add i32 %65, 1, !dbg !1840
  br label %297, !dbg !1840

297:                                              ; preds = %295, %297
  %298 = phi i32 [ %301, %297 ], [ %293, %295 ]
  %299 = phi i32 [ %300, %297 ], [ %15, %295 ]
  call void @llvm.dbg.value(metadata i32 %299, metadata !1555, metadata !DIExpression()), !dbg !1597
  %300 = add i32 %299, 1, !dbg !1841
  call void @llvm.dbg.value(metadata i32 %300, metadata !1555, metadata !DIExpression()), !dbg !1597
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %299, i32 noundef %2) #26, !dbg !1843, !callees !1613
  call void @llvm.dbg.value(metadata i32 %298, metadata !1593, metadata !DIExpression()), !dbg !1828
  %301 = add i32 %298, 1, !dbg !1837
  call void @llvm.dbg.value(metadata i32 %301, metadata !1593, metadata !DIExpression()), !dbg !1828
  %302 = icmp eq i32 %298, %65, !dbg !1839
  br i1 %302, label %303, label %297, !dbg !1840, !llvm.loop !1844

303:                                              ; preds = %297, %292, %278
  %304 = phi i32 [ %15, %278 ], [ %15, %292 ], [ %300, %297 ], !dbg !1810
  %305 = phi i32 [ %289, %278 ], [ %293, %292 ], [ %296, %297 ], !dbg !1828
  call void @llvm.dbg.value(metadata i32 %305, metadata !1593, metadata !DIExpression()), !dbg !1828
  call void @llvm.dbg.value(metadata i32 %304, metadata !1555, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i8* %281, metadata !1591, metadata !DIExpression()), !dbg !1828
  call void @llvm.dbg.value(metadata i32 %88, metadata !1553, metadata !DIExpression()), !dbg !1597
  %306 = load i8, i8* %281, align 1, !dbg !1846, !tbaa !1608
  %307 = icmp eq i8 %306, 0, !dbg !1847
  br i1 %307, label %322, label %308, !dbg !1848

308:                                              ; preds = %303, %316
  %309 = phi i8 [ %320, %316 ], [ %306, %303 ]
  %310 = phi i8* [ %318, %316 ], [ %281, %303 ]
  %311 = phi i32 [ %317, %316 ], [ %88, %303 ]
  %312 = phi i32 [ %319, %316 ], [ %304, %303 ]
  call void @llvm.dbg.value(metadata i8* %310, metadata !1591, metadata !DIExpression()), !dbg !1828
  call void @llvm.dbg.value(metadata i32 %311, metadata !1553, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %312, metadata !1555, metadata !DIExpression()), !dbg !1597
  br i1 %286, label %316, label %313, !dbg !1849

313:                                              ; preds = %308
  %314 = add i32 %311, -1, !dbg !1850
  call void @llvm.dbg.value(metadata i32 %314, metadata !1553, metadata !DIExpression()), !dbg !1597
  %315 = icmp eq i32 %311, 0, !dbg !1849
  br i1 %315, label %322, label %316, !dbg !1851

316:                                              ; preds = %308, %313
  %317 = phi i32 [ %314, %313 ], [ %311, %308 ], !dbg !1643
  call void @llvm.dbg.value(metadata i32 %317, metadata !1553, metadata !DIExpression()), !dbg !1597
  %318 = getelementptr inbounds i8, i8* %310, i32 1, !dbg !1852
  call void @llvm.dbg.value(metadata i8* %318, metadata !1591, metadata !DIExpression()), !dbg !1828
  %319 = add i32 %312, 1, !dbg !1854
  call void @llvm.dbg.value(metadata i32 %319, metadata !1555, metadata !DIExpression()), !dbg !1597
  call void %10(i8 noundef zeroext %309, i8* noundef %1, i32 noundef %312, i32 noundef %2) #26, !dbg !1855, !callees !1613
  %320 = load i8, i8* %318, align 1, !dbg !1846, !tbaa !1608
  %321 = icmp eq i8 %320, 0, !dbg !1847
  br i1 %321, label %322, label %308, !dbg !1848, !llvm.loop !1856

322:                                              ; preds = %313, %316, %303
  %323 = phi i32 [ %304, %303 ], [ %312, %313 ], [ %319, %316 ], !dbg !1597
  %324 = xor i1 %291, true, !dbg !1858
  %325 = icmp ult i32 %305, %65
  %326 = select i1 %324, i1 %325, i1 false, !dbg !1858
  call void @llvm.dbg.value(metadata i32 %305, metadata !1593, metadata !DIExpression()), !dbg !1828
  call void @llvm.dbg.value(metadata i32 %323, metadata !1555, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i32 %305, metadata !1593, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1828
  br i1 %326, label %327, label %333, !dbg !1858

327:                                              ; preds = %322, %327
  %328 = phi i32 [ %330, %327 ], [ %305, %322 ]
  %329 = phi i32 [ %331, %327 ], [ %323, %322 ]
  call void @llvm.dbg.value(metadata i32 %328, metadata !1593, metadata !DIExpression()), !dbg !1828
  call void @llvm.dbg.value(metadata i32 %329, metadata !1555, metadata !DIExpression()), !dbg !1597
  %330 = add nuw i32 %328, 1, !dbg !1859
  call void @llvm.dbg.value(metadata i32 %330, metadata !1593, metadata !DIExpression()), !dbg !1828
  %331 = add i32 %329, 1, !dbg !1862
  call void @llvm.dbg.value(metadata i32 %331, metadata !1555, metadata !DIExpression()), !dbg !1597
  call void %10(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %329, i32 noundef %2) #26, !dbg !1864, !callees !1613
  call void @llvm.dbg.value(metadata i32 %330, metadata !1593, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !1828
  %332 = icmp eq i32 %330, %65, !dbg !1865
  br i1 %332, label %333, label %327, !dbg !1866, !llvm.loop !1867

333:                                              ; preds = %327, %322
  %334 = phi i32 [ %323, %322 ], [ %331, %327 ], !dbg !1810
  call void @llvm.dbg.value(metadata i32 %334, metadata !1555, metadata !DIExpression()), !dbg !1597
  %335 = load i8*, i8** %6, align 4, !dbg !1869, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %335, metadata !1549, metadata !DIExpression()), !dbg !1597
  %336 = getelementptr inbounds i8, i8* %335, i32 1, !dbg !1869
  call void @llvm.dbg.value(metadata i8* %336, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %336, i8** %6, align 4, !dbg !1869, !tbaa !1598
  br label %354

337:                                              ; preds = %121
  call void @llvm.dbg.value(metadata i32 8, metadata !1552, metadata !DIExpression()), !dbg !1597
  %338 = or i32 %122, 33, !dbg !1870
  call void @llvm.dbg.value(metadata i32 %338, metadata !1551, metadata !DIExpression()), !dbg !1597
  call void @llvm.dbg.value(metadata i8 0, metadata !1594, metadata !DIExpression()), !dbg !1871
  %339 = getelementptr inbounds i8, i8* %90, i32 4, !dbg !1872
  call void @llvm.dbg.value(metadata i8* %339, metadata !1550, metadata !DIExpression()), !dbg !1597
  %340 = bitcast i8* %90 to i8**, !dbg !1872
  %341 = load i8*, i8** %340, align 4, !dbg !1872
  %342 = ptrtoint i8* %341 to i32, !dbg !1875
  %343 = call fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* noundef %10, i8* noundef %1, i32 noundef %15, i32 noundef %2, i32 noundef %342, i1 noundef zeroext false, i32 noundef 16, i32 noundef %88, i32 noundef 8, i32 noundef %338), !dbg !1876
  call void @llvm.dbg.value(metadata i32 %343, metadata !1555, metadata !DIExpression()), !dbg !1597
  %344 = load i8*, i8** %6, align 4, !dbg !1877, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %344, metadata !1549, metadata !DIExpression()), !dbg !1597
  %345 = getelementptr inbounds i8, i8* %344, i32 1, !dbg !1877
  call void @llvm.dbg.value(metadata i8* %345, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %345, i8** %6, align 4, !dbg !1877, !tbaa !1598
  br label %354

346:                                              ; preds = %121
  %347 = add i32 %15, 1, !dbg !1878
  call void @llvm.dbg.value(metadata i32 %347, metadata !1555, metadata !DIExpression()), !dbg !1597
  call void %10(i8 noundef zeroext 37, i8* noundef %1, i32 noundef %15, i32 noundef %2) #26, !dbg !1879, !callees !1613
  %348 = load i8*, i8** %6, align 4, !dbg !1880, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %348, metadata !1549, metadata !DIExpression()), !dbg !1597
  %349 = getelementptr inbounds i8, i8* %348, i32 1, !dbg !1880
  call void @llvm.dbg.value(metadata i8* %349, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %349, i8** %6, align 4, !dbg !1880, !tbaa !1598
  br label %354, !dbg !1881

350:                                              ; preds = %121
  %351 = add i32 %15, 1, !dbg !1882
  call void @llvm.dbg.value(metadata i32 %351, metadata !1555, metadata !DIExpression()), !dbg !1597
  call void %10(i8 noundef zeroext %124, i8* noundef %1, i32 noundef %15, i32 noundef %2) #26, !dbg !1883, !callees !1613
  %352 = load i8*, i8** %6, align 4, !dbg !1884, !tbaa !1598
  call void @llvm.dbg.value(metadata i8* %352, metadata !1549, metadata !DIExpression()), !dbg !1597
  %353 = getelementptr inbounds i8, i8* %352, i32 1, !dbg !1884
  call void @llvm.dbg.value(metadata i8* %353, metadata !1549, metadata !DIExpression()), !dbg !1597
  store i8* %353, i8** %6, align 4, !dbg !1884, !tbaa !1598
  br label %354, !dbg !1885

354:                                              ; preds = %350, %346, %337, %333, %274, %233, %228
  %355 = phi i32 [ %351, %350 ], [ %347, %346 ], [ %343, %337 ], [ %334, %333 ], [ %275, %274 ], [ %241, %233 ], [ %229, %228 ]
  %356 = phi i8* [ %90, %350 ], [ %90, %346 ], [ %339, %337 ], [ %279, %333 ], [ %260, %274 ], [ %238, %233 ], [ %230, %228 ]
  br label %11, !dbg !1605, !llvm.loop !1616

357:                                              ; preds = %14
  %358 = icmp ult i32 %15, %2, !dbg !1886
  %359 = add i32 %2, -1, !dbg !1887
  %360 = select i1 %358, i32 %15, i32 %359, !dbg !1887
  call void %10(i8 noundef zeroext 0, i8* noundef %1, i32 noundef %360, i32 noundef %2) #26, !dbg !1888, !callees !1613
  ret i32 %15, !dbg !1889
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #9

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define internal void @_out_null(i8 noundef zeroext %0, i8* nocapture noundef %1, i32 noundef %2, i32 noundef %3) #10 !dbg !1890 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1892, metadata !DIExpression()), !dbg !1896
  call void @llvm.dbg.value(metadata i8* %1, metadata !1893, metadata !DIExpression()), !dbg !1896
  call void @llvm.dbg.value(metadata i32 %2, metadata !1894, metadata !DIExpression()), !dbg !1896
  call void @llvm.dbg.value(metadata i32 %3, metadata !1895, metadata !DIExpression()), !dbg !1896
  ret void, !dbg !1897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define internal void @_out_buffer(i8 noundef zeroext %0, i8* nocapture noundef writeonly %1, i32 noundef %2, i32 noundef %3) #11 !dbg !1898 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1900, metadata !DIExpression()), !dbg !1904
  call void @llvm.dbg.value(metadata i8* %1, metadata !1901, metadata !DIExpression()), !dbg !1904
  call void @llvm.dbg.value(metadata i32 %2, metadata !1902, metadata !DIExpression()), !dbg !1904
  call void @llvm.dbg.value(metadata i32 %3, metadata !1903, metadata !DIExpression()), !dbg !1904
  %5 = icmp ult i32 %2, %3, !dbg !1905
  br i1 %5, label %6, label %8, !dbg !1907

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %1, i32 %2, !dbg !1908
  store i8 %0, i8* %7, align 1, !dbg !1910, !tbaa !1608
  br label %8, !dbg !1911

8:                                                ; preds = %6, %4
  ret void, !dbg !1912
}

; Function Attrs: noinline nounwind
define internal void @_out_fct(i8 noundef zeroext %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #3 !dbg !1913 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1915, metadata !DIExpression()), !dbg !1919
  call void @llvm.dbg.value(metadata i8* %1, metadata !1916, metadata !DIExpression()), !dbg !1919
  call void @llvm.dbg.value(metadata i32 %2, metadata !1917, metadata !DIExpression()), !dbg !1919
  call void @llvm.dbg.value(metadata i32 %3, metadata !1918, metadata !DIExpression()), !dbg !1919
  %5 = icmp eq i8 %0, 0, !dbg !1920
  br i1 %5, label %12, label %6, !dbg !1922

6:                                                ; preds = %4
  %7 = bitcast i8* %1 to void (i8, i8*)**, !dbg !1923
  %8 = load void (i8, i8*)*, void (i8, i8*)** %7, align 4, !dbg !1923, !tbaa !1925
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !1927
  %10 = bitcast i8* %9 to i8**, !dbg !1927
  %11 = load i8*, i8** %10, align 4, !dbg !1927, !tbaa !1928
  call void %8(i8 noundef zeroext %0, i8* noundef %11) #26, !dbg !1929
  br label %12, !dbg !1930

12:                                               ; preds = %6, %4
  ret void, !dbg !1931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define internal fastcc zeroext i1 @_is_digit(i8 noundef zeroext %0) unnamed_addr #10 !dbg !1932 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1936, metadata !DIExpression()), !dbg !1937
  %2 = add i8 %0, -48, !dbg !1938
  %3 = icmp ult i8 %2, 10, !dbg !1938
  ret i1 %3, !dbg !1939
}

; Function Attrs: nofree noinline norecurse nosync nounwind
define internal fastcc i32 @_atoi(i8** nocapture noundef %0) unnamed_addr #12 !dbg !1940 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !1945, metadata !DIExpression()), !dbg !1947
  call void @llvm.dbg.value(metadata i32 0, metadata !1946, metadata !DIExpression()), !dbg !1947
  %2 = load i8*, i8** %0, align 4, !dbg !1948, !tbaa !1598
  %3 = load i8, i8* %2, align 1, !dbg !1949, !tbaa !1608
  %4 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %3), !dbg !1950
  br i1 %4, label %5, label %16, !dbg !1951

5:                                                ; preds = %1, %5
  %6 = phi i8* [ %9, %5 ], [ %2, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !1946, metadata !DIExpression()), !dbg !1947
  %8 = mul i32 %7, 10, !dbg !1952
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !1954
  store i8* %9, i8** %0, align 4, !dbg !1954, !tbaa !1598
  %10 = load i8, i8* %6, align 1, !dbg !1955, !tbaa !1608
  %11 = zext i8 %10 to i32, !dbg !1955
  %12 = add i32 %8, -48, !dbg !1956
  %13 = add i32 %12, %11, !dbg !1957
  call void @llvm.dbg.value(metadata i32 %13, metadata !1946, metadata !DIExpression()), !dbg !1947
  %14 = load i8, i8* %9, align 1, !dbg !1949, !tbaa !1608
  %15 = call fastcc zeroext i1 @_is_digit(i8 noundef zeroext %14), !dbg !1950
  br i1 %15, label %5, label %16, !dbg !1951, !llvm.loop !1958

16:                                               ; preds = %5, %1
  %17 = phi i32 [ 0, %1 ], [ %13, %5 ], !dbg !1947
  ret i32 %17, !dbg !1960
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_long_long(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i1 noundef zeroext %5, i64 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #3 !dbg !1961 {
  %11 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !1965, metadata !DIExpression()), !dbg !1981
  call void @llvm.dbg.value(metadata i8* %1, metadata !1966, metadata !DIExpression()), !dbg !1981
  call void @llvm.dbg.value(metadata i32 %2, metadata !1967, metadata !DIExpression()), !dbg !1981
  call void @llvm.dbg.value(metadata i32 %3, metadata !1968, metadata !DIExpression()), !dbg !1981
  call void @llvm.dbg.value(metadata i64 %4, metadata !1969, metadata !DIExpression()), !dbg !1981
  call void @llvm.dbg.value(metadata i1 %5, metadata !1970, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1981
  call void @llvm.dbg.value(metadata i64 %6, metadata !1971, metadata !DIExpression()), !dbg !1981
  call void @llvm.dbg.value(metadata i32 %7, metadata !1972, metadata !DIExpression()), !dbg !1981
  call void @llvm.dbg.value(metadata i32 %8, metadata !1973, metadata !DIExpression()), !dbg !1981
  call void @llvm.dbg.value(metadata i32 %9, metadata !1974, metadata !DIExpression()), !dbg !1981
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0, !dbg !1982
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #26, !dbg !1982
  call void @llvm.dbg.declare(metadata [32 x i8]* %11, metadata !1975, metadata !DIExpression()), !dbg !1983
  call void @llvm.dbg.value(metadata i32 0, metadata !1976, metadata !DIExpression()), !dbg !1981
  %13 = icmp ne i64 %4, 0, !dbg !1984
  %14 = and i32 %9, -17
  %15 = select i1 %13, i32 %9, i32 %14, !dbg !1986
  call void @llvm.dbg.value(metadata i32 %15, metadata !1974, metadata !DIExpression()), !dbg !1981
  %16 = and i32 %15, 1024, !dbg !1987
  %17 = icmp eq i32 %16, 0, !dbg !1987
  %18 = or i1 %13, %17, !dbg !1988
  br i1 %18, label %19, label %41, !dbg !1988

19:                                               ; preds = %10
  %20 = and i32 %15, 32
  %21 = xor i32 %20, 97
  %22 = add nuw nsw i32 %21, 246
  br label %23, !dbg !1989

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %36, %23 ], [ 0, %19 ], !dbg !1981
  %25 = phi i64 [ %27, %23 ], [ %4, %19 ]
  call void @llvm.dbg.value(metadata i64 %25, metadata !1969, metadata !DIExpression()), !dbg !1981
  call void @llvm.dbg.value(metadata i32 %24, metadata !1976, metadata !DIExpression()), !dbg !1981
  %26 = freeze i64 %25
  %27 = udiv i64 %26, %6, !dbg !1990
  %28 = mul i64 %27, %6
  %29 = sub i64 %26, %28
  %30 = trunc i64 %29 to i32, !dbg !1991
  %31 = and i32 %30, 254, !dbg !1992
  call void @llvm.dbg.value(metadata i32 %30, metadata !1977, metadata !DIExpression()), !dbg !1993
  %32 = icmp ult i32 %31, 10, !dbg !1994
  %33 = select i1 %32, i32 48, i32 %22, !dbg !1992
  %34 = add i32 %33, %30, !dbg !1992
  %35 = trunc i32 %34 to i8, !dbg !1992
  %36 = add nuw nsw i32 %24, 1, !dbg !1995
  call void @llvm.dbg.value(metadata i32 %36, metadata !1976, metadata !DIExpression()), !dbg !1981
  %37 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 %24, !dbg !1996
  store i8 %35, i8* %37, align 1, !dbg !1997, !tbaa !1608
  call void @llvm.dbg.value(metadata i64 %27, metadata !1969, metadata !DIExpression()), !dbg !1981
  %38 = icmp uge i64 %25, %6, !dbg !1998
  %39 = icmp ult i32 %24, 31, !dbg !1999
  %40 = select i1 %38, i1 %39, i1 false, !dbg !1999
  br i1 %40, label %23, label %41, !dbg !2000, !llvm.loop !2001

41:                                               ; preds = %23, %10
  %42 = phi i32 [ 0, %10 ], [ %36, %23 ], !dbg !1981
  call void @llvm.dbg.value(metadata i32 %42, metadata !1976, metadata !DIExpression()), !dbg !1981
  %43 = trunc i64 %6 to i32, !dbg !2003
  %44 = call fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef nonnull %12, i32 noundef %42, i1 noundef zeroext %5, i32 noundef %43, i32 noundef %7, i32 noundef %8, i32 noundef %15), !dbg !2004
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #26, !dbg !2005
  ret i32 %44, !dbg !2006
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_long(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i1 noundef zeroext %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9) unnamed_addr #3 !dbg !2007 {
  %11 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2011, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata i8* %1, metadata !2012, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata i32 %2, metadata !2013, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata i32 %3, metadata !2014, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata i32 %4, metadata !2015, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata i1 %5, metadata !2016, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2027
  call void @llvm.dbg.value(metadata i32 %6, metadata !2017, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata i32 %7, metadata !2018, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata i32 %8, metadata !2019, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata i32 %9, metadata !2020, metadata !DIExpression()), !dbg !2027
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0, !dbg !2028
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #26, !dbg !2028
  call void @llvm.dbg.declare(metadata [32 x i8]* %11, metadata !2021, metadata !DIExpression()), !dbg !2029
  call void @llvm.dbg.value(metadata i32 0, metadata !2022, metadata !DIExpression()), !dbg !2027
  %13 = icmp ne i32 %4, 0, !dbg !2030
  %14 = and i32 %9, -17
  %15 = select i1 %13, i32 %9, i32 %14, !dbg !2032
  call void @llvm.dbg.value(metadata i32 %15, metadata !2020, metadata !DIExpression()), !dbg !2027
  %16 = and i32 %15, 1024, !dbg !2033
  %17 = icmp eq i32 %16, 0, !dbg !2033
  %18 = or i1 %13, %17, !dbg !2034
  br i1 %18, label %19, label %40, !dbg !2034

19:                                               ; preds = %10
  %20 = and i32 %15, 32
  %21 = xor i32 %20, 97
  %22 = add nuw nsw i32 %21, 246
  br label %23, !dbg !2035

23:                                               ; preds = %19, %23
  %24 = phi i32 [ %35, %23 ], [ 0, %19 ], !dbg !2027
  %25 = phi i32 [ %27, %23 ], [ %4, %19 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !2015, metadata !DIExpression()), !dbg !2027
  call void @llvm.dbg.value(metadata i32 %24, metadata !2022, metadata !DIExpression()), !dbg !2027
  %26 = freeze i32 %25
  %27 = udiv i32 %26, %6, !dbg !2036
  %28 = mul i32 %27, %6
  %29 = sub i32 %26, %28
  %30 = and i32 %29, 254, !dbg !2037
  call void @llvm.dbg.value(metadata i32 %29, metadata !2023, metadata !DIExpression()), !dbg !2038
  %31 = icmp ult i32 %30, 10, !dbg !2039
  %32 = select i1 %31, i32 48, i32 %22, !dbg !2037
  %33 = add i32 %29, %32, !dbg !2037
  %34 = trunc i32 %33 to i8, !dbg !2037
  %35 = add nuw nsw i32 %24, 1, !dbg !2040
  call void @llvm.dbg.value(metadata i32 %35, metadata !2022, metadata !DIExpression()), !dbg !2027
  %36 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 %24, !dbg !2041
  store i8 %34, i8* %36, align 1, !dbg !2042, !tbaa !1608
  call void @llvm.dbg.value(metadata i32 %27, metadata !2015, metadata !DIExpression()), !dbg !2027
  %37 = icmp uge i32 %25, %6, !dbg !2043
  %38 = icmp ult i32 %24, 31, !dbg !2044
  %39 = select i1 %37, i1 %38, i1 false, !dbg !2044
  br i1 %39, label %23, label %40, !dbg !2045, !llvm.loop !2046

40:                                               ; preds = %23, %10
  %41 = phi i32 [ 0, %10 ], [ %35, %23 ], !dbg !2027
  call void @llvm.dbg.value(metadata i32 %41, metadata !2022, metadata !DIExpression()), !dbg !2027
  %42 = call fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef nonnull %12, i32 noundef %41, i1 noundef zeroext %5, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %15), !dbg !2048
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #26, !dbg !2049
  ret i32 %42, !dbg !2050
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ftoa(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, double noundef %4, i32 noundef %5, i32 noundef %6, i32 noundef %7) unnamed_addr #3 !dbg !286 {
  %9 = alloca [32 x i8], align 1
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 0, !dbg !2051
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !311, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i8* %1, metadata !312, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 %2, metadata !313, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 %3, metadata !314, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata double %4, metadata !315, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 %5, metadata !316, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 %6, metadata !317, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 %7, metadata !318, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 %2, metadata !319, metadata !DIExpression()), !dbg !2051
  %11 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 0, !dbg !2052
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #26, !dbg !2052
  call void @llvm.dbg.declare(metadata [32 x i8]* %9, metadata !321, metadata !DIExpression()), !dbg !2053
  call void @llvm.dbg.value(metadata i32 0, metadata !325, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata double 0.000000e+00, metadata !326, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata double 0x41DFFFFFFFC00000, metadata !327, metadata !DIExpression()), !dbg !2051
  %12 = fcmp uno double %4, 0.000000e+00, !dbg !2054
  br i1 %12, label %13, label %17, !dbg !2056

13:                                               ; preds = %8
  %14 = add i32 %2, 1, !dbg !2057
  call void @llvm.dbg.value(metadata i32 %14, metadata !313, metadata !DIExpression()), !dbg !2051
  call void %0(i8 noundef zeroext 110, i8* noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !2059, !callees !1613
  %15 = add i32 %2, 2, !dbg !2060
  call void @llvm.dbg.value(metadata i32 %15, metadata !313, metadata !DIExpression()), !dbg !2051
  call void %0(i8 noundef zeroext 97, i8* noundef %1, i32 noundef %14, i32 noundef %3) #26, !dbg !2061, !callees !1613
  %16 = add i32 %2, 3, !dbg !2062
  call void @llvm.dbg.value(metadata i32 %16, metadata !313, metadata !DIExpression()), !dbg !2051
  call void %0(i8 noundef zeroext 110, i8* noundef %1, i32 noundef %15, i32 noundef %3) #26, !dbg !2063, !callees !1613
  br label %221, !dbg !2064

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 0, metadata !329, metadata !DIExpression()), !dbg !2051
  %18 = fcmp olt double %4, 0.000000e+00, !dbg !2065
  %19 = fsub double 0.000000e+00, %4, !dbg !2067
  %20 = select i1 %18, double %19, double %4, !dbg !2067
  call void @llvm.dbg.value(metadata i8 poison, metadata !329, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata double %20, metadata !315, metadata !DIExpression()), !dbg !2051
  %21 = and i32 %7, 1024, !dbg !2068
  %22 = icmp eq i32 %21, 0, !dbg !2068
  %23 = select i1 %22, i32 6, i32 %5, !dbg !2070
  call void @llvm.dbg.value(metadata i32 %23, metadata !316, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 0, metadata !325, metadata !DIExpression()), !dbg !2051
  %24 = icmp ugt i32 %23, 9, !dbg !2071
  br i1 %24, label %25, label %39, !dbg !2072

25:                                               ; preds = %17
  %26 = add i32 %23, -10, !dbg !2072
  %27 = call i32 @llvm.umin.i32(i32 %26, i32 31), !dbg !2072
  %28 = add nuw nsw i32 %27, 1, !dbg !2072
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 %10, i8 48, i32 %28, i1 false), !dbg !2073, !tbaa !1608
  %29 = call i32 @llvm.umin.i32(i32 %26, i32 31), !dbg !2072
  %30 = add nuw nsw i32 %29, 1, !dbg !2072
  br label %31, !dbg !2072

31:                                               ; preds = %25, %31
  %32 = phi i32 [ %34, %31 ], [ 0, %25 ]
  %33 = phi i32 [ %35, %31 ], [ %23, %25 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !325, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 %33, metadata !316, metadata !DIExpression()), !dbg !2051
  %34 = add nuw nsw i32 %32, 1, !dbg !2075
  call void @llvm.dbg.value(metadata i32 %34, metadata !325, metadata !DIExpression()), !dbg !2051
  %35 = add i32 %33, -1, !dbg !2076
  call void @llvm.dbg.value(metadata i32 %35, metadata !316, metadata !DIExpression()), !dbg !2051
  %36 = icmp eq i32 %32, %29, !dbg !2071
  br i1 %36, label %37, label %31, !dbg !2072, !llvm.loop !2077

37:                                               ; preds = %31
  %38 = icmp ult i32 %32, 31, !dbg !2079
  br label %39, !dbg !2080

39:                                               ; preds = %37, %17
  %40 = phi i32 [ %23, %17 ], [ %35, %37 ]
  %41 = phi i32 [ 0, %17 ], [ %30, %37 ], !dbg !2051
  %42 = phi i1 [ true, %17 ], [ %38, %37 ], !dbg !2079
  %43 = fptosi double %20 to i32, !dbg !2080
  call void @llvm.dbg.value(metadata i32 %43, metadata !331, metadata !DIExpression()), !dbg !2051
  %44 = sitofp i32 %43 to double, !dbg !2081
  %45 = fsub double %20, %44, !dbg !2082
  %46 = getelementptr inbounds [10 x double], [10 x double]* @_ftoa.pow10, i32 0, i32 %40, !dbg !2083
  %47 = load double, double* %46, align 8, !dbg !2083, !tbaa !2084
  %48 = fmul double %45, %47, !dbg !2086
  call void @llvm.dbg.value(metadata double %48, metadata !332, metadata !DIExpression()), !dbg !2051
  %49 = fptoui double %48 to i32, !dbg !2087
  call void @llvm.dbg.value(metadata i32 %49, metadata !333, metadata !DIExpression()), !dbg !2051
  %50 = uitofp i32 %49 to double, !dbg !2088
  %51 = fsub double %48, %50, !dbg !2089
  call void @llvm.dbg.value(metadata double %51, metadata !326, metadata !DIExpression()), !dbg !2051
  %52 = fcmp ogt double %51, 5.000000e-01, !dbg !2090
  br i1 %52, label %53, label %59, !dbg !2092

53:                                               ; preds = %39
  %54 = add i32 %49, 1, !dbg !2093
  call void @llvm.dbg.value(metadata i32 %54, metadata !333, metadata !DIExpression()), !dbg !2051
  %55 = uitofp i32 %54 to double, !dbg !2095
  %56 = fcmp ugt double %47, %55, !dbg !2097
  br i1 %56, label %68, label %57, !dbg !2098

57:                                               ; preds = %53
  call void @llvm.dbg.value(metadata i32 0, metadata !333, metadata !DIExpression()), !dbg !2051
  %58 = add nsw i32 %43, 1, !dbg !2099
  call void @llvm.dbg.value(metadata i32 %58, metadata !331, metadata !DIExpression()), !dbg !2051
  br label %68, !dbg !2101

59:                                               ; preds = %39
  %60 = fcmp olt double %51, 5.000000e-01, !dbg !2102
  br i1 %60, label %68, label %61, !dbg !2104

61:                                               ; preds = %59
  %62 = icmp eq i32 %49, 0, !dbg !2105
  %63 = and i32 %49, 1
  %64 = icmp ne i32 %63, 0
  %65 = or i1 %62, %64, !dbg !2107
  %66 = zext i1 %65 to i32, !dbg !2107
  %67 = add i32 %66, %49, !dbg !2107
  br label %68, !dbg !2107

68:                                               ; preds = %61, %59, %53, %57
  %69 = phi i32 [ %58, %57 ], [ %43, %53 ], [ %43, %59 ], [ %43, %61 ], !dbg !2051
  %70 = phi i32 [ 0, %57 ], [ %54, %53 ], [ %49, %59 ], [ %67, %61 ], !dbg !2051
  call void @llvm.dbg.value(metadata i32 %70, metadata !333, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 %69, metadata !331, metadata !DIExpression()), !dbg !2051
  %71 = fcmp ogt double %20, 0x41DFFFFFFFC00000, !dbg !2108
  br i1 %71, label %221, label %72, !dbg !2110

72:                                               ; preds = %68
  %73 = icmp eq i32 %40, 0, !dbg !2111
  br i1 %73, label %74, label %83, !dbg !2112

74:                                               ; preds = %72
  %75 = sitofp i32 %69 to double, !dbg !2113
  %76 = fsub double %20, %75, !dbg !2115
  call void @llvm.dbg.value(metadata double %76, metadata !326, metadata !DIExpression()), !dbg !2051
  %77 = fcmp uge double %76, 5.000000e-01, !dbg !2116
  %78 = and i32 %69, 1
  %79 = icmp ne i32 %78, 0
  %80 = select i1 %77, i1 %79, i1 false, !dbg !2116
  %81 = zext i1 %80 to i32, !dbg !2116
  %82 = add nsw i32 %69, %81, !dbg !2116
  br label %123, !dbg !2116

83:                                               ; preds = %72
  call void @llvm.dbg.value(metadata i32 %40, metadata !334, metadata !DIExpression()), !dbg !2118
  br i1 %42, label %84, label %100, !dbg !2119

84:                                               ; preds = %83, %84
  %85 = phi i32 [ %95, %84 ], [ %41, %83 ], !dbg !2051
  %86 = phi i32 [ %90, %84 ], [ %70, %83 ], !dbg !2051
  %87 = phi i32 [ %88, %84 ], [ %40, %83 ], !dbg !2118
  call void @llvm.dbg.value(metadata i32 %87, metadata !334, metadata !DIExpression()), !dbg !2118
  call void @llvm.dbg.value(metadata i32 %86, metadata !333, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 %85, metadata !325, metadata !DIExpression()), !dbg !2051
  %88 = add i32 %87, -1, !dbg !2120
  call void @llvm.dbg.value(metadata i32 %88, metadata !334, metadata !DIExpression()), !dbg !2118
  %89 = freeze i32 %86
  %90 = udiv i32 %89, 10, !dbg !2122
  %91 = mul i32 %90, 10
  %92 = sub i32 %89, %91
  %93 = trunc i32 %92 to i8, !dbg !2124
  %94 = or i8 %93, 48, !dbg !2124
  %95 = add nuw nsw i32 %85, 1, !dbg !2125
  call void @llvm.dbg.value(metadata i32 %95, metadata !325, metadata !DIExpression()), !dbg !2051
  %96 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %85, !dbg !2126
  store i8 %94, i8* %96, align 1, !dbg !2127, !tbaa !1608
  call void @llvm.dbg.value(metadata i32 %90, metadata !333, metadata !DIExpression()), !dbg !2051
  %97 = icmp ugt i32 %86, 9, !dbg !2122
  %98 = icmp ult i32 %85, 31
  %99 = select i1 %97, i1 %98, i1 false, !dbg !2128
  br i1 %99, label %84, label %100, !dbg !2128, !llvm.loop !2129

100:                                              ; preds = %84, %83
  %101 = phi i32 [ %41, %83 ], [ %95, %84 ], !dbg !2051
  %102 = phi i32 [ %40, %83 ], [ %88, %84 ], !dbg !2118
  call void @llvm.dbg.value(metadata i32 %102, metadata !334, metadata !DIExpression()), !dbg !2118
  call void @llvm.dbg.value(metadata i32 %101, metadata !325, metadata !DIExpression()), !dbg !2051
  %103 = icmp ult i32 %101, 32, !dbg !2131
  %104 = xor i1 %103, true, !dbg !2132
  %105 = icmp eq i32 %102, 0
  %106 = select i1 %104, i1 true, i1 %105, !dbg !2132
  call void @llvm.dbg.value(metadata i32 %102, metadata !334, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2118
  br i1 %106, label %117, label %107, !dbg !2132

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %110, %107 ], [ %102, %100 ]
  %109 = phi i32 [ %111, %107 ], [ %101, %100 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !334, metadata !DIExpression()), !dbg !2118
  call void @llvm.dbg.value(metadata i32 %109, metadata !325, metadata !DIExpression()), !dbg !2051
  %110 = add i32 %108, -1, !dbg !2133
  call void @llvm.dbg.value(metadata i32 %110, metadata !334, metadata !DIExpression()), !dbg !2118
  %111 = add i32 %109, 1, !dbg !2134
  call void @llvm.dbg.value(metadata i32 %111, metadata !325, metadata !DIExpression()), !dbg !2051
  %112 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %109, !dbg !2136
  store i8 48, i8* %112, align 1, !dbg !2137, !tbaa !1608
  %113 = icmp ult i32 %111, 32, !dbg !2131
  %114 = xor i1 %113, true, !dbg !2132
  %115 = icmp eq i32 %110, 0
  %116 = select i1 %114, i1 true, i1 %115, !dbg !2132
  call void @llvm.dbg.value(metadata i32 %110, metadata !334, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2118
  br i1 %116, label %117, label %107, !dbg !2132, !llvm.loop !2138

117:                                              ; preds = %107, %100
  %118 = phi i32 [ %101, %100 ], [ %111, %107 ], !dbg !2118
  %119 = phi i1 [ %103, %100 ], [ %113, %107 ], !dbg !2131
  br i1 %119, label %120, label %123, !dbg !2141

120:                                              ; preds = %117
  %121 = add i32 %118, 1, !dbg !2142
  call void @llvm.dbg.value(metadata i32 %121, metadata !325, metadata !DIExpression()), !dbg !2051
  %122 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %118, !dbg !2145
  store i8 46, i8* %122, align 1, !dbg !2146, !tbaa !1608
  br label %123, !dbg !2147

123:                                              ; preds = %74, %117, %120
  %124 = phi i32 [ %121, %120 ], [ %118, %117 ], [ %41, %74 ], !dbg !2051
  %125 = phi i32 [ %69, %120 ], [ %69, %117 ], [ %82, %74 ], !dbg !2051
  call void @llvm.dbg.value(metadata i32 %125, metadata !331, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 %124, metadata !325, metadata !DIExpression()), !dbg !2051
  %126 = icmp ult i32 %124, 32, !dbg !2148
  br i1 %126, label %127, label %142, !dbg !2149

127:                                              ; preds = %123, %127
  %128 = phi i32 [ %136, %127 ], [ %124, %123 ], !dbg !2051
  %129 = phi i32 [ %131, %127 ], [ %125, %123 ], !dbg !2051
  call void @llvm.dbg.value(metadata i32 %129, metadata !331, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 %128, metadata !325, metadata !DIExpression()), !dbg !2051
  %130 = freeze i32 %129
  %131 = sdiv i32 %130, 10, !dbg !2150
  %132 = mul i32 %131, 10
  %133 = sub i32 %130, %132
  %134 = trunc i32 %133 to i8, !dbg !2153
  %135 = add i8 %134, 48, !dbg !2153
  %136 = add nuw nsw i32 %128, 1, !dbg !2154
  call void @llvm.dbg.value(metadata i32 %136, metadata !325, metadata !DIExpression()), !dbg !2051
  %137 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %128, !dbg !2155
  store i8 %135, i8* %137, align 1, !dbg !2156, !tbaa !1608
  call void @llvm.dbg.value(metadata i32 %131, metadata !331, metadata !DIExpression()), !dbg !2051
  %138 = add i32 %129, -10, !dbg !2150
  %139 = icmp ult i32 %138, -19, !dbg !2150
  %140 = icmp ult i32 %128, 31
  %141 = select i1 %139, i1 %140, i1 false, !dbg !2157
  br i1 %141, label %127, label %142, !dbg !2157, !llvm.loop !2158

142:                                              ; preds = %127, %123
  %143 = phi i32 [ %124, %123 ], [ %136, %127 ], !dbg !2051
  call void @llvm.dbg.value(metadata i32 %143, metadata !325, metadata !DIExpression()), !dbg !2051
  %144 = and i32 %7, 2, !dbg !2160
  %145 = icmp ne i32 %144, 0, !dbg !2160
  %146 = and i32 %7, 3, !dbg !2162
  %147 = icmp eq i32 %146, 1, !dbg !2162
  br i1 %147, label %148, label %171, !dbg !2162

148:                                              ; preds = %142
  %149 = icmp eq i32 %6, 0, !dbg !2163
  br i1 %149, label %156, label %150, !dbg !2166

150:                                              ; preds = %148
  %151 = and i32 %7, 12
  %152 = icmp ne i32 %151, 0
  %153 = or i1 %18, %152, !dbg !2167
  %154 = sext i1 %153 to i32, !dbg !2167
  %155 = add i32 %154, %6, !dbg !2167
  br label %156, !dbg !2167

156:                                              ; preds = %150, %148
  %157 = phi i32 [ 0, %148 ], [ %155, %150 ]
  call void @llvm.dbg.value(metadata i32 %157, metadata !317, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 %143, metadata !325, metadata !DIExpression()), !dbg !2051
  %158 = icmp ult i32 %143, %157, !dbg !2168
  %159 = icmp ult i32 %143, 32, !dbg !2169
  %160 = and i1 %158, %159, !dbg !2169
  br i1 %160, label %161, label %171, !dbg !2170

161:                                              ; preds = %156
  %162 = getelementptr [32 x i8], [32 x i8]* %9, i32 0, i32 %143, !dbg !2170
  %163 = xor i32 %143, -1, !dbg !2170
  %164 = add i32 %157, %163, !dbg !2170
  %165 = sub i32 31, %143, !dbg !2170
  %166 = call i32 @llvm.umin.i32(i32 %164, i32 %165), !dbg !2170
  %167 = add nuw i32 %166, 1, !dbg !2170
  call void @llvm.memset.p0i8.i32(i8* align 1 %162, i8 48, i32 %167, i1 false), !dbg !2171, !tbaa !1608
  %168 = call i32 @llvm.umin.i32(i32 %164, i32 %165), !dbg !2170
  %169 = add i32 %143, %168, !dbg !2170
  call void @llvm.dbg.value(metadata i32 undef, metadata !325, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 undef, metadata !325, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2051
  %170 = add i32 %169, 1, !dbg !2170
  br label %171, !dbg !2173

171:                                              ; preds = %161, %156, %142
  %172 = phi i32 [ %6, %142 ], [ %157, %156 ], [ %157, %161 ]
  %173 = phi i32 [ %143, %142 ], [ %143, %156 ], [ %170, %161 ], !dbg !2154
  call void @llvm.dbg.value(metadata i32 %173, metadata !325, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 %172, metadata !317, metadata !DIExpression()), !dbg !2051
  %174 = icmp ult i32 %173, 32, !dbg !2173
  br i1 %174, label %175, label %186, !dbg !2175

175:                                              ; preds = %171
  br i1 %18, label %182, label %176, !dbg !2176

176:                                              ; preds = %175
  %177 = and i32 %7, 4, !dbg !2178
  %178 = icmp eq i32 %177, 0, !dbg !2178
  br i1 %178, label %179, label %182, !dbg !2181

179:                                              ; preds = %176
  %180 = and i32 %7, 8, !dbg !2182
  %181 = icmp eq i32 %180, 0, !dbg !2182
  br i1 %181, label %186, label %182, !dbg !2184

182:                                              ; preds = %179, %176, %175
  %183 = phi i8 [ 45, %175 ], [ 43, %176 ], [ 32, %179 ]
  %184 = add i32 %173, 1, !dbg !2185
  %185 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %173, !dbg !2185
  store i8 %183, i8* %185, align 1, !dbg !2185, !tbaa !1608
  br label %186, !dbg !2186

186:                                              ; preds = %182, %179, %171
  %187 = phi i32 [ %173, %179 ], [ %173, %171 ], [ %184, %182 ], !dbg !2051
  call void @llvm.dbg.value(metadata i32 %187, metadata !325, metadata !DIExpression()), !dbg !2051
  %188 = and i32 %7, 3, !dbg !2186
  %189 = icmp eq i32 %188, 0, !dbg !2186
  %190 = icmp ult i32 %187, %172
  %191 = select i1 %189, i1 %190, i1 false, !dbg !2186
  call void @llvm.dbg.value(metadata i32 %187, metadata !337, metadata !DIExpression()), !dbg !2187
  call void @llvm.dbg.value(metadata i32 %2, metadata !313, metadata !DIExpression()), !dbg !2051
  br i1 %191, label %192, label %198, !dbg !2186

192:                                              ; preds = %186, %192
  %193 = phi i32 [ %196, %192 ], [ %187, %186 ]
  %194 = phi i32 [ %195, %192 ], [ %2, %186 ]
  call void @llvm.dbg.value(metadata i32 %193, metadata !337, metadata !DIExpression()), !dbg !2187
  call void @llvm.dbg.value(metadata i32 %194, metadata !313, metadata !DIExpression()), !dbg !2051
  %195 = add i32 %194, 1, !dbg !2188
  call void @llvm.dbg.value(metadata i32 %195, metadata !313, metadata !DIExpression()), !dbg !2051
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %194, i32 noundef %3) #26, !dbg !2191, !callees !1613
  %196 = add nuw i32 %193, 1, !dbg !2192
  call void @llvm.dbg.value(metadata i32 %196, metadata !337, metadata !DIExpression()), !dbg !2187
  %197 = icmp eq i32 %196, %172, !dbg !2193
  br i1 %197, label %198, label %192, !dbg !2194, !llvm.loop !2195

198:                                              ; preds = %192, %186
  %199 = phi i32 [ %2, %186 ], [ %195, %192 ]
  call void @llvm.dbg.value(metadata i32 %199, metadata !313, metadata !DIExpression()), !dbg !2051
  call void @llvm.dbg.value(metadata i32 0, metadata !341, metadata !DIExpression()), !dbg !2197
  %200 = icmp eq i32 %187, 0, !dbg !2198
  br i1 %200, label %201, label %206, !dbg !2200

201:                                              ; preds = %206, %198
  %202 = phi i32 [ %199, %198 ], [ %213, %206 ]
  %203 = sub i32 %202, %2
  %204 = icmp ult i32 %203, %172
  %205 = select i1 %145, i1 %204, i1 false, !dbg !2201
  call void @llvm.dbg.value(metadata i32 %202, metadata !313, metadata !DIExpression()), !dbg !2051
  br i1 %205, label %216, label %221, !dbg !2201

206:                                              ; preds = %198, %206
  %207 = phi i32 [ %214, %206 ], [ 0, %198 ]
  %208 = phi i32 [ %213, %206 ], [ %199, %198 ]
  call void @llvm.dbg.value(metadata i32 %207, metadata !341, metadata !DIExpression()), !dbg !2197
  call void @llvm.dbg.value(metadata i32 %208, metadata !313, metadata !DIExpression()), !dbg !2051
  %209 = xor i32 %207, -1, !dbg !2202
  %210 = add i32 %187, %209, !dbg !2202
  %211 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i32 0, i32 %210, !dbg !2204
  %212 = load i8, i8* %211, align 1, !dbg !2204, !tbaa !1608
  %213 = add i32 %208, 1, !dbg !2205
  call void @llvm.dbg.value(metadata i32 %213, metadata !313, metadata !DIExpression()), !dbg !2051
  call void %0(i8 noundef zeroext %212, i8* noundef %1, i32 noundef %208, i32 noundef %3) #26, !dbg !2206, !callees !1613
  %214 = add nuw i32 %207, 1, !dbg !2207
  call void @llvm.dbg.value(metadata i32 %214, metadata !341, metadata !DIExpression()), !dbg !2197
  %215 = icmp eq i32 %214, %187, !dbg !2198
  br i1 %215, label %201, label %206, !dbg !2200, !llvm.loop !2208

216:                                              ; preds = %201, %216
  %217 = phi i32 [ %218, %216 ], [ %202, %201 ]
  call void @llvm.dbg.value(metadata i32 %217, metadata !313, metadata !DIExpression()), !dbg !2051
  %218 = add i32 %217, 1, !dbg !2210
  call void @llvm.dbg.value(metadata i32 %218, metadata !313, metadata !DIExpression()), !dbg !2051
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %217, i32 noundef %3) #26, !dbg !2214, !callees !1613
  %219 = sub i32 %218, %2, !dbg !2215
  %220 = icmp ult i32 %219, %172, !dbg !2216
  br i1 %220, label %216, label %221, !dbg !2217, !llvm.loop !2218

221:                                              ; preds = %216, %68, %201, %13
  %222 = phi i32 [ %16, %13 ], [ 0, %68 ], [ %202, %201 ], [ %218, %216 ], !dbg !2051
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #26, !dbg !2220
  ret i32 %222, !dbg !2220
}

; Function Attrs: nofree noinline norecurse nosync nounwind readonly
define internal fastcc i32 @_strnlen_s(i8* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !2221 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2225, metadata !DIExpression()), !dbg !2228
  call void @llvm.dbg.value(metadata i32 %1, metadata !2226, metadata !DIExpression()), !dbg !2228
  call void @llvm.dbg.value(metadata i8* %0, metadata !2227, metadata !DIExpression()), !dbg !2228
  %3 = load i8, i8* %0, align 1, !dbg !2229, !tbaa !1608
  %4 = icmp eq i8 %3, 0, !dbg !2229
  %5 = icmp eq i32 %1, 0, !dbg !2232
  %6 = or i1 %4, %5, !dbg !2232
  call void @llvm.dbg.value(metadata i32 %1, metadata !2226, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2228
  br i1 %6, label %16, label %7, !dbg !2232

7:                                                ; preds = %2, %7
  %8 = phi i8* [ %11, %7 ], [ %0, %2 ]
  %9 = phi i32 [ %10, %7 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !2227, metadata !DIExpression()), !dbg !2228
  call void @llvm.dbg.value(metadata i32 %9, metadata !2226, metadata !DIExpression()), !dbg !2228
  %10 = add i32 %9, -1, !dbg !2233
  call void @llvm.dbg.value(metadata i32 %10, metadata !2226, metadata !DIExpression()), !dbg !2228
  %11 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !2234
  call void @llvm.dbg.value(metadata i8* %11, metadata !2227, metadata !DIExpression()), !dbg !2228
  %12 = load i8, i8* %11, align 1, !dbg !2229, !tbaa !1608
  %13 = icmp eq i8 %12, 0, !dbg !2229
  %14 = icmp eq i32 %10, 0, !dbg !2232
  %15 = select i1 %13, i1 true, i1 %14, !dbg !2232
  call void @llvm.dbg.value(metadata i32 %10, metadata !2226, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2228
  br i1 %15, label %16, label %7, !dbg !2232, !llvm.loop !2235

16:                                               ; preds = %7, %2
  %17 = phi i8* [ %0, %2 ], [ %11, %7 ], !dbg !2238
  %18 = ptrtoint i8* %17 to i32, !dbg !2239
  %19 = ptrtoint i8* %0 to i32, !dbg !2239
  %20 = sub i32 %18, %19, !dbg !2239
  ret i32 %20, !dbg !2240
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #1

; Function Attrs: noinline nounwind
define internal fastcc i32 @_ntoa_format(void (i8, i8*, i32, i32)* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* nocapture noundef %4, i32 noundef %5, i1 noundef zeroext %6, i32 noundef %7, i32 noundef %8, i32 noundef %9, i32 noundef %10) unnamed_addr #3 !dbg !2241 {
  call void @llvm.dbg.value(metadata void (i8, i8*, i32, i32)* %0, metadata !2245, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i8* %1, metadata !2246, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i32 %2, metadata !2247, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i32 %3, metadata !2248, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i8* %4, metadata !2249, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i32 %5, metadata !2250, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i1 %6, metadata !2251, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2263
  call void @llvm.dbg.value(metadata i32 %7, metadata !2252, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i32 %8, metadata !2253, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i32 %9, metadata !2254, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i32 %10, metadata !2255, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i32 %2, metadata !2256, metadata !DIExpression()), !dbg !2263
  %12 = and i32 %10, 2, !dbg !2264
  %13 = icmp eq i32 %12, 0, !dbg !2264
  br i1 %13, label %14, label %55, !dbg !2266

14:                                               ; preds = %11
  %15 = icmp eq i32 %9, 0, !dbg !2267
  br i1 %15, label %25, label %16, !dbg !2270

16:                                               ; preds = %14
  %17 = and i32 %10, 1, !dbg !2271
  %18 = icmp eq i32 %17, 0, !dbg !2271
  br i1 %18, label %25, label %19, !dbg !2272

19:                                               ; preds = %16
  %20 = and i32 %10, 12
  %21 = icmp ne i32 %20, 0
  %22 = or i1 %21, %6, !dbg !2273
  %23 = sext i1 %22 to i32, !dbg !2273
  %24 = add i32 %23, %9, !dbg !2273
  br label %25, !dbg !2273

25:                                               ; preds = %19, %16, %14
  %26 = phi i32 [ %9, %16 ], [ 0, %14 ], [ %24, %19 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !2254, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i32 %5, metadata !2250, metadata !DIExpression()), !dbg !2263
  %27 = icmp ult i32 %5, %8, !dbg !2274
  %28 = icmp ult i32 %5, 32, !dbg !2275
  %29 = and i1 %27, %28, !dbg !2275
  br i1 %29, label %30, label %40, !dbg !2276

30:                                               ; preds = %25
  %31 = getelementptr i8, i8* %4, i32 %5, !dbg !2276
  %32 = xor i32 %5, -1, !dbg !2276
  %33 = add i32 %32, %8, !dbg !2276
  %34 = sub i32 31, %5, !dbg !2276
  %35 = call i32 @llvm.umin.i32(i32 %33, i32 %34), !dbg !2276
  %36 = add nuw i32 %35, 1, !dbg !2276
  call void @llvm.memset.p0i8.i32(i8* align 1 %31, i8 48, i32 %36, i1 false), !dbg !2277, !tbaa !1608
  %37 = call i32 @llvm.umin.i32(i32 %33, i32 %34), !dbg !2276
  %38 = add i32 %37, %5, !dbg !2276
  call void @llvm.dbg.value(metadata i32 undef, metadata !2250, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i32 undef, metadata !2250, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2263
  %39 = add i32 %38, 1, !dbg !2276
  br label %40

40:                                               ; preds = %30, %25
  %41 = phi i32 [ %5, %25 ], [ %39, %30 ]
  %42 = and i32 %10, 1
  %43 = icmp eq i32 %42, 0
  call void @llvm.dbg.value(metadata i32 %41, metadata !2250, metadata !DIExpression()), !dbg !2263
  br i1 %43, label %55, label %44, !dbg !2279

44:                                               ; preds = %40
  call void @llvm.dbg.value(metadata i32 %41, metadata !2250, metadata !DIExpression()), !dbg !2263
  %45 = icmp ult i32 %41, %26, !dbg !2280
  %46 = icmp ult i32 %41, 32
  %47 = and i1 %45, %46, !dbg !2281
  br i1 %47, label %48, label %55, !dbg !2281

48:                                               ; preds = %44, %48
  %49 = phi i32 [ %50, %48 ], [ %41, %44 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !2250, metadata !DIExpression()), !dbg !2263
  %50 = add i32 %49, 1, !dbg !2282
  call void @llvm.dbg.value(metadata i32 %50, metadata !2250, metadata !DIExpression()), !dbg !2263
  %51 = getelementptr inbounds i8, i8* %4, i32 %49, !dbg !2284
  store i8 48, i8* %51, align 1, !dbg !2285, !tbaa !1608
  %52 = icmp ult i32 %50, %26, !dbg !2280
  %53 = icmp ult i32 %50, 32
  %54 = and i1 %52, %53, !dbg !2281
  br i1 %54, label %48, label %55, !dbg !2281, !llvm.loop !2286

55:                                               ; preds = %48, %44, %40, %11
  %56 = phi i32 [ %9, %11 ], [ %26, %40 ], [ %26, %44 ], [ %26, %48 ]
  %57 = phi i32 [ %5, %11 ], [ %41, %40 ], [ %41, %44 ], [ %50, %48 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !2250, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i32 %56, metadata !2254, metadata !DIExpression()), !dbg !2263
  %58 = and i32 %10, 16, !dbg !2289
  %59 = icmp eq i32 %58, 0, !dbg !2289
  br i1 %59, label %101, label %60, !dbg !2291

60:                                               ; preds = %55
  %61 = and i32 %10, 1024, !dbg !2292
  %62 = icmp eq i32 %61, 0, !dbg !2292
  %63 = icmp ne i32 %57, 0
  %64 = select i1 %62, i1 %63, i1 false, !dbg !2295
  br i1 %64, label %65, label %76, !dbg !2295

65:                                               ; preds = %60
  %66 = icmp eq i32 %57, %8, !dbg !2296
  %67 = icmp eq i32 %57, %56
  %68 = or i1 %66, %67, !dbg !2297
  br i1 %68, label %69, label %76, !dbg !2297

69:                                               ; preds = %65
  %70 = add i32 %57, -1, !dbg !2298
  call void @llvm.dbg.value(metadata i32 %70, metadata !2250, metadata !DIExpression()), !dbg !2263
  %71 = icmp ne i32 %70, 0, !dbg !2300
  %72 = icmp eq i32 %7, 16
  %73 = and i1 %72, %71, !dbg !2302
  %74 = add i32 %57, -2
  %75 = select i1 %73, i32 %74, i32 %70, !dbg !2302
  br label %76, !dbg !2302

76:                                               ; preds = %69, %65, %60
  %77 = phi i32 [ %57, %60 ], [ %57, %65 ], [ %75, %69 ]
  call void @llvm.dbg.value(metadata i32 %77, metadata !2250, metadata !DIExpression()), !dbg !2263
  %78 = icmp eq i32 %7, 16, !dbg !2303
  br i1 %78, label %79, label %87, !dbg !2305

79:                                               ; preds = %76
  %80 = and i32 %10, 32, !dbg !2306
  %81 = icmp eq i32 %80, 0, !dbg !2306
  %82 = icmp ult i32 %77, 32
  %83 = select i1 %81, i1 %82, i1 false, !dbg !2307
  br i1 %83, label %91, label %84, !dbg !2307

84:                                               ; preds = %79
  %85 = icmp ne i32 %80, 0, !dbg !2308
  %86 = select i1 %85, i1 %82, i1 false, !dbg !2310
  br i1 %86, label %91, label %87, !dbg !2310

87:                                               ; preds = %76, %84
  %88 = icmp eq i32 %7, 2, !dbg !2311
  %89 = icmp ult i32 %77, 32
  %90 = select i1 %88, i1 %89, i1 false, !dbg !2313
  br i1 %90, label %91, label %95, !dbg !2313

91:                                               ; preds = %87, %84, %79
  %92 = phi i8 [ 120, %79 ], [ 88, %84 ], [ 98, %87 ]
  %93 = add i32 %77, 1, !dbg !2314
  %94 = getelementptr inbounds i8, i8* %4, i32 %77, !dbg !2314
  store i8 %92, i8* %94, align 1, !dbg !2314, !tbaa !1608
  br label %95, !dbg !2315

95:                                               ; preds = %91, %87
  %96 = phi i32 [ %77, %87 ], [ %93, %91 ], !dbg !2317
  call void @llvm.dbg.value(metadata i32 %96, metadata !2250, metadata !DIExpression()), !dbg !2263
  %97 = icmp ult i32 %96, 32, !dbg !2315
  br i1 %97, label %98, label %101, !dbg !2318

98:                                               ; preds = %95
  %99 = add i32 %96, 1, !dbg !2319
  call void @llvm.dbg.value(metadata i32 %99, metadata !2250, metadata !DIExpression()), !dbg !2263
  %100 = getelementptr inbounds i8, i8* %4, i32 %96, !dbg !2321
  store i8 48, i8* %100, align 1, !dbg !2322, !tbaa !1608
  br label %101, !dbg !2323

101:                                              ; preds = %95, %98, %55
  %102 = phi i32 [ %99, %98 ], [ %96, %95 ], [ %57, %55 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !2250, metadata !DIExpression()), !dbg !2263
  %103 = icmp ult i32 %102, 32, !dbg !2324
  br i1 %103, label %104, label %115, !dbg !2326

104:                                              ; preds = %101
  br i1 %6, label %111, label %105, !dbg !2327

105:                                              ; preds = %104
  %106 = and i32 %10, 4, !dbg !2329
  %107 = icmp eq i32 %106, 0, !dbg !2329
  br i1 %107, label %108, label %111, !dbg !2332

108:                                              ; preds = %105
  %109 = and i32 %10, 8, !dbg !2333
  %110 = icmp eq i32 %109, 0, !dbg !2333
  br i1 %110, label %115, label %111, !dbg !2335

111:                                              ; preds = %108, %105, %104
  %112 = phi i8 [ 45, %104 ], [ 43, %105 ], [ 32, %108 ]
  %113 = add i32 %102, 1, !dbg !2336
  %114 = getelementptr inbounds i8, i8* %4, i32 %102, !dbg !2336
  store i8 %112, i8* %114, align 1, !dbg !2336, !tbaa !1608
  br label %115, !dbg !2337

115:                                              ; preds = %111, %108, %101
  %116 = phi i32 [ %102, %108 ], [ %102, %101 ], [ %113, %111 ], !dbg !2263
  call void @llvm.dbg.value(metadata i32 %116, metadata !2250, metadata !DIExpression()), !dbg !2263
  %117 = and i32 %10, 3, !dbg !2337
  %118 = icmp eq i32 %117, 0, !dbg !2337
  %119 = icmp ult i32 %116, %56
  %120 = select i1 %118, i1 %119, i1 false, !dbg !2337
  call void @llvm.dbg.value(metadata i32 %116, metadata !2257, metadata !DIExpression()), !dbg !2338
  call void @llvm.dbg.value(metadata i32 %2, metadata !2247, metadata !DIExpression()), !dbg !2263
  br i1 %120, label %121, label %127, !dbg !2337

121:                                              ; preds = %115, %121
  %122 = phi i32 [ %125, %121 ], [ %116, %115 ]
  %123 = phi i32 [ %124, %121 ], [ %2, %115 ]
  call void @llvm.dbg.value(metadata i32 %122, metadata !2257, metadata !DIExpression()), !dbg !2338
  call void @llvm.dbg.value(metadata i32 %123, metadata !2247, metadata !DIExpression()), !dbg !2263
  %124 = add i32 %123, 1, !dbg !2339
  call void @llvm.dbg.value(metadata i32 %124, metadata !2247, metadata !DIExpression()), !dbg !2263
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %123, i32 noundef %3) #26, !dbg !2342, !callees !1613
  %125 = add nuw i32 %122, 1, !dbg !2343
  call void @llvm.dbg.value(metadata i32 %125, metadata !2257, metadata !DIExpression()), !dbg !2338
  %126 = icmp eq i32 %125, %56, !dbg !2344
  br i1 %126, label %127, label %121, !dbg !2345, !llvm.loop !2346

127:                                              ; preds = %121, %115
  %128 = phi i32 [ %2, %115 ], [ %124, %121 ]
  call void @llvm.dbg.value(metadata i32 %128, metadata !2247, metadata !DIExpression()), !dbg !2263
  call void @llvm.dbg.value(metadata i32 0, metadata !2261, metadata !DIExpression()), !dbg !2348
  %129 = icmp eq i32 %116, 0, !dbg !2349
  br i1 %129, label %130, label %136, !dbg !2351

130:                                              ; preds = %136, %127
  %131 = phi i32 [ %128, %127 ], [ %143, %136 ]
  %132 = xor i1 %13, true, !dbg !2352
  %133 = sub i32 %131, %2
  %134 = icmp ult i32 %133, %56
  %135 = select i1 %132, i1 %134, i1 false, !dbg !2352
  call void @llvm.dbg.value(metadata i32 %131, metadata !2247, metadata !DIExpression()), !dbg !2263
  br i1 %135, label %146, label %151, !dbg !2352

136:                                              ; preds = %127, %136
  %137 = phi i32 [ %144, %136 ], [ 0, %127 ]
  %138 = phi i32 [ %143, %136 ], [ %128, %127 ]
  call void @llvm.dbg.value(metadata i32 %137, metadata !2261, metadata !DIExpression()), !dbg !2348
  call void @llvm.dbg.value(metadata i32 %138, metadata !2247, metadata !DIExpression()), !dbg !2263
  %139 = xor i32 %137, -1, !dbg !2353
  %140 = add i32 %116, %139, !dbg !2353
  %141 = getelementptr inbounds i8, i8* %4, i32 %140, !dbg !2355
  %142 = load i8, i8* %141, align 1, !dbg !2355, !tbaa !1608
  %143 = add i32 %138, 1, !dbg !2356
  call void @llvm.dbg.value(metadata i32 %143, metadata !2247, metadata !DIExpression()), !dbg !2263
  call void %0(i8 noundef zeroext %142, i8* noundef %1, i32 noundef %138, i32 noundef %3) #26, !dbg !2357, !callees !1613
  %144 = add nuw i32 %137, 1, !dbg !2358
  call void @llvm.dbg.value(metadata i32 %144, metadata !2261, metadata !DIExpression()), !dbg !2348
  %145 = icmp eq i32 %144, %116, !dbg !2349
  br i1 %145, label %130, label %136, !dbg !2351, !llvm.loop !2359

146:                                              ; preds = %130, %146
  %147 = phi i32 [ %148, %146 ], [ %131, %130 ]
  call void @llvm.dbg.value(metadata i32 %147, metadata !2247, metadata !DIExpression()), !dbg !2263
  %148 = add i32 %147, 1, !dbg !2361
  call void @llvm.dbg.value(metadata i32 %148, metadata !2247, metadata !DIExpression()), !dbg !2263
  call void %0(i8 noundef zeroext 32, i8* noundef %1, i32 noundef %147, i32 noundef %3) #26, !dbg !2365, !callees !1613
  %149 = sub i32 %148, %2, !dbg !2366
  %150 = icmp ult i32 %149, %56, !dbg !2367
  br i1 %150, label %146, label %151, !dbg !2368, !llvm.loop !2369

151:                                              ; preds = %146, %130
  %152 = phi i32 [ %131, %130 ], [ %148, %146 ]
  call void @llvm.dbg.value(metadata i32 %152, metadata !2247, metadata !DIExpression()), !dbg !2263
  ret i32 %152, !dbg !2371
}

; Function Attrs: noinline nounwind
define dso_local i32 @sprintf_(i8* noundef %0, i8* noundef %1, ...) local_unnamed_addr #3 !dbg !2372 {
  %3 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2376, metadata !DIExpression()), !dbg !2380
  call void @llvm.dbg.value(metadata i8* %1, metadata !2377, metadata !DIExpression()), !dbg !2380
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !2381
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #26, !dbg !2381
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !2378, metadata !DIExpression()), !dbg !2382
  call void @llvm.va_start(i8* nonnull %4), !dbg !2383
  %5 = bitcast %struct.__va_list* %3 to i32*, !dbg !2384
  %6 = load i32, i32* %5, align 4, !dbg !2384
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !2384
  %8 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef -1, i8* noundef %1, [1 x i32] %7), !dbg !2384
  call void @llvm.dbg.value(metadata i32 %8, metadata !2379, metadata !DIExpression()), !dbg !2380
  call void @llvm.va_end(i8* %4), !dbg !2385
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #26, !dbg !2386
  ret i32 %8, !dbg !2387
}

; Function Attrs: noinline nounwind
define dso_local i32 @snprintf_(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #3 !dbg !2388 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2392, metadata !DIExpression()), !dbg !2397
  call void @llvm.dbg.value(metadata i32 %1, metadata !2393, metadata !DIExpression()), !dbg !2397
  call void @llvm.dbg.value(metadata i8* %2, metadata !2394, metadata !DIExpression()), !dbg !2397
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !2398
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !2398
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !2395, metadata !DIExpression()), !dbg !2399
  call void @llvm.va_start(i8* nonnull %5), !dbg !2400
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !2401
  %7 = load i32, i32* %6, align 4, !dbg !2401
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !2401
  %9 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8), !dbg !2401
  call void @llvm.dbg.value(metadata i32 %9, metadata !2396, metadata !DIExpression()), !dbg !2397
  call void @llvm.va_end(i8* %5), !dbg !2402
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !2403
  ret i32 %9, !dbg !2404
}

; Function Attrs: noinline nounwind
define dso_local i32 @vsnprintf_(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #3 !dbg !2405 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2412, metadata !DIExpression()), !dbg !2413
  call void @llvm.dbg.value(metadata i8* %0, metadata !2409, metadata !DIExpression()), !dbg !2413
  call void @llvm.dbg.value(metadata i32 %1, metadata !2410, metadata !DIExpression()), !dbg !2413
  call void @llvm.dbg.value(metadata i8* %2, metadata !2411, metadata !DIExpression()), !dbg !2413
  %5 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_buffer, i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3), !dbg !2414
  ret i32 %5, !dbg !2415
}

; Function Attrs: noinline nounwind
define dso_local i32 @fctprintf(void (i8, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, ...) local_unnamed_addr #3 !dbg !2416 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca %struct.out_fct_wrap_type, align 4
  call void @llvm.dbg.value(metadata void (i8, i8*)* %0, metadata !2420, metadata !DIExpression()), !dbg !2427
  call void @llvm.dbg.value(metadata i8* %1, metadata !2421, metadata !DIExpression()), !dbg !2427
  call void @llvm.dbg.value(metadata i8* %2, metadata !2422, metadata !DIExpression()), !dbg !2427
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !2428
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #26, !dbg !2428
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !2423, metadata !DIExpression()), !dbg !2429
  call void @llvm.va_start(i8* nonnull %6), !dbg !2430
  %7 = bitcast %struct.out_fct_wrap_type* %5 to i8*, !dbg !2431
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #26, !dbg !2431
  call void @llvm.dbg.declare(metadata %struct.out_fct_wrap_type* %5, metadata !2424, metadata !DIExpression()), !dbg !2432
  %8 = getelementptr inbounds %struct.out_fct_wrap_type, %struct.out_fct_wrap_type* %5, i32 0, i32 0, !dbg !2433
  store void (i8, i8*)* %0, void (i8, i8*)** %8, align 4, !dbg !2433, !tbaa !1925
  %9 = getelementptr inbounds %struct.out_fct_wrap_type, %struct.out_fct_wrap_type* %5, i32 0, i32 1, !dbg !2433
  store i8* %1, i8** %9, align 4, !dbg !2433, !tbaa !1928
  %10 = bitcast %struct.__va_list* %4 to i32*, !dbg !2434
  %11 = load i32, i32* %10, align 4, !dbg !2434
  %12 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !2434
  %13 = call fastcc i32 @_vsnprintf(void (i8, i8*, i32, i32)* noundef nonnull @_out_fct, i8* noundef nonnull %7, i32 noundef -1, i8* noundef %2, [1 x i32] %12), !dbg !2434
  call void @llvm.dbg.value(metadata i32 %13, metadata !2426, metadata !DIExpression()), !dbg !2427
  call void @llvm.va_end(i8* %6), !dbg !2435
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #26, !dbg !2436
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #26, !dbg !2436
  ret i32 %13, !dbg !2437
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @SystemInit() local_unnamed_addr #14 !dbg !2438 {
  %1 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2439, !tbaa !2440
  %2 = or i32 %1, 1, !dbg !2439
  store volatile i32 %2, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2439, !tbaa !2440
  %3 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2443, !tbaa !2444
  %4 = and i32 %3, -117506048, !dbg !2443
  store volatile i32 %4, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2443, !tbaa !2444
  %5 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2445, !tbaa !2440
  %6 = and i32 %5, -17367041, !dbg !2445
  store volatile i32 %6, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2445, !tbaa !2440
  %7 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2446, !tbaa !2440
  %8 = and i32 %7, -262145, !dbg !2446
  store volatile i32 %8, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2446, !tbaa !2440
  %9 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2447, !tbaa !2444
  %10 = and i32 %9, -8323073, !dbg !2447
  store volatile i32 %10, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2447, !tbaa !2444
  store volatile i32 10420224, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !2448, !tbaa !2449
  store volatile i32 134217728, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !2450, !tbaa !2451
  ret void, !dbg !2453
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !2454 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2456, metadata !DIExpression()), !dbg !2459
  call void @llvm.dbg.value(metadata i32 0, metadata !2457, metadata !DIExpression()), !dbg !2459
  call void @llvm.dbg.value(metadata i32 0, metadata !2458, metadata !DIExpression()), !dbg !2459
  %1 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2460, !tbaa !2444
  %2 = and i32 %1, 12, !dbg !2461
  call void @llvm.dbg.value(metadata i32 %2, metadata !2456, metadata !DIExpression()), !dbg !2459
  %3 = icmp eq i32 %2, 8, !dbg !2462
  br i1 %3, label %4, label %22, !dbg !2462

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2463, !tbaa !2444
  call void @llvm.dbg.value(metadata i32 %5, metadata !2457, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !2459
  %6 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2465, !tbaa !2444
  %7 = and i32 %6, 65536, !dbg !2466
  call void @llvm.dbg.value(metadata i32 %7, metadata !2458, metadata !DIExpression()), !dbg !2459
  %8 = lshr i32 %5, 18, !dbg !2467
  %9 = and i32 %8, 15, !dbg !2467
  %10 = add nuw nsw i32 %9, 2, !dbg !2468
  call void @llvm.dbg.value(metadata i32 %10, metadata !2457, metadata !DIExpression()), !dbg !2459
  %11 = icmp eq i32 %7, 0, !dbg !2469
  br i1 %11, label %12, label %14, !dbg !2471

12:                                               ; preds = %4
  %13 = mul nuw nsw i32 %10, 4000000, !dbg !2472
  br label %22, !dbg !2474

14:                                               ; preds = %4
  %15 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2475, !tbaa !2444
  %16 = and i32 %15, 131072, !dbg !2478
  %17 = icmp eq i32 %16, 0, !dbg !2479
  br i1 %17, label %20, label %18, !dbg !2480

18:                                               ; preds = %14
  %19 = mul nuw nsw i32 %10, 4000000, !dbg !2481
  br label %22, !dbg !2483

20:                                               ; preds = %14
  %21 = mul nuw nsw i32 %10, 8000000, !dbg !2484
  br label %22

22:                                               ; preds = %0, %12, %20, %18
  %23 = phi i32 [ %13, %12 ], [ %21, %20 ], [ %19, %18 ], [ 8000000, %0 ]
  store i32 %23, i32* @SystemCoreClock, align 4, !dbg !2486, !tbaa !2487
  %24 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2488, !tbaa !2444
  %25 = lshr i32 %24, 4, !dbg !2489
  %26 = and i32 %25, 15, !dbg !2489
  %27 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %26, !dbg !2490
  %28 = load i8, i8* %27, align 1, !dbg !2490, !tbaa !1608
  %29 = zext i8 %28 to i32, !dbg !2490
  call void @llvm.dbg.value(metadata i32 %29, metadata !2456, metadata !DIExpression()), !dbg !2459
  %30 = load i32, i32* @SystemCoreClock, align 4, !dbg !2491, !tbaa !2487
  %31 = lshr i32 %30, %29, !dbg !2491
  store i32 %31, i32* @SystemCoreClock, align 4, !dbg !2491, !tbaa !2487
  ret void, !dbg !2492
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #3 !dbg !2493 {
  %1 = call i32 @HAL_GetTick() #26, !dbg !2499
  call void @llvm.dbg.value(metadata i32 %1, metadata !2498, metadata !DIExpression()), !dbg !2500
  %2 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2501, !tbaa !2440
  %3 = or i32 %2, 1, !dbg !2501
  store volatile i32 %3, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2501, !tbaa !2440
  br label %4, !dbg !2502

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2503, !tbaa !2440
  %6 = and i32 %5, 2, !dbg !2503
  %7 = icmp eq i32 %6, 0, !dbg !2504
  br i1 %7, label %8, label %12, !dbg !2502

8:                                                ; preds = %4
  %9 = call i32 @HAL_GetTick() #26, !dbg !2505
  %10 = sub i32 %9, %1, !dbg !2508
  %11 = icmp ugt i32 %10, 2, !dbg !2509
  br i1 %11, label %58, label %4, !dbg !2510, !llvm.loop !2511

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2513, !tbaa !2440
  %14 = and i32 %13, -249, !dbg !2513
  %15 = or i32 %14, 128, !dbg !2513
  store volatile i32 %15, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2513, !tbaa !2440
  %16 = call i32 @HAL_GetTick() #26, !dbg !2514
  call void @llvm.dbg.value(metadata i32 %16, metadata !2498, metadata !DIExpression()), !dbg !2500
  store volatile i32 0, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2515, !tbaa !2444
  br label %17, !dbg !2516

17:                                               ; preds = %21, %12
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2517, !tbaa !2444
  %19 = and i32 %18, 12, !dbg !2517
  %20 = icmp eq i32 %19, 0, !dbg !2518
  br i1 %20, label %25, label %21, !dbg !2516

21:                                               ; preds = %17
  %22 = call i32 @HAL_GetTick() #26, !dbg !2519
  %23 = sub i32 %22, %16, !dbg !2522
  %24 = icmp ugt i32 %23, 5000, !dbg !2523
  br i1 %24, label %58, label %17, !dbg !2524, !llvm.loop !2525

25:                                               ; preds = %17
  store i32 8000000, i32* @SystemCoreClock, align 4, !dbg !2527, !tbaa !2487
  %26 = load i32, i32* @uwTickPrio, align 4, !dbg !2528, !tbaa !2487
  %27 = call i32 @HAL_InitTick(i32 noundef %26) #26, !dbg !2530
  %28 = icmp eq i32 %27, 0, !dbg !2531
  br i1 %28, label %29, label %58, !dbg !2532

29:                                               ; preds = %25
  %30 = call i32 @HAL_GetTick() #26, !dbg !2533
  call void @llvm.dbg.value(metadata i32 %30, metadata !2498, metadata !DIExpression()), !dbg !2500
  %31 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2534, !tbaa !2440
  %32 = and i32 %31, -16777217, !dbg !2534
  store volatile i32 %32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2534, !tbaa !2440
  br label %33, !dbg !2535

33:                                               ; preds = %37, %29
  %34 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2536, !tbaa !2440
  %35 = and i32 %34, 33554432, !dbg !2536
  %36 = icmp eq i32 %35, 0, !dbg !2537
  br i1 %36, label %41, label %37, !dbg !2535

37:                                               ; preds = %33
  %38 = call i32 @HAL_GetTick() #26, !dbg !2538
  %39 = sub i32 %38, %30, !dbg !2541
  %40 = icmp ugt i32 %39, 2, !dbg !2542
  br i1 %40, label %58, label %33, !dbg !2543, !llvm.loop !2544

41:                                               ; preds = %33
  store volatile i32 0, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2546, !tbaa !2444
  %42 = call i32 @HAL_GetTick() #26, !dbg !2547
  call void @llvm.dbg.value(metadata i32 %42, metadata !2498, metadata !DIExpression()), !dbg !2500
  %43 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2548, !tbaa !2440
  %44 = and i32 %43, -589825, !dbg !2548
  store volatile i32 %44, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2548, !tbaa !2440
  br label %45, !dbg !2549

45:                                               ; preds = %49, %41
  %46 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2550, !tbaa !2440
  %47 = and i32 %46, 131072, !dbg !2550
  %48 = icmp eq i32 %47, 0, !dbg !2551
  br i1 %48, label %53, label %49, !dbg !2549

49:                                               ; preds = %45
  %50 = call i32 @HAL_GetTick() #26, !dbg !2552
  %51 = sub i32 %50, %42, !dbg !2555
  %52 = icmp ugt i32 %51, 100, !dbg !2556
  br i1 %52, label %58, label %45, !dbg !2557, !llvm.loop !2558

53:                                               ; preds = %45
  %54 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2560, !tbaa !2440
  %55 = and i32 %54, -262145, !dbg !2560
  store volatile i32 %55, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2560, !tbaa !2440
  %56 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !2561, !tbaa !2562
  %57 = or i32 %56, 16777216, !dbg !2561
  store volatile i32 %57, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !2561, !tbaa !2562
  store volatile i32 0, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !2563, !tbaa !2449
  br label %58, !dbg !2564

58:                                               ; preds = %8, %21, %37, %49, %25, %53
  %59 = phi i32 [ 0, %53 ], [ 1, %25 ], [ 3, %49 ], [ 3, %37 ], [ 3, %21 ], [ 3, %8 ], !dbg !2500
  ret i32 %59, !dbg !2565
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #3 !dbg !2566 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !2588, metadata !DIExpression()), !dbg !2599
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !2600
  br i1 %3, label %298, label %4, !dbg !2602

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !2603
  %6 = load i32, i32* %5, align 4, !dbg !2603, !tbaa !2605
  %7 = and i32 %6, 1, !dbg !2608
  %8 = icmp eq i32 %7, 0, !dbg !2609
  br i1 %8, label %70, label %9, !dbg !2610

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2611, !tbaa !2444
  %11 = and i32 %10, 12, !dbg !2611
  %12 = icmp eq i32 %11, 4, !dbg !2614
  br i1 %12, label %21, label %13, !dbg !2615

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2616, !tbaa !2444
  %15 = and i32 %14, 12, !dbg !2616
  %16 = icmp eq i32 %15, 8, !dbg !2617
  br i1 %16, label %17, label %29, !dbg !2618

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2619, !tbaa !2444
  %19 = and i32 %18, 65536, !dbg !2619
  %20 = icmp eq i32 %19, 0, !dbg !2620
  br i1 %20, label %29, label %21, !dbg !2621

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2622, !tbaa !2440
  %23 = and i32 %22, 131072, !dbg !2622
  %24 = icmp eq i32 %23, 0, !dbg !2625
  br i1 %24, label %70, label %25, !dbg !2626

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !2627
  %27 = load i32, i32* %26, align 4, !dbg !2627, !tbaa !2628
  %28 = icmp eq i32 %27, 0, !dbg !2629
  br i1 %28, label %298, label %70, !dbg !2630

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !2631
  %31 = load i32, i32* %30, align 4, !dbg !2631, !tbaa !2628
  switch i32 %31, label %45 [
    i32 65536, label %32
    i32 0, label %35
    i32 327680, label %40
  ], !dbg !2635

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2636, !tbaa !2440
  %34 = or i32 %33, 65536, !dbg !2636
  br label %50, !dbg !2636

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2638, !tbaa !2440
  %37 = and i32 %36, -65537, !dbg !2638
  store volatile i32 %37, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2638, !tbaa !2440
  %38 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2638, !tbaa !2440
  %39 = and i32 %38, -262145, !dbg !2638
  br label %50, !dbg !2638

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2641, !tbaa !2440
  %42 = or i32 %41, 262144, !dbg !2641
  store volatile i32 %42, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2641, !tbaa !2440
  %43 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2641, !tbaa !2440
  %44 = or i32 %43, 65536, !dbg !2641
  br label %50, !dbg !2641

45:                                               ; preds = %29
  %46 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2644, !tbaa !2440
  %47 = and i32 %46, -65537, !dbg !2644
  store volatile i32 %47, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2644, !tbaa !2440
  %48 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2644, !tbaa !2440
  %49 = and i32 %48, -262145, !dbg !2644
  br label %50

50:                                               ; preds = %35, %45, %40, %32
  %51 = phi i32 [ %39, %35 ], [ %49, %45 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %51, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2646, !tbaa !2440
  %52 = icmp eq i32 %31, 0, !dbg !2647
  %53 = call i32 @HAL_GetTick() #26, !dbg !2649
  call void @llvm.dbg.value(metadata i32 %53, metadata !2589, metadata !DIExpression()), !dbg !2599
  call void @llvm.dbg.value(metadata i32 %53, metadata !2589, metadata !DIExpression()), !dbg !2599
  br i1 %52, label %62, label %54, !dbg !2650

54:                                               ; preds = %50, %58
  %55 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2651, !tbaa !2440
  %56 = and i32 %55, 131072, !dbg !2651
  %57 = icmp eq i32 %56, 0, !dbg !2653
  br i1 %57, label %58, label %70, !dbg !2654

58:                                               ; preds = %54
  %59 = call i32 @HAL_GetTick() #26, !dbg !2655
  %60 = sub i32 %59, %53, !dbg !2658
  %61 = icmp ugt i32 %60, 100, !dbg !2659
  br i1 %61, label %298, label %54, !dbg !2660, !llvm.loop !2661

62:                                               ; preds = %50, %66
  %63 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2663, !tbaa !2440
  %64 = and i32 %63, 131072, !dbg !2663
  %65 = icmp eq i32 %64, 0, !dbg !2665
  br i1 %65, label %70, label %66, !dbg !2666

66:                                               ; preds = %62
  %67 = call i32 @HAL_GetTick() #26, !dbg !2667
  %68 = sub i32 %67, %53, !dbg !2670
  %69 = icmp ugt i32 %68, 100, !dbg !2671
  br i1 %69, label %298, label %62, !dbg !2672, !llvm.loop !2673

70:                                               ; preds = %54, %62, %25, %21, %4
  %71 = load i32, i32* %5, align 4, !dbg !2675, !tbaa !2605
  %72 = and i32 %71, 2, !dbg !2677
  %73 = icmp eq i32 %72, 0, !dbg !2678
  br i1 %73, label %125, label %74, !dbg !2679

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2680, !tbaa !2444
  %76 = and i32 %75, 12, !dbg !2680
  %77 = icmp eq i32 %76, 0, !dbg !2683
  br i1 %77, label %86, label %78, !dbg !2684

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2685, !tbaa !2444
  %80 = and i32 %79, 12, !dbg !2685
  %81 = icmp eq i32 %80, 8, !dbg !2686
  br i1 %81, label %82, label %94, !dbg !2687

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2688, !tbaa !2444
  %84 = and i32 %83, 65536, !dbg !2688
  %85 = icmp eq i32 %84, 0, !dbg !2689
  br i1 %85, label %86, label %94, !dbg !2690

86:                                               ; preds = %82, %74
  %87 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2691, !tbaa !2440
  %88 = and i32 %87, 2, !dbg !2691
  %89 = icmp eq i32 %88, 0, !dbg !2694
  br i1 %89, label %118, label %90, !dbg !2695

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !2696
  %92 = load i32, i32* %91, align 4, !dbg !2696, !tbaa !2697
  %93 = icmp eq i32 %92, 1, !dbg !2698
  br i1 %93, label %118, label %298, !dbg !2699

94:                                               ; preds = %82, %78
  %95 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !2700
  %96 = load i32, i32* %95, align 4, !dbg !2700, !tbaa !2697
  %97 = icmp eq i32 %96, 0, !dbg !2703
  br i1 %97, label %108, label %98, !dbg !2704

98:                                               ; preds = %94
  store volatile i32 1, i32* inttoptr (i32 1111621632 to i32*), align 131072, !dbg !2705, !tbaa !2487
  %99 = call i32 @HAL_GetTick() #26, !dbg !2707
  call void @llvm.dbg.value(metadata i32 %99, metadata !2589, metadata !DIExpression()), !dbg !2599
  br label %100, !dbg !2708

100:                                              ; preds = %104, %98
  %101 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2709, !tbaa !2440
  %102 = and i32 %101, 2, !dbg !2709
  %103 = icmp eq i32 %102, 0, !dbg !2710
  br i1 %103, label %104, label %118, !dbg !2708

104:                                              ; preds = %100
  %105 = call i32 @HAL_GetTick() #26, !dbg !2711
  %106 = sub i32 %105, %99, !dbg !2714
  %107 = icmp ugt i32 %106, 2, !dbg !2715
  br i1 %107, label %298, label %100, !dbg !2716, !llvm.loop !2717

108:                                              ; preds = %94
  store volatile i32 0, i32* inttoptr (i32 1111621632 to i32*), align 131072, !dbg !2719, !tbaa !2487
  %109 = call i32 @HAL_GetTick() #26, !dbg !2721
  call void @llvm.dbg.value(metadata i32 %109, metadata !2589, metadata !DIExpression()), !dbg !2599
  br label %110, !dbg !2722

110:                                              ; preds = %114, %108
  %111 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2723, !tbaa !2440
  %112 = and i32 %111, 2, !dbg !2723
  %113 = icmp eq i32 %112, 0, !dbg !2724
  br i1 %113, label %125, label %114, !dbg !2722

114:                                              ; preds = %110
  %115 = call i32 @HAL_GetTick() #26, !dbg !2725
  %116 = sub i32 %115, %109, !dbg !2728
  %117 = icmp ugt i32 %116, 2, !dbg !2729
  br i1 %117, label %298, label %110, !dbg !2730, !llvm.loop !2731

118:                                              ; preds = %100, %86, %90
  %119 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2733, !tbaa !2440
  %120 = and i32 %119, -249, !dbg !2733
  %121 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !2733
  %122 = load i32, i32* %121, align 4, !dbg !2733, !tbaa !2734
  %123 = shl i32 %122, 3, !dbg !2733
  %124 = or i32 %123, %120, !dbg !2733
  store volatile i32 %124, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2733, !tbaa !2440
  br label %125, !dbg !2735

125:                                              ; preds = %110, %118, %70
  %126 = load i32, i32* %5, align 4, !dbg !2735, !tbaa !2605
  %127 = and i32 %126, 8, !dbg !2737
  %128 = icmp eq i32 %127, 0, !dbg !2738
  br i1 %128, label %154, label %129, !dbg !2739

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !2740
  %131 = load i32, i32* %130, align 4, !dbg !2740, !tbaa !2743
  %132 = icmp eq i32 %131, 0, !dbg !2744
  br i1 %132, label %144, label %133, !dbg !2745

133:                                              ; preds = %129
  store volatile i32 1, i32* inttoptr (i32 1111622784 to i32*), align 128, !dbg !2746, !tbaa !2487
  %134 = call i32 @HAL_GetTick() #26, !dbg !2748
  call void @llvm.dbg.value(metadata i32 %134, metadata !2589, metadata !DIExpression()), !dbg !2599
  br label %135, !dbg !2749

135:                                              ; preds = %139, %133
  %136 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !2750, !tbaa !2562
  %137 = and i32 %136, 2, !dbg !2750
  %138 = icmp eq i32 %137, 0, !dbg !2751
  br i1 %138, label %139, label %143, !dbg !2749

139:                                              ; preds = %135
  %140 = call i32 @HAL_GetTick() #26, !dbg !2752
  %141 = sub i32 %140, %134, !dbg !2755
  %142 = icmp ugt i32 %141, 2, !dbg !2756
  br i1 %142, label %298, label %135, !dbg !2757, !llvm.loop !2758

143:                                              ; preds = %135
  call fastcc void @RCC_Delay(), !dbg !2760
  br label %154, !dbg !2761

144:                                              ; preds = %129
  store volatile i32 0, i32* inttoptr (i32 1111622784 to i32*), align 128, !dbg !2762, !tbaa !2487
  %145 = call i32 @HAL_GetTick() #26, !dbg !2764
  call void @llvm.dbg.value(metadata i32 %145, metadata !2589, metadata !DIExpression()), !dbg !2599
  br label %146, !dbg !2765

146:                                              ; preds = %150, %144
  %147 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !2766, !tbaa !2562
  %148 = and i32 %147, 2, !dbg !2766
  %149 = icmp eq i32 %148, 0, !dbg !2767
  br i1 %149, label %154, label %150, !dbg !2765

150:                                              ; preds = %146
  %151 = call i32 @HAL_GetTick() #26, !dbg !2768
  %152 = sub i32 %151, %145, !dbg !2771
  %153 = icmp ugt i32 %152, 2, !dbg !2772
  br i1 %153, label %298, label %146, !dbg !2773, !llvm.loop !2774

154:                                              ; preds = %146, %143, %125
  %155 = load i32, i32* %5, align 4, !dbg !2776, !tbaa !2605
  %156 = and i32 %155, 4, !dbg !2777
  %157 = icmp eq i32 %156, 0, !dbg !2778
  br i1 %157, label %231, label %158, !dbg !2779

158:                                              ; preds = %154
  call void @llvm.dbg.value(metadata i32 0, metadata !2591, metadata !DIExpression()), !dbg !2780
  %159 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2781, !tbaa !2782
  %160 = and i32 %159, 268435456, !dbg !2781
  %161 = icmp eq i32 %160, 0, !dbg !2781
  br i1 %161, label %162, label %170, !dbg !2783

162:                                              ; preds = %158
  %163 = bitcast i32* %2 to i8*, !dbg !2784
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163), !dbg !2784
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2595, metadata !DIExpression()), !dbg !2784
  %164 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2784, !tbaa !2782
  %165 = or i32 %164, 268435456, !dbg !2784
  store volatile i32 %165, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2784, !tbaa !2782
  %166 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2784, !tbaa !2782
  %167 = and i32 %166, 268435456, !dbg !2784
  store volatile i32 %167, i32* %2, align 4, !dbg !2784, !tbaa !2487
  %168 = load volatile i32, i32* %2, align 4, !dbg !2784, !tbaa !2487
  %169 = bitcast i32* %2 to i8*, !dbg !2785
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %169), !dbg !2785
  call void @llvm.dbg.value(metadata i32 1, metadata !2591, metadata !DIExpression()), !dbg !2780
  br label %170, !dbg !2786

170:                                              ; preds = %162, %158
  call void @llvm.dbg.value(metadata i32 undef, metadata !2591, metadata !DIExpression()), !dbg !2780
  %171 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !2787, !tbaa !2789
  %172 = and i32 %171, 256, !dbg !2787
  %173 = icmp eq i32 %172, 0, !dbg !2787
  br i1 %173, label %174, label %186, !dbg !2791

174:                                              ; preds = %170
  %175 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !2792, !tbaa !2789
  %176 = or i32 %175, 256, !dbg !2792
  store volatile i32 %176, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !2792, !tbaa !2789
  %177 = call i32 @HAL_GetTick() #26, !dbg !2794
  call void @llvm.dbg.value(metadata i32 %177, metadata !2589, metadata !DIExpression()), !dbg !2599
  br label %178, !dbg !2795

178:                                              ; preds = %182, %174
  %179 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !2796, !tbaa !2789
  %180 = and i32 %179, 256, !dbg !2796
  %181 = icmp eq i32 %180, 0, !dbg !2796
  br i1 %181, label %182, label %186, !dbg !2795

182:                                              ; preds = %178
  %183 = call i32 @HAL_GetTick() #26, !dbg !2797
  %184 = sub i32 %183, %177, !dbg !2800
  %185 = icmp ugt i32 %184, 100, !dbg !2801
  br i1 %185, label %298, label %178, !dbg !2802, !llvm.loop !2803

186:                                              ; preds = %178, %170
  %187 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !2805
  %188 = load i32, i32* %187, align 4, !dbg !2805, !tbaa !2808
  switch i32 %188, label %202 [
    i32 1, label %189
    i32 0, label %192
    i32 5, label %197
  ], !dbg !2809

189:                                              ; preds = %186
  %190 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2810, !tbaa !2812
  %191 = or i32 %190, 1, !dbg !2810
  br label %207, !dbg !2810

192:                                              ; preds = %186
  %193 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2813, !tbaa !2812
  %194 = and i32 %193, -2, !dbg !2813
  store volatile i32 %194, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2813, !tbaa !2812
  %195 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2813, !tbaa !2812
  %196 = and i32 %195, -5, !dbg !2813
  br label %207, !dbg !2813

197:                                              ; preds = %186
  %198 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2816, !tbaa !2812
  %199 = or i32 %198, 4, !dbg !2816
  store volatile i32 %199, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2816, !tbaa !2812
  %200 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2816, !tbaa !2812
  %201 = or i32 %200, 1, !dbg !2816
  br label %207, !dbg !2816

202:                                              ; preds = %186
  %203 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2819, !tbaa !2812
  %204 = and i32 %203, -2, !dbg !2819
  store volatile i32 %204, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2819, !tbaa !2812
  %205 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2819, !tbaa !2812
  %206 = and i32 %205, -5, !dbg !2819
  br label %207

207:                                              ; preds = %192, %202, %197, %189
  %208 = phi i32 [ %196, %192 ], [ %206, %202 ], [ %201, %197 ], [ %191, %189 ]
  store volatile i32 %208, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2821, !tbaa !2812
  %209 = icmp eq i32 %188, 0, !dbg !2822
  %210 = call i32 @HAL_GetTick() #26, !dbg !2824
  call void @llvm.dbg.value(metadata i32 %210, metadata !2589, metadata !DIExpression()), !dbg !2599
  call void @llvm.dbg.value(metadata i32 %210, metadata !2589, metadata !DIExpression()), !dbg !2599
  br i1 %209, label %219, label %211, !dbg !2825

211:                                              ; preds = %207, %215
  %212 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2826, !tbaa !2812
  %213 = and i32 %212, 2, !dbg !2826
  %214 = icmp eq i32 %213, 0, !dbg !2828
  br i1 %214, label %215, label %227, !dbg !2829

215:                                              ; preds = %211
  %216 = call i32 @HAL_GetTick() #26, !dbg !2830
  %217 = sub i32 %216, %210, !dbg !2833
  %218 = icmp ugt i32 %217, 5000, !dbg !2834
  br i1 %218, label %298, label %211, !dbg !2835, !llvm.loop !2836

219:                                              ; preds = %207, %223
  %220 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !2838, !tbaa !2812
  %221 = and i32 %220, 2, !dbg !2838
  %222 = icmp eq i32 %221, 0, !dbg !2840
  br i1 %222, label %227, label %223, !dbg !2841

223:                                              ; preds = %219
  %224 = call i32 @HAL_GetTick() #26, !dbg !2842
  %225 = sub i32 %224, %210, !dbg !2845
  %226 = icmp ugt i32 %225, 5000, !dbg !2846
  br i1 %226, label %298, label %219, !dbg !2847, !llvm.loop !2848

227:                                              ; preds = %211, %219
  br i1 %161, label %228, label %231, !dbg !2850

228:                                              ; preds = %227
  %229 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2851, !tbaa !2782
  %230 = and i32 %229, -268435457, !dbg !2851
  store volatile i32 %230, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !2851, !tbaa !2782
  br label %231, !dbg !2854

231:                                              ; preds = %228, %227, %154
  %232 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 0, !dbg !2855
  %233 = load i32, i32* %232, align 4, !dbg !2855, !tbaa !2857
  %234 = icmp eq i32 %233, 0, !dbg !2858
  br i1 %234, label %297, label %235, !dbg !2859

235:                                              ; preds = %231
  %236 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2860, !tbaa !2444
  %237 = and i32 %236, 12, !dbg !2860
  %238 = icmp eq i32 %237, 8, !dbg !2863
  br i1 %238, label %284, label %239, !dbg !2864

239:                                              ; preds = %235
  %240 = icmp eq i32 %233, 2, !dbg !2865
  store volatile i32 0, i32* inttoptr (i32 1111621728 to i32*), align 32, !dbg !2868, !tbaa !2487
  %241 = call i32 @HAL_GetTick() #26, !dbg !2868
  call void @llvm.dbg.value(metadata i32 %241, metadata !2589, metadata !DIExpression()), !dbg !2599
  call void @llvm.dbg.value(metadata i32 %241, metadata !2589, metadata !DIExpression()), !dbg !2599
  br i1 %240, label %242, label %276, !dbg !2869

242:                                              ; preds = %239, %246
  %243 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2870, !tbaa !2440
  %244 = and i32 %243, 33554432, !dbg !2870
  %245 = icmp eq i32 %244, 0, !dbg !2872
  br i1 %245, label %250, label %246, !dbg !2873

246:                                              ; preds = %242
  %247 = call i32 @HAL_GetTick() #26, !dbg !2874
  %248 = sub i32 %247, %241, !dbg !2877
  %249 = icmp ugt i32 %248, 2, !dbg !2878
  br i1 %249, label %298, label %242, !dbg !2879, !llvm.loop !2880

250:                                              ; preds = %242
  %251 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !2882
  %252 = load i32, i32* %251, align 4, !dbg !2882, !tbaa !2884
  %253 = icmp eq i32 %252, 65536, !dbg !2885
  br i1 %253, label %254, label %260, !dbg !2886

254:                                              ; preds = %250
  %255 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2887, !tbaa !2444
  %256 = and i32 %255, -131073, !dbg !2887
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !2887
  %258 = load i32, i32* %257, align 4, !dbg !2887, !tbaa !2889
  %259 = or i32 %256, %258, !dbg !2887
  store volatile i32 %259, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2887, !tbaa !2444
  br label %260, !dbg !2890

260:                                              ; preds = %254, %250
  %261 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2891, !tbaa !2444
  %262 = and i32 %261, -3997697, !dbg !2891
  %263 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !2891
  %264 = load i32, i32* %263, align 4, !dbg !2891, !tbaa !2892
  %265 = or i32 %264, %252, !dbg !2891
  %266 = or i32 %265, %262, !dbg !2891
  store volatile i32 %266, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2891, !tbaa !2444
  store volatile i32 1, i32* inttoptr (i32 1111621728 to i32*), align 32, !dbg !2893, !tbaa !2487
  %267 = call i32 @HAL_GetTick() #26, !dbg !2894
  call void @llvm.dbg.value(metadata i32 %267, metadata !2589, metadata !DIExpression()), !dbg !2599
  br label %268, !dbg !2895

268:                                              ; preds = %272, %260
  %269 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2896, !tbaa !2440
  %270 = and i32 %269, 33554432, !dbg !2896
  %271 = icmp eq i32 %270, 0, !dbg !2897
  br i1 %271, label %272, label %297, !dbg !2895

272:                                              ; preds = %268
  %273 = call i32 @HAL_GetTick() #26, !dbg !2898
  %274 = sub i32 %273, %267, !dbg !2901
  %275 = icmp ugt i32 %274, 2, !dbg !2902
  br i1 %275, label %298, label %268, !dbg !2903, !llvm.loop !2904

276:                                              ; preds = %239, %280
  %277 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !2906, !tbaa !2440
  %278 = and i32 %277, 33554432, !dbg !2906
  %279 = icmp eq i32 %278, 0, !dbg !2908
  br i1 %279, label %297, label %280, !dbg !2909

280:                                              ; preds = %276
  %281 = call i32 @HAL_GetTick() #26, !dbg !2910
  %282 = sub i32 %281, %241, !dbg !2913
  %283 = icmp ugt i32 %282, 2, !dbg !2914
  br i1 %283, label %298, label %276, !dbg !2915, !llvm.loop !2916

284:                                              ; preds = %235
  %285 = icmp eq i32 %233, 1, !dbg !2918
  br i1 %285, label %298, label %286, !dbg !2921

286:                                              ; preds = %284
  %287 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2922, !tbaa !2444
  call void @llvm.dbg.value(metadata i32 %287, metadata !2590, metadata !DIExpression()), !dbg !2599
  %288 = and i32 %287, 65536, !dbg !2924
  %289 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !2926
  %290 = load i32, i32* %289, align 4, !dbg !2926, !tbaa !2884
  %291 = icmp eq i32 %288, %290, !dbg !2927
  br i1 %291, label %292, label %298, !dbg !2928

292:                                              ; preds = %286
  %293 = and i32 %287, 3932160, !dbg !2929
  %294 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !2930
  %295 = load i32, i32* %294, align 4, !dbg !2930, !tbaa !2892
  %296 = icmp eq i32 %293, %295, !dbg !2931
  br i1 %296, label %297, label %298, !dbg !2932

297:                                              ; preds = %276, %268, %292, %231
  br label %298, !dbg !2933

298:                                              ; preds = %58, %66, %104, %114, %139, %150, %182, %215, %223, %280, %246, %272, %286, %292, %284, %90, %25, %1, %297
  %299 = phi i32 [ 0, %297 ], [ 1, %1 ], [ 1, %25 ], [ 1, %90 ], [ 1, %284 ], [ 1, %292 ], [ 1, %286 ], [ 3, %272 ], [ 3, %246 ], [ 3, %280 ], [ 3, %223 ], [ 3, %215 ], [ 3, %182 ], [ 3, %150 ], [ 3, %139 ], [ 3, %114 ], [ 3, %104 ], [ 3, %66 ], [ 3, %58 ], !dbg !2599
  ret i32 %299, !dbg !2934
}

; Function Attrs: noinline nounwind
define internal fastcc void @RCC_Delay() unnamed_addr #3 !dbg !2935 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !2939, metadata !DIExpression()), !dbg !2941
  %2 = bitcast i32* %1 to i8*, !dbg !2942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !2942
  call void @llvm.dbg.declare(metadata i32* %1, metadata !2940, metadata !DIExpression()), !dbg !2943
  %3 = load i32, i32* @SystemCoreClock, align 4, !dbg !2944, !tbaa !2487
  %4 = udiv i32 %3, 8000, !dbg !2945
  store volatile i32 %4, i32* %1, align 4, !dbg !2943, !tbaa !2487
  br label %5, !dbg !2946

5:                                                ; preds = %5, %0
  call void asm sideeffect "nop", ""() #26, !dbg !2947, !srcloc !2949
  %6 = load volatile i32, i32* %1, align 4, !dbg !2950, !tbaa !2487
  %7 = add i32 %6, -1, !dbg !2950
  store volatile i32 %7, i32* %1, align 4, !dbg !2950, !tbaa !2487
  %8 = icmp eq i32 %6, 0, !dbg !2951
  br i1 %8, label %9, label %5, !dbg !2951, !llvm.loop !2952

9:                                                ; preds = %5
  %10 = bitcast i32* %1 to i8*, !dbg !2954
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !2954
  ret void, !dbg !2954
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #3 !dbg !2955 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !2968, metadata !DIExpression()), !dbg !2971
  call void @llvm.dbg.value(metadata i32 %1, metadata !2969, metadata !DIExpression()), !dbg !2971
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !2972
  br i1 %3, label %113, label %4, !dbg !2974

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !2975, !tbaa !2977
  %6 = and i32 %5, 7, !dbg !2975
  %7 = icmp ult i32 %6, %1, !dbg !2979
  br i1 %7, label %8, label %15, !dbg !2980

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !2981, !tbaa !2977
  %10 = and i32 %9, -8, !dbg !2981
  %11 = or i32 %10, %1, !dbg !2981
  store volatile i32 %11, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !2981, !tbaa !2977
  %12 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !2983, !tbaa !2977
  %13 = and i32 %12, 7, !dbg !2983
  %14 = icmp eq i32 %13, %1, !dbg !2985
  br i1 %14, label %15, label %113, !dbg !2986

15:                                               ; preds = %8, %4
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !2987
  %17 = load i32, i32* %16, align 4, !dbg !2987, !tbaa !2989
  %18 = and i32 %17, 2, !dbg !2991
  %19 = icmp eq i32 %18, 0, !dbg !2992
  br i1 %19, label %38, label %20, !dbg !2993

20:                                               ; preds = %15
  %21 = and i32 %17, 4, !dbg !2994
  %22 = icmp eq i32 %21, 0, !dbg !2997
  br i1 %22, label %26, label %23, !dbg !2998

23:                                               ; preds = %20
  %24 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2999, !tbaa !2444
  %25 = or i32 %24, 1792, !dbg !2999
  store volatile i32 %25, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !2999, !tbaa !2444
  br label %26, !dbg !3001

26:                                               ; preds = %23, %20
  %27 = and i32 %17, 8, !dbg !3002
  %28 = icmp eq i32 %27, 0, !dbg !3004
  br i1 %28, label %32, label %29, !dbg !3005

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3006, !tbaa !2444
  %31 = or i32 %30, 14336, !dbg !3006
  store volatile i32 %31, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3006, !tbaa !2444
  br label %32, !dbg !3008

32:                                               ; preds = %29, %26
  %33 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3009, !tbaa !2444
  %34 = and i32 %33, -241, !dbg !3009
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !3009
  %36 = load i32, i32* %35, align 4, !dbg !3009, !tbaa !3010
  %37 = or i32 %34, %36, !dbg !3009
  store volatile i32 %37, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3009, !tbaa !2444
  br label %38, !dbg !3011

38:                                               ; preds = %32, %15
  %39 = and i32 %17, 1, !dbg !3012
  %40 = icmp eq i32 %39, 0, !dbg !3014
  br i1 %40, label %71, label %41, !dbg !3015

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !3016
  %43 = load i32, i32* %42, align 4, !dbg !3016, !tbaa !3019
  switch i32 %43, label %52 [
    i32 1, label %44
    i32 2, label %48
  ], !dbg !3020

44:                                               ; preds = %41
  %45 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3021, !tbaa !2440
  %46 = and i32 %45, 131072, !dbg !3021
  %47 = icmp eq i32 %46, 0, !dbg !3024
  br i1 %47, label %113, label %56, !dbg !3025

48:                                               ; preds = %41
  %49 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3026, !tbaa !2440
  %50 = and i32 %49, 33554432, !dbg !3026
  %51 = icmp eq i32 %50, 0, !dbg !3030
  br i1 %51, label %113, label %56, !dbg !3031

52:                                               ; preds = %41
  %53 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3032, !tbaa !2440
  %54 = and i32 %53, 2, !dbg !3032
  %55 = icmp eq i32 %54, 0, !dbg !3035
  br i1 %55, label %113, label %56, !dbg !3036

56:                                               ; preds = %48, %52, %44
  %57 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3037, !tbaa !2444
  %58 = and i32 %57, -4, !dbg !3037
  %59 = or i32 %58, %43, !dbg !3037
  store volatile i32 %59, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3037, !tbaa !2444
  %60 = call i32 @HAL_GetTick() #26, !dbg !3038
  call void @llvm.dbg.value(metadata i32 %60, metadata !2970, metadata !DIExpression()), !dbg !2971
  br label %61, !dbg !3039

61:                                               ; preds = %67, %56
  %62 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3040, !tbaa !2444
  %63 = and i32 %62, 12, !dbg !3040
  %64 = load i32, i32* %42, align 4, !dbg !3041, !tbaa !3019
  %65 = shl i32 %64, 2, !dbg !3042
  %66 = icmp eq i32 %63, %65, !dbg !3043
  br i1 %66, label %71, label %67, !dbg !3039

67:                                               ; preds = %61
  %68 = call i32 @HAL_GetTick() #26, !dbg !3044
  %69 = sub i32 %68, %60, !dbg !3047
  %70 = icmp ugt i32 %69, 5000, !dbg !3048
  br i1 %70, label %113, label %61, !dbg !3049, !llvm.loop !3050

71:                                               ; preds = %61, %38
  %72 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3052, !tbaa !2977
  %73 = and i32 %72, 7, !dbg !3052
  %74 = icmp ugt i32 %73, %1, !dbg !3054
  br i1 %74, label %75, label %82, !dbg !3055

75:                                               ; preds = %71
  %76 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3056, !tbaa !2977
  %77 = and i32 %76, -8, !dbg !3056
  %78 = or i32 %77, %1, !dbg !3056
  store volatile i32 %78, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3056, !tbaa !2977
  %79 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3058, !tbaa !2977
  %80 = and i32 %79, 7, !dbg !3058
  %81 = icmp eq i32 %80, %1, !dbg !3060
  br i1 %81, label %82, label %113, !dbg !3061

82:                                               ; preds = %75, %71
  %83 = load i32, i32* %16, align 4, !dbg !3062, !tbaa !2989
  %84 = and i32 %83, 4, !dbg !3064
  %85 = icmp eq i32 %84, 0, !dbg !3065
  br i1 %85, label %92, label %86, !dbg !3066

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3067, !tbaa !2444
  %88 = and i32 %87, -1793, !dbg !3067
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !3067
  %90 = load i32, i32* %89, align 4, !dbg !3067, !tbaa !3069
  %91 = or i32 %88, %90, !dbg !3067
  store volatile i32 %91, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3067, !tbaa !2444
  br label %92, !dbg !3070

92:                                               ; preds = %86, %82
  %93 = and i32 %83, 8, !dbg !3071
  %94 = icmp eq i32 %93, 0, !dbg !3073
  br i1 %94, label %102, label %95, !dbg !3074

95:                                               ; preds = %92
  %96 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3075, !tbaa !2444
  %97 = and i32 %96, -14337, !dbg !3075
  %98 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !3075
  %99 = load i32, i32* %98, align 4, !dbg !3075, !tbaa !3077
  %100 = shl i32 %99, 3, !dbg !3075
  %101 = or i32 %100, %97, !dbg !3075
  store volatile i32 %101, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3075, !tbaa !2444
  br label %102, !dbg !3078

102:                                              ; preds = %95, %92
  %103 = call i32 @HAL_RCC_GetSysClockFreq(), !dbg !3079
  %104 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3080, !tbaa !2444
  %105 = lshr i32 %104, 4, !dbg !3081
  %106 = and i32 %105, 15, !dbg !3081
  %107 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %106, !dbg !3082
  %108 = load i8, i8* %107, align 1, !dbg !3082, !tbaa !1608
  %109 = zext i8 %108 to i32, !dbg !3082
  %110 = lshr i32 %103, %109, !dbg !3083
  store i32 %110, i32* @SystemCoreClock, align 4, !dbg !3084, !tbaa !2487
  %111 = load i32, i32* @uwTickPrio, align 4, !dbg !3085, !tbaa !2487
  %112 = call i32 @HAL_InitTick(i32 noundef %111) #26, !dbg !3086
  br label %113, !dbg !3087

113:                                              ; preds = %67, %75, %52, %48, %44, %8, %2, %102
  %114 = phi i32 [ 0, %102 ], [ 1, %2 ], [ 1, %8 ], [ 1, %44 ], [ 1, %48 ], [ 1, %52 ], [ 1, %75 ], [ 3, %67 ], !dbg !2971
  ret i32 %114, !dbg !3088
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #15 !dbg !3089 {
  call void @llvm.dbg.declare(metadata [16 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable, metadata !3091, metadata !DIExpression()), !dbg !3099
  call void @llvm.dbg.declare(metadata [2 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable, metadata !3092, metadata !DIExpression()), !dbg !3100
  call void @llvm.dbg.value(metadata i32 0, metadata !3094, metadata !DIExpression()), !dbg !3101
  call void @llvm.dbg.value(metadata i32 0, metadata !3095, metadata !DIExpression()), !dbg !3101
  call void @llvm.dbg.value(metadata i32 0, metadata !3096, metadata !DIExpression()), !dbg !3101
  call void @llvm.dbg.value(metadata i32 0, metadata !3097, metadata !DIExpression()), !dbg !3101
  call void @llvm.dbg.value(metadata i32 0, metadata !3098, metadata !DIExpression()), !dbg !3101
  %1 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3102, !tbaa !2444
  call void @llvm.dbg.value(metadata i32 %1, metadata !3094, metadata !DIExpression()), !dbg !3101
  %2 = and i32 %1, 12, !dbg !3103
  %3 = icmp eq i32 %2, 8, !dbg !3104
  br i1 %3, label %4, label %23, !dbg !3104

4:                                                ; preds = %0
  %5 = lshr i32 %1, 18, !dbg !3105
  %6 = and i32 %5, 15, !dbg !3105
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPLLMULFactorTable, i32 0, i32 %6, !dbg !3108
  %8 = load i8, i8* %7, align 1, !dbg !3108, !tbaa !1608
  %9 = zext i8 %8 to i32, !dbg !3108
  call void @llvm.dbg.value(metadata i32 %9, metadata !3097, metadata !DIExpression()), !dbg !3101
  %10 = and i32 %1, 65536, !dbg !3109
  %11 = icmp eq i32 %10, 0, !dbg !3111
  br i1 %11, label %21, label %12, !dbg !3112

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3113, !tbaa !2444
  %14 = lshr i32 %13, 17, !dbg !3115
  %15 = and i32 %14, 1, !dbg !3115
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* @__const.HAL_RCC_GetSysClockFreq.aPredivFactorTable, i32 0, i32 %15, !dbg !3116
  %17 = load i8, i8* %16, align 1, !dbg !3116, !tbaa !1608
  %18 = zext i8 %17 to i32, !dbg !3116
  call void @llvm.dbg.value(metadata i32 %18, metadata !3095, metadata !DIExpression()), !dbg !3101
  %19 = mul nuw nsw i32 %9, 8000000, !dbg !3117
  %20 = udiv i32 %19, %18, !dbg !3118
  call void @llvm.dbg.value(metadata i32 %20, metadata !3096, metadata !DIExpression()), !dbg !3101
  br label %23, !dbg !3119

21:                                               ; preds = %4
  %22 = mul nuw nsw i32 %9, 4000000, !dbg !3120
  call void @llvm.dbg.value(metadata i32 %22, metadata !3096, metadata !DIExpression()), !dbg !3101
  br label %23

23:                                               ; preds = %0, %12, %21
  %24 = phi i32 [ %20, %12 ], [ %22, %21 ], [ 8000000, %0 ], !dbg !3122
  call void @llvm.dbg.value(metadata i32 %24, metadata !3098, metadata !DIExpression()), !dbg !3101
  ret i32 %24, !dbg !3123
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !3124 {
  %4 = alloca %struct.DMA_Channel_TypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3128, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i32 %1, metadata !3129, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i32 %2, metadata !3130, metadata !DIExpression()), !dbg !3141
  %6 = bitcast %struct.DMA_Channel_TypeDef* %4 to i8*, !dbg !3142
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #26, !dbg !3142
  call void @llvm.dbg.declare(metadata %struct.DMA_Channel_TypeDef* %4, metadata !3131, metadata !DIExpression()), !dbg !3143
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %6, i8 0, i32 16, i1 false), !dbg !3143
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 1, !dbg !3144
  store i32 2, i32* %7, align 4, !dbg !3145, !tbaa !3146
  %8 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 3, !dbg !3148
  store i32 3, i32* %8, align 4, !dbg !3149, !tbaa !3150
  %9 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 2, !dbg !3151
  store i32 0, i32* %9, align 4, !dbg !3152, !tbaa !3153
  %10 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %4, i32 0, i32 0, !dbg !3154
  store i32 256, i32* %10, align 4, !dbg !3155, !tbaa !3156
  %11 = bitcast i32* %5 to i8*, !dbg !3157
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11), !dbg !3157
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3139, metadata !DIExpression()), !dbg !3157
  %12 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3157, !tbaa !3158
  %13 = or i32 %12, 4, !dbg !3157
  store volatile i32 %13, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3157, !tbaa !3158
  %14 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3157, !tbaa !3158
  %15 = and i32 %14, 4, !dbg !3157
  store volatile i32 %15, i32* %5, align 4, !dbg !3157, !tbaa !2487
  %16 = load volatile i32, i32* %5, align 4, !dbg !3157, !tbaa !2487
  %17 = bitcast i32* %5 to i8*, !dbg !3159
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17), !dbg !3159
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef nonnull inttoptr (i32 1073809408 to %struct.USART_TypeDef*), %struct.DMA_Channel_TypeDef* noundef nonnull %4) #26, !dbg !3160
  %18 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3161, !tbaa !2444
  %19 = and i32 %18, -117440513, !dbg !3161
  %20 = or i32 %19, %1, !dbg !3161
  store volatile i32 %20, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3161, !tbaa !2444
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #26, !dbg !3162
  ret void, !dbg !3162
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !3163 {
  store volatile i32 1, i32* inttoptr (i32 1111621708 to i32*), align 4, !dbg !3164, !tbaa !2487
  ret void, !dbg !3165
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !3166 {
  store volatile i32 0, i32* inttoptr (i32 1111621708 to i32*), align 4, !dbg !3167, !tbaa !2487
  ret void, !dbg !3168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #16 !dbg !3169 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !3170, !tbaa !2487
  ret i32 %1, !dbg !3171
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !3172 {
  %1 = call i32 @HAL_RCC_GetHCLKFreq(), !dbg !3173
  %2 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3174, !tbaa !2444
  %3 = lshr i32 %2, 8, !dbg !3175
  %4 = and i32 %3, 7, !dbg !3175
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !3176
  %6 = load i8, i8* %5, align 1, !dbg !3176, !tbaa !1608
  %7 = zext i8 %6 to i32, !dbg !3176
  %8 = lshr i32 %1, %7, !dbg !3177
  ret i32 %8, !dbg !3178
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !3179 {
  %1 = call i32 @HAL_RCC_GetHCLKFreq(), !dbg !3180
  %2 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3181, !tbaa !2444
  %3 = lshr i32 %2, 11, !dbg !3182
  %4 = and i32 %3, 7, !dbg !3182
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !3183
  %6 = load i8, i8* %5, align 1, !dbg !3183, !tbaa !1608
  %7 = zext i8 %6 to i32, !dbg !3183
  %8 = lshr i32 %1, %7, !dbg !3184
  ret i32 %8, !dbg !3185
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #15 !dbg !3186 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !3190, metadata !DIExpression()), !dbg !3191
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !3192
  store i32 15, i32* %2, align 4, !dbg !3193, !tbaa !2605
  %3 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3194, !tbaa !2440
  %4 = and i32 %3, 262144, !dbg !3196
  %5 = icmp eq i32 %4, 0, !dbg !3197
  br i1 %5, label %8, label %6, !dbg !3198

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !3199
  store i32 327680, i32* %7, align 4, !dbg !3201, !tbaa !2628
  br label %15, !dbg !3202

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3203, !tbaa !2440
  %10 = and i32 %9, 65536, !dbg !3205
  %11 = icmp eq i32 %10, 0, !dbg !3206
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !3207
  br i1 %11, label %14, label %13, !dbg !3208

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !3209, !tbaa !2628
  br label %15, !dbg !3211

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !3212, !tbaa !2628
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3214, !tbaa !2444
  %17 = and i32 %16, 131072, !dbg !3214
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !3215
  store i32 %17, i32* %18, align 4, !dbg !3216, !tbaa !2889
  %19 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3217, !tbaa !2440
  %20 = and i32 %19, 1, !dbg !3219
  %21 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !3220
  store i32 %20, i32* %21, align 4, !dbg !3220, !tbaa !2697
  %22 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3221, !tbaa !2440
  %23 = lshr i32 %22, 3, !dbg !3222
  %24 = and i32 %23, 31, !dbg !3222
  %25 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !3223
  store i32 %24, i32* %25, align 4, !dbg !3224, !tbaa !2734
  %26 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3225, !tbaa !2812
  %27 = and i32 %26, 4, !dbg !3227
  %28 = icmp eq i32 %27, 0, !dbg !3228
  br i1 %28, label %31, label %29, !dbg !3229

29:                                               ; preds = %15
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !3230
  store i32 5, i32* %30, align 4, !dbg !3232, !tbaa !2808
  br label %38, !dbg !3233

31:                                               ; preds = %15
  %32 = load volatile i32, i32* inttoptr (i32 1073877024 to i32*), align 32, !dbg !3234, !tbaa !2812
  %33 = and i32 %32, 1, !dbg !3236
  %34 = icmp eq i32 %33, 0, !dbg !3237
  %35 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !3238
  br i1 %34, label %37, label %36, !dbg !3239

36:                                               ; preds = %31
  store i32 1, i32* %35, align 4, !dbg !3240, !tbaa !2808
  br label %38, !dbg !3242

37:                                               ; preds = %31
  store i32 0, i32* %35, align 4, !dbg !3243, !tbaa !2808
  br label %38

38:                                               ; preds = %36, %37, %29
  %39 = load volatile i32, i32* inttoptr (i32 1073877028 to i32*), align 4, !dbg !3245, !tbaa !2562
  %40 = and i32 %39, 1, !dbg !3247
  %41 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !3248
  store i32 %40, i32* %41, align 4, !dbg !3248, !tbaa !2743
  %42 = load volatile i32, i32* inttoptr (i32 1073876992 to i32*), align 4096, !dbg !3249, !tbaa !2440
  %43 = and i32 %42, 16777216, !dbg !3251
  %44 = icmp eq i32 %43, 0, !dbg !3252
  %45 = select i1 %44, i32 1, i32 2, !dbg !3253
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 0, !dbg !3254
  store i32 %45, i32* %46, align 4, !dbg !3254, !tbaa !2857
  %47 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3255, !tbaa !2444
  %48 = and i32 %47, 65536, !dbg !3256
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 1, !dbg !3257
  store i32 %48, i32* %49, align 4, !dbg !3258, !tbaa !2884
  %50 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3259, !tbaa !2444
  %51 = and i32 %50, 3932160, !dbg !3260
  %52 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, i32 2, !dbg !3261
  store i32 %51, i32* %52, align 4, !dbg !3262, !tbaa !2892
  ret void, !dbg !3263
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !3264 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !3268, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i32* %1, metadata !3269, metadata !DIExpression()), !dbg !3270
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !3271
  store i32 15, i32* %3, align 4, !dbg !3272, !tbaa !2989
  %4 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3273, !tbaa !2444
  %5 = and i32 %4, 3, !dbg !3274
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !3275
  store i32 %5, i32* %6, align 4, !dbg !3276, !tbaa !3019
  %7 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3277, !tbaa !2444
  %8 = and i32 %7, 240, !dbg !3278
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !3279
  store i32 %8, i32* %9, align 4, !dbg !3280, !tbaa !3010
  %10 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3281, !tbaa !2444
  %11 = and i32 %10, 1792, !dbg !3282
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !3283
  store i32 %11, i32* %12, align 4, !dbg !3284, !tbaa !3069
  %13 = load volatile i32, i32* inttoptr (i32 1073876996 to i32*), align 4, !dbg !3285, !tbaa !2444
  %14 = lshr i32 %13, 3, !dbg !3286
  %15 = and i32 %14, 1792, !dbg !3286
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !3287
  store i32 %15, i32* %16, align 4, !dbg !3288, !tbaa !3077
  %17 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3289, !tbaa !2977
  %18 = and i32 %17, 7, !dbg !3290
  store i32 %18, i32* %1, align 4, !dbg !3291, !tbaa !2487
  ret void, !dbg !3292
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #3 !dbg !3293 {
  %1 = load volatile i32, i32* inttoptr (i32 1073877000 to i32*), align 8, !dbg !3294, !tbaa !2449
  %2 = and i32 %1, 128, !dbg !3294
  %3 = icmp eq i32 %2, 0, !dbg !3294
  br i1 %3, label %5, label %4, !dbg !3296

4:                                                ; preds = %0
  call void @HAL_RCC_CSSCallback(), !dbg !3297
  store volatile i8 -128, i8* inttoptr (i32 1073877002 to i8*), align 2, !dbg !3299, !tbaa !1608
  br label %5, !dbg !3300

5:                                                ; preds = %4, %0
  ret void, !dbg !3301
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #3 !dbg !3302 {
  ret void, !dbg !3303
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_Init() local_unnamed_addr #3 !dbg !3304 {
  %1 = load volatile i32, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3305, !tbaa !2977
  %2 = or i32 %1, 16, !dbg !3305
  store volatile i32 %2, i32* inttoptr (i32 1073881088 to i32*), align 8192, !dbg !3305, !tbaa !2977
  call void @HAL_NVIC_SetPriorityGrouping(i32 noundef 3) #26, !dbg !3306
  %3 = call i32 @HAL_InitTick(i32 noundef 0), !dbg !3307
  call void @HAL_MspInit(), !dbg !3308
  ret i32 0, !dbg !3309
}

; Function Attrs: noinline nounwind
define weak dso_local i32 @HAL_InitTick(i32 noundef %0) local_unnamed_addr #3 !dbg !3310 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3314, metadata !DIExpression()), !dbg !3315
  %2 = load i32, i32* @SystemCoreClock, align 4, !dbg !3316, !tbaa !2487
  %3 = load i32, i32* @uwTickFreq, align 4, !dbg !3318, !tbaa !1608
  %4 = udiv i32 1000, %3, !dbg !3319
  %5 = udiv i32 %2, %4, !dbg !3320
  %6 = call i32 @HAL_SYSTICK_Config(i32 noundef %5) #26, !dbg !3321
  %7 = icmp eq i32 %6, 0, !dbg !3322
  %8 = icmp ult i32 %0, 16
  %9 = and i1 %8, %7, !dbg !3323
  br i1 %9, label %10, label %11, !dbg !3323

10:                                               ; preds = %1
  call void @HAL_NVIC_SetPriority(i32 noundef -1, i32 noundef %0, i32 noundef 0) #26, !dbg !3324
  store i32 %0, i32* @uwTickPrio, align 4, !dbg !3327, !tbaa !2487
  br label %11, !dbg !3328

11:                                               ; preds = %1, %10
  %12 = phi i32 [ 0, %10 ], [ 1, %1 ], !dbg !3315
  ret i32 %12, !dbg !3329
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_MspInit() local_unnamed_addr #3 !dbg !3330 {
  ret void, !dbg !3331
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_DeInit() local_unnamed_addr #3 !dbg !3332 {
  store volatile i32 -1, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !3333, !tbaa !3334
  store volatile i32 0, i32* inttoptr (i32 1073877008 to i32*), align 16, !dbg !3335, !tbaa !3336
  store volatile i32 -1, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !3337, !tbaa !3334
  store volatile i32 0, i32* inttoptr (i32 1073877004 to i32*), align 4, !dbg !3338, !tbaa !3334
  call void @HAL_MspDeInit(), !dbg !3339
  ret i32 0, !dbg !3340
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_MspDeInit() local_unnamed_addr #3 !dbg !3341 {
  ret void, !dbg !3342
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_IncTick() local_unnamed_addr #3 !dbg !3343 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !3344, !tbaa !1608
  %2 = load volatile i32, i32* @uwTick, align 4, !dbg !3345, !tbaa !2487
  %3 = add i32 %2, %1, !dbg !3345
  store volatile i32 %3, i32* @uwTick, align 4, !dbg !3345, !tbaa !2487
  ret void, !dbg !3346
}

; Function Attrs: noinline nounwind
define weak dso_local i32 @HAL_GetTick() local_unnamed_addr #3 !dbg !3347 {
  %1 = load volatile i32, i32* @uwTick, align 4, !dbg !3348, !tbaa !2487
  ret i32 %1, !dbg !3349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetTickPrio() local_unnamed_addr #16 !dbg !3350 {
  %1 = load i32, i32* @uwTickPrio, align 4, !dbg !3351, !tbaa !2487
  ret i32 %1, !dbg !3352
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_SetTickFreq(i32 noundef %0) local_unnamed_addr #3 !dbg !3353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3357, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.value(metadata i32 0, metadata !3358, metadata !DIExpression()), !dbg !3359
  %2 = load i32, i32* @uwTickFreq, align 4, !dbg !3360, !tbaa !1608
  %3 = icmp eq i32 %2, %0, !dbg !3362
  br i1 %3, label %9, label %4, !dbg !3363

4:                                                ; preds = %1
  %5 = load i32, i32* @uwTickPrio, align 4, !dbg !3364, !tbaa !2487
  %6 = call i32 @HAL_InitTick(i32 noundef %5), !dbg !3366
  call void @llvm.dbg.value(metadata i32 %6, metadata !3358, metadata !DIExpression()), !dbg !3359
  %7 = icmp eq i32 %6, 0, !dbg !3367
  br i1 %7, label %8, label %9, !dbg !3369

8:                                                ; preds = %4
  store i32 %0, i32* @uwTickFreq, align 4, !dbg !3370, !tbaa !1608
  br label %9, !dbg !3372

9:                                                ; preds = %4, %8, %1
  %10 = phi i32 [ 0, %8 ], [ %6, %4 ], [ 0, %1 ], !dbg !3359
  call void @llvm.dbg.value(metadata i32 %10, metadata !3358, metadata !DIExpression()), !dbg !3359
  ret i32 %10, !dbg !3373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetTickFreq() local_unnamed_addr #16 !dbg !3374 {
  %1 = load i32, i32* @uwTickFreq, align 4, !dbg !3377, !tbaa !1608
  ret i32 %1, !dbg !3378
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_Delay(i32 noundef %0) local_unnamed_addr #3 !dbg !3379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3381, metadata !DIExpression()), !dbg !3384
  %2 = call i32 @HAL_GetTick(), !dbg !3385
  call void @llvm.dbg.value(metadata i32 %2, metadata !3382, metadata !DIExpression()), !dbg !3384
  call void @llvm.dbg.value(metadata i32 %0, metadata !3383, metadata !DIExpression()), !dbg !3384
  %3 = icmp eq i32 %0, -1, !dbg !3386
  %4 = load i32, i32* @uwTickFreq, align 4, !dbg !3388
  %5 = add i32 %4, %0, !dbg !3388
  %6 = select i1 %3, i32 -1, i32 %5, !dbg !3388
  call void @llvm.dbg.value(metadata i32 %6, metadata !3383, metadata !DIExpression()), !dbg !3384
  br label %7, !dbg !3389

7:                                                ; preds = %7, %1
  %8 = call i32 @HAL_GetTick(), !dbg !3390
  %9 = sub i32 %8, %2, !dbg !3391
  %10 = icmp ult i32 %9, %6, !dbg !3392
  br i1 %10, label %7, label %11, !dbg !3389, !llvm.loop !3393

11:                                               ; preds = %7
  ret void, !dbg !3395
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_SuspendTick() local_unnamed_addr #3 !dbg !3396 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3397, !tbaa !3156
  %2 = and i32 %1, -3, !dbg !3397
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3397, !tbaa !3156
  ret void, !dbg !3398
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_ResumeTick() local_unnamed_addr #3 !dbg !3399 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3400, !tbaa !3156
  %2 = or i32 %1, 2, !dbg !3400
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3400, !tbaa !3156
  ret void, !dbg !3401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local i32 @HAL_GetHalVersion() local_unnamed_addr #10 !dbg !3402 {
  ret i32 16843776, !dbg !3403
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GetREVID() local_unnamed_addr #15 !dbg !3404 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !3405, !tbaa !2789
  %2 = lshr i32 %1, 16, !dbg !3406
  ret i32 %2, !dbg !3407
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GetDEVID() local_unnamed_addr #15 !dbg !3408 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600576 to i32*), align 8192, !dbg !3409, !tbaa !2789
  %2 = and i32 %1, 4095, !dbg !3410
  ret i32 %2, !dbg !3411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw0() local_unnamed_addr #16 !dbg !3412 {
  %1 = load i32, i32* inttoptr (i32 536868840 to i32*), align 8, !dbg !3413, !tbaa !2487
  ret i32 %1, !dbg !3414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw1() local_unnamed_addr #16 !dbg !3415 {
  %1 = load i32, i32* inttoptr (i32 536868844 to i32*), align 4, !dbg !3416, !tbaa !2487
  ret i32 %1, !dbg !3417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local i32 @HAL_GetUIDw2() local_unnamed_addr #16 !dbg !3418 {
  %1 = load i32, i32* inttoptr (i32 536868848 to i32*), align 16, !dbg !3419, !tbaa !2487
  ret i32 %1, !dbg !3420
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGSleepMode() local_unnamed_addr #14 !dbg !3421 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3422, !tbaa !3423
  %2 = or i32 %1, 1, !dbg !3422
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3422, !tbaa !3423
  ret void, !dbg !3424
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGSleepMode() local_unnamed_addr #14 !dbg !3425 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3426, !tbaa !3423
  %2 = and i32 %1, -2, !dbg !3426
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3426, !tbaa !3423
  ret void, !dbg !3427
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGStopMode() local_unnamed_addr #14 !dbg !3428 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3429, !tbaa !3423
  %2 = or i32 %1, 2, !dbg !3429
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3429, !tbaa !3423
  ret void, !dbg !3430
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGStopMode() local_unnamed_addr #14 !dbg !3431 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3432, !tbaa !3423
  %2 = and i32 %1, -3, !dbg !3432
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3432, !tbaa !3423
  ret void, !dbg !3433
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_EnableDBGStandbyMode() local_unnamed_addr #14 !dbg !3434 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3435, !tbaa !3423
  %2 = or i32 %1, 4, !dbg !3435
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3435, !tbaa !3423
  ret void, !dbg !3436
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_DBGMCU_DisableDBGStandbyMode() local_unnamed_addr #14 !dbg !3437 {
  %1 = load volatile i32, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3438, !tbaa !3423
  %2 = and i32 %1, -5, !dbg !3438
  store volatile i32 %2, i32* inttoptr (i32 -536600572 to i32*), align 4, !dbg !3438, !tbaa !3423
  ret void, !dbg !3439
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_SetPriorityGrouping(i32 noundef %0) local_unnamed_addr #14 !dbg !3440 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3442, metadata !DIExpression()), !dbg !3443
  call fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0), !dbg !3444
  ret void, !dbg !3445
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPriorityGrouping(i32 noundef %0) unnamed_addr #14 !dbg !3446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3448, metadata !DIExpression()), !dbg !3451
  call void @llvm.dbg.value(metadata i32 %0, metadata !3450, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !3451
  %2 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !3452, !tbaa !3453
  call void @llvm.dbg.value(metadata i32 %2, metadata !3449, metadata !DIExpression()), !dbg !3451
  %3 = and i32 %2, 63743, !dbg !3454
  call void @llvm.dbg.value(metadata i32 %3, metadata !3449, metadata !DIExpression()), !dbg !3451
  %4 = shl i32 %0, 8, !dbg !3455
  %5 = and i32 %4, 1792, !dbg !3455
  %6 = or i32 %5, %3, !dbg !3456
  %7 = or i32 %6, 100270080, !dbg !3456
  call void @llvm.dbg.value(metadata i32 %7, metadata !3449, metadata !DIExpression()), !dbg !3451
  store volatile i32 %7, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !3457, !tbaa !3453
  ret void, !dbg !3458
}

; Function Attrs: nofree noinline nounwind
define dso_local void @HAL_NVIC_SetPriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !3459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3464, metadata !DIExpression()), !dbg !3468
  call void @llvm.dbg.value(metadata i32 %1, metadata !3465, metadata !DIExpression()), !dbg !3468
  call void @llvm.dbg.value(metadata i32 %2, metadata !3466, metadata !DIExpression()), !dbg !3468
  call void @llvm.dbg.value(metadata i32 0, metadata !3467, metadata !DIExpression()), !dbg !3468
  %4 = call fastcc i32 @__NVIC_GetPriorityGrouping(), !dbg !3469, !range !3470
  call void @llvm.dbg.value(metadata i32 %4, metadata !3467, metadata !DIExpression()), !dbg !3468
  %5 = call fastcc i32 @NVIC_EncodePriority(i32 noundef %4, i32 noundef %1, i32 noundef %2), !dbg !3471
  call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %5), !dbg !3472
  ret void, !dbg !3473
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPriorityGrouping() unnamed_addr #15 !dbg !3474 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !3475, !tbaa !3453
  %2 = lshr i32 %1, 8, !dbg !3476
  %3 = and i32 %2, 7, !dbg !3476
  ret i32 %3, !dbg !3477
}

; Function Attrs: mustprogress nofree noinline nosync nounwind readnone willreturn
define internal fastcc i32 @NVIC_EncodePriority(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !3478 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3482, metadata !DIExpression()), !dbg !3488
  call void @llvm.dbg.value(metadata i32 %1, metadata !3483, metadata !DIExpression()), !dbg !3488
  call void @llvm.dbg.value(metadata i32 %2, metadata !3484, metadata !DIExpression()), !dbg !3488
  %4 = and i32 %0, 7, !dbg !3489
  call void @llvm.dbg.value(metadata i32 %4, metadata !3485, metadata !DIExpression()), !dbg !3488
  %5 = xor i32 %4, 7, !dbg !3490
  %6 = icmp ult i32 %5, 4, !dbg !3491
  %7 = select i1 %6, i32 %5, i32 4, !dbg !3491
  call void @llvm.dbg.value(metadata i32 %7, metadata !3486, metadata !DIExpression()), !dbg !3488
  %8 = call i32 @llvm.usub.sat.i32(i32 %4, i32 3), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %8, metadata !3487, metadata !DIExpression()), !dbg !3488
  %9 = shl nsw i32 -1, %7, !dbg !3493
  %10 = xor i32 %9, -1, !dbg !3493
  %11 = and i32 %10, %1, !dbg !3494
  %12 = shl i32 %11, %8, !dbg !3495
  %13 = shl nsw i32 -1, %8, !dbg !3496
  %14 = xor i32 %13, -1, !dbg !3496
  %15 = and i32 %14, %2, !dbg !3497
  %16 = or i32 %12, %15, !dbg !3498
  ret i32 %16, !dbg !3499
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !3500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3504, metadata !DIExpression()), !dbg !3506
  call void @llvm.dbg.value(metadata i32 %1, metadata !3505, metadata !DIExpression()), !dbg !3506
  %3 = trunc i32 %1 to i8, !dbg !3507
  %4 = shl i8 %3, 4, !dbg !3507
  %5 = and i32 %0, 15, !dbg !3509
  %6 = add nsw i32 %5, -4, !dbg !3509
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !3509
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !3509
  %9 = icmp slt i32 %0, 0, !dbg !3509
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !3509
  store volatile i8 %4, i8* %10, align 1, !dbg !3507, !tbaa !1608
  ret void, !dbg !3510
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_EnableIRQ(i32 noundef %0) local_unnamed_addr #14 !dbg !3511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3515, metadata !DIExpression()), !dbg !3516
  call fastcc void @__NVIC_EnableIRQ(i32 noundef %0), !dbg !3517
  ret void, !dbg !3518
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #14 !dbg !3519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3521, metadata !DIExpression()), !dbg !3522
  %2 = icmp sgt i32 %0, -1, !dbg !3523
  br i1 %2, label %3, label %8, !dbg !3525

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !3526
  %5 = shl i32 1, %4, !dbg !3528
  %6 = lshr i32 %0, 5, !dbg !3529
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !3530
  store volatile i32 %5, i32* %7, align 4, !dbg !3531, !tbaa !2487
  br label %8, !dbg !3532

8:                                                ; preds = %3, %1
  ret void, !dbg !3533
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_NVIC_DisableIRQ(i32 noundef %0) local_unnamed_addr #3 !dbg !3534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3536, metadata !DIExpression()), !dbg !3537
  call fastcc void @__NVIC_DisableIRQ(i32 noundef %0), !dbg !3538
  ret void, !dbg !3539
}

; Function Attrs: noinline nounwind
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #3 !dbg !3540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3542, metadata !DIExpression()), !dbg !3543
  %2 = icmp sgt i32 %0, -1, !dbg !3544
  br i1 %2, label %3, label %8, !dbg !3546

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !3547
  %5 = shl i32 1, %4, !dbg !3549
  %6 = lshr i32 %0, 5, !dbg !3550
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !3551
  store volatile i32 %5, i32* %7, align 4, !dbg !3552, !tbaa !2487
  call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !3553, !srcloc !3557
  call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !3558, !srcloc !3561
  br label %8, !dbg !3562

8:                                                ; preds = %3, %1
  ret void, !dbg !3563
}

; Function Attrs: noinline noreturn nounwind
define dso_local void @HAL_NVIC_SystemReset() local_unnamed_addr #19 !dbg !3564 {
  call fastcc void @__NVIC_SystemReset() #29, !dbg !3565
  unreachable, !dbg !3565
}

; Function Attrs: noinline noreturn nounwind
define internal fastcc void @__NVIC_SystemReset() unnamed_addr #19 !dbg !3566 {
  call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !3567, !srcloc !3557
  %1 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !3569, !tbaa !3453
  %2 = and i32 %1, 1792, !dbg !3570
  %3 = or i32 %2, 100270084, !dbg !3571
  store volatile i32 %3, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !3572, !tbaa !3453
  call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !3573, !srcloc !3557
  br label %4, !dbg !3575

4:                                                ; preds = %4, %0
  call void asm sideeffect "nop", ""() #26, !dbg !3576, !srcloc !3580
  br label %4, !dbg !3581, !llvm.loop !3582
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_SYSTICK_Config(i32 noundef %0) local_unnamed_addr #14 !dbg !3585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3589, metadata !DIExpression()), !dbg !3590
  %2 = call fastcc i32 @SysTick_Config(i32 noundef %0), !dbg !3591
  ret i32 %2, !dbg !3592
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc i32 @SysTick_Config(i32 noundef %0) unnamed_addr #14 !dbg !3593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3595, metadata !DIExpression()), !dbg !3596
  %2 = add i32 %0, -1, !dbg !3597
  %3 = icmp ugt i32 %2, 16777215, !dbg !3599
  br i1 %3, label %5, label %4, !dbg !3600

4:                                                ; preds = %1
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !3601, !tbaa !3146
  call fastcc void @__NVIC_SetPriority(i32 noundef -1, i32 noundef 15), !dbg !3602
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !3603, !tbaa !3153
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3604, !tbaa !3156
  br label %5, !dbg !3605

5:                                                ; preds = %1, %4
  %6 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !3596
  ret i32 %6, !dbg !3606
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetPriorityGrouping() local_unnamed_addr #15 !dbg !3607 {
  %1 = call fastcc i32 @__NVIC_GetPriorityGrouping(), !dbg !3608
  ret i32 %1, !dbg !3609
}

; Function Attrs: mustprogress nofree noinline nounwind willreturn
define dso_local void @HAL_NVIC_GetPriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) local_unnamed_addr #20 !dbg !3610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3614, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.value(metadata i32 %1, metadata !3615, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.value(metadata i32* %2, metadata !3616, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.value(metadata i32* %3, metadata !3617, metadata !DIExpression()), !dbg !3618
  %5 = call fastcc i32 @__NVIC_GetPriority(i32 noundef %0), !dbg !3619, !range !3620
  call fastcc void @NVIC_DecodePriority(i32 noundef %5, i32 noundef %1, i32* noundef %2, i32* noundef %3), !dbg !3621
  ret void, !dbg !3622
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPriority(i32 noundef %0) unnamed_addr #15 !dbg !3623 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3627, metadata !DIExpression()), !dbg !3628
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !3629
  %3 = and i32 %0, 15, !dbg !3629
  %4 = add nsw i32 %3, -4, !dbg !3629
  %5 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %4, !dbg !3629
  %6 = icmp slt i32 %0, 0, !dbg !3629
  %7 = select i1 %6, i8* %5, i8* %2, !dbg !3629
  %8 = load volatile i8, i8* %7, align 1, !dbg !3630, !tbaa !1608
  %9 = lshr i8 %8, 4, !dbg !3630
  %10 = zext i8 %9 to i32, !dbg !3630
  ret i32 %10, !dbg !3632
}

; Function Attrs: mustprogress nofree noinline nosync nounwind willreturn writeonly
define internal fastcc void @NVIC_DecodePriority(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2, i32* nocapture noundef writeonly %3) unnamed_addr #21 !dbg !3633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3638, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata i32 %1, metadata !3639, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata i32* %2, metadata !3640, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.value(metadata i32* %3, metadata !3641, metadata !DIExpression()), !dbg !3645
  %5 = and i32 %1, 7, !dbg !3646
  call void @llvm.dbg.value(metadata i32 %5, metadata !3642, metadata !DIExpression()), !dbg !3645
  %6 = xor i32 %5, 7, !dbg !3647
  %7 = icmp ult i32 %6, 4, !dbg !3648
  %8 = select i1 %7, i32 %6, i32 4, !dbg !3648
  call void @llvm.dbg.value(metadata i32 %8, metadata !3643, metadata !DIExpression()), !dbg !3645
  %9 = call i32 @llvm.usub.sat.i32(i32 %5, i32 3), !dbg !3649
  call void @llvm.dbg.value(metadata i32 %9, metadata !3644, metadata !DIExpression()), !dbg !3645
  %10 = lshr i32 %0, %9, !dbg !3650
  %11 = shl nsw i32 -1, %8, !dbg !3651
  %12 = xor i32 %11, -1, !dbg !3651
  %13 = and i32 %10, %12, !dbg !3652
  store i32 %13, i32* %2, align 4, !dbg !3653, !tbaa !2487
  %14 = shl nsw i32 -1, %9, !dbg !3654
  %15 = xor i32 %14, -1, !dbg !3654
  %16 = and i32 %15, %0, !dbg !3655
  store i32 %16, i32* %3, align 4, !dbg !3656, !tbaa !2487
  ret void, !dbg !3657
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_SetPendingIRQ(i32 noundef %0) local_unnamed_addr #14 !dbg !3658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3660, metadata !DIExpression()), !dbg !3661
  call fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0), !dbg !3662
  ret void, !dbg !3663
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #14 !dbg !3664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3666, metadata !DIExpression()), !dbg !3667
  %2 = icmp sgt i32 %0, -1, !dbg !3668
  br i1 %2, label %3, label %8, !dbg !3670

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !3671
  %5 = shl i32 1, %4, !dbg !3673
  %6 = lshr i32 %0, 5, !dbg !3674
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %6, !dbg !3675
  store volatile i32 %5, i32* %7, align 4, !dbg !3676, !tbaa !2487
  br label %8, !dbg !3677

8:                                                ; preds = %3, %1
  ret void, !dbg !3678
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetPendingIRQ(i32 noundef %0) local_unnamed_addr #15 !dbg !3679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3681, metadata !DIExpression()), !dbg !3682
  %2 = call fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0), !dbg !3683
  ret i32 %2, !dbg !3684
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #15 !dbg !3685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3687, metadata !DIExpression()), !dbg !3688
  %2 = icmp sgt i32 %0, -1, !dbg !3689
  br i1 %2, label %3, label %10, !dbg !3691

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3692
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !3694
  %6 = load volatile i32, i32* %5, align 4, !dbg !3694, !tbaa !2487
  %7 = and i32 %0, 31, !dbg !3695
  %8 = lshr i32 %6, %7, !dbg !3696
  %9 = and i32 %8, 1, !dbg !3696
  br label %10, !dbg !3697

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !3698
  ret i32 %11, !dbg !3699
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_NVIC_ClearPendingIRQ(i32 noundef %0) local_unnamed_addr #14 !dbg !3700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3702, metadata !DIExpression()), !dbg !3703
  call fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0), !dbg !3704
  ret void, !dbg !3705
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @__NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #14 !dbg !3706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3708, metadata !DIExpression()), !dbg !3709
  %2 = icmp sgt i32 %0, -1, !dbg !3710
  br i1 %2, label %3, label %8, !dbg !3712

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !3713
  %5 = shl i32 1, %4, !dbg !3715
  %6 = lshr i32 %0, 5, !dbg !3716
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %6, !dbg !3717
  store volatile i32 %5, i32* %7, align 4, !dbg !3718, !tbaa !2487
  br label %8, !dbg !3719

8:                                                ; preds = %3, %1
  ret void, !dbg !3720
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_NVIC_GetActive(i32 noundef %0) local_unnamed_addr #15 !dbg !3721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3723, metadata !DIExpression()), !dbg !3724
  %2 = call fastcc i32 @__NVIC_GetActive(i32 noundef %0), !dbg !3725
  ret i32 %2, !dbg !3726
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define internal fastcc i32 @__NVIC_GetActive(i32 noundef %0) unnamed_addr #15 !dbg !3727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3729, metadata !DIExpression()), !dbg !3730
  %2 = icmp sgt i32 %0, -1, !dbg !3731
  br i1 %2, label %3, label %10, !dbg !3733

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3734
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812800 to [8 x i32]*), i32 0, i32 %4, !dbg !3736
  %6 = load volatile i32, i32* %5, align 4, !dbg !3736, !tbaa !2487
  %7 = and i32 %0, 31, !dbg !3737
  %8 = lshr i32 %6, %7, !dbg !3738
  %9 = and i32 %8, 1, !dbg !3738
  br label %10, !dbg !3739

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ 0, %1 ], !dbg !3740
  ret i32 %11, !dbg !3741
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_SYSTICK_CLKSourceConfig(i32 noundef %0) local_unnamed_addr #14 !dbg !3742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3744, metadata !DIExpression()), !dbg !3745
  %2 = icmp eq i32 %0, 4, !dbg !3746
  %3 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3748, !tbaa !3156
  %4 = and i32 %3, -5, !dbg !3749
  %5 = select i1 %2, i32 4, i32 0, !dbg !3749
  %6 = or i32 %4, %5, !dbg !3749
  store volatile i32 %6, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !3748, !tbaa !3156
  ret void, !dbg !3750
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_SYSTICK_IRQHandler() local_unnamed_addr #3 !dbg !3751 {
  call void @HAL_SYSTICK_Callback(), !dbg !3752
  ret void, !dbg !3753
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_SYSTICK_Callback() local_unnamed_addr #3 !dbg !3754 {
  ret void, !dbg !3755
}

; Function Attrs: nofree noinline nounwind
define dso_local void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %0, %struct.DMA_Channel_TypeDef* nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !3756 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !3768, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata %struct.DMA_Channel_TypeDef* %1, metadata !3769, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i32 0, metadata !3770, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i32 0, metadata !3774, metadata !DIExpression()), !dbg !3784
  %4 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !3770, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i32 0, metadata !3774, metadata !DIExpression()), !dbg !3784
  %5 = load i32, i32* %4, align 4, !dbg !3785, !tbaa !3156
  %6 = icmp eq i32 %5, 0, !dbg !3786
  br i1 %6, label %135, label %7, !dbg !3787

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 1
  %9 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 2
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  %12 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %13 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %14 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %15 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %1, i32 0, i32 3
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1
  %18 = ptrtoint %struct.USART_TypeDef* %0 to i32
  %19 = icmp eq %struct.USART_TypeDef* %0, inttoptr (i32 1073812480 to %struct.USART_TypeDef*)
  %20 = select i1 %19, i32 3, i32 4
  %21 = bitcast i32* %3 to i8*
  %22 = bitcast i32* %3 to i8*
  br label %23, !dbg !3787

23:                                               ; preds = %7, %129
  %24 = phi i32 [ %5, %7 ], [ %132, %129 ]
  %25 = phi i32 [ 0, %7 ], [ %131, %129 ]
  %26 = phi i32 [ 0, %7 ], [ %130, %129 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !3770, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.value(metadata i32 %26, metadata !3774, metadata !DIExpression()), !dbg !3784
  %27 = shl i32 1, %25, !dbg !3788
  call void @llvm.dbg.value(metadata i32 %27, metadata !3771, metadata !DIExpression()), !dbg !3784
  %28 = and i32 %24, %27, !dbg !3789
  call void @llvm.dbg.value(metadata i32 %28, metadata !3772, metadata !DIExpression()), !dbg !3784
  %29 = icmp eq i32 %28, %27, !dbg !3790
  br i1 %29, label %30, label %129, !dbg !3791

30:                                               ; preds = %23
  %31 = load i32, i32* %8, align 4, !dbg !3792, !tbaa !3146
  switch i32 %31, label %48 [
    i32 1, label %32
    i32 17, label %34
    i32 2, label %37
    i32 18, label %40
    i32 0, label %43
    i32 269549568, label %43
    i32 270598144, label %43
    i32 271646720, label %43
    i32 269615104, label %43
    i32 270663680, label %43
    i32 271712256, label %43
    i32 3, label %47
  ], !dbg !3793

32:                                               ; preds = %30
  %33 = load i32, i32* %15, align 4, !dbg !3794, !tbaa !3150
  call void @llvm.dbg.value(metadata i32 %33, metadata !3774, metadata !DIExpression()), !dbg !3784
  br label %48, !dbg !3796

34:                                               ; preds = %30
  %35 = load i32, i32* %14, align 4, !dbg !3797, !tbaa !3150
  %36 = add i32 %35, 4, !dbg !3798
  call void @llvm.dbg.value(metadata i32 %36, metadata !3774, metadata !DIExpression()), !dbg !3784
  br label %48, !dbg !3799

37:                                               ; preds = %30
  %38 = load i32, i32* %13, align 4, !dbg !3800, !tbaa !3150
  %39 = add i32 %38, 8, !dbg !3801
  call void @llvm.dbg.value(metadata i32 %39, metadata !3774, metadata !DIExpression()), !dbg !3784
  br label %48, !dbg !3802

40:                                               ; preds = %30
  %41 = load i32, i32* %12, align 4, !dbg !3803, !tbaa !3150
  %42 = add i32 %41, 12, !dbg !3804
  call void @llvm.dbg.value(metadata i32 %42, metadata !3774, metadata !DIExpression()), !dbg !3784
  br label %48, !dbg !3805

43:                                               ; preds = %30, %30, %30, %30, %30, %30, %30
  %44 = load i32, i32* %9, align 4, !dbg !3806, !tbaa !3153
  switch i32 %44, label %46 [
    i32 0, label %48
    i32 1, label %45
  ], !dbg !3808

45:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 8, metadata !3774, metadata !DIExpression()), !dbg !3784
  store volatile i32 %27, i32* %10, align 4, !dbg !3809, !tbaa !3812
  br label %48, !dbg !3814

46:                                               ; preds = %43
  call void @llvm.dbg.value(metadata i32 8, metadata !3774, metadata !DIExpression()), !dbg !3784
  store volatile i32 %27, i32* %11, align 4, !dbg !3815, !tbaa !3817
  br label %48

47:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 0, metadata !3774, metadata !DIExpression()), !dbg !3784
  br label %48, !dbg !3818

48:                                               ; preds = %43, %30, %46, %45, %47, %40, %37, %34, %32
  %49 = phi i32 [ %26, %30 ], [ 0, %47 ], [ 8, %45 ], [ 8, %46 ], [ %42, %40 ], [ %39, %37 ], [ %36, %34 ], [ %33, %32 ], [ 4, %43 ], !dbg !3784
  call void @llvm.dbg.value(metadata i32 %49, metadata !3774, metadata !DIExpression()), !dbg !3784
  %50 = icmp ult i32 %28, 256, !dbg !3819
  %51 = select i1 %50, i32* %16, i32* %17, !dbg !3820
  call void @llvm.dbg.value(metadata i32* %51, metadata !3775, metadata !DIExpression()), !dbg !3784
  %52 = shl i32 %25, 2, !dbg !3821
  %53 = add i32 %52, -32, !dbg !3821
  %54 = select i1 %50, i32 %52, i32 %53, !dbg !3821
  call void @llvm.dbg.value(metadata i32 %54, metadata !3776, metadata !DIExpression()), !dbg !3784
  %55 = load volatile i32, i32* %51, align 4, !dbg !3822, !tbaa !2487
  %56 = shl i32 15, %54, !dbg !3822
  %57 = xor i32 %56, -1, !dbg !3822
  %58 = and i32 %55, %57, !dbg !3822
  %59 = shl i32 %49, %54, !dbg !3822
  %60 = or i32 %58, %59, !dbg !3822
  store volatile i32 %60, i32* %51, align 4, !dbg !3822, !tbaa !2487
  %61 = load i32, i32* %8, align 4, !dbg !3823, !tbaa !3146
  %62 = and i32 %61, 268435456, !dbg !3824
  %63 = icmp eq i32 %62, 0, !dbg !3825
  br i1 %63, label %129, label %64, !dbg !3826

64:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !3827
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3777, metadata !DIExpression()), !dbg !3827
  %65 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3827, !tbaa !3158
  %66 = or i32 %65, 1, !dbg !3827
  store volatile i32 %66, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3827, !tbaa !3158
  %67 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !3827, !tbaa !3158
  %68 = and i32 %67, 1, !dbg !3827
  store volatile i32 %68, i32* %3, align 4, !dbg !3827, !tbaa !2487
  %69 = load volatile i32, i32* %3, align 4, !dbg !3827, !tbaa !2487
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22), !dbg !3828
  %70 = lshr i32 %25, 2, !dbg !3829
  %71 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %70, !dbg !3830
  %72 = load volatile i32, i32* %71, align 4, !dbg !3830, !tbaa !2487
  call void @llvm.dbg.value(metadata i32 %72, metadata !3773, metadata !DIExpression()), !dbg !3784
  %73 = and i32 %52, 12, !dbg !3831
  %74 = shl i32 15, %73, !dbg !3831
  %75 = xor i32 %74, -1, !dbg !3831
  %76 = and i32 %72, %75, !dbg !3831
  call void @llvm.dbg.value(metadata i32 %76, metadata !3773, metadata !DIExpression()), !dbg !3784
  switch i32 %18, label %77 [
    i32 1073809408, label %80
    i32 1073810432, label %78
    i32 1073811456, label %79
  ], !dbg !3832

77:                                               ; preds = %64
  br label %80, !dbg !3832

78:                                               ; preds = %64
  br label %80, !dbg !3832

79:                                               ; preds = %64
  br label %80, !dbg !3832

80:                                               ; preds = %64, %79, %78, %77
  %81 = phi i32 [ 0, %64 ], [ %20, %77 ], [ 1, %78 ], [ 2, %79 ], !dbg !3832
  %82 = shl i32 %81, %73, !dbg !3832
  %83 = or i32 %82, %76, !dbg !3832
  call void @llvm.dbg.value(metadata i32 %83, metadata !3773, metadata !DIExpression()), !dbg !3784
  store volatile i32 %83, i32* %71, align 4, !dbg !3833, !tbaa !2487
  %84 = load i32, i32* %8, align 4, !dbg !3834, !tbaa !3146
  %85 = and i32 %84, 65536, !dbg !3836
  %86 = icmp eq i32 %85, 0, !dbg !3837
  br i1 %86, label %90, label %87, !dbg !3838

87:                                               ; preds = %80
  %88 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !3839, !tbaa !3841
  %89 = or i32 %88, %28, !dbg !3839
  br label %94, !dbg !3843

90:                                               ; preds = %80
  %91 = xor i32 %28, -1, !dbg !3844
  %92 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !3844, !tbaa !3841
  %93 = and i32 %92, %91, !dbg !3844
  br label %94

94:                                               ; preds = %90, %87
  %95 = phi i32 [ %93, %90 ], [ %89, %87 ]
  store volatile i32 %95, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !3846, !tbaa !3841
  %96 = and i32 %84, 131072, !dbg !3847
  %97 = icmp eq i32 %96, 0, !dbg !3849
  br i1 %97, label %101, label %98, !dbg !3850

98:                                               ; preds = %94
  %99 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !3851, !tbaa !3853
  %100 = or i32 %99, %28, !dbg !3851
  br label %105, !dbg !3854

101:                                              ; preds = %94
  %102 = xor i32 %28, -1, !dbg !3855
  %103 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !3855, !tbaa !3853
  %104 = and i32 %103, %102, !dbg !3855
  br label %105

105:                                              ; preds = %101, %98
  %106 = phi i32 [ %104, %101 ], [ %100, %98 ]
  store volatile i32 %106, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !3857, !tbaa !3853
  %107 = and i32 %84, 1048576, !dbg !3858
  %108 = icmp eq i32 %107, 0, !dbg !3860
  br i1 %108, label %112, label %109, !dbg !3861

109:                                              ; preds = %105
  %110 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !3862, !tbaa !3864
  %111 = or i32 %110, %28, !dbg !3862
  br label %116, !dbg !3865

112:                                              ; preds = %105
  %113 = xor i32 %28, -1, !dbg !3866
  %114 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !3866, !tbaa !3864
  %115 = and i32 %114, %113, !dbg !3866
  br label %116

116:                                              ; preds = %112, %109
  %117 = phi i32 [ %115, %112 ], [ %111, %109 ]
  store volatile i32 %117, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !3868, !tbaa !3864
  %118 = and i32 %84, 2097152, !dbg !3869
  %119 = icmp eq i32 %118, 0, !dbg !3871
  br i1 %119, label %123, label %120, !dbg !3872

120:                                              ; preds = %116
  %121 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !3873, !tbaa !3875
  %122 = or i32 %121, %28, !dbg !3873
  br label %127, !dbg !3876

123:                                              ; preds = %116
  %124 = xor i32 %28, -1, !dbg !3877
  %125 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !3877, !tbaa !3875
  %126 = and i32 %125, %124, !dbg !3877
  br label %127

127:                                              ; preds = %120, %123
  %128 = phi i32 [ %126, %123 ], [ %122, %120 ]
  store volatile i32 %128, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !3879, !tbaa !3875
  br label %129, !dbg !3880

129:                                              ; preds = %127, %48, %23
  %130 = phi i32 [ %49, %48 ], [ %26, %23 ], [ %49, %127 ], !dbg !3881
  call void @llvm.dbg.value(metadata i32 %130, metadata !3774, metadata !DIExpression()), !dbg !3784
  %131 = add i32 %25, 1, !dbg !3880
  call void @llvm.dbg.value(metadata i32 %131, metadata !3770, metadata !DIExpression()), !dbg !3784
  %132 = load i32, i32* %4, align 4, !dbg !3785, !tbaa !3156
  %133 = lshr i32 %132, %131, !dbg !3882
  %134 = icmp eq i32 %133, 0, !dbg !3786
  br i1 %134, label %135, label %23, !dbg !3787, !llvm.loop !3883

135:                                              ; preds = %129, %2
  ret void, !dbg !3885
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !3886 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !3890, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %1, metadata !3891, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 0, metadata !3892, metadata !DIExpression()), !dbg !3897
  %3 = icmp eq i32 %1, 0, !dbg !3898
  br i1 %3, label %62, label %4, !dbg !3899

4:                                                ; preds = %2
  %5 = ptrtoint %struct.USART_TypeDef* %0 to i32
  %6 = icmp eq %struct.USART_TypeDef* %0, inttoptr (i32 1073812480 to %struct.USART_TypeDef*)
  %7 = select i1 %6, i32 3, i32 4
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %11, !dbg !3899

11:                                               ; preds = %4, %58
  %12 = phi i32 [ 0, %4 ], [ %59, %58 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !3892, metadata !DIExpression()), !dbg !3897
  %13 = shl i32 1, %12, !dbg !3900
  %14 = and i32 %13, %1, !dbg !3902
  call void @llvm.dbg.value(metadata i32 %14, metadata !3893, metadata !DIExpression()), !dbg !3897
  %15 = icmp eq i32 %14, 0, !dbg !3903
  br i1 %15, label %58, label %16, !dbg !3905

16:                                               ; preds = %11
  %17 = lshr i32 %12, 2, !dbg !3906
  %18 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %17, !dbg !3908
  %19 = load volatile i32, i32* %18, align 4, !dbg !3908, !tbaa !2487
  call void @llvm.dbg.value(metadata i32 %19, metadata !3894, metadata !DIExpression()), !dbg !3897
  %20 = shl i32 %12, 2, !dbg !3909
  %21 = and i32 %20, 12, !dbg !3909
  %22 = shl i32 15, %21, !dbg !3910
  %23 = and i32 %19, %22, !dbg !3911
  call void @llvm.dbg.value(metadata i32 %23, metadata !3894, metadata !DIExpression()), !dbg !3897
  switch i32 %5, label %24 [
    i32 1073809408, label %27
    i32 1073810432, label %25
    i32 1073811456, label %26
  ], !dbg !3912

24:                                               ; preds = %16
  br label %27, !dbg !3912

25:                                               ; preds = %16
  br label %27, !dbg !3914

26:                                               ; preds = %16
  br label %27, !dbg !3914

27:                                               ; preds = %16, %26, %25, %24
  %28 = phi i32 [ 0, %16 ], [ %7, %24 ], [ 1, %25 ], [ 2, %26 ], !dbg !3912
  %29 = shl i32 %28, %21, !dbg !3914
  %30 = icmp eq i32 %23, %29, !dbg !3915
  br i1 %30, label %31, label %44, !dbg !3916

31:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %22, metadata !3894, metadata !DIExpression()), !dbg !3897
  %32 = xor i32 %22, -1, !dbg !3917
  %33 = load volatile i32, i32* %18, align 4, !dbg !3917, !tbaa !2487
  %34 = and i32 %33, %32, !dbg !3917
  store volatile i32 %34, i32* %18, align 4, !dbg !3917, !tbaa !2487
  %35 = xor i32 %14, -1, !dbg !3919
  %36 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !3919, !tbaa !3841
  %37 = and i32 %36, %35, !dbg !3919
  store volatile i32 %37, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !3919, !tbaa !3841
  %38 = load volatile i32, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !3920, !tbaa !3853
  %39 = and i32 %38, %35, !dbg !3920
  store volatile i32 %39, i32* inttoptr (i32 1073808388 to i32*), align 4, !dbg !3920, !tbaa !3853
  %40 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !3921, !tbaa !3864
  %41 = and i32 %40, %35, !dbg !3921
  store volatile i32 %41, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !3921, !tbaa !3864
  %42 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !3922, !tbaa !3875
  %43 = and i32 %42, %35, !dbg !3922
  store volatile i32 %43, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !3922, !tbaa !3875
  br label %44, !dbg !3923

44:                                               ; preds = %31, %27
  %45 = icmp ult i32 %14, 256, !dbg !3924
  %46 = select i1 %45, i32* %8, i32* %9, !dbg !3925
  call void @llvm.dbg.value(metadata i32* %46, metadata !3895, metadata !DIExpression()), !dbg !3897
  %47 = add i32 %20, -32, !dbg !3926
  %48 = select i1 %45, i32 %20, i32 %47, !dbg !3926
  call void @llvm.dbg.value(metadata i32 %48, metadata !3896, metadata !DIExpression()), !dbg !3897
  %49 = load volatile i32, i32* %46, align 4, !dbg !3927, !tbaa !2487
  %50 = shl i32 15, %48, !dbg !3927
  %51 = xor i32 %50, -1, !dbg !3927
  %52 = and i32 %49, %51, !dbg !3927
  %53 = shl i32 4, %48, !dbg !3927
  %54 = or i32 %52, %53, !dbg !3927
  store volatile i32 %54, i32* %46, align 4, !dbg !3927, !tbaa !2487
  %55 = xor i32 %14, -1, !dbg !3928
  %56 = load volatile i32, i32* %10, align 4, !dbg !3928, !tbaa !3929
  %57 = and i32 %56, %55, !dbg !3928
  store volatile i32 %57, i32* %10, align 4, !dbg !3928, !tbaa !3929
  br label %58, !dbg !3930

58:                                               ; preds = %44, %11
  %59 = add i32 %12, 1, !dbg !3931
  call void @llvm.dbg.value(metadata i32 %59, metadata !3892, metadata !DIExpression()), !dbg !3897
  %60 = lshr i32 %1, %59, !dbg !3932
  %61 = icmp eq i32 %60, 0, !dbg !3898
  br i1 %61, label %62, label %11, !dbg !3899, !llvm.loop !3933

62:                                               ; preds = %58, %2
  ret void, !dbg !3935
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_GPIO_ReadPin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #15 !dbg !3936 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !3941, metadata !DIExpression()), !dbg !3944
  call void @llvm.dbg.value(metadata i16 %1, metadata !3942, metadata !DIExpression()), !dbg !3944
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !3945
  %4 = load volatile i32, i32* %3, align 4, !dbg !3945, !tbaa !3947
  %5 = zext i16 %1 to i32, !dbg !3948
  %6 = and i32 %4, %5, !dbg !3949
  %7 = icmp ne i32 %6, 0, !dbg !3950
  %8 = zext i1 %7 to i32
  call void @llvm.dbg.value(metadata i32 %8, metadata !3943, metadata !DIExpression()), !dbg !3944
  ret i32 %8, !dbg !3951
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_WritePin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #14 !dbg !3952 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !3956, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata i16 %1, metadata !3957, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata i32 %2, metadata !3958, metadata !DIExpression()), !dbg !3959
  %4 = icmp eq i32 %2, 0, !dbg !3960
  %5 = zext i16 %1 to i32, !dbg !3962
  %6 = shl nuw i32 %5, 16, !dbg !3963
  %7 = select i1 %4, i32 %6, i32 %5, !dbg !3963
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !3962
  store volatile i32 %7, i32* %8, align 4, !dbg !3962, !tbaa !3812
  ret void, !dbg !3964
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @HAL_GPIO_TogglePin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #14 !dbg !3965 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !3969, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.value(metadata i16 %1, metadata !3970, metadata !DIExpression()), !dbg !3971
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !3972
  %4 = load volatile i32, i32* %3, align 4, !dbg !3972, !tbaa !3929
  %5 = zext i16 %1 to i32, !dbg !3974
  %6 = and i32 %4, %5, !dbg !3975
  %7 = icmp eq i32 %6, 0, !dbg !3976
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !3977
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !3977
  %10 = select i1 %7, i32* %8, i32* %9, !dbg !3977
  store volatile i32 %5, i32* %10, align 4, !dbg !3978, !tbaa !2487
  ret void, !dbg !3979
}

; Function Attrs: nofree noinline nounwind
define dso_local i32 @HAL_GPIO_LockPin(%struct.USART_TypeDef* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #17 !dbg !3980 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !3984, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.value(metadata i16 %1, metadata !3985, metadata !DIExpression()), !dbg !3987
  %4 = bitcast i32* %3 to i8*, !dbg !3988
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !3988
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3986, metadata !DIExpression()), !dbg !3989
  store volatile i32 65536, i32* %3, align 4, !dbg !3989, !tbaa !2487
  %5 = zext i16 %1 to i32, !dbg !3990
  %6 = load volatile i32, i32* %3, align 4, !dbg !3990, !tbaa !2487
  %7 = or i32 %6, %5, !dbg !3990
  store volatile i32 %7, i32* %3, align 4, !dbg !3990, !tbaa !2487
  %8 = load volatile i32, i32* %3, align 4, !dbg !3991, !tbaa !2487
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 6, !dbg !3992
  store volatile i32 %8, i32* %9, align 4, !dbg !3993, !tbaa !3994
  store volatile i32 %5, i32* %9, align 4, !dbg !3995, !tbaa !3994
  %10 = load volatile i32, i32* %3, align 4, !dbg !3996, !tbaa !2487
  store volatile i32 %10, i32* %9, align 4, !dbg !3997, !tbaa !3994
  %11 = load volatile i32, i32* %9, align 4, !dbg !3998, !tbaa !3994
  store volatile i32 %11, i32* %3, align 4, !dbg !3999, !tbaa !2487
  %12 = load volatile i32, i32* %9, align 4, !dbg !4000, !tbaa !3994
  %13 = lshr i32 %12, 16, !dbg !4002
  %14 = and i32 %13, 1, !dbg !4002
  %15 = xor i32 %14, 1, !dbg !4002
  %16 = bitcast i32* %3 to i8*, !dbg !4003
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16), !dbg !4003
  ret i32 %15, !dbg !4003
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_GPIO_EXTI_IRQHandler(i16 noundef zeroext %0) local_unnamed_addr #3 !dbg !4004 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !4008, metadata !DIExpression()), !dbg !4009
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !4010, !tbaa !4012
  %3 = zext i16 %0 to i32, !dbg !4010
  %4 = and i32 %2, %3, !dbg !4010
  %5 = icmp eq i32 %4, 0, !dbg !4013
  br i1 %5, label %7, label %6, !dbg !4014

6:                                                ; preds = %1
  store volatile i32 %3, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !4015, !tbaa !4012
  call void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0), !dbg !4017
  br label %7, !dbg !4018

7:                                                ; preds = %6, %1
  ret void, !dbg !4019
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_GPIO_EXTI_Callback(i16 noundef zeroext %0) local_unnamed_addr #3 !dbg !4020 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !4022, metadata !DIExpression()), !dbg !4023
  ret void, !dbg !4024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef nonnull %"class.Cicada::Scheduler"* @_ZN6Cicada9SchedulerC2EPFjvEPPNS_4TaskE(%"class.Cicada::Scheduler"* noundef nonnull returned writeonly align 4 dereferenceable(12) %0, i32 ()* noundef %1, %"class.Cicada::Task"** noundef %2) unnamed_addr #11 align 2 !dbg !4025 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Scheduler"* %0, metadata !4027, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata i32 ()* %1, metadata !4029, metadata !DIExpression()), !dbg !4031
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"** %2, metadata !4030, metadata !DIExpression()), !dbg !4031
  %4 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 0, !dbg !4032
  store i32 ()* %1, i32 ()** %4, align 4, !dbg !4032, !tbaa !4033
  %5 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 1, !dbg !4035
  store %"class.Cicada::Task"** %2, %"class.Cicada::Task"*** %5, align 4, !dbg !4035, !tbaa !4036
  %6 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 2, !dbg !4037
  store %"class.Cicada::Task"** %2, %"class.Cicada::Task"*** %6, align 4, !dbg !4037, !tbaa !4038
  ret %"class.Cicada::Scheduler"* %0, !dbg !4039
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Scheduler7runTaskEv(%"class.Cicada::Scheduler"* nocapture noundef nonnull align 4 dereferenceable(12) %0) local_unnamed_addr #4 align 2 !dbg !4040 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Scheduler"* %0, metadata !4042, metadata !DIExpression()), !dbg !4044
  %2 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 0, !dbg !4045
  %3 = load i32 ()*, i32 ()** %2, align 4, !dbg !4045, !tbaa !4033
  %4 = call noundef i32 %3() #26, !dbg !4045
  call void @llvm.dbg.value(metadata i32 %4, metadata !4043, metadata !DIExpression()), !dbg !4044
  %5 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 2, !dbg !4046
  %6 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !4046, !tbaa !4038
  %7 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %6, align 4, !dbg !4048, !tbaa !1318
  %8 = call noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %7), !dbg !4049
  %9 = icmp eq i16 %8, 0, !dbg !4050
  br i1 %9, label %20, label %10, !dbg !4051

10:                                               ; preds = %1
  %11 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !4052, !tbaa !4038
  %12 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %11, align 4, !dbg !4053, !tbaa !1318
  %13 = call noundef i32 @_ZN6Cicada4Task7lastRunEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %12), !dbg !4054
  %14 = sub i32 %4, %13, !dbg !4055
  %15 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !4056, !tbaa !4038
  %16 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %15, align 4, !dbg !4057, !tbaa !1318
  %17 = call noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %16), !dbg !4058
  %18 = zext i16 %17 to i32, !dbg !4059
  %19 = icmp ult i32 %14, %18, !dbg !4060
  br i1 %19, label %29, label %20, !dbg !4061

20:                                               ; preds = %10, %1
  %21 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !4062, !tbaa !4038
  %22 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %21, align 4, !dbg !4064, !tbaa !1318
  call void @_ZN6Cicada4Task10setLastRunEj(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %22, i32 noundef %4), !dbg !4065
  %23 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !4066, !tbaa !4038
  %24 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %23, align 4, !dbg !4067, !tbaa !1318
  %25 = bitcast %"class.Cicada::Task"* %24 to void (%"class.Cicada::Task"*)***, !dbg !4068
  %26 = load void (%"class.Cicada::Task"*)**, void (%"class.Cicada::Task"*)*** %25, align 4, !dbg !4068, !tbaa !1408
  %27 = getelementptr inbounds void (%"class.Cicada::Task"*)*, void (%"class.Cicada::Task"*)** %26, i32 2, !dbg !4068
  %28 = load void (%"class.Cicada::Task"*)*, void (%"class.Cicada::Task"*)** %27, align 4, !dbg !4068
  call void %28(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %24) #26, !dbg !4068
  br label %29, !dbg !4069

29:                                               ; preds = %20, %10
  %30 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %5, align 4, !dbg !4070, !tbaa !4038
  %31 = getelementptr inbounds %"class.Cicada::Task"*, %"class.Cicada::Task"** %30, i32 1, !dbg !4070
  store %"class.Cicada::Task"** %31, %"class.Cicada::Task"*** %5, align 4, !dbg !4070, !tbaa !4038
  %32 = load %"class.Cicada::Task"*, %"class.Cicada::Task"** %31, align 4, !dbg !4072, !tbaa !1318
  %33 = icmp eq %"class.Cicada::Task"* %32, null, !dbg !4073
  br i1 %33, label %34, label %37, !dbg !4074

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.Cicada::Scheduler", %"class.Cicada::Scheduler"* %0, i32 0, i32 1, !dbg !4075
  %36 = load %"class.Cicada::Task"**, %"class.Cicada::Task"*** %35, align 4, !dbg !4075, !tbaa !4036
  store %"class.Cicada::Task"** %36, %"class.Cicada::Task"*** %5, align 4, !dbg !4077, !tbaa !4038
  br label %37, !dbg !4078

37:                                               ; preds = %34, %29
  ret void, !dbg !4079
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i16 @_ZNK6Cicada4Task5delayEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) local_unnamed_addr #4 comdat align 2 !dbg !4080 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !4082, metadata !DIExpression()), !dbg !4084
  %2 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 1, !dbg !4085
  %3 = load i16, i16* %2, align 4, !dbg !4085, !tbaa !1427
  ret i16 %3, !dbg !4086
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i32 @_ZN6Cicada4Task7lastRunEv(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0) local_unnamed_addr #4 comdat align 2 !dbg !4087 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !4089, metadata !DIExpression()), !dbg !4090
  %2 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 4, !dbg !4091
  %3 = load i32, i32* %2, align 4, !dbg !4091, !tbaa !1434
  ret i32 %3, !dbg !4092
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada4Task10setLastRunEj(%"class.Cicada::Task"* noundef nonnull align 4 dereferenceable(20) %0, i32 noundef %1) local_unnamed_addr #4 comdat align 2 !dbg !4093 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Task"* %0, metadata !4095, metadata !DIExpression()), !dbg !4097
  call void @llvm.dbg.value(metadata i32 %1, metadata !4096, metadata !DIExpression()), !dbg !4097
  %3 = getelementptr inbounds %"class.Cicada::Task", %"class.Cicada::Task"* %0, i32 0, i32 4, !dbg !4098
  store i32 %1, i32* %3, align 4, !dbg !4099, !tbaa !1434
  ret void, !dbg !4100
}

; Function Attrs: mustprogress noinline noreturn nounwind
define dso_local void @_ZN6Cicada9Scheduler5startEv(%"class.Cicada::Scheduler"* nocapture noundef nonnull align 4 dereferenceable(12) %0) local_unnamed_addr #22 align 2 !dbg !4101 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Scheduler"* %0, metadata !4103, metadata !DIExpression()), !dbg !4104
  br label %2, !dbg !4105

2:                                                ; preds = %2, %1
  call void @_ZN6Cicada9Scheduler7runTaskEv(%"class.Cicada::Scheduler"* noundef nonnull align 4 dereferenceable(12) %0), !dbg !4106
  br label %2, !dbg !4109, !llvm.loop !4110
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i32 @_Z13eTickFunctionv() #4 !dbg !4113 {
  %1 = call i32 @HAL_GetTick() #26, !dbg !4114
  ret i32 %1, !dbg !4115
}

; Function Attrs: noinline nounwind
define dso_local noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0) unnamed_addr #3 align 2 !dbg !4116 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4118, metadata !DIExpression()), !dbg !4119
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4120
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 8, !dbg !4120, !tbaa !1408
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !4120
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %3, align 4, !dbg !4120, !tbaa !1408
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !4121
  %5 = load i8, i8* %4, align 8, !dbg !4121, !tbaa !4124
  %6 = and i8 %5, 1, !dbg !4131
  %7 = icmp eq i8 %6, 0, !dbg !4121
  br i1 %7, label %13, label %8, !dbg !4132

8:                                                ; preds = %1
  %9 = bitcast %"class.Cicada::Stm32Uart"* %0 to void (%"class.Cicada::Stm32Uart"*)***, !dbg !4133
  %10 = load void (%"class.Cicada::Stm32Uart"*)**, void (%"class.Cicada::Stm32Uart"*)*** %9, align 8, !dbg !4133, !tbaa !1408
  %11 = getelementptr inbounds void (%"class.Cicada::Stm32Uart"*)*, void (%"class.Cicada::Stm32Uart"*)** %10, i32 19, !dbg !4133
  %12 = load void (%"class.Cicada::Stm32Uart"*)*, void (%"class.Cicada::Stm32Uart"*)** %11, align 4, !dbg !4133
  call void %12(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) #26, !dbg !4133
  br label %13, !dbg !4133

13:                                               ; preds = %8, %1
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !4134
  %15 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %14) #26, !dbg !4134
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !4135
}

; Function Attrs: noinline nounwind
define dso_local void @_ZN6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #3 align 2 !dbg !4136 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4138, metadata !DIExpression()), !dbg !4139
  %2 = call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) #26, !dbg !4140
  %3 = bitcast %"class.Cicada::Stm32Uart"* %0 to i8*, !dbg !4140
  call void @_ZdlPv(i8* noundef %3) #27, !dbg !4140
  ret void, !dbg !4141
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #4 align 2 !dbg !4142 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4144, metadata !DIExpression()), !dbg !4146
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 2, !dbg !4147
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !4147
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !4148
  %5 = icmp eq i64 %4, 0, !dbg !4149
  br i1 %5, label %6, label %13, !dbg !4150

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !4151
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !4151, !tbaa !4152
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 0, !dbg !4151
  %10 = load volatile i32, i32* %9, align 4, !dbg !4151, !tbaa !4153
  %11 = and i32 %10, 64, !dbg !4151
  %12 = icmp ne i32 %11, 0, !dbg !4151
  br label %13

13:                                               ; preds = %6, %1
  %14 = phi i1 [ false, %1 ], [ %12, %6 ], !dbg !4146
  ret i1 %14, !dbg !4155
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #4 align 2 !dbg !4156 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4158, metadata !DIExpression()), !dbg !4159
  %2 = bitcast %"class.Cicada::Stm32Uart"* %0 to i1 (%"class.Cicada::Stm32Uart"*, i8)***, !dbg !4160
  %3 = load i1 (%"class.Cicada::Stm32Uart"*, i8)**, i1 (%"class.Cicada::Stm32Uart"*, i8)*** %2, align 8, !dbg !4160, !tbaa !1408
  %4 = getelementptr inbounds i1 (%"class.Cicada::Stm32Uart"*, i8)*, i1 (%"class.Cicada::Stm32Uart"*, i8)** %3, i32 16, !dbg !4160
  %5 = load i1 (%"class.Cicada::Stm32Uart"*, i8)*, i1 (%"class.Cicada::Stm32Uart"*, i8)** %4, align 4, !dbg !4160
  %6 = call noundef zeroext i1 %5(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, i8 noundef zeroext 15) #26, !dbg !4160
  ret i1 %6, !dbg !4161
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, i8 noundef zeroext %1) unnamed_addr #4 align 2 !dbg !4162 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.DMA_Channel_TypeDef, align 4
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4164, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i8 %1, metadata !4165, metadata !DIExpression()), !dbg !4208
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !4209
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %12, i32 0, i32 0, !dbg !4210
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !4210, !tbaa !4152
  %15 = ptrtoint %struct.USART_TypeDef* %14 to i32, !dbg !4211
  switch i32 %15, label %123 [
    i32 1073821696, label %16
    i32 1073759232, label %26
    i32 1073760256, label %34
  ], !dbg !4211

16:                                               ; preds = %2
  %17 = load volatile i32, i32* inttoptr (i32 1073807364 to i32*), align 4, !dbg !4212, !tbaa !4213
  call void @llvm.dbg.value(metadata i32 %17, metadata !4166, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %17, metadata !4166, metadata !DIExpression(DW_OP_constu, 117440512, DW_OP_or, DW_OP_stack_value)), !dbg !4215
  %18 = or i32 %17, 117440516, !dbg !4212
  call void @llvm.dbg.value(metadata i32 %18, metadata !4166, metadata !DIExpression()), !dbg !4215
  store volatile i32 %18, i32* inttoptr (i32 1073807364 to i32*), align 4, !dbg !4212, !tbaa !4213
  %19 = bitcast i32* %3 to i8*, !dbg !4216
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19), !dbg !4216
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4170, metadata !DIExpression()), !dbg !4216
  %20 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4216, !tbaa !4217
  %21 = or i32 %20, 16384, !dbg !4216
  store volatile i32 %21, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4216, !tbaa !4217
  %22 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4216, !tbaa !4217
  %23 = and i32 %22, 16384, !dbg !4216
  store volatile i32 %23, i32* %3, align 4, !dbg !4216, !tbaa !4219
  %24 = load volatile i32, i32* %3, align 4, !dbg !4216, !tbaa !4219
  %25 = bitcast i32* %3 to i8*, !dbg !4220
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25), !dbg !4220
  br label %42, !dbg !4221

26:                                               ; preds = %2
  %27 = bitcast i32* %4 to i8*, !dbg !4222
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27), !dbg !4222
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4172, metadata !DIExpression()), !dbg !4222
  %28 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4222, !tbaa !4223
  %29 = or i32 %28, 131072, !dbg !4222
  store volatile i32 %29, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4222, !tbaa !4223
  %30 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4222, !tbaa !4223
  %31 = and i32 %30, 131072, !dbg !4222
  store volatile i32 %31, i32* %4, align 4, !dbg !4222, !tbaa !4219
  %32 = load volatile i32, i32* %4, align 4, !dbg !4222, !tbaa !4219
  %33 = bitcast i32* %4 to i8*, !dbg !4224
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33), !dbg !4224
  br label %42, !dbg !4225

34:                                               ; preds = %2
  %35 = bitcast i32* %5 to i8*, !dbg !4226
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35), !dbg !4226
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4176, metadata !DIExpression()), !dbg !4226
  %36 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4226, !tbaa !4223
  %37 = or i32 %36, 262144, !dbg !4226
  store volatile i32 %37, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4226, !tbaa !4223
  %38 = load volatile i32, i32* inttoptr (i32 1073877020 to i32*), align 4, !dbg !4226, !tbaa !4223
  %39 = and i32 %38, 262144, !dbg !4226
  store volatile i32 %39, i32* %5, align 4, !dbg !4226, !tbaa !4219
  %40 = load volatile i32, i32* %5, align 4, !dbg !4226, !tbaa !4219
  %41 = bitcast i32* %5 to i8*, !dbg !4227
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41), !dbg !4227
  br label %42

42:                                               ; preds = %26, %34, %16
  %43 = phi i32 [ 38, %26 ], [ 39, %34 ], [ 37, %16 ]
  %44 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !4228
  store i32 %43, i32* %44, align 4, !dbg !4228, !tbaa !4229
  %45 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !4230
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %45, align 4, !dbg !4230, !tbaa !4231
  %47 = ptrtoint %struct.USART_TypeDef* %46 to i32, !dbg !4232
  %48 = add i32 %47, -1073809408, !dbg !4232
  %49 = call i32 @llvm.fshl.i32(i32 %48, i32 %48, i32 22), !dbg !4232
  switch i32 %49, label %90 [
    i32 0, label %50
    i32 1, label %58
    i32 2, label %66
    i32 3, label %74
    i32 4, label %82
  ], !dbg !4232

50:                                               ; preds = %42
  %51 = bitcast i32* %6 to i8*, !dbg !4233
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51), !dbg !4233
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4180, metadata !DIExpression()), !dbg !4233
  %52 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4233, !tbaa !4217
  %53 = or i32 %52, 4, !dbg !4233
  store volatile i32 %53, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4233, !tbaa !4217
  %54 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4233, !tbaa !4217
  %55 = and i32 %54, 4, !dbg !4233
  store volatile i32 %55, i32* %6, align 4, !dbg !4233, !tbaa !4219
  %56 = load volatile i32, i32* %6, align 4, !dbg !4233, !tbaa !4219
  %57 = bitcast i32* %6 to i8*, !dbg !4234
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57), !dbg !4234
  br label %90, !dbg !4235

58:                                               ; preds = %42
  %59 = bitcast i32* %7 to i8*, !dbg !4236
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59), !dbg !4236
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4184, metadata !DIExpression()), !dbg !4236
  %60 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4236, !tbaa !4217
  %61 = or i32 %60, 8, !dbg !4236
  store volatile i32 %61, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4236, !tbaa !4217
  %62 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4236, !tbaa !4217
  %63 = and i32 %62, 8, !dbg !4236
  store volatile i32 %63, i32* %7, align 4, !dbg !4236, !tbaa !4219
  %64 = load volatile i32, i32* %7, align 4, !dbg !4236, !tbaa !4219
  %65 = bitcast i32* %7 to i8*, !dbg !4237
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65), !dbg !4237
  br label %90, !dbg !4238

66:                                               ; preds = %42
  %67 = bitcast i32* %8 to i8*, !dbg !4239
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67), !dbg !4239
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4188, metadata !DIExpression()), !dbg !4239
  %68 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4239, !tbaa !4217
  %69 = or i32 %68, 16, !dbg !4239
  store volatile i32 %69, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4239, !tbaa !4217
  %70 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4239, !tbaa !4217
  %71 = and i32 %70, 16, !dbg !4239
  store volatile i32 %71, i32* %8, align 4, !dbg !4239, !tbaa !4219
  %72 = load volatile i32, i32* %8, align 4, !dbg !4239, !tbaa !4219
  %73 = bitcast i32* %8 to i8*, !dbg !4240
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73), !dbg !4240
  br label %90, !dbg !4241

74:                                               ; preds = %42
  %75 = bitcast i32* %9 to i8*, !dbg !4242
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75), !dbg !4242
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4192, metadata !DIExpression()), !dbg !4242
  %76 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4242, !tbaa !4217
  %77 = or i32 %76, 32, !dbg !4242
  store volatile i32 %77, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4242, !tbaa !4217
  %78 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4242, !tbaa !4217
  %79 = and i32 %78, 32, !dbg !4242
  store volatile i32 %79, i32* %9, align 4, !dbg !4242, !tbaa !4219
  %80 = load volatile i32, i32* %9, align 4, !dbg !4242, !tbaa !4219
  %81 = bitcast i32* %9 to i8*, !dbg !4243
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81), !dbg !4243
  br label %90, !dbg !4244

82:                                               ; preds = %42
  %83 = bitcast i32* %10 to i8*, !dbg !4245
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83), !dbg !4245
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4196, metadata !DIExpression()), !dbg !4245
  %84 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4245, !tbaa !4217
  %85 = or i32 %84, 64, !dbg !4245
  store volatile i32 %85, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4245, !tbaa !4217
  %86 = load volatile i32, i32* inttoptr (i32 1073877016 to i32*), align 8, !dbg !4245, !tbaa !4217
  %87 = and i32 %86, 64, !dbg !4245
  store volatile i32 %87, i32* %10, align 4, !dbg !4245, !tbaa !4219
  %88 = load volatile i32, i32* %10, align 4, !dbg !4245, !tbaa !4219
  %89 = bitcast i32* %10 to i8*, !dbg !4246
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89), !dbg !4246
  br label %90, !dbg !4247

90:                                               ; preds = %42, %58, %74, %82, %66, %50
  %91 = bitcast %struct.DMA_Channel_TypeDef* %11 to i8*, !dbg !4248
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #26, !dbg !4248
  call void @llvm.dbg.declare(metadata %struct.DMA_Channel_TypeDef* %11, metadata !4200, metadata !DIExpression()), !dbg !4249
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %91, i8 0, i32 16, i1 false), !dbg !4249
  %92 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !4250
  %93 = load i16, i16* %92, align 8, !dbg !4250, !tbaa !4251
  %94 = zext i16 %93 to i32, !dbg !4250
  %95 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 0, !dbg !4252
  store i32 %94, i32* %95, align 4, !dbg !4253, !tbaa !4254
  %96 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 1, !dbg !4256
  store i32 2, i32* %96, align 4, !dbg !4257, !tbaa !4258
  %97 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 2, !dbg !4259
  store i32 0, i32* %97, align 4, !dbg !4260, !tbaa !4261
  %98 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %11, i32 0, i32 3, !dbg !4262
  store i32 3, i32* %98, align 4, !dbg !4263, !tbaa !4264
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %46, %struct.DMA_Channel_TypeDef* noundef nonnull %11) #26, !dbg !4265
  %99 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !4266
  %100 = load i16, i16* %99, align 2, !dbg !4266, !tbaa !4267
  %101 = zext i16 %100 to i32, !dbg !4266
  store i32 %101, i32* %95, align 4, !dbg !4268, !tbaa !4254
  store i32 0, i32* %96, align 4, !dbg !4269, !tbaa !4258
  %102 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %45, align 4, !dbg !4270, !tbaa !4231
  call void @HAL_GPIO_Init(%struct.USART_TypeDef* noundef %102, %struct.DMA_Channel_TypeDef* noundef nonnull %11) #26, !dbg !4271
  %103 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 2, !dbg !4272
  store i32 0, i32* %103, align 8, !dbg !4273, !tbaa !4274
  %104 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 3, !dbg !4275
  store i32 0, i32* %104, align 4, !dbg !4276, !tbaa !4277
  %105 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 4, !dbg !4278
  store i32 12, i32* %105, align 8, !dbg !4279, !tbaa !4280
  %106 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 5, !dbg !4281
  store i32 0, i32* %106, align 4, !dbg !4282, !tbaa !4283
  %107 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 6, !dbg !4284
  store i32 0, i32* %107, align 8, !dbg !4285, !tbaa !4286
  %108 = call i32 @HAL_UART_Init(%struct.__UART_HandleTypeDef* noundef nonnull %12) #26, !dbg !4287
  %109 = icmp eq i32 %108, 0, !dbg !4289
  br i1 %109, label %110, label %122, !dbg !4290

110:                                              ; preds = %90
  %111 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !4291
  %112 = load i32, i32* %111, align 4, !dbg !4291, !tbaa !4229
  %113 = zext i8 %1 to i32, !dbg !4292
  call fastcc void @_ZL18__NVIC_SetPriority9IRQn_Typej(i32 noundef %112, i32 noundef %113), !dbg !4293
  %114 = load i32, i32* %111, align 4, !dbg !4294, !tbaa !4229
  call fastcc void @_ZL16__NVIC_EnableIRQ9IRQn_Type(i32 noundef %114), !dbg !4295
  %115 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !4296, !tbaa !4152
  %116 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %115, i32 0, i32 3, !dbg !4296
  %117 = load volatile i32, i32* %116, align 4, !dbg !4296, !tbaa !4297
  %118 = or i32 %117, 32, !dbg !4296
  store volatile i32 %118, i32* %116, align 4, !dbg !4296, !tbaa !4297
  %119 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !4298
  %120 = load i8, i8* %119, align 8, !dbg !4299, !tbaa !4124
  %121 = or i8 %120, 1, !dbg !4299
  store i8 %121, i8* %119, align 8, !dbg !4299, !tbaa !4124
  br label %122, !dbg !4300

122:                                              ; preds = %90, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #26, !dbg !4301
  br label %123

123:                                              ; preds = %2, %122
  %124 = phi i1 [ %109, %122 ], [ false, %2 ], !dbg !4208
  ret i1 %124, !dbg !4301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0) unnamed_addr #16 align 2 !dbg !4302 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4304, metadata !DIExpression()), !dbg !4305
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !4306
  %3 = load i8, i8* %2, align 8, !dbg !4306, !tbaa !4124
  %4 = and i8 %3, 1, !dbg !4307
  %5 = icmp ne i8 %4, 0, !dbg !4306
  ret i1 %5, !dbg !4308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull writeonly align 8 dereferenceable(192) %0, i32 noundef %1, i8 noundef zeroext %2) unnamed_addr #11 align 2 !dbg !4309 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4311, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i32 %1, metadata !4312, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.value(metadata i8 %2, metadata !4313, metadata !DIExpression()), !dbg !4314
  %4 = add i32 %1, -4500001, !dbg !4315
  %5 = icmp ult i32 %4, -4499951, !dbg !4315
  br i1 %5, label %12, label %6, !dbg !4315

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 0, !dbg !4317
  store i32 %1, i32* %7, align 8, !dbg !4318, !tbaa !4319
  switch i8 %2, label %12 [
    i8 8, label %9
    i8 9, label %8
  ], !dbg !4320

8:                                                ; preds = %6
  br label %9, !dbg !4321

9:                                                ; preds = %6, %8
  %10 = phi i32 [ 4096, %8 ], [ 0, %6 ]
  %11 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 1, !dbg !4323
  store i32 %10, i32* %11, align 4, !dbg !4323, !tbaa !4324
  br label %12, !dbg !4325

12:                                               ; preds = %9, %6, %3
  %13 = phi i1 [ false, %3 ], [ false, %6 ], [ true, %9 ], !dbg !4314
  ret i1 %13, !dbg !4325
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) unnamed_addr #4 align 2 !dbg !4326 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4328, metadata !DIExpression()), !dbg !4329
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !4330
  %3 = load i32, i32* %2, align 4, !dbg !4330, !tbaa !4229
  call fastcc void @_ZL17__NVIC_DisableIRQ9IRQn_Type(i32 noundef %3), !dbg !4331
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !4332
  %5 = call i32 @HAL_UART_DeInit(%struct.__UART_HandleTypeDef* noundef nonnull %4) #26, !dbg !4333
  %6 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !4334
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !4334, !tbaa !4231
  %8 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !4335
  %9 = load i16, i16* %8, align 8, !dbg !4335, !tbaa !4251
  %10 = zext i16 %9 to i32, !dbg !4335
  call void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %7, i32 noundef %10) #26, !dbg !4336
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !4337, !tbaa !4231
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !4338
  %13 = load i16, i16* %12, align 2, !dbg !4338, !tbaa !4267
  %14 = zext i16 %13 to i32, !dbg !4338
  call void @HAL_GPIO_DeInit(%struct.USART_TypeDef* noundef %11, i32 noundef %14) #26, !dbg !4339
  %15 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !4340
  %16 = load i8, i8* %15, align 8, !dbg !4341, !tbaa !4124
  %17 = and i8 %16, -2, !dbg !4341
  store i8 %17, i8* %15, align 8, !dbg !4341, !tbaa !4124
  ret void, !dbg !4342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local noalias noundef i8* @_ZNK6Cicada9Stm32Uart8portNameEv(%"class.Cicada::Stm32Uart"* nocapture nonnull readnone align 8 %0) unnamed_addr #10 align 2 !dbg !4343 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* undef, metadata !4345, metadata !DIExpression()), !dbg !4346
  ret i8* null, !dbg !4347
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0, i8* nocapture noundef nonnull writeonly align 1 dereferenceable(1) %1) unnamed_addr #15 align 2 !dbg !4348 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4350, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.value(metadata i8* %1, metadata !4351, metadata !DIExpression()), !dbg !4352
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !4353
  %4 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %3, align 4, !dbg !4353, !tbaa !4152
  %5 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 0, !dbg !4353
  %6 = load volatile i32, i32* %5, align 4, !dbg !4353, !tbaa !4153
  %7 = and i32 %6, 32, !dbg !4353
  %8 = icmp eq i32 %7, 0, !dbg !4353
  br i1 %8, label %9, label %13, !dbg !4355

9:                                                ; preds = %2
  %10 = load volatile i32, i32* %5, align 4, !dbg !4356, !tbaa !4153
  %11 = and i32 %10, 8, !dbg !4356
  %12 = icmp eq i32 %11, 0, !dbg !4356
  br i1 %12, label %17, label %13, !dbg !4357

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 1, !dbg !4358
  %15 = load volatile i32, i32* %14, align 4, !dbg !4358, !tbaa !4360
  %16 = trunc i32 %15 to i8, !dbg !4358
  store i8 %16, i8* %1, align 1, !dbg !4361, !tbaa !1444
  br label %17, !dbg !4362

17:                                               ; preds = %9, %13
  %18 = phi i1 [ true, %13 ], [ false, %9 ], !dbg !4352
  ret i1 %18, !dbg !4363
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define dso_local noundef zeroext i1 @_ZN6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0, i8 noundef zeroext %1) unnamed_addr #23 align 2 !dbg !4364 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4366, metadata !DIExpression()), !dbg !4368
  call void @llvm.dbg.value(metadata i8 %1, metadata !4367, metadata !DIExpression()), !dbg !4368
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !4369
  %4 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %3, align 4, !dbg !4369, !tbaa !4152
  %5 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 0, !dbg !4369
  %6 = load volatile i32, i32* %5, align 4, !dbg !4369, !tbaa !4153
  %7 = and i32 %6, 128, !dbg !4369
  %8 = icmp eq i32 %7, 0, !dbg !4369
  br i1 %8, label %12, label %9, !dbg !4371

9:                                                ; preds = %2
  %10 = zext i8 %1 to i32, !dbg !4372
  %11 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %4, i32 0, i32 1, !dbg !4372
  store volatile i32 %10, i32* %11, align 4, !dbg !4372, !tbaa !4360
  br label %12, !dbg !4374

12:                                               ; preds = %2, %9
  %13 = xor i1 %8, true, !dbg !4375
  ret i1 %13, !dbg !4375
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define dso_local void @_ZN6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* nocapture noundef nonnull readonly align 8 dereferenceable(192) %0) unnamed_addr #23 align 2 !dbg !4376 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4378, metadata !DIExpression()), !dbg !4379
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !4380
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !4380, !tbaa !4152
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !4380
  %5 = load volatile i32, i32* %4, align 4, !dbg !4380, !tbaa !4297
  %6 = or i32 %5, 128, !dbg !4380
  store volatile i32 %6, i32* %4, align 4, !dbg !4380, !tbaa !4297
  ret void, !dbg !4381
}

; Function Attrs: noinline nounwind
define dso_local noalias noundef %"class.Cicada::Stm32Uart"* @_ZThn4_N6Cicada9Stm32UartD1Ev(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #3 align 2 !dbg !4382 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4384
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !4384
  %4 = tail call noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartD2Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3) #26, !dbg !4384
  ret %"class.Cicada::Stm32Uart"* undef, !dbg !4384
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #3 align 2 !dbg !4385 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4386
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !4386
  tail call void @_ZN6Cicada9Stm32UartD0Ev(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3) #26, !dbg !4386
  ret void, !dbg !4386
}

; Function Attrs: noinline nounwind
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #3 align 2 !dbg !4387 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4388
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !4388
  %4 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart4openEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !4388
  ret i1 %4, !dbg !4388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0) unnamed_addr #16 align 2 !dbg !4389 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4390
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !4390
  %4 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart6isOpenEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !4390
  ret i1 %4, !dbg !4390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* nocapture noundef writeonly %0, i32 noundef %1, i8 noundef zeroext %2) unnamed_addr #11 align 2 !dbg !4391 {
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4392
  %5 = bitcast i32* %4 to %"class.Cicada::Stm32Uart"*, !dbg !4392
  %6 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart15setSerialConfigEjh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %5, i32 noundef %1, i8 noundef zeroext %2), !dbg !4392
  ret i1 %6, !dbg !4392
}

; Function Attrs: noinline nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef %0) unnamed_addr #3 align 2 !dbg !4393 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4394
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !4394
  tail call void @_ZN6Cicada9Stm32Uart5closeEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !4394
  ret void, !dbg !4394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone willreturn
define dso_local noalias noundef i8* @_ZThn4_NK6Cicada9Stm32Uart8portNameEv(%"class.Cicada::Stm32Uart"* nocapture noundef readnone %0) unnamed_addr #10 align 2 !dbg !4395 {
  ret i8* null, !dbg !4396
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0, i8* nocapture noundef nonnull writeonly align 1 dereferenceable(1) %1) unnamed_addr #15 align 2 !dbg !4397 {
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4398
  %4 = bitcast i32* %3 to %"class.Cicada::Stm32Uart"*, !dbg !4398
  %5 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart7rawReadERh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4, i8* noundef nonnull align 1 dereferenceable(1) %1), !dbg !4398
  ret i1 %5, !dbg !4398
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local noundef zeroext i1 @_ZThn4_N6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #14 align 2 !dbg !4399 {
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4400
  %4 = bitcast i32* %3 to %"class.Cicada::Stm32Uart"*, !dbg !4400
  %5 = tail call noundef zeroext i1 @_ZN6Cicada9Stm32Uart8rawWriteEh(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %4, i8 noundef zeroext %1), !dbg !4400
  ret i1 %5, !dbg !4400
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local void @_ZThn4_N6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* nocapture noundef readonly %0) unnamed_addr #14 align 2 !dbg !4401 {
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 -1, i32 6, !dbg !4402
  %3 = bitcast i32* %2 to %"class.Cicada::Stm32Uart"*, !dbg !4402
  tail call void @_ZN6Cicada9Stm32Uart13startTransmitEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %3), !dbg !4402
  ret void, !dbg !4402
}

; Function Attrs: mustprogress noinline nounwind
define internal fastcc void @_ZL17__NVIC_DisableIRQ9IRQn_Type(i32 noundef %0) unnamed_addr #4 !dbg !4403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4407, metadata !DIExpression()), !dbg !4408
  %2 = icmp sgt i32 %0, -1, !dbg !4409
  br i1 %2, label %3, label %8, !dbg !4411

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4412
  %5 = shl i32 1, %4, !dbg !4414
  %6 = lshr i32 %0, 5, !dbg !4415
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !4416
  store volatile i32 %5, i32* %7, align 4, !dbg !4417, !tbaa !4219
  call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !4418, !srcloc !4421
  call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !4422, !srcloc !4425
  br label %8, !dbg !4426

8:                                                ; preds = %3, %1
  ret void, !dbg !4427
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define internal fastcc void @_ZL18__NVIC_SetPriority9IRQn_Typej(i32 noundef %0, i32 noundef %1) unnamed_addr #23 !dbg !4428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4432, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata i32 %1, metadata !4433, metadata !DIExpression()), !dbg !4434
  %3 = trunc i32 %1 to i8, !dbg !4435
  %4 = shl i8 %3, 4, !dbg !4435
  %5 = and i32 %0, 15, !dbg !4437
  %6 = add nsw i32 %5, -4, !dbg !4437
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !4437
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4437
  %9 = icmp slt i32 %0, 0, !dbg !4437
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !4437
  store volatile i8 %4, i8* %10, align 1, !dbg !4435, !tbaa !1444
  ret void, !dbg !4438
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind
define internal fastcc void @_ZL16__NVIC_EnableIRQ9IRQn_Type(i32 noundef %0) unnamed_addr #23 !dbg !4439 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4441, metadata !DIExpression()), !dbg !4442
  %2 = icmp sgt i32 %0, -1, !dbg !4443
  br i1 %2, label %3, label %8, !dbg !4445

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4446
  %5 = shl i32 1, %4, !dbg !4448
  %6 = lshr i32 %0, 5, !dbg !4449
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4450
  store volatile i32 %5, i32* %7, align 4, !dbg !4451, !tbaa !4219
  br label %8, !dbg !4452

8:                                                ; preds = %3, %1
  ret void, !dbg !4453
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !4454 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4456, metadata !DIExpression()), !dbg !4458
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !4459
  %3 = load i64, i64* %2, align 8, !dbg !4459, !tbaa !4460
  ret i64 %3, !dbg !4463
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0) unnamed_addr #3 comdat align 2 !dbg !4464 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4470, metadata !DIExpression()), !dbg !4472
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !4473
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !4473
  %4 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(46) %3) #26, !dbg !4473
  %5 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4473
  %6 = bitcast %"class.Cicada::LineCircularBuffer"* %5 to %"class.Cicada::CircularBuffer"*, !dbg !4473
  %7 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(46) %6) #26, !dbg !4473
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !4473
  %9 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %8) #26, !dbg !4473
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !4475
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull returned align 8 dereferenceable(44) %0) unnamed_addr #3 comdat align 2 !dbg !4476 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4478, metadata !DIExpression()), !dbg !4480
  ret %"class.Cicada::CircularBuffer"* %0, !dbg !4481
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull returned align 4 dereferenceable(8) %0) unnamed_addr #3 comdat align 2 !dbg !4482 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !4484, metadata !DIExpression()), !dbg !4486
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 1, !dbg !4487
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #26, !dbg !4487
  %4 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, !dbg !4487
  %5 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #26, !dbg !4487
  ret %"class.Cicada::IBufferedSerial"* %0, !dbg !4489
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !4490 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !4492, metadata !DIExpression()), !dbg !4494
  ret %"class.Cicada::ICommDevice"* %0, !dbg !4495
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceD2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !4496 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !4498, metadata !DIExpression()), !dbg !4500
  ret %"class.Cicada::ICommDevice"* %0, !dbg !4501
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4, %struct.USART_TypeDef* noundef %5, %struct.USART_TypeDef* noundef %6, i16 noundef zeroext %7, i16 noundef zeroext %8) unnamed_addr #3 align 2 !dbg !4502 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4504, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i8* %1, metadata !4505, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i8* %2, metadata !4506, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i64 %3, metadata !4507, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i64 %4, metadata !4508, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %5, metadata !4509, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %6, metadata !4510, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i16 %7, metadata !4511, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata i16 %8, metadata !4512, metadata !DIExpression()), !dbg !4513
  %10 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !4514
  %11 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_yy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %10, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) #26, !dbg !4515
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4514
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %12, align 8, !dbg !4514, !tbaa !1408
  %13 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !4514
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %13, align 4, !dbg !4514, !tbaa !1408
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !4516
  store i8 0, i8* %14, align 8, !dbg !4516, !tbaa !4124
  %15 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !4517
  %16 = bitcast %struct.__UART_HandleTypeDef* %15 to i8*, !dbg !4517
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(72) %16, i8 0, i32 72, i1 false), !dbg !4517
  %17 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !4518
  store %struct.USART_TypeDef* %6, %struct.USART_TypeDef** %17, align 4, !dbg !4518, !tbaa !4231
  %18 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !4519
  store i16 %7, i16* %18, align 8, !dbg !4519, !tbaa !4251
  %19 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !4520
  store i16 %8, i16* %19, align 2, !dbg !4520, !tbaa !4267
  %20 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !4521
  store i32 0, i32* %20, align 4, !dbg !4521, !tbaa !4229
  call void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %5), !dbg !4522
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !4524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind
define dso_local void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %1) local_unnamed_addr #24 align 2 !dbg !4525 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4527, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %1, metadata !4528, metadata !DIExpression()), !dbg !4531
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !4532
  store %struct.USART_TypeDef* %1, %struct.USART_TypeDef** %3, align 4, !dbg !4533, !tbaa !4152
  %4 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 0, !dbg !4534
  store i32 115200, i32* %4, align 8, !dbg !4535, !tbaa !4319
  %5 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 1, i32 1, !dbg !4536
  store i32 0, i32* %5, align 4, !dbg !4537, !tbaa !4324
  call void @llvm.dbg.value(metadata i32 0, metadata !4529, metadata !DIExpression()), !dbg !4538
  br label %9, !dbg !4539

6:                                                ; preds = %9
  %7 = add nuw nsw i32 %10, 1, !dbg !4540
  call void @llvm.dbg.value(metadata i32 %7, metadata !4529, metadata !DIExpression()), !dbg !4538
  call void @llvm.dbg.value(metadata i32 %10, metadata !4529, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4538
  %8 = icmp eq i32 %7, 4, !dbg !4542
  br i1 %8, label %15, label %9, !dbg !4539, !llvm.loop !4543

9:                                                ; preds = %2, %6
  %10 = phi i32 [ 0, %2 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !4529, metadata !DIExpression()), !dbg !4538
  %11 = getelementptr inbounds [4 x %"class.Cicada::Stm32Uart"*], [4 x %"class.Cicada::Stm32Uart"*]* @_ZN6Cicada9Stm32Uart8instanceE, i32 0, i32 %10, !dbg !4545
  %12 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** %11, align 4, !dbg !4545, !tbaa !1318
  %13 = icmp eq %"class.Cicada::Stm32Uart"* %12, null, !dbg !4548
  call void @llvm.dbg.value(metadata i32 %10, metadata !4529, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4538
  br i1 %13, label %14, label %6, !dbg !4549

14:                                               ; preds = %9
  store %"class.Cicada::Stm32Uart"* %0, %"class.Cicada::Stm32Uart"** %11, align 4, !dbg !4550, !tbaa !1318
  br label %15, !dbg !4552

15:                                               ; preds = %6, %14
  ret void, !dbg !4553
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt(%"class.Cicada::Stm32Uart"* noundef nonnull returned align 8 dereferenceable(192) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, %struct.USART_TypeDef* noundef %4, %struct.USART_TypeDef* noundef %5, i16 noundef zeroext %6, i16 noundef zeroext %7) unnamed_addr #3 align 2 !dbg !4554 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4556, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i8* %1, metadata !4557, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i8* %2, metadata !4558, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i64 %3, metadata !4559, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %4, metadata !4560, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %5, metadata !4561, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i16 %6, metadata !4562, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i16 %7, metadata !4563, metadata !DIExpression()), !dbg !4564
  %9 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !4565
  %10 = call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_y(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %9, i8* noundef %1, i8* noundef %2, i64 noundef %3) #26, !dbg !4566
  %11 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4565
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %11, align 8, !dbg !4565, !tbaa !1408
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 0, i32 1, i32 0, !dbg !4565
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [12 x i8*] }, { [26 x i8*], [12 x i8*] }* @_ZTVN6Cicada9Stm32UartE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %12, align 4, !dbg !4565, !tbaa !1408
  %13 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 1, !dbg !4567
  store i8 0, i8* %13, align 8, !dbg !4567, !tbaa !4124
  %14 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, !dbg !4568
  %15 = bitcast %struct.__UART_HandleTypeDef* %14 to i8*, !dbg !4568
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(72) %15, i8 0, i32 72, i1 false), !dbg !4568
  %16 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 3, !dbg !4569
  store %struct.USART_TypeDef* %5, %struct.USART_TypeDef** %16, align 4, !dbg !4569, !tbaa !4231
  %17 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 4, !dbg !4570
  store i16 %6, i16* %17, align 8, !dbg !4570, !tbaa !4251
  %18 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 5, !dbg !4571
  store i16 %7, i16* %18, align 2, !dbg !4571, !tbaa !4267
  %19 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 6, !dbg !4572
  store i32 0, i32* %19, align 4, !dbg !4572, !tbaa !4229
  call void @_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0, %struct.USART_TypeDef* noundef %4), !dbg !4573
  ret %"class.Cicada::Stm32Uart"* %0, !dbg !4575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly willreturn
define dso_local noundef %"class.Cicada::Stm32Uart"* @_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef(%struct.USART_TypeDef* noundef readnone %0) local_unnamed_addr #16 align 2 !dbg !4576 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !4578, metadata !DIExpression()), !dbg !4584
  call void @llvm.dbg.value(metadata i32 0, metadata !4579, metadata !DIExpression()), !dbg !4585
  br label %5, !dbg !4586

2:                                                ; preds = %16
  %3 = add nuw nsw i32 %7, 1, !dbg !4587
  call void @llvm.dbg.value(metadata i32 %3, metadata !4579, metadata !DIExpression()), !dbg !4585
  call void @llvm.dbg.value(metadata i32 %7, metadata !4579, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4585
  %4 = icmp eq i32 %3, 4, !dbg !4588
  br i1 %4, label %19, label %5, !dbg !4586, !llvm.loop !4589

5:                                                ; preds = %1, %2
  %6 = phi %"class.Cicada::Stm32Uart"* [ undef, %1 ], [ %18, %2 ]
  %7 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !4579, metadata !DIExpression()), !dbg !4585
  %8 = getelementptr inbounds [4 x %"class.Cicada::Stm32Uart"*], [4 x %"class.Cicada::Stm32Uart"*]* @_ZN6Cicada9Stm32Uart8instanceE, i32 0, i32 %7, !dbg !4591
  %9 = load %"class.Cicada::Stm32Uart"*, %"class.Cicada::Stm32Uart"** %8, align 4, !dbg !4591, !tbaa !1318
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %9, metadata !4581, metadata !DIExpression()), !dbg !4592
  %10 = icmp eq %"class.Cicada::Stm32Uart"* %9, null, !dbg !4593
  br i1 %10, label %15, label %11, !dbg !4595

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %9, i32 0, i32 2, i32 0, !dbg !4596
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !4596, !tbaa !4152
  %14 = icmp eq %struct.USART_TypeDef* %13, %0, !dbg !4597
  br i1 %14, label %16, label %15, !dbg !4598

15:                                               ; preds = %11, %5
  br label %16, !dbg !4599

16:                                               ; preds = %11, %15
  %17 = phi i1 [ true, %15 ], [ false, %11 ]
  %18 = phi %"class.Cicada::Stm32Uart"* [ %6, %15 ], [ %9, %11 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !4579, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4585
  br i1 %17, label %2, label %19

19:                                               ; preds = %2, %16
  %20 = phi %"class.Cicada::Stm32Uart"* [ null, %2 ], [ %18, %16 ]
  ret %"class.Cicada::Stm32Uart"* %20, !dbg !4600
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada9Stm32Uart15handleInterruptEv(%"class.Cicada::Stm32Uart"* noundef nonnull align 8 dereferenceable(192) %0) local_unnamed_addr #4 align 2 !dbg !4601 {
  call void @llvm.dbg.value(metadata %"class.Cicada::Stm32Uart"* %0, metadata !4603, metadata !DIExpression()), !dbg !4604
  %2 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, !dbg !4605
  call void @_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %2) #26, !dbg !4605
  %3 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 0, i32 2, !dbg !4606
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %3 to %"class.Cicada::CircularBuffer"*, !dbg !4606
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !4608
  %6 = icmp eq i64 %5, 0, !dbg !4606
  br i1 %6, label %7, label %13, !dbg !4609

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.Cicada::Stm32Uart", %"class.Cicada::Stm32Uart"* %0, i32 0, i32 2, i32 0, !dbg !4610
  %9 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %8, align 4, !dbg !4610, !tbaa !4152
  %10 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %9, i32 0, i32 3, !dbg !4610
  %11 = load volatile i32, i32* %10, align 4, !dbg !4610, !tbaa !4297
  %12 = and i32 %11, -129, !dbg !4610
  store volatile i32 %12, i32* %10, align 4, !dbg !4610, !tbaa !4297
  br label %13, !dbg !4610

13:                                               ; preds = %7, %1
  ret void, !dbg !4611
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #3 comdat align 2 !dbg !4612 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4615, metadata !DIExpression()), !dbg !4617
  call void @llvm.trap() #28, !dbg !4618
  unreachable, !dbg !4618
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada14BufferedSerial14bytesAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4619 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4621, metadata !DIExpression()), !dbg !4624
  call void @_Z18eDisableInterruptsv() #26, !dbg !4625
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4626
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !4626
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !4627
  call void @llvm.dbg.value(metadata i64 %4, metadata !4623, metadata !DIExpression()), !dbg !4624
  call void @_Z17eEnableInterruptsv() #26, !dbg !4628
  ret i64 %4, !dbg !4629
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZNK6Cicada14BufferedSerial14spaceAvailableEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4630 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4632, metadata !DIExpression()), !dbg !4634
  call void @_Z18eDisableInterruptsv() #26, !dbg !4635
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !4636
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !4636
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !4637
  call void @llvm.dbg.value(metadata i64 %4, metadata !4633, metadata !DIExpression()), !dbg !4634
  call void @_Z17eEnableInterruptsv() #26, !dbg !4638
  ret i64 %4, !dbg !4639
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial4readEPhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef writeonly %1, i64 noundef %2) unnamed_addr #4 align 2 !dbg !4640 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4642, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.value(metadata i8* %1, metadata !4643, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.value(metadata i64 %2, metadata !4644, metadata !DIExpression()), !dbg !4647
  %4 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !4648
  %5 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %4, align 8, !dbg !4648, !tbaa !1408
  %6 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, i32 2, !dbg !4648
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %6, align 4, !dbg !4648
  %8 = call noundef i64 %7(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4648
  call void @llvm.dbg.value(metadata i64 %8, metadata !4645, metadata !DIExpression()), !dbg !4647
  %9 = icmp ult i64 %8, %2, !dbg !4649
  %10 = select i1 %9, i64 %8, i64 %2, !dbg !4651
  call void @llvm.dbg.value(metadata i64 %10, metadata !4644, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.value(metadata i64 0, metadata !4646, metadata !DIExpression()), !dbg !4647
  %11 = icmp eq i64 %10, 0, !dbg !4652
  br i1 %11, label %24, label %12, !dbg !4653

12:                                               ; preds = %3
  %13 = bitcast %"class.Cicada::BufferedSerial"* %0 to i8 (%"class.Cicada::BufferedSerial"*)***
  br label %14, !dbg !4653

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %20, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !4646, metadata !DIExpression()), !dbg !4647
  %16 = load i8 (%"class.Cicada::BufferedSerial"*)**, i8 (%"class.Cicada::BufferedSerial"*)*** %13, align 8, !dbg !4654, !tbaa !1408
  %17 = getelementptr inbounds i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %16, i32 7, !dbg !4654
  %18 = load i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %17, align 4, !dbg !4654
  %19 = call noundef zeroext i8 %18(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4654
  %20 = add nuw i64 %15, 1, !dbg !4656
  call void @llvm.dbg.value(metadata i64 %20, metadata !4646, metadata !DIExpression()), !dbg !4647
  %21 = trunc i64 %15 to i32, !dbg !4657
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !4657
  store i8 %19, i8* %22, align 1, !dbg !4658, !tbaa !1444
  %23 = icmp ult i64 %20, %10, !dbg !4652
  br i1 %23, label %14, label %24, !dbg !4653, !llvm.loop !4659

24:                                               ; preds = %14, %3
  %25 = phi i64 [ 0, %3 ], [ %20, %14 ], !dbg !4647
  ret i64 %25, !dbg !4661
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial5writeEPKhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef readonly %1, i64 noundef %2) unnamed_addr #4 align 2 !dbg !4662 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4664, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i8* %1, metadata !4665, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i64 %2, metadata !4666, metadata !DIExpression()), !dbg !4669
  %4 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !4670
  %5 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %4, align 8, !dbg !4670, !tbaa !1408
  %6 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, i32 3, !dbg !4670
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %6, align 4, !dbg !4670
  %8 = call noundef i64 %7(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4670
  call void @llvm.dbg.value(metadata i64 %8, metadata !4667, metadata !DIExpression()), !dbg !4669
  %9 = icmp ult i64 %8, %2, !dbg !4671
  %10 = select i1 %9, i64 %8, i64 %2, !dbg !4673
  call void @llvm.dbg.value(metadata i64 %10, metadata !4666, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i64 0, metadata !4668, metadata !DIExpression()), !dbg !4669
  %11 = icmp eq i64 %10, 0, !dbg !4674
  br i1 %11, label %19, label %12, !dbg !4675

12:                                               ; preds = %3, %12
  %13 = phi i64 [ %14, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i64 %13, metadata !4668, metadata !DIExpression()), !dbg !4669
  %14 = add nuw i64 %13, 1, !dbg !4676
  call void @llvm.dbg.value(metadata i64 %14, metadata !4668, metadata !DIExpression()), !dbg !4669
  %15 = trunc i64 %13 to i32, !dbg !4678
  %16 = getelementptr inbounds i8, i8* %1, i32 %15, !dbg !4678
  %17 = load i8, i8* %16, align 1, !dbg !4678, !tbaa !1444
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %17), !dbg !4679
  %18 = icmp ult i64 %14, %10, !dbg !4674
  br i1 %18, label %12, label %19, !dbg !4675, !llvm.loop !4680

19:                                               ; preds = %12, %3
  %20 = phi i64 [ 0, %3 ], [ %14, %12 ], !dbg !4669
  %21 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !4682
  %22 = bitcast %"class.Cicada::ICommDevice"* %21 to void (%"class.Cicada::ICommDevice"*)***, !dbg !4682
  %23 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %22, align 4, !dbg !4682, !tbaa !1408
  %24 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %23, i32 9, !dbg !4682
  %25 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %24, align 4, !dbg !4682
  call void %25(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %21) #26, !dbg !4682
  ret i64 %20, !dbg !4683
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i8 @_ZN6Cicada14BufferedSerial4readEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4684 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4686, metadata !DIExpression()), !dbg !4688
  call void @_Z18eDisableInterruptsv() #26, !dbg !4689
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4690
  %3 = call noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !4691
  call void @llvm.dbg.value(metadata i8 %3, metadata !4687, metadata !DIExpression()), !dbg !4688
  call void @_Z17eEnableInterruptsv() #26, !dbg !4692
  ret i8 %3, !dbg !4693
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial5writeEPKh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef readonly %1) unnamed_addr #4 align 2 !dbg !4694 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4696, metadata !DIExpression()), !dbg !4700
  call void @llvm.dbg.value(metadata i8* %1, metadata !4697, metadata !DIExpression()), !dbg !4700
  %3 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***, !dbg !4701
  %4 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %3, align 8, !dbg !4701, !tbaa !1408
  %5 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %4, i32 3, !dbg !4701
  %6 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %5, align 4, !dbg !4701
  %7 = call noundef i64 %6(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4701
  call void @llvm.dbg.value(metadata i64 %7, metadata !4698, metadata !DIExpression()), !dbg !4700
  call void @llvm.dbg.value(metadata i64 0, metadata !4699, metadata !DIExpression()), !dbg !4700
  %8 = load i8, i8* %1, align 1, !dbg !4702, !tbaa !1444
  %9 = icmp ne i8 %8, 0, !dbg !4703
  %10 = icmp ne i64 %7, 0, !dbg !4704
  %11 = and i1 %9, %10, !dbg !4704
  br i1 %11, label %12, label %22, !dbg !4705

12:                                               ; preds = %2, %12
  %13 = phi i8 [ %18, %12 ], [ %8, %2 ]
  %14 = phi i64 [ %15, %12 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i64 %14, metadata !4699, metadata !DIExpression()), !dbg !4700
  %15 = add nuw i64 %14, 1, !dbg !4706
  call void @llvm.dbg.value(metadata i64 %15, metadata !4699, metadata !DIExpression()), !dbg !4700
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %13), !dbg !4708
  %16 = trunc i64 %15 to i32, !dbg !4702
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !4702
  %18 = load i8, i8* %17, align 1, !dbg !4702, !tbaa !1444
  %19 = icmp ne i8 %18, 0, !dbg !4703
  %20 = icmp ult i64 %15, %7, !dbg !4704
  %21 = select i1 %19, i1 %20, i1 false, !dbg !4704
  br i1 %21, label %12, label %22, !dbg !4705, !llvm.loop !4709

22:                                               ; preds = %12, %2
  %23 = phi i64 [ 0, %2 ], [ %15, %12 ], !dbg !4700
  %24 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !4711
  %25 = bitcast %"class.Cicada::ICommDevice"* %24 to void (%"class.Cicada::ICommDevice"*)***, !dbg !4711
  %26 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %25, align 4, !dbg !4711, !tbaa !1408
  %27 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %26, i32 9, !dbg !4711
  %28 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %27, align 4, !dbg !4711
  call void %28(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %24) #26, !dbg !4711
  ret i64 %23, !dbg !4712
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial5writeEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1) unnamed_addr #4 align 2 !dbg !4713 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4715, metadata !DIExpression()), !dbg !4717
  call void @llvm.dbg.value(metadata i8 %1, metadata !4716, metadata !DIExpression()), !dbg !4717
  call void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1), !dbg !4718
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !4719
  %4 = bitcast %"class.Cicada::ICommDevice"* %3 to void (%"class.Cicada::ICommDevice"*)***, !dbg !4719
  %5 = load void (%"class.Cicada::ICommDevice"*)**, void (%"class.Cicada::ICommDevice"*)*** %4, align 4, !dbg !4719, !tbaa !1408
  %6 = getelementptr inbounds void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %5, i32 9, !dbg !4719
  %7 = load void (%"class.Cicada::ICommDevice"*)*, void (%"class.Cicada::ICommDevice"*)** %6, align 4, !dbg !4719
  call void %7(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3) #26, !dbg !4719
  ret void, !dbg !4720
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef zeroext i1 @_ZNK6Cicada14BufferedSerial11canReadLineEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4721 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4723, metadata !DIExpression()), !dbg !4725
  call void @_Z18eDisableInterruptsv() #26, !dbg !4726
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4727
  %3 = call noundef zeroext i16 @_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !4728
  call void @llvm.dbg.value(metadata i16 %3, metadata !4724, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4725
  call void @_Z17eEnableInterruptsv() #26, !dbg !4729
  %4 = icmp ne i16 %3, 0, !dbg !4730
  ret i1 %4, !dbg !4731
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial8readLineEPhy(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8* nocapture noundef writeonly %1, i64 noundef %2) unnamed_addr #4 align 2 !dbg !4732 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4734, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i8* %1, metadata !4735, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i64 %2, metadata !4736, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i64 0, metadata !4737, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i8 0, metadata !4738, metadata !DIExpression()), !dbg !4739
  %4 = icmp eq i64 %2, 0, !dbg !4740
  br i1 %4, label %39, label %5, !dbg !4742

5:                                                ; preds = %3
  %6 = bitcast %"class.Cicada::BufferedSerial"* %0 to i64 (%"class.Cicada::BufferedSerial"*)***
  call void @llvm.dbg.value(metadata i8 0, metadata !4738, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i64 0, metadata !4737, metadata !DIExpression()), !dbg !4739
  %7 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %6, align 8, !dbg !4743, !tbaa !1408
  %8 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %7, i32 2, !dbg !4743
  %9 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %8, align 4, !dbg !4743
  %10 = call noundef i64 %9(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4743
  %11 = icmp eq i64 %10, 0, !dbg !4743
  br i1 %11, label %35, label %12, !dbg !4744

12:                                               ; preds = %5
  %13 = bitcast %"class.Cicada::BufferedSerial"* %0 to i8 (%"class.Cicada::BufferedSerial"*)***
  %14 = add i64 %2, -1
  br label %15, !dbg !4744

15:                                               ; preds = %12, %26
  %16 = phi i64 [ 0, %12 ], [ %27, %26 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !4737, metadata !DIExpression()), !dbg !4739
  %17 = load i8 (%"class.Cicada::BufferedSerial"*)**, i8 (%"class.Cicada::BufferedSerial"*)*** %13, align 8, !dbg !4745, !tbaa !1408
  %18 = getelementptr inbounds i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %17, i32 7, !dbg !4745
  %19 = load i8 (%"class.Cicada::BufferedSerial"*)*, i8 (%"class.Cicada::BufferedSerial"*)** %18, align 4, !dbg !4745
  %20 = call noundef zeroext i8 %19(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4745
  call void @llvm.dbg.value(metadata i8 %20, metadata !4738, metadata !DIExpression()), !dbg !4739
  %21 = icmp ult i64 %16, %14, !dbg !4747
  br i1 %21, label %22, label %26, !dbg !4749

22:                                               ; preds = %15
  %23 = add i64 %16, 1, !dbg !4750
  call void @llvm.dbg.value(metadata i64 %23, metadata !4737, metadata !DIExpression()), !dbg !4739
  %24 = trunc i64 %16 to i32, !dbg !4752
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !4752
  store i8 %20, i8* %25, align 1, !dbg !4753, !tbaa !1444
  br label %26, !dbg !4754

26:                                               ; preds = %22, %15
  %27 = phi i64 [ %23, %22 ], [ %16, %15 ], !dbg !4739
  call void @llvm.dbg.value(metadata i8 %20, metadata !4738, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.value(metadata i64 %27, metadata !4737, metadata !DIExpression()), !dbg !4739
  %28 = load i64 (%"class.Cicada::BufferedSerial"*)**, i64 (%"class.Cicada::BufferedSerial"*)*** %6, align 8, !dbg !4743, !tbaa !1408
  %29 = getelementptr inbounds i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %28, i32 2, !dbg !4743
  %30 = load i64 (%"class.Cicada::BufferedSerial"*)*, i64 (%"class.Cicada::BufferedSerial"*)** %29, align 4, !dbg !4743
  %31 = call noundef i64 %30(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) #26, !dbg !4743
  %32 = icmp ne i64 %31, 0, !dbg !4743
  %33 = icmp ne i8 %20, 10, !dbg !4755
  %34 = and i1 %33, %32, !dbg !4755
  br i1 %34, label %15, label %35, !dbg !4744, !llvm.loop !4756

35:                                               ; preds = %26, %5
  %36 = phi i64 [ 0, %5 ], [ %27, %26 ], !dbg !4739
  %37 = trunc i64 %36 to i32, !dbg !4758
  %38 = getelementptr inbounds i8, i8* %1, i32 %37, !dbg !4758
  store i8 0, i8* %38, align 1, !dbg !4759, !tbaa !1444
  br label %39, !dbg !4760

39:                                               ; preds = %3, %35
  %40 = phi i64 [ %36, %35 ], [ 0, %3 ], !dbg !4739
  ret i64 %40, !dbg !4761
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4762 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4764, metadata !DIExpression()), !dbg !4765
  call void @_Z18eDisableInterruptsv() #26, !dbg !4766
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4767
  call void @_ZN6Cicada18LineCircularBuffer5flushEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2), !dbg !4768
  call void @_Z17eEnableInterruptsv() #26, !dbg !4769
  ret void, !dbg !4770
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial14readBufferSizeEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4771 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4773, metadata !DIExpression()), !dbg !4774
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4775
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !4775
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !4776
  ret i64 %4, !dbg !4777
}

; Function Attrs: mustprogress noinline nounwind
define dso_local noundef i64 @_ZN6Cicada14BufferedSerial15writeBufferSizeEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) unnamed_addr #4 align 2 !dbg !4778 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4780, metadata !DIExpression()), !dbg !4781
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !4782
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %2 to %"class.Cicada::CircularBuffer"*, !dbg !4782
  %4 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !4783
  ret i64 %4, !dbg !4784
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::BufferedSerial"* @_ZThn4_N6Cicada14BufferedSerialD1Ev(%"class.Cicada::BufferedSerial"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !4785 {
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 -1, i32 2, i32 1, !dbg !4786
  %3 = bitcast i16* %2 to %"class.Cicada::BufferedSerial"*, !dbg !4786
  %4 = tail call noundef %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialD2Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %3) #26, !dbg !4786
  ret %"class.Cicada::BufferedSerial"* undef, !dbg !4786
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !4787 {
  %2 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 -1, i32 2, i32 1, !dbg !4788
  %3 = bitcast i16* %2 to %"class.Cicada::BufferedSerial"*, !dbg !4788
  tail call void @_ZN6Cicada14BufferedSerialD0Ev(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %3) #26, !dbg !4788
  ret void, !dbg !4788
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE4sizeEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !4789 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4791, metadata !DIExpression()), !dbg !4792
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !4793
  %3 = load i64, i64* %2, align 8, !dbg !4793, !tbaa !4794
  ret i64 %3, !dbg !4795
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBuffer5flushEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #4 comdat align 2 !dbg !4796 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !4798, metadata !DIExpression()), !dbg !4800
  %2 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !4801
  store i16 0, i16* %2, align 4, !dbg !4802, !tbaa !4803
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !4805
  call void @_ZN6Cicada14CircularBufferIcE5flushEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3), !dbg !4805
  ret void, !dbg !4806
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE5flushEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !4807 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4809, metadata !DIExpression()), !dbg !4810
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 2, !dbg !4811
  %3 = bitcast i64* %2 to i8*, !dbg !4812
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 24, i1 false), !dbg !4813
  ret void, !dbg !4812
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i16 @_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) local_unnamed_addr #4 comdat align 2 !dbg !4814 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !4816, metadata !DIExpression()), !dbg !4818
  %2 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !4819
  %3 = load i16, i16* %2, align 4, !dbg !4819, !tbaa !4803
  ret i16 %3, !dbg !4820
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial12copyToBufferEh(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0, i8 noundef zeroext %1) local_unnamed_addr #4 align 2 !dbg !4821 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4823, metadata !DIExpression()), !dbg !4825
  call void @llvm.dbg.value(metadata i8 %1, metadata !4824, metadata !DIExpression()), !dbg !4825
  call void @_Z18eDisableInterruptsv() #26, !dbg !4826
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !4827
  call void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %3, i8 noundef zeroext %1), !dbg !4828
  call void @_Z17eEnableInterruptsv() #26, !dbg !4829
  ret void, !dbg !4830
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8 noundef zeroext %1) unnamed_addr #4 comdat align 2 !dbg !4831 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !4833, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.value(metadata i8 %1, metadata !4834, metadata !DIExpression()), !dbg !4835
  %3 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !4836
  call void @_ZN6Cicada14CircularBufferIcE4pushEc(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %3, i8 noundef zeroext %1), !dbg !4836
  %4 = icmp eq i8 %1, 10, !dbg !4837
  br i1 %4, label %5, label %9, !dbg !4839

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !4840
  %7 = load i16, i16* %6, align 4, !dbg !4842, !tbaa !4803
  %8 = add i16 %7, 1, !dbg !4842
  store i16 %8, i16* %6, align 4, !dbg !4842, !tbaa !4803
  br label %9, !dbg !4843

9:                                                ; preds = %5, %2
  ret void, !dbg !4844
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE4pushEc(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i8 noundef zeroext %1) unnamed_addr #4 comdat align 2 !dbg !4845 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4847, metadata !DIExpression()), !dbg !4849
  call void @llvm.dbg.value(metadata i8 %1, metadata !4848, metadata !DIExpression()), !dbg !4849
  %3 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6, !dbg !4850
  %4 = load i8*, i8** %3, align 8, !dbg !4850, !tbaa !4851
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 2, !dbg !4852
  %6 = load i64, i64* %5, align 8, !dbg !4852, !tbaa !4853
  %7 = trunc i64 %6 to i32, !dbg !4850
  %8 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4850
  store i8 %1, i8* %8, align 1, !dbg !4854, !tbaa !1444
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %5), !dbg !4855
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !4856
  %10 = load i64, i64* %9, align 8, !dbg !4856, !tbaa !4460
  %11 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !4858
  %12 = load i64, i64* %11, align 8, !dbg !4858, !tbaa !4794
  %13 = icmp ult i64 %10, %12, !dbg !4859
  br i1 %13, label %14, label %16, !dbg !4860

14:                                               ; preds = %2
  %15 = add i64 %10, 1, !dbg !4861
  store i64 %15, i64* %9, align 8, !dbg !4861, !tbaa !4460
  br label %16, !dbg !4862

16:                                               ; preds = %14, %2
  ret void, !dbg !4863
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %1) local_unnamed_addr #4 comdat align 2 !dbg !4864 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4866, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i64* %1, metadata !4867, metadata !DIExpression()), !dbg !4868
  %3 = load i64, i64* %1, align 8, !dbg !4869, !tbaa !4870
  %4 = add i64 %3, 1, !dbg !4869
  store i64 %4, i64* %1, align 8, !dbg !4869, !tbaa !4870
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !4871
  %6 = load i64, i64* %5, align 8, !dbg !4871, !tbaa !4794
  %7 = icmp ult i64 %4, %6, !dbg !4873
  %8 = select i1 %7, i64 %4, i64 0, !dbg !4874
  store i64 %8, i64* %1, align 8, !dbg !4868
  ret void, !dbg !4875
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #4 comdat align 2 !dbg !4876 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !4878, metadata !DIExpression()), !dbg !4880
  %2 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !4881
  %3 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4pullEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %2), !dbg !4881
  call void @llvm.dbg.value(metadata i8 %3, metadata !4879, metadata !DIExpression()), !dbg !4880
  %4 = icmp eq i8 %3, 10, !dbg !4882
  br i1 %4, label %5, label %9, !dbg !4884

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !4885
  %7 = load i16, i16* %6, align 4, !dbg !4887, !tbaa !4803
  %8 = add i16 %7, -1, !dbg !4887
  store i16 %8, i16* %6, align 4, !dbg !4887, !tbaa !4803
  br label %9, !dbg !4888

9:                                                ; preds = %5, %1
  ret i8 %3, !dbg !4889
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4pullEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !4890 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4892, metadata !DIExpression()), !dbg !4894
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6, !dbg !4895
  %3 = load i8*, i8** %2, align 8, !dbg !4895, !tbaa !4851
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 3, !dbg !4896
  %5 = load i64, i64* %4, align 8, !dbg !4896, !tbaa !4897
  %6 = trunc i64 %5 to i32, !dbg !4895
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !4895
  %8 = load i8, i8* %7, align 1, !dbg !4895, !tbaa !1444
  call void @llvm.dbg.value(metadata i8 %8, metadata !4893, metadata !DIExpression()), !dbg !4894
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %4), !dbg !4898
  %9 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !4899
  %10 = load i64, i64* %9, align 8, !dbg !4899, !tbaa !4460
  %11 = icmp eq i64 %10, 0, !dbg !4901
  br i1 %11, label %14, label %12, !dbg !4902

12:                                               ; preds = %1
  %13 = add i64 %10, -1, !dbg !4903
  store i64 %13, i64* %9, align 8, !dbg !4903, !tbaa !4460
  br label %14, !dbg !4904

14:                                               ; preds = %12, %1
  ret i8 %8, !dbg !4905
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !4906 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4908, metadata !DIExpression()), !dbg !4909
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !4910
  %3 = load i64, i64* %2, align 8, !dbg !4910, !tbaa !4794
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !4911
  %5 = load i64, i64* %4, align 8, !dbg !4911, !tbaa !4460
  %6 = sub i64 %3, %5, !dbg !4912
  ret i64 %6, !dbg !4913
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_yy(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3, i64 noundef %4) unnamed_addr #3 align 2 !dbg !4914 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !4916, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata i8* %1, metadata !4917, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata i8* %2, metadata !4918, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata i64 %3, metadata !4919, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata i64 %4, metadata !4920, metadata !DIExpression()), !dbg !4921
  %6 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !4922
  %7 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %6) #26, !dbg !4923
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !4922
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %8, align 8, !dbg !4922, !tbaa !1408
  %9 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !4922
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %9, align 4, !dbg !4922, !tbaa !1408
  %10 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !4924
  %11 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %10, i8* noundef %1, i64 noundef %3), !dbg !4924
  %12 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !4925
  %13 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %12, i8* noundef %2, i64 noundef %4), !dbg !4925
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !4926
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull returned align 4 dereferenceable(8) %0) unnamed_addr #3 comdat align 2 !dbg !4927 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !4930, metadata !DIExpression()), !dbg !4931
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, !dbg !4932
  %3 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %2) #26, !dbg !4932
  %4 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 1, !dbg !4932
  %5 = call noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %4) #26, !dbg !4932
  %6 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 0, i32 0, i32 0, !dbg !4932
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada15IBufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 4, !dbg !4932, !tbaa !1408
  %7 = getelementptr %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %4, i32 0, i32 0, !dbg !4932
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada15IBufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %7, align 4, !dbg !4932, !tbaa !1408
  ret %"class.Cicada::IBufferedSerial"* %0, !dbg !4932
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull returned align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #3 comdat align 2 !dbg !4933 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !4935, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i8* %1, metadata !4936, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i64 %2, metadata !4937, metadata !DIExpression()), !dbg !4938
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !4939
  %5 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcEC2EPcy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4, i8* noundef %1, i64 noundef %2), !dbg !4940
  %6 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 0, i32 0, !dbg !4939
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada18LineCircularBufferE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %6, align 8, !dbg !4939, !tbaa !1408
  %7 = getelementptr inbounds %"class.Cicada::LineCircularBuffer", %"class.Cicada::LineCircularBuffer"* %0, i32 0, i32 1, !dbg !4941
  store i16 0, i16* %7, align 4, !dbg !4941, !tbaa !4803
  ret %"class.Cicada::LineCircularBuffer"* %0, !dbg !4942
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcEC2EPcy(%"class.Cicada::CircularBuffer"* noundef nonnull returned align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #3 comdat align 2 !dbg !4943 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !4945, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.value(metadata i8* %1, metadata !4946, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.value(metadata i64 %2, metadata !4947, metadata !DIExpression()), !dbg !4948
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 0, !dbg !4949
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6Cicada14CircularBufferIcEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !dbg !4949, !tbaa !1408
  %5 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 2, !dbg !4950
  %6 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !4951
  %7 = bitcast i64* %5 to i8*, !dbg !4951
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false), !dbg !4952
  store i64 %2, i64* %6, align 8, !dbg !4951, !tbaa !4794
  %8 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6, !dbg !4953
  store i8* %1, i8** %8, align 8, !dbg !4953, !tbaa !4851
  ret %"class.Cicada::CircularBuffer"* %0, !dbg !4954
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada18LineCircularBufferD0Ev(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) unnamed_addr #3 comdat align 2 !dbg !4955 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !4958, metadata !DIExpression()), !dbg !4959
  %2 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !4960
  %3 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(46) %2) #26, !dbg !4960
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to i8*, !dbg !4960
  call void @_ZdlPv(i8* noundef %4) #27, !dbg !4960
  ret void, !dbg !4960
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada18LineCircularBuffer4pushEPKcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !4961 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !4963, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata i8* %1, metadata !4964, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata i64 %2, metadata !4965, metadata !DIExpression()), !dbg !4967
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !4968
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !4968
  %6 = icmp ult i64 %5, %2, !dbg !4970
  br i1 %6, label %7, label %9, !dbg !4971

7:                                                ; preds = %3
  %8 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !4972
  call void @llvm.dbg.value(metadata i64 %8, metadata !4965, metadata !DIExpression()), !dbg !4967
  br label %9, !dbg !4973

9:                                                ; preds = %7, %3
  %10 = phi i64 [ %8, %7 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !4965, metadata !DIExpression()), !dbg !4967
  call void @llvm.dbg.value(metadata i64 0, metadata !4966, metadata !DIExpression()), !dbg !4967
  %11 = icmp eq i64 %10, 0, !dbg !4974
  br i1 %11, label %24, label %12, !dbg !4975

12:                                               ; preds = %9
  %13 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to void (%"class.Cicada::LineCircularBuffer"*, i8)***
  br label %14, !dbg !4975

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !4966, metadata !DIExpression()), !dbg !4967
  %16 = add nuw i64 %15, 1, !dbg !4976
  call void @llvm.dbg.value(metadata i64 %16, metadata !4966, metadata !DIExpression()), !dbg !4967
  %17 = trunc i64 %15 to i32, !dbg !4978
  %18 = getelementptr inbounds i8, i8* %1, i32 %17, !dbg !4978
  %19 = load i8, i8* %18, align 1, !dbg !4978, !tbaa !1444
  %20 = load void (%"class.Cicada::LineCircularBuffer"*, i8)**, void (%"class.Cicada::LineCircularBuffer"*, i8)*** %13, align 8, !dbg !4979, !tbaa !1408
  %21 = getelementptr inbounds void (%"class.Cicada::LineCircularBuffer"*, i8)*, void (%"class.Cicada::LineCircularBuffer"*, i8)** %20, i32 3, !dbg !4979
  %22 = load void (%"class.Cicada::LineCircularBuffer"*, i8)*, void (%"class.Cicada::LineCircularBuffer"*, i8)** %21, align 4, !dbg !4979
  call void %22(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8 noundef zeroext %19) #26, !dbg !4979
  %23 = icmp ult i64 %16, %10, !dbg !4974
  br i1 %23, label %14, label %24, !dbg !4975, !llvm.loop !4980

24:                                               ; preds = %14, %9
  %25 = phi i64 [ 0, %9 ], [ %10, %14 ], !dbg !4967
  ret i64 %25, !dbg !4982
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada18LineCircularBuffer4pullEPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !4983 {
  call void @llvm.dbg.value(metadata %"class.Cicada::LineCircularBuffer"* %0, metadata !4985, metadata !DIExpression()), !dbg !4989
  call void @llvm.dbg.value(metadata i8* %1, metadata !4986, metadata !DIExpression()), !dbg !4989
  call void @llvm.dbg.value(metadata i64 %2, metadata !4987, metadata !DIExpression()), !dbg !4989
  %4 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to %"class.Cicada::CircularBuffer"*, !dbg !4990
  %5 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !4990
  %6 = icmp ult i64 %5, %2, !dbg !4992
  br i1 %6, label %7, label %9, !dbg !4993

7:                                                ; preds = %3
  %8 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %4), !dbg !4994
  call void @llvm.dbg.value(metadata i64 %8, metadata !4987, metadata !DIExpression()), !dbg !4989
  br label %9, !dbg !4995

9:                                                ; preds = %7, %3
  %10 = phi i64 [ %8, %7 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !4987, metadata !DIExpression()), !dbg !4989
  call void @llvm.dbg.value(metadata i64 0, metadata !4988, metadata !DIExpression()), !dbg !4989
  %11 = icmp eq i64 %10, 0, !dbg !4996
  br i1 %11, label %24, label %12, !dbg !4997

12:                                               ; preds = %9
  %13 = bitcast %"class.Cicada::LineCircularBuffer"* %0 to i8 (%"class.Cicada::LineCircularBuffer"*)***
  br label %14, !dbg !4997

14:                                               ; preds = %12, %14
  %15 = phi i64 [ 0, %12 ], [ %20, %14 ]
  call void @llvm.dbg.value(metadata i64 %15, metadata !4988, metadata !DIExpression()), !dbg !4989
  %16 = load i8 (%"class.Cicada::LineCircularBuffer"*)**, i8 (%"class.Cicada::LineCircularBuffer"*)*** %13, align 8, !dbg !4998, !tbaa !1408
  %17 = getelementptr inbounds i8 (%"class.Cicada::LineCircularBuffer"*)*, i8 (%"class.Cicada::LineCircularBuffer"*)** %16, i32 5, !dbg !4998
  %18 = load i8 (%"class.Cicada::LineCircularBuffer"*)*, i8 (%"class.Cicada::LineCircularBuffer"*)** %17, align 4, !dbg !4998
  %19 = call noundef zeroext i8 %18(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %0) #26, !dbg !4998
  %20 = add nuw i64 %15, 1, !dbg !5000
  call void @llvm.dbg.value(metadata i64 %20, metadata !4988, metadata !DIExpression()), !dbg !4989
  %21 = trunc i64 %15 to i32, !dbg !5001
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !5001
  store i8 %19, i8* %22, align 1, !dbg !5002, !tbaa !1444
  %23 = icmp ult i64 %20, %10, !dbg !4996
  br i1 %23, label %14, label %24, !dbg !4997, !llvm.loop !5003

24:                                               ; preds = %14, %9
  %25 = phi i64 [ 0, %9 ], [ %10, %14 ], !dbg !4989
  ret i64 %25, !dbg !5005
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4readEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5006 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5008, metadata !DIExpression()), !dbg !5009
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6, !dbg !5010
  %3 = load i8*, i8** %2, align 8, !dbg !5010, !tbaa !4851
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 3, !dbg !5011
  %5 = load i64, i64* %4, align 8, !dbg !5011, !tbaa !4897
  %6 = trunc i64 %5 to i32, !dbg !5010
  %7 = getelementptr inbounds i8, i8* %3, i32 %6, !dbg !5010
  %8 = load i8, i8* %7, align 1, !dbg !5010, !tbaa !1444
  ret i8 %8, !dbg !5012
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE7isEmptyEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5013 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5015, metadata !DIExpression()), !dbg !5016
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !5017
  %3 = load i64, i64* %2, align 8, !dbg !5017, !tbaa !4460
  %4 = icmp eq i64 %3, 0, !dbg !5018
  ret i1 %4, !dbg !5019
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE6isFullEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #4 comdat align 2 !dbg !5020 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5022, metadata !DIExpression()), !dbg !5023
  %2 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !5024
  %3 = load i64, i64* %2, align 8, !dbg !5024, !tbaa !4460
  %4 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 5, !dbg !5025
  %5 = load i64, i64* %4, align 8, !dbg !5025, !tbaa !4794
  %6 = icmp eq i64 %3, %5, !dbg !5026
  ret i1 %6, !dbg !5027
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada14CircularBufferIcED0Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) unnamed_addr #3 comdat align 2 !dbg !5028 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5030, metadata !DIExpression()), !dbg !5031
  %2 = call noundef %"class.Cicada::CircularBuffer"* @_ZN6Cicada14CircularBufferIcED2Ev(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #26, !dbg !5032
  %3 = bitcast %"class.Cicada::CircularBuffer"* %0 to i8*, !dbg !5032
  call void @_ZdlPv(i8* noundef %3) #27, !dbg !5032
  ret void, !dbg !5033
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIcE4pushEPKcy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !5034 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5036, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata i8* %1, metadata !5037, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata i64 %2, metadata !5038, metadata !DIExpression()), !dbg !5040
  %4 = bitcast %"class.Cicada::CircularBuffer"* %0 to i64 (%"class.Cicada::CircularBuffer"*)***, !dbg !5041
  %5 = load i64 (%"class.Cicada::CircularBuffer"*)**, i64 (%"class.Cicada::CircularBuffer"*)*** %4, align 8, !dbg !5041, !tbaa !1408
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %5, i32 11, !dbg !5041
  %7 = load i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %6, align 4, !dbg !5041
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #26, !dbg !5041
  %9 = icmp ult i64 %8, %2, !dbg !5043
  br i1 %9, label %10, label %15, !dbg !5044

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer"*)**, i64 (%"class.Cicada::CircularBuffer"*)*** %4, align 8, !dbg !5045, !tbaa !1408
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %11, i32 11, !dbg !5045
  %13 = load i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %12, align 4, !dbg !5045
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #26, !dbg !5045
  call void @llvm.dbg.value(metadata i64 %14, metadata !5038, metadata !DIExpression()), !dbg !5040
  br label %15, !dbg !5046

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !5038, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata i64 0, metadata !5039, metadata !DIExpression()), !dbg !5040
  %17 = icmp eq i64 %16, 0, !dbg !5047
  br i1 %17, label %32, label %18, !dbg !5048

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 2
  br label %21, !dbg !5048

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %23, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !5039, metadata !DIExpression()), !dbg !5040
  %23 = add nuw i64 %22, 1, !dbg !5049
  call void @llvm.dbg.value(metadata i64 %23, metadata !5039, metadata !DIExpression()), !dbg !5040
  %24 = trunc i64 %22 to i32, !dbg !5051
  %25 = getelementptr inbounds i8, i8* %1, i32 %24, !dbg !5051
  %26 = load i8, i8* %25, align 1, !dbg !5051, !tbaa !1444
  %27 = load i8*, i8** %19, align 8, !dbg !5052, !tbaa !4851
  %28 = load i64, i64* %20, align 8, !dbg !5053, !tbaa !4853
  %29 = trunc i64 %28 to i32, !dbg !5052
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !5052
  store i8 %26, i8* %30, align 1, !dbg !5054, !tbaa !1444
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !5055
  %31 = icmp ult i64 %23, %16, !dbg !5047
  br i1 %31, label %21, label %32, !dbg !5048, !llvm.loop !5056

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !5040
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !5058
  %35 = load i64, i64* %34, align 8, !dbg !5059, !tbaa !4460
  %36 = add i64 %35, %33, !dbg !5059
  store i64 %36, i64* %34, align 8, !dbg !5059, !tbaa !4460
  ret i64 %33, !dbg !5060
}

; Function Attrs: mustprogress noinline nounwind
define linkonce_odr dso_local noundef i64 @_ZN6Cicada14CircularBufferIcE4pullEPcy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i8* noundef %1, i64 noundef %2) unnamed_addr #4 comdat align 2 !dbg !5061 {
  call void @llvm.dbg.value(metadata %"class.Cicada::CircularBuffer"* %0, metadata !5063, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata i8* %1, metadata !5064, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata i64 %2, metadata !5065, metadata !DIExpression()), !dbg !5067
  %4 = bitcast %"class.Cicada::CircularBuffer"* %0 to i64 (%"class.Cicada::CircularBuffer"*)***, !dbg !5068
  %5 = load i64 (%"class.Cicada::CircularBuffer"*)**, i64 (%"class.Cicada::CircularBuffer"*)*** %4, align 8, !dbg !5068, !tbaa !1408
  %6 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %5, i32 10, !dbg !5068
  %7 = load i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %6, align 4, !dbg !5068
  %8 = call noundef i64 %7(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #26, !dbg !5068
  %9 = icmp ult i64 %8, %2, !dbg !5070
  br i1 %9, label %10, label %15, !dbg !5071

10:                                               ; preds = %3
  %11 = load i64 (%"class.Cicada::CircularBuffer"*)**, i64 (%"class.Cicada::CircularBuffer"*)*** %4, align 8, !dbg !5072, !tbaa !1408
  %12 = getelementptr inbounds i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %11, i32 10, !dbg !5072
  %13 = load i64 (%"class.Cicada::CircularBuffer"*)*, i64 (%"class.Cicada::CircularBuffer"*)** %12, align 4, !dbg !5072
  %14 = call noundef i64 %13(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0) #26, !dbg !5072
  call void @llvm.dbg.value(metadata i64 %14, metadata !5065, metadata !DIExpression()), !dbg !5067
  br label %15, !dbg !5073

15:                                               ; preds = %10, %3
  %16 = phi i64 [ %14, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i64 %16, metadata !5065, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.value(metadata i64 0, metadata !5066, metadata !DIExpression()), !dbg !5067
  %17 = icmp eq i64 %16, 0, !dbg !5074
  br i1 %17, label %32, label %18, !dbg !5075

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 6
  %20 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 3
  br label %21, !dbg !5075

21:                                               ; preds = %18, %21
  %22 = phi i64 [ 0, %18 ], [ %28, %21 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !5066, metadata !DIExpression()), !dbg !5067
  %23 = load i8*, i8** %19, align 8, !dbg !5076, !tbaa !4851
  %24 = load i64, i64* %20, align 8, !dbg !5078, !tbaa !4897
  %25 = trunc i64 %24 to i32, !dbg !5076
  %26 = getelementptr inbounds i8, i8* %23, i32 %25, !dbg !5076
  %27 = load i8, i8* %26, align 1, !dbg !5076, !tbaa !1444
  %28 = add nuw i64 %22, 1, !dbg !5079
  call void @llvm.dbg.value(metadata i64 %28, metadata !5066, metadata !DIExpression()), !dbg !5067
  %29 = trunc i64 %22 to i32, !dbg !5080
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5080
  store i8 %27, i8* %30, align 1, !dbg !5081, !tbaa !1444
  call void @_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %0, i64* noundef nonnull align 8 dereferenceable(8) %20), !dbg !5082
  %31 = icmp ult i64 %28, %16, !dbg !5074
  br i1 %31, label %21, label %32, !dbg !5075, !llvm.loop !5083

32:                                               ; preds = %21, %15
  %33 = phi i64 [ 0, %15 ], [ %16, %21 ], !dbg !5067
  %34 = getelementptr inbounds %"class.Cicada::CircularBuffer", %"class.Cicada::CircularBuffer"* %0, i32 0, i32 4, !dbg !5085
  %35 = load i64, i64* %34, align 8, !dbg !5086, !tbaa !4460
  %36 = sub i64 %35, %33, !dbg !5086
  store i64 %36, i64* %34, align 8, !dbg !5086, !tbaa !4460
  ret i64 %33, !dbg !5087
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada11ICommDeviceC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5088 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !5091, metadata !DIExpression()), !dbg !5092
  %2 = getelementptr inbounds %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %0, i32 0, i32 0, !dbg !5093
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6Cicada11ICommDeviceE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 4, !dbg !5093, !tbaa !1408
  ret %"class.Cicada::ICommDevice"* %0, !dbg !5093
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::ICommDevice"* @_ZN6Cicada7ISerialC2Ev(%"class.Cicada::ICommDevice"* noundef nonnull returned align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5094 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !5097, metadata !DIExpression()), !dbg !5098
  %2 = getelementptr inbounds %"class.Cicada::ICommDevice", %"class.Cicada::ICommDevice"* %0, i32 0, i32 0, !dbg !5099
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN6Cicada7ISerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 4, !dbg !5099, !tbaa !1408
  ret %"class.Cicada::ICommDevice"* %0, !dbg !5099
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %0) unnamed_addr #3 comdat align 2 !dbg !5100 {
  call void @llvm.dbg.value(metadata %"class.Cicada::IBufferedSerial"* %0, metadata !5102, metadata !DIExpression()), !dbg !5103
  call void @llvm.trap() #28, !dbg !5104
  unreachable, !dbg !5104
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local noundef %"class.Cicada::IBufferedSerial"* @_ZThn4_N6Cicada15IBufferedSerialD1Ev(%"class.Cicada::IBufferedSerial"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !5105 {
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 -1, i32 1, !dbg !5106
  %3 = bitcast %"class.Cicada::ICommDevice"* %2 to %"class.Cicada::IBufferedSerial"*, !dbg !5106
  %4 = tail call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialD2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #26, !dbg !5106
  ret %"class.Cicada::IBufferedSerial"* undef, !dbg !5106
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZThn4_N6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef %0) unnamed_addr #3 comdat align 2 !dbg !5107 {
  %2 = getelementptr inbounds %"class.Cicada::IBufferedSerial", %"class.Cicada::IBufferedSerial"* %0, i32 -1, i32 1, !dbg !5108
  %3 = bitcast %"class.Cicada::ICommDevice"* %2 to %"class.Cicada::IBufferedSerial"*, !dbg !5108
  tail call void @_ZN6Cicada15IBufferedSerialD0Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %3) #26, !dbg !5108
  ret void, !dbg !5108
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada7ISerialD0Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5109 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !5111, metadata !DIExpression()), !dbg !5112
  call void @llvm.trap() #28, !dbg !5113
  unreachable, !dbg !5113
}

; Function Attrs: noinline nounwind
define linkonce_odr dso_local void @_ZN6Cicada11ICommDeviceD0Ev(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %0) unnamed_addr #3 comdat align 2 !dbg !5114 {
  call void @llvm.dbg.value(metadata %"class.Cicada::ICommDevice"* %0, metadata !5116, metadata !DIExpression()), !dbg !5117
  call void @llvm.trap() #28, !dbg !5118
  unreachable, !dbg !5118
}

; Function Attrs: noinline nounwind
define dso_local noundef nonnull %"class.Cicada::BufferedSerial"* @_ZN6Cicada14BufferedSerialC2EPcS1_y(%"class.Cicada::BufferedSerial"* noundef nonnull returned align 8 dereferenceable(104) %0, i8* noundef %1, i8* noundef %2, i64 noundef %3) unnamed_addr #3 align 2 !dbg !5119 {
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5121, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i8* %1, metadata !5122, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i8* %2, metadata !5123, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.value(metadata i64 %3, metadata !5124, metadata !DIExpression()), !dbg !5125
  %5 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, !dbg !5126
  %6 = call noundef %"class.Cicada::IBufferedSerial"* @_ZN6Cicada15IBufferedSerialC2Ev(%"class.Cicada::IBufferedSerial"* noundef nonnull align 4 dereferenceable(8) %5) #26, !dbg !5127
  %7 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5126
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %7, align 8, !dbg !5126, !tbaa !1408
  %8 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, i32 0, !dbg !5126
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*], [12 x i8*] }, { [17 x i8*], [12 x i8*] }* @_ZTVN6Cicada14BufferedSerialE, i32 0, inrange i32 1, i32 2) to i32 (...)**), i32 (...)*** %8, align 4, !dbg !5126, !tbaa !1408
  %9 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !5128
  %10 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %9, i8* noundef %1, i64 noundef %3), !dbg !5128
  %11 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !5129
  %12 = call noundef %"class.Cicada::LineCircularBuffer"* @_ZN6Cicada18LineCircularBufferC2EPcy(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %11, i8* noundef %2, i64 noundef %3), !dbg !5129
  ret %"class.Cicada::BufferedSerial"* %0, !dbg !5130
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv(%"class.Cicada::BufferedSerial"* noundef nonnull align 8 dereferenceable(104) %0) local_unnamed_addr #4 align 2 !dbg !5131 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %"class.Cicada::BufferedSerial"* %0, metadata !5133, metadata !DIExpression()), !dbg !5135
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #26, !dbg !5136
  %3 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 0, i32 1, !dbg !5137
  %4 = bitcast %"class.Cicada::ICommDevice"* %3 to i1 (%"class.Cicada::ICommDevice"*, i8*)***, !dbg !5137
  %5 = load i1 (%"class.Cicada::ICommDevice"*, i8*)**, i1 (%"class.Cicada::ICommDevice"*, i8*)*** %4, align 4, !dbg !5137, !tbaa !1408
  %6 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*, i8*)*, i1 (%"class.Cicada::ICommDevice"*, i8*)** %5, i32 7, !dbg !5137
  %7 = load i1 (%"class.Cicada::ICommDevice"*, i8*)*, i1 (%"class.Cicada::ICommDevice"*, i8*)** %6, align 4, !dbg !5137
  call void @llvm.dbg.value(metadata i8* %2, metadata !5134, metadata !DIExpression(DW_OP_deref)), !dbg !5135
  %8 = call noundef zeroext i1 %7(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3, i8* noundef nonnull align 1 dereferenceable(1) %2) #26, !dbg !5137
  br i1 %8, label %9, label %15, !dbg !5139

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 1, !dbg !5140
  %11 = bitcast %"class.Cicada::LineCircularBuffer"* %10 to %"class.Cicada::CircularBuffer"*, !dbg !5140
  %12 = call noundef zeroext i1 @_ZNK6Cicada14CircularBufferIcE6isFullEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %11), !dbg !5141
  br i1 %12, label %15, label %13, !dbg !5142

13:                                               ; preds = %9
  %14 = load i8, i8* %2, align 1, !dbg !5143, !tbaa !1444
  call void @llvm.dbg.value(metadata i8 %14, metadata !5134, metadata !DIExpression()), !dbg !5135
  call void @_ZN6Cicada18LineCircularBuffer4pushEc(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %10, i8 noundef zeroext %14), !dbg !5145
  br label %15, !dbg !5146

15:                                               ; preds = %13, %9, %1
  %16 = getelementptr inbounds %"class.Cicada::BufferedSerial", %"class.Cicada::BufferedSerial"* %0, i32 0, i32 2, !dbg !5147
  %17 = bitcast %"class.Cicada::LineCircularBuffer"* %16 to %"class.Cicada::CircularBuffer"*, !dbg !5147
  %18 = call noundef i64 @_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %17), !dbg !5149
  %19 = icmp eq i64 %18, 0, !dbg !5147
  br i1 %19, label %29, label %20, !dbg !5150

20:                                               ; preds = %15
  %21 = call noundef zeroext i8 @_ZN6Cicada14CircularBufferIcE4readEv(%"class.Cicada::CircularBuffer"* noundef nonnull align 8 dereferenceable(44) %17), !dbg !5151
  %22 = bitcast %"class.Cicada::ICommDevice"* %3 to i1 (%"class.Cicada::ICommDevice"*, i8)***, !dbg !5154
  %23 = load i1 (%"class.Cicada::ICommDevice"*, i8)**, i1 (%"class.Cicada::ICommDevice"*, i8)*** %22, align 4, !dbg !5154, !tbaa !1408
  %24 = getelementptr inbounds i1 (%"class.Cicada::ICommDevice"*, i8)*, i1 (%"class.Cicada::ICommDevice"*, i8)** %23, i32 8, !dbg !5154
  %25 = load i1 (%"class.Cicada::ICommDevice"*, i8)*, i1 (%"class.Cicada::ICommDevice"*, i8)** %24, align 4, !dbg !5154
  %26 = call noundef zeroext i1 %25(%"class.Cicada::ICommDevice"* noundef nonnull align 4 dereferenceable(4) %3, i8 noundef zeroext %21) #26, !dbg !5154
  br i1 %26, label %27, label %29, !dbg !5155

27:                                               ; preds = %20
  %28 = call noundef zeroext i8 @_ZN6Cicada18LineCircularBuffer4pullEv(%"class.Cicada::LineCircularBuffer"* noundef nonnull align 8 dereferenceable(46) %16), !dbg !5156
  br label %29, !dbg !5158

29:                                               ; preds = %20, %27, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #26, !dbg !5159
  ret void, !dbg !5159
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_Z18eDisableInterruptsv() local_unnamed_addr #4 !dbg !5160 {
  call void asm sideeffect "cpsid i", "~{memory}"() #26, !dbg !5161, !srcloc !5164
  ret void, !dbg !5165
}

; Function Attrs: mustprogress noinline nounwind
define dso_local void @_Z17eEnableInterruptsv() local_unnamed_addr #4 !dbg !5166 {
  call void asm sideeffect "cpsie i", "~{memory}"() #26, !dbg !5167, !srcloc !5170
  ret void, !dbg !5171
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Init(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5172 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5176, metadata !DIExpression()), !dbg !5177
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !5178
  br i1 %2, label %27, label %3, !dbg !5180

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5181
  %5 = load volatile i32, i32* %4, align 4, !dbg !5181, !tbaa !5183
  %6 = icmp eq i32 %5, 0, !dbg !5186
  br i1 %6, label %7, label %9, !dbg !5187

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5188
  store i32 0, i32* %8, align 4, !dbg !5190, !tbaa !5191
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5192
  br label %9, !dbg !5193

9:                                                ; preds = %7, %3
  store volatile i32 36, i32* %4, align 4, !dbg !5194, !tbaa !5183
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5195
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !5195, !tbaa !5196
  %12 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %11, i32 0, i32 3, !dbg !5195
  %13 = load volatile i32, i32* %12, align 4, !dbg !5195, !tbaa !3929
  %14 = and i32 %13, -8193, !dbg !5195
  store volatile i32 %14, i32* %12, align 4, !dbg !5195, !tbaa !3929
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5197
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !5198, !tbaa !5196
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 4, !dbg !5198
  %17 = load volatile i32, i32* %16, align 4, !dbg !5198, !tbaa !3812
  %18 = and i32 %17, -18433, !dbg !5198
  store volatile i32 %18, i32* %16, align 4, !dbg !5198, !tbaa !3812
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 5, !dbg !5199
  %20 = load volatile i32, i32* %19, align 4, !dbg !5199, !tbaa !3817
  %21 = and i32 %20, -43, !dbg !5199
  store volatile i32 %21, i32* %19, align 4, !dbg !5199, !tbaa !3817
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 3, !dbg !5200
  %23 = load volatile i32, i32* %22, align 4, !dbg !5200, !tbaa !3929
  %24 = or i32 %23, 8192, !dbg !5200
  store volatile i32 %24, i32* %22, align 4, !dbg !5200, !tbaa !3929
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5201
  store volatile i32 0, i32* %25, align 4, !dbg !5202, !tbaa !5203
  store volatile i32 32, i32* %4, align 4, !dbg !5204, !tbaa !5183
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5205
  store volatile i32 32, i32* %26, align 4, !dbg !5206, !tbaa !5207
  br label %27, !dbg !5208

27:                                               ; preds = %1, %9
  %28 = phi i32 [ 0, %9 ], [ 1, %1 ], !dbg !5177
  ret i32 %28, !dbg !5209
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5210 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5214, metadata !DIExpression()), !dbg !5215
  ret void, !dbg !5216
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* nocapture noundef readonly %0) unnamed_addr #3 !dbg !5217 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5219, metadata !DIExpression()), !dbg !5222
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5223
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !5223, !tbaa !5196
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 4, !dbg !5223
  %5 = load volatile i32, i32* %4, align 4, !dbg !5223, !tbaa !3812
  %6 = and i32 %5, -12289, !dbg !5223
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 2, !dbg !5223
  %8 = load i32, i32* %7, align 4, !dbg !5223, !tbaa !5224
  %9 = or i32 %6, %8, !dbg !5223
  store volatile i32 %9, i32* %4, align 4, !dbg !5223, !tbaa !3812
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !5225
  %11 = load i32, i32* %10, align 4, !dbg !5225, !tbaa !5226
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !5227
  %13 = load i32, i32* %12, align 4, !dbg !5227, !tbaa !5228
  %14 = or i32 %13, %11, !dbg !5229
  %15 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 4, !dbg !5230
  %16 = load i32, i32* %15, align 4, !dbg !5230, !tbaa !5231
  %17 = or i32 %14, %16, !dbg !5232
  call void @llvm.dbg.value(metadata i32 %17, metadata !5220, metadata !DIExpression()), !dbg !5222
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !5233
  %19 = load volatile i32, i32* %18, align 4, !dbg !5233, !tbaa !3929
  %20 = and i32 %19, -5645, !dbg !5233
  %21 = or i32 %17, %20, !dbg !5233
  store volatile i32 %21, i32* %18, align 4, !dbg !5233, !tbaa !3929
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !5234
  %23 = load volatile i32, i32* %22, align 4, !dbg !5234, !tbaa !3817
  %24 = and i32 %23, -769, !dbg !5234
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 5, !dbg !5234
  %26 = load i32, i32* %25, align 4, !dbg !5234, !tbaa !5235
  %27 = or i32 %24, %26, !dbg !5234
  store volatile i32 %27, i32* %22, align 4, !dbg !5234, !tbaa !3817
  %28 = icmp eq %struct.USART_TypeDef* %3, inttoptr (i32 1073821696 to %struct.USART_TypeDef*), !dbg !5236
  br i1 %28, label %29, label %31, !dbg !5238

29:                                               ; preds = %1
  %30 = call i32 @HAL_RCC_GetPCLK2Freq() #26, !dbg !5239
  call void @llvm.dbg.value(metadata i32 %30, metadata !5221, metadata !DIExpression()), !dbg !5222
  br label %33, !dbg !5241

31:                                               ; preds = %1
  %32 = call i32 @HAL_RCC_GetPCLK1Freq() #26, !dbg !5242
  call void @llvm.dbg.value(metadata i32 %32, metadata !5221, metadata !DIExpression()), !dbg !5222
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i32 [ %32, %31 ], [ %30, %29 ]
  %35 = mul i32 %34, 25, !dbg !5244
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 0, !dbg !5244
  %37 = load i32, i32* %36, align 4, !dbg !5244, !tbaa !5245
  %38 = shl i32 %37, 2, !dbg !5244
  %39 = udiv i32 %35, %38, !dbg !5244
  %40 = udiv i32 %39, 100, !dbg !5244
  %41 = shl nuw nsw i32 %40, 4, !dbg !5244
  %42 = mul i32 %40, -100, !dbg !5244
  %43 = add i32 %42, %39, !dbg !5244
  %44 = shl i32 %43, 4, !dbg !5244
  %45 = add i32 %44, 50, !dbg !5244
  %46 = udiv i32 %45, 100, !dbg !5244
  %47 = and i32 %46, 240, !dbg !5244
  %48 = add nuw nsw i32 %47, %41, !dbg !5244
  %49 = and i32 %46, 15, !dbg !5244
  %50 = or i32 %48, %49, !dbg !5244
  %51 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !5244, !tbaa !5196
  %52 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %51, i32 0, i32 2, !dbg !5244
  store volatile i32 %50, i32* %52, align 4, !dbg !5244, !tbaa !3947
  ret void, !dbg !5246
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_HalfDuplex_Init(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5247 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5249, metadata !DIExpression()), !dbg !5250
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !5251
  br i1 %2, label %29, label %3, !dbg !5253

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5254
  %5 = load volatile i32, i32* %4, align 4, !dbg !5254, !tbaa !5183
  %6 = icmp eq i32 %5, 0, !dbg !5256
  br i1 %6, label %7, label %9, !dbg !5257

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5258
  store i32 0, i32* %8, align 4, !dbg !5260, !tbaa !5191
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5261
  br label %9, !dbg !5262

9:                                                ; preds = %7, %3
  store volatile i32 36, i32* %4, align 4, !dbg !5263, !tbaa !5183
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5264
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !5264, !tbaa !5196
  %12 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %11, i32 0, i32 3, !dbg !5264
  %13 = load volatile i32, i32* %12, align 4, !dbg !5264, !tbaa !3929
  %14 = and i32 %13, -8193, !dbg !5264
  store volatile i32 %14, i32* %12, align 4, !dbg !5264, !tbaa !3929
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5265
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %10, align 4, !dbg !5266, !tbaa !5196
  %16 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 4, !dbg !5266
  %17 = load volatile i32, i32* %16, align 4, !dbg !5266, !tbaa !3812
  %18 = and i32 %17, -18433, !dbg !5266
  store volatile i32 %18, i32* %16, align 4, !dbg !5266, !tbaa !3812
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 5, !dbg !5267
  %20 = load volatile i32, i32* %19, align 4, !dbg !5267, !tbaa !3817
  %21 = and i32 %20, -35, !dbg !5267
  store volatile i32 %21, i32* %19, align 4, !dbg !5267, !tbaa !3817
  %22 = load volatile i32, i32* %19, align 4, !dbg !5268, !tbaa !3817
  %23 = or i32 %22, 8, !dbg !5268
  store volatile i32 %23, i32* %19, align 4, !dbg !5268, !tbaa !3817
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %15, i32 0, i32 3, !dbg !5269
  %25 = load volatile i32, i32* %24, align 4, !dbg !5269, !tbaa !3929
  %26 = or i32 %25, 8192, !dbg !5269
  store volatile i32 %26, i32* %24, align 4, !dbg !5269, !tbaa !3929
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5270
  store volatile i32 0, i32* %27, align 4, !dbg !5271, !tbaa !5203
  store volatile i32 32, i32* %4, align 4, !dbg !5272, !tbaa !5183
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5273
  store volatile i32 32, i32* %28, align 4, !dbg !5274, !tbaa !5207
  br label %29, !dbg !5275

29:                                               ; preds = %1, %9
  %30 = phi i32 [ 0, %9 ], [ 1, %1 ], !dbg !5250
  ret i32 %30, !dbg !5276
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_LIN_Init(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !5277 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5281, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata i32 %1, metadata !5282, metadata !DIExpression()), !dbg !5283
  %3 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !5284
  br i1 %3, label %34, label %4, !dbg !5286

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5287
  %6 = load volatile i32, i32* %5, align 4, !dbg !5287, !tbaa !5183
  %7 = icmp eq i32 %6, 0, !dbg !5289
  br i1 %7, label %8, label %10, !dbg !5290

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5291
  store i32 0, i32* %9, align 4, !dbg !5293, !tbaa !5191
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5294
  br label %10, !dbg !5295

10:                                               ; preds = %8, %4
  store volatile i32 36, i32* %5, align 4, !dbg !5296, !tbaa !5183
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5297
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !5297, !tbaa !5196
  %13 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %12, i32 0, i32 3, !dbg !5297
  %14 = load volatile i32, i32* %13, align 4, !dbg !5297, !tbaa !3929
  %15 = and i32 %14, -8193, !dbg !5297
  store volatile i32 %15, i32* %13, align 4, !dbg !5297, !tbaa !3929
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5298
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !5299, !tbaa !5196
  %17 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 4, !dbg !5299
  %18 = load volatile i32, i32* %17, align 4, !dbg !5299, !tbaa !3812
  %19 = and i32 %18, -2049, !dbg !5299
  store volatile i32 %19, i32* %17, align 4, !dbg !5299, !tbaa !3812
  %20 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 5, !dbg !5300
  %21 = load volatile i32, i32* %20, align 4, !dbg !5300, !tbaa !3817
  %22 = and i32 %21, -43, !dbg !5300
  store volatile i32 %22, i32* %20, align 4, !dbg !5300, !tbaa !3817
  %23 = load volatile i32, i32* %17, align 4, !dbg !5301, !tbaa !3812
  %24 = or i32 %23, 16384, !dbg !5301
  store volatile i32 %24, i32* %17, align 4, !dbg !5301, !tbaa !3812
  %25 = load volatile i32, i32* %17, align 4, !dbg !5302, !tbaa !3812
  %26 = and i32 %25, -33, !dbg !5302
  store volatile i32 %26, i32* %17, align 4, !dbg !5302, !tbaa !3812
  %27 = load volatile i32, i32* %17, align 4, !dbg !5303, !tbaa !3812
  %28 = or i32 %27, %1, !dbg !5303
  store volatile i32 %28, i32* %17, align 4, !dbg !5303, !tbaa !3812
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %16, i32 0, i32 3, !dbg !5304
  %30 = load volatile i32, i32* %29, align 4, !dbg !5304, !tbaa !3929
  %31 = or i32 %30, 8192, !dbg !5304
  store volatile i32 %31, i32* %29, align 4, !dbg !5304, !tbaa !3929
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5305
  store volatile i32 0, i32* %32, align 4, !dbg !5306, !tbaa !5203
  store volatile i32 32, i32* %5, align 4, !dbg !5307, !tbaa !5183
  %33 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5308
  store volatile i32 32, i32* %33, align 4, !dbg !5309, !tbaa !5207
  br label %34, !dbg !5310

34:                                               ; preds = %2, %10
  %35 = phi i32 [ 0, %10 ], [ 1, %2 ], !dbg !5283
  ret i32 %35, !dbg !5311
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_MultiProcessor_Init(%struct.__UART_HandleTypeDef* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #3 !dbg !5312 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5316, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i8 %1, metadata !5317, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.value(metadata i32 %2, metadata !5318, metadata !DIExpression()), !dbg !5319
  %4 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !5320
  br i1 %4, label %38, label %5, !dbg !5322

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5323
  %7 = load volatile i32, i32* %6, align 4, !dbg !5323, !tbaa !5183
  %8 = icmp eq i32 %7, 0, !dbg !5325
  br i1 %8, label %9, label %11, !dbg !5326

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5327
  store i32 0, i32* %10, align 4, !dbg !5329, !tbaa !5191
  call void @HAL_UART_MspInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5330
  br label %11, !dbg !5331

11:                                               ; preds = %9, %5
  store volatile i32 36, i32* %6, align 4, !dbg !5332, !tbaa !5183
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5333
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !5333, !tbaa !5196
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %13, i32 0, i32 3, !dbg !5333
  %15 = load volatile i32, i32* %14, align 4, !dbg !5333, !tbaa !3929
  %16 = and i32 %15, -8193, !dbg !5333
  store volatile i32 %16, i32* %14, align 4, !dbg !5333, !tbaa !3929
  call fastcc void @UART_SetConfig(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5334
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %12, align 4, !dbg !5335, !tbaa !5196
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 4, !dbg !5335
  %19 = load volatile i32, i32* %18, align 4, !dbg !5335, !tbaa !3812
  %20 = and i32 %19, -18433, !dbg !5335
  store volatile i32 %20, i32* %18, align 4, !dbg !5335, !tbaa !3812
  %21 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 5, !dbg !5336
  %22 = load volatile i32, i32* %21, align 4, !dbg !5336, !tbaa !3817
  %23 = and i32 %22, -43, !dbg !5336
  store volatile i32 %23, i32* %21, align 4, !dbg !5336, !tbaa !3817
  %24 = load volatile i32, i32* %18, align 4, !dbg !5337, !tbaa !3812
  %25 = and i32 %24, -16, !dbg !5337
  store volatile i32 %25, i32* %18, align 4, !dbg !5337, !tbaa !3812
  %26 = zext i8 %1 to i32, !dbg !5338
  %27 = load volatile i32, i32* %18, align 4, !dbg !5338, !tbaa !3812
  %28 = or i32 %27, %26, !dbg !5338
  store volatile i32 %28, i32* %18, align 4, !dbg !5338, !tbaa !3812
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 3, !dbg !5339
  %30 = load volatile i32, i32* %29, align 4, !dbg !5339, !tbaa !3929
  %31 = and i32 %30, -2049, !dbg !5339
  store volatile i32 %31, i32* %29, align 4, !dbg !5339, !tbaa !3929
  %32 = load volatile i32, i32* %29, align 4, !dbg !5340, !tbaa !3929
  %33 = or i32 %32, %2, !dbg !5340
  store volatile i32 %33, i32* %29, align 4, !dbg !5340, !tbaa !3929
  %34 = load volatile i32, i32* %29, align 4, !dbg !5341, !tbaa !3929
  %35 = or i32 %34, 8192, !dbg !5341
  store volatile i32 %35, i32* %29, align 4, !dbg !5341, !tbaa !3929
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5342
  store volatile i32 0, i32* %36, align 4, !dbg !5343, !tbaa !5203
  store volatile i32 32, i32* %6, align 4, !dbg !5344, !tbaa !5183
  %37 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5345
  store volatile i32 32, i32* %37, align 4, !dbg !5346, !tbaa !5207
  br label %38, !dbg !5347

38:                                               ; preds = %3, %11
  %39 = phi i32 [ 0, %11 ], [ 1, %3 ], !dbg !5319
  ret i32 %39, !dbg !5348
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_DeInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5349 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5351, metadata !DIExpression()), !dbg !5352
  %2 = icmp eq %struct.__UART_HandleTypeDef* %0, null, !dbg !5353
  br i1 %2, label %13, label %3, !dbg !5355

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5356
  store volatile i32 36, i32* %4, align 4, !dbg !5357, !tbaa !5183
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5358
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !5358, !tbaa !5196
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 3, !dbg !5358
  %8 = load volatile i32, i32* %7, align 4, !dbg !5358, !tbaa !3929
  %9 = and i32 %8, -8193, !dbg !5358
  store volatile i32 %9, i32* %7, align 4, !dbg !5358, !tbaa !3929
  call void @HAL_UART_MspDeInit(%struct.__UART_HandleTypeDef* noundef nonnull %0), !dbg !5359
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5360
  store volatile i32 0, i32* %10, align 4, !dbg !5361, !tbaa !5203
  store volatile i32 0, i32* %4, align 4, !dbg !5362, !tbaa !5183
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5363
  store volatile i32 0, i32* %11, align 4, !dbg !5364, !tbaa !5207
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5365
  store i32 0, i32* %12, align 4, !dbg !5365, !tbaa !5191
  br label %13, !dbg !5367

13:                                               ; preds = %1, %3
  %14 = phi i32 [ 0, %3 ], [ 1, %1 ], !dbg !5352
  ret i32 %14, !dbg !5368
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_MspDeInit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5369 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5371, metadata !DIExpression()), !dbg !5372
  ret void, !dbg !5373
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Transmit(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef readonly %1, i16 noundef zeroext %2, i32 noundef %3) local_unnamed_addr #3 !dbg !5374 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5378, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata i8* %1, metadata !5379, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata i16 %2, metadata !5380, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata i32 %3, metadata !5381, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata i32 0, metadata !5383, metadata !DIExpression()), !dbg !5384
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5385
  %6 = load volatile i32, i32* %5, align 4, !dbg !5385, !tbaa !5183
  %7 = icmp eq i32 %6, 32, !dbg !5387
  br i1 %7, label %8, label %65, !dbg !5388

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null, !dbg !5389
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %9, %10, !dbg !5392
  br i1 %11, label %65, label %12, !dbg !5392

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5393
  %14 = load i32, i32* %13, align 4, !dbg !5393, !tbaa !5191
  %15 = icmp eq i32 %14, 1, !dbg !5393
  br i1 %15, label %65, label %16, !dbg !5396

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !5397, !tbaa !5191
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5399
  store volatile i32 0, i32* %17, align 4, !dbg !5400, !tbaa !5203
  store volatile i32 33, i32* %5, align 4, !dbg !5401, !tbaa !5183
  %18 = call i32 @HAL_GetTick() #26, !dbg !5402
  call void @llvm.dbg.value(metadata i32 %18, metadata !5383, metadata !DIExpression()), !dbg !5384
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !5403
  store i16 %2, i16* %19, align 4, !dbg !5404, !tbaa !5405
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !5406
  store volatile i16 %2, i16* %20, align 2, !dbg !5407, !tbaa !5408
  call void @llvm.dbg.value(metadata i8* %1, metadata !5379, metadata !DIExpression()), !dbg !5384
  %21 = load volatile i16, i16* %20, align 2, !dbg !5409, !tbaa !5408
  %22 = icmp eq i16 %21, 0, !dbg !5410
  br i1 %22, label %61, label %23, !dbg !5411

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  br label %28, !dbg !5411

28:                                               ; preds = %23, %57
  %29 = phi i8* [ %1, %23 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i8* %29, metadata !5379, metadata !DIExpression()), !dbg !5384
  %30 = load volatile i16, i16* %20, align 2, !dbg !5412, !tbaa !5408
  %31 = add i16 %30, -1, !dbg !5412
  store volatile i16 %31, i16* %20, align 2, !dbg !5412, !tbaa !5408
  %32 = load i32, i32* %24, align 4, !dbg !5414, !tbaa !5226
  %33 = icmp eq i32 %32, 4096, !dbg !5416
  %34 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 128, i32 noundef %18, i32 noundef %3), !dbg !5417
  %35 = icmp eq i32 %34, 0, !dbg !5417
  br i1 %33, label %36, label %50, !dbg !5418

36:                                               ; preds = %28
  br i1 %35, label %37, label %65, !dbg !5419

37:                                               ; preds = %36
  %38 = bitcast i8* %29 to i16*, !dbg !5421
  call void @llvm.dbg.value(metadata i16* %38, metadata !5382, metadata !DIExpression()), !dbg !5384
  %39 = load i16, i16* %38, align 2, !dbg !5422, !tbaa !5423
  %40 = and i16 %39, 511, !dbg !5424
  %41 = zext i16 %40 to i32, !dbg !5424
  %42 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %26, align 4, !dbg !5425, !tbaa !5196
  %43 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %42, i32 0, i32 1, !dbg !5426
  store volatile i32 %41, i32* %43, align 4, !dbg !5427, !tbaa !5428
  %44 = load i32, i32* %27, align 4, !dbg !5429, !tbaa !5228
  %45 = icmp eq i32 %44, 0, !dbg !5431
  br i1 %45, label %46, label %48, !dbg !5432

46:                                               ; preds = %37
  %47 = getelementptr inbounds i8, i8* %29, i32 2, !dbg !5433
  call void @llvm.dbg.value(metadata i8* %47, metadata !5379, metadata !DIExpression()), !dbg !5384
  br label %57, !dbg !5435

48:                                               ; preds = %37
  %49 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !5436
  call void @llvm.dbg.value(metadata i8* %49, metadata !5379, metadata !DIExpression()), !dbg !5384
  br label %57

50:                                               ; preds = %28
  br i1 %35, label %51, label %65, !dbg !5438

51:                                               ; preds = %50
  %52 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !5440
  call void @llvm.dbg.value(metadata i8* %52, metadata !5379, metadata !DIExpression()), !dbg !5384
  %53 = load i8, i8* %29, align 1, !dbg !5441, !tbaa !1608
  %54 = zext i8 %53 to i32, !dbg !5441
  %55 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %25, align 4, !dbg !5442, !tbaa !5196
  %56 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %55, i32 0, i32 1, !dbg !5443
  store volatile i32 %54, i32* %56, align 4, !dbg !5444, !tbaa !5428
  br label %57

57:                                               ; preds = %46, %48, %51
  %58 = phi i8* [ %47, %46 ], [ %49, %48 ], [ %52, %51 ], !dbg !5417
  call void @llvm.dbg.value(metadata i8* %58, metadata !5379, metadata !DIExpression()), !dbg !5384
  %59 = load volatile i16, i16* %20, align 2, !dbg !5409, !tbaa !5408
  %60 = icmp eq i16 %59, 0, !dbg !5410
  br i1 %60, label %61, label %28, !dbg !5411, !llvm.loop !5445

61:                                               ; preds = %57, %16
  %62 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 64, i32 noundef %18, i32 noundef %3), !dbg !5447
  %63 = icmp eq i32 %62, 0, !dbg !5449
  br i1 %63, label %64, label %65, !dbg !5450

64:                                               ; preds = %61
  store volatile i32 32, i32* %5, align 4, !dbg !5451, !tbaa !5183
  store i32 0, i32* %13, align 4, !dbg !5452, !tbaa !5191
  br label %65, !dbg !5454

65:                                               ; preds = %50, %36, %4, %61, %12, %8, %64
  %66 = phi i32 [ 0, %64 ], [ 1, %8 ], [ 2, %12 ], [ 3, %61 ], [ 2, %4 ], [ 3, %36 ], [ 3, %50 ], !dbg !5455
  ret i32 %66, !dbg !5456
}

; Function Attrs: noinline nounwind
define internal fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #3 !dbg !5457 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5461, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.value(metadata i32 %1, metadata !5462, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.value(metadata i32 0, metadata !5463, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.value(metadata i32 %2, metadata !5464, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.value(metadata i32 %3, metadata !5465, metadata !DIExpression()), !dbg !5466
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !5467, !tbaa !5196
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 0, !dbg !5467
  %8 = load volatile i32, i32* %7, align 4, !dbg !5467, !tbaa !5468
  %9 = and i32 %8, %1, !dbg !5467
  %10 = icmp eq i32 %9, %1, !dbg !5467
  br i1 %10, label %37, label %11, !dbg !5469

11:                                               ; preds = %4
  switch i32 %3, label %17 [
    i32 0, label %21
    i32 -1, label %12
  ]

12:                                               ; preds = %17, %11
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !tbaa !5196
  %14 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %13, i32 0, i32 0
  %15 = icmp eq i32 %3, -1
  br label %33, !dbg !5469

16:                                               ; preds = %33
  br i1 %15, label %33, label %17, !dbg !5470

17:                                               ; preds = %16, %11
  %18 = call i32 @HAL_GetTick() #26, !dbg !5472
  %19 = sub i32 %18, %2, !dbg !5476
  %20 = icmp ugt i32 %19, %3, !dbg !5477
  br i1 %20, label %21, label %12, !dbg !5478

21:                                               ; preds = %17, %11
  %22 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5467
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !5479, !tbaa !5196
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 3, !dbg !5479
  %25 = load volatile i32, i32* %24, align 4, !dbg !5479, !tbaa !3929
  %26 = and i32 %25, -417, !dbg !5479
  store volatile i32 %26, i32* %24, align 4, !dbg !5479, !tbaa !3929
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 5, !dbg !5481
  %28 = load volatile i32, i32* %27, align 4, !dbg !5481, !tbaa !3817
  %29 = and i32 %28, -2, !dbg !5481
  store volatile i32 %29, i32* %27, align 4, !dbg !5481, !tbaa !3817
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5482
  store volatile i32 32, i32* %30, align 4, !dbg !5483, !tbaa !5183
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5484
  store volatile i32 32, i32* %31, align 4, !dbg !5485, !tbaa !5207
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5486
  store i32 0, i32* %32, align 4, !dbg !5486, !tbaa !5191
  br label %37, !dbg !5488

33:                                               ; preds = %12, %16
  %34 = load volatile i32, i32* %14, align 4, !dbg !5467, !tbaa !5468
  %35 = and i32 %34, %1, !dbg !5467
  %36 = icmp eq i32 %35, %1, !dbg !5467
  br i1 %36, label %37, label %16, !dbg !5469, !llvm.loop !5489

37:                                               ; preds = %33, %4, %21
  %38 = phi i32 [ 3, %21 ], [ 0, %4 ], [ 0, %33 ], !dbg !5466
  ret i32 %38, !dbg !5491
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Receive(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef writeonly %1, i16 noundef zeroext %2, i32 noundef %3) local_unnamed_addr #3 !dbg !5492 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5494, metadata !DIExpression()), !dbg !5500
  call void @llvm.dbg.value(metadata i8* %1, metadata !5495, metadata !DIExpression()), !dbg !5500
  call void @llvm.dbg.value(metadata i16 %2, metadata !5496, metadata !DIExpression()), !dbg !5500
  call void @llvm.dbg.value(metadata i32 %3, metadata !5497, metadata !DIExpression()), !dbg !5500
  call void @llvm.dbg.value(metadata i32 0, metadata !5499, metadata !DIExpression()), !dbg !5500
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5501
  %6 = load volatile i32, i32* %5, align 4, !dbg !5501, !tbaa !5207
  %7 = icmp eq i32 %6, 32, !dbg !5503
  br i1 %7, label %8, label %80, !dbg !5504

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null, !dbg !5505
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %9, %10, !dbg !5508
  br i1 %11, label %80, label %12, !dbg !5508

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5509
  %14 = load i32, i32* %13, align 4, !dbg !5509, !tbaa !5191
  %15 = icmp eq i32 %14, 1, !dbg !5509
  br i1 %15, label %80, label %16, !dbg !5512

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !5513, !tbaa !5191
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5515
  store volatile i32 0, i32* %17, align 4, !dbg !5516, !tbaa !5203
  store volatile i32 34, i32* %5, align 4, !dbg !5517, !tbaa !5207
  %18 = call i32 @HAL_GetTick() #26, !dbg !5518
  call void @llvm.dbg.value(metadata i32 %18, metadata !5499, metadata !DIExpression()), !dbg !5500
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !5519
  store i16 %2, i16* %19, align 4, !dbg !5520, !tbaa !5521
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !5522
  store volatile i16 %2, i16* %20, align 2, !dbg !5523, !tbaa !5524
  call void @llvm.dbg.value(metadata i8* %1, metadata !5495, metadata !DIExpression()), !dbg !5500
  %21 = load volatile i16, i16* %20, align 2, !dbg !5525, !tbaa !5524
  %22 = icmp eq i16 %21, 0, !dbg !5526
  br i1 %22, label %79, label %23, !dbg !5527

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1
  %25 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0
  br label %31, !dbg !5527

31:                                               ; preds = %23, %75
  %32 = phi i8* [ %1, %23 ], [ %76, %75 ]
  call void @llvm.dbg.value(metadata i8* %32, metadata !5495, metadata !DIExpression()), !dbg !5500
  %33 = load volatile i16, i16* %20, align 2, !dbg !5528, !tbaa !5524
  %34 = add i16 %33, -1, !dbg !5528
  store volatile i16 %34, i16* %20, align 2, !dbg !5528, !tbaa !5524
  %35 = load i32, i32* %24, align 4, !dbg !5530, !tbaa !5226
  %36 = icmp eq i32 %35, 4096, !dbg !5532
  %37 = call fastcc i32 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* noundef %0, i32 noundef 32, i32 noundef %18, i32 noundef %3), !dbg !5533
  %38 = icmp eq i32 %37, 0, !dbg !5533
  br i1 %36, label %39, label %58, !dbg !5534

39:                                               ; preds = %31
  br i1 %38, label %40, label %80, !dbg !5535

40:                                               ; preds = %39
  %41 = bitcast i8* %32 to i16*, !dbg !5537
  call void @llvm.dbg.value(metadata i16* %41, metadata !5498, metadata !DIExpression()), !dbg !5500
  %42 = load i32, i32* %28, align 4, !dbg !5538, !tbaa !5228
  %43 = icmp eq i32 %42, 0, !dbg !5540
  br i1 %43, label %44, label %51, !dbg !5541

44:                                               ; preds = %40
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !5542, !tbaa !5196
  %46 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %45, i32 0, i32 1, !dbg !5544
  %47 = load volatile i32, i32* %46, align 4, !dbg !5544, !tbaa !5428
  %48 = trunc i32 %47 to i16, !dbg !5545
  %49 = and i16 %48, 511, !dbg !5545
  store i16 %49, i16* %41, align 2, !dbg !5546, !tbaa !5423
  %50 = getelementptr inbounds i8, i8* %32, i32 2, !dbg !5547
  call void @llvm.dbg.value(metadata i8* %50, metadata !5495, metadata !DIExpression()), !dbg !5500
  br label %75, !dbg !5548

51:                                               ; preds = %40
  %52 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %29, align 4, !dbg !5549, !tbaa !5196
  %53 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %52, i32 0, i32 1, !dbg !5551
  %54 = load volatile i32, i32* %53, align 4, !dbg !5551, !tbaa !5428
  %55 = trunc i32 %54 to i16, !dbg !5552
  %56 = and i16 %55, 255, !dbg !5552
  store i16 %56, i16* %41, align 2, !dbg !5553, !tbaa !5423
  %57 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !5554
  call void @llvm.dbg.value(metadata i8* %57, metadata !5495, metadata !DIExpression()), !dbg !5500
  br label %75

58:                                               ; preds = %31
  br i1 %38, label %59, label %80, !dbg !5555

59:                                               ; preds = %58
  %60 = load i32, i32* %25, align 4, !dbg !5557, !tbaa !5228
  %61 = icmp eq i32 %60, 0, !dbg !5559
  br i1 %61, label %62, label %68, !dbg !5560

62:                                               ; preds = %59
  %63 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !5561, !tbaa !5196
  %64 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %63, i32 0, i32 1, !dbg !5563
  %65 = load volatile i32, i32* %64, align 4, !dbg !5563, !tbaa !5428
  %66 = trunc i32 %65 to i8, !dbg !5564
  %67 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !5565
  call void @llvm.dbg.value(metadata i8* %67, metadata !5495, metadata !DIExpression()), !dbg !5500
  store i8 %66, i8* %32, align 1, !dbg !5566, !tbaa !1608
  br label %75, !dbg !5567

68:                                               ; preds = %59
  %69 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %26, align 4, !dbg !5568, !tbaa !5196
  %70 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %69, i32 0, i32 1, !dbg !5570
  %71 = load volatile i32, i32* %70, align 4, !dbg !5570, !tbaa !5428
  %72 = trunc i32 %71 to i8, !dbg !5571
  %73 = and i8 %72, 127, !dbg !5571
  %74 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !5572
  call void @llvm.dbg.value(metadata i8* %74, metadata !5495, metadata !DIExpression()), !dbg !5500
  store i8 %73, i8* %32, align 1, !dbg !5573, !tbaa !1608
  br label %75

75:                                               ; preds = %62, %68, %44, %51
  %76 = phi i8* [ %50, %44 ], [ %57, %51 ], [ %67, %62 ], [ %74, %68 ], !dbg !5533
  call void @llvm.dbg.value(metadata i8* %76, metadata !5495, metadata !DIExpression()), !dbg !5500
  %77 = load volatile i16, i16* %20, align 2, !dbg !5525, !tbaa !5524
  %78 = icmp eq i16 %77, 0, !dbg !5526
  br i1 %78, label %79, label %31, !dbg !5527, !llvm.loop !5574

79:                                               ; preds = %75, %16
  store volatile i32 32, i32* %5, align 4, !dbg !5576, !tbaa !5207
  store i32 0, i32* %13, align 4, !dbg !5577, !tbaa !5191
  br label %80, !dbg !5579

80:                                               ; preds = %58, %39, %4, %12, %8, %79
  %81 = phi i32 [ 0, %79 ], [ 1, %8 ], [ 2, %12 ], [ 2, %4 ], [ 3, %39 ], [ 3, %58 ], !dbg !5580
  ret i32 %81, !dbg !5581
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #14 !dbg !5582 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5586, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i8* %1, metadata !5587, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i16 %2, metadata !5588, metadata !DIExpression()), !dbg !5589
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5590
  %5 = load volatile i32, i32* %4, align 4, !dbg !5590, !tbaa !5183
  %6 = icmp eq i32 %5, 32, !dbg !5592
  br i1 %6, label %7, label %25, !dbg !5593

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !5594
  %9 = icmp eq i16 %2, 0
  %10 = or i1 %8, %9, !dbg !5597
  br i1 %10, label %25, label %11, !dbg !5597

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5598
  %13 = load i32, i32* %12, align 4, !dbg !5598, !tbaa !5191
  %14 = icmp eq i32 %13, 1, !dbg !5598
  br i1 %14, label %25, label %15, !dbg !5601

15:                                               ; preds = %11
  store i32 1, i32* %12, align 4, !dbg !5602, !tbaa !5191
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !5604
  store i8* %1, i8** %16, align 4, !dbg !5605, !tbaa !5606
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !5607
  store i16 %2, i16* %17, align 4, !dbg !5608, !tbaa !5405
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !5609
  store volatile i16 %2, i16* %18, align 2, !dbg !5610, !tbaa !5408
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5611
  store volatile i32 0, i32* %19, align 4, !dbg !5612, !tbaa !5203
  store volatile i32 33, i32* %4, align 4, !dbg !5613, !tbaa !5183
  store i32 0, i32* %12, align 4, !dbg !5614, !tbaa !5191
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5616
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %20, align 4, !dbg !5616, !tbaa !5196
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 3, !dbg !5616
  %23 = load volatile i32, i32* %22, align 4, !dbg !5616, !tbaa !3929
  %24 = or i32 %23, 128, !dbg !5616
  store volatile i32 %24, i32* %22, align 4, !dbg !5616, !tbaa !3929
  br label %25, !dbg !5617

25:                                               ; preds = %3, %11, %7, %15
  %26 = phi i32 [ 0, %15 ], [ 1, %7 ], [ 2, %11 ], [ 2, %3 ], !dbg !5618
  ret i32 %26, !dbg !5619
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #14 !dbg !5620 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5622, metadata !DIExpression()), !dbg !5625
  call void @llvm.dbg.value(metadata i8* %1, metadata !5623, metadata !DIExpression()), !dbg !5625
  call void @llvm.dbg.value(metadata i16 %2, metadata !5624, metadata !DIExpression()), !dbg !5625
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5626
  %5 = load volatile i32, i32* %4, align 4, !dbg !5626, !tbaa !5207
  %6 = icmp eq i32 %5, 32, !dbg !5628
  br i1 %6, label %7, label %30, !dbg !5629

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !5630
  %9 = icmp eq i16 %2, 0
  %10 = or i1 %8, %9, !dbg !5633
  br i1 %10, label %30, label %11, !dbg !5633

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5634
  %13 = load i32, i32* %12, align 4, !dbg !5634, !tbaa !5191
  %14 = icmp eq i32 %13, 1, !dbg !5634
  br i1 %14, label %30, label %15, !dbg !5637

15:                                               ; preds = %11
  store i32 1, i32* %12, align 4, !dbg !5638, !tbaa !5191
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !5640
  store i8* %1, i8** %16, align 4, !dbg !5641, !tbaa !5642
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !5643
  store i16 %2, i16* %17, align 4, !dbg !5644, !tbaa !5521
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !5645
  store volatile i16 %2, i16* %18, align 2, !dbg !5646, !tbaa !5524
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5647
  store volatile i32 0, i32* %19, align 4, !dbg !5648, !tbaa !5203
  store volatile i32 34, i32* %4, align 4, !dbg !5649, !tbaa !5207
  store i32 0, i32* %12, align 4, !dbg !5650, !tbaa !5191
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5652
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %20, align 4, !dbg !5652, !tbaa !5196
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 3, !dbg !5652
  %23 = load volatile i32, i32* %22, align 4, !dbg !5652, !tbaa !3929
  %24 = or i32 %23, 256, !dbg !5652
  store volatile i32 %24, i32* %22, align 4, !dbg !5652, !tbaa !3929
  %25 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %21, i32 0, i32 5, !dbg !5653
  %26 = load volatile i32, i32* %25, align 4, !dbg !5653, !tbaa !3817
  %27 = or i32 %26, 1, !dbg !5653
  store volatile i32 %27, i32* %25, align 4, !dbg !5653, !tbaa !3817
  %28 = load volatile i32, i32* %22, align 4, !dbg !5654, !tbaa !3929
  %29 = or i32 %28, 32, !dbg !5654
  store volatile i32 %29, i32* %22, align 4, !dbg !5654, !tbaa !3929
  br label %30, !dbg !5655

30:                                               ; preds = %3, %11, %7, %15
  %31 = phi i32 [ 0, %15 ], [ 1, %7 ], [ 2, %11 ], [ 2, %3 ], !dbg !5656
  ret i32 %31, !dbg !5657
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Transmit_DMA(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #3 !dbg !5658 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5660, metadata !DIExpression()), !dbg !5664
  call void @llvm.dbg.value(metadata i8* %1, metadata !5661, metadata !DIExpression()), !dbg !5664
  call void @llvm.dbg.value(metadata i16 %2, metadata !5662, metadata !DIExpression()), !dbg !5664
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5665
  %5 = load volatile i32, i32* %4, align 4, !dbg !5665, !tbaa !5183
  %6 = icmp eq i32 %5, 32, !dbg !5667
  br i1 %6, label %7, label %38, !dbg !5668

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !5669
  %9 = zext i16 %2 to i32
  %10 = icmp eq i16 %2, 0
  %11 = or i1 %8, %10, !dbg !5672
  br i1 %11, label %38, label %12, !dbg !5672

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5673
  %14 = load i32, i32* %13, align 4, !dbg !5673, !tbaa !5191
  %15 = icmp eq i32 %14, 1, !dbg !5673
  br i1 %15, label %38, label %16, !dbg !5676

16:                                               ; preds = %12
  store i32 1, i32* %13, align 4, !dbg !5677, !tbaa !5191
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !5679
  store i8* %1, i8** %17, align 4, !dbg !5680, !tbaa !5606
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 3, !dbg !5681
  store i16 %2, i16* %18, align 4, !dbg !5682, !tbaa !5405
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !5683
  store volatile i16 %2, i16* %19, align 2, !dbg !5684, !tbaa !5408
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5685
  store volatile i32 0, i32* %20, align 4, !dbg !5686, !tbaa !5203
  store volatile i32 33, i32* %4, align 4, !dbg !5687, !tbaa !5183
  %21 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !5688
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %21, align 4, !dbg !5688, !tbaa !5689
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 5, !dbg !5690
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATransmitCplt, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !5691, !tbaa !5692
  %24 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 6, !dbg !5694
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxHalfCplt, void (%struct.__DMA_HandleTypeDef*)** %24, align 4, !dbg !5695, !tbaa !5696
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 7, !dbg !5697
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAError, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !5698, !tbaa !5699
  %26 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !5700
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %26, align 4, !dbg !5701, !tbaa !5702
  call void @llvm.dbg.value(metadata i32* undef, metadata !5663, metadata !DIExpression()), !dbg !5664
  %27 = ptrtoint i8* %1 to i32, !dbg !5703
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5704
  %29 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %28, align 4, !dbg !5704, !tbaa !5196
  %30 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %29, i32 0, i32 1, !dbg !5705
  %31 = ptrtoint i32* %30 to i32, !dbg !5706
  %32 = call i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef %22, i32 noundef %27, i32 noundef %31, i32 noundef %9) #26, !dbg !5707
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %28, align 4, !dbg !5708, !tbaa !5196
  %34 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 0, !dbg !5708
  store volatile i32 -65, i32* %34, align 4, !dbg !5708, !tbaa !5468
  store i32 0, i32* %13, align 4, !dbg !5709, !tbaa !5191
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 5, !dbg !5711
  %36 = load volatile i32, i32* %35, align 4, !dbg !5711, !tbaa !3817
  %37 = or i32 %36, 128, !dbg !5711
  store volatile i32 %37, i32* %35, align 4, !dbg !5711, !tbaa !3817
  br label %38, !dbg !5712

38:                                               ; preds = %3, %12, %7, %16
  %39 = phi i32 [ 0, %16 ], [ 1, %7 ], [ 2, %12 ], [ 2, %3 ], !dbg !5713
  ret i32 %39, !dbg !5714
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATransmitCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !5715 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !5719, metadata !DIExpression()), !dbg !5721
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !5722
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !5722
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !5722, !tbaa !5723
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !5720, metadata !DIExpression()), !dbg !5721
  %5 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 0, !dbg !5724
  %6 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %5, align 4, !dbg !5724, !tbaa !5726
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %6, i32 0, i32 0, !dbg !5727
  %8 = load volatile i32, i32* %7, align 4, !dbg !5727, !tbaa !3156
  %9 = and i32 %8, 32, !dbg !5728
  %10 = icmp eq i32 %9, 0, !dbg !5729
  br i1 %10, label %11, label %21, !dbg !5730

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !5731
  store volatile i16 0, i16* %12, align 2, !dbg !5733, !tbaa !5408
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !5734
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !5734, !tbaa !5196
  %15 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 5, !dbg !5734
  %16 = load volatile i32, i32* %15, align 4, !dbg !5734, !tbaa !3817
  %17 = and i32 %16, -129, !dbg !5734
  store volatile i32 %17, i32* %15, align 4, !dbg !5734, !tbaa !3817
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 3, !dbg !5735
  %19 = load volatile i32, i32* %18, align 4, !dbg !5735, !tbaa !3929
  %20 = or i32 %19, 64, !dbg !5735
  store volatile i32 %20, i32* %18, align 4, !dbg !5735, !tbaa !3929
  br label %22, !dbg !5736

21:                                               ; preds = %1
  call void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5737
  br label %22

22:                                               ; preds = %21, %11
  ret void, !dbg !5739
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxHalfCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !5740 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !5742, metadata !DIExpression()), !dbg !5744
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !5745
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !5745
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !5745, !tbaa !5723
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !5743, metadata !DIExpression()), !dbg !5744
  call void @HAL_UART_TxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5746
  ret void, !dbg !5747
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAError(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !5748 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !5750, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.value(metadata i32 0, metadata !5751, metadata !DIExpression()), !dbg !5753
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !5754
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !5754
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !5754, !tbaa !5723
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !5752, metadata !DIExpression()), !dbg !5753
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !5755
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !5755, !tbaa !5196
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %6, i32 0, i32 5, !dbg !5755
  %8 = load volatile i32, i32* %7, align 4, !dbg !5755, !tbaa !3817
  %9 = and i32 %8, 128, !dbg !5755
  %10 = icmp ne i32 %9, 0, !dbg !5755
  call void @llvm.dbg.value(metadata i1 %10, metadata !5751, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5753
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !5756
  %12 = load volatile i32, i32* %11, align 4, !dbg !5756, !tbaa !5183
  %13 = icmp eq i32 %12, 33, !dbg !5758
  %14 = select i1 %13, i1 %10, i1 false, !dbg !5759
  br i1 %14, label %15, label %17, !dbg !5759

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !5760
  store volatile i16 0, i16* %16, align 2, !dbg !5762, !tbaa !5408
  call fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5763
  br label %17, !dbg !5764

17:                                               ; preds = %15, %1
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !5765, !tbaa !5196
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %18, i32 0, i32 5, !dbg !5765
  %20 = load volatile i32, i32* %19, align 4, !dbg !5765, !tbaa !3817
  %21 = and i32 %20, 64, !dbg !5765
  %22 = icmp ne i32 %21, 0, !dbg !5765
  call void @llvm.dbg.value(metadata i1 %22, metadata !5751, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5753
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !5766
  %24 = load volatile i32, i32* %23, align 4, !dbg !5766, !tbaa !5207
  %25 = icmp eq i32 %24, 34, !dbg !5768
  %26 = select i1 %25, i1 %22, i1 false, !dbg !5769
  br i1 %26, label %27, label %29, !dbg !5769

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !5770
  store volatile i16 0, i16* %28, align 2, !dbg !5772, !tbaa !5524
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5773
  br label %29, !dbg !5774

29:                                               ; preds = %27, %17
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !5775
  %31 = load volatile i32, i32* %30, align 4, !dbg !5776, !tbaa !5203
  %32 = or i32 %31, 16, !dbg !5776
  store volatile i32 %32, i32* %30, align 4, !dbg !5776, !tbaa !5203
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5777
  ret void, !dbg !5778
}

declare !dbg !5779 dso_local i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #25

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #14 !dbg !5782 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5784, metadata !DIExpression()), !dbg !5785
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5786
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !5786, !tbaa !5196
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !5786
  %5 = load volatile i32, i32* %4, align 4, !dbg !5786, !tbaa !3929
  %6 = and i32 %5, -193, !dbg !5786
  store volatile i32 %6, i32* %4, align 4, !dbg !5786, !tbaa !3929
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5787
  store volatile i32 32, i32* %7, align 4, !dbg !5788, !tbaa !5183
  ret void, !dbg !5789
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #14 !dbg !5790 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5792, metadata !DIExpression()), !dbg !5793
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5794
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !5794, !tbaa !5196
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !5794
  %5 = load volatile i32, i32* %4, align 4, !dbg !5794, !tbaa !3929
  %6 = and i32 %5, -289, !dbg !5794
  store volatile i32 %6, i32* %4, align 4, !dbg !5794, !tbaa !3929
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !5795
  %8 = load volatile i32, i32* %7, align 4, !dbg !5795, !tbaa !3817
  %9 = and i32 %8, -2, !dbg !5795
  store volatile i32 %9, i32* %7, align 4, !dbg !5795, !tbaa !3817
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5796
  store volatile i32 32, i32* %10, align 4, !dbg !5797, !tbaa !5207
  ret void, !dbg !5798
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5799 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5801, metadata !DIExpression()), !dbg !5802
  ret void, !dbg !5803
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_TxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5804 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5806, metadata !DIExpression()), !dbg !5807
  ret void, !dbg !5808
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5809 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5811, metadata !DIExpression()), !dbg !5812
  ret void, !dbg !5813
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Receive_DMA(%struct.__UART_HandleTypeDef* noundef %0, i8* noundef %1, i16 noundef zeroext %2) local_unnamed_addr #3 !dbg !5814 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5816, metadata !DIExpression()), !dbg !5824
  call void @llvm.dbg.value(metadata i8* %1, metadata !5817, metadata !DIExpression()), !dbg !5824
  call void @llvm.dbg.value(metadata i16 %2, metadata !5818, metadata !DIExpression()), !dbg !5824
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5825
  %6 = load volatile i32, i32* %5, align 4, !dbg !5825, !tbaa !5207
  %7 = icmp eq i32 %6, 32, !dbg !5826
  br i1 %7, label %8, label %49, !dbg !5827

8:                                                ; preds = %3
  %9 = icmp eq i8* %1, null, !dbg !5828
  %10 = zext i16 %2 to i32
  %11 = icmp eq i16 %2, 0
  %12 = or i1 %9, %11, !dbg !5830
  br i1 %12, label %49, label %13, !dbg !5830

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5831
  %15 = load i32, i32* %14, align 4, !dbg !5831, !tbaa !5191
  %16 = icmp eq i32 %15, 1, !dbg !5831
  br i1 %16, label %49, label %17, !dbg !5834

17:                                               ; preds = %13
  store i32 1, i32* %14, align 4, !dbg !5835, !tbaa !5191
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !5837
  store i8* %1, i8** %18, align 4, !dbg !5838, !tbaa !5642
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 6, !dbg !5839
  store i16 %2, i16* %19, align 4, !dbg !5840, !tbaa !5521
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !5841
  store volatile i32 0, i32* %20, align 4, !dbg !5842, !tbaa !5203
  store volatile i32 34, i32* %5, align 4, !dbg !5843, !tbaa !5207
  %21 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !5844
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %21, align 4, !dbg !5844, !tbaa !5845
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 5, !dbg !5846
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAReceiveCplt, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !5847, !tbaa !5692
  %24 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 6, !dbg !5848
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxHalfCplt, void (%struct.__DMA_HandleTypeDef*)** %24, align 4, !dbg !5849, !tbaa !5696
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 7, !dbg !5850
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAError, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !5851, !tbaa !5699
  %26 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !5852
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %26, align 4, !dbg !5853, !tbaa !5702
  call void @llvm.dbg.value(metadata i32* undef, metadata !5819, metadata !DIExpression()), !dbg !5824
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5854
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !5854, !tbaa !5196
  %29 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %28, i32 0, i32 1, !dbg !5855
  %30 = ptrtoint i32* %29 to i32, !dbg !5856
  %31 = ptrtoint i8* %1 to i32, !dbg !5857
  %32 = call i32 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* noundef %22, i32 noundef %30, i32 noundef %31, i32 noundef %10) #26, !dbg !5858
  %33 = bitcast i32* %4 to i8*, !dbg !5859
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33), !dbg !5859
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5820, metadata !DIExpression()), !dbg !5859
  store volatile i32 0, i32* %4, align 4, !dbg !5859, !tbaa !2487
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %27, align 4, !dbg !5859, !tbaa !5196
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 0, !dbg !5859
  %36 = load volatile i32, i32* %35, align 4, !dbg !5859, !tbaa !5468
  store volatile i32 %36, i32* %4, align 4, !dbg !5859, !tbaa !2487
  %37 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 1, !dbg !5859
  %38 = load volatile i32, i32* %37, align 4, !dbg !5859, !tbaa !5428
  store volatile i32 %38, i32* %4, align 4, !dbg !5859, !tbaa !2487
  %39 = load volatile i32, i32* %4, align 4, !dbg !5859, !tbaa !2487
  %40 = bitcast i32* %4 to i8*, !dbg !5860
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40), !dbg !5860
  store i32 0, i32* %14, align 4, !dbg !5861, !tbaa !5191
  %41 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 3, !dbg !5863
  %42 = load volatile i32, i32* %41, align 4, !dbg !5863, !tbaa !3929
  %43 = or i32 %42, 256, !dbg !5863
  store volatile i32 %43, i32* %41, align 4, !dbg !5863, !tbaa !3929
  %44 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 5, !dbg !5864
  %45 = load volatile i32, i32* %44, align 4, !dbg !5864, !tbaa !3817
  %46 = or i32 %45, 1, !dbg !5864
  store volatile i32 %46, i32* %44, align 4, !dbg !5864, !tbaa !3817
  %47 = load volatile i32, i32* %44, align 4, !dbg !5865, !tbaa !3817
  %48 = or i32 %47, 64, !dbg !5865
  store volatile i32 %48, i32* %44, align 4, !dbg !5865, !tbaa !3817
  br label %49, !dbg !5866

49:                                               ; preds = %3, %13, %8, %17
  %50 = phi i32 [ 0, %17 ], [ 1, %8 ], [ 2, %13 ], [ 2, %3 ], !dbg !5867
  ret i32 %50, !dbg !5868
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAReceiveCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !5869 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !5871, metadata !DIExpression()), !dbg !5873
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !5874
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !5874
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !5874, !tbaa !5723
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !5872, metadata !DIExpression()), !dbg !5873
  %5 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 0, !dbg !5875
  %6 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %5, align 4, !dbg !5875, !tbaa !5726
  %7 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %6, i32 0, i32 0, !dbg !5877
  %8 = load volatile i32, i32* %7, align 4, !dbg !5877, !tbaa !3156
  %9 = and i32 %8, 32, !dbg !5878
  %10 = icmp eq i32 %9, 0, !dbg !5879
  br i1 %10, label %11, label %24, !dbg !5880

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !5881
  store volatile i16 0, i16* %12, align 2, !dbg !5883, !tbaa !5524
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 0, !dbg !5884
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %13, align 4, !dbg !5884, !tbaa !5196
  %15 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 3, !dbg !5884
  %16 = load volatile i32, i32* %15, align 4, !dbg !5884, !tbaa !3929
  %17 = and i32 %16, -257, !dbg !5884
  store volatile i32 %17, i32* %15, align 4, !dbg !5884, !tbaa !3929
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %14, i32 0, i32 5, !dbg !5885
  %19 = load volatile i32, i32* %18, align 4, !dbg !5885, !tbaa !3817
  %20 = and i32 %19, -2, !dbg !5885
  store volatile i32 %20, i32* %18, align 4, !dbg !5885, !tbaa !3817
  %21 = load volatile i32, i32* %18, align 4, !dbg !5886, !tbaa !3817
  %22 = and i32 %21, -65, !dbg !5886
  store volatile i32 %22, i32* %18, align 4, !dbg !5886, !tbaa !3817
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !5887
  store volatile i32 32, i32* %23, align 4, !dbg !5888, !tbaa !5207
  br label %24, !dbg !5889

24:                                               ; preds = %11, %1
  call void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5890
  ret void, !dbg !5891
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxHalfCplt(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !5892 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !5894, metadata !DIExpression()), !dbg !5896
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !5897
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !5897
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !5897, !tbaa !5723
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !5895, metadata !DIExpression()), !dbg !5896
  call void @HAL_UART_RxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !5898
  ret void, !dbg !5899
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_RxHalfCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5900 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5902, metadata !DIExpression()), !dbg !5903
  ret void, !dbg !5904
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5905 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5907, metadata !DIExpression()), !dbg !5908
  ret void, !dbg !5909
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_UART_DMAPause(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !5910 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5912, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i32 0, metadata !5913, metadata !DIExpression()), !dbg !5914
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5915
  %3 = load i32, i32* %2, align 4, !dbg !5915, !tbaa !5191
  %4 = icmp eq i32 %3, 1, !dbg !5915
  br i1 %4, label %36, label %5, !dbg !5918

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !5919, !tbaa !5191
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5921
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !5921, !tbaa !5196
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %7, i32 0, i32 5, !dbg !5921
  %9 = load volatile i32, i32* %8, align 4, !dbg !5921, !tbaa !3817
  %10 = and i32 %9, 128, !dbg !5921
  %11 = icmp ne i32 %10, 0, !dbg !5921
  call void @llvm.dbg.value(metadata i1 %11, metadata !5913, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5914
  %12 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5922
  %13 = load volatile i32, i32* %12, align 4, !dbg !5922, !tbaa !5183
  %14 = icmp eq i32 %13, 33, !dbg !5924
  %15 = select i1 %14, i1 %11, i1 false, !dbg !5925
  br i1 %15, label %16, label %19, !dbg !5925

16:                                               ; preds = %5
  %17 = load volatile i32, i32* %8, align 4, !dbg !5926, !tbaa !3817
  %18 = and i32 %17, -129, !dbg !5926
  store volatile i32 %18, i32* %8, align 4, !dbg !5926, !tbaa !3817
  br label %19, !dbg !5928

19:                                               ; preds = %16, %5
  %20 = load volatile i32, i32* %8, align 4, !dbg !5929, !tbaa !3817
  %21 = and i32 %20, 64, !dbg !5929
  %22 = icmp ne i32 %21, 0, !dbg !5929
  call void @llvm.dbg.value(metadata i1 %22, metadata !5913, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5914
  %23 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5930
  %24 = load volatile i32, i32* %23, align 4, !dbg !5930, !tbaa !5207
  %25 = icmp eq i32 %24, 34, !dbg !5932
  %26 = select i1 %25, i1 %22, i1 false, !dbg !5933
  br i1 %26, label %27, label %35, !dbg !5933

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %7, i32 0, i32 3, !dbg !5934
  %29 = load volatile i32, i32* %28, align 4, !dbg !5934, !tbaa !3929
  %30 = and i32 %29, -257, !dbg !5934
  store volatile i32 %30, i32* %28, align 4, !dbg !5934, !tbaa !3929
  %31 = load volatile i32, i32* %8, align 4, !dbg !5936, !tbaa !3817
  %32 = and i32 %31, -2, !dbg !5936
  store volatile i32 %32, i32* %8, align 4, !dbg !5936, !tbaa !3817
  %33 = load volatile i32, i32* %8, align 4, !dbg !5937, !tbaa !3817
  %34 = and i32 %33, -65, !dbg !5937
  store volatile i32 %34, i32* %8, align 4, !dbg !5937, !tbaa !3817
  br label %35, !dbg !5938

35:                                               ; preds = %19, %27
  store i32 0, i32* %2, align 4, !dbg !5939, !tbaa !5191
  br label %36, !dbg !5941

36:                                               ; preds = %1, %35
  %37 = phi i32 [ 0, %35 ], [ 2, %1 ], !dbg !5914
  ret i32 %37, !dbg !5942
}

; Function Attrs: nofree noinline nounwind
define dso_local i32 @HAL_UART_DMAResume(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #17 !dbg !5943 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5945, metadata !DIExpression()), !dbg !5950
  %3 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !5951
  %4 = load i32, i32* %3, align 4, !dbg !5951, !tbaa !5191
  %5 = icmp eq i32 %4, 1, !dbg !5951
  br i1 %5, label %39, label %6, !dbg !5954

6:                                                ; preds = %1
  store i32 1, i32* %3, align 4, !dbg !5955, !tbaa !5191
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5957
  %8 = load volatile i32, i32* %7, align 4, !dbg !5957, !tbaa !5183
  %9 = icmp eq i32 %8, 33, !dbg !5959
  br i1 %9, label %10, label %16, !dbg !5960

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5961
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %11, align 4, !dbg !5961, !tbaa !5196
  %13 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %12, i32 0, i32 5, !dbg !5961
  %14 = load volatile i32, i32* %13, align 4, !dbg !5961, !tbaa !3817
  %15 = or i32 %14, 128, !dbg !5961
  store volatile i32 %15, i32* %13, align 4, !dbg !5961, !tbaa !3817
  br label %16, !dbg !5963

16:                                               ; preds = %10, %6
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5964
  %18 = load volatile i32, i32* %17, align 4, !dbg !5964, !tbaa !5207
  %19 = icmp eq i32 %18, 34, !dbg !5965
  br i1 %19, label %20, label %38, !dbg !5966

20:                                               ; preds = %16
  %21 = bitcast i32* %2 to i8*, !dbg !5967
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !5967
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5946, metadata !DIExpression()), !dbg !5967
  store volatile i32 0, i32* %2, align 4, !dbg !5967, !tbaa !2487
  %22 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5967
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !5967, !tbaa !5196
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 0, !dbg !5967
  %25 = load volatile i32, i32* %24, align 4, !dbg !5967, !tbaa !5468
  store volatile i32 %25, i32* %2, align 4, !dbg !5967, !tbaa !2487
  %26 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 1, !dbg !5967
  %27 = load volatile i32, i32* %26, align 4, !dbg !5967, !tbaa !5428
  store volatile i32 %27, i32* %2, align 4, !dbg !5967, !tbaa !2487
  %28 = load volatile i32, i32* %2, align 4, !dbg !5967, !tbaa !2487
  %29 = bitcast i32* %2 to i8*, !dbg !5968
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29), !dbg !5968
  %30 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 3, !dbg !5969
  %31 = load volatile i32, i32* %30, align 4, !dbg !5969, !tbaa !3929
  %32 = or i32 %31, 256, !dbg !5969
  store volatile i32 %32, i32* %30, align 4, !dbg !5969, !tbaa !3929
  %33 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 5, !dbg !5970
  %34 = load volatile i32, i32* %33, align 4, !dbg !5970, !tbaa !3817
  %35 = or i32 %34, 1, !dbg !5970
  store volatile i32 %35, i32* %33, align 4, !dbg !5970, !tbaa !3817
  %36 = load volatile i32, i32* %33, align 4, !dbg !5971, !tbaa !3817
  %37 = or i32 %36, 64, !dbg !5971
  store volatile i32 %37, i32* %33, align 4, !dbg !5971, !tbaa !3817
  br label %38, !dbg !5972

38:                                               ; preds = %16, %20
  store i32 0, i32* %3, align 4, !dbg !5973, !tbaa !5191
  br label %39, !dbg !5975

39:                                               ; preds = %1, %38
  %40 = phi i32 [ 0, %38 ], [ 2, %1 ], !dbg !5950
  ret i32 %40, !dbg !5976
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_DMAStop(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !5977 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !5979, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.value(metadata i32 0, metadata !5980, metadata !DIExpression()), !dbg !5981
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !5982
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !5982, !tbaa !5196
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !5982
  %5 = load volatile i32, i32* %4, align 4, !dbg !5982, !tbaa !3817
  %6 = and i32 %5, 128, !dbg !5982
  %7 = icmp ne i32 %6, 0, !dbg !5982
  call void @llvm.dbg.value(metadata i1 %7, metadata !5980, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5981
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !5983
  %9 = load volatile i32, i32* %8, align 4, !dbg !5983, !tbaa !5183
  %10 = icmp eq i32 %9, 33, !dbg !5985
  %11 = select i1 %10, i1 %7, i1 false, !dbg !5986
  br i1 %11, label %12, label %21, !dbg !5986

12:                                               ; preds = %1
  %13 = load volatile i32, i32* %4, align 4, !dbg !5987, !tbaa !3817
  %14 = and i32 %13, -129, !dbg !5987
  store volatile i32 %14, i32* %4, align 4, !dbg !5987, !tbaa !3817
  %15 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !5989
  %16 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %15, align 4, !dbg !5989, !tbaa !5689
  %17 = icmp eq %struct.__DMA_HandleTypeDef* %16, null, !dbg !5991
  br i1 %17, label %20, label %18, !dbg !5992

18:                                               ; preds = %12
  %19 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %16) #26, !dbg !5993
  br label %20, !dbg !5995

20:                                               ; preds = %18, %12
  call fastcc void @UART_EndTxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !5996
  br label %21, !dbg !5997

21:                                               ; preds = %20, %1
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !5998, !tbaa !5196
  %23 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %22, i32 0, i32 5, !dbg !5998
  %24 = load volatile i32, i32* %23, align 4, !dbg !5998, !tbaa !3817
  %25 = and i32 %24, 64, !dbg !5998
  %26 = icmp ne i32 %25, 0, !dbg !5998
  call void @llvm.dbg.value(metadata i1 %26, metadata !5980, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5981
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !5999
  %28 = load volatile i32, i32* %27, align 4, !dbg !5999, !tbaa !5207
  %29 = icmp eq i32 %28, 34, !dbg !6001
  %30 = select i1 %29, i1 %26, i1 false, !dbg !6002
  br i1 %30, label %31, label %40, !dbg !6002

31:                                               ; preds = %21
  %32 = load volatile i32, i32* %23, align 4, !dbg !6003, !tbaa !3817
  %33 = and i32 %32, -65, !dbg !6003
  store volatile i32 %33, i32* %23, align 4, !dbg !6003, !tbaa !3817
  %34 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !6005
  %35 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %34, align 4, !dbg !6005, !tbaa !5845
  %36 = icmp eq %struct.__DMA_HandleTypeDef* %35, null, !dbg !6007
  br i1 %36, label %39, label %37, !dbg !6008

37:                                               ; preds = %31
  %38 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %35) #26, !dbg !6009
  br label %39, !dbg !6011

39:                                               ; preds = %37, %31
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6012
  br label %40, !dbg !6013

40:                                               ; preds = %39, %21
  ret i32 0, !dbg !6014
}

declare !dbg !6015 dso_local i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #25

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Abort(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6018 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6020, metadata !DIExpression()), !dbg !6021
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6022
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6022, !tbaa !5196
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6022
  %5 = load volatile i32, i32* %4, align 4, !dbg !6022, !tbaa !3929
  %6 = and i32 %5, -481, !dbg !6022
  store volatile i32 %6, i32* %4, align 4, !dbg !6022, !tbaa !3929
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6023
  %8 = load volatile i32, i32* %7, align 4, !dbg !6023, !tbaa !3817
  %9 = and i32 %8, -2, !dbg !6023
  store volatile i32 %9, i32* %7, align 4, !dbg !6023, !tbaa !3817
  %10 = load volatile i32, i32* %7, align 4, !dbg !6024, !tbaa !3817
  %11 = and i32 %10, 128, !dbg !6024
  %12 = icmp eq i32 %11, 0, !dbg !6024
  br i1 %12, label %29, label %13, !dbg !6026

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !6027, !tbaa !3817
  %15 = and i32 %14, -129, !dbg !6027
  store volatile i32 %15, i32* %7, align 4, !dbg !6027, !tbaa !3817
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !6029
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !6029, !tbaa !5689
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !6031
  br i1 %18, label %29, label %19, !dbg !6032

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !6033
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !6035, !tbaa !5702
  %21 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #26, !dbg !6036
  %22 = icmp eq i32 %21, 0, !dbg !6038
  br i1 %22, label %29, label %23, !dbg !6039

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !6040, !tbaa !5689
  %25 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %24) #26, !dbg !6043
  %26 = icmp eq i32 %25, 32, !dbg !6044
  br i1 %26, label %27, label %29, !dbg !6045

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6046
  store volatile i32 16, i32* %28, align 4, !dbg !6048, !tbaa !5203
  br label %57, !dbg !6049

29:                                               ; preds = %13, %23, %19, %1
  %30 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6050, !tbaa !5196
  %31 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %30, i32 0, i32 5, !dbg !6050
  %32 = load volatile i32, i32* %31, align 4, !dbg !6050, !tbaa !3817
  %33 = and i32 %32, 64, !dbg !6050
  %34 = icmp eq i32 %33, 0, !dbg !6050
  br i1 %34, label %51, label %35, !dbg !6052

35:                                               ; preds = %29
  %36 = load volatile i32, i32* %31, align 4, !dbg !6053, !tbaa !3817
  %37 = and i32 %36, -65, !dbg !6053
  store volatile i32 %37, i32* %31, align 4, !dbg !6053, !tbaa !3817
  %38 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !6055
  %39 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %38, align 4, !dbg !6055, !tbaa !5845
  %40 = icmp eq %struct.__DMA_HandleTypeDef* %39, null, !dbg !6057
  br i1 %40, label %51, label %41, !dbg !6058

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %39, i32 0, i32 8, !dbg !6059
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %42, align 4, !dbg !6061, !tbaa !5702
  %43 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %39) #26, !dbg !6062
  %44 = icmp eq i32 %43, 0, !dbg !6064
  br i1 %44, label %51, label %45, !dbg !6065

45:                                               ; preds = %41
  %46 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %38, align 4, !dbg !6066, !tbaa !5845
  %47 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %46) #26, !dbg !6069
  %48 = icmp eq i32 %47, 32, !dbg !6070
  br i1 %48, label %49, label %51, !dbg !6071

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6072
  store volatile i32 16, i32* %50, align 4, !dbg !6074, !tbaa !5203
  br label %57, !dbg !6075

51:                                               ; preds = %35, %45, %41, %29
  %52 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !6076
  store volatile i16 0, i16* %52, align 2, !dbg !6077, !tbaa !5408
  %53 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !6078
  store volatile i16 0, i16* %53, align 2, !dbg !6079, !tbaa !5524
  %54 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6080
  store volatile i32 0, i32* %54, align 4, !dbg !6081, !tbaa !5203
  %55 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6082
  store volatile i32 32, i32* %55, align 4, !dbg !6083, !tbaa !5207
  %56 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6084
  store volatile i32 32, i32* %56, align 4, !dbg !6085, !tbaa !5183
  br label %57, !dbg !6086

57:                                               ; preds = %51, %49, %27
  %58 = phi i32 [ 3, %27 ], [ 3, %49 ], [ 0, %51 ], !dbg !6021
  ret i32 %58, !dbg !6087
}

declare !dbg !6088 dso_local i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #25

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortTransmit(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6091 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6093, metadata !DIExpression()), !dbg !6094
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6095
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6095, !tbaa !5196
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6095
  %5 = load volatile i32, i32* %4, align 4, !dbg !6095, !tbaa !3929
  %6 = and i32 %5, -193, !dbg !6095
  store volatile i32 %6, i32* %4, align 4, !dbg !6095, !tbaa !3929
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6096
  %8 = load volatile i32, i32* %7, align 4, !dbg !6096, !tbaa !3817
  %9 = and i32 %8, 128, !dbg !6096
  %10 = icmp eq i32 %9, 0, !dbg !6096
  br i1 %10, label %27, label %11, !dbg !6098

11:                                               ; preds = %1
  %12 = load volatile i32, i32* %7, align 4, !dbg !6099, !tbaa !3817
  %13 = and i32 %12, -129, !dbg !6099
  store volatile i32 %13, i32* %7, align 4, !dbg !6099, !tbaa !3817
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !6101
  %15 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !6101, !tbaa !5689
  %16 = icmp eq %struct.__DMA_HandleTypeDef* %15, null, !dbg !6103
  br i1 %16, label %27, label %17, !dbg !6104

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %15, i32 0, i32 8, !dbg !6105
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %18, align 4, !dbg !6107, !tbaa !5702
  %19 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %15) #26, !dbg !6108
  %20 = icmp eq i32 %19, 0, !dbg !6110
  br i1 %20, label %27, label %21, !dbg !6111

21:                                               ; preds = %17
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !6112, !tbaa !5689
  %23 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %22) #26, !dbg !6115
  %24 = icmp eq i32 %23, 32, !dbg !6116
  br i1 %24, label %25, label %27, !dbg !6117

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6118
  store volatile i32 16, i32* %26, align 4, !dbg !6120, !tbaa !5203
  br label %30, !dbg !6121

27:                                               ; preds = %11, %21, %17, %1
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !6122
  store volatile i16 0, i16* %28, align 2, !dbg !6123, !tbaa !5408
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6124
  store volatile i32 32, i32* %29, align 4, !dbg !6125, !tbaa !5183
  br label %30, !dbg !6126

30:                                               ; preds = %27, %25
  %31 = phi i32 [ 3, %25 ], [ 0, %27 ], !dbg !6094
  ret i32 %31, !dbg !6127
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortReceive(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6128 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6130, metadata !DIExpression()), !dbg !6131
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6132
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6132, !tbaa !5196
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6132
  %5 = load volatile i32, i32* %4, align 4, !dbg !6132, !tbaa !3929
  %6 = and i32 %5, -289, !dbg !6132
  store volatile i32 %6, i32* %4, align 4, !dbg !6132, !tbaa !3929
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6133
  %8 = load volatile i32, i32* %7, align 4, !dbg !6133, !tbaa !3817
  %9 = and i32 %8, -2, !dbg !6133
  store volatile i32 %9, i32* %7, align 4, !dbg !6133, !tbaa !3817
  %10 = load volatile i32, i32* %7, align 4, !dbg !6134, !tbaa !3817
  %11 = and i32 %10, 64, !dbg !6134
  %12 = icmp eq i32 %11, 0, !dbg !6134
  br i1 %12, label %29, label %13, !dbg !6136

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !6137, !tbaa !3817
  %15 = and i32 %14, -65, !dbg !6137
  store volatile i32 %15, i32* %7, align 4, !dbg !6137, !tbaa !3817
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !6139
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !6139, !tbaa !5845
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !6141
  br i1 %18, label %29, label %19, !dbg !6142

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !6143
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !6145, !tbaa !5702
  %21 = call i32 @HAL_DMA_Abort(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #26, !dbg !6146
  %22 = icmp eq i32 %21, 0, !dbg !6148
  br i1 %22, label %29, label %23, !dbg !6149

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !6150, !tbaa !5845
  %25 = call i32 @HAL_DMA_GetError(%struct.__DMA_HandleTypeDef* noundef %24) #26, !dbg !6153
  %26 = icmp eq i32 %25, 32, !dbg !6154
  br i1 %26, label %27, label %29, !dbg !6155

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6156
  store volatile i32 16, i32* %28, align 4, !dbg !6158, !tbaa !5203
  br label %32, !dbg !6159

29:                                               ; preds = %13, %23, %19, %1
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !6160
  store volatile i16 0, i16* %30, align 2, !dbg !6161, !tbaa !5524
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6162
  store volatile i32 32, i32* %31, align 4, !dbg !6163, !tbaa !5207
  br label %32, !dbg !6164

32:                                               ; preds = %29, %27
  %33 = phi i32 [ 3, %27 ], [ 0, %29 ], !dbg !6131
  ret i32 %33, !dbg !6165
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_Abort_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6166 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6168, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.value(metadata i32 1, metadata !6169, metadata !DIExpression()), !dbg !6170
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6171
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6171, !tbaa !5196
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6171
  %5 = load volatile i32, i32* %4, align 4, !dbg !6171, !tbaa !3929
  %6 = and i32 %5, -481, !dbg !6171
  store volatile i32 %6, i32* %4, align 4, !dbg !6171, !tbaa !3929
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6172
  %8 = load volatile i32, i32* %7, align 4, !dbg !6172, !tbaa !3817
  %9 = and i32 %8, -2, !dbg !6172
  store volatile i32 %9, i32* %7, align 4, !dbg !6172, !tbaa !3817
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !6173
  %11 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %10, align 4, !dbg !6173, !tbaa !5689
  %12 = icmp eq %struct.__DMA_HandleTypeDef* %11, null, !dbg !6175
  br i1 %12, label %19, label %13, !dbg !6176

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !6177, !tbaa !3817
  %15 = and i32 %14, 128, !dbg !6177
  %16 = icmp eq i32 %15, 0, !dbg !6177
  %17 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %11, i32 0, i32 8, !dbg !6180
  %18 = select i1 %16, void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxAbortCallback
  store void (%struct.__DMA_HandleTypeDef*)* %18, void (%struct.__DMA_HandleTypeDef*)** %17, align 4, !dbg !6180, !tbaa !5702
  br label %19, !dbg !6181

19:                                               ; preds = %13, %1
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !6181
  %21 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !6181, !tbaa !5845
  %22 = icmp eq %struct.__DMA_HandleTypeDef* %21, null, !dbg !6183
  br i1 %22, label %29, label %23, !dbg !6184

23:                                               ; preds = %19
  %24 = load volatile i32, i32* %7, align 4, !dbg !6185, !tbaa !3817
  %25 = and i32 %24, 64, !dbg !6185
  %26 = icmp eq i32 %25, 0, !dbg !6185
  %27 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %21, i32 0, i32 8, !dbg !6188
  %28 = select i1 %26, void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxAbortCallback
  store void (%struct.__DMA_HandleTypeDef*)* %28, void (%struct.__DMA_HandleTypeDef*)** %27, align 4, !dbg !6188, !tbaa !5702
  br label %29, !dbg !6189

29:                                               ; preds = %23, %19
  %30 = load volatile i32, i32* %7, align 4, !dbg !6189, !tbaa !3817
  %31 = and i32 %30, 128, !dbg !6189
  %32 = icmp eq i32 %31, 0, !dbg !6189
  br i1 %32, label %42, label %33, !dbg !6191

33:                                               ; preds = %29
  %34 = load volatile i32, i32* %7, align 4, !dbg !6192, !tbaa !3817
  %35 = and i32 %34, -129, !dbg !6192
  store volatile i32 %35, i32* %7, align 4, !dbg !6192, !tbaa !3817
  br i1 %12, label %42, label %36, !dbg !6194

36:                                               ; preds = %33
  %37 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %11) #26, !dbg !6195
  %38 = icmp eq i32 %37, 0, !dbg !6199
  br i1 %38, label %42, label %39, !dbg !6200

39:                                               ; preds = %36
  %40 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %10, align 4, !dbg !6201, !tbaa !5689
  %41 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %40, i32 0, i32 8, !dbg !6203
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %41, align 4, !dbg !6204, !tbaa !5702
  br label %42, !dbg !6205

42:                                               ; preds = %36, %33, %39, %29
  %43 = phi i32 [ 1, %39 ], [ 1, %33 ], [ 1, %29 ], [ 0, %36 ], !dbg !6170
  call void @llvm.dbg.value(metadata i32 %43, metadata !6169, metadata !DIExpression()), !dbg !6170
  %44 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6206, !tbaa !5196
  %45 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %44, i32 0, i32 5, !dbg !6206
  %46 = load volatile i32, i32* %45, align 4, !dbg !6206, !tbaa !3817
  %47 = and i32 %46, 64, !dbg !6206
  %48 = icmp eq i32 %47, 0, !dbg !6206
  br i1 %48, label %60, label %49, !dbg !6208

49:                                               ; preds = %42
  %50 = load volatile i32, i32* %45, align 4, !dbg !6209, !tbaa !3817
  %51 = and i32 %50, -65, !dbg !6209
  store volatile i32 %51, i32* %45, align 4, !dbg !6209, !tbaa !3817
  %52 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !6211, !tbaa !5845
  %53 = icmp eq %struct.__DMA_HandleTypeDef* %52, null, !dbg !6213
  br i1 %53, label %60, label %54, !dbg !6214

54:                                               ; preds = %49
  %55 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %52) #26, !dbg !6215
  %56 = icmp eq i32 %55, 0, !dbg !6218
  br i1 %56, label %60, label %57, !dbg !6219

57:                                               ; preds = %54
  %58 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %20, align 4, !dbg !6220, !tbaa !5845
  %59 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %58, i32 0, i32 8, !dbg !6222
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %59, align 4, !dbg !6223, !tbaa !5702
  call void @llvm.dbg.value(metadata i32 1, metadata !6169, metadata !DIExpression()), !dbg !6170
  br label %60, !dbg !6224

60:                                               ; preds = %54, %49, %57, %42
  %61 = phi i32 [ 1, %57 ], [ %43, %49 ], [ %43, %42 ], [ 0, %54 ], !dbg !6170
  call void @llvm.dbg.value(metadata i32 %61, metadata !6169, metadata !DIExpression()), !dbg !6170
  %62 = icmp eq i32 %61, 1, !dbg !6225
  br i1 %62, label %63, label %69, !dbg !6227

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !6228
  store volatile i16 0, i16* %64, align 2, !dbg !6230, !tbaa !5408
  %65 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !6231
  store volatile i16 0, i16* %65, align 2, !dbg !6232, !tbaa !5524
  %66 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6233
  store volatile i32 0, i32* %66, align 4, !dbg !6234, !tbaa !5203
  %67 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6235
  store volatile i32 32, i32* %67, align 4, !dbg !6236, !tbaa !5183
  %68 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6237
  store volatile i32 32, i32* %68, align 4, !dbg !6238, !tbaa !5207
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6239
  br label %69, !dbg !6240

69:                                               ; preds = %63, %60
  ret i32 0, !dbg !6241
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !6242 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !6244, metadata !DIExpression()), !dbg !6246
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !6247
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !6247
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !6247, !tbaa !5723
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !6245, metadata !DIExpression()), !dbg !6246
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 8, !dbg !6248
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %5, align 4, !dbg !6248, !tbaa !5689
  %7 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 8, !dbg !6249
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %7, align 4, !dbg !6250, !tbaa !5702
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 9, !dbg !6251
  %9 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %8, align 4, !dbg !6251, !tbaa !5845
  %10 = icmp eq %struct.__DMA_HandleTypeDef* %9, null, !dbg !6253
  br i1 %10, label %15, label %11, !dbg !6254

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %9, i32 0, i32 8, !dbg !6255
  %13 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %12, align 4, !dbg !6255, !tbaa !5702
  %14 = icmp eq void (%struct.__DMA_HandleTypeDef*)* %13, null, !dbg !6258
  br i1 %14, label %15, label %21, !dbg !6259

15:                                               ; preds = %11, %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !6260
  store volatile i16 0, i16* %16, align 2, !dbg !6261, !tbaa !5408
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !6262
  store volatile i16 0, i16* %17, align 2, !dbg !6263, !tbaa !5524
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !6264
  store volatile i32 0, i32* %18, align 4, !dbg !6265, !tbaa !5203
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !6266
  store volatile i32 32, i32* %19, align 4, !dbg !6267, !tbaa !5183
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !6268
  store volatile i32 32, i32* %20, align 4, !dbg !6269, !tbaa !5207
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !6270
  br label %21, !dbg !6271

21:                                               ; preds = %11, %15
  ret void, !dbg !6271
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !6272 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !6274, metadata !DIExpression()), !dbg !6276
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !6277
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !6277
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !6277, !tbaa !5723
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !6275, metadata !DIExpression()), !dbg !6276
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 9, !dbg !6278
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %5, align 4, !dbg !6278, !tbaa !5845
  %7 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 8, !dbg !6279
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %7, align 4, !dbg !6280, !tbaa !5702
  %8 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 8, !dbg !6281
  %9 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %8, align 4, !dbg !6281, !tbaa !5689
  %10 = icmp eq %struct.__DMA_HandleTypeDef* %9, null, !dbg !6283
  br i1 %10, label %15, label %11, !dbg !6284

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %9, i32 0, i32 8, !dbg !6285
  %13 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %12, align 4, !dbg !6285, !tbaa !5702
  %14 = icmp eq void (%struct.__DMA_HandleTypeDef*)* %13, null, !dbg !6288
  br i1 %14, label %15, label %21, !dbg !6289

15:                                               ; preds = %11, %1
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !6290
  store volatile i16 0, i16* %16, align 2, !dbg !6291, !tbaa !5408
  %17 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !6292
  store volatile i16 0, i16* %17, align 2, !dbg !6293, !tbaa !5524
  %18 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 13, !dbg !6294
  store volatile i32 0, i32* %18, align 4, !dbg !6295, !tbaa !5203
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !6296
  store volatile i32 32, i32* %19, align 4, !dbg !6297, !tbaa !5183
  %20 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !6298
  store volatile i32 32, i32* %20, align 4, !dbg !6299, !tbaa !5207
  call void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !6300
  br label %21, !dbg !6301

21:                                               ; preds = %11, %15
  ret void, !dbg !6301
}

declare !dbg !6302 dso_local i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef) local_unnamed_addr #25

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6303 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6305, metadata !DIExpression()), !dbg !6306
  ret void, !dbg !6307
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6308 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6310, metadata !DIExpression()), !dbg !6311
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6312
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6312, !tbaa !5196
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6312
  %5 = load volatile i32, i32* %4, align 4, !dbg !6312, !tbaa !3929
  %6 = and i32 %5, -193, !dbg !6312
  store volatile i32 %6, i32* %4, align 4, !dbg !6312, !tbaa !3929
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6313
  %8 = load volatile i32, i32* %7, align 4, !dbg !6313, !tbaa !3817
  %9 = and i32 %8, 128, !dbg !6313
  %10 = icmp eq i32 %9, 0, !dbg !6313
  br i1 %10, label %28, label %11, !dbg !6315

11:                                               ; preds = %1
  %12 = load volatile i32, i32* %7, align 4, !dbg !6316, !tbaa !3817
  %13 = and i32 %12, -129, !dbg !6316
  store volatile i32 %13, i32* %7, align 4, !dbg !6316, !tbaa !3817
  %14 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 8, !dbg !6318
  %15 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !6318, !tbaa !5689
  %16 = icmp eq %struct.__DMA_HandleTypeDef* %15, null, !dbg !6320
  br i1 %16, label %25, label %17, !dbg !6321

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %15, i32 0, i32 8, !dbg !6322
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMATxOnlyAbortCallback, void (%struct.__DMA_HandleTypeDef*)** %18, align 4, !dbg !6324, !tbaa !5702
  %19 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %15) #26, !dbg !6325
  %20 = icmp eq i32 %19, 0, !dbg !6327
  br i1 %20, label %31, label %21, !dbg !6328

21:                                               ; preds = %17
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %14, align 4, !dbg !6329, !tbaa !5689
  %23 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %22, i32 0, i32 8, !dbg !6331
  %24 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %23, align 4, !dbg !6331, !tbaa !5702
  call void %24(%struct.__DMA_HandleTypeDef* noundef %22) #26, !dbg !6332
  br label %31, !dbg !6333

25:                                               ; preds = %11
  %26 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !6334
  store volatile i16 0, i16* %26, align 2, !dbg !6336, !tbaa !5408
  %27 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6337
  store volatile i32 32, i32* %27, align 4, !dbg !6338, !tbaa !5183
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6339
  br label %31

28:                                               ; preds = %1
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !6340
  store volatile i16 0, i16* %29, align 2, !dbg !6342, !tbaa !5408
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6343
  store volatile i32 32, i32* %30, align 4, !dbg !6344, !tbaa !5183
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6345
  br label %31

31:                                               ; preds = %25, %21, %17, %28
  ret i32 0, !dbg !6346
}

; Function Attrs: noinline nounwind
define internal void @UART_DMATxOnlyAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !6347 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !6349, metadata !DIExpression()), !dbg !6351
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !6352
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !6352
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !6352, !tbaa !5723
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !6350, metadata !DIExpression()), !dbg !6351
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !6353
  store volatile i16 0, i16* %5, align 2, !dbg !6354, !tbaa !5408
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 11, !dbg !6355
  store volatile i32 32, i32* %6, align 4, !dbg !6356, !tbaa !5183
  call void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !6357
  ret void, !dbg !6358
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortTransmitCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6359 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6361, metadata !DIExpression()), !dbg !6362
  ret void, !dbg !6363
}

; Function Attrs: noinline nounwind
define dso_local i32 @HAL_UART_AbortReceive_IT(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6364 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6366, metadata !DIExpression()), !dbg !6367
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6368
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6368, !tbaa !5196
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6368
  %5 = load volatile i32, i32* %4, align 4, !dbg !6368, !tbaa !3929
  %6 = and i32 %5, -289, !dbg !6368
  store volatile i32 %6, i32* %4, align 4, !dbg !6368, !tbaa !3929
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6369
  %8 = load volatile i32, i32* %7, align 4, !dbg !6369, !tbaa !3817
  %9 = and i32 %8, -2, !dbg !6369
  store volatile i32 %9, i32* %7, align 4, !dbg !6369, !tbaa !3817
  %10 = load volatile i32, i32* %7, align 4, !dbg !6370, !tbaa !3817
  %11 = and i32 %10, 64, !dbg !6370
  %12 = icmp eq i32 %11, 0, !dbg !6370
  br i1 %12, label %30, label %13, !dbg !6372

13:                                               ; preds = %1
  %14 = load volatile i32, i32* %7, align 4, !dbg !6373, !tbaa !3817
  %15 = and i32 %14, -65, !dbg !6373
  store volatile i32 %15, i32* %7, align 4, !dbg !6373, !tbaa !3817
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !6375
  %17 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !6375, !tbaa !5845
  %18 = icmp eq %struct.__DMA_HandleTypeDef* %17, null, !dbg !6377
  br i1 %18, label %27, label %19, !dbg !6378

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %17, i32 0, i32 8, !dbg !6379
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMARxOnlyAbortCallback, void (%struct.__DMA_HandleTypeDef*)** %20, align 4, !dbg !6381, !tbaa !5702
  %21 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %17) #26, !dbg !6382
  %22 = icmp eq i32 %21, 0, !dbg !6384
  br i1 %22, label %33, label %23, !dbg !6385

23:                                               ; preds = %19
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %16, align 4, !dbg !6386, !tbaa !5845
  %25 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %24, i32 0, i32 8, !dbg !6388
  %26 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %25, align 4, !dbg !6388, !tbaa !5702
  call void %26(%struct.__DMA_HandleTypeDef* noundef %24) #26, !dbg !6389
  br label %33, !dbg !6390

27:                                               ; preds = %13
  %28 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !6391
  store volatile i16 0, i16* %28, align 2, !dbg !6393, !tbaa !5524
  %29 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6394
  store volatile i32 32, i32* %29, align 4, !dbg !6395, !tbaa !5207
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6396
  br label %33

30:                                               ; preds = %1
  %31 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !6397
  store volatile i16 0, i16* %31, align 2, !dbg !6399, !tbaa !5524
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6400
  store volatile i32 32, i32* %32, align 4, !dbg !6401, !tbaa !5207
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6402
  br label %33

33:                                               ; preds = %27, %23, %19, %30
  ret i32 0, !dbg !6403
}

; Function Attrs: noinline nounwind
define internal void @UART_DMARxOnlyAbortCallback(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !6404 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !6406, metadata !DIExpression()), !dbg !6408
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !6409
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !6409
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !6409, !tbaa !5723
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !6407, metadata !DIExpression()), !dbg !6408
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !6410
  store volatile i16 0, i16* %5, align 2, !dbg !6411, !tbaa !5524
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 12, !dbg !6412
  store volatile i32 32, i32* %6, align 4, !dbg !6413, !tbaa !5207
  call void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !6414
  ret void, !dbg !6415
}

; Function Attrs: noinline nounwind
define weak dso_local void @HAL_UART_AbortReceiveCpltCallback(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6416 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6418, metadata !DIExpression()), !dbg !6419
  ret void, !dbg !6420
}

; Function Attrs: noinline nounwind
define dso_local void @HAL_UART_IRQHandler(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #3 !dbg !6421 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6423, metadata !DIExpression()), !dbg !6429
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6430
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6430, !tbaa !5196
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 0, !dbg !6430
  %5 = load volatile i32, i32* %4, align 4, !dbg !6430, !tbaa !5468
  call void @llvm.dbg.value(metadata i32 %5, metadata !6424, metadata !DIExpression()), !dbg !6429
  %6 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6431
  %7 = load volatile i32, i32* %6, align 4, !dbg !6431, !tbaa !3929
  call void @llvm.dbg.value(metadata i32 %7, metadata !6425, metadata !DIExpression()), !dbg !6429
  %8 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 5, !dbg !6432
  %9 = load volatile i32, i32* %8, align 4, !dbg !6432, !tbaa !3817
  call void @llvm.dbg.value(metadata i32 %9, metadata !6426, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i32 0, metadata !6427, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i32 0, metadata !6428, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i32 %5, metadata !6427, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !6429
  %10 = and i32 %5, 32
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %5, 47, !dbg !6433
  %13 = icmp ne i32 %12, 32, !dbg !6433
  %14 = and i32 %7, 32
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %13, i1 true, i1 %15, !dbg !6433
  br i1 %16, label %18, label %17, !dbg !6433

17:                                               ; preds = %1
  call fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6434
  br label %115, !dbg !6439

18:                                               ; preds = %1
  %19 = and i32 %5, 15, !dbg !6440
  call void @llvm.dbg.value(metadata i32 %19, metadata !6427, metadata !DIExpression()), !dbg !6429
  %20 = icmp eq i32 %19, 0, !dbg !6441
  br i1 %20, label %101, label %21, !dbg !6443

21:                                               ; preds = %18
  %22 = and i32 %9, 1, !dbg !6444
  %23 = icmp eq i32 %22, 0, !dbg !6445
  %24 = and i32 %7, 288
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %23, i1 %25, i1 false, !dbg !6446
  br i1 %26, label %101, label %27, !dbg !6446

27:                                               ; preds = %21
  %28 = and i32 %5, 1, !dbg !6447
  %29 = icmp eq i32 %28, 0, !dbg !6450
  %30 = and i32 %7, 256
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %29, i1 true, i1 %31, !dbg !6451
  br i1 %32, label %37, label %33, !dbg !6451

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6452
  %35 = load volatile i32, i32* %34, align 4, !dbg !6454, !tbaa !5203
  %36 = or i32 %35, 1, !dbg !6454
  store volatile i32 %36, i32* %34, align 4, !dbg !6454, !tbaa !5203
  br label %37, !dbg !6455

37:                                               ; preds = %33, %27
  %38 = and i32 %5, 4, !dbg !6456
  %39 = icmp eq i32 %38, 0, !dbg !6458
  %40 = select i1 %39, i1 true, i1 %23, !dbg !6459
  br i1 %40, label %45, label %41, !dbg !6459

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6460
  %43 = load volatile i32, i32* %42, align 4, !dbg !6462, !tbaa !5203
  %44 = or i32 %43, 2, !dbg !6462
  store volatile i32 %44, i32* %42, align 4, !dbg !6462, !tbaa !5203
  br label %45, !dbg !6463

45:                                               ; preds = %37, %41
  %46 = and i32 %5, 2, !dbg !6464
  %47 = icmp eq i32 %46, 0, !dbg !6466
  %48 = select i1 %47, i1 true, i1 %23, !dbg !6467
  br i1 %48, label %53, label %49, !dbg !6467

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6468
  %51 = load volatile i32, i32* %50, align 4, !dbg !6470, !tbaa !5203
  %52 = or i32 %51, 4, !dbg !6470
  store volatile i32 %52, i32* %50, align 4, !dbg !6470, !tbaa !5203
  br label %53, !dbg !6471

53:                                               ; preds = %45, %49
  %54 = and i32 %5, 8, !dbg !6472
  %55 = icmp eq i32 %54, 0, !dbg !6474
  %56 = select i1 %55, i1 true, i1 %23, !dbg !6475
  br i1 %56, label %61, label %57, !dbg !6475

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6476
  %59 = load volatile i32, i32* %58, align 4, !dbg !6478, !tbaa !5203
  %60 = or i32 %59, 8, !dbg !6478
  store volatile i32 %60, i32* %58, align 4, !dbg !6478, !tbaa !5203
  br label %61, !dbg !6479

61:                                               ; preds = %53, %57
  %62 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6480
  %63 = load volatile i32, i32* %62, align 4, !dbg !6480, !tbaa !5203
  %64 = icmp eq i32 %63, 0, !dbg !6482
  br i1 %64, label %115, label %65, !dbg !6483

65:                                               ; preds = %61
  %66 = select i1 %11, i1 true, i1 %15, !dbg !6484
  br i1 %66, label %68, label %67, !dbg !6484

67:                                               ; preds = %65
  call fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6487
  br label %68, !dbg !6489

68:                                               ; preds = %67, %65
  %69 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6490, !tbaa !5196
  %70 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %69, i32 0, i32 5, !dbg !6490
  %71 = load volatile i32, i32* %70, align 4, !dbg !6490, !tbaa !3817
  %72 = and i32 %71, 64, !dbg !6490
  %73 = icmp ne i32 %72, 0, !dbg !6490
  call void @llvm.dbg.value(metadata i1 %73, metadata !6428, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6429
  %74 = load volatile i32, i32* %62, align 4, !dbg !6491, !tbaa !5203
  %75 = and i32 %74, 8, !dbg !6493
  %76 = icmp ne i32 %75, 0, !dbg !6494
  %77 = select i1 %76, i1 true, i1 %73, !dbg !6495
  br i1 %77, label %78, label %100, !dbg !6495

78:                                               ; preds = %68
  call fastcc void @UART_EndRxTransfer(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6496
  %79 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6498, !tbaa !5196
  %80 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %79, i32 0, i32 5, !dbg !6498
  %81 = load volatile i32, i32* %80, align 4, !dbg !6498, !tbaa !3817
  %82 = and i32 %81, 64, !dbg !6498
  %83 = icmp eq i32 %82, 0, !dbg !6498
  br i1 %83, label %99, label %84, !dbg !6500

84:                                               ; preds = %78
  %85 = load volatile i32, i32* %80, align 4, !dbg !6501, !tbaa !3817
  %86 = and i32 %85, -65, !dbg !6501
  store volatile i32 %86, i32* %80, align 4, !dbg !6501, !tbaa !3817
  %87 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 9, !dbg !6503
  %88 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %87, align 4, !dbg !6503, !tbaa !5845
  %89 = icmp eq %struct.__DMA_HandleTypeDef* %88, null, !dbg !6505
  br i1 %89, label %98, label %90, !dbg !6506

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %88, i32 0, i32 8, !dbg !6507
  store void (%struct.__DMA_HandleTypeDef*)* @UART_DMAAbortOnError, void (%struct.__DMA_HandleTypeDef*)** %91, align 4, !dbg !6509, !tbaa !5702
  %92 = call i32 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* noundef nonnull %88) #26, !dbg !6510
  %93 = icmp eq i32 %92, 0, !dbg !6512
  br i1 %93, label %115, label %94, !dbg !6513

94:                                               ; preds = %90
  %95 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %87, align 4, !dbg !6514, !tbaa !5845
  %96 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %95, i32 0, i32 8, !dbg !6516
  %97 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %96, align 4, !dbg !6516, !tbaa !5702
  call void %97(%struct.__DMA_HandleTypeDef* noundef %95) #26, !dbg !6517
  br label %115, !dbg !6518

98:                                               ; preds = %84
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6519
  br label %115

99:                                               ; preds = %78
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6521
  br label %115

100:                                              ; preds = %68
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6523
  store volatile i32 0, i32* %62, align 4, !dbg !6525, !tbaa !5203
  br label %115

101:                                              ; preds = %21, %18
  %102 = and i32 %5, 128, !dbg !6526
  %103 = icmp eq i32 %102, 0, !dbg !6528
  %104 = and i32 %7, 128
  %105 = icmp eq i32 %104, 0
  %106 = select i1 %103, i1 true, i1 %105, !dbg !6529
  br i1 %106, label %108, label %107, !dbg !6529

107:                                              ; preds = %101
  call fastcc void @UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6530
  br label %115, !dbg !6532

108:                                              ; preds = %101
  %109 = and i32 %5, 64, !dbg !6533
  %110 = icmp eq i32 %109, 0, !dbg !6535
  %111 = and i32 %7, 64
  %112 = icmp eq i32 %111, 0
  %113 = select i1 %110, i1 true, i1 %112, !dbg !6536
  br i1 %113, label %115, label %114, !dbg !6536

114:                                              ; preds = %108
  call fastcc void @UART_EndTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6537
  br label %115, !dbg !6539

115:                                              ; preds = %108, %61, %99, %90, %94, %98, %100, %114, %107, %17
  ret void, !dbg !6540
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_Receive_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #3 !dbg !6541 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6543, metadata !DIExpression()), !dbg !6545
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6546
  %3 = load volatile i32, i32* %2, align 4, !dbg !6546, !tbaa !5207
  %4 = icmp eq i32 %3, 34, !dbg !6548
  br i1 %4, label %5, label %63, !dbg !6549

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !6550
  %7 = load i32, i32* %6, align 4, !dbg !6550, !tbaa !5226
  %8 = icmp eq i32 %7, 4096, !dbg !6553
  br i1 %8, label %9, label %29, !dbg !6554

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !6555
  %11 = bitcast i8** %10 to i16**, !dbg !6555
  %12 = load i16*, i16** %11, align 4, !dbg !6555, !tbaa !5642
  call void @llvm.dbg.value(metadata i16* %12, metadata !6544, metadata !DIExpression()), !dbg !6545
  %13 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !6557
  %14 = load i32, i32* %13, align 4, !dbg !6557, !tbaa !5228
  %15 = icmp eq i32 %14, 0, !dbg !6559
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6560
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %16, align 4, !dbg !6560, !tbaa !5196
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 1, !dbg !6560
  %19 = load volatile i32, i32* %18, align 4, !dbg !6560, !tbaa !5428
  %20 = trunc i32 %19 to i16, !dbg !6560
  br i1 %15, label %21, label %25, !dbg !6561

21:                                               ; preds = %9
  %22 = and i16 %20, 511, !dbg !6562
  store i16 %22, i16* %12, align 2, !dbg !6564, !tbaa !5423
  %23 = load i8*, i8** %10, align 4, !dbg !6565, !tbaa !5642
  %24 = getelementptr inbounds i8, i8* %23, i32 2, !dbg !6565
  store i8* %24, i8** %10, align 4, !dbg !6565, !tbaa !5642
  br label %47, !dbg !6566

25:                                               ; preds = %9
  %26 = and i16 %20, 255, !dbg !6567
  store i16 %26, i16* %12, align 2, !dbg !6569, !tbaa !5423
  %27 = load i8*, i8** %10, align 4, !dbg !6570, !tbaa !5642
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !6570
  store i8* %28, i8** %10, align 4, !dbg !6570, !tbaa !5642
  br label %47

29:                                               ; preds = %5
  %30 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !6571
  %31 = load i32, i32* %30, align 4, !dbg !6571, !tbaa !5228
  %32 = icmp eq i32 %31, 0, !dbg !6574
  %33 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6575
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %33, align 4, !dbg !6575, !tbaa !5196
  %35 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %34, i32 0, i32 1, !dbg !6575
  %36 = load volatile i32, i32* %35, align 4, !dbg !6575, !tbaa !5428
  %37 = trunc i32 %36 to i8, !dbg !6575
  br i1 %32, label %38, label %42, !dbg !6576

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !6577
  %40 = load i8*, i8** %39, align 4, !dbg !6579, !tbaa !5642
  %41 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !6579
  store i8* %41, i8** %39, align 4, !dbg !6579, !tbaa !5642
  store i8 %37, i8* %40, align 1, !dbg !6580, !tbaa !1608
  br label %47, !dbg !6581

42:                                               ; preds = %29
  %43 = and i8 %37, 127, !dbg !6582
  %44 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 5, !dbg !6584
  %45 = load i8*, i8** %44, align 4, !dbg !6585, !tbaa !5642
  %46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !6585
  store i8* %46, i8** %44, align 4, !dbg !6585, !tbaa !5642
  store i8 %43, i8* %45, align 1, !dbg !6586, !tbaa !1608
  br label %47

47:                                               ; preds = %38, %42, %21, %25
  %48 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 7, !dbg !6587
  %49 = load volatile i16, i16* %48, align 2, !dbg !6589, !tbaa !5524
  %50 = add i16 %49, -1, !dbg !6589
  store volatile i16 %50, i16* %48, align 2, !dbg !6589, !tbaa !5524
  %51 = icmp eq i16 %50, 0, !dbg !6590
  br i1 %51, label %52, label %63, !dbg !6591

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6592
  %54 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %53, align 4, !dbg !6592, !tbaa !5196
  %55 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %54, i32 0, i32 3, !dbg !6592
  %56 = load volatile i32, i32* %55, align 4, !dbg !6592, !tbaa !3929
  %57 = and i32 %56, -33, !dbg !6592
  store volatile i32 %57, i32* %55, align 4, !dbg !6592, !tbaa !3929
  %58 = load volatile i32, i32* %55, align 4, !dbg !6594, !tbaa !3929
  %59 = and i32 %58, -257, !dbg !6594
  store volatile i32 %59, i32* %55, align 4, !dbg !6594, !tbaa !3929
  %60 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %54, i32 0, i32 5, !dbg !6595
  %61 = load volatile i32, i32* %60, align 4, !dbg !6595, !tbaa !3817
  %62 = and i32 %61, -2, !dbg !6595
  store volatile i32 %62, i32* %60, align 4, !dbg !6595, !tbaa !3817
  store volatile i32 32, i32* %2, align 4, !dbg !6596, !tbaa !5207
  call void @HAL_UART_RxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6597
  br label %63, !dbg !6598

63:                                               ; preds = %1, %47, %52
  ret void, !dbg !6599
}

; Function Attrs: noinline nounwind
define internal void @UART_DMAAbortOnError(%struct.__DMA_HandleTypeDef* nocapture noundef readonly %0) #3 !dbg !6600 {
  call void @llvm.dbg.value(metadata %struct.__DMA_HandleTypeDef* %0, metadata !6602, metadata !DIExpression()), !dbg !6604
  %2 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !6605
  %3 = bitcast i8** %2 to %struct.__UART_HandleTypeDef**, !dbg !6605
  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %3, align 4, !dbg !6605, !tbaa !5723
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %4, metadata !6603, metadata !DIExpression()), !dbg !6604
  %5 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 7, !dbg !6606
  store volatile i16 0, i16* %5, align 2, !dbg !6607, !tbaa !5524
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %4, i32 0, i32 4, !dbg !6608
  store volatile i16 0, i16* %6, align 2, !dbg !6609, !tbaa !5408
  call void @HAL_UART_ErrorCallback(%struct.__UART_HandleTypeDef* noundef %4), !dbg !6610
  ret void, !dbg !6611
}

; Function Attrs: nofree noinline norecurse nounwind
define internal fastcc void @UART_Transmit_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #14 !dbg !6612 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6614, metadata !DIExpression()), !dbg !6616
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6617
  %3 = load volatile i32, i32* %2, align 4, !dbg !6617, !tbaa !5183
  %4 = icmp eq i32 %3, 33, !dbg !6619
  br i1 %4, label %5, label %48, !dbg !6620

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 1, !dbg !6621
  %7 = load i32, i32* %6, align 4, !dbg !6621, !tbaa !5226
  %8 = icmp eq i32 %7, 4096, !dbg !6624
  %9 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 2, !dbg !6625
  br i1 %8, label %10, label %27, !dbg !6626

10:                                               ; preds = %5
  %11 = bitcast i8** %9 to i16**, !dbg !6627
  %12 = load i16*, i16** %11, align 4, !dbg !6627, !tbaa !5606
  call void @llvm.dbg.value(metadata i16* %12, metadata !6615, metadata !DIExpression()), !dbg !6616
  %13 = load i16, i16* %12, align 2, !dbg !6629, !tbaa !5423
  %14 = and i16 %13, 511, !dbg !6630
  %15 = zext i16 %14 to i32, !dbg !6631
  %16 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6632
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %16, align 4, !dbg !6632, !tbaa !5196
  %18 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %17, i32 0, i32 1, !dbg !6633
  store volatile i32 %15, i32* %18, align 4, !dbg !6634, !tbaa !5428
  %19 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 1, i32 3, !dbg !6635
  %20 = load i32, i32* %19, align 4, !dbg !6635, !tbaa !5228
  %21 = icmp eq i32 %20, 0, !dbg !6637
  %22 = load i8*, i8** %9, align 4, !dbg !6638, !tbaa !5606
  br i1 %21, label %23, label %25, !dbg !6639

23:                                               ; preds = %10
  %24 = getelementptr inbounds i8, i8* %22, i32 2, !dbg !6640
  store i8* %24, i8** %9, align 4, !dbg !6640, !tbaa !5606
  br label %35, !dbg !6642

25:                                               ; preds = %10
  %26 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !6643
  store i8* %26, i8** %9, align 4, !dbg !6643, !tbaa !5606
  br label %35

27:                                               ; preds = %5
  %28 = load i8*, i8** %9, align 4, !dbg !6645, !tbaa !5606
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !6645
  store i8* %29, i8** %9, align 4, !dbg !6645, !tbaa !5606
  %30 = load i8, i8* %28, align 1, !dbg !6647, !tbaa !1608
  %31 = zext i8 %30 to i32, !dbg !6648
  %32 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6649
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !6649, !tbaa !5196
  %34 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %33, i32 0, i32 1, !dbg !6650
  store volatile i32 %31, i32* %34, align 4, !dbg !6651, !tbaa !5428
  br label %35

35:                                               ; preds = %23, %25, %27
  %36 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 4, !dbg !6652
  %37 = load volatile i16, i16* %36, align 2, !dbg !6654, !tbaa !5408
  %38 = add i16 %37, -1, !dbg !6654
  store volatile i16 %38, i16* %36, align 2, !dbg !6654, !tbaa !5408
  %39 = icmp eq i16 %38, 0, !dbg !6655
  br i1 %39, label %40, label %48, !dbg !6656

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6657
  %42 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %41, align 4, !dbg !6657, !tbaa !5196
  %43 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %42, i32 0, i32 3, !dbg !6657
  %44 = load volatile i32, i32* %43, align 4, !dbg !6657, !tbaa !3929
  %45 = and i32 %44, -129, !dbg !6657
  store volatile i32 %45, i32* %43, align 4, !dbg !6657, !tbaa !3929
  %46 = load volatile i32, i32* %43, align 4, !dbg !6659, !tbaa !3929
  %47 = or i32 %46, 64, !dbg !6659
  store volatile i32 %47, i32* %43, align 4, !dbg !6659, !tbaa !3929
  br label %48, !dbg !6660

48:                                               ; preds = %1, %35, %40
  ret void, !dbg !6661
}

; Function Attrs: noinline nounwind
define internal fastcc void @UART_EndTransmit_IT(%struct.__UART_HandleTypeDef* noundef %0) unnamed_addr #3 !dbg !6662 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6664, metadata !DIExpression()), !dbg !6665
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6666
  %3 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %2, align 4, !dbg !6666, !tbaa !5196
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %3, i32 0, i32 3, !dbg !6666
  %5 = load volatile i32, i32* %4, align 4, !dbg !6666, !tbaa !3929
  %6 = and i32 %5, -65, !dbg !6666
  store volatile i32 %6, i32* %4, align 4, !dbg !6666, !tbaa !3929
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6667
  store volatile i32 32, i32* %7, align 4, !dbg !6668, !tbaa !5183
  call void @HAL_UART_TxCpltCallback(%struct.__UART_HandleTypeDef* noundef %0), !dbg !6669
  ret void, !dbg !6670
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_LIN_SendBreak(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !6671 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6673, metadata !DIExpression()), !dbg !6674
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6675
  %3 = load i32, i32* %2, align 4, !dbg !6675, !tbaa !5191
  %4 = icmp eq i32 %3, 1, !dbg !6675
  br i1 %4, label %12, label %5, !dbg !6678

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !6679, !tbaa !5191
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6681
  store volatile i32 36, i32* %6, align 4, !dbg !6682, !tbaa !5183
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6683
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !6683, !tbaa !5196
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !6683
  %10 = load volatile i32, i32* %9, align 4, !dbg !6683, !tbaa !3929
  %11 = or i32 %10, 1, !dbg !6683
  store volatile i32 %11, i32* %9, align 4, !dbg !6683, !tbaa !3929
  store volatile i32 32, i32* %6, align 4, !dbg !6684, !tbaa !5183
  store i32 0, i32* %2, align 4, !dbg !6685, !tbaa !5191
  br label %12, !dbg !6687

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !6674
  ret i32 %13, !dbg !6688
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_MultiProcessor_EnterMuteMode(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !6689 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6691, metadata !DIExpression()), !dbg !6692
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6693
  %3 = load i32, i32* %2, align 4, !dbg !6693, !tbaa !5191
  %4 = icmp eq i32 %3, 1, !dbg !6693
  br i1 %4, label %12, label %5, !dbg !6696

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !6697, !tbaa !5191
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6699
  store volatile i32 36, i32* %6, align 4, !dbg !6700, !tbaa !5183
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6701
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !6701, !tbaa !5196
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !6701
  %10 = load volatile i32, i32* %9, align 4, !dbg !6701, !tbaa !3929
  %11 = or i32 %10, 2, !dbg !6701
  store volatile i32 %11, i32* %9, align 4, !dbg !6701, !tbaa !3929
  store volatile i32 32, i32* %6, align 4, !dbg !6702, !tbaa !5183
  store i32 0, i32* %2, align 4, !dbg !6703, !tbaa !5191
  br label %12, !dbg !6705

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !6692
  ret i32 %13, !dbg !6706
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_MultiProcessor_ExitMuteMode(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !6707 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6709, metadata !DIExpression()), !dbg !6710
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6711
  %3 = load i32, i32* %2, align 4, !dbg !6711, !tbaa !5191
  %4 = icmp eq i32 %3, 1, !dbg !6711
  br i1 %4, label %12, label %5, !dbg !6714

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !6715, !tbaa !5191
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6717
  store volatile i32 36, i32* %6, align 4, !dbg !6718, !tbaa !5183
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6719
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !6719, !tbaa !5196
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !6719
  %10 = load volatile i32, i32* %9, align 4, !dbg !6719, !tbaa !3929
  %11 = and i32 %10, -3, !dbg !6719
  store volatile i32 %11, i32* %9, align 4, !dbg !6719, !tbaa !3929
  store volatile i32 32, i32* %6, align 4, !dbg !6720, !tbaa !5183
  store i32 0, i32* %2, align 4, !dbg !6721, !tbaa !5191
  br label %12, !dbg !6723

12:                                               ; preds = %1, %5
  %13 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !6710
  ret i32 %13, !dbg !6724
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_HalfDuplex_EnableTransmitter(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !6725 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6727, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.value(metadata i32 0, metadata !6728, metadata !DIExpression()), !dbg !6729
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6730
  %3 = load i32, i32* %2, align 4, !dbg !6730, !tbaa !5191
  %4 = icmp eq i32 %3, 1, !dbg !6730
  br i1 %4, label %13, label %5, !dbg !6733

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !6734, !tbaa !5191
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6736
  store volatile i32 36, i32* %6, align 4, !dbg !6737, !tbaa !5183
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6738
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !6738, !tbaa !5196
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !6739
  %10 = load volatile i32, i32* %9, align 4, !dbg !6739, !tbaa !3929
  call void @llvm.dbg.value(metadata i32 %10, metadata !6728, metadata !DIExpression()), !dbg !6729
  %11 = and i32 %10, -13, !dbg !6740
  call void @llvm.dbg.value(metadata i32 %11, metadata !6728, metadata !DIExpression()), !dbg !6729
  %12 = or i32 %11, 8, !dbg !6741
  call void @llvm.dbg.value(metadata i32 %12, metadata !6728, metadata !DIExpression()), !dbg !6729
  store volatile i32 %12, i32* %9, align 4, !dbg !6742, !tbaa !3929
  store volatile i32 32, i32* %6, align 4, !dbg !6743, !tbaa !5183
  store i32 0, i32* %2, align 4, !dbg !6744, !tbaa !5191
  br label %13, !dbg !6746

13:                                               ; preds = %1, %5
  %14 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !6729
  ret i32 %14, !dbg !6747
}

; Function Attrs: nofree noinline norecurse nounwind
define dso_local i32 @HAL_HalfDuplex_EnableReceiver(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #14 !dbg !6748 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6750, metadata !DIExpression()), !dbg !6752
  call void @llvm.dbg.value(metadata i32 0, metadata !6751, metadata !DIExpression()), !dbg !6752
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 10, !dbg !6753
  %3 = load i32, i32* %2, align 4, !dbg !6753, !tbaa !5191
  %4 = icmp eq i32 %3, 1, !dbg !6753
  br i1 %4, label %13, label %5, !dbg !6756

5:                                                ; preds = %1
  store i32 1, i32* %2, align 4, !dbg !6757, !tbaa !5191
  %6 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6759
  store volatile i32 36, i32* %6, align 4, !dbg !6760, !tbaa !5183
  %7 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 0, !dbg !6761
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !6761, !tbaa !5196
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %8, i32 0, i32 3, !dbg !6762
  %10 = load volatile i32, i32* %9, align 4, !dbg !6762, !tbaa !3929
  call void @llvm.dbg.value(metadata i32 %10, metadata !6751, metadata !DIExpression()), !dbg !6752
  %11 = and i32 %10, -13, !dbg !6763
  call void @llvm.dbg.value(metadata i32 %11, metadata !6751, metadata !DIExpression()), !dbg !6752
  %12 = or i32 %11, 4, !dbg !6764
  call void @llvm.dbg.value(metadata i32 %12, metadata !6751, metadata !DIExpression()), !dbg !6752
  store volatile i32 %12, i32* %9, align 4, !dbg !6765, !tbaa !3929
  store volatile i32 32, i32* %6, align 4, !dbg !6766, !tbaa !5183
  store i32 0, i32* %2, align 4, !dbg !6767, !tbaa !5191
  br label %13, !dbg !6769

13:                                               ; preds = %1, %5
  %14 = phi i32 [ 0, %5 ], [ 2, %1 ], !dbg !6752
  ret i32 %14, !dbg !6770
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_UART_GetState(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #15 !dbg !6771 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6775, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 0, metadata !6776, metadata !DIExpression()), !dbg !6778
  call void @llvm.dbg.value(metadata i32 0, metadata !6777, metadata !DIExpression()), !dbg !6778
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 11, !dbg !6779
  %3 = load volatile i32, i32* %2, align 4, !dbg !6779, !tbaa !5183
  call void @llvm.dbg.value(metadata i32 %3, metadata !6776, metadata !DIExpression()), !dbg !6778
  %4 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 12, !dbg !6780
  %5 = load volatile i32, i32* %4, align 4, !dbg !6780, !tbaa !5207
  call void @llvm.dbg.value(metadata i32 %5, metadata !6777, metadata !DIExpression()), !dbg !6778
  %6 = or i32 %5, %3, !dbg !6781
  ret i32 %6, !dbg !6782
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind willreturn
define dso_local i32 @HAL_UART_GetError(%struct.__UART_HandleTypeDef* noundef %0) local_unnamed_addr #15 !dbg !6783 {
  call void @llvm.dbg.value(metadata %struct.__UART_HandleTypeDef* %0, metadata !6787, metadata !DIExpression()), !dbg !6788
  %2 = getelementptr inbounds %struct.__UART_HandleTypeDef, %struct.__UART_HandleTypeDef* %0, i32 0, i32 13, !dbg !6789
  %3 = load volatile i32, i32* %2, align 4, !dbg !6789, !tbaa !5203
  ret i32 %3, !dbg !6790
}

attributes #0 = { mustprogress noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nobuiltin nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { argmemonly nofree nounwind willreturn writeonly }
attributes #8 = { nofree nounwind }
attributes #9 = { nofree nosync nounwind willreturn }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline norecurse nosync nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nosync nounwind readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { noinline noreturn nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nosync nounwind willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress noinline noreturn nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline norecurse nosync nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { nounwind }
attributes #27 = { builtin nounwind }
attributes #28 = { noreturn nounwind }
attributes #29 = { noreturn }

!llvm.dbg.cu = !{!6, !297, !348, !774, !426, !828, !882, !935, !964, !547, !967, !1159, !1161}
!llvm.ident = !{!1273, !1273, !1273, !1273, !1273, !1273, !1273, !1273, !1273, !1273, !1273, !1273, !1273}
!llvm.module.flags = !{!1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "instance", scope: !2, file: !3, line: 104, type: !108, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "USART2_IRQHandler", scope: !3, file: !3, line: 102, type: !4, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !283)
!3 = !DIFile(filename: "../examples/stm32f1/printf.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3912c4bbd3ec7485a56a2cfb7adb3a89")
!4 = !DISubroutineType(types: !5)
!5 = !{null}
!6 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !7, retainedTypes: !16, globals: !99, imports: !120, splitDebugInlining: false, nameTableKind: None)
!7 = !{!8}
!8 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 41, baseType: !10, size: 32, elements: !11, identifier: "_ZTS17HAL_StatusTypeDef")
!9 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "4d6e0bbb91efacee14a68a416f506def")
!10 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!11 = !{!12, !13, !14, !15}
!12 = !DIEnumerator(name: "HAL_OK", value: 0, isUnsigned: true)
!13 = !DIEnumerator(name: "HAL_ERROR", value: 1, isUnsigned: true)
!14 = !DIEnumerator(name: "HAL_BUSY", value: 2, isUnsigned: true)
!15 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3, isUnsigned: true)
!16 = !{!17, !34, !37, !40, !43}
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 32)
!18 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !19, line: 516, baseType: !20)
!19 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "d2562af6d7239ab46ca8ba238a43c848")
!20 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 507, size: 224, flags: DIFlagTypePassByValue, elements: !21, identifier: "_ZTS13USART_TypeDef")
!21 = !{!22, !28, !29, !30, !31, !32, !33}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !20, file: !19, line: 509, baseType: !23, size: 32)
!23 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !24)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !25, line: 48, baseType: !26)
!25 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "ab914e287601b2385e57880e6599aa6b")
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !27, line: 79, baseType: !10)
!27 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "f7024d0682a918b41f94e8be9cd90461")
!28 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !20, file: !19, line: 510, baseType: !23, size: 32, offset: 32)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !20, file: !19, line: 511, baseType: !23, size: 32, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !20, file: !19, line: 512, baseType: !23, size: 32, offset: 96)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !20, file: !19, line: 513, baseType: !23, size: 32, offset: 128)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !20, file: !19, line: 514, baseType: !23, size: 32, offset: 160)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !20, file: !19, line: 515, baseType: !23, size: 32, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 32)
!35 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !19, line: 367, baseType: !36)
!36 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 358, size: 224, flags: DIFlagFwdDecl, identifier: "_ZTS12GPIO_TypeDef")
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !25, line: 36, baseType: !38)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !27, line: 57, baseType: !39)
!39 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!40 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "SerialTask", file: !3, line: 16, size: 224, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !41, vtableHolder: !43, identifier: "_ZTS10SerialTask")
!41 = !{!42, !87, !91, !92, !96}
!42 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !40, baseType: !43, flags: DIFlagPublic, extraData: i32 0)
!43 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Task", scope: !45, file: !44, line: 193, size: 160, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !46, vtableHolder: !43, identifier: "_ZTSN6Cicada4TaskE")
!44 = !DIFile(filename: "../cicada/task.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "c2aeaca9a01dbc0caa84f135ef9fda2b")
!45 = !DINamespace(name: "Cicada", scope: null)
!46 = !{!47, !53, !54, !55, !57, !58, !62, !65, !70, !71, !74, !77, !78, !79, !80, !83}
!47 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$Task", scope: !44, file: !44, baseType: !48, size: 32, flags: DIFlagArtificial)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 32)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "__vtbl_ptr_type", baseType: !50, size: 32)
!50 = !DISubroutineType(types: !51)
!51 = !{!52}
!52 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_delay", scope: !43, file: !44, line: 283, baseType: !37, size: 16, offset: 32)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_timeout", scope: !43, file: !44, line: 284, baseType: !24, size: 32, offset: 64)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_isTimeoutRunning", scope: !43, file: !44, line: 285, baseType: !56, size: 8, offset: 96)
!56 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_lastRun", scope: !43, file: !44, line: 286, baseType: !24, size: 32, offset: 128)
!58 = !DISubprogram(name: "Task", scope: !43, file: !44, line: 196, type: !59, scopeLine: 196, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!59 = !DISubroutineType(types: !60)
!60 = !{null, !61, !37}
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!62 = !DISubprogram(name: "~Task", scope: !43, file: !44, line: 198, type: !63, scopeLine: 198, containingType: !43, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!63 = !DISubroutineType(types: !64)
!64 = !{null, !61}
!65 = !DISubprogram(name: "delay", linkageName: "_ZNK6Cicada4Task5delayEv", scope: !43, file: !44, line: 203, type: !66, scopeLine: 203, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!66 = !DISubroutineType(types: !67)
!67 = !{!37, !68}
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!69 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !43)
!70 = !DISubprogram(name: "setDelay", linkageName: "_ZN6Cicada4Task8setDelayEt", scope: !43, file: !44, line: 212, type: !59, scopeLine: 212, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!71 = !DISubprogram(name: "lastRun", linkageName: "_ZN6Cicada4Task7lastRunEv", scope: !43, file: !44, line: 222, type: !72, scopeLine: 222, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!72 = !DISubroutineType(types: !73)
!73 = !{!24, !61}
!74 = !DISubprogram(name: "setLastRun", linkageName: "_ZN6Cicada4Task10setLastRunEj", scope: !43, file: !44, line: 230, type: !75, scopeLine: 230, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!75 = !DISubroutineType(types: !76)
!76 = !{null, !61, !24}
!77 = !DISubprogram(name: "run", linkageName: "_ZN6Cicada4Task3runEv", scope: !43, file: !44, line: 245, type: !63, scopeLine: 245, containingType: !43, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!78 = !DISubprogram(name: "startTimeout", linkageName: "_ZN6Cicada4Task12startTimeoutEv", scope: !43, file: !44, line: 251, type: !63, scopeLine: 251, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!79 = !DISubprogram(name: "resetTimeout", linkageName: "_ZN6Cicada4Task12resetTimeoutEv", scope: !43, file: !44, line: 262, type: !63, scopeLine: 262, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!80 = !DISubprogram(name: "isTimeout", linkageName: "_ZN6Cicada4Task9isTimeoutEj", scope: !43, file: !44, line: 272, type: !81, scopeLine: 272, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!81 = !DISubroutineType(types: !82)
!82 = !{!56, !61, !24}
!83 = !DISubprogram(name: "Task", scope: !43, file: !44, line: 281, type: !84, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!84 = !DISubroutineType(types: !85)
!85 = !{null, !61, !86}
!86 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !69, size: 32)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "m_serial", scope: !40, file: !3, line: 46, baseType: !88, size: 32, offset: 160)
!88 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !89, size: 32)
!89 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "BufferedSerial", scope: !45, file: !90, line: 42, size: 832, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada14BufferedSerialE")
!90 = !DIFile(filename: "../cicada/bufferedserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b9c9871d742db1af5ee8abb5df52fc59")
!91 = !DIDerivedType(tag: DW_TAG_member, name: "m_i", scope: !40, file: !3, line: 47, baseType: !52, size: 32, offset: 192)
!92 = !DISubprogram(name: "SerialTask", scope: !40, file: !3, line: 19, type: !93, scopeLine: 19, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!93 = !DISubroutineType(types: !94)
!94 = !{null, !95, !88}
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!96 = !DISubprogram(name: "run", linkageName: "_ZN10SerialTask3runEv", scope: !40, file: !3, line: 21, type: !97, scopeLine: 21, containingType: !40, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!97 = !DISubroutineType(types: !98)
!98 = !{null, !95}
!99 = !{!0, !100, !111}
!100 = !DIGlobalVariableExpression(var: !101, expr: !DIExpression())
!101 = distinct !DIGlobalVariable(name: "serial", scope: !102, file: !3, line: 110, type: !108, isLocal: true, isDefinition: true)
!102 = distinct !DISubprogram(name: "_putchar", scope: !3, file: !3, line: 108, type: !103, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !106)
!103 = !DISubroutineType(types: !104)
!104 = !{null, !105}
!105 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!106 = !{!107}
!107 = !DILocalVariable(name: "c", arg: 1, scope: !102, file: !3, line: 108, type: !105)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!109 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Stm32Uart", scope: !45, file: !110, line: 51, size: 1536, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSN6Cicada9Stm32UartE")
!110 = !DIFile(filename: "../cicada/platform/stm32f1/stm32uart.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "f1205a68111afe9a0868ac35ca31b4e6")
!111 = !DIGlobalVariableExpression(var: !112, expr: !DIExpression())
!112 = distinct !DIGlobalVariable(name: "entrypoint", scope: !113, file: !3, line: 23, type: !117, isLocal: false, isDefinition: true)
!113 = distinct !DISubprogram(name: "run", linkageName: "_ZN10SerialTask3runEv", scope: !40, file: !3, line: 21, type: !97, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !96, retainedNodes: !114)
!114 = !{!115}
!115 = !DILocalVariable(name: "this", arg: 1, scope: !113, type: !116, flags: DIFlagArtificial | DIFlagObjectPointer)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !25, line: 24, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !27, line: 43, baseType: !119)
!119 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!120 = !{!121, !127, !131, !134, !138, !141, !143, !145, !147, !150, !153, !156, !159, !162, !165, !166, !167, !168, !172, !174, !176, !178, !180, !183, !186, !189, !192, !195, !198, !211, !215, !219, !221, !225, !232, !236, !238, !240, !244, !248, !252, !256, !260, !262, !264, !266, !270, !274, !278, !280, !282}
!121 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !123, file: !126, line: 47)
!122 = !DINamespace(name: "std", scope: null)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !25, line: 20, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !27, line: 41, baseType: !125)
!125 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!126 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstdint", directory: "/home/mjshen/RTOSExploration")
!127 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !128, file: !126, line: 48)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !25, line: 32, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !27, line: 55, baseType: !130)
!130 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!131 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !132, file: !126, line: 49)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !25, line: 44, baseType: !133)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !27, line: 77, baseType: !52)
!134 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !135, file: !126, line: 50)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !25, line: 56, baseType: !136)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !27, line: 103, baseType: !137)
!137 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!138 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !139, file: !126, line: 52)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !140, line: 51, baseType: !125)
!140 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdint.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "a169a1d650067906a9e00519a9405ebb")
!141 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !142, file: !126, line: 53)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !140, line: 61, baseType: !130)
!143 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !144, file: !126, line: 54)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !140, line: 71, baseType: !52)
!145 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !146, file: !126, line: 55)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !140, line: 81, baseType: !137)
!147 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !148, file: !126, line: 57)
!148 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !140, line: 21, baseType: !149)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least8_t", file: !27, line: 134, baseType: !125)
!150 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !151, file: !126, line: 58)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !140, line: 27, baseType: !152)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least16_t", file: !27, line: 160, baseType: !130)
!153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !154, file: !126, line: 59)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !140, line: 33, baseType: !155)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least32_t", file: !27, line: 182, baseType: !52)
!156 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !157, file: !126, line: 60)
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !140, line: 39, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !27, line: 200, baseType: !137)
!159 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !160, file: !126, line: 62)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !25, line: 67, baseType: !161)
!161 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !27, line: 214, baseType: !137)
!162 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !163, file: !126, line: 63)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !25, line: 77, baseType: !164)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intptr_t", file: !27, line: 230, baseType: !52)
!165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !117, file: !126, line: 65)
!166 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !37, file: !126, line: 66)
!167 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !24, file: !126, line: 67)
!168 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !169, file: !126, line: 68)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !25, line: 60, baseType: !170)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !27, line: 105, baseType: !171)
!171 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!172 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !173, file: !126, line: 70)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !140, line: 52, baseType: !119)
!174 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !175, file: !126, line: 71)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !140, line: 62, baseType: !39)
!176 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !177, file: !126, line: 72)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !140, line: 72, baseType: !10)
!178 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !179, file: !126, line: 73)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !140, line: 82, baseType: !171)
!180 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !181, file: !126, line: 75)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !140, line: 22, baseType: !182)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least8_t", file: !27, line: 136, baseType: !119)
!183 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !184, file: !126, line: 76)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !140, line: 28, baseType: !185)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least16_t", file: !27, line: 162, baseType: !39)
!186 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !187, file: !126, line: 77)
!187 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !140, line: 34, baseType: !188)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least32_t", file: !27, line: 184, baseType: !10)
!189 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !190, file: !126, line: 78)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !140, line: 40, baseType: !191)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !27, line: 202, baseType: !171)
!192 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !193, file: !126, line: 80)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !25, line: 72, baseType: !194)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !27, line: 222, baseType: !171)
!195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !196, file: !126, line: 81)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !25, line: 82, baseType: !197)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintptr_t", file: !27, line: 232, baseType: !10)
!198 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !199, file: !210, line: 77)
!199 = !DISubprogram(name: "memchr", scope: !200, file: !200, line: 29, type: !201, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!200 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/string.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "00b3471f69c722645cab66876c511e27")
!201 = !DISubroutineType(types: !202)
!202 = !{!203, !204, !52, !206}
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !207, line: 40, baseType: !208)
!207 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/strings.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "dceb1b71cd72987b246237af8552faba")
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !209, line: 131, baseType: !10)
!209 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration", checksumkind: CSK_MD5, checksum: "b45aad52ebaa1042158f2766af29f8e2")
!210 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstring", directory: "/home/mjshen/RTOSExploration")
!211 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !212, file: !210, line: 78)
!212 = !DISubprogram(name: "memcmp", scope: !200, file: !200, line: 30, type: !213, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!213 = !DISubroutineType(types: !214)
!214 = !{!52, !204, !204, !206}
!215 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !216, file: !210, line: 79)
!216 = !DISubprogram(name: "memcpy", scope: !200, file: !200, line: 31, type: !217, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!217 = !DISubroutineType(types: !218)
!218 = !{!203, !203, !204, !206}
!219 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !220, file: !210, line: 80)
!220 = !DISubprogram(name: "memmove", scope: !200, file: !200, line: 32, type: !217, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!221 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !222, file: !210, line: 81)
!222 = !DISubprogram(name: "memset", scope: !200, file: !200, line: 33, type: !223, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!223 = !DISubroutineType(types: !224)
!224 = !{!203, !203, !52, !206}
!225 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !226, file: !210, line: 82)
!226 = !DISubprogram(name: "strcat", scope: !200, file: !200, line: 34, type: !227, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!227 = !DISubroutineType(types: !228)
!228 = !{!229, !229, !230}
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !105)
!232 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !233, file: !210, line: 83)
!233 = !DISubprogram(name: "strcmp", scope: !200, file: !200, line: 36, type: !234, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!234 = !DISubroutineType(types: !235)
!235 = !{!52, !230, !230}
!236 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !237, file: !210, line: 84)
!237 = !DISubprogram(name: "strcoll", scope: !200, file: !200, line: 37, type: !234, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!238 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !239, file: !210, line: 85)
!239 = !DISubprogram(name: "strcpy", scope: !200, file: !200, line: 38, type: !227, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!240 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !241, file: !210, line: 86)
!241 = !DISubprogram(name: "strcspn", scope: !200, file: !200, line: 39, type: !242, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!242 = !DISubroutineType(types: !243)
!243 = !{!206, !230, !230}
!244 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !245, file: !210, line: 87)
!245 = !DISubprogram(name: "strerror", scope: !200, file: !200, line: 40, type: !246, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!246 = !DISubroutineType(types: !247)
!247 = !{!229, !52}
!248 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !249, file: !210, line: 88)
!249 = !DISubprogram(name: "strlen", scope: !200, file: !200, line: 41, type: !250, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!250 = !DISubroutineType(types: !251)
!251 = !{!206, !230}
!252 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !253, file: !210, line: 89)
!253 = !DISubprogram(name: "strncat", scope: !200, file: !200, line: 42, type: !254, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!254 = !DISubroutineType(types: !255)
!255 = !{!229, !229, !230, !206}
!256 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !257, file: !210, line: 90)
!257 = !DISubprogram(name: "strncmp", scope: !200, file: !200, line: 43, type: !258, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!258 = !DISubroutineType(types: !259)
!259 = !{!52, !230, !230, !206}
!260 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !261, file: !210, line: 91)
!261 = !DISubprogram(name: "strncpy", scope: !200, file: !200, line: 44, type: !254, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!262 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !263, file: !210, line: 92)
!263 = !DISubprogram(name: "strspn", scope: !200, file: !200, line: 47, type: !242, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!264 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !265, file: !210, line: 93)
!265 = !DISubprogram(name: "strtok", scope: !200, file: !200, line: 50, type: !227, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!266 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !267, file: !210, line: 94)
!267 = !DISubprogram(name: "strxfrm", scope: !200, file: !200, line: 52, type: !268, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!268 = !DISubroutineType(types: !269)
!269 = !{!206, !229, !230, !206}
!270 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !271, file: !210, line: 95)
!271 = !DISubprogram(name: "strchr", scope: !200, file: !200, line: 35, type: !272, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!272 = !DISubroutineType(types: !273)
!273 = !{!229, !230, !52}
!274 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !275, file: !210, line: 96)
!275 = !DISubprogram(name: "strpbrk", scope: !200, file: !200, line: 45, type: !276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!276 = !DISubroutineType(types: !277)
!277 = !{!229, !230, !230}
!278 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !279, file: !210, line: 97)
!279 = !DISubprogram(name: "strrchr", scope: !200, file: !200, line: 46, type: !272, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!280 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !281, file: !210, line: 98)
!281 = !DISubprogram(name: "strstr", scope: !200, file: !200, line: 48, type: !276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!282 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !6, entity: !45, file: !3, line: 12)
!283 = !{}
!284 = !DIGlobalVariableExpression(var: !285, expr: !DIExpression())
!285 = distinct !DIGlobalVariable(name: "pow10", scope: !286, file: !287, line: 311, type: !343, isLocal: true, isDefinition: true)
!286 = distinct !DISubprogram(name: "_ftoa", scope: !287, file: !287, line: 299, type: !288, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !310)
!287 = !DIFile(filename: "../dep/printf/src/printf.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "7383fa86adf0d25d8eda174a9b330d6a")
!288 = !DISubroutineType(types: !289)
!289 = !{!290, !292, !229, !290, !290, !296, !10, !10, !10}
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !291, line: 46, baseType: !10)
!291 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "2499dd2361b915724b073282bea3a7bc")
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "out_fct_type", file: !287, line: 97, baseType: !293)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 32)
!294 = !DISubroutineType(types: !295)
!295 = !{null, !105, !203, !290, !290}
!296 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !287, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !298, globals: !309, splitDebugInlining: false, nameTableKind: None)
!298 = !{!290, !229, !196, !10, !52, !171, !299, !105, !130, !119, !39, !296, !300}
!299 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "out_fct_wrap_type", file: !287, line: 104, baseType: !302)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !287, line: 101, size: 64, elements: !303)
!303 = !{!304, !308}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "fct", scope: !302, file: !287, line: 102, baseType: !305, size: 32)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = !DISubroutineType(types: !307)
!307 = !{null, !105, !203}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !302, file: !287, line: 103, baseType: !203, size: 32, offset: 32)
!309 = !{!284}
!310 = !{!311, !312, !313, !314, !315, !316, !317, !318, !319, !321, !325, !326, !327, !329, !331, !332, !333, !334, !337, !341}
!311 = !DILocalVariable(name: "out", arg: 1, scope: !286, file: !287, line: 299, type: !292)
!312 = !DILocalVariable(name: "buffer", arg: 2, scope: !286, file: !287, line: 299, type: !229)
!313 = !DILocalVariable(name: "idx", arg: 3, scope: !286, file: !287, line: 299, type: !290)
!314 = !DILocalVariable(name: "maxlen", arg: 4, scope: !286, file: !287, line: 299, type: !290)
!315 = !DILocalVariable(name: "value", arg: 5, scope: !286, file: !287, line: 299, type: !296)
!316 = !DILocalVariable(name: "prec", arg: 6, scope: !286, file: !287, line: 299, type: !10)
!317 = !DILocalVariable(name: "width", arg: 7, scope: !286, file: !287, line: 299, type: !10)
!318 = !DILocalVariable(name: "flags", arg: 8, scope: !286, file: !287, line: 299, type: !10)
!319 = !DILocalVariable(name: "start_idx", scope: !286, file: !287, line: 301, type: !320)
!320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!321 = !DILocalVariable(name: "buf", scope: !286, file: !287, line: 303, type: !322)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 256, elements: !323)
!323 = !{!324}
!324 = !DISubrange(count: 32)
!325 = !DILocalVariable(name: "len", scope: !286, file: !287, line: 304, type: !290)
!326 = !DILocalVariable(name: "diff", scope: !286, file: !287, line: 305, type: !296)
!327 = !DILocalVariable(name: "thres_max", scope: !286, file: !287, line: 308, type: !328)
!328 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !296)
!329 = !DILocalVariable(name: "negative", scope: !286, file: !287, line: 322, type: !330)
!330 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!331 = !DILocalVariable(name: "whole", scope: !286, file: !287, line: 338, type: !52)
!332 = !DILocalVariable(name: "tmp", scope: !286, file: !287, line: 339, type: !296)
!333 = !DILocalVariable(name: "frac", scope: !286, file: !287, line: 340, type: !299)
!334 = !DILocalVariable(name: "count", scope: !335, file: !287, line: 373, type: !10)
!335 = distinct !DILexicalBlock(scope: !336, file: !287, line: 372, column: 8)
!336 = distinct !DILexicalBlock(scope: !286, file: !287, line: 364, column: 7)
!337 = !DILocalVariable(name: "i", scope: !338, file: !287, line: 424, type: !290)
!338 = distinct !DILexicalBlock(scope: !339, file: !287, line: 424, column: 5)
!339 = distinct !DILexicalBlock(scope: !340, file: !287, line: 423, column: 58)
!340 = distinct !DILexicalBlock(scope: !286, file: !287, line: 423, column: 7)
!341 = !DILocalVariable(name: "i", scope: !342, file: !287, line: 430, type: !290)
!342 = distinct !DILexicalBlock(scope: !286, file: !287, line: 430, column: 3)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 640, elements: !344)
!344 = !{!345}
!345 = !DISubrange(count: 10)
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !348, file: !349, line: 124, type: !421, isLocal: false, isDefinition: true)
!348 = distinct !DICompileUnit(language: DW_LANG_C99, file: !349, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !350, retainedTypes: !356, globals: !412, splitDebugInlining: false, nameTableKind: None)
!349 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/system_stm32f1xx.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "2e873de3002e5d783190a46ff1c7da2d")
!350 = !{!351}
!351 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !352, line: 151, baseType: !10, size: 32, elements: !353)
!352 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "dc4ed8bdf8589b30d30d93eb6ee6ca27")
!353 = !{!354, !355}
!354 = !DIEnumerator(name: "RESET", value: 0)
!355 = !DIEnumerator(name: "SET", value: 1)
!356 = !{!357, !371, !24}
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !359)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, elements: !360)
!360 = !{!361, !362, !363, !364, !365, !366, !367, !368, !369, !370}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !359, file: !19, line: 426, baseType: !23, size: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !359, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !359, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !359, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !359, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !359, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !359, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !359, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !359, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !359, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !373, line: 397, baseType: !374)
!373 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !373, line: 374, size: 1120, elements: !375)
!375 = !{!376, !378, !379, !380, !381, !382, !383, !388, !389, !390, !391, !392, !393, !394, !395, !399, !400, !401, !405, !409, !411}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !374, file: !373, line: 376, baseType: !377, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !374, file: !373, line: 377, baseType: !23, size: 32, offset: 32)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !374, file: !373, line: 378, baseType: !23, size: 32, offset: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !374, file: !373, line: 379, baseType: !23, size: 32, offset: 96)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !374, file: !373, line: 380, baseType: !23, size: 32, offset: 128)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !374, file: !373, line: 381, baseType: !23, size: 32, offset: 160)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !374, file: !373, line: 382, baseType: !384, size: 96, offset: 192)
!384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !385, size: 96, elements: !386)
!385 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !117)
!386 = !{!387}
!387 = !DISubrange(count: 12)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !374, file: !373, line: 383, baseType: !23, size: 32, offset: 288)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !374, file: !373, line: 384, baseType: !23, size: 32, offset: 320)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !374, file: !373, line: 385, baseType: !23, size: 32, offset: 352)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !374, file: !373, line: 386, baseType: !23, size: 32, offset: 384)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !374, file: !373, line: 387, baseType: !23, size: 32, offset: 416)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !374, file: !373, line: 388, baseType: !23, size: 32, offset: 448)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !374, file: !373, line: 389, baseType: !23, size: 32, offset: 480)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !374, file: !373, line: 390, baseType: !396, size: 64, offset: 512)
!396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 64, elements: !397)
!397 = !{!398}
!398 = !DISubrange(count: 2)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !374, file: !373, line: 391, baseType: !377, size: 32, offset: 576)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !374, file: !373, line: 392, baseType: !377, size: 32, offset: 608)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !374, file: !373, line: 393, baseType: !402, size: 128, offset: 640)
!402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 128, elements: !403)
!403 = !{!404}
!404 = !DISubrange(count: 4)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !374, file: !373, line: 394, baseType: !406, size: 160, offset: 768)
!406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 160, elements: !407)
!407 = !{!408}
!408 = !DISubrange(count: 5)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !374, file: !373, line: 395, baseType: !410, size: 160, offset: 928)
!410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 160, elements: !407)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !374, file: !373, line: 396, baseType: !23, size: 32, offset: 1088)
!412 = !{!413, !346, !415}
!413 = !DIGlobalVariableExpression(var: !414, expr: !DIExpression())
!414 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !348, file: !349, line: 123, type: !24, isLocal: false, isDefinition: true)
!415 = !DIGlobalVariableExpression(var: !416, expr: !DIExpression())
!416 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !348, file: !349, line: 125, type: !417, isLocal: false, isDefinition: true)
!417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !418, size: 64, elements: !419)
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!419 = !{!420}
!420 = !DISubrange(count: 8)
!421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !418, size: 128, elements: !422)
!422 = !{!423}
!423 = !DISubrange(count: 16)
!424 = !DIGlobalVariableExpression(var: !425, expr: !DIExpression())
!425 = distinct !DIGlobalVariable(name: "uwTickPrio", scope: !426, file: !427, line: 80, type: !24, isLocal: false, isDefinition: true)
!426 = distinct !DICompileUnit(language: DW_LANG_C99, file: !427, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !428, retainedTypes: !496, globals: !539, splitDebugInlining: false, nameTableKind: None)
!427 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "1a5fa7b79e9e470cf817b81d791a6ccb")
!428 = !{!429, !436, !442}
!429 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !430, line: 49, baseType: !10, size: 32, elements: !431)
!430 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "5eab64b252ccd159497a11d87d26bc0b")
!431 = !{!432, !433, !434, !435}
!432 = !DIEnumerator(name: "HAL_TICK_FREQ_10HZ", value: 100)
!433 = !DIEnumerator(name: "HAL_TICK_FREQ_100HZ", value: 10)
!434 = !DIEnumerator(name: "HAL_TICK_FREQ_1KHZ", value: 1)
!435 = !DIEnumerator(name: "HAL_TICK_FREQ_DEFAULT", value: 1)
!436 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 41, baseType: !10, size: 32, elements: !437)
!437 = !{!438, !439, !440, !441}
!438 = !DIEnumerator(name: "HAL_OK", value: 0)
!439 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!440 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!441 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!442 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !19, line: 69, baseType: !52, size: 32, elements: !443)
!443 = !{!444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495}
!444 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!445 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!446 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!447 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!448 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!449 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!450 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!451 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!452 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!453 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!454 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!455 = !DIEnumerator(name: "TAMPER_IRQn", value: 2)
!456 = !DIEnumerator(name: "RTC_IRQn", value: 3)
!457 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!458 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!459 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!460 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!461 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!462 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!463 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!464 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!465 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!466 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!467 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!468 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!469 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!470 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!471 = !DIEnumerator(name: "ADC1_2_IRQn", value: 18)
!472 = !DIEnumerator(name: "USB_HP_CAN1_TX_IRQn", value: 19)
!473 = !DIEnumerator(name: "USB_LP_CAN1_RX0_IRQn", value: 20)
!474 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!475 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!476 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!477 = !DIEnumerator(name: "TIM1_BRK_IRQn", value: 24)
!478 = !DIEnumerator(name: "TIM1_UP_IRQn", value: 25)
!479 = !DIEnumerator(name: "TIM1_TRG_COM_IRQn", value: 26)
!480 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!481 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!482 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!483 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!484 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!485 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!486 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!487 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!488 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!489 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!490 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!491 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!492 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!493 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!494 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!495 = !DIEnumerator(name: "USBWakeUp_IRQn", value: 42)
!496 = !{!497, !24, !510, !524, !532, !538}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !19, line: 336, baseType: !499)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 325, size: 288, elements: !500)
!500 = !{!501, !502, !503, !504, !505, !506, !507, !508, !509}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !499, file: !19, line: 327, baseType: !23, size: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !499, file: !19, line: 328, baseType: !23, size: 32, offset: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !499, file: !19, line: 329, baseType: !23, size: 32, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !499, file: !19, line: 330, baseType: !23, size: 32, offset: 96)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !499, file: !19, line: 331, baseType: !23, size: 32, offset: 128)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "AR", scope: !499, file: !19, line: 332, baseType: !23, size: 32, offset: 160)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !499, file: !19, line: 333, baseType: !23, size: 32, offset: 192)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !499, file: !19, line: 334, baseType: !23, size: 32, offset: 224)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR", scope: !499, file: !19, line: 335, baseType: !23, size: 32, offset: 256)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !512)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, elements: !513)
!513 = !{!514, !515, !516, !517, !518, !519, !520, !521, !522, !523}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !512, file: !19, line: 426, baseType: !23, size: 32)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !512, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !512, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !512, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !512, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !512, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !512, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !512, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !512, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !512, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !373, line: 700, baseType: !526)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !373, line: 694, size: 128, elements: !527)
!527 = !{!528, !529, !530, !531}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !526, file: !373, line: 696, baseType: !23, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !526, file: !373, line: 697, baseType: !23, size: 32, offset: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !526, file: !373, line: 698, baseType: !23, size: 32, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !526, file: !373, line: 699, baseType: !377, size: 32, offset: 96)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 32)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "DBGMCU_TypeDef", file: !19, line: 285, baseType: !534)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 281, size: 64, elements: !535)
!535 = !{!536, !537}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "IDCODE", scope: !534, file: !19, line: 283, baseType: !23, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !534, file: !19, line: 284, baseType: !23, size: 32, offset: 32)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 32)
!539 = !{!424, !540, !543}
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(name: "uwTickFreq", scope: !426, file: !427, line: 81, type: !542, isLocal: false, isDefinition: true)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_TickFreqTypeDef", file: !430, line: 55, baseType: !429)
!543 = !DIGlobalVariableExpression(var: !544, expr: !DIExpression())
!544 = distinct !DIGlobalVariable(name: "uwTick", scope: !426, file: !427, line: 79, type: !23, isLocal: false, isDefinition: true)
!545 = !DIGlobalVariableExpression(var: !546, expr: !DIExpression())
!546 = distinct !DIGlobalVariable(name: "instance", linkageName: "_ZN6Cicada9Stm32Uart8instanceE", scope: !547, file: !548, line: 32, type: !650, isLocal: false, isDefinition: true, declaration: !649)
!547 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !549, retainedTypes: !566, globals: !771, imports: !772, splitDebugInlining: false, nameTableKind: None)
!548 = !DIFile(filename: "../cicada/platform/stm32f1/stm32uart.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3cfb26aba75e1df83974cb6e4fff6457")
!549 = !{!550, !8, !551, !555}
!550 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !19, line: 69, baseType: !52, size: 32, elements: !443, identifier: "_ZTS9IRQn_Type")
!551 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 52, baseType: !10, size: 32, elements: !552, identifier: "_ZTS15HAL_LockTypeDef")
!552 = !{!553, !554}
!553 = !DIEnumerator(name: "HAL_UNLOCKED", value: 0, isUnsigned: true)
!554 = !DIEnumerator(name: "HAL_LOCKED", value: 1, isUnsigned: true)
!555 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, file: !556, line: 117, baseType: !10, size: 32, elements: !557, identifier: "_ZTS21HAL_UART_StateTypeDef")
!556 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "74469f61b271b78e5ff5784cb5eb97d1")
!557 = !{!558, !559, !560, !561, !562, !563, !564, !565}
!558 = !DIEnumerator(name: "HAL_UART_STATE_RESET", value: 0, isUnsigned: true)
!559 = !DIEnumerator(name: "HAL_UART_STATE_READY", value: 32, isUnsigned: true)
!560 = !DIEnumerator(name: "HAL_UART_STATE_BUSY", value: 36, isUnsigned: true)
!561 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX", value: 33, isUnsigned: true)
!562 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_RX", value: 34, isUnsigned: true)
!563 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX_RX", value: 35, isUnsigned: true)
!564 = !DIEnumerator(name: "HAL_UART_STATE_TIMEOUT", value: 160, isUnsigned: true)
!565 = !DIEnumerator(name: "HAL_UART_STATE_ERROR", value: 224, isUnsigned: true)
!566 = !{!24, !17, !567, !577, !34, !117, !37, !132, !591, !621, !646}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "AFIO_TypeDef", file: !19, line: 380, baseType: !569)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 373, size: 256, flags: DIFlagTypePassByValue, elements: !570, identifier: "_ZTS12AFIO_TypeDef")
!570 = !{!571, !572, !573, !575, !576}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "EVCR", scope: !569, file: !19, line: 375, baseType: !23, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR", scope: !569, file: !19, line: 376, baseType: !23, size: 32, offset: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !569, file: !19, line: 377, baseType: !574, size: 128, offset: 64)
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 128, elements: !403)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !569, file: !19, line: 378, baseType: !24, size: 32, offset: 192)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR2", scope: !569, file: !19, line: 379, baseType: !23, size: 32, offset: 224)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 32)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !579)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, flags: DIFlagTypePassByValue, elements: !580, identifier: "_ZTS11RCC_TypeDef")
!580 = !{!581, !582, !583, !584, !585, !586, !587, !588, !589, !590}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !579, file: !19, line: 426, baseType: !23, size: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !579, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !579, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !579, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !579, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !579, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !579, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !579, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !579, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !579, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !373, line: 355, baseType: !593)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !373, line: 340, size: 28704, flags: DIFlagTypePassByValue, elements: !594, identifier: "_ZTS9NVIC_Type")
!594 = !{!595, !597, !601, !602, !603, !604, !605, !606, !607, !608, !612, !616, !620}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !593, file: !373, line: 342, baseType: !596, size: 256)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 256, elements: !419)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !593, file: !373, line: 343, baseType: !598, size: 768, offset: 256)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 768, elements: !599)
!599 = !{!600}
!600 = !DISubrange(count: 24)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !593, file: !373, line: 344, baseType: !596, size: 256, offset: 1024)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !593, file: !373, line: 345, baseType: !598, size: 768, offset: 1280)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !593, file: !373, line: 346, baseType: !596, size: 256, offset: 2048)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !593, file: !373, line: 347, baseType: !598, size: 768, offset: 2304)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !593, file: !373, line: 348, baseType: !596, size: 256, offset: 3072)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !593, file: !373, line: 349, baseType: !598, size: 768, offset: 3328)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !593, file: !373, line: 350, baseType: !596, size: 256, offset: 4096)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !593, file: !373, line: 351, baseType: !609, size: 1792, offset: 4352)
!609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 1792, elements: !610)
!610 = !{!611}
!611 = !DISubrange(count: 56)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !593, file: !373, line: 352, baseType: !613, size: 1920, offset: 6144)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !385, size: 1920, elements: !614)
!614 = !{!615}
!615 = !DISubrange(count: 240)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !593, file: !373, line: 353, baseType: !617, size: 20608, offset: 8064)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 20608, elements: !618)
!618 = !{!619}
!619 = !DISubrange(count: 644)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !593, file: !373, line: 354, baseType: !23, size: 32, offset: 28672)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !373, line: 397, baseType: !623)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !373, line: 374, size: 1120, flags: DIFlagTypePassByValue, elements: !624, identifier: "_ZTS8SCB_Type")
!624 = !{!625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !623, file: !373, line: 376, baseType: !377, size: 32)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !623, file: !373, line: 377, baseType: !23, size: 32, offset: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !623, file: !373, line: 378, baseType: !23, size: 32, offset: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !623, file: !373, line: 379, baseType: !23, size: 32, offset: 96)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !623, file: !373, line: 380, baseType: !23, size: 32, offset: 128)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !623, file: !373, line: 381, baseType: !23, size: 32, offset: 160)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !623, file: !373, line: 382, baseType: !384, size: 96, offset: 192)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !623, file: !373, line: 383, baseType: !23, size: 32, offset: 288)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !623, file: !373, line: 384, baseType: !23, size: 32, offset: 320)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !623, file: !373, line: 385, baseType: !23, size: 32, offset: 352)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !623, file: !373, line: 386, baseType: !23, size: 32, offset: 384)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !623, file: !373, line: 387, baseType: !23, size: 32, offset: 416)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !623, file: !373, line: 388, baseType: !23, size: 32, offset: 448)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !623, file: !373, line: 389, baseType: !23, size: 32, offset: 480)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !623, file: !373, line: 390, baseType: !396, size: 64, offset: 512)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !623, file: !373, line: 391, baseType: !377, size: 32, offset: 576)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !623, file: !373, line: 392, baseType: !377, size: 32, offset: 608)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !623, file: !373, line: 393, baseType: !402, size: 128, offset: 640)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !623, file: !373, line: 394, baseType: !406, size: 160, offset: 768)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !623, file: !373, line: 395, baseType: !410, size: 160, offset: 928)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !623, file: !373, line: 396, baseType: !23, size: 32, offset: 1088)
!646 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Stm32Uart", scope: !45, file: !110, line: 51, size: 1536, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !647, vtableHolder: !747)
!647 = !{!648, !649, !652, !653, !690, !691, !692, !693, !695, !701, !704, !707, !710, !713, !716, !717, !720, !721, !726, !730, !731, !732, !735, !736, !740, !744}
!648 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !646, baseType: !89, flags: DIFlagPublic, extraData: i32 0)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "instance", scope: !646, file: !110, line: 120, baseType: !650, flags: DIFlagStaticMember)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !651, size: 128, elements: !403)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 32)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !646, file: !110, line: 122, baseType: !117, size: 8, offset: 832)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "_handle", scope: !646, file: !110, line: 123, baseType: !654, size: 576, offset: 864)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_HandleTypeDef", file: !556, line: 189, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__UART_HandleTypeDef", file: !556, line: 141, size: 576, flags: DIFlagTypePassByValue, elements: !656, identifier: "_ZTS20__UART_HandleTypeDef")
!656 = !{!657, !658, !669, !671, !672, !674, !675, !676, !677, !682, !683, !685, !688, !689}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !655, file: !556, line: 143, baseType: !17, size: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !655, file: !556, line: 145, baseType: !659, size: 224, offset: 32)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_InitTypeDef", file: !556, line: 76, baseType: !660)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !556, line: 47, size: 224, flags: DIFlagTypePassByValue, elements: !661, identifier: "_ZTS16UART_InitTypeDef")
!661 = !{!662, !663, !664, !665, !666, !667, !668}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "BaudRate", scope: !660, file: !556, line: 49, baseType: !24, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "WordLength", scope: !660, file: !556, line: 54, baseType: !24, size: 32, offset: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "StopBits", scope: !660, file: !556, line: 57, baseType: !24, size: 32, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "Parity", scope: !660, file: !556, line: 60, baseType: !24, size: 32, offset: 96)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !660, file: !556, line: 67, baseType: !24, size: 32, offset: 128)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "HwFlowCtl", scope: !660, file: !556, line: 70, baseType: !24, size: 32, offset: 160)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "OverSampling", scope: !660, file: !556, line: 73, baseType: !24, size: 32, offset: 192)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "pTxBuffPtr", scope: !655, file: !556, line: 147, baseType: !670, size: 32, offset: 256)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferSize", scope: !655, file: !556, line: 149, baseType: !37, size: 16, offset: 288)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferCount", scope: !655, file: !556, line: 151, baseType: !673, size: 16, offset: 304)
!673 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !37)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "pRxBuffPtr", scope: !655, file: !556, line: 153, baseType: !670, size: 32, offset: 320)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferSize", scope: !655, file: !556, line: 155, baseType: !37, size: 16, offset: 352)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferCount", scope: !655, file: !556, line: 157, baseType: !673, size: 16, offset: 368)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "hdmatx", scope: !655, file: !556, line: 159, baseType: !678, size: 32, offset: 384)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HandleTypeDef", file: !680, line: 137, baseType: !681)
!680 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "dd8e7645a79a80f8166404bb078b3d4e")
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__DMA_HandleTypeDef", file: !680, line: 111, size: 576, flags: DIFlagFwdDecl, identifier: "_ZTS19__DMA_HandleTypeDef")
!682 = !DIDerivedType(tag: DW_TAG_member, name: "hdmarx", scope: !655, file: !556, line: 161, baseType: !678, size: 32, offset: 416)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !655, file: !556, line: 163, baseType: !684, size: 32, offset: 448)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_LockTypeDef", file: !9, line: 56, baseType: !551)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "gState", scope: !655, file: !556, line: 165, baseType: !686, size: 32, offset: 480)
!686 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !687)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_UART_StateTypeDef", file: !556, line: 136, baseType: !555)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "RxState", scope: !655, file: !556, line: 169, baseType: !686, size: 32, offset: 512)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !655, file: !556, line: 172, baseType: !23, size: 32, offset: 544)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "_uartPort", scope: !646, file: !110, line: 124, baseType: !34, size: 32, offset: 1440)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "_txPin", scope: !646, file: !110, line: 125, baseType: !37, size: 16, offset: 1472)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "_rxPin", scope: !646, file: !110, line: 126, baseType: !37, size: 16, offset: 1488)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "_uartInterruptInstance", scope: !646, file: !110, line: 127, baseType: !694, size: 32, offset: 1504)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !19, line: 126, baseType: !550)
!695 = !DISubprogram(name: "Stm32Uart", scope: !646, file: !110, line: 66, type: !696, scopeLine: 66, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!696 = !DISubroutineType(types: !697)
!697 = !{null, !698, !229, !229, !699, !17, !34, !37, !37}
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "Size", scope: !45, file: !700, line: 32, baseType: !169)
!700 = !DIFile(filename: "../cicada/types.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "6dfa4c2c933d4c520c13fa7638528c51")
!701 = !DISubprogram(name: "Stm32Uart", scope: !646, file: !110, line: 83, type: !702, scopeLine: 83, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!702 = !DISubroutineType(types: !703)
!703 = !{null, !698, !229, !229, !699, !699, !17, !34, !37, !37}
!704 = !DISubprogram(name: "~Stm32Uart", scope: !646, file: !110, line: 86, type: !705, scopeLine: 86, containingType: !646, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!705 = !DISubroutineType(types: !706)
!706 = !{null, !698}
!707 = !DISubprogram(name: "getInstance", linkageName: "_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef", scope: !646, file: !110, line: 88, type: !708, scopeLine: 88, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!708 = !DISubroutineType(types: !709)
!709 = !{!651, !17}
!710 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEv", scope: !646, file: !110, line: 93, type: !711, scopeLine: 93, containingType: !646, virtualIndex: 15, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!711 = !DISubroutineType(types: !712)
!712 = !{!56, !698}
!713 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEh", scope: !646, file: !110, line: 100, type: !714, scopeLine: 100, containingType: !646, virtualIndex: 16, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!714 = !DISubroutineType(types: !715)
!715 = !{!56, !698, !117}
!716 = !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada9Stm32Uart6isOpenEv", scope: !646, file: !110, line: 102, type: !711, scopeLine: 102, containingType: !646, virtualIndex: 17, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!717 = !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada9Stm32Uart15setSerialConfigEjh", scope: !646, file: !110, line: 103, type: !718, scopeLine: 103, containingType: !646, virtualIndex: 18, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!718 = !DISubroutineType(types: !719)
!719 = !{!56, !698, !24, !117}
!720 = !DISubprogram(name: "close", linkageName: "_ZN6Cicada9Stm32Uart5closeEv", scope: !646, file: !110, line: 104, type: !705, scopeLine: 104, containingType: !646, virtualIndex: 19, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!721 = !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada9Stm32Uart8portNameEv", scope: !646, file: !110, line: 105, type: !722, scopeLine: 105, containingType: !646, virtualIndex: 20, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!722 = !DISubroutineType(types: !723)
!723 = !{!230, !724}
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !646)
!726 = !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada9Stm32Uart7rawReadERh", scope: !646, file: !110, line: 106, type: !727, scopeLine: 106, containingType: !646, virtualIndex: 21, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!727 = !DISubroutineType(types: !728)
!728 = !{!56, !698, !729}
!729 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !117, size: 32)
!730 = !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada9Stm32Uart8rawWriteEh", scope: !646, file: !110, line: 107, type: !714, scopeLine: 107, containingType: !646, virtualIndex: 22, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!731 = !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada9Stm32Uart13startTransmitEv", scope: !646, file: !110, line: 108, type: !705, scopeLine: 108, containingType: !646, virtualIndex: 23, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!732 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv", scope: !646, file: !110, line: 109, type: !733, scopeLine: 109, containingType: !646, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!733 = !DISubroutineType(types: !734)
!734 = !{!56, !724}
!735 = !DISubprogram(name: "handleInterrupt", linkageName: "_ZN6Cicada9Stm32Uart15handleInterruptEv", scope: !646, file: !110, line: 111, type: !705, scopeLine: 111, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!736 = !DISubprogram(name: "Stm32Uart", scope: !646, file: !110, line: 115, type: !737, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!737 = !DISubroutineType(types: !738)
!738 = !{null, !698, !739}
!739 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !725, size: 32)
!740 = !DISubprogram(name: "operator=", linkageName: "_ZN6Cicada9Stm32UartaSERKS0_", scope: !646, file: !110, line: 116, type: !741, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!741 = !DISubroutineType(types: !742)
!742 = !{!743, !698, !739}
!743 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !646, size: 32)
!744 = !DISubprogram(name: "init", linkageName: "_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef", scope: !646, file: !110, line: 118, type: !745, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!745 = !DISubroutineType(types: !746)
!746 = !{null, !698, !17}
!747 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ICommDevice", scope: !45, file: !748, line: 43, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !749, vtableHolder: !747, identifier: "_ZTSN6Cicada11ICommDeviceE")
!748 = !DIFile(filename: "../cicada/icommdevice.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e83d2959922f5020d303a6315b56c6e9")
!749 = !{!750, !751, !755, !760, !761, !764, !767}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$ICommDevice", scope: !748, file: !748, baseType: !48, size: 32, flags: DIFlagArtificial)
!751 = !DISubprogram(name: "~ICommDevice", scope: !747, file: !748, line: 46, type: !752, scopeLine: 46, containingType: !747, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!752 = !DISubroutineType(types: !753)
!753 = !{null, !754}
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!755 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada11ICommDevice14bytesAvailableEv", scope: !747, file: !748, line: 52, type: !756, scopeLine: 52, containingType: !747, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!756 = !DISubroutineType(types: !757)
!757 = !{!699, !758}
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !747)
!760 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada11ICommDevice14spaceAvailableEv", scope: !747, file: !748, line: 60, type: !756, scopeLine: 60, containingType: !747, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!761 = !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada11ICommDevice20writeBufferProcessedEv", scope: !747, file: !748, line: 71, type: !762, scopeLine: 71, containingType: !747, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!762 = !DISubroutineType(types: !763)
!763 = !{!56, !758}
!764 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada11ICommDevice4readEPhy", scope: !747, file: !748, line: 85, type: !765, scopeLine: 85, containingType: !747, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!765 = !DISubroutineType(types: !766)
!766 = !{!699, !754, !670, !699}
!767 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada11ICommDevice5writeEPKhy", scope: !747, file: !748, line: 98, type: !768, scopeLine: 98, containingType: !747, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!768 = !DISubroutineType(types: !769)
!769 = !{!699, !754, !770, !699}
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!771 = !{!545}
!772 = !{!121, !127, !131, !134, !138, !141, !143, !145, !147, !150, !153, !156, !159, !162, !165, !166, !167, !168, !172, !174, !176, !178, !180, !183, !186, !189, !192, !195, !773}
!773 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !547, entity: !45, file: !548, line: 28)
!774 = distinct !DICompileUnit(language: DW_LANG_C99, file: !775, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !776, retainedTypes: !781, splitDebugInlining: false, nameTableKind: None)
!775 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "bf5d5e021854d33cea3d58ed6b9d5087")
!776 = !{!436, !351, !777}
!777 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !352, line: 157, baseType: !10, size: 32, elements: !778)
!778 = !{!779, !780}
!779 = !DIEnumerator(name: "DISABLE", value: 0)
!780 = !DIEnumerator(name: "ENABLE", value: 1)
!781 = !{!782, !24, !203, !117, !796, !797, !803, !37, !816, !827}
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 32)
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !784)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, elements: !785)
!785 = !{!786, !787, !788, !789, !790, !791, !792, !793, !794, !795}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !784, file: !19, line: 426, baseType: !23, size: 32)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !784, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !784, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !784, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !784, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !784, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !784, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !784, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !784, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !784, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 32)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !19, line: 418, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 414, size: 64, elements: !800)
!800 = !{!801, !802}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !799, file: !19, line: 416, baseType: !23, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !799, file: !19, line: 417, baseType: !23, size: 32, offset: 32)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !19, line: 336, baseType: !805)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 325, size: 288, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !805, file: !19, line: 327, baseType: !23, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !805, file: !19, line: 328, baseType: !23, size: 32, offset: 32)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !805, file: !19, line: 329, baseType: !23, size: 32, offset: 64)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !805, file: !19, line: 330, baseType: !23, size: 32, offset: 96)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !805, file: !19, line: 331, baseType: !23, size: 32, offset: 128)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "AR", scope: !805, file: !19, line: 332, baseType: !23, size: 32, offset: 160)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !805, file: !19, line: 333, baseType: !23, size: 32, offset: 192)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !805, file: !19, line: 334, baseType: !23, size: 32, offset: 224)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR", scope: !805, file: !19, line: 335, baseType: !23, size: 32, offset: 256)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !19, line: 367, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 358, size: 224, elements: !819)
!819 = !{!820, !821, !822, !823, !824, !825, !826}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "CRL", scope: !818, file: !19, line: 360, baseType: !23, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "CRH", scope: !818, file: !19, line: 361, baseType: !23, size: 32, offset: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !818, file: !19, line: 362, baseType: !23, size: 32, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !818, file: !19, line: 363, baseType: !23, size: 32, offset: 96)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !818, file: !19, line: 364, baseType: !23, size: 32, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !818, file: !19, line: 365, baseType: !23, size: 32, offset: 160)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !818, file: !19, line: 366, baseType: !23, size: 32, offset: 192)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !829, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !830, retainedTypes: !831, splitDebugInlining: false, nameTableKind: None)
!829 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "83cb8d6817603f64d73dca2a0b01efa1")
!830 = !{!442}
!831 = !{!832, !24, !840, !132, !117, !865}
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !373, line: 700, baseType: !834)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !373, line: 694, size: 128, elements: !835)
!835 = !{!836, !837, !838, !839}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !834, file: !373, line: 696, baseType: !23, size: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !834, file: !373, line: 697, baseType: !23, size: 32, offset: 32)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !834, file: !373, line: 698, baseType: !23, size: 32, offset: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !834, file: !373, line: 699, baseType: !377, size: 32, offset: 96)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !373, line: 397, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !373, line: 374, size: 1120, elements: !843)
!843 = !{!844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !842, file: !373, line: 376, baseType: !377, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !842, file: !373, line: 377, baseType: !23, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !842, file: !373, line: 378, baseType: !23, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !842, file: !373, line: 379, baseType: !23, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !842, file: !373, line: 380, baseType: !23, size: 32, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !842, file: !373, line: 381, baseType: !23, size: 32, offset: 160)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !842, file: !373, line: 382, baseType: !384, size: 96, offset: 192)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !842, file: !373, line: 383, baseType: !23, size: 32, offset: 288)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !842, file: !373, line: 384, baseType: !23, size: 32, offset: 320)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !842, file: !373, line: 385, baseType: !23, size: 32, offset: 352)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !842, file: !373, line: 386, baseType: !23, size: 32, offset: 384)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !842, file: !373, line: 387, baseType: !23, size: 32, offset: 416)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !842, file: !373, line: 388, baseType: !23, size: 32, offset: 448)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !842, file: !373, line: 389, baseType: !23, size: 32, offset: 480)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !842, file: !373, line: 390, baseType: !396, size: 64, offset: 512)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !842, file: !373, line: 391, baseType: !377, size: 32, offset: 576)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !842, file: !373, line: 392, baseType: !377, size: 32, offset: 608)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !842, file: !373, line: 393, baseType: !402, size: 128, offset: 640)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !842, file: !373, line: 394, baseType: !406, size: 160, offset: 768)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !842, file: !373, line: 395, baseType: !410, size: 160, offset: 928)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !842, file: !373, line: 396, baseType: !23, size: 32, offset: 1088)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !373, line: 355, baseType: !867)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !373, line: 340, size: 28704, elements: !868)
!868 = !{!869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !867, file: !373, line: 342, baseType: !596, size: 256)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !867, file: !373, line: 343, baseType: !598, size: 768, offset: 256)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !867, file: !373, line: 344, baseType: !596, size: 256, offset: 1024)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !867, file: !373, line: 345, baseType: !598, size: 768, offset: 1280)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !867, file: !373, line: 346, baseType: !596, size: 256, offset: 2048)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !867, file: !373, line: 347, baseType: !598, size: 768, offset: 2304)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !867, file: !373, line: 348, baseType: !596, size: 256, offset: 3072)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !867, file: !373, line: 349, baseType: !598, size: 768, offset: 3328)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !867, file: !373, line: 350, baseType: !596, size: 256, offset: 4096)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !867, file: !373, line: 351, baseType: !609, size: 1792, offset: 4352)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !867, file: !373, line: 352, baseType: !613, size: 1920, offset: 6144)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !867, file: !373, line: 353, baseType: !617, size: 20608, offset: 8064)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !867, file: !373, line: 354, baseType: !23, size: 32, offset: 28672)
!882 = distinct !DICompileUnit(language: DW_LANG_C99, file: !883, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !884, retainedTypes: !890, splitDebugInlining: false, nameTableKind: None)
!883 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "de98d9c05272efa2ca465428751dd1b5")
!884 = !{!885, !436}
!885 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !886, line: 65, baseType: !10, size: 32, elements: !887)
!886 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "b5ff32b0624c591654a3e02ee400cffe")
!887 = !{!888, !889}
!888 = !DIEnumerator(name: "GPIO_PIN_RESET", value: 0)
!889 = !DIEnumerator(name: "GPIO_PIN_SET", value: 1)
!890 = !{!24, !37, !891, !905, !914, !925}
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !19, line: 438, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 424, size: 320, elements: !894)
!894 = !{!895, !896, !897, !898, !899, !900, !901, !902, !903, !904}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !893, file: !19, line: 426, baseType: !23, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !893, file: !19, line: 427, baseType: !23, size: 32, offset: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !893, file: !19, line: 428, baseType: !23, size: 32, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !893, file: !19, line: 429, baseType: !23, size: 32, offset: 96)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !893, file: !19, line: 430, baseType: !23, size: 32, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !893, file: !19, line: 431, baseType: !23, size: 32, offset: 160)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !893, file: !19, line: 432, baseType: !23, size: 32, offset: 192)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !893, file: !19, line: 433, baseType: !23, size: 32, offset: 224)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !893, file: !19, line: 434, baseType: !23, size: 32, offset: 256)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !893, file: !19, line: 435, baseType: !23, size: 32, offset: 288)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "AFIO_TypeDef", file: !19, line: 380, baseType: !907)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 373, size: 256, elements: !908)
!908 = !{!909, !910, !911, !912, !913}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "EVCR", scope: !907, file: !19, line: 375, baseType: !23, size: 32)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR", scope: !907, file: !19, line: 376, baseType: !23, size: 32, offset: 32)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !907, file: !19, line: 377, baseType: !574, size: 128, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !907, file: !19, line: 378, baseType: !24, size: 32, offset: 192)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "MAPR2", scope: !907, file: !19, line: 379, baseType: !23, size: 32, offset: 224)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !19, line: 367, baseType: !916)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 358, size: 224, elements: !917)
!917 = !{!918, !919, !920, !921, !922, !923, !924}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "CRL", scope: !916, file: !19, line: 360, baseType: !23, size: 32)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "CRH", scope: !916, file: !19, line: 361, baseType: !23, size: 32, offset: 32)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !916, file: !19, line: 362, baseType: !23, size: 32, offset: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !916, file: !19, line: 363, baseType: !23, size: 32, offset: 96)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !916, file: !19, line: 364, baseType: !23, size: 32, offset: 128)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !916, file: !19, line: 365, baseType: !23, size: 32, offset: 160)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !916, file: !19, line: 366, baseType: !23, size: 32, offset: 192)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !19, line: 319, baseType: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 311, size: 192, elements: !928)
!928 = !{!929, !930, !931, !932, !933, !934}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !927, file: !19, line: 313, baseType: !23, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !927, file: !19, line: 314, baseType: !23, size: 32, offset: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !927, file: !19, line: 315, baseType: !23, size: 32, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !927, file: !19, line: 316, baseType: !23, size: 32, offset: 96)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !927, file: !19, line: 317, baseType: !23, size: 32, offset: 128)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !927, file: !19, line: 318, baseType: !23, size: 32, offset: 160)
!935 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !936, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !937, imports: !957, splitDebugInlining: false, nameTableKind: None)
!936 = !DIFile(filename: "../cicada/scheduler.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e3803bdb34845899b60a060630b7fca8")
!937 = !{!938}
!938 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Scheduler", scope: !45, file: !939, line: 53, size: 96, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !940, identifier: "_ZTSN6Cicada9SchedulerE")
!939 = !DIFile(filename: "../cicada/scheduler.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "040734eea83ce445208abbcb76b1b1f5")
!940 = !{!941, !945, !948, !949, !953, !956}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "_tickFunction", scope: !938, file: !939, line: 77, baseType: !942, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 32)
!943 = !DISubroutineType(types: !944)
!944 = !{!24}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "_taskList", scope: !938, file: !939, line: 78, baseType: !946, size: 32, offset: 32)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "_currentTask", scope: !938, file: !939, line: 79, baseType: !946, size: 32, offset: 64)
!949 = !DISubprogram(name: "Scheduler", scope: !938, file: !939, line: 62, type: !950, scopeLine: 62, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!950 = !DISubroutineType(types: !951)
!951 = !{null, !952, !942, !946}
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!953 = !DISubprogram(name: "runTask", linkageName: "_ZN6Cicada9Scheduler7runTaskEv", scope: !938, file: !939, line: 68, type: !954, scopeLine: 68, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!954 = !DISubroutineType(types: !955)
!955 = !{null, !952}
!956 = !DISubprogram(name: "start", linkageName: "_ZN6Cicada9Scheduler5startEv", scope: !938, file: !939, line: 74, type: !954, scopeLine: 74, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!957 = !{!958, !963}
!958 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !122, entity: !959, file: !962, line: 58)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "max_align_t", file: !960, line: 24, baseType: !961)
!960 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/__stddef_max_align_t.h", directory: "", checksumkind: CSK_MD5, checksum: "48e8e2456f77e6cda35d245130fa7259")
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !960, line: 19, size: 128, flags: DIFlagFwdDecl, identifier: "_ZTS11max_align_t")
!962 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/c++/10.3.1/cstddef", directory: "/home/mjshen/RTOSExploration")
!963 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !935, entity: !45, file: !936, line: 27)
!964 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !965, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, imports: !966, splitDebugInlining: false, nameTableKind: None)
!965 = !DIFile(filename: "../cicada/platform/stm32f1/tick_stm32.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "2e21bec54557ce151e165eda219ada53")
!966 = !{!121, !127, !131, !134, !138, !141, !143, !145, !147, !150, !153, !156, !159, !162, !165, !166, !167, !168, !172, !174, !176, !178, !180, !183, !186, !189, !192, !195}
!967 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !968, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !969, imports: !1157, splitDebugInlining: false, nameTableKind: None)
!968 = !DIFile(filename: "../cicada/bufferedserial.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "0c50e54046b616f386000f55e6143c47")
!969 = !{!970, !973, !747, !978, !1037, !1041}
!970 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "BufferedSerial", scope: !45, file: !90, line: 42, size: 832, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !971, vtableHolder: !747)
!971 = !{!972, !1036, !1115, !1116, !1120, !1123, !1128, !1129, !1132, !1135, !1138, !1141, !1144, !1147, !1148, !1151, !1154, !1155, !1156}
!972 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !970, baseType: !973, flags: DIFlagPublic, extraData: i32 0)
!973 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "IBufferedSerial", scope: !45, file: !974, line: 39, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !975, vtableHolder: !747, identifier: "_ZTSN6Cicada15IBufferedSerialE")
!974 = !DIFile(filename: "../cicada/ibufferedserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "0e5db7c0b86651abb573e233dc791166")
!975 = !{!976, !977, !1006, !1010, !1013, !1016, !1019, !1022, !1025, !1030, !1031, !1032, !1035}
!976 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !973, baseType: !747, flags: DIFlagPublic, extraData: i32 0)
!977 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !973, baseType: !978, offset: 32, flags: DIFlagPublic, extraData: i32 0)
!978 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "ISerial", scope: !45, file: !979, line: 37, size: 32, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !980, vtableHolder: !978, identifier: "_ZTSN6Cicada7ISerialE")
!979 = !DIFile(filename: "../cicada/iserial.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e3dc53a2acd15a8e90c357a32168f40f")
!980 = !{!981, !982, !986, !989, !990, !993, !994, !999, !1002, !1005}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$ISerial", scope: !979, file: !979, baseType: !48, size: 32, flags: DIFlagArtificial)
!982 = !DISubprogram(name: "~ISerial", scope: !978, file: !979, line: 40, type: !983, scopeLine: 40, containingType: !978, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!983 = !DISubroutineType(types: !984)
!984 = !{null, !985}
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!986 = !DISubprogram(name: "open", linkageName: "_ZN6Cicada7ISerial4openEv", scope: !978, file: !979, line: 46, type: !987, scopeLine: 46, containingType: !978, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!987 = !DISubroutineType(types: !988)
!988 = !{!56, !985}
!989 = !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada7ISerial6isOpenEv", scope: !978, file: !979, line: 52, type: !987, scopeLine: 52, containingType: !978, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!990 = !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada7ISerial15setSerialConfigEjh", scope: !978, file: !979, line: 60, type: !991, scopeLine: 60, containingType: !978, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!991 = !DISubroutineType(types: !992)
!992 = !{!56, !985, !24, !117}
!993 = !DISubprogram(name: "close", linkageName: "_ZN6Cicada7ISerial5closeEv", scope: !978, file: !979, line: 65, type: !983, scopeLine: 65, containingType: !978, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!994 = !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada7ISerial8portNameEv", scope: !978, file: !979, line: 71, type: !995, scopeLine: 71, containingType: !978, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!995 = !DISubroutineType(types: !996)
!996 = !{!230, !997}
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !978)
!999 = !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada7ISerial7rawReadERh", scope: !978, file: !979, line: 80, type: !1000, scopeLine: 80, containingType: !978, virtualIndex: 7, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!56, !985, !729}
!1002 = !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada7ISerial8rawWriteEh", scope: !978, file: !979, line: 87, type: !1003, scopeLine: 87, containingType: !978, virtualIndex: 8, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!56, !985, !117}
!1005 = !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada7ISerial13startTransmitEv", scope: !978, file: !979, line: 93, type: !983, scopeLine: 93, containingType: !978, virtualIndex: 9, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1006 = !DISubprogram(name: "~IBufferedSerial", scope: !973, file: !974, line: 42, type: !1007, scopeLine: 42, containingType: !973, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{null, !1009}
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1010 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada15IBufferedSerial4readEPhy", scope: !973, file: !974, line: 44, type: !1011, scopeLine: 44, containingType: !973, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!699, !1009, !670, !699}
!1013 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEPKhy", scope: !973, file: !974, line: 45, type: !1014, scopeLine: 45, containingType: !973, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!699, !1009, !770, !699}
!1016 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada15IBufferedSerial4readEv", scope: !973, file: !974, line: 51, type: !1017, scopeLine: 51, containingType: !973, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!117, !1009}
!1019 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEPKh", scope: !973, file: !974, line: 62, type: !1020, scopeLine: 62, containingType: !973, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!699, !1009, !770}
!1022 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada15IBufferedSerial5writeEh", scope: !973, file: !974, line: 68, type: !1023, scopeLine: 68, containingType: !973, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{null, !1009, !117}
!1025 = !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada15IBufferedSerial11canReadLineEv", scope: !973, file: !974, line: 73, type: !1026, scopeLine: 73, containingType: !973, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!56, !1028}
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !973)
!1030 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada15IBufferedSerial8readLineEPhy", scope: !973, file: !974, line: 85, type: !1011, scopeLine: 85, containingType: !973, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1031 = !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada15IBufferedSerial19flushReceiveBuffersEv", scope: !973, file: !974, line: 90, type: !1007, scopeLine: 90, containingType: !973, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1032 = !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada15IBufferedSerial14readBufferSizeEv", scope: !973, file: !974, line: 95, type: !1033, scopeLine: 95, containingType: !973, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!699, !1009}
!1035 = !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada15IBufferedSerial15writeBufferSizeEv", scope: !973, file: !974, line: 96, type: !1033, scopeLine: 96, containingType: !973, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagPureVirtual | DISPFlagOptimized)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "_readBuffer", scope: !970, file: !90, line: 105, baseType: !1037, size: 384, offset: 64, flags: DIFlagProtected)
!1037 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "LineCircularBuffer", scope: !45, file: !1038, line: 38, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1039, vtableHolder: !1041, identifier: "_ZTSN6Cicada18LineCircularBufferE")
!1038 = !DIFile(filename: "../cicada/linecircularbuffer.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "7c64ede70efe975ae69caea246f4ce64")
!1039 = !{!1040, !1089, !1090, !1094, !1097, !1100, !1103, !1106, !1111, !1112}
!1040 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1037, baseType: !1041, flags: DIFlagPublic, extraData: i32 0)
!1041 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "CircularBuffer<char>", scope: !45, file: !1042, line: 39, size: 384, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1043, vtableHolder: !1041, templateParams: !1087, identifier: "_ZTSN6Cicada14CircularBufferIcEE")
!1042 = !DIFile(filename: "../cicada/circularbuffer.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "eefa34d28a75acab61b1e5f45f9ba1dd")
!1043 = !{!1044, !1045, !1046, !1047, !1048, !1050, !1051, !1055, !1058, !1061, !1064, !1067, !1070, !1071, !1072, !1077, !1078, !1081, !1082, !1083}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$CircularBuffer", scope: !1042, file: !1042, baseType: !48, size: 32, flags: DIFlagArtificial)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "_writeHead", scope: !1041, file: !1042, line: 196, baseType: !699, size: 64, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "_readHead", scope: !1041, file: !1042, line: 197, baseType: !699, size: 64, offset: 128)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "_availableData", scope: !1041, file: !1042, line: 198, baseType: !699, size: 64, offset: 192)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferSize", scope: !1041, file: !1042, line: 199, baseType: !1049, size: 64, offset: 256)
!1049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !699)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "_buffer", scope: !1041, file: !1042, line: 200, baseType: !229, size: 32, offset: 320)
!1051 = !DISubprogram(name: "CircularBuffer", scope: !1041, file: !1042, line: 48, type: !1052, scopeLine: 48, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{null, !1054, !229, !699}
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1055 = !DISubprogram(name: "~CircularBuffer", scope: !1041, file: !1042, line: 56, type: !1056, scopeLine: 56, containingType: !1041, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{null, !1054}
!1058 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEPKcy", scope: !1041, file: !1042, line: 65, type: !1059, scopeLine: 65, containingType: !1041, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!699, !1054, !230, !699}
!1061 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEc", scope: !1041, file: !1042, line: 88, type: !1062, scopeLine: 88, containingType: !1041, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{null, !1054, !105}
!1064 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEPcy", scope: !1041, file: !1042, line: 102, type: !1065, scopeLine: 102, containingType: !1041, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!699, !1054, !229, !699}
!1067 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEv", scope: !1041, file: !1042, line: 124, type: !1068, scopeLine: 124, containingType: !1041, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!105, !1054}
!1070 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIcE4readEv", scope: !1041, file: !1042, line: 140, type: !1068, scopeLine: 140, containingType: !1041, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1071 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIcE5flushEv", scope: !1041, file: !1042, line: 148, type: !1056, scopeLine: 148, containingType: !1041, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1072 = !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIcE7isEmptyEv", scope: !1041, file: !1042, line: 158, type: !1073, scopeLine: 158, containingType: !1041, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!56, !1075}
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1077 = !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIcE6isFullEv", scope: !1041, file: !1042, line: 166, type: !1073, scopeLine: 166, containingType: !1041, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1078 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv", scope: !1041, file: !1042, line: 174, type: !1079, scopeLine: 174, containingType: !1041, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!699, !1075}
!1081 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv", scope: !1041, file: !1042, line: 182, type: !1079, scopeLine: 182, containingType: !1041, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1082 = !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIcE4sizeEv", scope: !1041, file: !1042, line: 190, type: !1079, scopeLine: 190, containingType: !1041, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1083 = !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy", scope: !1041, file: !1042, line: 202, type: !1084, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{null, !1054, !1086}
!1086 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !699, size: 32)
!1087 = !{!1088}
!1088 = !DITemplateTypeParameter(name: "T", type: !105)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "_bufferedLines", scope: !1037, file: !1038, line: 130, baseType: !37, size: 16, offset: 352)
!1090 = !DISubprogram(name: "LineCircularBuffer", scope: !1037, file: !1038, line: 41, type: !1091, scopeLine: 41, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{null, !1093, !229, !699}
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1094 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEPKcy", scope: !1037, file: !1038, line: 46, type: !1095, scopeLine: 46, containingType: !1037, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!699, !1093, !230, !699}
!1097 = !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEc", scope: !1037, file: !1038, line: 60, type: !1098, scopeLine: 60, containingType: !1037, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{null, !1093, !105}
!1100 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEPcy", scope: !1037, file: !1038, line: 69, type: !1101, scopeLine: 69, containingType: !1037, virtualIndex: 4, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!699, !1093, !229, !699}
!1103 = !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEv", scope: !1037, file: !1038, line: 83, type: !1104, scopeLine: 83, containingType: !1037, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!105, !1093}
!1106 = !DISubprogram(name: "numBufferedLines", linkageName: "_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv", scope: !1037, file: !1038, line: 97, type: !1107, scopeLine: 97, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!37, !1109}
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!1111 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada18LineCircularBuffer8readLineEPcy", scope: !1037, file: !1038, line: 108, type: !1101, scopeLine: 108, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1112 = !DISubprogram(name: "flush", linkageName: "_ZN6Cicada18LineCircularBuffer5flushEv", scope: !1037, file: !1038, line: 123, type: !1113, scopeLine: 123, containingType: !1037, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{null, !1093}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "_writeBuffer", scope: !970, file: !90, line: 106, baseType: !1037, size: 384, offset: 448, flags: DIFlagProtected)
!1116 = !DISubprogram(name: "BufferedSerial", scope: !970, file: !90, line: 54, type: !1117, scopeLine: 54, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{null, !1119, !229, !229, !699, !699}
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1120 = !DISubprogram(name: "BufferedSerial", scope: !970, file: !90, line: 64, type: !1121, scopeLine: 64, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{null, !1119, !229, !229, !699}
!1123 = !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14bytesAvailableEv", scope: !970, file: !90, line: 66, type: !1124, scopeLine: 66, containingType: !970, virtualIndex: 2, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!699, !1126}
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!1127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!1128 = !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14spaceAvailableEv", scope: !970, file: !90, line: 68, type: !1124, scopeLine: 68, containingType: !970, virtualIndex: 3, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1129 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEPhy", scope: !970, file: !90, line: 70, type: !1130, scopeLine: 70, containingType: !970, virtualIndex: 5, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!699, !1119, !670, !699}
!1132 = !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEv", scope: !970, file: !90, line: 72, type: !1133, scopeLine: 72, containingType: !970, virtualIndex: 7, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!117, !1119}
!1135 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKhy", scope: !970, file: !90, line: 74, type: !1136, scopeLine: 74, containingType: !970, virtualIndex: 6, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!699, !1119, !770, !699}
!1138 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKh", scope: !970, file: !90, line: 76, type: !1139, scopeLine: 76, containingType: !970, virtualIndex: 8, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!699, !1119, !770}
!1141 = !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEh", scope: !970, file: !90, line: 78, type: !1142, scopeLine: 78, containingType: !970, virtualIndex: 9, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{null, !1119, !117}
!1144 = !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada14BufferedSerial11canReadLineEv", scope: !970, file: !90, line: 80, type: !1145, scopeLine: 80, containingType: !970, virtualIndex: 10, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{!56, !1126}
!1147 = !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada14BufferedSerial8readLineEPhy", scope: !970, file: !90, line: 91, type: !1130, scopeLine: 91, containingType: !970, virtualIndex: 11, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1148 = !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv", scope: !970, file: !90, line: 93, type: !1149, scopeLine: 93, containingType: !970, virtualIndex: 12, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{null, !1119}
!1151 = !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada14BufferedSerial14readBufferSizeEv", scope: !970, file: !90, line: 95, type: !1152, scopeLine: 95, containingType: !970, virtualIndex: 13, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!699, !1119}
!1154 = !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada14BufferedSerial15writeBufferSizeEv", scope: !970, file: !90, line: 96, type: !1152, scopeLine: 96, containingType: !970, virtualIndex: 14, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1155 = !DISubprogram(name: "transferToAndFromBuffer", linkageName: "_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv", scope: !970, file: !90, line: 102, type: !1149, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1156 = !DISubprogram(name: "copyToBuffer", linkageName: "_ZN6Cicada14BufferedSerial12copyToBufferEh", scope: !970, file: !90, line: 109, type: !1142, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1157 = !{!121, !127, !131, !134, !138, !141, !143, !145, !147, !150, !153, !156, !159, !162, !165, !166, !167, !168, !172, !174, !176, !178, !180, !183, !186, !189, !192, !195, !1158}
!1158 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !967, entity: !45, file: !968, line: 28)
!1159 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !1160, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1160 = !DIFile(filename: "../cicada/platform/stm32f1/irq_stm32.cpp", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "e34a510e3cc4f838fcfeb73936339393")
!1161 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1162, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1163, retainedTypes: !1184, splitDebugInlining: false, nameTableKind: None)
!1162 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "16c165b28ca3d4a5c8d7d66f2c899e26")
!1163 = !{!436, !1164, !1168, !1174, !351}
!1164 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 52, baseType: !10, size: 32, elements: !1165)
!1165 = !{!1166, !1167}
!1166 = !DIEnumerator(name: "HAL_UNLOCKED", value: 0)
!1167 = !DIEnumerator(name: "HAL_LOCKED", value: 1)
!1168 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !680, line: 78, baseType: !10, size: 32, elements: !1169)
!1169 = !{!1170, !1171, !1172, !1173}
!1170 = !DIEnumerator(name: "HAL_DMA_STATE_RESET", value: 0)
!1171 = !DIEnumerator(name: "HAL_DMA_STATE_READY", value: 1)
!1172 = !DIEnumerator(name: "HAL_DMA_STATE_BUSY", value: 2)
!1173 = !DIEnumerator(name: "HAL_DMA_STATE_TIMEOUT", value: 3)
!1174 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !556, line: 117, baseType: !10, size: 32, elements: !1175)
!1175 = !{!1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183}
!1176 = !DIEnumerator(name: "HAL_UART_STATE_RESET", value: 0)
!1177 = !DIEnumerator(name: "HAL_UART_STATE_READY", value: 32)
!1178 = !DIEnumerator(name: "HAL_UART_STATE_BUSY", value: 36)
!1179 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX", value: 33)
!1180 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_RX", value: 34)
!1181 = !DIEnumerator(name: "HAL_UART_STATE_BUSY_TX_RX", value: 35)
!1182 = !DIEnumerator(name: "HAL_UART_STATE_TIMEOUT", value: 160)
!1183 = !DIEnumerator(name: "HAL_UART_STATE_ERROR", value: 224)
!1184 = !{!203, !24, !1185, !37, !117, !538, !1186, !1187, !1221, !1192}
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_UART_StateTypeDef", file: !556, line: 136, baseType: !1174)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_HandleTypeDef", file: !556, line: 189, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__UART_HandleTypeDef", file: !556, line: 141, size: 576, elements: !1190)
!1190 = !{!1191, !1203, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1267, !1268, !1269, !1271, !1272}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !1189, file: !556, line: 143, baseType: !1192, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !19, line: 516, baseType: !1194)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 507, size: 224, elements: !1195)
!1195 = !{!1196, !1197, !1198, !1199, !1200, !1201, !1202}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1194, file: !19, line: 509, baseType: !23, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1194, file: !19, line: 510, baseType: !23, size: 32, offset: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1194, file: !19, line: 511, baseType: !23, size: 32, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1194, file: !19, line: 512, baseType: !23, size: 32, offset: 96)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1194, file: !19, line: 513, baseType: !23, size: 32, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1194, file: !19, line: 514, baseType: !23, size: 32, offset: 160)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1194, file: !19, line: 515, baseType: !23, size: 32, offset: 192)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !1189, file: !556, line: 145, baseType: !1204, size: 224, offset: 32)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_InitTypeDef", file: !556, line: 76, baseType: !1205)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !556, line: 47, size: 224, elements: !1206)
!1206 = !{!1207, !1208, !1209, !1210, !1211, !1212, !1213}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "BaudRate", scope: !1205, file: !556, line: 49, baseType: !24, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "WordLength", scope: !1205, file: !556, line: 54, baseType: !24, size: 32, offset: 32)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "StopBits", scope: !1205, file: !556, line: 57, baseType: !24, size: 32, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "Parity", scope: !1205, file: !556, line: 60, baseType: !24, size: 32, offset: 96)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !1205, file: !556, line: 67, baseType: !24, size: 32, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "HwFlowCtl", scope: !1205, file: !556, line: 70, baseType: !24, size: 32, offset: 160)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "OverSampling", scope: !1205, file: !556, line: 73, baseType: !24, size: 32, offset: 192)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "pTxBuffPtr", scope: !1189, file: !556, line: 147, baseType: !670, size: 32, offset: 256)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferSize", scope: !1189, file: !556, line: 149, baseType: !37, size: 16, offset: 288)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "TxXferCount", scope: !1189, file: !556, line: 151, baseType: !673, size: 16, offset: 304)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "pRxBuffPtr", scope: !1189, file: !556, line: 153, baseType: !670, size: 32, offset: 320)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferSize", scope: !1189, file: !556, line: 155, baseType: !37, size: 16, offset: 352)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "RxXferCount", scope: !1189, file: !556, line: 157, baseType: !673, size: 16, offset: 368)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "hdmatx", scope: !1189, file: !556, line: 159, baseType: !1221, size: 32, offset: 384)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HandleTypeDef", file: !680, line: 137, baseType: !1223)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__DMA_HandleTypeDef", file: !680, line: 111, size: 576, elements: !1224)
!1224 = !{!1225, !1234, !1245, !1247, !1249, !1250, !1255, !1256, !1257, !1258, !1259, !1266}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "Instance", scope: !1223, file: !680, line: 113, baseType: !1226, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_Channel_TypeDef", file: !19, line: 297, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 291, size: 128, elements: !1229)
!1229 = !{!1230, !1231, !1232, !1233}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1228, file: !19, line: 293, baseType: !23, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "CNDTR", scope: !1228, file: !19, line: 294, baseType: !23, size: 32, offset: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "CPAR", scope: !1228, file: !19, line: 295, baseType: !23, size: 32, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "CMAR", scope: !1228, file: !19, line: 296, baseType: !23, size: 32, offset: 96)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "Init", scope: !1223, file: !680, line: 115, baseType: !1235, size: 224, offset: 32)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_InitTypeDef", file: !680, line: 73, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 48, size: 224, elements: !1237)
!1237 = !{!1238, !1239, !1240, !1241, !1242, !1243, !1244}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "Direction", scope: !1236, file: !680, line: 50, baseType: !24, size: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphInc", scope: !1236, file: !680, line: 54, baseType: !24, size: 32, offset: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "MemInc", scope: !1236, file: !680, line: 57, baseType: !24, size: 32, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphDataAlignment", scope: !1236, file: !680, line: 60, baseType: !24, size: 32, offset: 96)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "MemDataAlignment", scope: !1236, file: !680, line: 63, baseType: !24, size: 32, offset: 128)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !1236, file: !680, line: 66, baseType: !24, size: 32, offset: 160)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "Priority", scope: !1236, file: !680, line: 71, baseType: !24, size: 32, offset: 192)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !1223, file: !680, line: 117, baseType: !1246, size: 32, offset: 256)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_LockTypeDef", file: !9, line: 56, baseType: !1164)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "State", scope: !1223, file: !680, line: 119, baseType: !1248, size: 32, offset: 288)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_DMA_StateTypeDef", file: !680, line: 84, baseType: !1168)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "Parent", scope: !1223, file: !680, line: 121, baseType: !203, size: 32, offset: 320)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "XferCpltCallback", scope: !1223, file: !680, line: 123, baseType: !1251, size: 32, offset: 352)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{null, !1254}
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "XferHalfCpltCallback", scope: !1223, file: !680, line: 125, baseType: !1251, size: 32, offset: 384)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "XferErrorCallback", scope: !1223, file: !680, line: 127, baseType: !1251, size: 32, offset: 416)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "XferAbortCallback", scope: !1223, file: !680, line: 129, baseType: !1251, size: 32, offset: 448)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !1223, file: !680, line: 131, baseType: !23, size: 32, offset: 480)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "DmaBaseAddress", scope: !1223, file: !680, line: 133, baseType: !1260, size: 32, offset: 512)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_TypeDef", file: !19, line: 303, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !19, line: 299, size: 64, elements: !1263)
!1263 = !{!1264, !1265}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1262, file: !19, line: 301, baseType: !23, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "IFCR", scope: !1262, file: !19, line: 302, baseType: !23, size: 32, offset: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "ChannelIndex", scope: !1223, file: !680, line: 135, baseType: !24, size: 32, offset: 544)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "hdmarx", scope: !1189, file: !556, line: 161, baseType: !1221, size: 32, offset: 416)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "Lock", scope: !1189, file: !556, line: 163, baseType: !1246, size: 32, offset: 448)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "gState", scope: !1189, file: !556, line: 165, baseType: !1270, size: 32, offset: 480)
!1270 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1186)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "RxState", scope: !1189, file: !556, line: 169, baseType: !1270, size: 32, offset: 512)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "ErrorCode", scope: !1189, file: !556, line: 172, baseType: !23, size: 32, offset: 544)
!1273 = !{!"Ubuntu clang version 14.0.6"}
!1274 = !{i32 7, !"Dwarf Version", i32 5}
!1275 = !{i32 2, !"Debug Info Version", i32 3}
!1276 = !{i32 1, !"wchar_size", i32 4}
!1277 = !{i32 1, !"min_enum_size", i32 4}
!1278 = !{i32 1, !"branch-target-enforcement", i32 0}
!1279 = !{i32 1, !"sign-return-address", i32 0}
!1280 = !{i32 1, !"sign-return-address-all", i32 0}
!1281 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!1282 = !{i32 7, !"frame-pointer", i32 2}
!1283 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 50, type: !1284, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !1287)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!52, !52, !1286}
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 32)
!1287 = !{!1288, !1289, !1290, !1292, !1296, !1297, !1298, !1299, !1301}
!1288 = !DILocalVariable(name: "argc", arg: 1, scope: !1283, file: !3, line: 50, type: !52)
!1289 = !DILocalVariable(name: "argv", arg: 2, scope: !1283, file: !3, line: 50, type: !1286)
!1290 = !DILocalVariable(name: "bufferSize", scope: !1283, file: !3, line: 56, type: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !37)
!1292 = !DILocalVariable(name: "readBuffer", scope: !1283, file: !3, line: 57, type: !1293)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 12032, elements: !1294)
!1294 = !{!1295}
!1295 = !DISubrange(count: 1504)
!1296 = !DILocalVariable(name: "writeBuffer", scope: !1283, file: !3, line: 58, type: !1293)
!1297 = !DILocalVariable(name: "serial", scope: !1283, file: !3, line: 59, type: !109)
!1298 = !DILocalVariable(name: "task", scope: !1283, file: !3, line: 60, type: !40)
!1299 = !DILocalVariable(name: "taskList", scope: !1283, file: !3, line: 62, type: !1300)
!1300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !947, size: 64, elements: !397)
!1301 = !DILocalVariable(name: "s", scope: !1283, file: !3, line: 64, type: !938)
!1302 = !DILocation(line: 0, scope: !1283)
!1303 = !DILocation(line: 53, column: 5, scope: !1283)
!1304 = !DILocation(line: 54, column: 5, scope: !1283)
!1305 = !DILocation(line: 57, column: 5, scope: !1283)
!1306 = !DILocation(line: 57, column: 10, scope: !1283)
!1307 = !DILocation(line: 58, column: 5, scope: !1283)
!1308 = !DILocation(line: 58, column: 10, scope: !1283)
!1309 = !DILocation(line: 59, column: 5, scope: !1283)
!1310 = !DILocation(line: 59, column: 15, scope: !1283)
!1311 = !DILocation(line: 60, column: 5, scope: !1283)
!1312 = !DILocation(line: 60, column: 16, scope: !1283)
!1313 = !DILocation(line: 60, column: 21, scope: !1283)
!1314 = !DILocation(line: 62, column: 5, scope: !1283)
!1315 = !DILocation(line: 62, column: 11, scope: !1283)
!1316 = !DILocation(line: 62, column: 24, scope: !1283)
!1317 = !DILocation(line: 62, column: 26, scope: !1283)
!1318 = !{!1319, !1319, i64 0}
!1319 = !{!"any pointer", !1320, i64 0}
!1320 = !{!"omnipotent char", !1321, i64 0}
!1321 = !{!"Simple C++ TBAA"}
!1322 = !DILocation(line: 64, column: 5, scope: !1283)
!1323 = !DILocation(line: 64, column: 15, scope: !1283)
!1324 = !DILocation(line: 65, column: 7, scope: !1283)
!1325 = !DILocation(line: 66, column: 1, scope: !1283)
!1326 = distinct !DISubprogram(name: "SystemClock_Config", linkageName: "_ZL18SystemClock_Configv", scope: !3, file: !3, line: 68, type: !4, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !1327)
!1327 = !{!1328, !1348}
!1328 = !DILocalVariable(name: "RCC_OscInitStruct", scope: !1326, file: !3, line: 70, type: !1329)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !1330, line: 261, baseType: !1331)
!1330 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "49bf7e29630a7d603739687645591a41")
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1330, line: 228, size: 320, flags: DIFlagTypePassByValue, elements: !1332, identifier: "_ZTS18RCC_OscInitTypeDef")
!1332 = !{!1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !1331, file: !1330, line: 230, baseType: !24, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !1331, file: !1330, line: 238, baseType: !24, size: 32, offset: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "HSEPredivValue", scope: !1331, file: !1330, line: 241, baseType: !24, size: 32, offset: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !1331, file: !1330, line: 244, baseType: !24, size: 32, offset: 96)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !1331, file: !1330, line: 247, baseType: !24, size: 32, offset: 128)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !1331, file: !1330, line: 250, baseType: !24, size: 32, offset: 160)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !1331, file: !1330, line: 253, baseType: !24, size: 32, offset: 192)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !1331, file: !1330, line: 256, baseType: !1341, size: 96, offset: 224)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !1342, line: 59, baseType: !1343)
!1342 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "3e0cb02f236e8f5a4c479e8d7b418957")
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1342, line: 49, size: 96, flags: DIFlagTypePassByValue, elements: !1344, identifier: "_ZTS18RCC_PLLInitTypeDef")
!1344 = !{!1345, !1346, !1347}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !1343, file: !1342, line: 51, baseType: !24, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !1343, file: !1342, line: 54, baseType: !24, size: 32, offset: 32)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !1343, file: !1342, line: 57, baseType: !24, size: 32, offset: 64)
!1348 = !DILocalVariable(name: "RCC_ClkInitStruct", scope: !1326, file: !3, line: 71, type: !1349)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !1342, line: 80, baseType: !1350)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1342, line: 64, size: 160, flags: DIFlagTypePassByValue, elements: !1351, identifier: "_ZTS18RCC_ClkInitTypeDef")
!1351 = !{!1352, !1353, !1354, !1355, !1356}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !1350, file: !1342, line: 66, baseType: !24, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !1350, file: !1342, line: 69, baseType: !24, size: 32, offset: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !1350, file: !1342, line: 72, baseType: !24, size: 32, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !1350, file: !1342, line: 75, baseType: !24, size: 32, offset: 96)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !1350, file: !1342, line: 78, baseType: !24, size: 32, offset: 128)
!1357 = !DILocation(line: 70, column: 5, scope: !1326)
!1358 = !DILocation(line: 70, column: 24, scope: !1326)
!1359 = !DILocation(line: 71, column: 5, scope: !1326)
!1360 = !DILocation(line: 71, column: 24, scope: !1326)
!1361 = !DILocation(line: 75, column: 23, scope: !1326)
!1362 = !DILocation(line: 75, column: 38, scope: !1326)
!1363 = !{!1364, !1365, i64 0}
!1364 = !{!"_ZTS18RCC_OscInitTypeDef", !1365, i64 0, !1365, i64 4, !1365, i64 8, !1365, i64 12, !1365, i64 16, !1365, i64 20, !1365, i64 24, !1366, i64 28}
!1365 = !{!"int", !1320, i64 0}
!1366 = !{!"_ZTS18RCC_PLLInitTypeDef", !1365, i64 0, !1365, i64 4, !1365, i64 8}
!1367 = !DILocation(line: 76, column: 23, scope: !1326)
!1368 = !DILocation(line: 76, column: 32, scope: !1326)
!1369 = !{!1364, !1365, i64 16}
!1370 = !DILocation(line: 77, column: 23, scope: !1326)
!1371 = !DILocation(line: 77, column: 43, scope: !1326)
!1372 = !{!1364, !1365, i64 20}
!1373 = !DILocation(line: 78, column: 27, scope: !1326)
!1374 = !DILocation(line: 78, column: 36, scope: !1326)
!1375 = !{!1364, !1365, i64 28}
!1376 = !DILocation(line: 79, column: 27, scope: !1326)
!1377 = !DILocation(line: 79, column: 37, scope: !1326)
!1378 = !{!1364, !1365, i64 32}
!1379 = !DILocation(line: 80, column: 27, scope: !1326)
!1380 = !DILocation(line: 80, column: 34, scope: !1326)
!1381 = !{!1364, !1365, i64 36}
!1382 = !DILocation(line: 81, column: 5, scope: !1326)
!1383 = !DILocation(line: 85, column: 23, scope: !1326)
!1384 = !DILocation(line: 86, column: 9, scope: !1326)
!1385 = !{!1386, !1365, i64 0}
!1386 = !{!"_ZTS18RCC_ClkInitTypeDef", !1365, i64 0, !1365, i64 4, !1365, i64 8, !1365, i64 12, !1365, i64 16}
!1387 = !DILocation(line: 87, column: 23, scope: !1326)
!1388 = !DILocation(line: 87, column: 36, scope: !1326)
!1389 = !{!1386, !1365, i64 4}
!1390 = !DILocation(line: 88, column: 23, scope: !1326)
!1391 = !DILocation(line: 88, column: 37, scope: !1326)
!1392 = !{!1386, !1365, i64 8}
!1393 = !DILocation(line: 89, column: 23, scope: !1326)
!1394 = !DILocation(line: 89, column: 38, scope: !1326)
!1395 = !{!1386, !1365, i64 12}
!1396 = !DILocation(line: 90, column: 23, scope: !1326)
!1397 = !DILocation(line: 90, column: 38, scope: !1326)
!1398 = !{!1386, !1365, i64 16}
!1399 = !DILocation(line: 92, column: 5, scope: !1326)
!1400 = !DILocation(line: 93, column: 1, scope: !1326)
!1401 = distinct !DISubprogram(name: "SerialTask", linkageName: "_ZN10SerialTaskC2ERN6Cicada14BufferedSerialE", scope: !40, file: !3, line: 19, type: !93, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !92, retainedNodes: !1402)
!1402 = !{!1403, !1404}
!1403 = !DILocalVariable(name: "this", arg: 1, scope: !1401, type: !116, flags: DIFlagArtificial | DIFlagObjectPointer)
!1404 = !DILocalVariable(name: "serial", arg: 2, scope: !1401, file: !3, line: 19, type: !88)
!1405 = !DILocation(line: 0, scope: !1401)
!1406 = !DILocation(line: 19, column: 67, scope: !1401)
!1407 = !DILocation(line: 19, column: 5, scope: !1401)
!1408 = !{!1409, !1409, i64 0}
!1409 = !{!"vtable pointer", !1321, i64 0}
!1410 = !DILocation(line: 19, column: 42, scope: !1401)
!1411 = !DILocation(line: 19, column: 60, scope: !1401)
!1412 = !{!1413, !1365, i64 24}
!1413 = !{!"_ZTS10SerialTask", !1319, i64 20, !1365, i64 24}
!1414 = !DILocation(line: 19, column: 68, scope: !1401)
!1415 = distinct !DISubprogram(name: "~Task", linkageName: "_ZN6Cicada4TaskD2Ev", scope: !43, file: !44, line: 198, type: !63, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !62, retainedNodes: !1416)
!1416 = !{!1417}
!1417 = !DILocalVariable(name: "this", arg: 1, scope: !1415, type: !947, flags: DIFlagArtificial | DIFlagObjectPointer)
!1418 = !DILocation(line: 0, scope: !1415)
!1419 = !DILocation(line: 198, column: 22, scope: !1415)
!1420 = distinct !DISubprogram(name: "Task", linkageName: "_ZN6Cicada4TaskC2Et", scope: !43, file: !44, line: 196, type: !59, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !58, retainedNodes: !1421)
!1421 = !{!1422, !1423}
!1422 = !DILocalVariable(name: "this", arg: 1, scope: !1420, type: !947, flags: DIFlagArtificial | DIFlagObjectPointer)
!1423 = !DILocalVariable(name: "initialDelay", arg: 2, scope: !1420, file: !44, line: 196, type: !37)
!1424 = !DILocation(line: 0, scope: !1420)
!1425 = !DILocation(line: 196, column: 73, scope: !1420)
!1426 = !DILocation(line: 196, column: 39, scope: !1420)
!1427 = !{!1428, !1429, i64 4}
!1428 = !{!"_ZTSN6Cicada4TaskE", !1429, i64 4, !1365, i64 8, !1430, i64 12, !1365, i64 16}
!1429 = !{!"short", !1320, i64 0}
!1430 = !{!"bool", !1320, i64 0}
!1431 = !DILocation(line: 285, column: 10, scope: !1420)
!1432 = !{!1428, !1430, i64 12}
!1433 = !DILocation(line: 196, column: 61, scope: !1420)
!1434 = !{!1428, !1365, i64 16}
!1435 = !DILocation(line: 196, column: 74, scope: !1420)
!1436 = distinct !DISubprogram(name: "~SerialTask", linkageName: "_ZN10SerialTaskD0Ev", scope: !40, file: !3, line: 16, type: !97, scopeLine: 16, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !1437, retainedNodes: !1438)
!1437 = !DISubprogram(name: "~SerialTask", scope: !40, type: !97, containingType: !40, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!1438 = !{!1439}
!1439 = !DILocalVariable(name: "this", arg: 1, scope: !1436, type: !116, flags: DIFlagArtificial | DIFlagObjectPointer)
!1440 = !DILocation(line: 0, scope: !1436)
!1441 = !DILocation(line: 16, column: 7, scope: !1436)
!1442 = !DILocation(line: 0, scope: !113)
!1443 = !DILocation(line: 23, column: 9, scope: !113)
!1444 = !{!1320, !1320, i64 0}
!1445 = distinct !{!1445, !1446, !1449, !1450, !1451}
!1446 = !DILocation(line: 35, column: 9, scope: !1447)
!1447 = distinct !DILexicalBlock(scope: !1448, file: !3, line: 35, column: 9)
!1448 = distinct !DILexicalBlock(scope: !113, file: !3, line: 23, column: 9)
!1449 = !DILocation(line: 38, column: 9, scope: !1447)
!1450 = !{!"llvm.loop.mustprogress"}
!1451 = !{!"llvm.loop.unroll.disable"}
!1452 = !DILocation(line: 25, column: 14, scope: !1453)
!1453 = distinct !DILexicalBlock(scope: !1448, file: !3, line: 25, column: 13)
!1454 = !{!1413, !1319, i64 20}
!1455 = !DILocation(line: 25, column: 23, scope: !1453)
!1456 = !DILocation(line: 29, column: 14, scope: !1457)
!1457 = distinct !DILexicalBlock(scope: !1448, file: !3, line: 29, column: 13)
!1458 = !DILocation(line: 29, column: 23, scope: !1457)
!1459 = !DILocation(line: 33, column: 9, scope: !1448)
!1460 = !DILocation(line: 36, column: 13, scope: !1461)
!1461 = distinct !DILexicalBlock(scope: !1462, file: !3, line: 35, column: 18)
!1462 = distinct !DILexicalBlock(scope: !1447, file: !3, line: 35, column: 9)
!1463 = !DILocation(line: 37, column: 13, scope: !1461)
!1464 = !DILocation(line: 0, scope: !1448)
!1465 = !DILocation(line: 43, column: 5, scope: !113)
!1466 = distinct !DISubprogram(name: "setDelay", linkageName: "_ZN6Cicada4Task8setDelayEt", scope: !43, file: !44, line: 212, type: !59, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !70, retainedNodes: !1467)
!1467 = !{!1468, !1469}
!1468 = !DILocalVariable(name: "this", arg: 1, scope: !1466, type: !947, flags: DIFlagArtificial | DIFlagObjectPointer)
!1469 = !DILocalVariable(name: "delay", arg: 2, scope: !1466, file: !44, line: 212, type: !37)
!1470 = !DILocation(line: 0, scope: !1466)
!1471 = !DILocation(line: 214, column: 9, scope: !1466)
!1472 = !DILocation(line: 214, column: 16, scope: !1466)
!1473 = !DILocation(line: 215, column: 5, scope: !1466)
!1474 = distinct !DISubprogram(name: "~Task", linkageName: "_ZN6Cicada4TaskD0Ev", scope: !43, file: !44, line: 198, type: !63, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, declaration: !62, retainedNodes: !1475)
!1475 = !{!1476}
!1476 = !DILocalVariable(name: "this", arg: 1, scope: !1474, type: !947, flags: DIFlagArtificial | DIFlagObjectPointer)
!1477 = !DILocation(line: 0, scope: !1474)
!1478 = !DILocation(line: 198, column: 21, scope: !1474)
!1479 = distinct !DISubprogram(name: "SysTick_Handler", scope: !3, file: !3, line: 97, type: !4, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !6, retainedNodes: !283)
!1480 = !DILocation(line: 99, column: 5, scope: !1479)
!1481 = !DILocation(line: 100, column: 1, scope: !1479)
!1482 = !DILocation(line: 104, column: 5, scope: !2)
!1483 = !{!"branch_weights", i32 1, i32 1048575}
!1484 = !DILocation(line: 104, column: 34, scope: !2)
!1485 = !DILocation(line: 105, column: 5, scope: !2)
!1486 = !DILocation(line: 105, column: 15, scope: !2)
!1487 = !DILocation(line: 106, column: 1, scope: !2)
!1488 = !DILocation(line: 0, scope: !102)
!1489 = !DILocation(line: 111, column: 10, scope: !1490)
!1490 = distinct !DILexicalBlock(scope: !102, file: !3, line: 111, column: 9)
!1491 = !DILocation(line: 111, column: 9, scope: !102)
!1492 = !DILocation(line: 112, column: 18, scope: !1493)
!1493 = distinct !DILexicalBlock(scope: !1490, file: !3, line: 111, column: 18)
!1494 = !DILocation(line: 112, column: 16, scope: !1493)
!1495 = !DILocation(line: 113, column: 5, scope: !1493)
!1496 = !DILocation(line: 114, column: 5, scope: !102)
!1497 = !DILocation(line: 114, column: 13, scope: !102)
!1498 = !DILocation(line: 115, column: 1, scope: !102)
!1499 = distinct !DISubprogram(name: "printf_", scope: !287, file: !287, line: 720, type: !1500, scopeLine: 721, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !1502)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!52, !230, null}
!1502 = !{!1503, !1504, !1512, !1516}
!1503 = !DILocalVariable(name: "format", arg: 1, scope: !1499, file: !287, line: 720, type: !230)
!1504 = !DILocalVariable(name: "va", scope: !1499, file: !287, line: 722, type: !1505)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1506, line: 14, baseType: !1507)
!1506 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "", checksumkind: CSK_MD5, checksum: "4de3cbd931b589d291e5c39387aecf82")
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1508, baseType: !1509)
!1508 = !DIFile(filename: "../dep/printf/src/printf.c", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build")
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !1510)
!1510 = !{!1511}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !1509, file: !1508, line: 722, baseType: !203, size: 32)
!1512 = !DILocalVariable(name: "buffer", scope: !1499, file: !287, line: 724, type: !1513)
!1513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 8, elements: !1514)
!1514 = !{!1515}
!1515 = !DISubrange(count: 1)
!1516 = !DILocalVariable(name: "ret", scope: !1499, file: !287, line: 725, type: !1517)
!1517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !52)
!1518 = !DILocation(line: 0, scope: !1499)
!1519 = !DILocation(line: 722, column: 3, scope: !1499)
!1520 = !DILocation(line: 722, column: 11, scope: !1499)
!1521 = !DILocation(line: 723, column: 3, scope: !1499)
!1522 = !DILocation(line: 724, column: 3, scope: !1499)
!1523 = !DILocation(line: 724, column: 8, scope: !1499)
!1524 = !DILocation(line: 725, column: 19, scope: !1499)
!1525 = !DILocation(line: 726, column: 3, scope: !1499)
!1526 = !DILocation(line: 728, column: 1, scope: !1499)
!1527 = !DILocation(line: 727, column: 3, scope: !1499)
!1528 = distinct !DISubprogram(name: "_out_char", scope: !287, file: !287, line: 124, type: !294, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !1529)
!1529 = !{!1530, !1531, !1532, !1533}
!1530 = !DILocalVariable(name: "character", arg: 1, scope: !1528, file: !287, line: 124, type: !105)
!1531 = !DILocalVariable(name: "buffer", arg: 2, scope: !1528, file: !287, line: 124, type: !203)
!1532 = !DILocalVariable(name: "idx", arg: 3, scope: !1528, file: !287, line: 124, type: !290)
!1533 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1528, file: !287, line: 124, type: !290)
!1534 = !DILocation(line: 0, scope: !1528)
!1535 = !DILocation(line: 127, column: 7, scope: !1536)
!1536 = distinct !DILexicalBlock(scope: !1528, file: !287, line: 127, column: 7)
!1537 = !DILocation(line: 127, column: 7, scope: !1528)
!1538 = !DILocation(line: 128, column: 5, scope: !1539)
!1539 = distinct !DILexicalBlock(scope: !1536, file: !287, line: 127, column: 18)
!1540 = !DILocation(line: 129, column: 3, scope: !1539)
!1541 = !DILocation(line: 130, column: 1, scope: !1528)
!1542 = distinct !DISubprogram(name: "_vsnprintf", scope: !287, file: !287, line: 447, type: !1543, scopeLine: 448, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !1545)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!52, !292, !229, !320, !230, !1505}
!1545 = !{!1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1561, !1567, !1570, !1576, !1581, !1583, !1589, !1591, !1593, !1594}
!1546 = !DILocalVariable(name: "out", arg: 1, scope: !1542, file: !287, line: 447, type: !292)
!1547 = !DILocalVariable(name: "buffer", arg: 2, scope: !1542, file: !287, line: 447, type: !229)
!1548 = !DILocalVariable(name: "maxlen", arg: 3, scope: !1542, file: !287, line: 447, type: !320)
!1549 = !DILocalVariable(name: "format", arg: 4, scope: !1542, file: !287, line: 447, type: !230)
!1550 = !DILocalVariable(name: "va", arg: 5, scope: !1542, file: !287, line: 447, type: !1505)
!1551 = !DILocalVariable(name: "flags", scope: !1542, file: !287, line: 449, type: !10)
!1552 = !DILocalVariable(name: "width", scope: !1542, file: !287, line: 449, type: !10)
!1553 = !DILocalVariable(name: "precision", scope: !1542, file: !287, line: 449, type: !10)
!1554 = !DILocalVariable(name: "n", scope: !1542, file: !287, line: 449, type: !10)
!1555 = !DILocalVariable(name: "idx", scope: !1542, file: !287, line: 450, type: !290)
!1556 = !DILocalVariable(name: "w", scope: !1557, file: !287, line: 490, type: !1517)
!1557 = distinct !DILexicalBlock(scope: !1558, file: !287, line: 489, column: 30)
!1558 = distinct !DILexicalBlock(scope: !1559, file: !287, line: 489, column: 14)
!1559 = distinct !DILexicalBlock(scope: !1560, file: !287, line: 486, column: 9)
!1560 = distinct !DILexicalBlock(scope: !1542, file: !287, line: 458, column: 3)
!1561 = !DILocalVariable(name: "prec", scope: !1562, file: !287, line: 510, type: !1517)
!1562 = distinct !DILexicalBlock(scope: !1563, file: !287, line: 509, column: 32)
!1563 = distinct !DILexicalBlock(scope: !1564, file: !287, line: 509, column: 16)
!1564 = distinct !DILexicalBlock(scope: !1565, file: !287, line: 506, column: 11)
!1565 = distinct !DILexicalBlock(scope: !1566, file: !287, line: 503, column: 25)
!1566 = distinct !DILexicalBlock(scope: !1560, file: !287, line: 503, column: 9)
!1567 = !DILocalVariable(name: "base", scope: !1568, file: !287, line: 562, type: !10)
!1568 = distinct !DILexicalBlock(scope: !1569, file: !287, line: 560, column: 18)
!1569 = distinct !DILexicalBlock(scope: !1560, file: !287, line: 553, column: 22)
!1570 = !DILocalVariable(name: "value", scope: !1571, file: !287, line: 596, type: !1575)
!1571 = distinct !DILexicalBlock(scope: !1572, file: !287, line: 594, column: 40)
!1572 = distinct !DILexicalBlock(scope: !1573, file: !287, line: 594, column: 15)
!1573 = distinct !DILexicalBlock(scope: !1574, file: !287, line: 592, column: 51)
!1574 = distinct !DILexicalBlock(scope: !1568, file: !287, line: 592, column: 13)
!1575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!1576 = !DILocalVariable(name: "value", scope: !1577, file: !287, line: 601, type: !1579)
!1577 = distinct !DILexicalBlock(scope: !1578, file: !287, line: 600, column: 40)
!1578 = distinct !DILexicalBlock(scope: !1572, file: !287, line: 600, column: 20)
!1579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1580)
!1580 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1581 = !DILocalVariable(name: "value", scope: !1582, file: !287, line: 605, type: !1517)
!1582 = distinct !DILexicalBlock(scope: !1578, file: !287, line: 604, column: 16)
!1583 = !DILocalVariable(name: "value", scope: !1584, file: !287, line: 620, type: !1588)
!1584 = distinct !DILexicalBlock(scope: !1585, file: !287, line: 619, column: 16)
!1585 = distinct !DILexicalBlock(scope: !1586, file: !287, line: 616, column: 20)
!1586 = distinct !DILexicalBlock(scope: !1587, file: !287, line: 611, column: 15)
!1587 = distinct !DILexicalBlock(scope: !1574, file: !287, line: 609, column: 14)
!1588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!1589 = !DILocalVariable(name: "l", scope: !1590, file: !287, line: 635, type: !10)
!1590 = distinct !DILexicalBlock(scope: !1569, file: !287, line: 634, column: 18)
!1591 = !DILocalVariable(name: "p", scope: !1592, file: !287, line: 655, type: !230)
!1592 = distinct !DILexicalBlock(scope: !1569, file: !287, line: 654, column: 18)
!1593 = !DILocalVariable(name: "l", scope: !1592, file: !287, line: 656, type: !10)
!1594 = !DILocalVariable(name: "is_ll", scope: !1595, file: !287, line: 684, type: !1596)
!1595 = distinct !DILexicalBlock(scope: !1569, file: !287, line: 680, column: 18)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !330)
!1597 = !DILocation(line: 0, scope: !1542)
!1598 = !{!1599, !1599, i64 0}
!1599 = !{!"any pointer", !1600, i64 0}
!1600 = !{!"omnipotent char", !1601, i64 0}
!1601 = !{!"Simple C/C++ TBAA"}
!1602 = !DILocation(line: 452, column: 8, scope: !1603)
!1603 = distinct !DILexicalBlock(scope: !1542, file: !287, line: 452, column: 7)
!1604 = !DILocation(line: 452, column: 7, scope: !1542)
!1605 = !DILocation(line: 457, column: 3, scope: !1542)
!1606 = !DILocation(line: 457, column: 11, scope: !1542)
!1607 = !DILocation(line: 457, column: 10, scope: !1542)
!1608 = !{!1600, !1600, i64 0}
!1609 = !DILocation(line: 462, column: 31, scope: !1610)
!1610 = distinct !DILexicalBlock(scope: !1611, file: !287, line: 460, column: 25)
!1611 = distinct !DILexicalBlock(scope: !1560, file: !287, line: 460, column: 9)
!1612 = !DILocation(line: 462, column: 7, scope: !1610)
!1613 = !{void (i8, i8*, i32, i32)* @_out_buffer, void (i8, i8*, i32, i32)* @_out_char, void (i8, i8*, i32, i32)* @_out_fct, void (i8, i8*, i32, i32)* @_out_null}
!1614 = !DILocation(line: 463, column: 13, scope: !1610)
!1615 = !DILocation(line: 464, column: 7, scope: !1610)
!1616 = distinct !{!1616, !1605, !1617, !1450, !1451}
!1617 = !DILocation(line: 708, column: 3, scope: !1542)
!1618 = !DILocation(line: 468, column: 13, scope: !1619)
!1619 = distinct !DILexicalBlock(scope: !1611, file: !287, line: 466, column: 10)
!1620 = !DILocation(line: 473, column: 5, scope: !1560)
!1621 = !DILocation(line: 472, column: 11, scope: !1560)
!1622 = !DILocation(line: 474, column: 16, scope: !1623)
!1623 = distinct !DILexicalBlock(scope: !1560, file: !287, line: 473, column: 8)
!1624 = !DILocation(line: 474, column: 15, scope: !1623)
!1625 = !DILocation(line: 474, column: 7, scope: !1623)
!1626 = !DILocation(line: 475, column: 25, scope: !1627)
!1627 = distinct !DILexicalBlock(scope: !1623, file: !287, line: 474, column: 24)
!1628 = !DILocation(line: 475, column: 49, scope: !1627)
!1629 = !DILocation(line: 475, column: 61, scope: !1627)
!1630 = !DILocation(line: 476, column: 25, scope: !1627)
!1631 = !DILocation(line: 476, column: 49, scope: !1627)
!1632 = !DILocation(line: 476, column: 61, scope: !1627)
!1633 = !DILocation(line: 477, column: 25, scope: !1627)
!1634 = !DILocation(line: 477, column: 49, scope: !1627)
!1635 = !DILocation(line: 477, column: 61, scope: !1627)
!1636 = !DILocation(line: 478, column: 25, scope: !1627)
!1637 = !DILocation(line: 478, column: 49, scope: !1627)
!1638 = !DILocation(line: 478, column: 61, scope: !1627)
!1639 = !DILocation(line: 479, column: 25, scope: !1627)
!1640 = !DILocation(line: 479, column: 49, scope: !1627)
!1641 = !DILocation(line: 479, column: 61, scope: !1627)
!1642 = !DILocation(line: 0, scope: !1627)
!1643 = !DILocation(line: 0, scope: !1560)
!1644 = !DILocation(line: 482, column: 5, scope: !1623)
!1645 = distinct !{!1645, !1620, !1646, !1450, !1451}
!1646 = !DILocation(line: 482, column: 15, scope: !1560)
!1647 = !DILocation(line: 486, column: 20, scope: !1559)
!1648 = !DILocation(line: 486, column: 19, scope: !1559)
!1649 = !DILocation(line: 486, column: 9, scope: !1559)
!1650 = !DILocation(line: 486, column: 9, scope: !1560)
!1651 = !DILocation(line: 487, column: 15, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1559, file: !287, line: 486, column: 29)
!1653 = !DILocation(line: 488, column: 5, scope: !1652)
!1654 = !DILocation(line: 489, column: 22, scope: !1558)
!1655 = !DILocation(line: 489, column: 14, scope: !1559)
!1656 = !DILocation(line: 490, column: 21, scope: !1557)
!1657 = !DILocation(line: 0, scope: !1557)
!1658 = !DILocation(line: 491, column: 13, scope: !1659)
!1659 = distinct !DILexicalBlock(scope: !1557, file: !287, line: 491, column: 11)
!1660 = !DILocation(line: 491, column: 11, scope: !1557)
!1661 = !DILocation(line: 498, column: 13, scope: !1557)
!1662 = !DILocation(line: 499, column: 5, scope: !1557)
!1663 = !DILocation(line: 503, column: 10, scope: !1566)
!1664 = !DILocation(line: 503, column: 9, scope: !1566)
!1665 = !DILocation(line: 503, column: 17, scope: !1566)
!1666 = !DILocation(line: 503, column: 9, scope: !1560)
!1667 = !DILocation(line: 504, column: 13, scope: !1565)
!1668 = !DILocation(line: 505, column: 13, scope: !1565)
!1669 = !DILocation(line: 506, column: 21, scope: !1564)
!1670 = !DILocation(line: 506, column: 11, scope: !1564)
!1671 = !DILocation(line: 506, column: 11, scope: !1565)
!1672 = !DILocation(line: 507, column: 21, scope: !1673)
!1673 = distinct !DILexicalBlock(scope: !1564, file: !287, line: 506, column: 31)
!1674 = !DILocation(line: 508, column: 7, scope: !1673)
!1675 = !DILocation(line: 509, column: 24, scope: !1563)
!1676 = !DILocation(line: 509, column: 16, scope: !1564)
!1677 = !DILocation(line: 510, column: 31, scope: !1562)
!1678 = !DILocation(line: 0, scope: !1562)
!1679 = !DILocation(line: 511, column: 26, scope: !1562)
!1680 = !DILocation(line: 511, column: 21, scope: !1562)
!1681 = !DILocation(line: 512, column: 15, scope: !1562)
!1682 = !DILocation(line: 513, column: 7, scope: !1562)
!1683 = !DILocation(line: 517, column: 14, scope: !1560)
!1684 = !DILocation(line: 517, column: 13, scope: !1560)
!1685 = !DILocation(line: 517, column: 5, scope: !1560)
!1686 = !DILocation(line: 519, column: 15, scope: !1687)
!1687 = distinct !DILexicalBlock(scope: !1560, file: !287, line: 517, column: 22)
!1688 = !DILocation(line: 520, column: 15, scope: !1687)
!1689 = !DILocation(line: 521, column: 13, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !1687, file: !287, line: 521, column: 13)
!1691 = !DILocation(line: 521, column: 21, scope: !1690)
!1692 = !DILocation(line: 521, column: 13, scope: !1687)
!1693 = !DILocation(line: 522, column: 17, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !1690, file: !287, line: 521, column: 29)
!1695 = !DILocation(line: 523, column: 17, scope: !1694)
!1696 = !DILocation(line: 524, column: 9, scope: !1694)
!1697 = !DILocation(line: 527, column: 15, scope: !1687)
!1698 = !DILocation(line: 528, column: 15, scope: !1687)
!1699 = !DILocation(line: 529, column: 13, scope: !1700)
!1700 = distinct !DILexicalBlock(scope: !1687, file: !287, line: 529, column: 13)
!1701 = !DILocation(line: 529, column: 21, scope: !1700)
!1702 = !DILocation(line: 529, column: 13, scope: !1687)
!1703 = !DILocation(line: 530, column: 17, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !1700, file: !287, line: 529, column: 29)
!1705 = !DILocation(line: 531, column: 17, scope: !1704)
!1706 = !DILocation(line: 532, column: 9, scope: !1704)
!1707 = !DILocation(line: 536, column: 15, scope: !1687)
!1708 = !DILocation(line: 537, column: 15, scope: !1687)
!1709 = !DILocation(line: 538, column: 9, scope: !1687)
!1710 = !DILocation(line: 541, column: 15, scope: !1687)
!1711 = !DILocation(line: 542, column: 15, scope: !1687)
!1712 = !DILocation(line: 543, column: 9, scope: !1687)
!1713 = !DILocation(line: 545, column: 15, scope: !1687)
!1714 = !DILocation(line: 546, column: 15, scope: !1687)
!1715 = !DILocation(line: 547, column: 9, scope: !1687)
!1716 = !DILocation(line: 553, column: 14, scope: !1560)
!1717 = !DILocation(line: 553, column: 13, scope: !1560)
!1718 = !DILocation(line: 553, column: 5, scope: !1560)
!1719 = !DILocation(line: 0, scope: !1568)
!1720 = !DILocation(line: 568, column: 9, scope: !1721)
!1721 = distinct !DILexicalBlock(scope: !1722, file: !287, line: 566, column: 34)
!1722 = distinct !DILexicalBlock(scope: !1723, file: !287, line: 566, column: 18)
!1723 = distinct !DILexicalBlock(scope: !1568, file: !287, line: 563, column: 13)
!1724 = !DILocation(line: 571, column: 9, scope: !1725)
!1725 = distinct !DILexicalBlock(scope: !1726, file: !287, line: 569, column: 34)
!1726 = distinct !DILexicalBlock(scope: !1722, file: !287, line: 569, column: 18)
!1727 = !DILocation(line: 574, column: 17, scope: !1728)
!1728 = distinct !DILexicalBlock(scope: !1726, file: !287, line: 572, column: 14)
!1729 = !DILocation(line: 0, scope: !1723)
!1730 = !DILocation(line: 577, column: 21, scope: !1731)
!1731 = distinct !DILexicalBlock(scope: !1568, file: !287, line: 577, column: 13)
!1732 = !DILocation(line: 577, column: 13, scope: !1568)
!1733 = !DILocation(line: 582, column: 30, scope: !1734)
!1734 = distinct !DILexicalBlock(scope: !1568, file: !287, line: 582, column: 13)
!1735 = !DILocation(line: 583, column: 17, scope: !1736)
!1736 = distinct !DILexicalBlock(scope: !1734, file: !287, line: 582, column: 51)
!1737 = !DILocation(line: 584, column: 9, scope: !1736)
!1738 = !DILocation(line: 587, column: 19, scope: !1739)
!1739 = distinct !DILexicalBlock(scope: !1568, file: !287, line: 587, column: 13)
!1740 = !DILocation(line: 587, column: 13, scope: !1568)
!1741 = !DILocation(line: 592, column: 30, scope: !1574)
!1742 = !DILocation(line: 594, column: 21, scope: !1572)
!1743 = !DILocation(line: 594, column: 15, scope: !1573)
!1744 = !DILocation(line: 596, column: 37, scope: !1571)
!1745 = !DILocation(line: 0, scope: !1571)
!1746 = !DILocation(line: 597, column: 82, scope: !1571)
!1747 = !DILocation(line: 597, column: 120, scope: !1571)
!1748 = !DILocation(line: 597, column: 125, scope: !1571)
!1749 = !DILocation(line: 597, column: 19, scope: !1571)
!1750 = !DILocation(line: 599, column: 11, scope: !1571)
!1751 = !DILocation(line: 600, column: 26, scope: !1578)
!1752 = !DILocation(line: 600, column: 20, scope: !1572)
!1753 = !DILocation(line: 601, column: 32, scope: !1577)
!1754 = !DILocation(line: 0, scope: !1577)
!1755 = !DILocation(line: 602, column: 72, scope: !1577)
!1756 = !DILocation(line: 602, column: 110, scope: !1577)
!1757 = !DILocation(line: 602, column: 19, scope: !1577)
!1758 = !DILocation(line: 603, column: 11, scope: !1577)
!1759 = !DILocation(line: 605, column: 38, scope: !1582)
!1760 = !DILocation(line: 605, column: 31, scope: !1582)
!1761 = !DILocation(line: 605, column: 60, scope: !1582)
!1762 = !DILocation(line: 605, column: 54, scope: !1582)
!1763 = !DILocation(line: 605, column: 85, scope: !1582)
!1764 = !DILocation(line: 0, scope: !1582)
!1765 = !DILocation(line: 605, column: 78, scope: !1582)
!1766 = !DILocation(line: 605, column: 102, scope: !1582)
!1767 = !DILocation(line: 606, column: 71, scope: !1582)
!1768 = !DILocation(line: 606, column: 109, scope: !1582)
!1769 = !DILocation(line: 606, column: 19, scope: !1582)
!1770 = !DILocation(line: 611, column: 21, scope: !1586)
!1771 = !DILocation(line: 611, column: 15, scope: !1587)
!1772 = !DILocation(line: 613, column: 61, scope: !1773)
!1773 = distinct !DILexicalBlock(scope: !1586, file: !287, line: 611, column: 40)
!1774 = !DILocation(line: 613, column: 100, scope: !1773)
!1775 = !DILocation(line: 613, column: 19, scope: !1773)
!1776 = !DILocation(line: 615, column: 11, scope: !1773)
!1777 = !DILocation(line: 616, column: 26, scope: !1585)
!1778 = !DILocation(line: 616, column: 20, scope: !1586)
!1779 = !DILocation(line: 617, column: 56, scope: !1780)
!1780 = distinct !DILexicalBlock(scope: !1585, file: !287, line: 616, column: 40)
!1781 = !DILocation(line: 617, column: 19, scope: !1780)
!1782 = !DILocation(line: 618, column: 11, scope: !1780)
!1783 = !DILocation(line: 620, column: 47, scope: !1584)
!1784 = !DILocation(line: 620, column: 40, scope: !1584)
!1785 = !DILocation(line: 620, column: 78, scope: !1584)
!1786 = !DILocation(line: 620, column: 63, scope: !1584)
!1787 = !DILocation(line: 620, column: 112, scope: !1584)
!1788 = !DILocation(line: 0, scope: !1584)
!1789 = !DILocation(line: 620, column: 105, scope: !1584)
!1790 = !DILocation(line: 621, column: 19, scope: !1584)
!1791 = !DILocation(line: 0, scope: !1574)
!1792 = !DILocation(line: 624, column: 15, scope: !1568)
!1793 = !DILocation(line: 630, column: 47, scope: !1569)
!1794 = !DILocation(line: 630, column: 15, scope: !1569)
!1795 = !DILocation(line: 631, column: 15, scope: !1569)
!1796 = !DILocation(line: 632, column: 9, scope: !1569)
!1797 = !DILocation(line: 0, scope: !1590)
!1798 = !DILocation(line: 637, column: 21, scope: !1799)
!1799 = distinct !DILexicalBlock(scope: !1590, file: !287, line: 637, column: 13)
!1800 = !DILocation(line: 637, column: 13, scope: !1590)
!1801 = !DILocation(line: 638, column: 22, scope: !1802)
!1802 = distinct !DILexicalBlock(scope: !1799, file: !287, line: 637, column: 36)
!1803 = !DILocation(line: 638, column: 11, scope: !1802)
!1804 = !DILocation(line: 639, column: 33, scope: !1805)
!1805 = distinct !DILexicalBlock(scope: !1802, file: !287, line: 638, column: 31)
!1806 = !DILocation(line: 639, column: 13, scope: !1805)
!1807 = !DILocation(line: 638, column: 19, scope: !1802)
!1808 = distinct !{!1808, !1803, !1809, !1450, !1451}
!1809 = !DILocation(line: 640, column: 11, scope: !1802)
!1810 = !DILocation(line: 450, column: 10, scope: !1542)
!1811 = !DILocation(line: 643, column: 19, scope: !1590)
!1812 = !DILocation(line: 643, column: 13, scope: !1590)
!1813 = !DILocation(line: 643, column: 47, scope: !1590)
!1814 = !DILocation(line: 643, column: 9, scope: !1590)
!1815 = !DILocation(line: 645, column: 13, scope: !1590)
!1816 = !DILocation(line: 646, column: 19, scope: !1817)
!1817 = distinct !DILexicalBlock(scope: !1818, file: !287, line: 645, column: 33)
!1818 = distinct !DILexicalBlock(scope: !1590, file: !287, line: 645, column: 13)
!1819 = !DILocation(line: 647, column: 33, scope: !1820)
!1820 = distinct !DILexicalBlock(scope: !1817, file: !287, line: 646, column: 31)
!1821 = !DILocation(line: 647, column: 13, scope: !1820)
!1822 = !DILocation(line: 646, column: 22, scope: !1817)
!1823 = !DILocation(line: 646, column: 11, scope: !1817)
!1824 = distinct !{!1824, !1823, !1825, !1450, !1451}
!1825 = !DILocation(line: 648, column: 11, scope: !1817)
!1826 = !DILocation(line: 650, column: 15, scope: !1590)
!1827 = !DILocation(line: 655, column: 25, scope: !1592)
!1828 = !DILocation(line: 0, scope: !1592)
!1829 = !DILocation(line: 656, column: 40, scope: !1592)
!1830 = !DILocation(line: 656, column: 26, scope: !1592)
!1831 = !DILocation(line: 658, column: 19, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !1592, file: !287, line: 658, column: 13)
!1833 = !DILocation(line: 658, column: 13, scope: !1592)
!1834 = !DILocation(line: 661, column: 21, scope: !1835)
!1835 = distinct !DILexicalBlock(scope: !1592, file: !287, line: 661, column: 13)
!1836 = !DILocation(line: 661, column: 13, scope: !1592)
!1837 = !DILocation(line: 662, column: 19, scope: !1838)
!1838 = distinct !DILexicalBlock(scope: !1835, file: !287, line: 661, column: 36)
!1839 = !DILocation(line: 662, column: 22, scope: !1838)
!1840 = !DILocation(line: 662, column: 11, scope: !1838)
!1841 = !DILocation(line: 663, column: 33, scope: !1842)
!1842 = distinct !DILexicalBlock(scope: !1838, file: !287, line: 662, column: 31)
!1843 = !DILocation(line: 663, column: 13, scope: !1842)
!1844 = distinct !{!1844, !1840, !1845, !1450, !1451}
!1845 = !DILocation(line: 664, column: 11, scope: !1838)
!1846 = !DILocation(line: 667, column: 17, scope: !1592)
!1847 = !DILocation(line: 667, column: 20, scope: !1592)
!1848 = !DILocation(line: 667, column: 26, scope: !1592)
!1849 = !DILocation(line: 667, column: 57, scope: !1592)
!1850 = !DILocation(line: 667, column: 69, scope: !1592)
!1851 = !DILocation(line: 667, column: 9, scope: !1592)
!1852 = !DILocation(line: 668, column: 18, scope: !1853)
!1853 = distinct !DILexicalBlock(scope: !1592, file: !287, line: 667, column: 74)
!1854 = !DILocation(line: 668, column: 34, scope: !1853)
!1855 = !DILocation(line: 668, column: 11, scope: !1853)
!1856 = distinct !{!1856, !1851, !1857, !1450, !1451}
!1857 = !DILocation(line: 669, column: 9, scope: !1592)
!1858 = !DILocation(line: 671, column: 13, scope: !1592)
!1859 = !DILocation(line: 672, column: 19, scope: !1860)
!1860 = distinct !DILexicalBlock(scope: !1861, file: !287, line: 671, column: 33)
!1861 = distinct !DILexicalBlock(scope: !1592, file: !287, line: 671, column: 13)
!1862 = !DILocation(line: 673, column: 33, scope: !1863)
!1863 = distinct !DILexicalBlock(scope: !1860, file: !287, line: 672, column: 31)
!1864 = !DILocation(line: 673, column: 13, scope: !1863)
!1865 = !DILocation(line: 672, column: 22, scope: !1860)
!1866 = !DILocation(line: 672, column: 11, scope: !1860)
!1867 = distinct !{!1867, !1866, !1868, !1450, !1451}
!1868 = !DILocation(line: 674, column: 11, scope: !1860)
!1869 = !DILocation(line: 676, column: 15, scope: !1592)
!1870 = !DILocation(line: 682, column: 15, scope: !1595)
!1871 = !DILocation(line: 0, scope: !1595)
!1872 = !DILocation(line: 690, column: 81, scope: !1873)
!1873 = distinct !DILexicalBlock(scope: !1874, file: !287, line: 688, column: 14)
!1874 = distinct !DILexicalBlock(scope: !1595, file: !287, line: 685, column: 13)
!1875 = !DILocation(line: 690, column: 70, scope: !1873)
!1876 = !DILocation(line: 690, column: 17, scope: !1873)
!1877 = !DILocation(line: 694, column: 15, scope: !1595)
!1878 = !DILocation(line: 699, column: 29, scope: !1569)
!1879 = !DILocation(line: 699, column: 9, scope: !1569)
!1880 = !DILocation(line: 700, column: 15, scope: !1569)
!1881 = !DILocation(line: 701, column: 9, scope: !1569)
!1882 = !DILocation(line: 704, column: 33, scope: !1569)
!1883 = !DILocation(line: 704, column: 9, scope: !1569)
!1884 = !DILocation(line: 705, column: 15, scope: !1569)
!1885 = !DILocation(line: 706, column: 9, scope: !1569)
!1886 = !DILocation(line: 711, column: 28, scope: !1542)
!1887 = !DILocation(line: 711, column: 24, scope: !1542)
!1888 = !DILocation(line: 711, column: 3, scope: !1542)
!1889 = !DILocation(line: 714, column: 3, scope: !1542)
!1890 = distinct !DISubprogram(name: "_out_null", scope: !287, file: !287, line: 117, type: !294, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !1891)
!1891 = !{!1892, !1893, !1894, !1895}
!1892 = !DILocalVariable(name: "character", arg: 1, scope: !1890, file: !287, line: 117, type: !105)
!1893 = !DILocalVariable(name: "buffer", arg: 2, scope: !1890, file: !287, line: 117, type: !203)
!1894 = !DILocalVariable(name: "idx", arg: 3, scope: !1890, file: !287, line: 117, type: !290)
!1895 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1890, file: !287, line: 117, type: !290)
!1896 = !DILocation(line: 0, scope: !1890)
!1897 = !DILocation(line: 120, column: 1, scope: !1890)
!1898 = distinct !DISubprogram(name: "_out_buffer", scope: !287, file: !287, line: 108, type: !294, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !1899)
!1899 = !{!1900, !1901, !1902, !1903}
!1900 = !DILocalVariable(name: "character", arg: 1, scope: !1898, file: !287, line: 108, type: !105)
!1901 = !DILocalVariable(name: "buffer", arg: 2, scope: !1898, file: !287, line: 108, type: !203)
!1902 = !DILocalVariable(name: "idx", arg: 3, scope: !1898, file: !287, line: 108, type: !290)
!1903 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1898, file: !287, line: 108, type: !290)
!1904 = !DILocation(line: 0, scope: !1898)
!1905 = !DILocation(line: 110, column: 11, scope: !1906)
!1906 = distinct !DILexicalBlock(scope: !1898, file: !287, line: 110, column: 7)
!1907 = !DILocation(line: 110, column: 7, scope: !1898)
!1908 = !DILocation(line: 111, column: 5, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1906, file: !287, line: 110, column: 21)
!1910 = !DILocation(line: 111, column: 26, scope: !1909)
!1911 = !DILocation(line: 112, column: 3, scope: !1909)
!1912 = !DILocation(line: 113, column: 1, scope: !1898)
!1913 = distinct !DISubprogram(name: "_out_fct", scope: !287, file: !287, line: 134, type: !294, scopeLine: 135, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !1914)
!1914 = !{!1915, !1916, !1917, !1918}
!1915 = !DILocalVariable(name: "character", arg: 1, scope: !1913, file: !287, line: 134, type: !105)
!1916 = !DILocalVariable(name: "buffer", arg: 2, scope: !1913, file: !287, line: 134, type: !203)
!1917 = !DILocalVariable(name: "idx", arg: 3, scope: !1913, file: !287, line: 134, type: !290)
!1918 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1913, file: !287, line: 134, type: !290)
!1919 = !DILocation(line: 0, scope: !1913)
!1920 = !DILocation(line: 137, column: 7, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1913, file: !287, line: 137, column: 7)
!1922 = !DILocation(line: 137, column: 7, scope: !1913)
!1923 = !DILocation(line: 139, column: 35, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1921, file: !287, line: 137, column: 18)
!1925 = !{!1926, !1599, i64 0}
!1926 = !{!"", !1599, i64 0, !1599, i64 4}
!1927 = !DILocation(line: 139, column: 80, scope: !1924)
!1928 = !{!1926, !1599, i64 4}
!1929 = !DILocation(line: 139, column: 5, scope: !1924)
!1930 = !DILocation(line: 140, column: 3, scope: !1924)
!1931 = !DILocation(line: 141, column: 1, scope: !1913)
!1932 = distinct !DISubprogram(name: "_is_digit", scope: !287, file: !287, line: 156, type: !1933, scopeLine: 157, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !1935)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{!330, !105}
!1935 = !{!1936}
!1936 = !DILocalVariable(name: "ch", arg: 1, scope: !1932, file: !287, line: 156, type: !105)
!1937 = !DILocation(line: 0, scope: !1932)
!1938 = !DILocation(line: 158, column: 22, scope: !1932)
!1939 = !DILocation(line: 158, column: 3, scope: !1932)
!1940 = distinct !DISubprogram(name: "_atoi", scope: !287, file: !287, line: 163, type: !1941, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !1944)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!10, !1943}
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 32)
!1944 = !{!1945, !1946}
!1945 = !DILocalVariable(name: "str", arg: 1, scope: !1940, file: !287, line: 163, type: !1943)
!1946 = !DILocalVariable(name: "i", scope: !1940, file: !287, line: 165, type: !10)
!1947 = !DILocation(line: 0, scope: !1940)
!1948 = !DILocation(line: 166, column: 21, scope: !1940)
!1949 = !DILocation(line: 166, column: 20, scope: !1940)
!1950 = !DILocation(line: 166, column: 10, scope: !1940)
!1951 = !DILocation(line: 166, column: 3, scope: !1940)
!1952 = !DILocation(line: 167, column: 11, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1940, file: !287, line: 166, column: 28)
!1954 = !DILocation(line: 167, column: 42, scope: !1953)
!1955 = !DILocation(line: 167, column: 34, scope: !1953)
!1956 = !DILocation(line: 167, column: 46, scope: !1953)
!1957 = !DILocation(line: 167, column: 17, scope: !1953)
!1958 = distinct !{!1958, !1951, !1959, !1450, !1451}
!1959 = !DILocation(line: 168, column: 3, scope: !1940)
!1960 = !DILocation(line: 169, column: 3, scope: !1940)
!1961 = distinct !DISubprogram(name: "_ntoa_long_long", scope: !287, file: !287, line: 274, type: !1962, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !1964)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{!290, !292, !229, !290, !290, !171, !330, !171, !10, !10, !10}
!1964 = !{!1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977}
!1965 = !DILocalVariable(name: "out", arg: 1, scope: !1961, file: !287, line: 274, type: !292)
!1966 = !DILocalVariable(name: "buffer", arg: 2, scope: !1961, file: !287, line: 274, type: !229)
!1967 = !DILocalVariable(name: "idx", arg: 3, scope: !1961, file: !287, line: 274, type: !290)
!1968 = !DILocalVariable(name: "maxlen", arg: 4, scope: !1961, file: !287, line: 274, type: !290)
!1969 = !DILocalVariable(name: "value", arg: 5, scope: !1961, file: !287, line: 274, type: !171)
!1970 = !DILocalVariable(name: "negative", arg: 6, scope: !1961, file: !287, line: 274, type: !330)
!1971 = !DILocalVariable(name: "base", arg: 7, scope: !1961, file: !287, line: 274, type: !171)
!1972 = !DILocalVariable(name: "prec", arg: 8, scope: !1961, file: !287, line: 274, type: !10)
!1973 = !DILocalVariable(name: "width", arg: 9, scope: !1961, file: !287, line: 274, type: !10)
!1974 = !DILocalVariable(name: "flags", arg: 10, scope: !1961, file: !287, line: 274, type: !10)
!1975 = !DILocalVariable(name: "buf", scope: !1961, file: !287, line: 276, type: !322)
!1976 = !DILocalVariable(name: "len", scope: !1961, file: !287, line: 277, type: !290)
!1977 = !DILocalVariable(name: "digit", scope: !1978, file: !287, line: 287, type: !231)
!1978 = distinct !DILexicalBlock(scope: !1979, file: !287, line: 286, column: 8)
!1979 = distinct !DILexicalBlock(scope: !1980, file: !287, line: 285, column: 44)
!1980 = distinct !DILexicalBlock(scope: !1961, file: !287, line: 285, column: 7)
!1981 = !DILocation(line: 0, scope: !1961)
!1982 = !DILocation(line: 276, column: 3, scope: !1961)
!1983 = !DILocation(line: 276, column: 8, scope: !1961)
!1984 = !DILocation(line: 280, column: 8, scope: !1985)
!1985 = distinct !DILexicalBlock(scope: !1961, file: !287, line: 280, column: 7)
!1986 = !DILocation(line: 280, column: 7, scope: !1961)
!1987 = !DILocation(line: 285, column: 15, scope: !1980)
!1988 = !DILocation(line: 285, column: 34, scope: !1980)
!1989 = !DILocation(line: 286, column: 5, scope: !1979)
!1990 = !DILocation(line: 289, column: 13, scope: !1978)
!1991 = !DILocation(line: 287, column: 26, scope: !1978)
!1992 = !DILocation(line: 288, column: 20, scope: !1978)
!1993 = !DILocation(line: 0, scope: !1978)
!1994 = !DILocation(line: 288, column: 26, scope: !1978)
!1995 = !DILocation(line: 288, column: 14, scope: !1978)
!1996 = !DILocation(line: 288, column: 7, scope: !1978)
!1997 = !DILocation(line: 288, column: 18, scope: !1978)
!1998 = !DILocation(line: 290, column: 14, scope: !1979)
!1999 = !DILocation(line: 290, column: 20, scope: !1979)
!2000 = !DILocation(line: 290, column: 5, scope: !1978)
!2001 = distinct !{!2001, !1989, !2002, !1450, !1451}
!2002 = !DILocation(line: 290, column: 54, scope: !1979)
!2003 = !DILocation(line: 293, column: 69, scope: !1961)
!2004 = !DILocation(line: 293, column: 10, scope: !1961)
!2005 = !DILocation(line: 294, column: 1, scope: !1961)
!2006 = !DILocation(line: 293, column: 3, scope: !1961)
!2007 = distinct !DISubprogram(name: "_ntoa_long", scope: !287, file: !287, line: 249, type: !2008, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2010)
!2008 = !DISubroutineType(types: !2009)
!2009 = !{!290, !292, !229, !290, !290, !299, !330, !299, !10, !10, !10}
!2010 = !{!2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023}
!2011 = !DILocalVariable(name: "out", arg: 1, scope: !2007, file: !287, line: 249, type: !292)
!2012 = !DILocalVariable(name: "buffer", arg: 2, scope: !2007, file: !287, line: 249, type: !229)
!2013 = !DILocalVariable(name: "idx", arg: 3, scope: !2007, file: !287, line: 249, type: !290)
!2014 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2007, file: !287, line: 249, type: !290)
!2015 = !DILocalVariable(name: "value", arg: 5, scope: !2007, file: !287, line: 249, type: !299)
!2016 = !DILocalVariable(name: "negative", arg: 6, scope: !2007, file: !287, line: 249, type: !330)
!2017 = !DILocalVariable(name: "base", arg: 7, scope: !2007, file: !287, line: 249, type: !299)
!2018 = !DILocalVariable(name: "prec", arg: 8, scope: !2007, file: !287, line: 249, type: !10)
!2019 = !DILocalVariable(name: "width", arg: 9, scope: !2007, file: !287, line: 249, type: !10)
!2020 = !DILocalVariable(name: "flags", arg: 10, scope: !2007, file: !287, line: 249, type: !10)
!2021 = !DILocalVariable(name: "buf", scope: !2007, file: !287, line: 251, type: !322)
!2022 = !DILocalVariable(name: "len", scope: !2007, file: !287, line: 252, type: !290)
!2023 = !DILocalVariable(name: "digit", scope: !2024, file: !287, line: 262, type: !231)
!2024 = distinct !DILexicalBlock(scope: !2025, file: !287, line: 261, column: 8)
!2025 = distinct !DILexicalBlock(scope: !2026, file: !287, line: 260, column: 44)
!2026 = distinct !DILexicalBlock(scope: !2007, file: !287, line: 260, column: 7)
!2027 = !DILocation(line: 0, scope: !2007)
!2028 = !DILocation(line: 251, column: 3, scope: !2007)
!2029 = !DILocation(line: 251, column: 8, scope: !2007)
!2030 = !DILocation(line: 255, column: 8, scope: !2031)
!2031 = distinct !DILexicalBlock(scope: !2007, file: !287, line: 255, column: 7)
!2032 = !DILocation(line: 255, column: 7, scope: !2007)
!2033 = !DILocation(line: 260, column: 15, scope: !2026)
!2034 = !DILocation(line: 260, column: 34, scope: !2026)
!2035 = !DILocation(line: 261, column: 5, scope: !2025)
!2036 = !DILocation(line: 264, column: 13, scope: !2024)
!2037 = !DILocation(line: 263, column: 20, scope: !2024)
!2038 = !DILocation(line: 0, scope: !2024)
!2039 = !DILocation(line: 263, column: 26, scope: !2024)
!2040 = !DILocation(line: 263, column: 14, scope: !2024)
!2041 = !DILocation(line: 263, column: 7, scope: !2024)
!2042 = !DILocation(line: 263, column: 18, scope: !2024)
!2043 = !DILocation(line: 265, column: 14, scope: !2025)
!2044 = !DILocation(line: 265, column: 20, scope: !2025)
!2045 = !DILocation(line: 265, column: 5, scope: !2024)
!2046 = distinct !{!2046, !2035, !2047, !1450, !1451}
!2047 = !DILocation(line: 265, column: 54, scope: !2025)
!2048 = !DILocation(line: 268, column: 10, scope: !2007)
!2049 = !DILocation(line: 269, column: 1, scope: !2007)
!2050 = !DILocation(line: 268, column: 3, scope: !2007)
!2051 = !DILocation(line: 0, scope: !286)
!2052 = !DILocation(line: 303, column: 3, scope: !286)
!2053 = !DILocation(line: 303, column: 8, scope: !286)
!2054 = !DILocation(line: 314, column: 13, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !286, file: !287, line: 314, column: 7)
!2056 = !DILocation(line: 314, column: 7, scope: !286)
!2057 = !DILocation(line: 315, column: 25, scope: !2058)
!2058 = distinct !DILexicalBlock(scope: !2055, file: !287, line: 314, column: 23)
!2059 = !DILocation(line: 315, column: 5, scope: !2058)
!2060 = !DILocation(line: 316, column: 25, scope: !2058)
!2061 = !DILocation(line: 316, column: 5, scope: !2058)
!2062 = !DILocation(line: 317, column: 25, scope: !2058)
!2063 = !DILocation(line: 317, column: 5, scope: !2058)
!2064 = !DILocation(line: 318, column: 5, scope: !2058)
!2065 = !DILocation(line: 323, column: 13, scope: !2066)
!2066 = distinct !DILexicalBlock(scope: !286, file: !287, line: 323, column: 7)
!2067 = !DILocation(line: 323, column: 7, scope: !286)
!2068 = !DILocation(line: 329, column: 15, scope: !2069)
!2069 = distinct !DILexicalBlock(scope: !286, file: !287, line: 329, column: 7)
!2070 = !DILocation(line: 329, column: 7, scope: !286)
!2071 = !DILocation(line: 333, column: 42, scope: !286)
!2072 = !DILocation(line: 333, column: 3, scope: !286)
!2073 = !DILocation(line: 334, column: 16, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !286, file: !287, line: 333, column: 58)
!2075 = !DILocation(line: 334, column: 12, scope: !2074)
!2076 = !DILocation(line: 335, column: 9, scope: !2074)
!2077 = distinct !{!2077, !2072, !2078, !1450, !1451}
!2078 = !DILocation(line: 336, column: 3, scope: !286)
!2079 = !DILocation(line: 333, column: 15, scope: !286)
!2080 = !DILocation(line: 338, column: 15, scope: !286)
!2081 = !DILocation(line: 339, column: 25, scope: !286)
!2082 = !DILocation(line: 339, column: 23, scope: !286)
!2083 = !DILocation(line: 339, column: 34, scope: !286)
!2084 = !{!2085, !2085, i64 0}
!2085 = !{!"double", !1600, i64 0}
!2086 = !DILocation(line: 339, column: 32, scope: !286)
!2087 = !DILocation(line: 340, column: 24, scope: !286)
!2088 = !DILocation(line: 341, column: 16, scope: !286)
!2089 = !DILocation(line: 341, column: 14, scope: !286)
!2090 = !DILocation(line: 343, column: 12, scope: !2091)
!2091 = distinct !DILexicalBlock(scope: !286, file: !287, line: 343, column: 7)
!2092 = !DILocation(line: 343, column: 7, scope: !286)
!2093 = !DILocation(line: 344, column: 5, scope: !2094)
!2094 = distinct !DILexicalBlock(scope: !2091, file: !287, line: 343, column: 19)
!2095 = !DILocation(line: 346, column: 9, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2094, file: !287, line: 346, column: 9)
!2097 = !DILocation(line: 346, column: 14, scope: !2096)
!2098 = !DILocation(line: 346, column: 9, scope: !2094)
!2099 = !DILocation(line: 348, column: 7, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !2096, file: !287, line: 346, column: 30)
!2101 = !DILocation(line: 349, column: 5, scope: !2100)
!2102 = !DILocation(line: 351, column: 17, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2091, file: !287, line: 351, column: 12)
!2104 = !DILocation(line: 351, column: 12, scope: !2091)
!2105 = !DILocation(line: 353, column: 18, scope: !2106)
!2106 = distinct !DILexicalBlock(scope: !2103, file: !287, line: 353, column: 12)
!2107 = !DILocation(line: 353, column: 25, scope: !2106)
!2108 = !DILocation(line: 360, column: 13, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !286, file: !287, line: 360, column: 7)
!2110 = !DILocation(line: 360, column: 7, scope: !286)
!2111 = !DILocation(line: 364, column: 12, scope: !336)
!2112 = !DILocation(line: 364, column: 7, scope: !286)
!2113 = !DILocation(line: 365, column: 20, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !336, file: !287, line: 364, column: 19)
!2115 = !DILocation(line: 365, column: 18, scope: !2114)
!2116 = !DILocation(line: 366, column: 24, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !2114, file: !287, line: 366, column: 9)
!2118 = !DILocation(line: 0, scope: !335)
!2119 = !DILocation(line: 375, column: 5, scope: !335)
!2120 = !DILocation(line: 376, column: 7, scope: !2121)
!2121 = distinct !DILexicalBlock(scope: !335, file: !287, line: 375, column: 43)
!2122 = !DILocation(line: 378, column: 18, scope: !2123)
!2123 = distinct !DILexicalBlock(scope: !2121, file: !287, line: 378, column: 11)
!2124 = !DILocation(line: 377, column: 20, scope: !2121)
!2125 = !DILocation(line: 377, column: 14, scope: !2121)
!2126 = !DILocation(line: 377, column: 7, scope: !2121)
!2127 = !DILocation(line: 377, column: 18, scope: !2121)
!2128 = !DILocation(line: 378, column: 11, scope: !2121)
!2129 = distinct !{!2129, !2119, !2130, !1450, !1451}
!2130 = !DILocation(line: 381, column: 5, scope: !335)
!2131 = !DILocation(line: 383, column: 17, scope: !335)
!2132 = !DILocation(line: 383, column: 44, scope: !335)
!2133 = !DILocation(line: 383, column: 53, scope: !335)
!2134 = !DILocation(line: 384, column: 14, scope: !2135)
!2135 = distinct !DILexicalBlock(scope: !335, file: !287, line: 383, column: 63)
!2136 = !DILocation(line: 384, column: 7, scope: !2135)
!2137 = !DILocation(line: 384, column: 18, scope: !2135)
!2138 = distinct !{!2138, !2139, !2140, !1450, !1451}
!2139 = !DILocation(line: 383, column: 5, scope: !335)
!2140 = !DILocation(line: 385, column: 5, scope: !335)
!2141 = !DILocation(line: 386, column: 9, scope: !335)
!2142 = !DILocation(line: 388, column: 14, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2144, file: !287, line: 386, column: 40)
!2144 = distinct !DILexicalBlock(scope: !335, file: !287, line: 386, column: 9)
!2145 = !DILocation(line: 388, column: 7, scope: !2143)
!2146 = !DILocation(line: 388, column: 18, scope: !2143)
!2147 = !DILocation(line: 389, column: 5, scope: !2143)
!2148 = !DILocation(line: 393, column: 14, scope: !286)
!2149 = !DILocation(line: 393, column: 3, scope: !286)
!2150 = !DILocation(line: 395, column: 17, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2152, file: !287, line: 395, column: 9)
!2152 = distinct !DILexicalBlock(scope: !286, file: !287, line: 393, column: 41)
!2153 = !DILocation(line: 394, column: 18, scope: !2152)
!2154 = !DILocation(line: 394, column: 12, scope: !2152)
!2155 = !DILocation(line: 394, column: 5, scope: !2152)
!2156 = !DILocation(line: 394, column: 16, scope: !2152)
!2157 = !DILocation(line: 395, column: 9, scope: !2152)
!2158 = distinct !{!2158, !2149, !2159, !1450, !1451}
!2159 = !DILocation(line: 398, column: 3, scope: !286)
!2160 = !DILocation(line: 401, column: 15, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !286, file: !287, line: 401, column: 7)
!2162 = !DILocation(line: 401, column: 29, scope: !2161)
!2163 = !DILocation(line: 402, column: 9, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !2165, file: !287, line: 402, column: 9)
!2165 = distinct !DILexicalBlock(scope: !2161, file: !287, line: 401, column: 57)
!2166 = !DILocation(line: 402, column: 15, scope: !2164)
!2167 = !DILocation(line: 402, column: 28, scope: !2164)
!2168 = !DILocation(line: 405, column: 17, scope: !2165)
!2169 = !DILocation(line: 405, column: 26, scope: !2165)
!2170 = !DILocation(line: 405, column: 5, scope: !2165)
!2171 = !DILocation(line: 406, column: 18, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2165, file: !287, line: 405, column: 62)
!2173 = !DILocation(line: 410, column: 11, scope: !2174)
!2174 = distinct !DILexicalBlock(scope: !286, file: !287, line: 410, column: 7)
!2175 = !DILocation(line: 410, column: 7, scope: !286)
!2176 = !DILocation(line: 411, column: 9, scope: !2177)
!2177 = distinct !DILexicalBlock(scope: !2174, file: !287, line: 410, column: 38)
!2178 = !DILocation(line: 414, column: 20, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !2180, file: !287, line: 414, column: 14)
!2180 = distinct !DILexicalBlock(scope: !2177, file: !287, line: 411, column: 9)
!2181 = !DILocation(line: 414, column: 14, scope: !2180)
!2182 = !DILocation(line: 417, column: 20, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2179, file: !287, line: 417, column: 14)
!2184 = !DILocation(line: 417, column: 14, scope: !2179)
!2185 = !DILocation(line: 0, scope: !2180)
!2186 = !DILocation(line: 423, column: 29, scope: !340)
!2187 = !DILocation(line: 0, scope: !338)
!2188 = !DILocation(line: 425, column: 27, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2190, file: !287, line: 424, column: 42)
!2190 = distinct !DILexicalBlock(scope: !338, file: !287, line: 424, column: 5)
!2191 = !DILocation(line: 425, column: 7, scope: !2189)
!2192 = !DILocation(line: 424, column: 38, scope: !2190)
!2193 = !DILocation(line: 424, column: 28, scope: !2190)
!2194 = !DILocation(line: 424, column: 5, scope: !338)
!2195 = distinct !{!2195, !2194, !2196, !1450, !1451}
!2196 = !DILocation(line: 426, column: 5, scope: !338)
!2197 = !DILocation(line: 0, scope: !342)
!2198 = !DILocation(line: 430, column: 25, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !342, file: !287, line: 430, column: 3)
!2200 = !DILocation(line: 430, column: 3, scope: !342)
!2201 = !DILocation(line: 435, column: 7, scope: !286)
!2202 = !DILocation(line: 431, column: 21, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2199, file: !287, line: 430, column: 37)
!2204 = !DILocation(line: 431, column: 9, scope: !2203)
!2205 = !DILocation(line: 431, column: 39, scope: !2203)
!2206 = !DILocation(line: 431, column: 5, scope: !2203)
!2207 = !DILocation(line: 430, column: 33, scope: !2199)
!2208 = distinct !{!2208, !2200, !2209, !1450, !1451}
!2209 = !DILocation(line: 432, column: 3, scope: !342)
!2210 = !DILocation(line: 437, column: 27, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2212, file: !287, line: 436, column: 37)
!2212 = distinct !DILexicalBlock(scope: !2213, file: !287, line: 435, column: 27)
!2213 = distinct !DILexicalBlock(scope: !286, file: !287, line: 435, column: 7)
!2214 = !DILocation(line: 437, column: 7, scope: !2211)
!2215 = !DILocation(line: 436, column: 16, scope: !2212)
!2216 = !DILocation(line: 436, column: 28, scope: !2212)
!2217 = !DILocation(line: 436, column: 5, scope: !2212)
!2218 = distinct !{!2218, !2217, !2219, !1450, !1451}
!2219 = !DILocation(line: 438, column: 5, scope: !2212)
!2220 = !DILocation(line: 442, column: 1, scope: !286)
!2221 = distinct !DISubprogram(name: "_strnlen_s", scope: !287, file: !287, line: 146, type: !2222, scopeLine: 147, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2224)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{!10, !230, !290}
!2224 = !{!2225, !2226, !2227}
!2225 = !DILocalVariable(name: "str", arg: 1, scope: !2221, file: !287, line: 146, type: !230)
!2226 = !DILocalVariable(name: "maxsize", arg: 2, scope: !2221, file: !287, line: 146, type: !290)
!2227 = !DILocalVariable(name: "s", scope: !2221, file: !287, line: 148, type: !230)
!2228 = !DILocation(line: 0, scope: !2221)
!2229 = !DILocation(line: 149, column: 17, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !2231, file: !287, line: 149, column: 3)
!2231 = distinct !DILexicalBlock(scope: !2221, file: !287, line: 149, column: 3)
!2232 = !DILocation(line: 149, column: 20, scope: !2230)
!2233 = !DILocation(line: 149, column: 30, scope: !2230)
!2234 = !DILocation(line: 149, column: 34, scope: !2230)
!2235 = distinct !{!2235, !2236, !2237, !1450, !1451}
!2236 = !DILocation(line: 149, column: 3, scope: !2231)
!2237 = !DILocation(line: 149, column: 38, scope: !2231)
!2238 = !DILocation(line: 0, scope: !2231)
!2239 = !DILocation(line: 150, column: 27, scope: !2221)
!2240 = !DILocation(line: 150, column: 3, scope: !2221)
!2241 = distinct !DISubprogram(name: "_ntoa_format", scope: !287, file: !287, line: 174, type: !2242, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2244)
!2242 = !DISubroutineType(types: !2243)
!2243 = !{!290, !292, !229, !290, !290, !229, !290, !330, !10, !10, !10, !10}
!2244 = !{!2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2261}
!2245 = !DILocalVariable(name: "out", arg: 1, scope: !2241, file: !287, line: 174, type: !292)
!2246 = !DILocalVariable(name: "buffer", arg: 2, scope: !2241, file: !287, line: 174, type: !229)
!2247 = !DILocalVariable(name: "idx", arg: 3, scope: !2241, file: !287, line: 174, type: !290)
!2248 = !DILocalVariable(name: "maxlen", arg: 4, scope: !2241, file: !287, line: 174, type: !290)
!2249 = !DILocalVariable(name: "buf", arg: 5, scope: !2241, file: !287, line: 174, type: !229)
!2250 = !DILocalVariable(name: "len", arg: 6, scope: !2241, file: !287, line: 174, type: !290)
!2251 = !DILocalVariable(name: "negative", arg: 7, scope: !2241, file: !287, line: 174, type: !330)
!2252 = !DILocalVariable(name: "base", arg: 8, scope: !2241, file: !287, line: 174, type: !10)
!2253 = !DILocalVariable(name: "prec", arg: 9, scope: !2241, file: !287, line: 174, type: !10)
!2254 = !DILocalVariable(name: "width", arg: 10, scope: !2241, file: !287, line: 174, type: !10)
!2255 = !DILocalVariable(name: "flags", arg: 11, scope: !2241, file: !287, line: 174, type: !10)
!2256 = !DILocalVariable(name: "start_idx", scope: !2241, file: !287, line: 176, type: !320)
!2257 = !DILocalVariable(name: "i", scope: !2258, file: !287, line: 227, type: !290)
!2258 = distinct !DILexicalBlock(scope: !2259, file: !287, line: 227, column: 5)
!2259 = distinct !DILexicalBlock(scope: !2260, file: !287, line: 226, column: 58)
!2260 = distinct !DILexicalBlock(scope: !2241, file: !287, line: 226, column: 7)
!2261 = !DILocalVariable(name: "i", scope: !2262, file: !287, line: 233, type: !290)
!2262 = distinct !DILexicalBlock(scope: !2241, file: !287, line: 233, column: 3)
!2263 = !DILocation(line: 0, scope: !2241)
!2264 = !DILocation(line: 179, column: 15, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2241, file: !287, line: 179, column: 7)
!2266 = !DILocation(line: 179, column: 7, scope: !2241)
!2267 = !DILocation(line: 180, column: 9, scope: !2268)
!2268 = distinct !DILexicalBlock(scope: !2269, file: !287, line: 180, column: 9)
!2269 = distinct !DILexicalBlock(scope: !2265, file: !287, line: 179, column: 30)
!2270 = !DILocation(line: 180, column: 15, scope: !2268)
!2271 = !DILocation(line: 180, column: 25, scope: !2268)
!2272 = !DILocation(line: 180, column: 42, scope: !2268)
!2273 = !DILocation(line: 180, column: 55, scope: !2268)
!2274 = !DILocation(line: 183, column: 17, scope: !2269)
!2275 = !DILocation(line: 183, column: 25, scope: !2269)
!2276 = !DILocation(line: 183, column: 5, scope: !2269)
!2277 = !DILocation(line: 184, column: 18, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !2269, file: !287, line: 183, column: 61)
!2279 = !DILocation(line: 186, column: 36, scope: !2269)
!2280 = !DILocation(line: 186, column: 44, scope: !2269)
!2281 = !DILocation(line: 186, column: 53, scope: !2269)
!2282 = !DILocation(line: 187, column: 14, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2269, file: !287, line: 186, column: 89)
!2284 = !DILocation(line: 187, column: 7, scope: !2283)
!2285 = !DILocation(line: 187, column: 18, scope: !2283)
!2286 = distinct !{!2286, !2287, !2288, !1450, !1451}
!2287 = !DILocation(line: 186, column: 5, scope: !2269)
!2288 = !DILocation(line: 188, column: 5, scope: !2269)
!2289 = !DILocation(line: 192, column: 13, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2241, file: !287, line: 192, column: 7)
!2291 = !DILocation(line: 192, column: 7, scope: !2241)
!2292 = !DILocation(line: 193, column: 17, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2294, file: !287, line: 193, column: 9)
!2294 = distinct !DILexicalBlock(scope: !2290, file: !287, line: 192, column: 27)
!2295 = !DILocation(line: 193, column: 36, scope: !2293)
!2296 = !DILocation(line: 193, column: 52, scope: !2293)
!2297 = !DILocation(line: 193, column: 61, scope: !2293)
!2298 = !DILocation(line: 194, column: 10, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !2293, file: !287, line: 193, column: 81)
!2300 = !DILocation(line: 195, column: 11, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2299, file: !287, line: 195, column: 11)
!2302 = !DILocation(line: 195, column: 15, scope: !2301)
!2303 = !DILocation(line: 199, column: 15, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2294, file: !287, line: 199, column: 9)
!2305 = !DILocation(line: 199, column: 23, scope: !2304)
!2306 = !DILocation(line: 199, column: 34, scope: !2304)
!2307 = !DILocation(line: 199, column: 53, scope: !2304)
!2308 = !DILocation(line: 202, column: 38, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2304, file: !287, line: 202, column: 14)
!2310 = !DILocation(line: 202, column: 57, scope: !2309)
!2311 = !DILocation(line: 205, column: 20, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2309, file: !287, line: 205, column: 14)
!2313 = !DILocation(line: 205, column: 27, scope: !2312)
!2314 = !DILocation(line: 0, scope: !2304)
!2315 = !DILocation(line: 208, column: 13, scope: !2316)
!2316 = distinct !DILexicalBlock(scope: !2294, file: !287, line: 208, column: 9)
!2317 = !DILocation(line: 0, scope: !2294)
!2318 = !DILocation(line: 208, column: 9, scope: !2294)
!2319 = !DILocation(line: 209, column: 14, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2316, file: !287, line: 208, column: 40)
!2321 = !DILocation(line: 209, column: 7, scope: !2320)
!2322 = !DILocation(line: 209, column: 18, scope: !2320)
!2323 = !DILocation(line: 210, column: 5, scope: !2320)
!2324 = !DILocation(line: 213, column: 11, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2241, file: !287, line: 213, column: 7)
!2326 = !DILocation(line: 213, column: 7, scope: !2241)
!2327 = !DILocation(line: 214, column: 9, scope: !2328)
!2328 = distinct !DILexicalBlock(scope: !2325, file: !287, line: 213, column: 38)
!2329 = !DILocation(line: 217, column: 20, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2331, file: !287, line: 217, column: 14)
!2331 = distinct !DILexicalBlock(scope: !2328, file: !287, line: 214, column: 9)
!2332 = !DILocation(line: 217, column: 14, scope: !2331)
!2333 = !DILocation(line: 220, column: 20, scope: !2334)
!2334 = distinct !DILexicalBlock(scope: !2330, file: !287, line: 220, column: 14)
!2335 = !DILocation(line: 220, column: 14, scope: !2330)
!2336 = !DILocation(line: 0, scope: !2331)
!2337 = !DILocation(line: 226, column: 29, scope: !2260)
!2338 = !DILocation(line: 0, scope: !2258)
!2339 = !DILocation(line: 228, column: 27, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2341, file: !287, line: 227, column: 42)
!2341 = distinct !DILexicalBlock(scope: !2258, file: !287, line: 227, column: 5)
!2342 = !DILocation(line: 228, column: 7, scope: !2340)
!2343 = !DILocation(line: 227, column: 38, scope: !2341)
!2344 = !DILocation(line: 227, column: 28, scope: !2341)
!2345 = !DILocation(line: 227, column: 5, scope: !2258)
!2346 = distinct !{!2346, !2345, !2347, !1450, !1451}
!2347 = !DILocation(line: 229, column: 5, scope: !2258)
!2348 = !DILocation(line: 0, scope: !2262)
!2349 = !DILocation(line: 233, column: 25, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2262, file: !287, line: 233, column: 3)
!2351 = !DILocation(line: 233, column: 3, scope: !2262)
!2352 = !DILocation(line: 238, column: 7, scope: !2241)
!2353 = !DILocation(line: 234, column: 21, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2350, file: !287, line: 233, column: 37)
!2355 = !DILocation(line: 234, column: 9, scope: !2354)
!2356 = !DILocation(line: 234, column: 39, scope: !2354)
!2357 = !DILocation(line: 234, column: 5, scope: !2354)
!2358 = !DILocation(line: 233, column: 33, scope: !2350)
!2359 = distinct !{!2359, !2351, !2360, !1450, !1451}
!2360 = !DILocation(line: 235, column: 3, scope: !2262)
!2361 = !DILocation(line: 240, column: 27, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2363, file: !287, line: 239, column: 37)
!2363 = distinct !DILexicalBlock(scope: !2364, file: !287, line: 238, column: 27)
!2364 = distinct !DILexicalBlock(scope: !2241, file: !287, line: 238, column: 7)
!2365 = !DILocation(line: 240, column: 7, scope: !2362)
!2366 = !DILocation(line: 239, column: 16, scope: !2363)
!2367 = !DILocation(line: 239, column: 28, scope: !2363)
!2368 = !DILocation(line: 239, column: 5, scope: !2363)
!2369 = distinct !{!2369, !2368, !2370, !1450, !1451}
!2370 = !DILocation(line: 241, column: 5, scope: !2363)
!2371 = !DILocation(line: 244, column: 3, scope: !2241)
!2372 = distinct !DISubprogram(name: "sprintf_", scope: !287, file: !287, line: 731, type: !2373, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2375)
!2373 = !DISubroutineType(types: !2374)
!2374 = !{!52, !229, !230, null}
!2375 = !{!2376, !2377, !2378, !2379}
!2376 = !DILocalVariable(name: "buffer", arg: 1, scope: !2372, file: !287, line: 731, type: !229)
!2377 = !DILocalVariable(name: "format", arg: 2, scope: !2372, file: !287, line: 731, type: !230)
!2378 = !DILocalVariable(name: "va", scope: !2372, file: !287, line: 733, type: !1505)
!2379 = !DILocalVariable(name: "ret", scope: !2372, file: !287, line: 735, type: !1517)
!2380 = !DILocation(line: 0, scope: !2372)
!2381 = !DILocation(line: 733, column: 3, scope: !2372)
!2382 = !DILocation(line: 733, column: 11, scope: !2372)
!2383 = !DILocation(line: 734, column: 3, scope: !2372)
!2384 = !DILocation(line: 735, column: 19, scope: !2372)
!2385 = !DILocation(line: 736, column: 3, scope: !2372)
!2386 = !DILocation(line: 738, column: 1, scope: !2372)
!2387 = !DILocation(line: 737, column: 3, scope: !2372)
!2388 = distinct !DISubprogram(name: "snprintf_", scope: !287, file: !287, line: 741, type: !2389, scopeLine: 742, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2391)
!2389 = !DISubroutineType(types: !2390)
!2390 = !{!52, !229, !290, !230, null}
!2391 = !{!2392, !2393, !2394, !2395, !2396}
!2392 = !DILocalVariable(name: "buffer", arg: 1, scope: !2388, file: !287, line: 741, type: !229)
!2393 = !DILocalVariable(name: "count", arg: 2, scope: !2388, file: !287, line: 741, type: !290)
!2394 = !DILocalVariable(name: "format", arg: 3, scope: !2388, file: !287, line: 741, type: !230)
!2395 = !DILocalVariable(name: "va", scope: !2388, file: !287, line: 743, type: !1505)
!2396 = !DILocalVariable(name: "ret", scope: !2388, file: !287, line: 745, type: !1517)
!2397 = !DILocation(line: 0, scope: !2388)
!2398 = !DILocation(line: 743, column: 3, scope: !2388)
!2399 = !DILocation(line: 743, column: 11, scope: !2388)
!2400 = !DILocation(line: 744, column: 3, scope: !2388)
!2401 = !DILocation(line: 745, column: 19, scope: !2388)
!2402 = !DILocation(line: 746, column: 3, scope: !2388)
!2403 = !DILocation(line: 748, column: 1, scope: !2388)
!2404 = !DILocation(line: 747, column: 3, scope: !2388)
!2405 = distinct !DISubprogram(name: "vsnprintf_", scope: !287, file: !287, line: 751, type: !2406, scopeLine: 752, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2408)
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!52, !229, !290, !230, !1505}
!2408 = !{!2409, !2410, !2411, !2412}
!2409 = !DILocalVariable(name: "buffer", arg: 1, scope: !2405, file: !287, line: 751, type: !229)
!2410 = !DILocalVariable(name: "count", arg: 2, scope: !2405, file: !287, line: 751, type: !290)
!2411 = !DILocalVariable(name: "format", arg: 3, scope: !2405, file: !287, line: 751, type: !230)
!2412 = !DILocalVariable(name: "va", arg: 4, scope: !2405, file: !287, line: 751, type: !1505)
!2413 = !DILocation(line: 0, scope: !2405)
!2414 = !DILocation(line: 753, column: 10, scope: !2405)
!2415 = !DILocation(line: 753, column: 3, scope: !2405)
!2416 = distinct !DISubprogram(name: "fctprintf", scope: !287, file: !287, line: 757, type: !2417, scopeLine: 758, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2419)
!2417 = !DISubroutineType(types: !2418)
!2418 = !{!52, !305, !203, !230, null}
!2419 = !{!2420, !2421, !2422, !2423, !2424, !2426}
!2420 = !DILocalVariable(name: "out", arg: 1, scope: !2416, file: !287, line: 757, type: !305)
!2421 = !DILocalVariable(name: "arg", arg: 2, scope: !2416, file: !287, line: 757, type: !203)
!2422 = !DILocalVariable(name: "format", arg: 3, scope: !2416, file: !287, line: 757, type: !230)
!2423 = !DILocalVariable(name: "va", scope: !2416, file: !287, line: 759, type: !1505)
!2424 = !DILocalVariable(name: "out_fct_wrap", scope: !2416, file: !287, line: 761, type: !2425)
!2425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !301)
!2426 = !DILocalVariable(name: "ret", scope: !2416, file: !287, line: 762, type: !1517)
!2427 = !DILocation(line: 0, scope: !2416)
!2428 = !DILocation(line: 759, column: 3, scope: !2416)
!2429 = !DILocation(line: 759, column: 11, scope: !2416)
!2430 = !DILocation(line: 760, column: 3, scope: !2416)
!2431 = !DILocation(line: 761, column: 3, scope: !2416)
!2432 = !DILocation(line: 761, column: 27, scope: !2416)
!2433 = !DILocation(line: 761, column: 42, scope: !2416)
!2434 = !DILocation(line: 762, column: 19, scope: !2416)
!2435 = !DILocation(line: 763, column: 3, scope: !2416)
!2436 = !DILocation(line: 765, column: 1, scope: !2416)
!2437 = !DILocation(line: 764, column: 3, scope: !2416)
!2438 = distinct !DISubprogram(name: "SystemInit", scope: !349, file: !349, line: 157, type: !4, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !348, retainedNodes: !283)
!2439 = !DILocation(line: 161, column: 11, scope: !2438)
!2440 = !{!2441, !2442, i64 0}
!2441 = !{!"", !2442, i64 0, !2442, i64 4, !2442, i64 8, !2442, i64 12, !2442, i64 16, !2442, i64 20, !2442, i64 24, !2442, i64 28, !2442, i64 32, !2442, i64 36}
!2442 = !{!"int", !1600, i64 0}
!2443 = !DILocation(line: 165, column: 13, scope: !2438)
!2444 = !{!2441, !2442, i64 4}
!2445 = !DILocation(line: 171, column: 11, scope: !2438)
!2446 = !DILocation(line: 174, column: 11, scope: !2438)
!2447 = !DILocation(line: 177, column: 13, scope: !2438)
!2448 = !DILocation(line: 196, column: 12, scope: !2438)
!2449 = !{!2441, !2442, i64 8}
!2450 = !DILocation(line: 208, column: 13, scope: !2438)
!2451 = !{!2452, !2442, i64 8}
!2452 = !{!"", !2442, i64 0, !2442, i64 4, !2442, i64 8, !2442, i64 12, !2442, i64 16, !2442, i64 20, !1600, i64 24, !2442, i64 36, !2442, i64 40, !2442, i64 44, !2442, i64 48, !2442, i64 52, !2442, i64 56, !2442, i64 60, !1600, i64 64, !2442, i64 72, !2442, i64 76, !1600, i64 80, !1600, i64 96, !1600, i64 116, !2442, i64 136}
!2453 = !DILocation(line: 210, column: 1, scope: !2438)
!2454 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !349, file: !349, line: 247, type: !4, scopeLine: 248, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !348, retainedNodes: !2455)
!2455 = !{!2456, !2457, !2458}
!2456 = !DILocalVariable(name: "tmp", scope: !2454, file: !349, line: 249, type: !24)
!2457 = !DILocalVariable(name: "pllmull", scope: !2454, file: !349, line: 249, type: !24)
!2458 = !DILocalVariable(name: "pllsource", scope: !2454, file: !349, line: 249, type: !24)
!2459 = !DILocation(line: 0, scope: !2454)
!2460 = !DILocation(line: 260, column: 14, scope: !2454)
!2461 = !DILocation(line: 260, column: 19, scope: !2454)
!2462 = !DILocation(line: 262, column: 3, scope: !2454)
!2463 = !DILocation(line: 273, column: 22, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2454, file: !349, line: 263, column: 3)
!2465 = !DILocation(line: 274, column: 24, scope: !2464)
!2466 = !DILocation(line: 274, column: 29, scope: !2464)
!2467 = !DILocation(line: 277, column: 27, scope: !2464)
!2468 = !DILocation(line: 277, column: 35, scope: !2464)
!2469 = !DILocation(line: 279, column: 21, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2464, file: !349, line: 279, column: 11)
!2471 = !DILocation(line: 279, column: 11, scope: !2464)
!2472 = !DILocation(line: 282, column: 45, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2470, file: !349, line: 280, column: 7)
!2474 = !DILocation(line: 283, column: 7, scope: !2473)
!2475 = !DILocation(line: 292, column: 19, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2477, file: !349, line: 292, column: 13)
!2477 = distinct !DILexicalBlock(scope: !2470, file: !349, line: 285, column: 7)
!2478 = !DILocation(line: 292, column: 24, scope: !2476)
!2479 = !DILocation(line: 292, column: 45, scope: !2476)
!2480 = !DILocation(line: 292, column: 13, scope: !2477)
!2481 = !DILocation(line: 294, column: 47, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2476, file: !349, line: 293, column: 9)
!2483 = !DILocation(line: 295, column: 9, scope: !2482)
!2484 = !DILocation(line: 298, column: 39, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2476, file: !349, line: 297, column: 9)
!2486 = !DILocation(line: 0, scope: !2464)
!2487 = !{!2442, !2442, i64 0}
!2488 = !DILocation(line: 350, column: 30, scope: !2454)
!2489 = !DILocation(line: 350, column: 52, scope: !2454)
!2490 = !DILocation(line: 350, column: 9, scope: !2454)
!2491 = !DILocation(line: 352, column: 19, scope: !2454)
!2492 = !DILocation(line: 353, column: 1, scope: !2454)
!2493 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !775, file: !775, line: 202, type: !2494, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !2497)
!2494 = !DISubroutineType(types: !2495)
!2495 = !{!2496}
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !9, line: 47, baseType: !436)
!2497 = !{!2498}
!2498 = !DILocalVariable(name: "tickstart", scope: !2493, file: !775, line: 204, type: !24)
!2499 = !DILocation(line: 207, column: 15, scope: !2493)
!2500 = !DILocation(line: 0, scope: !2493)
!2501 = !DILocation(line: 210, column: 3, scope: !2493)
!2502 = !DILocation(line: 213, column: 3, scope: !2493)
!2503 = !DILocation(line: 213, column: 10, scope: !2493)
!2504 = !DILocation(line: 213, column: 43, scope: !2493)
!2505 = !DILocation(line: 215, column: 10, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2507, file: !775, line: 215, column: 9)
!2507 = distinct !DILexicalBlock(scope: !2493, file: !775, line: 214, column: 3)
!2508 = !DILocation(line: 215, column: 24, scope: !2506)
!2509 = !DILocation(line: 215, column: 37, scope: !2506)
!2510 = !DILocation(line: 215, column: 9, scope: !2507)
!2511 = distinct !{!2511, !2502, !2512, !1450, !1451}
!2512 = !DILocation(line: 219, column: 3, scope: !2493)
!2513 = !DILocation(line: 222, column: 3, scope: !2493)
!2514 = !DILocation(line: 225, column: 15, scope: !2493)
!2515 = !DILocation(line: 228, column: 3, scope: !2493)
!2516 = !DILocation(line: 231, column: 3, scope: !2493)
!2517 = !DILocation(line: 231, column: 10, scope: !2493)
!2518 = !DILocation(line: 231, column: 44, scope: !2493)
!2519 = !DILocation(line: 233, column: 10, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2521, file: !775, line: 233, column: 9)
!2521 = distinct !DILexicalBlock(scope: !2493, file: !775, line: 232, column: 3)
!2522 = !DILocation(line: 233, column: 24, scope: !2520)
!2523 = !DILocation(line: 233, column: 37, scope: !2520)
!2524 = !DILocation(line: 233, column: 9, scope: !2521)
!2525 = distinct !{!2525, !2516, !2526, !1450, !1451}
!2526 = !DILocation(line: 237, column: 3, scope: !2493)
!2527 = !DILocation(line: 240, column: 19, scope: !2493)
!2528 = !DILocation(line: 243, column: 20, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2493, file: !775, line: 243, column: 7)
!2530 = !DILocation(line: 243, column: 7, scope: !2529)
!2531 = !DILocation(line: 243, column: 32, scope: !2529)
!2532 = !DILocation(line: 243, column: 7, scope: !2493)
!2533 = !DILocation(line: 249, column: 15, scope: !2493)
!2534 = !DILocation(line: 252, column: 3, scope: !2493)
!2535 = !DILocation(line: 255, column: 3, scope: !2493)
!2536 = !DILocation(line: 255, column: 10, scope: !2493)
!2537 = !DILocation(line: 255, column: 43, scope: !2493)
!2538 = !DILocation(line: 257, column: 10, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2540, file: !775, line: 257, column: 9)
!2540 = distinct !DILexicalBlock(scope: !2493, file: !775, line: 256, column: 3)
!2541 = !DILocation(line: 257, column: 24, scope: !2539)
!2542 = !DILocation(line: 257, column: 37, scope: !2539)
!2543 = !DILocation(line: 257, column: 9, scope: !2540)
!2544 = distinct !{!2544, !2535, !2545, !1450, !1451}
!2545 = !DILocation(line: 261, column: 3, scope: !2493)
!2546 = !DILocation(line: 264, column: 3, scope: !2493)
!2547 = !DILocation(line: 267, column: 15, scope: !2493)
!2548 = !DILocation(line: 270, column: 3, scope: !2493)
!2549 = !DILocation(line: 273, column: 3, scope: !2493)
!2550 = !DILocation(line: 273, column: 10, scope: !2493)
!2551 = !DILocation(line: 273, column: 43, scope: !2493)
!2552 = !DILocation(line: 275, column: 10, scope: !2553)
!2553 = distinct !DILexicalBlock(scope: !2554, file: !775, line: 275, column: 9)
!2554 = distinct !DILexicalBlock(scope: !2493, file: !775, line: 274, column: 3)
!2555 = !DILocation(line: 275, column: 24, scope: !2553)
!2556 = !DILocation(line: 275, column: 37, scope: !2553)
!2557 = !DILocation(line: 275, column: 9, scope: !2554)
!2558 = distinct !{!2558, !2549, !2559, !1450, !1451}
!2559 = !DILocation(line: 279, column: 3, scope: !2493)
!2560 = !DILocation(line: 282, column: 3, scope: !2493)
!2561 = !DILocation(line: 324, column: 3, scope: !2493)
!2562 = !{!2441, !2442, i64 36}
!2563 = !DILocation(line: 327, column: 3, scope: !2493)
!2564 = !DILocation(line: 329, column: 3, scope: !2493)
!2565 = !DILocation(line: 330, column: 1, scope: !2493)
!2566 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !775, file: !775, line: 347, type: !2567, scopeLine: 348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !2587)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{!2496, !2569}
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !1330, line: 261, baseType: !2571)
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1330, line: 228, size: 320, elements: !2572)
!2572 = !{!2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !2571, file: !1330, line: 230, baseType: !24, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !2571, file: !1330, line: 238, baseType: !24, size: 32, offset: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "HSEPredivValue", scope: !2571, file: !1330, line: 241, baseType: !24, size: 32, offset: 64)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !2571, file: !1330, line: 244, baseType: !24, size: 32, offset: 96)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !2571, file: !1330, line: 247, baseType: !24, size: 32, offset: 128)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !2571, file: !1330, line: 250, baseType: !24, size: 32, offset: 160)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !2571, file: !1330, line: 253, baseType: !24, size: 32, offset: 192)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !2571, file: !1330, line: 256, baseType: !2581, size: 96, offset: 224)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !1342, line: 59, baseType: !2582)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1342, line: 49, size: 96, elements: !2583)
!2583 = !{!2584, !2585, !2586}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !2582, file: !1342, line: 51, baseType: !24, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !2582, file: !1342, line: 54, baseType: !24, size: 32, offset: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !2582, file: !1342, line: 57, baseType: !24, size: 32, offset: 64)
!2587 = !{!2588, !2589, !2590, !2591, !2595}
!2588 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !2566, file: !775, line: 347, type: !2569)
!2589 = !DILocalVariable(name: "tickstart", scope: !2566, file: !775, line: 349, type: !24)
!2590 = !DILocalVariable(name: "pll_config", scope: !2566, file: !775, line: 350, type: !24)
!2591 = !DILocalVariable(name: "pwrclkchanged", scope: !2592, file: !775, line: 526, type: !2594)
!2592 = distinct !DILexicalBlock(scope: !2593, file: !775, line: 525, column: 3)
!2593 = distinct !DILexicalBlock(scope: !2566, file: !775, line: 524, column: 7)
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !352, line: 155, baseType: !351)
!2595 = !DILocalVariable(name: "tmpreg", scope: !2596, file: !775, line: 535, type: !23)
!2596 = distinct !DILexicalBlock(scope: !2597, file: !775, line: 535, column: 7)
!2597 = distinct !DILexicalBlock(scope: !2598, file: !775, line: 534, column: 5)
!2598 = distinct !DILexicalBlock(scope: !2592, file: !775, line: 533, column: 9)
!2599 = !DILocation(line: 0, scope: !2566)
!2600 = !DILocation(line: 353, column: 25, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2566, file: !775, line: 353, column: 7)
!2602 = !DILocation(line: 353, column: 7, scope: !2566)
!2603 = !DILocation(line: 362, column: 28, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2566, file: !775, line: 362, column: 7)
!2605 = !{!2606, !2442, i64 0}
!2606 = !{!"", !2442, i64 0, !2442, i64 4, !2442, i64 8, !2442, i64 12, !2442, i64 16, !2442, i64 20, !2442, i64 24, !2607, i64 28}
!2607 = !{!"", !2442, i64 0, !2442, i64 4, !2442, i64 8}
!2608 = !DILocation(line: 362, column: 44, scope: !2604)
!2609 = !DILocation(line: 362, column: 70, scope: !2604)
!2610 = !DILocation(line: 362, column: 7, scope: !2566)
!2611 = !DILocation(line: 368, column: 10, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2613, file: !775, line: 368, column: 9)
!2613 = distinct !DILexicalBlock(scope: !2604, file: !775, line: 363, column: 3)
!2614 = !DILocation(line: 368, column: 40, scope: !2612)
!2615 = !DILocation(line: 369, column: 9, scope: !2612)
!2616 = !DILocation(line: 369, column: 14, scope: !2612)
!2617 = !DILocation(line: 369, column: 44, scope: !2612)
!2618 = !DILocation(line: 369, column: 79, scope: !2612)
!2619 = !DILocation(line: 369, column: 83, scope: !2612)
!2620 = !DILocation(line: 369, column: 113, scope: !2612)
!2621 = !DILocation(line: 368, column: 9, scope: !2613)
!2622 = !DILocation(line: 371, column: 12, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2624, file: !775, line: 371, column: 11)
!2624 = distinct !DILexicalBlock(scope: !2612, file: !775, line: 370, column: 5)
!2625 = !DILocation(line: 371, column: 48, scope: !2623)
!2626 = !DILocation(line: 371, column: 58, scope: !2623)
!2627 = !DILocation(line: 371, column: 81, scope: !2623)
!2628 = !{!2606, !2442, i64 4}
!2629 = !DILocation(line: 371, column: 90, scope: !2623)
!2630 = !DILocation(line: 371, column: 11, scope: !2624)
!2631 = !DILocation(line: 379, column: 7, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2633, file: !775, line: 379, column: 7)
!2633 = distinct !DILexicalBlock(scope: !2634, file: !775, line: 379, column: 7)
!2634 = distinct !DILexicalBlock(scope: !2612, file: !775, line: 377, column: 5)
!2635 = !DILocation(line: 379, column: 7, scope: !2633)
!2636 = !DILocation(line: 379, column: 7, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2632, file: !775, line: 379, column: 7)
!2638 = !DILocation(line: 379, column: 7, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2640, file: !775, line: 379, column: 7)
!2640 = distinct !DILexicalBlock(scope: !2632, file: !775, line: 379, column: 7)
!2641 = !DILocation(line: 379, column: 7, scope: !2642)
!2642 = distinct !DILexicalBlock(scope: !2643, file: !775, line: 379, column: 7)
!2643 = distinct !DILexicalBlock(scope: !2640, file: !775, line: 379, column: 7)
!2644 = !DILocation(line: 379, column: 7, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2643, file: !775, line: 379, column: 7)
!2646 = !DILocation(line: 0, scope: !2632)
!2647 = !DILocation(line: 383, column: 39, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2634, file: !775, line: 383, column: 11)
!2649 = !DILocation(line: 0, scope: !2648)
!2650 = !DILocation(line: 383, column: 11, scope: !2634)
!2651 = !DILocation(line: 389, column: 16, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2648, file: !775, line: 384, column: 7)
!2653 = !DILocation(line: 389, column: 52, scope: !2652)
!2654 = !DILocation(line: 389, column: 9, scope: !2652)
!2655 = !DILocation(line: 391, column: 16, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2657, file: !775, line: 391, column: 15)
!2657 = distinct !DILexicalBlock(scope: !2652, file: !775, line: 390, column: 9)
!2658 = !DILocation(line: 391, column: 30, scope: !2656)
!2659 = !DILocation(line: 391, column: 43, scope: !2656)
!2660 = !DILocation(line: 391, column: 15, scope: !2657)
!2661 = distinct !{!2661, !2654, !2662, !1450, !1451}
!2662 = !DILocation(line: 395, column: 9, scope: !2652)
!2663 = !DILocation(line: 403, column: 16, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2648, file: !775, line: 398, column: 7)
!2665 = !DILocation(line: 403, column: 52, scope: !2664)
!2666 = !DILocation(line: 403, column: 9, scope: !2664)
!2667 = !DILocation(line: 405, column: 16, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2669, file: !775, line: 405, column: 15)
!2669 = distinct !DILexicalBlock(scope: !2664, file: !775, line: 404, column: 9)
!2670 = !DILocation(line: 405, column: 30, scope: !2668)
!2671 = !DILocation(line: 405, column: 43, scope: !2668)
!2672 = !DILocation(line: 405, column: 15, scope: !2669)
!2673 = distinct !{!2673, !2666, !2674, !1450, !1451}
!2674 = !DILocation(line: 409, column: 9, scope: !2664)
!2675 = !DILocation(line: 414, column: 28, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2566, file: !775, line: 414, column: 7)
!2677 = !DILocation(line: 414, column: 44, scope: !2676)
!2678 = !DILocation(line: 414, column: 70, scope: !2676)
!2679 = !DILocation(line: 414, column: 7, scope: !2566)
!2680 = !DILocation(line: 421, column: 10, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2682, file: !775, line: 421, column: 9)
!2682 = distinct !DILexicalBlock(scope: !2676, file: !775, line: 415, column: 3)
!2683 = !DILocation(line: 421, column: 40, scope: !2681)
!2684 = !DILocation(line: 422, column: 9, scope: !2681)
!2685 = !DILocation(line: 422, column: 14, scope: !2681)
!2686 = !DILocation(line: 422, column: 44, scope: !2681)
!2687 = !DILocation(line: 422, column: 79, scope: !2681)
!2688 = !DILocation(line: 422, column: 83, scope: !2681)
!2689 = !DILocation(line: 422, column: 113, scope: !2681)
!2690 = !DILocation(line: 421, column: 9, scope: !2682)
!2691 = !DILocation(line: 425, column: 12, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2693, file: !775, line: 425, column: 11)
!2693 = distinct !DILexicalBlock(scope: !2681, file: !775, line: 423, column: 5)
!2694 = !DILocation(line: 425, column: 48, scope: !2692)
!2695 = !DILocation(line: 425, column: 58, scope: !2692)
!2696 = !DILocation(line: 425, column: 81, scope: !2692)
!2697 = !{!2606, !2442, i64 16}
!2698 = !DILocation(line: 425, column: 90, scope: !2692)
!2699 = !DILocation(line: 425, column: 11, scope: !2693)
!2700 = !DILocation(line: 439, column: 30, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2702, file: !775, line: 439, column: 11)
!2702 = distinct !DILexicalBlock(scope: !2681, file: !775, line: 437, column: 5)
!2703 = !DILocation(line: 439, column: 39, scope: !2701)
!2704 = !DILocation(line: 439, column: 11, scope: !2702)
!2705 = !DILocation(line: 442, column: 9, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2701, file: !775, line: 440, column: 7)
!2707 = !DILocation(line: 445, column: 21, scope: !2706)
!2708 = !DILocation(line: 448, column: 9, scope: !2706)
!2709 = !DILocation(line: 448, column: 16, scope: !2706)
!2710 = !DILocation(line: 448, column: 52, scope: !2706)
!2711 = !DILocation(line: 450, column: 16, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2713, file: !775, line: 450, column: 15)
!2713 = distinct !DILexicalBlock(scope: !2706, file: !775, line: 449, column: 9)
!2714 = !DILocation(line: 450, column: 30, scope: !2712)
!2715 = !DILocation(line: 450, column: 43, scope: !2712)
!2716 = !DILocation(line: 450, column: 15, scope: !2713)
!2717 = distinct !{!2717, !2708, !2718, !1450, !1451}
!2718 = !DILocation(line: 454, column: 9, scope: !2706)
!2719 = !DILocation(line: 462, column: 9, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2701, file: !775, line: 460, column: 7)
!2721 = !DILocation(line: 465, column: 21, scope: !2720)
!2722 = !DILocation(line: 468, column: 9, scope: !2720)
!2723 = !DILocation(line: 468, column: 16, scope: !2720)
!2724 = !DILocation(line: 468, column: 52, scope: !2720)
!2725 = !DILocation(line: 470, column: 16, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2727, file: !775, line: 470, column: 15)
!2727 = distinct !DILexicalBlock(scope: !2720, file: !775, line: 469, column: 9)
!2728 = !DILocation(line: 470, column: 30, scope: !2726)
!2729 = !DILocation(line: 470, column: 43, scope: !2726)
!2730 = !DILocation(line: 470, column: 15, scope: !2727)
!2731 = distinct !{!2731, !2722, !2732, !1450, !1451}
!2732 = !DILocation(line: 474, column: 9, scope: !2720)
!2733 = !DILocation(line: 0, scope: !2681)
!2734 = !{!2606, !2442, i64 20}
!2735 = !DILocation(line: 479, column: 28, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2566, file: !775, line: 479, column: 7)
!2737 = !DILocation(line: 479, column: 44, scope: !2736)
!2738 = !DILocation(line: 479, column: 70, scope: !2736)
!2739 = !DILocation(line: 479, column: 7, scope: !2566)
!2740 = !DILocation(line: 485, column: 28, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2742, file: !775, line: 485, column: 9)
!2742 = distinct !DILexicalBlock(scope: !2736, file: !775, line: 480, column: 3)
!2743 = !{!2606, !2442, i64 24}
!2744 = !DILocation(line: 485, column: 37, scope: !2741)
!2745 = !DILocation(line: 485, column: 9, scope: !2742)
!2746 = !DILocation(line: 488, column: 7, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2741, file: !775, line: 486, column: 5)
!2748 = !DILocation(line: 491, column: 19, scope: !2747)
!2749 = !DILocation(line: 494, column: 7, scope: !2747)
!2750 = !DILocation(line: 494, column: 14, scope: !2747)
!2751 = !DILocation(line: 494, column: 50, scope: !2747)
!2752 = !DILocation(line: 496, column: 14, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2754, file: !775, line: 496, column: 13)
!2754 = distinct !DILexicalBlock(scope: !2747, file: !775, line: 495, column: 7)
!2755 = !DILocation(line: 496, column: 28, scope: !2753)
!2756 = !DILocation(line: 496, column: 41, scope: !2753)
!2757 = !DILocation(line: 496, column: 13, scope: !2754)
!2758 = distinct !{!2758, !2749, !2759, !1450, !1451}
!2759 = !DILocation(line: 500, column: 7, scope: !2747)
!2760 = !DILocation(line: 503, column: 7, scope: !2747)
!2761 = !DILocation(line: 504, column: 5, scope: !2747)
!2762 = !DILocation(line: 508, column: 7, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2741, file: !775, line: 506, column: 5)
!2764 = !DILocation(line: 511, column: 19, scope: !2763)
!2765 = !DILocation(line: 514, column: 7, scope: !2763)
!2766 = !DILocation(line: 514, column: 14, scope: !2763)
!2767 = !DILocation(line: 514, column: 50, scope: !2763)
!2768 = !DILocation(line: 516, column: 14, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2770, file: !775, line: 516, column: 13)
!2770 = distinct !DILexicalBlock(scope: !2763, file: !775, line: 515, column: 7)
!2771 = !DILocation(line: 516, column: 28, scope: !2769)
!2772 = !DILocation(line: 516, column: 41, scope: !2769)
!2773 = !DILocation(line: 516, column: 13, scope: !2770)
!2774 = distinct !{!2774, !2765, !2775, !1450, !1451}
!2775 = !DILocation(line: 520, column: 7, scope: !2763)
!2776 = !DILocation(line: 524, column: 28, scope: !2593)
!2777 = !DILocation(line: 524, column: 44, scope: !2593)
!2778 = !DILocation(line: 524, column: 70, scope: !2593)
!2779 = !DILocation(line: 524, column: 7, scope: !2566)
!2780 = !DILocation(line: 0, scope: !2592)
!2781 = !DILocation(line: 533, column: 9, scope: !2598)
!2782 = !{!2441, !2442, i64 28}
!2783 = !DILocation(line: 533, column: 9, scope: !2592)
!2784 = !DILocation(line: 535, column: 7, scope: !2596)
!2785 = !DILocation(line: 535, column: 7, scope: !2597)
!2786 = !DILocation(line: 537, column: 5, scope: !2597)
!2787 = !DILocation(line: 539, column: 9, scope: !2788)
!2788 = distinct !DILexicalBlock(scope: !2592, file: !775, line: 539, column: 9)
!2789 = !{!2790, !2442, i64 0}
!2790 = !{!"", !2442, i64 0, !2442, i64 4}
!2791 = !DILocation(line: 539, column: 9, scope: !2592)
!2792 = !DILocation(line: 542, column: 7, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2788, file: !775, line: 540, column: 5)
!2794 = !DILocation(line: 545, column: 19, scope: !2793)
!2795 = !DILocation(line: 547, column: 7, scope: !2793)
!2796 = !DILocation(line: 547, column: 14, scope: !2793)
!2797 = !DILocation(line: 549, column: 14, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2799, file: !775, line: 549, column: 13)
!2799 = distinct !DILexicalBlock(scope: !2793, file: !775, line: 548, column: 7)
!2800 = !DILocation(line: 549, column: 28, scope: !2798)
!2801 = !DILocation(line: 549, column: 41, scope: !2798)
!2802 = !DILocation(line: 549, column: 13, scope: !2799)
!2803 = distinct !{!2803, !2795, !2804, !1450, !1451}
!2804 = !DILocation(line: 553, column: 7, scope: !2793)
!2805 = !DILocation(line: 557, column: 5, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2807, file: !775, line: 557, column: 5)
!2807 = distinct !DILexicalBlock(scope: !2592, file: !775, line: 557, column: 5)
!2808 = !{!2606, !2442, i64 12}
!2809 = !DILocation(line: 557, column: 5, scope: !2807)
!2810 = !DILocation(line: 557, column: 5, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2806, file: !775, line: 557, column: 5)
!2812 = !{!2441, !2442, i64 32}
!2813 = !DILocation(line: 557, column: 5, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2815, file: !775, line: 557, column: 5)
!2815 = distinct !DILexicalBlock(scope: !2806, file: !775, line: 557, column: 5)
!2816 = !DILocation(line: 557, column: 5, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2818, file: !775, line: 557, column: 5)
!2818 = distinct !DILexicalBlock(scope: !2815, file: !775, line: 557, column: 5)
!2819 = !DILocation(line: 557, column: 5, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2818, file: !775, line: 557, column: 5)
!2821 = !DILocation(line: 0, scope: !2806)
!2822 = !DILocation(line: 559, column: 37, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2592, file: !775, line: 559, column: 9)
!2824 = !DILocation(line: 0, scope: !2823)
!2825 = !DILocation(line: 559, column: 9, scope: !2592)
!2826 = !DILocation(line: 565, column: 14, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2823, file: !775, line: 560, column: 5)
!2828 = !DILocation(line: 565, column: 50, scope: !2827)
!2829 = !DILocation(line: 565, column: 7, scope: !2827)
!2830 = !DILocation(line: 567, column: 14, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2832, file: !775, line: 567, column: 13)
!2832 = distinct !DILexicalBlock(scope: !2827, file: !775, line: 566, column: 7)
!2833 = !DILocation(line: 567, column: 28, scope: !2831)
!2834 = !DILocation(line: 567, column: 41, scope: !2831)
!2835 = !DILocation(line: 567, column: 13, scope: !2832)
!2836 = distinct !{!2836, !2829, !2837, !1450, !1451}
!2837 = !DILocation(line: 571, column: 7, scope: !2827)
!2838 = !DILocation(line: 579, column: 14, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2823, file: !775, line: 574, column: 5)
!2840 = !DILocation(line: 579, column: 50, scope: !2839)
!2841 = !DILocation(line: 579, column: 7, scope: !2839)
!2842 = !DILocation(line: 581, column: 14, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2844, file: !775, line: 581, column: 13)
!2844 = distinct !DILexicalBlock(scope: !2839, file: !775, line: 580, column: 7)
!2845 = !DILocation(line: 581, column: 28, scope: !2843)
!2846 = !DILocation(line: 581, column: 41, scope: !2843)
!2847 = !DILocation(line: 581, column: 13, scope: !2844)
!2848 = distinct !{!2848, !2841, !2849, !1450, !1451}
!2849 = !DILocation(line: 585, column: 7, scope: !2839)
!2850 = !DILocation(line: 589, column: 9, scope: !2592)
!2851 = !DILocation(line: 591, column: 7, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2853, file: !775, line: 590, column: 5)
!2853 = distinct !DILexicalBlock(scope: !2592, file: !775, line: 589, column: 9)
!2854 = !DILocation(line: 592, column: 5, scope: !2852)
!2855 = !DILocation(line: 688, column: 31, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2566, file: !775, line: 688, column: 7)
!2857 = !{!2606, !2442, i64 28}
!2858 = !DILocation(line: 688, column: 41, scope: !2856)
!2859 = !DILocation(line: 688, column: 7, scope: !2566)
!2860 = !DILocation(line: 691, column: 9, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2862, file: !775, line: 691, column: 9)
!2862 = distinct !DILexicalBlock(scope: !2856, file: !775, line: 689, column: 3)
!2863 = !DILocation(line: 691, column: 39, scope: !2861)
!2864 = !DILocation(line: 691, column: 9, scope: !2862)
!2865 = !DILocation(line: 693, column: 45, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2867, file: !775, line: 693, column: 11)
!2867 = distinct !DILexicalBlock(scope: !2861, file: !775, line: 692, column: 5)
!2868 = !DILocation(line: 0, scope: !2866)
!2869 = !DILocation(line: 693, column: 11, scope: !2867)
!2870 = !DILocation(line: 706, column: 16, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2866, file: !775, line: 694, column: 7)
!2872 = !DILocation(line: 706, column: 53, scope: !2871)
!2873 = !DILocation(line: 706, column: 9, scope: !2871)
!2874 = !DILocation(line: 708, column: 16, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2876, file: !775, line: 708, column: 15)
!2876 = distinct !DILexicalBlock(scope: !2871, file: !775, line: 707, column: 9)
!2877 = !DILocation(line: 708, column: 30, scope: !2875)
!2878 = !DILocation(line: 708, column: 43, scope: !2875)
!2879 = !DILocation(line: 708, column: 15, scope: !2876)
!2880 = distinct !{!2880, !2873, !2881, !1450, !1451}
!2881 = !DILocation(line: 712, column: 9, scope: !2871)
!2882 = !DILocation(line: 716, column: 36, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2871, file: !775, line: 716, column: 13)
!2884 = !{!2606, !2442, i64 32}
!2885 = !DILocation(line: 716, column: 46, scope: !2883)
!2886 = !DILocation(line: 716, column: 13, scope: !2871)
!2887 = !DILocation(line: 728, column: 11, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2883, file: !775, line: 717, column: 9)
!2889 = !{!2606, !2442, i64 8}
!2890 = !DILocation(line: 729, column: 9, scope: !2888)
!2891 = !DILocation(line: 732, column: 9, scope: !2871)
!2892 = !{!2606, !2442, i64 36}
!2893 = !DILocation(line: 735, column: 9, scope: !2871)
!2894 = !DILocation(line: 738, column: 21, scope: !2871)
!2895 = !DILocation(line: 741, column: 9, scope: !2871)
!2896 = !DILocation(line: 741, column: 16, scope: !2871)
!2897 = !DILocation(line: 741, column: 53, scope: !2871)
!2898 = !DILocation(line: 743, column: 16, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2900, file: !775, line: 743, column: 15)
!2900 = distinct !DILexicalBlock(scope: !2871, file: !775, line: 742, column: 9)
!2901 = !DILocation(line: 743, column: 30, scope: !2899)
!2902 = !DILocation(line: 743, column: 43, scope: !2899)
!2903 = !DILocation(line: 743, column: 15, scope: !2900)
!2904 = distinct !{!2904, !2895, !2905, !1450, !1451}
!2905 = !DILocation(line: 747, column: 9, scope: !2871)
!2906 = !DILocation(line: 758, column: 16, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2866, file: !775, line: 750, column: 7)
!2908 = !DILocation(line: 758, column: 53, scope: !2907)
!2909 = !DILocation(line: 758, column: 9, scope: !2907)
!2910 = !DILocation(line: 760, column: 16, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2912, file: !775, line: 760, column: 15)
!2912 = distinct !DILexicalBlock(scope: !2907, file: !775, line: 759, column: 9)
!2913 = !DILocation(line: 760, column: 30, scope: !2911)
!2914 = !DILocation(line: 760, column: 43, scope: !2911)
!2915 = !DILocation(line: 760, column: 15, scope: !2912)
!2916 = distinct !{!2916, !2909, !2917, !1450, !1451}
!2917 = !DILocation(line: 764, column: 9, scope: !2907)
!2918 = !DILocation(line: 770, column: 45, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2920, file: !775, line: 770, column: 11)
!2920 = distinct !DILexicalBlock(scope: !2861, file: !775, line: 768, column: 5)
!2921 = !DILocation(line: 770, column: 11, scope: !2920)
!2922 = !DILocation(line: 777, column: 27, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2919, file: !775, line: 775, column: 7)
!2924 = !DILocation(line: 778, column: 14, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2923, file: !775, line: 778, column: 13)
!2926 = !DILocation(line: 778, column: 78, scope: !2925)
!2927 = !DILocation(line: 778, column: 52, scope: !2925)
!2928 = !DILocation(line: 778, column: 89, scope: !2925)
!2929 = !DILocation(line: 779, column: 14, scope: !2925)
!2930 = !DILocation(line: 779, column: 79, scope: !2925)
!2931 = !DILocation(line: 779, column: 53, scope: !2925)
!2932 = !DILocation(line: 778, column: 13, scope: !2923)
!2933 = !DILocation(line: 787, column: 3, scope: !2566)
!2934 = !DILocation(line: 788, column: 1, scope: !2566)
!2935 = distinct !DISubprogram(name: "RCC_Delay", scope: !775, file: !775, line: 1365, type: !2936, scopeLine: 1366, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !2938)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{null, !24}
!2938 = !{!2939, !2940}
!2939 = !DILocalVariable(name: "mdelay", arg: 1, scope: !2935, file: !775, line: 1365, type: !24)
!2940 = !DILocalVariable(name: "Delay", scope: !2935, file: !775, line: 1367, type: !23)
!2941 = !DILocation(line: 0, scope: !2935)
!2942 = !DILocation(line: 1367, column: 3, scope: !2935)
!2943 = !DILocation(line: 1367, column: 17, scope: !2935)
!2944 = !DILocation(line: 1367, column: 35, scope: !2935)
!2945 = !DILocation(line: 1367, column: 56, scope: !2935)
!2946 = !DILocation(line: 1368, column: 3, scope: !2935)
!2947 = !DILocation(line: 1370, column: 5, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2935, file: !775, line: 1369, column: 3)
!2949 = !{i64 2149488927}
!2950 = !DILocation(line: 1372, column: 16, scope: !2935)
!2951 = !DILocation(line: 1371, column: 3, scope: !2948)
!2952 = distinct !{!2952, !2946, !2953, !1450, !1451}
!2953 = !DILocation(line: 1372, column: 18, scope: !2935)
!2954 = !DILocation(line: 1373, column: 1, scope: !2935)
!2955 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !775, file: !775, line: 813, type: !2956, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !2967)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{!2496, !2958, !24}
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !1342, line: 80, baseType: !2960)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1342, line: 64, size: 160, elements: !2961)
!2961 = !{!2962, !2963, !2964, !2965, !2966}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !2960, file: !1342, line: 66, baseType: !24, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !2960, file: !1342, line: 69, baseType: !24, size: 32, offset: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !2960, file: !1342, line: 72, baseType: !24, size: 32, offset: 64)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !2960, file: !1342, line: 75, baseType: !24, size: 32, offset: 96)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !2960, file: !1342, line: 78, baseType: !24, size: 32, offset: 128)
!2967 = !{!2968, !2969, !2970}
!2968 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !2955, file: !775, line: 813, type: !2958)
!2969 = !DILocalVariable(name: "FLatency", arg: 2, scope: !2955, file: !775, line: 813, type: !24)
!2970 = !DILocalVariable(name: "tickstart", scope: !2955, file: !775, line: 815, type: !24)
!2971 = !DILocation(line: 0, scope: !2955)
!2972 = !DILocation(line: 818, column: 25, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2955, file: !775, line: 818, column: 7)
!2974 = !DILocation(line: 818, column: 7, scope: !2955)
!2975 = !DILocation(line: 833, column: 18, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2955, file: !775, line: 833, column: 7)
!2977 = !{!2978, !2442, i64 0}
!2978 = !{!"", !2442, i64 0, !2442, i64 4, !2442, i64 8, !2442, i64 12, !2442, i64 16, !2442, i64 20, !2442, i64 24, !2442, i64 28, !2442, i64 32}
!2979 = !DILocation(line: 833, column: 16, scope: !2976)
!2980 = !DILocation(line: 833, column: 7, scope: !2955)
!2981 = !DILocation(line: 836, column: 5, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2976, file: !775, line: 834, column: 3)
!2983 = !DILocation(line: 840, column: 9, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2982, file: !775, line: 840, column: 9)
!2985 = !DILocation(line: 840, column: 35, scope: !2984)
!2986 = !DILocation(line: 840, column: 9, scope: !2982)
!2987 = !DILocation(line: 848, column: 26, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2955, file: !775, line: 848, column: 5)
!2989 = !{!2990, !2442, i64 0}
!2990 = !{!"", !2442, i64 0, !2442, i64 4, !2442, i64 8, !2442, i64 12, !2442, i64 16}
!2991 = !DILocation(line: 848, column: 37, scope: !2988)
!2992 = !DILocation(line: 848, column: 59, scope: !2988)
!2993 = !DILocation(line: 848, column: 5, scope: !2955)
!2994 = !DILocation(line: 852, column: 41, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2996, file: !775, line: 852, column: 9)
!2996 = distinct !DILexicalBlock(scope: !2988, file: !775, line: 849, column: 3)
!2997 = !DILocation(line: 852, column: 64, scope: !2995)
!2998 = !DILocation(line: 852, column: 9, scope: !2996)
!2999 = !DILocation(line: 854, column: 7, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2995, file: !775, line: 853, column: 5)
!3001 = !DILocation(line: 855, column: 5, scope: !3000)
!3002 = !DILocation(line: 857, column: 41, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2996, file: !775, line: 857, column: 9)
!3004 = !DILocation(line: 857, column: 64, scope: !3003)
!3005 = !DILocation(line: 857, column: 9, scope: !2996)
!3006 = !DILocation(line: 859, column: 7, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !3003, file: !775, line: 858, column: 5)
!3008 = !DILocation(line: 860, column: 5, scope: !3007)
!3009 = !DILocation(line: 864, column: 5, scope: !2996)
!3010 = !{!2990, !2442, i64 8}
!3011 = !DILocation(line: 865, column: 3, scope: !2996)
!3012 = !DILocation(line: 868, column: 39, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !2955, file: !775, line: 868, column: 7)
!3014 = !DILocation(line: 868, column: 63, scope: !3013)
!3015 = !DILocation(line: 868, column: 7, scope: !2955)
!3016 = !DILocation(line: 873, column: 28, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3018, file: !775, line: 873, column: 9)
!3018 = distinct !DILexicalBlock(scope: !3013, file: !775, line: 869, column: 3)
!3019 = !{!2990, !2442, i64 4}
!3020 = !DILocation(line: 873, column: 9, scope: !3018)
!3021 = !DILocation(line: 876, column: 11, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !775, line: 876, column: 11)
!3023 = distinct !DILexicalBlock(scope: !3017, file: !775, line: 874, column: 5)
!3024 = !DILocation(line: 876, column: 47, scope: !3022)
!3025 = !DILocation(line: 876, column: 11, scope: !3023)
!3026 = !DILocation(line: 885, column: 11, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3028, file: !775, line: 885, column: 11)
!3028 = distinct !DILexicalBlock(scope: !3029, file: !775, line: 883, column: 5)
!3029 = distinct !DILexicalBlock(scope: !3017, file: !775, line: 882, column: 14)
!3030 = !DILocation(line: 885, column: 47, scope: !3027)
!3031 = !DILocation(line: 885, column: 11, scope: !3028)
!3032 = !DILocation(line: 894, column: 11, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !775, line: 894, column: 11)
!3034 = distinct !DILexicalBlock(scope: !3029, file: !775, line: 892, column: 5)
!3035 = !DILocation(line: 894, column: 47, scope: !3033)
!3036 = !DILocation(line: 894, column: 11, scope: !3034)
!3037 = !DILocation(line: 899, column: 5, scope: !3018)
!3038 = !DILocation(line: 902, column: 17, scope: !3018)
!3039 = !DILocation(line: 904, column: 5, scope: !3018)
!3040 = !DILocation(line: 904, column: 12, scope: !3018)
!3041 = !DILocation(line: 904, column: 65, scope: !3018)
!3042 = !DILocation(line: 904, column: 78, scope: !3018)
!3043 = !DILocation(line: 904, column: 42, scope: !3018)
!3044 = !DILocation(line: 906, column: 12, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3046, file: !775, line: 906, column: 11)
!3046 = distinct !DILexicalBlock(scope: !3018, file: !775, line: 905, column: 5)
!3047 = !DILocation(line: 906, column: 26, scope: !3045)
!3048 = !DILocation(line: 906, column: 39, scope: !3045)
!3049 = !DILocation(line: 906, column: 11, scope: !3046)
!3050 = distinct !{!3050, !3039, !3051, !1450, !1451}
!3051 = !DILocation(line: 910, column: 5, scope: !3018)
!3052 = !DILocation(line: 915, column: 18, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !2955, file: !775, line: 915, column: 7)
!3054 = !DILocation(line: 915, column: 16, scope: !3053)
!3055 = !DILocation(line: 915, column: 7, scope: !2955)
!3056 = !DILocation(line: 918, column: 5, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3053, file: !775, line: 916, column: 3)
!3058 = !DILocation(line: 922, column: 9, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3057, file: !775, line: 922, column: 9)
!3060 = !DILocation(line: 922, column: 35, scope: !3059)
!3061 = !DILocation(line: 922, column: 9, scope: !3057)
!3062 = !DILocation(line: 930, column: 26, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !2955, file: !775, line: 930, column: 5)
!3064 = !DILocation(line: 930, column: 37, scope: !3063)
!3065 = !DILocation(line: 930, column: 60, scope: !3063)
!3066 = !DILocation(line: 930, column: 5, scope: !2955)
!3067 = !DILocation(line: 933, column: 5, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3063, file: !775, line: 931, column: 3)
!3069 = !{!2990, !2442, i64 12}
!3070 = !DILocation(line: 934, column: 3, scope: !3068)
!3071 = !DILocation(line: 937, column: 39, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !2955, file: !775, line: 937, column: 7)
!3073 = !DILocation(line: 937, column: 62, scope: !3072)
!3074 = !DILocation(line: 937, column: 7, scope: !2955)
!3075 = !DILocation(line: 940, column: 5, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3072, file: !775, line: 938, column: 3)
!3077 = !{!2990, !2442, i64 16}
!3078 = !DILocation(line: 941, column: 3, scope: !3076)
!3079 = !DILocation(line: 944, column: 21, scope: !2955)
!3080 = !DILocation(line: 944, column: 70, scope: !2955)
!3081 = !DILocation(line: 944, column: 92, scope: !2955)
!3082 = !DILocation(line: 944, column: 50, scope: !2955)
!3083 = !DILocation(line: 944, column: 47, scope: !2955)
!3084 = !DILocation(line: 944, column: 19, scope: !2955)
!3085 = !DILocation(line: 947, column: 16, scope: !2955)
!3086 = !DILocation(line: 947, column: 3, scope: !2955)
!3087 = !DILocation(line: 949, column: 3, scope: !2955)
!3088 = !DILocation(line: 950, column: 1, scope: !2955)
!3089 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !775, file: !775, line: 1082, type: !943, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !3090)
!3090 = !{!3091, !3092, !3094, !3095, !3096, !3097, !3098}
!3091 = !DILocalVariable(name: "aPLLMULFactorTable", scope: !3089, file: !775, line: 1088, type: !421)
!3092 = !DILocalVariable(name: "aPredivFactorTable", scope: !3089, file: !775, line: 1092, type: !3093)
!3093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !418, size: 16, elements: !397)
!3094 = !DILocalVariable(name: "tmpreg", scope: !3089, file: !775, line: 1096, type: !24)
!3095 = !DILocalVariable(name: "prediv", scope: !3089, file: !775, line: 1096, type: !24)
!3096 = !DILocalVariable(name: "pllclk", scope: !3089, file: !775, line: 1096, type: !24)
!3097 = !DILocalVariable(name: "pllmul", scope: !3089, file: !775, line: 1096, type: !24)
!3098 = !DILocalVariable(name: "sysclockfreq", scope: !3089, file: !775, line: 1097, type: !24)
!3099 = !DILocation(line: 1088, column: 17, scope: !3089)
!3100 = !DILocation(line: 1092, column: 17, scope: !3089)
!3101 = !DILocation(line: 0, scope: !3089)
!3102 = !DILocation(line: 1102, column: 17, scope: !3089)
!3103 = !DILocation(line: 1105, column: 18, scope: !3089)
!3104 = !DILocation(line: 1105, column: 3, scope: !3089)
!3105 = !DILocation(line: 1114, column: 73, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3107, file: !775, line: 1113, column: 5)
!3107 = distinct !DILexicalBlock(scope: !3089, file: !775, line: 1106, column: 3)
!3108 = !DILocation(line: 1114, column: 16, scope: !3106)
!3109 = !DILocation(line: 1115, column: 19, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3106, file: !775, line: 1115, column: 11)
!3111 = !DILocation(line: 1115, column: 38, scope: !3110)
!3112 = !DILocation(line: 1115, column: 11, scope: !3106)
!3113 = !DILocation(line: 1120, column: 53, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3110, file: !775, line: 1116, column: 7)
!3115 = !DILocation(line: 1120, column: 79, scope: !3114)
!3116 = !DILocation(line: 1120, column: 18, scope: !3114)
!3117 = !DILocation(line: 1146, column: 41, scope: !3114)
!3118 = !DILocation(line: 1146, column: 51, scope: !3114)
!3119 = !DILocation(line: 1148, column: 7, scope: !3114)
!3120 = !DILocation(line: 1152, column: 46, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3110, file: !775, line: 1150, column: 7)
!3122 = !DILocation(line: 0, scope: !3107)
!3123 = !DILocation(line: 1164, column: 3, scope: !3089)
!3124 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !775, file: !775, line: 1002, type: !3125, scopeLine: 1003, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !3127)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{null, !24, !24, !24}
!3127 = !{!3128, !3129, !3130, !3131, !3139}
!3128 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !3124, file: !775, line: 1002, type: !24)
!3129 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !3124, file: !775, line: 1002, type: !24)
!3130 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !3124, file: !775, line: 1002, type: !24)
!3131 = !DILocalVariable(name: "gpio", scope: !3124, file: !775, line: 1004, type: !3132)
!3132 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !886, line: 60, baseType: !3133)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !886, line: 47, size: 128, elements: !3134)
!3134 = !{!3135, !3136, !3137, !3138}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !3133, file: !886, line: 49, baseType: !24, size: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !3133, file: !886, line: 52, baseType: !24, size: 32, offset: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !3133, file: !886, line: 55, baseType: !24, size: 32, offset: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !3133, file: !886, line: 58, baseType: !24, size: 32, offset: 96)
!3139 = !DILocalVariable(name: "tmpreg", scope: !3140, file: !775, line: 1022, type: !23)
!3140 = distinct !DILexicalBlock(scope: !3124, file: !775, line: 1022, column: 3)
!3141 = !DILocation(line: 0, scope: !3124)
!3142 = !DILocation(line: 1004, column: 3, scope: !3124)
!3143 = !DILocation(line: 1004, column: 20, scope: !3124)
!3144 = !DILocation(line: 1016, column: 8, scope: !3124)
!3145 = !DILocation(line: 1016, column: 18, scope: !3124)
!3146 = !{!3147, !2442, i64 4}
!3147 = !{!"", !2442, i64 0, !2442, i64 4, !2442, i64 8, !2442, i64 12}
!3148 = !DILocation(line: 1017, column: 8, scope: !3124)
!3149 = !DILocation(line: 1017, column: 18, scope: !3124)
!3150 = !{!3147, !2442, i64 12}
!3151 = !DILocation(line: 1018, column: 8, scope: !3124)
!3152 = !DILocation(line: 1018, column: 18, scope: !3124)
!3153 = !{!3147, !2442, i64 8}
!3154 = !DILocation(line: 1019, column: 8, scope: !3124)
!3155 = !DILocation(line: 1019, column: 18, scope: !3124)
!3156 = !{!3147, !2442, i64 0}
!3157 = !DILocation(line: 1022, column: 3, scope: !3140)
!3158 = !{!2441, !2442, i64 24}
!3159 = !DILocation(line: 1022, column: 3, scope: !3124)
!3160 = !DILocation(line: 1024, column: 3, scope: !3124)
!3161 = !DILocation(line: 1027, column: 3, scope: !3124)
!3162 = !DILocation(line: 1028, column: 1, scope: !3124)
!3163 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !775, file: !775, line: 1039, type: !4, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !283)
!3164 = !DILocation(line: 1041, column: 38, scope: !3163)
!3165 = !DILocation(line: 1042, column: 1, scope: !3163)
!3166 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !775, file: !775, line: 1048, type: !4, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !283)
!3167 = !DILocation(line: 1050, column: 38, scope: !3166)
!3168 = !DILocation(line: 1051, column: 1, scope: !3166)
!3169 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !775, file: !775, line: 1176, type: !943, scopeLine: 1177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !283)
!3170 = !DILocation(line: 1178, column: 10, scope: !3169)
!3171 = !DILocation(line: 1178, column: 3, scope: !3169)
!3172 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !775, file: !775, line: 1187, type: !943, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !283)
!3173 = !DILocation(line: 1190, column: 11, scope: !3172)
!3174 = !DILocation(line: 1190, column: 56, scope: !3172)
!3175 = !DILocation(line: 1190, column: 79, scope: !3172)
!3176 = !DILocation(line: 1190, column: 36, scope: !3172)
!3177 = !DILocation(line: 1190, column: 33, scope: !3172)
!3178 = !DILocation(line: 1190, column: 3, scope: !3172)
!3179 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !775, file: !775, line: 1199, type: !943, scopeLine: 1200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !283)
!3180 = !DILocation(line: 1202, column: 11, scope: !3179)
!3181 = !DILocation(line: 1202, column: 56, scope: !3179)
!3182 = !DILocation(line: 1202, column: 79, scope: !3179)
!3183 = !DILocation(line: 1202, column: 36, scope: !3179)
!3184 = !DILocation(line: 1202, column: 33, scope: !3179)
!3185 = !DILocation(line: 1202, column: 3, scope: !3179)
!3186 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !775, file: !775, line: 1212, type: !3187, scopeLine: 1213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !3189)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{null, !2569}
!3189 = !{!3190}
!3190 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !3186, file: !775, line: 1212, type: !2569)
!3191 = !DILocation(line: 0, scope: !3186)
!3192 = !DILocation(line: 1218, column: 22, scope: !3186)
!3193 = !DILocation(line: 1218, column: 37, scope: !3186)
!3194 = !DILocation(line: 1227, column: 13, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3186, file: !775, line: 1227, column: 7)
!3196 = !DILocation(line: 1227, column: 16, scope: !3195)
!3197 = !DILocation(line: 1227, column: 33, scope: !3195)
!3198 = !DILocation(line: 1227, column: 7, scope: !3186)
!3199 = !DILocation(line: 1229, column: 24, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3195, file: !775, line: 1228, column: 3)
!3201 = !DILocation(line: 1229, column: 33, scope: !3200)
!3202 = !DILocation(line: 1230, column: 3, scope: !3200)
!3203 = !DILocation(line: 1231, column: 18, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3195, file: !775, line: 1231, column: 12)
!3205 = !DILocation(line: 1231, column: 21, scope: !3204)
!3206 = !DILocation(line: 1231, column: 37, scope: !3204)
!3207 = !DILocation(line: 0, scope: !3204)
!3208 = !DILocation(line: 1231, column: 12, scope: !3195)
!3209 = !DILocation(line: 1233, column: 33, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3204, file: !775, line: 1232, column: 3)
!3211 = !DILocation(line: 1234, column: 3, scope: !3210)
!3212 = !DILocation(line: 1237, column: 33, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3204, file: !775, line: 1236, column: 3)
!3214 = !DILocation(line: 1239, column: 39, scope: !3186)
!3215 = !DILocation(line: 1239, column: 22, scope: !3186)
!3216 = !DILocation(line: 1239, column: 37, scope: !3186)
!3217 = !DILocation(line: 1242, column: 13, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3186, file: !775, line: 1242, column: 7)
!3219 = !DILocation(line: 1242, column: 16, scope: !3218)
!3220 = !DILocation(line: 0, scope: !3218)
!3221 = !DILocation(line: 1251, column: 61, scope: !3186)
!3222 = !DILocation(line: 1251, column: 82, scope: !3186)
!3223 = !DILocation(line: 1251, column: 22, scope: !3186)
!3224 = !DILocation(line: 1251, column: 42, scope: !3186)
!3225 = !DILocation(line: 1254, column: 13, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3186, file: !775, line: 1254, column: 7)
!3227 = !DILocation(line: 1254, column: 18, scope: !3226)
!3228 = !DILocation(line: 1254, column: 37, scope: !3226)
!3229 = !DILocation(line: 1254, column: 7, scope: !3186)
!3230 = !DILocation(line: 1256, column: 24, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3226, file: !775, line: 1255, column: 3)
!3232 = !DILocation(line: 1256, column: 33, scope: !3231)
!3233 = !DILocation(line: 1257, column: 3, scope: !3231)
!3234 = !DILocation(line: 1258, column: 18, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3226, file: !775, line: 1258, column: 12)
!3236 = !DILocation(line: 1258, column: 23, scope: !3235)
!3237 = !DILocation(line: 1258, column: 41, scope: !3235)
!3238 = !DILocation(line: 0, scope: !3235)
!3239 = !DILocation(line: 1258, column: 12, scope: !3226)
!3240 = !DILocation(line: 1260, column: 33, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3235, file: !775, line: 1259, column: 3)
!3242 = !DILocation(line: 1261, column: 3, scope: !3241)
!3243 = !DILocation(line: 1264, column: 33, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3235, file: !775, line: 1263, column: 3)
!3245 = !DILocation(line: 1268, column: 13, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3186, file: !775, line: 1268, column: 7)
!3247 = !DILocation(line: 1268, column: 17, scope: !3246)
!3248 = !DILocation(line: 0, scope: !3246)
!3249 = !DILocation(line: 1279, column: 13, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3186, file: !775, line: 1279, column: 7)
!3251 = !DILocation(line: 1279, column: 16, scope: !3250)
!3252 = !DILocation(line: 1279, column: 32, scope: !3250)
!3253 = !DILocation(line: 1279, column: 7, scope: !3186)
!3254 = !DILocation(line: 0, scope: !3250)
!3255 = !DILocation(line: 1287, column: 54, scope: !3186)
!3256 = !DILocation(line: 1287, column: 59, scope: !3186)
!3257 = !DILocation(line: 1287, column: 26, scope: !3186)
!3258 = !DILocation(line: 1287, column: 36, scope: !3186)
!3259 = !DILocation(line: 1288, column: 51, scope: !3186)
!3260 = !DILocation(line: 1288, column: 56, scope: !3186)
!3261 = !DILocation(line: 1288, column: 26, scope: !3186)
!3262 = !DILocation(line: 1288, column: 33, scope: !3186)
!3263 = !DILocation(line: 1302, column: 1, scope: !3186)
!3264 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !775, file: !775, line: 1312, type: !3265, scopeLine: 1313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !3267)
!3265 = !DISubroutineType(types: !3266)
!3266 = !{null, !2958, !538}
!3267 = !{!3268, !3269}
!3268 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !3264, file: !775, line: 1312, type: !2958)
!3269 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !3264, file: !775, line: 1312, type: !538)
!3270 = !DILocation(line: 0, scope: !3264)
!3271 = !DILocation(line: 1319, column: 22, scope: !3264)
!3272 = !DILocation(line: 1319, column: 32, scope: !3264)
!3273 = !DILocation(line: 1322, column: 53, scope: !3264)
!3274 = !DILocation(line: 1322, column: 58, scope: !3264)
!3275 = !DILocation(line: 1322, column: 22, scope: !3264)
!3276 = !DILocation(line: 1322, column: 35, scope: !3264)
!3277 = !DILocation(line: 1325, column: 54, scope: !3264)
!3278 = !DILocation(line: 1325, column: 59, scope: !3264)
!3279 = !DILocation(line: 1325, column: 22, scope: !3264)
!3280 = !DILocation(line: 1325, column: 36, scope: !3264)
!3281 = !DILocation(line: 1328, column: 55, scope: !3264)
!3282 = !DILocation(line: 1328, column: 60, scope: !3264)
!3283 = !DILocation(line: 1328, column: 22, scope: !3264)
!3284 = !DILocation(line: 1328, column: 37, scope: !3264)
!3285 = !DILocation(line: 1331, column: 56, scope: !3264)
!3286 = !DILocation(line: 1331, column: 79, scope: !3264)
!3287 = !DILocation(line: 1331, column: 22, scope: !3264)
!3288 = !DILocation(line: 1331, column: 37, scope: !3264)
!3289 = !DILocation(line: 1335, column: 34, scope: !3264)
!3290 = !DILocation(line: 1335, column: 38, scope: !3264)
!3291 = !DILocation(line: 1335, column: 14, scope: !3264)
!3292 = !DILocation(line: 1340, column: 1, scope: !3264)
!3293 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !775, file: !775, line: 1347, type: !4, scopeLine: 1348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !283)
!3294 = !DILocation(line: 1350, column: 7, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3293, file: !775, line: 1350, column: 7)
!3296 = !DILocation(line: 1350, column: 7, scope: !3293)
!3297 = !DILocation(line: 1353, column: 5, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3295, file: !775, line: 1351, column: 3)
!3299 = !DILocation(line: 1356, column: 5, scope: !3298)
!3300 = !DILocation(line: 1357, column: 3, scope: !3298)
!3301 = !DILocation(line: 1358, column: 1, scope: !3293)
!3302 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !775, file: !775, line: 1379, type: !4, scopeLine: 1380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !774, retainedNodes: !283)
!3303 = !DILocation(line: 1384, column: 1, scope: !3302)
!3304 = distinct !DISubprogram(name: "HAL_Init", scope: !427, file: !427, line: 142, type: !2494, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3305 = !DILocation(line: 152, column: 3, scope: !3304)
!3306 = !DILocation(line: 157, column: 3, scope: !3304)
!3307 = !DILocation(line: 160, column: 3, scope: !3304)
!3308 = !DILocation(line: 163, column: 3, scope: !3304)
!3309 = !DILocation(line: 166, column: 3, scope: !3304)
!3310 = distinct !DISubprogram(name: "HAL_InitTick", scope: !427, file: !427, line: 234, type: !3311, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !3313)
!3311 = !DISubroutineType(types: !3312)
!3312 = !{!2496, !24}
!3313 = !{!3314}
!3314 = !DILocalVariable(name: "TickPriority", arg: 1, scope: !3310, file: !427, line: 234, type: !24)
!3315 = !DILocation(line: 0, scope: !3310)
!3316 = !DILocation(line: 237, column: 26, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3310, file: !427, line: 237, column: 7)
!3318 = !DILocation(line: 237, column: 53, scope: !3317)
!3319 = !DILocation(line: 237, column: 51, scope: !3317)
!3320 = !DILocation(line: 237, column: 42, scope: !3317)
!3321 = !DILocation(line: 237, column: 7, scope: !3317)
!3322 = !DILocation(line: 237, column: 66, scope: !3317)
!3323 = !DILocation(line: 237, column: 7, scope: !3310)
!3324 = !DILocation(line: 245, column: 5, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3326, file: !427, line: 244, column: 3)
!3326 = distinct !DILexicalBlock(scope: !3310, file: !427, line: 243, column: 7)
!3327 = !DILocation(line: 246, column: 16, scope: !3325)
!3328 = !DILocation(line: 254, column: 3, scope: !3310)
!3329 = !DILocation(line: 255, column: 1, scope: !3310)
!3330 = distinct !DISubprogram(name: "HAL_MspInit", scope: !427, file: !427, line: 200, type: !4, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3331 = !DILocation(line: 205, column: 1, scope: !3330)
!3332 = distinct !DISubprogram(name: "HAL_DeInit", scope: !427, file: !427, line: 175, type: !2494, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3333 = !DILocation(line: 178, column: 3, scope: !3332)
!3334 = !{!2441, !2442, i64 12}
!3335 = !DILocation(line: 179, column: 3, scope: !3332)
!3336 = !{!2441, !2442, i64 16}
!3337 = !DILocation(line: 181, column: 3, scope: !3332)
!3338 = !DILocation(line: 182, column: 3, scope: !3332)
!3339 = !DILocation(line: 190, column: 3, scope: !3332)
!3340 = !DILocation(line: 193, column: 3, scope: !3332)
!3341 = distinct !DISubprogram(name: "HAL_MspDeInit", scope: !427, file: !427, line: 211, type: !4, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3342 = !DILocation(line: 216, column: 1, scope: !3341)
!3343 = distinct !DISubprogram(name: "HAL_IncTick", scope: !427, file: !427, line: 293, type: !4, scopeLine: 294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3344 = !DILocation(line: 295, column: 13, scope: !3343)
!3345 = !DILocation(line: 295, column: 10, scope: !3343)
!3346 = !DILocation(line: 296, column: 1, scope: !3343)
!3347 = distinct !DISubprogram(name: "HAL_GetTick", scope: !427, file: !427, line: 304, type: !943, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3348 = !DILocation(line: 306, column: 10, scope: !3347)
!3349 = !DILocation(line: 306, column: 3, scope: !3347)
!3350 = distinct !DISubprogram(name: "HAL_GetTickPrio", scope: !427, file: !427, line: 313, type: !943, scopeLine: 314, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3351 = !DILocation(line: 315, column: 10, scope: !3350)
!3352 = !DILocation(line: 315, column: 3, scope: !3350)
!3353 = distinct !DISubprogram(name: "HAL_SetTickFreq", scope: !427, file: !427, line: 322, type: !3354, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !3356)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{!2496, !542}
!3356 = !{!3357, !3358}
!3357 = !DILocalVariable(name: "Freq", arg: 1, scope: !3353, file: !427, line: 322, type: !542)
!3358 = !DILocalVariable(name: "status", scope: !3353, file: !427, line: 324, type: !2496)
!3359 = !DILocation(line: 0, scope: !3353)
!3360 = !DILocation(line: 327, column: 7, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3353, file: !427, line: 327, column: 7)
!3362 = !DILocation(line: 327, column: 18, scope: !3361)
!3363 = !DILocation(line: 327, column: 7, scope: !3353)
!3364 = !DILocation(line: 330, column: 27, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3361, file: !427, line: 328, column: 3)
!3366 = !DILocation(line: 330, column: 14, scope: !3365)
!3367 = !DILocation(line: 331, column: 16, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3365, file: !427, line: 331, column: 9)
!3369 = !DILocation(line: 331, column: 9, scope: !3365)
!3370 = !DILocation(line: 333, column: 18, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3368, file: !427, line: 332, column: 5)
!3372 = !DILocation(line: 334, column: 5, scope: !3371)
!3373 = !DILocation(line: 337, column: 3, scope: !3353)
!3374 = distinct !DISubprogram(name: "HAL_GetTickFreq", scope: !427, file: !427, line: 344, type: !3375, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3375 = !DISubroutineType(types: !3376)
!3376 = !{!542}
!3377 = !DILocation(line: 346, column: 10, scope: !3374)
!3378 = !DILocation(line: 346, column: 3, scope: !3374)
!3379 = distinct !DISubprogram(name: "HAL_Delay", scope: !427, file: !427, line: 360, type: !2936, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !3380)
!3380 = !{!3381, !3382, !3383}
!3381 = !DILocalVariable(name: "Delay", arg: 1, scope: !3379, file: !427, line: 360, type: !24)
!3382 = !DILocalVariable(name: "tickstart", scope: !3379, file: !427, line: 362, type: !24)
!3383 = !DILocalVariable(name: "wait", scope: !3379, file: !427, line: 363, type: !24)
!3384 = !DILocation(line: 0, scope: !3379)
!3385 = !DILocation(line: 362, column: 24, scope: !3379)
!3386 = !DILocation(line: 366, column: 12, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3379, file: !427, line: 366, column: 7)
!3388 = !DILocation(line: 366, column: 7, scope: !3379)
!3389 = !DILocation(line: 371, column: 3, scope: !3379)
!3390 = !DILocation(line: 371, column: 11, scope: !3379)
!3391 = !DILocation(line: 371, column: 25, scope: !3379)
!3392 = !DILocation(line: 371, column: 38, scope: !3379)
!3393 = distinct !{!3393, !3389, !3394, !1450, !1451}
!3394 = !DILocation(line: 373, column: 3, scope: !3379)
!3395 = !DILocation(line: 374, column: 1, scope: !3379)
!3396 = distinct !DISubprogram(name: "HAL_SuspendTick", scope: !427, file: !427, line: 386, type: !4, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3397 = !DILocation(line: 389, column: 3, scope: !3396)
!3398 = !DILocation(line: 390, column: 1, scope: !3396)
!3399 = distinct !DISubprogram(name: "HAL_ResumeTick", scope: !427, file: !427, line: 402, type: !4, scopeLine: 403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3400 = !DILocation(line: 405, column: 3, scope: !3399)
!3401 = !DILocation(line: 406, column: 1, scope: !3399)
!3402 = distinct !DISubprogram(name: "HAL_GetHalVersion", scope: !427, file: !427, line: 412, type: !943, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3403 = !DILocation(line: 414, column: 3, scope: !3402)
!3404 = distinct !DISubprogram(name: "HAL_GetREVID", scope: !427, file: !427, line: 428, type: !943, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3405 = !DILocation(line: 430, column: 20, scope: !3404)
!3406 = !DILocation(line: 430, column: 28, scope: !3404)
!3407 = !DILocation(line: 430, column: 3, scope: !3404)
!3408 = distinct !DISubprogram(name: "HAL_GetDEVID", scope: !427, file: !427, line: 444, type: !943, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3409 = !DILocation(line: 446, column: 20, scope: !3408)
!3410 = !DILocation(line: 446, column: 28, scope: !3408)
!3411 = !DILocation(line: 446, column: 3, scope: !3408)
!3412 = distinct !DISubprogram(name: "HAL_GetUIDw0", scope: !427, file: !427, line: 453, type: !943, scopeLine: 454, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3413 = !DILocation(line: 455, column: 11, scope: !3412)
!3414 = !DILocation(line: 455, column: 4, scope: !3412)
!3415 = distinct !DISubprogram(name: "HAL_GetUIDw1", scope: !427, file: !427, line: 462, type: !943, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3416 = !DILocation(line: 464, column: 11, scope: !3415)
!3417 = !DILocation(line: 464, column: 4, scope: !3415)
!3418 = distinct !DISubprogram(name: "HAL_GetUIDw2", scope: !427, file: !427, line: 471, type: !943, scopeLine: 472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3419 = !DILocation(line: 473, column: 11, scope: !3418)
!3420 = !DILocation(line: 473, column: 4, scope: !3418)
!3421 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGSleepMode", scope: !427, file: !427, line: 480, type: !4, scopeLine: 481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3422 = !DILocation(line: 482, column: 3, scope: !3421)
!3423 = !{!2790, !2442, i64 4}
!3424 = !DILocation(line: 483, column: 1, scope: !3421)
!3425 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGSleepMode", scope: !427, file: !427, line: 496, type: !4, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3426 = !DILocation(line: 498, column: 3, scope: !3425)
!3427 = !DILocation(line: 499, column: 1, scope: !3425)
!3428 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStopMode", scope: !427, file: !427, line: 526, type: !4, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3429 = !DILocation(line: 528, column: 3, scope: !3428)
!3430 = !DILocation(line: 529, column: 1, scope: !3428)
!3431 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStopMode", scope: !427, file: !427, line: 542, type: !4, scopeLine: 543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3432 = !DILocation(line: 544, column: 3, scope: !3431)
!3433 = !DILocation(line: 545, column: 1, scope: !3431)
!3434 = distinct !DISubprogram(name: "HAL_DBGMCU_EnableDBGStandbyMode", scope: !427, file: !427, line: 558, type: !4, scopeLine: 559, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3435 = !DILocation(line: 560, column: 3, scope: !3434)
!3436 = !DILocation(line: 561, column: 1, scope: !3434)
!3437 = distinct !DISubprogram(name: "HAL_DBGMCU_DisableDBGStandbyMode", scope: !427, file: !427, line: 574, type: !4, scopeLine: 575, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !426, retainedNodes: !283)
!3438 = !DILocation(line: 576, column: 3, scope: !3437)
!3439 = !DILocation(line: 577, column: 1, scope: !3437)
!3440 = distinct !DISubprogram(name: "HAL_NVIC_SetPriorityGrouping", scope: !829, file: !829, line: 143, type: !2936, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3441)
!3441 = !{!3442}
!3442 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !3440, file: !829, line: 143, type: !24)
!3443 = !DILocation(line: 0, scope: !3440)
!3444 = !DILocation(line: 149, column: 3, scope: !3440)
!3445 = !DILocation(line: 150, column: 1, scope: !3440)
!3446 = distinct !DISubprogram(name: "__NVIC_SetPriorityGrouping", scope: !373, file: !373, line: 1480, type: !2936, scopeLine: 1481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3447)
!3447 = !{!3448, !3449, !3450}
!3448 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !3446, file: !373, line: 1480, type: !24)
!3449 = !DILocalVariable(name: "reg_value", scope: !3446, file: !373, line: 1482, type: !24)
!3450 = !DILocalVariable(name: "PriorityGroupTmp", scope: !3446, file: !373, line: 1483, type: !24)
!3451 = !DILocation(line: 0, scope: !3446)
!3452 = !DILocation(line: 1485, column: 22, scope: !3446)
!3453 = !{!2452, !2442, i64 12}
!3454 = !DILocation(line: 1486, column: 13, scope: !3446)
!3455 = !DILocation(line: 1489, column: 35, scope: !3446)
!3456 = !DILocation(line: 1488, column: 62, scope: !3446)
!3457 = !DILocation(line: 1490, column: 14, scope: !3446)
!3458 = !DILocation(line: 1491, column: 1, scope: !3446)
!3459 = distinct !DISubprogram(name: "HAL_NVIC_SetPriority", scope: !829, file: !829, line: 165, type: !3460, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3463)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{null, !3462, !24, !24}
!3462 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !19, line: 126, baseType: !442)
!3463 = !{!3464, !3465, !3466, !3467}
!3464 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3459, file: !829, line: 165, type: !3462)
!3465 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !3459, file: !829, line: 165, type: !24)
!3466 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !3459, file: !829, line: 165, type: !24)
!3467 = !DILocalVariable(name: "prioritygroup", scope: !3459, file: !829, line: 167, type: !24)
!3468 = !DILocation(line: 0, scope: !3459)
!3469 = !DILocation(line: 173, column: 19, scope: !3459)
!3470 = !{i32 0, i32 8}
!3471 = !DILocation(line: 175, column: 26, scope: !3459)
!3472 = !DILocation(line: 175, column: 3, scope: !3459)
!3473 = !DILocation(line: 176, column: 1, scope: !3459)
!3474 = distinct !DISubprogram(name: "__NVIC_GetPriorityGrouping", scope: !373, file: !373, line: 1499, type: !943, scopeLine: 1500, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !283)
!3475 = !DILocation(line: 1501, column: 28, scope: !3474)
!3476 = !DILocation(line: 1501, column: 60, scope: !3474)
!3477 = !DILocation(line: 1501, column: 3, scope: !3474)
!3478 = distinct !DISubprogram(name: "NVIC_EncodePriority", scope: !373, file: !373, line: 1686, type: !3479, scopeLine: 1687, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3481)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{!24, !24, !24, !24}
!3481 = !{!3482, !3483, !3484, !3485, !3486, !3487}
!3482 = !DILocalVariable(name: "PriorityGroup", arg: 1, scope: !3478, file: !373, line: 1686, type: !24)
!3483 = !DILocalVariable(name: "PreemptPriority", arg: 2, scope: !3478, file: !373, line: 1686, type: !24)
!3484 = !DILocalVariable(name: "SubPriority", arg: 3, scope: !3478, file: !373, line: 1686, type: !24)
!3485 = !DILocalVariable(name: "PriorityGroupTmp", scope: !3478, file: !373, line: 1688, type: !24)
!3486 = !DILocalVariable(name: "PreemptPriorityBits", scope: !3478, file: !373, line: 1689, type: !24)
!3487 = !DILocalVariable(name: "SubPriorityBits", scope: !3478, file: !373, line: 1690, type: !24)
!3488 = !DILocation(line: 0, scope: !3478)
!3489 = !DILocation(line: 1688, column: 46, scope: !3478)
!3490 = !DILocation(line: 1692, column: 31, scope: !3478)
!3491 = !DILocation(line: 1692, column: 25, scope: !3478)
!3492 = !DILocation(line: 1693, column: 25, scope: !3478)
!3493 = !DILocation(line: 1696, column: 74, scope: !3478)
!3494 = !DILocation(line: 1696, column: 30, scope: !3478)
!3495 = !DILocation(line: 1696, column: 82, scope: !3478)
!3496 = !DILocation(line: 1697, column: 74, scope: !3478)
!3497 = !DILocation(line: 1697, column: 30, scope: !3478)
!3498 = !DILocation(line: 1696, column: 102, scope: !3478)
!3499 = !DILocation(line: 1695, column: 3, scope: !3478)
!3500 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !373, file: !373, line: 1639, type: !3501, scopeLine: 1640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3503)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{null, !3462, !24}
!3503 = !{!3504, !3505}
!3504 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3500, file: !373, line: 1639, type: !3462)
!3505 = !DILocalVariable(name: "priority", arg: 2, scope: !3500, file: !373, line: 1639, type: !24)
!3506 = !DILocation(line: 0, scope: !3500)
!3507 = !DILocation(line: 0, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3500, file: !373, line: 1641, column: 7)
!3509 = !DILocation(line: 1641, column: 7, scope: !3500)
!3510 = !DILocation(line: 1649, column: 1, scope: !3500)
!3511 = distinct !DISubprogram(name: "HAL_NVIC_EnableIRQ", scope: !829, file: !829, line: 187, type: !3512, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3514)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{null, !3462}
!3514 = !{!3515}
!3515 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3511, file: !829, line: 187, type: !3462)
!3516 = !DILocation(line: 0, scope: !3511)
!3517 = !DILocation(line: 193, column: 3, scope: !3511)
!3518 = !DILocation(line: 194, column: 1, scope: !3511)
!3519 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !373, file: !373, line: 1511, type: !3512, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3520)
!3520 = !{!3521}
!3521 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3519, file: !373, line: 1511, type: !3462)
!3522 = !DILocation(line: 0, scope: !3519)
!3523 = !DILocation(line: 1513, column: 23, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3519, file: !373, line: 1513, column: 7)
!3525 = !DILocation(line: 1513, column: 7, scope: !3519)
!3526 = !DILocation(line: 1515, column: 81, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3524, file: !373, line: 1514, column: 3)
!3528 = !DILocation(line: 1515, column: 60, scope: !3527)
!3529 = !DILocation(line: 1515, column: 34, scope: !3527)
!3530 = !DILocation(line: 1515, column: 5, scope: !3527)
!3531 = !DILocation(line: 1515, column: 43, scope: !3527)
!3532 = !DILocation(line: 1516, column: 3, scope: !3527)
!3533 = !DILocation(line: 1517, column: 1, scope: !3519)
!3534 = distinct !DISubprogram(name: "HAL_NVIC_DisableIRQ", scope: !829, file: !829, line: 203, type: !3512, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3535)
!3535 = !{!3536}
!3536 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3534, file: !829, line: 203, type: !3462)
!3537 = !DILocation(line: 0, scope: !3534)
!3538 = !DILocation(line: 209, column: 3, scope: !3534)
!3539 = !DILocation(line: 210, column: 1, scope: !3534)
!3540 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !373, file: !373, line: 1547, type: !3512, scopeLine: 1548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3541)
!3541 = !{!3542}
!3542 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3540, file: !373, line: 1547, type: !3462)
!3543 = !DILocation(line: 0, scope: !3540)
!3544 = !DILocation(line: 1549, column: 23, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3540, file: !373, line: 1549, column: 7)
!3546 = !DILocation(line: 1549, column: 7, scope: !3540)
!3547 = !DILocation(line: 1551, column: 81, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3545, file: !373, line: 1550, column: 3)
!3549 = !DILocation(line: 1551, column: 60, scope: !3548)
!3550 = !DILocation(line: 1551, column: 34, scope: !3548)
!3551 = !DILocation(line: 1551, column: 5, scope: !3548)
!3552 = !DILocation(line: 1551, column: 43, scope: !3548)
!3553 = !DILocation(line: 879, column: 3, scope: !3554, inlinedAt: !3556)
!3554 = distinct !DISubprogram(name: "__DSB", scope: !3555, file: !3555, line: 877, type: !4, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !283)
!3555 = !DIFile(filename: "../dep/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/Cicada-FW/build", checksumkind: CSK_MD5, checksum: "ba7e4770884341336138fcec9d34fc09")
!3556 = distinct !DILocation(line: 1552, column: 5, scope: !3548)
!3557 = !{i64 1222529}
!3558 = !DILocation(line: 868, column: 3, scope: !3559, inlinedAt: !3560)
!3559 = distinct !DISubprogram(name: "__ISB", scope: !3555, file: !3555, line: 866, type: !4, scopeLine: 867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !283)
!3560 = distinct !DILocation(line: 1553, column: 5, scope: !3548)
!3561 = !{i64 1222235}
!3562 = !DILocation(line: 1554, column: 3, scope: !3548)
!3563 = !DILocation(line: 1555, column: 1, scope: !3540)
!3564 = distinct !DISubprogram(name: "HAL_NVIC_SystemReset", scope: !829, file: !829, line: 216, type: !4, scopeLine: 217, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !283)
!3565 = !DILocation(line: 219, column: 3, scope: !3564)
!3566 = distinct !DISubprogram(name: "__NVIC_SystemReset", scope: !373, file: !373, line: 1762, type: !4, scopeLine: 1763, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !283)
!3567 = !DILocation(line: 879, column: 3, scope: !3554, inlinedAt: !3568)
!3568 = distinct !DILocation(line: 1764, column: 3, scope: !3566)
!3569 = !DILocation(line: 1767, column: 34, scope: !3566)
!3570 = !DILocation(line: 1767, column: 40, scope: !3566)
!3571 = !DILocation(line: 1767, column: 66, scope: !3566)
!3572 = !DILocation(line: 1766, column: 15, scope: !3566)
!3573 = !DILocation(line: 879, column: 3, scope: !3554, inlinedAt: !3574)
!3574 = distinct !DILocation(line: 1769, column: 3, scope: !3566)
!3575 = !DILocation(line: 1771, column: 3, scope: !3566)
!3576 = !DILocation(line: 1773, column: 5, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !373, line: 1772, column: 3)
!3578 = distinct !DILexicalBlock(scope: !3579, file: !373, line: 1771, column: 3)
!3579 = distinct !DILexicalBlock(scope: !3566, file: !373, line: 1771, column: 3)
!3580 = !{i64 2148746398}
!3581 = !DILocation(line: 1771, column: 3, scope: !3578)
!3582 = distinct !{!3582, !3583, !3584, !1451}
!3583 = !DILocation(line: 1771, column: 3, scope: !3579)
!3584 = !DILocation(line: 1774, column: 3, scope: !3579)
!3585 = distinct !DISubprogram(name: "HAL_SYSTICK_Config", scope: !829, file: !829, line: 229, type: !3586, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3588)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{!24, !24}
!3588 = !{!3589}
!3589 = !DILocalVariable(name: "TicksNumb", arg: 1, scope: !3585, file: !829, line: 229, type: !24)
!3590 = !DILocation(line: 0, scope: !3585)
!3591 = !DILocation(line: 231, column: 11, scope: !3585)
!3592 = !DILocation(line: 231, column: 4, scope: !3585)
!3593 = distinct !DISubprogram(name: "SysTick_Config", scope: !373, file: !373, line: 1834, type: !3586, scopeLine: 1835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3594)
!3594 = !{!3595}
!3595 = !DILocalVariable(name: "ticks", arg: 1, scope: !3593, file: !373, line: 1834, type: !24)
!3596 = !DILocation(line: 0, scope: !3593)
!3597 = !DILocation(line: 1836, column: 14, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3593, file: !373, line: 1836, column: 7)
!3599 = !DILocation(line: 1836, column: 21, scope: !3598)
!3600 = !DILocation(line: 1836, column: 7, scope: !3593)
!3601 = !DILocation(line: 1841, column: 18, scope: !3593)
!3602 = !DILocation(line: 1842, column: 3, scope: !3593)
!3603 = !DILocation(line: 1843, column: 18, scope: !3593)
!3604 = !DILocation(line: 1844, column: 18, scope: !3593)
!3605 = !DILocation(line: 1847, column: 3, scope: !3593)
!3606 = !DILocation(line: 1848, column: 1, scope: !3593)
!3607 = distinct !DISubprogram(name: "HAL_NVIC_GetPriorityGrouping", scope: !829, file: !829, line: 344, type: !943, scopeLine: 345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !283)
!3608 = !DILocation(line: 347, column: 10, scope: !3607)
!3609 = !DILocation(line: 347, column: 3, scope: !3607)
!3610 = distinct !DISubprogram(name: "HAL_NVIC_GetPriority", scope: !829, file: !829, line: 371, type: !3611, scopeLine: 372, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3613)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{null, !3462, !24, !538, !538}
!3613 = !{!3614, !3615, !3616, !3617}
!3614 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3610, file: !829, line: 371, type: !3462)
!3615 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !3610, file: !829, line: 371, type: !24)
!3616 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !3610, file: !829, line: 371, type: !538)
!3617 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !3610, file: !829, line: 371, type: !538)
!3618 = !DILocation(line: 0, scope: !3610)
!3619 = !DILocation(line: 376, column: 23, scope: !3610)
!3620 = !{i32 0, i32 16}
!3621 = !DILocation(line: 376, column: 3, scope: !3610)
!3622 = !DILocation(line: 377, column: 1, scope: !3610)
!3623 = distinct !DISubprogram(name: "__NVIC_GetPriority", scope: !373, file: !373, line: 1661, type: !3624, scopeLine: 1662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3626)
!3624 = !DISubroutineType(types: !3625)
!3625 = !{!24, !3462}
!3626 = !{!3627}
!3627 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3623, file: !373, line: 1661, type: !3462)
!3628 = !DILocation(line: 0, scope: !3623)
!3629 = !DILocation(line: 1664, column: 7, scope: !3623)
!3630 = !DILocation(line: 0, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3623, file: !373, line: 1664, column: 7)
!3632 = !DILocation(line: 1672, column: 1, scope: !3623)
!3633 = distinct !DISubprogram(name: "NVIC_DecodePriority", scope: !373, file: !373, line: 1713, type: !3634, scopeLine: 1714, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3637)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{null, !24, !24, !3636, !3636}
!3636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !538)
!3637 = !{!3638, !3639, !3640, !3641, !3642, !3643, !3644}
!3638 = !DILocalVariable(name: "Priority", arg: 1, scope: !3633, file: !373, line: 1713, type: !24)
!3639 = !DILocalVariable(name: "PriorityGroup", arg: 2, scope: !3633, file: !373, line: 1713, type: !24)
!3640 = !DILocalVariable(name: "pPreemptPriority", arg: 3, scope: !3633, file: !373, line: 1713, type: !3636)
!3641 = !DILocalVariable(name: "pSubPriority", arg: 4, scope: !3633, file: !373, line: 1713, type: !3636)
!3642 = !DILocalVariable(name: "PriorityGroupTmp", scope: !3633, file: !373, line: 1715, type: !24)
!3643 = !DILocalVariable(name: "PreemptPriorityBits", scope: !3633, file: !373, line: 1716, type: !24)
!3644 = !DILocalVariable(name: "SubPriorityBits", scope: !3633, file: !373, line: 1717, type: !24)
!3645 = !DILocation(line: 0, scope: !3633)
!3646 = !DILocation(line: 1715, column: 46, scope: !3633)
!3647 = !DILocation(line: 1719, column: 31, scope: !3633)
!3648 = !DILocation(line: 1719, column: 25, scope: !3633)
!3649 = !DILocation(line: 1720, column: 25, scope: !3633)
!3650 = !DILocation(line: 1722, column: 33, scope: !3633)
!3651 = !DILocation(line: 1722, column: 97, scope: !3633)
!3652 = !DILocation(line: 1722, column: 53, scope: !3633)
!3653 = !DILocation(line: 1722, column: 21, scope: !3633)
!3654 = !DILocation(line: 1723, column: 97, scope: !3633)
!3655 = !DILocation(line: 1723, column: 53, scope: !3633)
!3656 = !DILocation(line: 1723, column: 21, scope: !3633)
!3657 = !DILocation(line: 1724, column: 1, scope: !3633)
!3658 = distinct !DISubprogram(name: "HAL_NVIC_SetPendingIRQ", scope: !829, file: !829, line: 386, type: !3512, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3659)
!3659 = !{!3660}
!3660 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3658, file: !829, line: 386, type: !3462)
!3661 = !DILocation(line: 0, scope: !3658)
!3662 = !DILocation(line: 392, column: 3, scope: !3658)
!3663 = !DILocation(line: 393, column: 1, scope: !3658)
!3664 = distinct !DISubprogram(name: "__NVIC_SetPendingIRQ", scope: !373, file: !373, line: 1585, type: !3512, scopeLine: 1586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3665)
!3665 = !{!3666}
!3666 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3664, file: !373, line: 1585, type: !3462)
!3667 = !DILocation(line: 0, scope: !3664)
!3668 = !DILocation(line: 1587, column: 23, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3664, file: !373, line: 1587, column: 7)
!3670 = !DILocation(line: 1587, column: 7, scope: !3664)
!3671 = !DILocation(line: 1589, column: 81, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3669, file: !373, line: 1588, column: 3)
!3673 = !DILocation(line: 1589, column: 60, scope: !3672)
!3674 = !DILocation(line: 1589, column: 34, scope: !3672)
!3675 = !DILocation(line: 1589, column: 5, scope: !3672)
!3676 = !DILocation(line: 1589, column: 43, scope: !3672)
!3677 = !DILocation(line: 1590, column: 3, scope: !3672)
!3678 = !DILocation(line: 1591, column: 1, scope: !3664)
!3679 = distinct !DISubprogram(name: "HAL_NVIC_GetPendingIRQ", scope: !829, file: !829, line: 404, type: !3624, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3680)
!3680 = !{!3681}
!3681 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3679, file: !829, line: 404, type: !3462)
!3682 = !DILocation(line: 0, scope: !3679)
!3683 = !DILocation(line: 410, column: 10, scope: !3679)
!3684 = !DILocation(line: 410, column: 3, scope: !3679)
!3685 = distinct !DISubprogram(name: "__NVIC_GetPendingIRQ", scope: !373, file: !373, line: 1566, type: !3624, scopeLine: 1567, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3686)
!3686 = !{!3687}
!3687 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3685, file: !373, line: 1566, type: !3462)
!3688 = !DILocation(line: 0, scope: !3685)
!3689 = !DILocation(line: 1568, column: 23, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3685, file: !373, line: 1568, column: 7)
!3691 = !DILocation(line: 1568, column: 7, scope: !3685)
!3692 = !DILocation(line: 1570, column: 54, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3690, file: !373, line: 1569, column: 3)
!3694 = !DILocation(line: 1570, column: 25, scope: !3693)
!3695 = !DILocation(line: 1570, column: 91, scope: !3693)
!3696 = !DILocation(line: 1570, column: 23, scope: !3693)
!3697 = !DILocation(line: 1570, column: 5, scope: !3693)
!3698 = !DILocation(line: 0, scope: !3690)
!3699 = !DILocation(line: 1576, column: 1, scope: !3685)
!3700 = distinct !DISubprogram(name: "HAL_NVIC_ClearPendingIRQ", scope: !829, file: !829, line: 420, type: !3512, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3701)
!3701 = !{!3702}
!3702 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3700, file: !829, line: 420, type: !3462)
!3703 = !DILocation(line: 0, scope: !3700)
!3704 = !DILocation(line: 426, column: 3, scope: !3700)
!3705 = !DILocation(line: 427, column: 1, scope: !3700)
!3706 = distinct !DISubprogram(name: "__NVIC_ClearPendingIRQ", scope: !373, file: !373, line: 1600, type: !3512, scopeLine: 1601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3707)
!3707 = !{!3708}
!3708 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3706, file: !373, line: 1600, type: !3462)
!3709 = !DILocation(line: 0, scope: !3706)
!3710 = !DILocation(line: 1602, column: 23, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3706, file: !373, line: 1602, column: 7)
!3712 = !DILocation(line: 1602, column: 7, scope: !3706)
!3713 = !DILocation(line: 1604, column: 81, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3711, file: !373, line: 1603, column: 3)
!3715 = !DILocation(line: 1604, column: 60, scope: !3714)
!3716 = !DILocation(line: 1604, column: 34, scope: !3714)
!3717 = !DILocation(line: 1604, column: 5, scope: !3714)
!3718 = !DILocation(line: 1604, column: 43, scope: !3714)
!3719 = !DILocation(line: 1605, column: 3, scope: !3714)
!3720 = !DILocation(line: 1606, column: 1, scope: !3706)
!3721 = distinct !DISubprogram(name: "HAL_NVIC_GetActive", scope: !829, file: !829, line: 437, type: !3624, scopeLine: 438, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3722)
!3722 = !{!3723}
!3723 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3721, file: !829, line: 437, type: !3462)
!3724 = !DILocation(line: 0, scope: !3721)
!3725 = !DILocation(line: 443, column: 10, scope: !3721)
!3726 = !DILocation(line: 443, column: 3, scope: !3721)
!3727 = distinct !DISubprogram(name: "__NVIC_GetActive", scope: !373, file: !373, line: 1617, type: !3624, scopeLine: 1618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3728)
!3728 = !{!3729}
!3729 = !DILocalVariable(name: "IRQn", arg: 1, scope: !3727, file: !373, line: 1617, type: !3462)
!3730 = !DILocation(line: 0, scope: !3727)
!3731 = !DILocation(line: 1619, column: 23, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3727, file: !373, line: 1619, column: 7)
!3733 = !DILocation(line: 1619, column: 7, scope: !3727)
!3734 = !DILocation(line: 1621, column: 54, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3732, file: !373, line: 1620, column: 3)
!3736 = !DILocation(line: 1621, column: 25, scope: !3735)
!3737 = !DILocation(line: 1621, column: 91, scope: !3735)
!3738 = !DILocation(line: 1621, column: 23, scope: !3735)
!3739 = !DILocation(line: 1621, column: 5, scope: !3735)
!3740 = !DILocation(line: 0, scope: !3732)
!3741 = !DILocation(line: 1627, column: 1, scope: !3727)
!3742 = distinct !DISubprogram(name: "HAL_SYSTICK_CLKSourceConfig", scope: !829, file: !829, line: 454, type: !2936, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !3743)
!3743 = !{!3744}
!3744 = !DILocalVariable(name: "CLKSource", arg: 1, scope: !3742, file: !829, line: 454, type: !24)
!3745 = !DILocation(line: 0, scope: !3742)
!3746 = !DILocation(line: 458, column: 17, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3742, file: !829, line: 458, column: 7)
!3748 = !DILocation(line: 0, scope: !3747)
!3749 = !DILocation(line: 458, column: 7, scope: !3742)
!3750 = !DILocation(line: 466, column: 1, scope: !3742)
!3751 = distinct !DISubprogram(name: "HAL_SYSTICK_IRQHandler", scope: !829, file: !829, line: 472, type: !4, scopeLine: 473, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !283)
!3752 = !DILocation(line: 474, column: 3, scope: !3751)
!3753 = !DILocation(line: 475, column: 1, scope: !3751)
!3754 = distinct !DISubprogram(name: "HAL_SYSTICK_Callback", scope: !829, file: !829, line: 481, type: !4, scopeLine: 482, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !283)
!3755 = !DILocation(line: 486, column: 1, scope: !3754)
!3756 = distinct !DISubprogram(name: "HAL_GPIO_Init", scope: !883, file: !883, line: 178, type: !3757, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !3767)
!3757 = !DISubroutineType(types: !3758)
!3758 = !{null, !914, !3759}
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 32)
!3760 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !886, line: 60, baseType: !3761)
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !886, line: 47, size: 128, elements: !3762)
!3762 = !{!3763, !3764, !3765, !3766}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !3761, file: !886, line: 49, baseType: !24, size: 32)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !3761, file: !886, line: 52, baseType: !24, size: 32, offset: 32)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !3761, file: !886, line: 55, baseType: !24, size: 32, offset: 64)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !3761, file: !886, line: 58, baseType: !24, size: 32, offset: 96)
!3767 = !{!3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777}
!3768 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !3756, file: !883, line: 178, type: !914)
!3769 = !DILocalVariable(name: "GPIO_Init", arg: 2, scope: !3756, file: !883, line: 178, type: !3759)
!3770 = !DILocalVariable(name: "position", scope: !3756, file: !883, line: 180, type: !24)
!3771 = !DILocalVariable(name: "ioposition", scope: !3756, file: !883, line: 181, type: !24)
!3772 = !DILocalVariable(name: "iocurrent", scope: !3756, file: !883, line: 182, type: !24)
!3773 = !DILocalVariable(name: "temp", scope: !3756, file: !883, line: 183, type: !24)
!3774 = !DILocalVariable(name: "config", scope: !3756, file: !883, line: 184, type: !24)
!3775 = !DILocalVariable(name: "configregister", scope: !3756, file: !883, line: 185, type: !796)
!3776 = !DILocalVariable(name: "registeroffset", scope: !3756, file: !883, line: 186, type: !24)
!3777 = !DILocalVariable(name: "tmpreg", scope: !3778, file: !883, line: 291, type: !23)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !883, line: 291, column: 9)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !883, line: 289, column: 7)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !883, line: 288, column: 11)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !883, line: 203, column: 5)
!3782 = distinct !DILexicalBlock(scope: !3783, file: !883, line: 202, column: 9)
!3783 = distinct !DILexicalBlock(scope: !3756, file: !883, line: 195, column: 3)
!3784 = !DILocation(line: 0, scope: !3756)
!3785 = !DILocation(line: 194, column: 23, scope: !3756)
!3786 = !DILocation(line: 194, column: 41, scope: !3756)
!3787 = !DILocation(line: 194, column: 3, scope: !3756)
!3788 = !DILocation(line: 197, column: 26, scope: !3783)
!3789 = !DILocation(line: 200, column: 44, scope: !3783)
!3790 = !DILocation(line: 202, column: 19, scope: !3782)
!3791 = !DILocation(line: 202, column: 9, scope: !3783)
!3792 = !DILocation(line: 208, column: 26, scope: !3781)
!3793 = !DILocation(line: 208, column: 7, scope: !3781)
!3794 = !DILocation(line: 214, column: 31, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3781, file: !883, line: 209, column: 7)
!3796 = !DILocation(line: 215, column: 11, scope: !3795)
!3797 = !DILocation(line: 221, column: 31, scope: !3795)
!3798 = !DILocation(line: 221, column: 37, scope: !3795)
!3799 = !DILocation(line: 222, column: 11, scope: !3795)
!3800 = !DILocation(line: 228, column: 31, scope: !3795)
!3801 = !DILocation(line: 228, column: 37, scope: !3795)
!3802 = !DILocation(line: 229, column: 11, scope: !3795)
!3803 = !DILocation(line: 235, column: 31, scope: !3795)
!3804 = !DILocation(line: 235, column: 37, scope: !3795)
!3805 = !DILocation(line: 236, column: 11, scope: !3795)
!3806 = !DILocation(line: 248, column: 26, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3795, file: !883, line: 248, column: 15)
!3808 = !DILocation(line: 248, column: 15, scope: !3795)
!3809 = !DILocation(line: 257, column: 25, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !883, line: 253, column: 11)
!3811 = distinct !DILexicalBlock(scope: !3807, file: !883, line: 252, column: 20)
!3812 = !{!3813, !2442, i64 16}
!3813 = !{!"", !2442, i64 0, !2442, i64 4, !2442, i64 8, !2442, i64 12, !2442, i64 16, !2442, i64 20, !2442, i64 24}
!3814 = !DILocation(line: 258, column: 11, scope: !3810)
!3815 = !DILocation(line: 264, column: 24, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3811, file: !883, line: 260, column: 11)
!3817 = !{!3813, !2442, i64 20}
!3818 = !DILocation(line: 271, column: 11, scope: !3795)
!3819 = !DILocation(line: 280, column: 35, scope: !3781)
!3820 = !DILocation(line: 280, column: 24, scope: !3781)
!3821 = !DILocation(line: 281, column: 24, scope: !3781)
!3822 = !DILocation(line: 284, column: 7, scope: !3781)
!3823 = !DILocation(line: 288, column: 23, scope: !3780)
!3824 = !DILocation(line: 288, column: 28, scope: !3780)
!3825 = !DILocation(line: 288, column: 41, scope: !3780)
!3826 = !DILocation(line: 288, column: 11, scope: !3781)
!3827 = !DILocation(line: 291, column: 9, scope: !3778)
!3828 = !DILocation(line: 291, column: 9, scope: !3779)
!3829 = !DILocation(line: 292, column: 38, scope: !3779)
!3830 = !DILocation(line: 292, column: 16, scope: !3779)
!3831 = !DILocation(line: 293, column: 9, scope: !3779)
!3832 = !DILocation(line: 294, column: 9, scope: !3779)
!3833 = !DILocation(line: 295, column: 38, scope: !3779)
!3834 = !DILocation(line: 299, column: 25, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3779, file: !883, line: 299, column: 13)
!3836 = !DILocation(line: 299, column: 30, scope: !3835)
!3837 = !DILocation(line: 299, column: 46, scope: !3835)
!3838 = !DILocation(line: 299, column: 13, scope: !3779)
!3839 = !DILocation(line: 301, column: 11, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3835, file: !883, line: 300, column: 9)
!3841 = !{!3842, !2442, i64 0}
!3842 = !{!"", !2442, i64 0, !2442, i64 4, !2442, i64 8, !2442, i64 12, !2442, i64 16, !2442, i64 20}
!3843 = !DILocation(line: 302, column: 9, scope: !3840)
!3844 = !DILocation(line: 305, column: 11, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3835, file: !883, line: 304, column: 9)
!3846 = !DILocation(line: 0, scope: !3835)
!3847 = !DILocation(line: 309, column: 30, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3779, file: !883, line: 309, column: 13)
!3849 = !DILocation(line: 309, column: 47, scope: !3848)
!3850 = !DILocation(line: 309, column: 13, scope: !3779)
!3851 = !DILocation(line: 311, column: 11, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3848, file: !883, line: 310, column: 9)
!3853 = !{!3842, !2442, i64 4}
!3854 = !DILocation(line: 312, column: 9, scope: !3852)
!3855 = !DILocation(line: 315, column: 11, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3848, file: !883, line: 314, column: 9)
!3857 = !DILocation(line: 0, scope: !3848)
!3858 = !DILocation(line: 319, column: 30, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3779, file: !883, line: 319, column: 13)
!3860 = !DILocation(line: 319, column: 45, scope: !3859)
!3861 = !DILocation(line: 319, column: 13, scope: !3779)
!3862 = !DILocation(line: 321, column: 11, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3859, file: !883, line: 320, column: 9)
!3864 = !{!3842, !2442, i64 8}
!3865 = !DILocation(line: 322, column: 9, scope: !3863)
!3866 = !DILocation(line: 325, column: 11, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3859, file: !883, line: 324, column: 9)
!3868 = !DILocation(line: 0, scope: !3859)
!3869 = !DILocation(line: 329, column: 30, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3779, file: !883, line: 329, column: 13)
!3871 = !DILocation(line: 329, column: 46, scope: !3870)
!3872 = !DILocation(line: 329, column: 13, scope: !3779)
!3873 = !DILocation(line: 331, column: 11, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3870, file: !883, line: 330, column: 9)
!3875 = !{!3842, !2442, i64 12}
!3876 = !DILocation(line: 332, column: 9, scope: !3874)
!3877 = !DILocation(line: 335, column: 11, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3870, file: !883, line: 334, column: 9)
!3879 = !DILocation(line: 0, scope: !3870)
!3880 = !DILocation(line: 340, column: 10, scope: !3783)
!3881 = !DILocation(line: 184, column: 12, scope: !3756)
!3882 = !DILocation(line: 194, column: 28, scope: !3756)
!3883 = distinct !{!3883, !3787, !3884, !1450, !1451}
!3884 = !DILocation(line: 341, column: 3, scope: !3756)
!3885 = !DILocation(line: 342, column: 1, scope: !3756)
!3886 = distinct !DISubprogram(name: "HAL_GPIO_DeInit", scope: !883, file: !883, line: 351, type: !3887, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !3889)
!3887 = !DISubroutineType(types: !3888)
!3888 = !{null, !914, !24}
!3889 = !{!3890, !3891, !3892, !3893, !3894, !3895, !3896}
!3890 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !3886, file: !883, line: 351, type: !914)
!3891 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !3886, file: !883, line: 351, type: !24)
!3892 = !DILocalVariable(name: "position", scope: !3886, file: !883, line: 353, type: !24)
!3893 = !DILocalVariable(name: "iocurrent", scope: !3886, file: !883, line: 354, type: !24)
!3894 = !DILocalVariable(name: "tmp", scope: !3886, file: !883, line: 355, type: !24)
!3895 = !DILocalVariable(name: "configregister", scope: !3886, file: !883, line: 356, type: !796)
!3896 = !DILocalVariable(name: "registeroffset", scope: !3886, file: !883, line: 357, type: !24)
!3897 = !DILocation(line: 0, scope: !3886)
!3898 = !DILocation(line: 364, column: 33, scope: !3886)
!3899 = !DILocation(line: 364, column: 3, scope: !3886)
!3900 = !DILocation(line: 367, column: 35, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3886, file: !883, line: 365, column: 3)
!3902 = !DILocation(line: 367, column: 28, scope: !3901)
!3903 = !DILocation(line: 369, column: 9, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3901, file: !883, line: 369, column: 9)
!3905 = !DILocation(line: 369, column: 9, scope: !3901)
!3906 = !DILocation(line: 374, column: 35, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3904, file: !883, line: 370, column: 5)
!3908 = !DILocation(line: 374, column: 13, scope: !3907)
!3909 = !DILocation(line: 375, column: 28, scope: !3907)
!3910 = !DILocation(line: 375, column: 21, scope: !3907)
!3911 = !DILocation(line: 375, column: 11, scope: !3907)
!3912 = !DILocation(line: 376, column: 19, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3907, file: !883, line: 376, column: 11)
!3914 = !DILocation(line: 376, column: 41, scope: !3913)
!3915 = !DILocation(line: 376, column: 15, scope: !3913)
!3916 = !DILocation(line: 376, column: 11, scope: !3907)
!3917 = !DILocation(line: 379, column: 9, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3913, file: !883, line: 377, column: 7)
!3919 = !DILocation(line: 382, column: 9, scope: !3918)
!3920 = !DILocation(line: 383, column: 9, scope: !3918)
!3921 = !DILocation(line: 386, column: 9, scope: !3918)
!3922 = !DILocation(line: 387, column: 9, scope: !3918)
!3923 = !DILocation(line: 388, column: 7, scope: !3918)
!3924 = !DILocation(line: 392, column: 35, scope: !3907)
!3925 = !DILocation(line: 392, column: 24, scope: !3907)
!3926 = !DILocation(line: 393, column: 24, scope: !3907)
!3927 = !DILocation(line: 396, column: 7, scope: !3907)
!3928 = !DILocation(line: 399, column: 7, scope: !3907)
!3929 = !{!3813, !2442, i64 12}
!3930 = !DILocation(line: 400, column: 5, scope: !3907)
!3931 = !DILocation(line: 402, column: 13, scope: !3901)
!3932 = !DILocation(line: 364, column: 20, scope: !3886)
!3933 = distinct !{!3933, !3899, !3934, !1450, !1451}
!3934 = !DILocation(line: 403, column: 3, scope: !3886)
!3935 = !DILocation(line: 404, column: 1, scope: !3886)
!3936 = distinct !DISubprogram(name: "HAL_GPIO_ReadPin", scope: !883, file: !883, line: 431, type: !3937, scopeLine: 432, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !3940)
!3937 = !DISubroutineType(types: !3938)
!3938 = !{!3939, !914, !37}
!3939 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PinState", file: !886, line: 69, baseType: !885)
!3940 = !{!3941, !3942, !3943}
!3941 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !3936, file: !883, line: 431, type: !914)
!3942 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !3936, file: !883, line: 431, type: !37)
!3943 = !DILocalVariable(name: "bitstatus", scope: !3936, file: !883, line: 433, type: !3939)
!3944 = !DILocation(line: 0, scope: !3936)
!3945 = !DILocation(line: 438, column: 15, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3936, file: !883, line: 438, column: 7)
!3947 = !{!3813, !2442, i64 8}
!3948 = !DILocation(line: 438, column: 21, scope: !3946)
!3949 = !DILocation(line: 438, column: 19, scope: !3946)
!3950 = !DILocation(line: 438, column: 31, scope: !3946)
!3951 = !DILocation(line: 446, column: 3, scope: !3936)
!3952 = distinct !DISubprogram(name: "HAL_GPIO_WritePin", scope: !883, file: !883, line: 465, type: !3953, scopeLine: 466, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !3955)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{null, !914, !37, !3939}
!3955 = !{!3956, !3957, !3958}
!3956 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !3952, file: !883, line: 465, type: !914)
!3957 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !3952, file: !883, line: 465, type: !37)
!3958 = !DILocalVariable(name: "PinState", arg: 3, scope: !3952, file: !883, line: 465, type: !3939)
!3959 = !DILocation(line: 0, scope: !3952)
!3960 = !DILocation(line: 471, column: 16, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3952, file: !883, line: 471, column: 7)
!3962 = !DILocation(line: 0, scope: !3961)
!3963 = !DILocation(line: 471, column: 7, scope: !3952)
!3964 = !DILocation(line: 479, column: 1, scope: !3952)
!3965 = distinct !DISubprogram(name: "HAL_GPIO_TogglePin", scope: !883, file: !883, line: 487, type: !3966, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !3968)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{null, !914, !37}
!3968 = !{!3969, !3970}
!3969 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !3965, file: !883, line: 487, type: !914)
!3970 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !3965, file: !883, line: 487, type: !37)
!3971 = !DILocation(line: 0, scope: !3965)
!3972 = !DILocation(line: 492, column: 15, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3965, file: !883, line: 492, column: 7)
!3974 = !DILocation(line: 492, column: 21, scope: !3973)
!3975 = !DILocation(line: 492, column: 19, scope: !3973)
!3976 = !DILocation(line: 492, column: 31, scope: !3973)
!3977 = !DILocation(line: 492, column: 7, scope: !3965)
!3978 = !DILocation(line: 0, scope: !3973)
!3979 = !DILocation(line: 500, column: 1, scope: !3965)
!3980 = distinct !DISubprogram(name: "HAL_GPIO_LockPin", scope: !883, file: !883, line: 512, type: !3981, scopeLine: 513, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !3983)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{!2496, !914, !37}
!3983 = !{!3984, !3985, !3986}
!3984 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !3980, file: !883, line: 512, type: !914)
!3985 = !DILocalVariable(name: "GPIO_Pin", arg: 2, scope: !3980, file: !883, line: 512, type: !37)
!3986 = !DILocalVariable(name: "tmp", scope: !3980, file: !883, line: 514, type: !23)
!3987 = !DILocation(line: 0, scope: !3980)
!3988 = !DILocation(line: 514, column: 3, scope: !3980)
!3989 = !DILocation(line: 514, column: 17, scope: !3980)
!3990 = !DILocation(line: 521, column: 3, scope: !3980)
!3991 = !DILocation(line: 523, column: 17, scope: !3980)
!3992 = !DILocation(line: 523, column: 10, scope: !3980)
!3993 = !DILocation(line: 523, column: 15, scope: !3980)
!3994 = !{!3813, !2442, i64 24}
!3995 = !DILocation(line: 525, column: 15, scope: !3980)
!3996 = !DILocation(line: 527, column: 17, scope: !3980)
!3997 = !DILocation(line: 527, column: 15, scope: !3980)
!3998 = !DILocation(line: 529, column: 16, scope: !3980)
!3999 = !DILocation(line: 529, column: 7, scope: !3980)
!4000 = !DILocation(line: 532, column: 25, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3980, file: !883, line: 532, column: 7)
!4002 = !DILocation(line: 0, scope: !4001)
!4003 = !DILocation(line: 540, column: 1, scope: !3980)
!4004 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_IRQHandler", scope: !883, file: !883, line: 547, type: !4005, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !4007)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{null, !37}
!4007 = !{!4008}
!4008 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !4004, file: !883, line: 547, type: !37)
!4009 = !DILocation(line: 0, scope: !4004)
!4010 = !DILocation(line: 550, column: 7, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4004, file: !883, line: 550, column: 7)
!4012 = !{!3842, !2442, i64 20}
!4013 = !DILocation(line: 550, column: 40, scope: !4011)
!4014 = !DILocation(line: 550, column: 7, scope: !4004)
!4015 = !DILocation(line: 552, column: 5, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4011, file: !883, line: 551, column: 3)
!4017 = !DILocation(line: 553, column: 5, scope: !4016)
!4018 = !DILocation(line: 554, column: 3, scope: !4016)
!4019 = !DILocation(line: 555, column: 1, scope: !4004)
!4020 = distinct !DISubprogram(name: "HAL_GPIO_EXTI_Callback", scope: !883, file: !883, line: 562, type: !4005, scopeLine: 563, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !4021)
!4021 = !{!4022}
!4022 = !DILocalVariable(name: "GPIO_Pin", arg: 1, scope: !4020, file: !883, line: 562, type: !37)
!4023 = !DILocation(line: 0, scope: !4020)
!4024 = !DILocation(line: 569, column: 1, scope: !4020)
!4025 = distinct !DISubprogram(name: "Scheduler", linkageName: "_ZN6Cicada9SchedulerC2EPFjvEPPNS_4TaskE", scope: !938, file: !936, line: 29, type: !950, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !935, declaration: !949, retainedNodes: !4026)
!4026 = !{!4027, !4029, !4030}
!4027 = !DILocalVariable(name: "this", arg: 1, scope: !4025, type: !4028, flags: DIFlagArtificial | DIFlagObjectPointer)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!4029 = !DILocalVariable(name: "tickFunction", arg: 2, scope: !4025, file: !936, line: 29, type: !942)
!4030 = !DILocalVariable(name: "taskList", arg: 3, scope: !4025, file: !936, line: 29, type: !946)
!4031 = !DILocation(line: 0, scope: !4025)
!4032 = !DILocation(line: 30, column: 5, scope: !4025)
!4033 = !{!4034, !1319, i64 0}
!4034 = !{!"_ZTSN6Cicada9SchedulerE", !1319, i64 0, !1319, i64 4, !1319, i64 8}
!4035 = !DILocation(line: 30, column: 34, scope: !4025)
!4036 = !{!4034, !1319, i64 4}
!4037 = !DILocation(line: 30, column: 55, scope: !4025)
!4038 = !{!4034, !1319, i64 8}
!4039 = !DILocation(line: 31, column: 2, scope: !4025)
!4040 = distinct !DISubprogram(name: "runTask", linkageName: "_ZN6Cicada9Scheduler7runTaskEv", scope: !938, file: !936, line: 33, type: !954, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !935, declaration: !953, retainedNodes: !4041)
!4041 = !{!4042, !4043}
!4042 = !DILocalVariable(name: "this", arg: 1, scope: !4040, type: !4028, flags: DIFlagArtificial | DIFlagObjectPointer)
!4043 = !DILocalVariable(name: "tick", scope: !4040, file: !936, line: 35, type: !24)
!4044 = !DILocation(line: 0, scope: !4040)
!4045 = !DILocation(line: 35, column: 24, scope: !4040)
!4046 = !DILocation(line: 36, column: 11, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4040, file: !936, line: 36, column: 9)
!4048 = !DILocation(line: 36, column: 10, scope: !4047)
!4049 = !DILocation(line: 36, column: 26, scope: !4047)
!4050 = !DILocation(line: 36, column: 34, scope: !4047)
!4051 = !DILocation(line: 37, column: 9, scope: !4047)
!4052 = !DILocation(line: 37, column: 21, scope: !4047)
!4053 = !DILocation(line: 37, column: 20, scope: !4047)
!4054 = !DILocation(line: 37, column: 36, scope: !4047)
!4055 = !DILocation(line: 37, column: 17, scope: !4047)
!4056 = !DILocation(line: 37, column: 51, scope: !4047)
!4057 = !DILocation(line: 37, column: 50, scope: !4047)
!4058 = !DILocation(line: 37, column: 66, scope: !4047)
!4059 = !DILocation(line: 37, column: 49, scope: !4047)
!4060 = !DILocation(line: 37, column: 46, scope: !4047)
!4061 = !DILocation(line: 36, column: 9, scope: !4040)
!4062 = !DILocation(line: 38, column: 11, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !4047, file: !936, line: 37, column: 75)
!4064 = !DILocation(line: 38, column: 10, scope: !4063)
!4065 = !DILocation(line: 38, column: 26, scope: !4063)
!4066 = !DILocation(line: 39, column: 11, scope: !4063)
!4067 = !DILocation(line: 39, column: 10, scope: !4063)
!4068 = !DILocation(line: 39, column: 26, scope: !4063)
!4069 = !DILocation(line: 40, column: 5, scope: !4063)
!4070 = !DILocation(line: 42, column: 10, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4040, file: !936, line: 42, column: 9)
!4072 = !DILocation(line: 42, column: 9, scope: !4071)
!4073 = !DILocation(line: 42, column: 25, scope: !4071)
!4074 = !DILocation(line: 42, column: 9, scope: !4040)
!4075 = !DILocation(line: 43, column: 24, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4071, file: !936, line: 42, column: 34)
!4077 = !DILocation(line: 43, column: 22, scope: !4076)
!4078 = !DILocation(line: 44, column: 5, scope: !4076)
!4079 = !DILocation(line: 45, column: 1, scope: !4040)
!4080 = distinct !DISubprogram(name: "delay", linkageName: "_ZNK6Cicada4Task5delayEv", scope: !43, file: !44, line: 203, type: !66, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !935, declaration: !65, retainedNodes: !4081)
!4081 = !{!4082}
!4082 = !DILocalVariable(name: "this", arg: 1, scope: !4080, type: !4083, flags: DIFlagArtificial | DIFlagObjectPointer)
!4083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 32)
!4084 = !DILocation(line: 0, scope: !4080)
!4085 = !DILocation(line: 205, column: 16, scope: !4080)
!4086 = !DILocation(line: 205, column: 9, scope: !4080)
!4087 = distinct !DISubprogram(name: "lastRun", linkageName: "_ZN6Cicada4Task7lastRunEv", scope: !43, file: !44, line: 222, type: !72, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !935, declaration: !71, retainedNodes: !4088)
!4088 = !{!4089}
!4089 = !DILocalVariable(name: "this", arg: 1, scope: !4087, type: !947, flags: DIFlagArtificial | DIFlagObjectPointer)
!4090 = !DILocation(line: 0, scope: !4087)
!4091 = !DILocation(line: 224, column: 16, scope: !4087)
!4092 = !DILocation(line: 224, column: 9, scope: !4087)
!4093 = distinct !DISubprogram(name: "setLastRun", linkageName: "_ZN6Cicada4Task10setLastRunEj", scope: !43, file: !44, line: 230, type: !75, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !935, declaration: !74, retainedNodes: !4094)
!4094 = !{!4095, !4096}
!4095 = !DILocalVariable(name: "this", arg: 1, scope: !4093, type: !947, flags: DIFlagArtificial | DIFlagObjectPointer)
!4096 = !DILocalVariable(name: "time", arg: 2, scope: !4093, file: !44, line: 230, type: !24)
!4097 = !DILocation(line: 0, scope: !4093)
!4098 = !DILocation(line: 232, column: 9, scope: !4093)
!4099 = !DILocation(line: 232, column: 18, scope: !4093)
!4100 = !DILocation(line: 233, column: 5, scope: !4093)
!4101 = distinct !DISubprogram(name: "start", linkageName: "_ZN6Cicada9Scheduler5startEv", scope: !938, file: !936, line: 47, type: !954, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !935, declaration: !956, retainedNodes: !4102)
!4102 = !{!4103}
!4103 = !DILocalVariable(name: "this", arg: 1, scope: !4101, type: !4028, flags: DIFlagArtificial | DIFlagObjectPointer)
!4104 = !DILocation(line: 0, scope: !4101)
!4105 = !DILocation(line: 49, column: 5, scope: !4101)
!4106 = !DILocation(line: 50, column: 9, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !936, line: 49, column: 5)
!4108 = distinct !DILexicalBlock(scope: !4101, file: !936, line: 49, column: 5)
!4109 = !DILocation(line: 49, column: 5, scope: !4107)
!4110 = distinct !{!4110, !4111, !4112, !1450, !1451}
!4111 = !DILocation(line: 49, column: 5, scope: !4108)
!4112 = !DILocation(line: 50, column: 17, scope: !4108)
!4113 = distinct !DISubprogram(name: "eTickFunction", linkageName: "_Z13eTickFunctionv", scope: !965, file: !965, line: 27, type: !943, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !964, retainedNodes: !283)
!4114 = !DILocation(line: 29, column: 12, scope: !4113)
!4115 = !DILocation(line: 29, column: 5, scope: !4113)
!4116 = distinct !DISubprogram(name: "~Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartD2Ev", scope: !646, file: !548, line: 73, type: !705, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !704, retainedNodes: !4117)
!4117 = !{!4118}
!4118 = !DILocalVariable(name: "this", arg: 1, scope: !4116, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4119 = !DILocation(line: 0, scope: !4116)
!4120 = !DILocation(line: 74, column: 1, scope: !4116)
!4121 = !DILocation(line: 75, column: 9, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4123, file: !548, line: 75, column: 9)
!4123 = distinct !DILexicalBlock(scope: !4116, file: !548, line: 74, column: 1)
!4124 = !{!4125, !1320, i64 104}
!4125 = !{!"_ZTSN6Cicada9Stm32UartE", !1320, i64 104, !4126, i64 108, !1319, i64 180, !1429, i64 184, !1429, i64 186, !4130, i64 188}
!4126 = !{!"_ZTS20__UART_HandleTypeDef", !1319, i64 0, !4127, i64 4, !1319, i64 32, !1429, i64 36, !1429, i64 38, !1319, i64 40, !1429, i64 44, !1429, i64 46, !1319, i64 48, !1319, i64 52, !4128, i64 56, !4129, i64 60, !4129, i64 64, !1365, i64 68}
!4127 = !{!"_ZTS16UART_InitTypeDef", !1365, i64 0, !1365, i64 4, !1365, i64 8, !1365, i64 12, !1365, i64 16, !1365, i64 20, !1365, i64 24}
!4128 = !{!"_ZTS15HAL_LockTypeDef", !1320, i64 0}
!4129 = !{!"_ZTS21HAL_UART_StateTypeDef", !1320, i64 0}
!4130 = !{!"_ZTS9IRQn_Type", !1320, i64 0}
!4131 = !DILocation(line: 75, column: 16, scope: !4122)
!4132 = !DILocation(line: 75, column: 9, scope: !4123)
!4133 = !DILocation(line: 76, column: 9, scope: !4122)
!4134 = !DILocation(line: 77, column: 1, scope: !4123)
!4135 = !DILocation(line: 77, column: 1, scope: !4116)
!4136 = distinct !DISubprogram(name: "~Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartD0Ev", scope: !646, file: !548, line: 73, type: !705, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !704, retainedNodes: !4137)
!4137 = !{!4138}
!4138 = !DILocalVariable(name: "this", arg: 1, scope: !4136, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4139 = !DILocation(line: 0, scope: !4136)
!4140 = !DILocation(line: 74, column: 1, scope: !4136)
!4141 = !DILocation(line: 77, column: 1, scope: !4136)
!4142 = distinct !DISubprogram(name: "writeBufferProcessed", linkageName: "_ZNK6Cicada9Stm32Uart20writeBufferProcessedEv", scope: !646, file: !548, line: 251, type: !733, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !732, retainedNodes: !4143)
!4143 = !{!4144}
!4144 = !DILocalVariable(name: "this", arg: 1, scope: !4142, type: !4145, flags: DIFlagArtificial | DIFlagObjectPointer)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 32)
!4146 = !DILocation(line: 0, scope: !4142)
!4147 = !DILocation(line: 253, column: 12, scope: !4142)
!4148 = !DILocation(line: 253, column: 25, scope: !4142)
!4149 = !DILocation(line: 253, column: 42, scope: !4142)
!4150 = !DILocation(line: 253, column: 47, scope: !4142)
!4151 = !DILocation(line: 253, column: 50, scope: !4142)
!4152 = !{!4125, !1319, i64 108}
!4153 = !{!4154, !1365, i64 0}
!4154 = !{!"_ZTS13USART_TypeDef", !1365, i64 0, !1365, i64 4, !1365, i64 8, !1365, i64 12, !1365, i64 16, !1365, i64 20, !1365, i64 24}
!4155 = !DILocation(line: 253, column: 5, scope: !4142)
!4156 = distinct !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEv", scope: !646, file: !548, line: 112, type: !711, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !710, retainedNodes: !4157)
!4157 = !{!4158}
!4158 = !DILocalVariable(name: "this", arg: 1, scope: !4156, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4159 = !DILocation(line: 0, scope: !4156)
!4160 = !DILocation(line: 114, column: 12, scope: !4156)
!4161 = !DILocation(line: 114, column: 5, scope: !4156)
!4162 = distinct !DISubprogram(name: "open", linkageName: "_ZN6Cicada9Stm32Uart4openEh", scope: !646, file: !548, line: 117, type: !714, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !713, retainedNodes: !4163)
!4163 = !{!4164, !4165, !4166, !4170, !4172, !4176, !4180, !4184, !4188, !4192, !4196, !4200}
!4164 = !DILocalVariable(name: "this", arg: 1, scope: !4162, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4165 = !DILocalVariable(name: "priority", arg: 2, scope: !4162, file: !548, line: 117, type: !117)
!4166 = !DILocalVariable(name: "tmpreg", scope: !4167, file: !548, line: 121, type: !24)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !548, line: 121, column: 9)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !548, line: 120, column: 37)
!4169 = distinct !DILexicalBlock(scope: !4162, file: !548, line: 120, column: 9)
!4170 = !DILocalVariable(name: "tmpreg", scope: !4171, file: !548, line: 122, type: !23)
!4171 = distinct !DILexicalBlock(scope: !4168, file: !548, line: 122, column: 9)
!4172 = !DILocalVariable(name: "tmpreg", scope: !4173, file: !548, line: 125, type: !23)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !548, line: 125, column: 9)
!4174 = distinct !DILexicalBlock(scope: !4175, file: !548, line: 124, column: 44)
!4175 = distinct !DILexicalBlock(scope: !4169, file: !548, line: 124, column: 16)
!4176 = !DILocalVariable(name: "tmpreg", scope: !4177, file: !548, line: 128, type: !23)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !548, line: 128, column: 9)
!4178 = distinct !DILexicalBlock(scope: !4179, file: !548, line: 127, column: 44)
!4179 = distinct !DILexicalBlock(scope: !4175, file: !548, line: 127, column: 16)
!4180 = !DILocalVariable(name: "tmpreg", scope: !4181, file: !548, line: 146, type: !23)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !548, line: 146, column: 9)
!4182 = distinct !DILexicalBlock(scope: !4183, file: !548, line: 145, column: 29)
!4183 = distinct !DILexicalBlock(scope: !4162, file: !548, line: 145, column: 9)
!4184 = !DILocalVariable(name: "tmpreg", scope: !4185, file: !548, line: 148, type: !23)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !548, line: 148, column: 9)
!4186 = distinct !DILexicalBlock(scope: !4187, file: !548, line: 147, column: 36)
!4187 = distinct !DILexicalBlock(scope: !4183, file: !548, line: 147, column: 16)
!4188 = !DILocalVariable(name: "tmpreg", scope: !4189, file: !548, line: 150, type: !23)
!4189 = distinct !DILexicalBlock(scope: !4190, file: !548, line: 150, column: 9)
!4190 = distinct !DILexicalBlock(scope: !4191, file: !548, line: 149, column: 36)
!4191 = distinct !DILexicalBlock(scope: !4187, file: !548, line: 149, column: 16)
!4192 = !DILocalVariable(name: "tmpreg", scope: !4193, file: !548, line: 152, type: !23)
!4193 = distinct !DILexicalBlock(scope: !4194, file: !548, line: 152, column: 9)
!4194 = distinct !DILexicalBlock(scope: !4195, file: !548, line: 151, column: 36)
!4195 = distinct !DILexicalBlock(scope: !4191, file: !548, line: 151, column: 16)
!4196 = !DILocalVariable(name: "tmpreg", scope: !4197, file: !548, line: 154, type: !23)
!4197 = distinct !DILexicalBlock(scope: !4198, file: !548, line: 154, column: 9)
!4198 = distinct !DILexicalBlock(scope: !4199, file: !548, line: 153, column: 36)
!4199 = distinct !DILexicalBlock(scope: !4195, file: !548, line: 153, column: 16)
!4200 = !DILocalVariable(name: "gpio", scope: !4162, file: !548, line: 166, type: !4201)
!4201 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !886, line: 60, baseType: !4202)
!4202 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !886, line: 47, size: 128, flags: DIFlagTypePassByValue, elements: !4203, identifier: "_ZTS16GPIO_InitTypeDef")
!4203 = !{!4204, !4205, !4206, !4207}
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !4202, file: !886, line: 49, baseType: !24, size: 32)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !4202, file: !886, line: 52, baseType: !24, size: 32, offset: 32)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !4202, file: !886, line: 55, baseType: !24, size: 32, offset: 64)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !4202, file: !886, line: 58, baseType: !24, size: 32, offset: 96)
!4208 = !DILocation(line: 0, scope: !4162)
!4209 = !DILocation(line: 120, column: 9, scope: !4169)
!4210 = !DILocation(line: 120, column: 17, scope: !4169)
!4211 = !DILocation(line: 120, column: 9, scope: !4162)
!4212 = !DILocation(line: 121, column: 9, scope: !4167)
!4213 = !{!4214, !1365, i64 4}
!4214 = !{!"_ZTS12AFIO_TypeDef", !1365, i64 0, !1365, i64 4, !1320, i64 8, !1365, i64 24, !1365, i64 28}
!4215 = !DILocation(line: 0, scope: !4167)
!4216 = !DILocation(line: 122, column: 9, scope: !4171)
!4217 = !{!4218, !1365, i64 24}
!4218 = !{!"_ZTS11RCC_TypeDef", !1365, i64 0, !1365, i64 4, !1365, i64 8, !1365, i64 12, !1365, i64 16, !1365, i64 20, !1365, i64 24, !1365, i64 28, !1365, i64 32, !1365, i64 36}
!4219 = !{!1365, !1365, i64 0}
!4220 = !DILocation(line: 122, column: 9, scope: !4168)
!4221 = !DILocation(line: 124, column: 5, scope: !4168)
!4222 = !DILocation(line: 125, column: 9, scope: !4173)
!4223 = !{!4218, !1365, i64 28}
!4224 = !DILocation(line: 125, column: 9, scope: !4174)
!4225 = !DILocation(line: 127, column: 5, scope: !4174)
!4226 = !DILocation(line: 128, column: 9, scope: !4177)
!4227 = !DILocation(line: 128, column: 9, scope: !4178)
!4228 = !DILocation(line: 0, scope: !4169)
!4229 = !{!4125, !4130, i64 188}
!4230 = !DILocation(line: 145, column: 9, scope: !4183)
!4231 = !{!4125, !1319, i64 180}
!4232 = !DILocation(line: 145, column: 9, scope: !4162)
!4233 = !DILocation(line: 146, column: 9, scope: !4181)
!4234 = !DILocation(line: 146, column: 9, scope: !4182)
!4235 = !DILocation(line: 147, column: 5, scope: !4182)
!4236 = !DILocation(line: 148, column: 9, scope: !4185)
!4237 = !DILocation(line: 148, column: 9, scope: !4186)
!4238 = !DILocation(line: 149, column: 5, scope: !4186)
!4239 = !DILocation(line: 150, column: 9, scope: !4189)
!4240 = !DILocation(line: 150, column: 9, scope: !4190)
!4241 = !DILocation(line: 151, column: 5, scope: !4190)
!4242 = !DILocation(line: 152, column: 9, scope: !4193)
!4243 = !DILocation(line: 152, column: 9, scope: !4194)
!4244 = !DILocation(line: 153, column: 5, scope: !4194)
!4245 = !DILocation(line: 154, column: 9, scope: !4197)
!4246 = !DILocation(line: 154, column: 9, scope: !4198)
!4247 = !DILocation(line: 163, column: 5, scope: !4198)
!4248 = !DILocation(line: 166, column: 5, scope: !4162)
!4249 = !DILocation(line: 166, column: 22, scope: !4162)
!4250 = !DILocation(line: 167, column: 16, scope: !4162)
!4251 = !{!4125, !1429, i64 184}
!4252 = !DILocation(line: 167, column: 10, scope: !4162)
!4253 = !DILocation(line: 167, column: 14, scope: !4162)
!4254 = !{!4255, !1365, i64 0}
!4255 = !{!"_ZTS16GPIO_InitTypeDef", !1365, i64 0, !1365, i64 4, !1365, i64 8, !1365, i64 12}
!4256 = !DILocation(line: 168, column: 10, scope: !4162)
!4257 = !DILocation(line: 168, column: 15, scope: !4162)
!4258 = !{!4255, !1365, i64 4}
!4259 = !DILocation(line: 169, column: 10, scope: !4162)
!4260 = !DILocation(line: 169, column: 15, scope: !4162)
!4261 = !{!4255, !1365, i64 8}
!4262 = !DILocation(line: 170, column: 10, scope: !4162)
!4263 = !DILocation(line: 170, column: 16, scope: !4162)
!4264 = !{!4255, !1365, i64 12}
!4265 = !DILocation(line: 171, column: 5, scope: !4162)
!4266 = !DILocation(line: 173, column: 16, scope: !4162)
!4267 = !{!4125, !1429, i64 186}
!4268 = !DILocation(line: 173, column: 14, scope: !4162)
!4269 = !DILocation(line: 174, column: 15, scope: !4162)
!4270 = !DILocation(line: 175, column: 19, scope: !4162)
!4271 = !DILocation(line: 175, column: 5, scope: !4162)
!4272 = !DILocation(line: 178, column: 18, scope: !4162)
!4273 = !DILocation(line: 178, column: 27, scope: !4162)
!4274 = !{!4125, !1365, i64 120}
!4275 = !DILocation(line: 179, column: 18, scope: !4162)
!4276 = !DILocation(line: 179, column: 25, scope: !4162)
!4277 = !{!4125, !1365, i64 124}
!4278 = !DILocation(line: 180, column: 18, scope: !4162)
!4279 = !DILocation(line: 180, column: 23, scope: !4162)
!4280 = !{!4125, !1365, i64 128}
!4281 = !DILocation(line: 181, column: 18, scope: !4162)
!4282 = !DILocation(line: 181, column: 28, scope: !4162)
!4283 = !{!4125, !1365, i64 132}
!4284 = !DILocation(line: 182, column: 18, scope: !4162)
!4285 = !DILocation(line: 182, column: 31, scope: !4162)
!4286 = !{!4125, !1365, i64 136}
!4287 = !DILocation(line: 184, column: 9, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4162, file: !548, line: 184, column: 9)
!4289 = !DILocation(line: 184, column: 33, scope: !4288)
!4290 = !DILocation(line: 184, column: 9, scope: !4162)
!4291 = !DILocation(line: 188, column: 22, scope: !4162)
!4292 = !DILocation(line: 188, column: 46, scope: !4162)
!4293 = !DILocation(line: 188, column: 5, scope: !4162)
!4294 = !DILocation(line: 189, column: 20, scope: !4162)
!4295 = !DILocation(line: 189, column: 5, scope: !4162)
!4296 = !DILocation(line: 190, column: 5, scope: !4162)
!4297 = !{!4154, !1365, i64 12}
!4298 = !DILocation(line: 192, column: 5, scope: !4162)
!4299 = !DILocation(line: 192, column: 12, scope: !4162)
!4300 = !DILocation(line: 194, column: 5, scope: !4162)
!4301 = !DILocation(line: 195, column: 1, scope: !4162)
!4302 = distinct !DISubprogram(name: "isOpen", linkageName: "_ZN6Cicada9Stm32Uart6isOpenEv", scope: !646, file: !548, line: 207, type: !711, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !716, retainedNodes: !4303)
!4303 = !{!4304}
!4304 = !DILocalVariable(name: "this", arg: 1, scope: !4302, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4305 = !DILocation(line: 0, scope: !4302)
!4306 = !DILocation(line: 209, column: 12, scope: !4302)
!4307 = !DILocation(line: 209, column: 19, scope: !4302)
!4308 = !DILocation(line: 209, column: 5, scope: !4302)
!4309 = distinct !DISubprogram(name: "setSerialConfig", linkageName: "_ZN6Cicada9Stm32Uart15setSerialConfigEjh", scope: !646, file: !548, line: 91, type: !718, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !717, retainedNodes: !4310)
!4310 = !{!4311, !4312, !4313}
!4311 = !DILocalVariable(name: "this", arg: 1, scope: !4309, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4312 = !DILocalVariable(name: "baudRate", arg: 2, scope: !4309, file: !548, line: 91, type: !24)
!4313 = !DILocalVariable(name: "dataBits", arg: 3, scope: !4309, file: !548, line: 91, type: !117)
!4314 = !DILocation(line: 0, scope: !4309)
!4315 = !DILocation(line: 93, column: 23, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4309, file: !548, line: 93, column: 9)
!4317 = !DILocation(line: 96, column: 18, scope: !4309)
!4318 = !DILocation(line: 96, column: 27, scope: !4309)
!4319 = !{!4125, !1365, i64 112}
!4320 = !DILocation(line: 98, column: 5, scope: !4309)
!4321 = !DILocation(line: 104, column: 9, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4309, file: !548, line: 98, column: 23)
!4323 = !DILocation(line: 0, scope: !4322)
!4324 = !{!4125, !1365, i64 116}
!4325 = !DILocation(line: 110, column: 1, scope: !4309)
!4326 = distinct !DISubprogram(name: "close", linkageName: "_ZN6Cicada9Stm32Uart5closeEv", scope: !646, file: !548, line: 197, type: !705, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !720, retainedNodes: !4327)
!4327 = !{!4328}
!4328 = !DILocalVariable(name: "this", arg: 1, scope: !4326, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4329 = !DILocation(line: 0, scope: !4326)
!4330 = !DILocation(line: 199, column: 21, scope: !4326)
!4331 = !DILocation(line: 199, column: 5, scope: !4326)
!4332 = !DILocation(line: 200, column: 22, scope: !4326)
!4333 = !DILocation(line: 200, column: 5, scope: !4326)
!4334 = !DILocation(line: 201, column: 21, scope: !4326)
!4335 = !DILocation(line: 201, column: 32, scope: !4326)
!4336 = !DILocation(line: 201, column: 5, scope: !4326)
!4337 = !DILocation(line: 202, column: 21, scope: !4326)
!4338 = !DILocation(line: 202, column: 32, scope: !4326)
!4339 = !DILocation(line: 202, column: 5, scope: !4326)
!4340 = !DILocation(line: 204, column: 5, scope: !4326)
!4341 = !DILocation(line: 204, column: 12, scope: !4326)
!4342 = !DILocation(line: 205, column: 1, scope: !4326)
!4343 = distinct !DISubprogram(name: "portName", linkageName: "_ZNK6Cicada9Stm32Uart8portNameEv", scope: !646, file: !548, line: 212, type: !722, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !721, retainedNodes: !4344)
!4344 = !{!4345}
!4345 = !DILocalVariable(name: "this", arg: 1, scope: !4343, type: !4145, flags: DIFlagArtificial | DIFlagObjectPointer)
!4346 = !DILocation(line: 0, scope: !4343)
!4347 = !DILocation(line: 214, column: 5, scope: !4343)
!4348 = distinct !DISubprogram(name: "rawRead", linkageName: "_ZN6Cicada9Stm32Uart7rawReadERh", scope: !646, file: !548, line: 217, type: !727, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !726, retainedNodes: !4349)
!4349 = !{!4350, !4351}
!4350 = !DILocalVariable(name: "this", arg: 1, scope: !4348, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4351 = !DILocalVariable(name: "data", arg: 2, scope: !4348, file: !548, line: 217, type: !729)
!4352 = !DILocation(line: 0, scope: !4348)
!4353 = !DILocation(line: 219, column: 9, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4348, file: !548, line: 219, column: 9)
!4355 = !DILocation(line: 219, column: 55, scope: !4354)
!4356 = !DILocation(line: 220, column: 9, scope: !4354)
!4357 = !DILocation(line: 219, column: 9, scope: !4348)
!4358 = !DILocation(line: 221, column: 25, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4354, file: !548, line: 220, column: 55)
!4360 = !{!4154, !1365, i64 4}
!4361 = !DILocation(line: 221, column: 14, scope: !4359)
!4362 = !DILocation(line: 222, column: 9, scope: !4359)
!4363 = !DILocation(line: 226, column: 1, scope: !4348)
!4364 = distinct !DISubprogram(name: "rawWrite", linkageName: "_ZN6Cicada9Stm32Uart8rawWriteEh", scope: !646, file: !548, line: 228, type: !714, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !730, retainedNodes: !4365)
!4365 = !{!4366, !4367}
!4366 = !DILocalVariable(name: "this", arg: 1, scope: !4364, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4367 = !DILocalVariable(name: "data", arg: 2, scope: !4364, file: !548, line: 228, type: !117)
!4368 = !DILocation(line: 0, scope: !4364)
!4369 = !DILocation(line: 230, column: 9, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4364, file: !548, line: 230, column: 9)
!4371 = !DILocation(line: 230, column: 9, scope: !4364)
!4372 = !DILocation(line: 231, column: 9, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4370, file: !548, line: 230, column: 55)
!4374 = !DILocation(line: 232, column: 9, scope: !4373)
!4375 = !DILocation(line: 236, column: 1, scope: !4364)
!4376 = distinct !DISubprogram(name: "startTransmit", linkageName: "_ZN6Cicada9Stm32Uart13startTransmitEv", scope: !646, file: !548, line: 238, type: !705, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !731, retainedNodes: !4377)
!4377 = !{!4378}
!4378 = !DILocalVariable(name: "this", arg: 1, scope: !4376, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4379 = !DILocation(line: 0, scope: !4376)
!4380 = !DILocation(line: 240, column: 5, scope: !4376)
!4381 = !DILocation(line: 241, column: 1, scope: !4376)
!4382 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32UartD1Ev", scope: !548, file: !548, line: 73, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !283)
!4383 = !DISubroutineType(types: !283)
!4384 = !DILocation(line: 0, scope: !4382)
!4385 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32UartD0Ev", scope: !548, file: !548, line: 73, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !283)
!4386 = !DILocation(line: 0, scope: !4385)
!4387 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart4openEv", scope: !548, file: !548, line: 112, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !283)
!4388 = !DILocation(line: 0, scope: !4387)
!4389 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart6isOpenEv", scope: !548, file: !548, line: 207, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !283)
!4390 = !DILocation(line: 0, scope: !4389)
!4391 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart15setSerialConfigEjh", scope: !548, file: !548, line: 91, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !283)
!4392 = !DILocation(line: 0, scope: !4391)
!4393 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart5closeEv", scope: !548, file: !548, line: 197, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !283)
!4394 = !DILocation(line: 0, scope: !4393)
!4395 = distinct !DISubprogram(linkageName: "_ZThn4_NK6Cicada9Stm32Uart8portNameEv", scope: !548, file: !548, line: 212, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !283)
!4396 = !DILocation(line: 0, scope: !4395)
!4397 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart7rawReadERh", scope: !548, file: !548, line: 217, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !283)
!4398 = !DILocation(line: 0, scope: !4397)
!4399 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart8rawWriteEh", scope: !548, file: !548, line: 228, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !283)
!4400 = !DILocation(line: 0, scope: !4399)
!4401 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada9Stm32Uart13startTransmitEv", scope: !548, file: !548, line: 238, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !283)
!4402 = !DILocation(line: 0, scope: !4401)
!4403 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", linkageName: "_ZL17__NVIC_DisableIRQ9IRQn_Type", scope: !373, file: !373, line: 1547, type: !4404, scopeLine: 1548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !4406)
!4404 = !DISubroutineType(types: !4405)
!4405 = !{null, !694}
!4406 = !{!4407}
!4407 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4403, file: !373, line: 1547, type: !694)
!4408 = !DILocation(line: 0, scope: !4403)
!4409 = !DILocation(line: 1549, column: 23, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4403, file: !373, line: 1549, column: 7)
!4411 = !DILocation(line: 1549, column: 7, scope: !4403)
!4412 = !DILocation(line: 1551, column: 81, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4410, file: !373, line: 1550, column: 3)
!4414 = !DILocation(line: 1551, column: 60, scope: !4413)
!4415 = !DILocation(line: 1551, column: 34, scope: !4413)
!4416 = !DILocation(line: 1551, column: 5, scope: !4413)
!4417 = !DILocation(line: 1551, column: 43, scope: !4413)
!4418 = !DILocation(line: 879, column: 3, scope: !4419, inlinedAt: !4420)
!4419 = distinct !DISubprogram(name: "__DSB", linkageName: "_ZL5__DSBv", scope: !3555, file: !3555, line: 877, type: !4, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !283)
!4420 = distinct !DILocation(line: 1552, column: 5, scope: !4413)
!4421 = !{i64 1321711}
!4422 = !DILocation(line: 868, column: 3, scope: !4423, inlinedAt: !4424)
!4423 = distinct !DISubprogram(name: "__ISB", linkageName: "_ZL5__ISBv", scope: !3555, file: !3555, line: 866, type: !4, scopeLine: 867, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !283)
!4424 = distinct !DILocation(line: 1553, column: 5, scope: !4413)
!4425 = !{i64 1321417}
!4426 = !DILocation(line: 1554, column: 3, scope: !4413)
!4427 = !DILocation(line: 1555, column: 1, scope: !4403)
!4428 = distinct !DISubprogram(name: "__NVIC_SetPriority", linkageName: "_ZL18__NVIC_SetPriority9IRQn_Typej", scope: !373, file: !373, line: 1639, type: !4429, scopeLine: 1640, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !4431)
!4429 = !DISubroutineType(types: !4430)
!4430 = !{null, !694, !24}
!4431 = !{!4432, !4433}
!4432 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4428, file: !373, line: 1639, type: !694)
!4433 = !DILocalVariable(name: "priority", arg: 2, scope: !4428, file: !373, line: 1639, type: !24)
!4434 = !DILocation(line: 0, scope: !4428)
!4435 = !DILocation(line: 0, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4428, file: !373, line: 1641, column: 7)
!4437 = !DILocation(line: 1641, column: 7, scope: !4428)
!4438 = !DILocation(line: 1649, column: 1, scope: !4428)
!4439 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", linkageName: "_ZL16__NVIC_EnableIRQ9IRQn_Type", scope: !373, file: !373, line: 1511, type: !4404, scopeLine: 1512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !4440)
!4440 = !{!4441}
!4441 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4439, file: !373, line: 1511, type: !694)
!4442 = !DILocation(line: 0, scope: !4439)
!4443 = !DILocation(line: 1513, column: 23, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4439, file: !373, line: 1513, column: 7)
!4445 = !DILocation(line: 1513, column: 7, scope: !4439)
!4446 = !DILocation(line: 1515, column: 81, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4444, file: !373, line: 1514, column: 3)
!4448 = !DILocation(line: 1515, column: 60, scope: !4447)
!4449 = !DILocation(line: 1515, column: 34, scope: !4447)
!4450 = !DILocation(line: 1515, column: 5, scope: !4447)
!4451 = !DILocation(line: 1515, column: 43, scope: !4447)
!4452 = !DILocation(line: 1516, column: 3, scope: !4447)
!4453 = !DILocation(line: 1517, column: 1, scope: !4439)
!4454 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14bytesAvailableEv", scope: !1041, file: !1042, line: 174, type: !1079, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !1078, retainedNodes: !4455)
!4455 = !{!4456}
!4456 = !DILocalVariable(name: "this", arg: 1, scope: !4454, type: !4457, flags: DIFlagArtificial | DIFlagObjectPointer)
!4457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!4458 = !DILocation(line: 0, scope: !4454)
!4459 = !DILocation(line: 176, column: 16, scope: !4454)
!4460 = !{!4461, !4462, i64 24}
!4461 = !{!"_ZTSN6Cicada14CircularBufferIcEE", !4462, i64 8, !4462, i64 16, !4462, i64 24, !4462, i64 32, !1319, i64 40}
!4462 = !{!"long long", !1320, i64 0}
!4463 = !DILocation(line: 176, column: 9, scope: !4454)
!4464 = distinct !DISubprogram(name: "~BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialD2Ev", scope: !89, file: !90, line: 42, type: !4465, scopeLine: 42, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !4468, retainedNodes: !4469)
!4465 = !DISubroutineType(types: !4466)
!4466 = !{null, !4467}
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 32, flags: DIFlagArtificial | DIFlagObjectPointer)
!4468 = !DISubprogram(name: "~BufferedSerial", scope: !89, type: !4465, containingType: !89, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!4469 = !{!4470}
!4470 = !DILocalVariable(name: "this", arg: 1, scope: !4464, type: !4471, flags: DIFlagArtificial | DIFlagObjectPointer)
!4471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 32)
!4472 = !DILocation(line: 0, scope: !4464)
!4473 = !DILocation(line: 42, column: 7, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4464, file: !90, line: 42, column: 7)
!4475 = !DILocation(line: 42, column: 7, scope: !4464)
!4476 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcED2Ev", scope: !1041, file: !1042, line: 56, type: !1056, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !1055, retainedNodes: !4477)
!4477 = !{!4478}
!4478 = !DILocalVariable(name: "this", arg: 1, scope: !4476, type: !4479, flags: DIFlagArtificial | DIFlagObjectPointer)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!4480 = !DILocation(line: 0, scope: !4476)
!4481 = !DILocation(line: 57, column: 7, scope: !4476)
!4482 = distinct !DISubprogram(name: "~IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialD2Ev", scope: !973, file: !974, line: 42, type: !1007, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !1006, retainedNodes: !4483)
!4483 = !{!4484}
!4484 = !DILocalVariable(name: "this", arg: 1, scope: !4482, type: !4485, flags: DIFlagArtificial | DIFlagObjectPointer)
!4485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!4486 = !DILocation(line: 0, scope: !4482)
!4487 = !DILocation(line: 42, column: 34, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4482, file: !974, line: 42, column: 32)
!4489 = !DILocation(line: 42, column: 34, scope: !4482)
!4490 = distinct !DISubprogram(name: "~ISerial", linkageName: "_ZN6Cicada7ISerialD2Ev", scope: !978, file: !979, line: 40, type: !983, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !982, retainedNodes: !4491)
!4491 = !{!4492}
!4492 = !DILocalVariable(name: "this", arg: 1, scope: !4490, type: !4493, flags: DIFlagArtificial | DIFlagObjectPointer)
!4493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!4494 = !DILocation(line: 0, scope: !4490)
!4495 = !DILocation(line: 40, column: 26, scope: !4490)
!4496 = distinct !DISubprogram(name: "~ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceD2Ev", scope: !747, file: !748, line: 46, type: !752, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !751, retainedNodes: !4497)
!4497 = !{!4498}
!4498 = !DILocalVariable(name: "this", arg: 1, scope: !4496, type: !4499, flags: DIFlagArtificial | DIFlagObjectPointer)
!4499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 32)
!4500 = !DILocation(line: 0, scope: !4496)
!4501 = !DILocation(line: 46, column: 30, scope: !4496)
!4502 = distinct !DISubprogram(name: "Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartC2EPcS1_yyP13USART_TypeDefP12GPIO_TypeDeftt", scope: !646, file: !548, line: 34, type: !702, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !701, retainedNodes: !4503)
!4503 = !{!4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512}
!4504 = !DILocalVariable(name: "this", arg: 1, scope: !4502, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4505 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !4502, file: !548, line: 34, type: !229)
!4506 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !4502, file: !548, line: 34, type: !229)
!4507 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !4502, file: !548, line: 34, type: !699)
!4508 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !4502, file: !548, line: 34, type: !699)
!4509 = !DILocalVariable(name: "uartInstance", arg: 6, scope: !4502, file: !548, line: 35, type: !17)
!4510 = !DILocalVariable(name: "uartPort", arg: 7, scope: !4502, file: !548, line: 35, type: !34)
!4511 = !DILocalVariable(name: "txPin", arg: 8, scope: !4502, file: !548, line: 35, type: !37)
!4512 = !DILocalVariable(name: "rxPin", arg: 9, scope: !4502, file: !548, line: 35, type: !37)
!4513 = !DILocation(line: 0, scope: !4502)
!4514 = !DILocation(line: 43, column: 1, scope: !4502)
!4515 = !DILocation(line: 36, column: 5, scope: !4502)
!4516 = !DILocation(line: 37, column: 5, scope: !4502)
!4517 = !DILocation(line: 38, column: 5, scope: !4502)
!4518 = !DILocation(line: 39, column: 5, scope: !4502)
!4519 = !DILocation(line: 40, column: 5, scope: !4502)
!4520 = !DILocation(line: 41, column: 5, scope: !4502)
!4521 = !DILocation(line: 42, column: 5, scope: !4502)
!4522 = !DILocation(line: 44, column: 5, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4502, file: !548, line: 43, column: 1)
!4524 = !DILocation(line: 45, column: 1, scope: !4502)
!4525 = distinct !DISubprogram(name: "init", linkageName: "_ZN6Cicada9Stm32Uart4initEP13USART_TypeDef", scope: !646, file: !548, line: 59, type: !745, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !744, retainedNodes: !4526)
!4526 = !{!4527, !4528, !4529}
!4527 = !DILocalVariable(name: "this", arg: 1, scope: !4525, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4528 = !DILocalVariable(name: "uartInstance", arg: 2, scope: !4525, file: !548, line: 59, type: !17)
!4529 = !DILocalVariable(name: "i", scope: !4530, file: !548, line: 65, type: !52)
!4530 = distinct !DILexicalBlock(scope: !4525, file: !548, line: 65, column: 5)
!4531 = !DILocation(line: 0, scope: !4525)
!4532 = !DILocation(line: 61, column: 13, scope: !4525)
!4533 = !DILocation(line: 61, column: 22, scope: !4525)
!4534 = !DILocation(line: 62, column: 18, scope: !4525)
!4535 = !DILocation(line: 62, column: 27, scope: !4525)
!4536 = !DILocation(line: 63, column: 18, scope: !4525)
!4537 = !DILocation(line: 63, column: 29, scope: !4525)
!4538 = !DILocation(line: 0, scope: !4530)
!4539 = !DILocation(line: 65, column: 5, scope: !4530)
!4540 = !DILocation(line: 65, column: 52, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4530, file: !548, line: 65, column: 5)
!4542 = !DILocation(line: 65, column: 23, scope: !4541)
!4543 = distinct !{!4543, !4539, !4544, !1450, !1451}
!4544 = !DILocation(line: 70, column: 5, scope: !4530)
!4545 = !DILocation(line: 66, column: 13, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !548, line: 66, column: 13)
!4547 = distinct !DILexicalBlock(scope: !4541, file: !548, line: 65, column: 56)
!4548 = !DILocation(line: 66, column: 25, scope: !4546)
!4549 = !DILocation(line: 66, column: 13, scope: !4547)
!4550 = !DILocation(line: 67, column: 25, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4546, file: !548, line: 66, column: 34)
!4552 = !DILocation(line: 68, column: 13, scope: !4551)
!4553 = !DILocation(line: 71, column: 1, scope: !4525)
!4554 = distinct !DISubprogram(name: "Stm32Uart", linkageName: "_ZN6Cicada9Stm32UartC2EPcS1_yP13USART_TypeDefP12GPIO_TypeDeftt", scope: !646, file: !548, line: 46, type: !696, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !695, retainedNodes: !4555)
!4555 = !{!4556, !4557, !4558, !4559, !4560, !4561, !4562, !4563}
!4556 = !DILocalVariable(name: "this", arg: 1, scope: !4554, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4557 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !4554, file: !548, line: 46, type: !229)
!4558 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !4554, file: !548, line: 46, type: !229)
!4559 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !4554, file: !548, line: 46, type: !699)
!4560 = !DILocalVariable(name: "uartInstance", arg: 5, scope: !4554, file: !548, line: 47, type: !17)
!4561 = !DILocalVariable(name: "uartPort", arg: 6, scope: !4554, file: !548, line: 47, type: !34)
!4562 = !DILocalVariable(name: "txPin", arg: 7, scope: !4554, file: !548, line: 47, type: !37)
!4563 = !DILocalVariable(name: "rxPin", arg: 8, scope: !4554, file: !548, line: 47, type: !37)
!4564 = !DILocation(line: 0, scope: !4554)
!4565 = !DILocation(line: 55, column: 1, scope: !4554)
!4566 = !DILocation(line: 48, column: 5, scope: !4554)
!4567 = !DILocation(line: 49, column: 5, scope: !4554)
!4568 = !DILocation(line: 50, column: 5, scope: !4554)
!4569 = !DILocation(line: 51, column: 5, scope: !4554)
!4570 = !DILocation(line: 52, column: 5, scope: !4554)
!4571 = !DILocation(line: 53, column: 5, scope: !4554)
!4572 = !DILocation(line: 54, column: 5, scope: !4554)
!4573 = !DILocation(line: 56, column: 5, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4554, file: !548, line: 55, column: 1)
!4575 = !DILocation(line: 57, column: 1, scope: !4554)
!4576 = distinct !DISubprogram(name: "getInstance", linkageName: "_ZN6Cicada9Stm32Uart11getInstanceEP13USART_TypeDef", scope: !646, file: !548, line: 79, type: !708, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !707, retainedNodes: !4577)
!4577 = !{!4578, !4579, !4581}
!4578 = !DILocalVariable(name: "uartInstance", arg: 1, scope: !4576, file: !548, line: 79, type: !17)
!4579 = !DILocalVariable(name: "i", scope: !4580, file: !548, line: 81, type: !52)
!4580 = distinct !DILexicalBlock(scope: !4576, file: !548, line: 81, column: 5)
!4581 = !DILocalVariable(name: "uart", scope: !4582, file: !548, line: 82, type: !651)
!4582 = distinct !DILexicalBlock(scope: !4583, file: !548, line: 81, column: 56)
!4583 = distinct !DILexicalBlock(scope: !4580, file: !548, line: 81, column: 5)
!4584 = !DILocation(line: 0, scope: !4576)
!4585 = !DILocation(line: 0, scope: !4580)
!4586 = !DILocation(line: 81, column: 5, scope: !4580)
!4587 = !DILocation(line: 81, column: 52, scope: !4583)
!4588 = !DILocation(line: 81, column: 23, scope: !4583)
!4589 = distinct !{!4589, !4586, !4590, !1450, !1451}
!4590 = !DILocation(line: 86, column: 5, scope: !4580)
!4591 = !DILocation(line: 82, column: 27, scope: !4582)
!4592 = !DILocation(line: 0, scope: !4582)
!4593 = !DILocation(line: 83, column: 18, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4582, file: !548, line: 83, column: 13)
!4595 = !DILocation(line: 83, column: 26, scope: !4594)
!4596 = !DILocation(line: 83, column: 43, scope: !4594)
!4597 = !DILocation(line: 83, column: 52, scope: !4594)
!4598 = !DILocation(line: 83, column: 13, scope: !4582)
!4599 = !DILocation(line: 86, column: 5, scope: !4583)
!4600 = !DILocation(line: 89, column: 1, scope: !4576)
!4601 = distinct !DISubprogram(name: "handleInterrupt", linkageName: "_ZN6Cicada9Stm32Uart15handleInterruptEv", scope: !646, file: !548, line: 243, type: !705, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, declaration: !735, retainedNodes: !4602)
!4602 = !{!4603}
!4603 = !DILocalVariable(name: "this", arg: 1, scope: !4601, type: !651, flags: DIFlagArtificial | DIFlagObjectPointer)
!4604 = !DILocation(line: 0, scope: !4601)
!4605 = !DILocation(line: 245, column: 5, scope: !4601)
!4606 = !DILocation(line: 247, column: 10, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4601, file: !548, line: 247, column: 9)
!4608 = !DILocation(line: 247, column: 23, scope: !4607)
!4609 = !DILocation(line: 247, column: 9, scope: !4601)
!4610 = !DILocation(line: 248, column: 9, scope: !4607)
!4611 = !DILocation(line: 249, column: 1, scope: !4601)
!4612 = distinct !DISubprogram(name: "~BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialD0Ev", scope: !970, file: !90, line: 42, type: !1149, scopeLine: 42, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !4613, retainedNodes: !4614)
!4613 = !DISubprogram(name: "~BufferedSerial", scope: !970, type: !1149, containingType: !970, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!4614 = !{!4615}
!4615 = !DILocalVariable(name: "this", arg: 1, scope: !4612, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!4616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!4617 = !DILocation(line: 0, scope: !4612)
!4618 = !DILocation(line: 42, column: 7, scope: !4612)
!4619 = distinct !DISubprogram(name: "bytesAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14bytesAvailableEv", scope: !970, file: !968, line: 39, type: !1124, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1123, retainedNodes: !4620)
!4620 = !{!4621, !4623}
!4621 = !DILocalVariable(name: "this", arg: 1, scope: !4619, type: !4622, flags: DIFlagArtificial | DIFlagObjectPointer)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!4623 = !DILocalVariable(name: "availableData", scope: !4619, file: !968, line: 42, type: !699)
!4624 = !DILocation(line: 0, scope: !4619)
!4625 = !DILocation(line: 41, column: 5, scope: !4619)
!4626 = !DILocation(line: 42, column: 26, scope: !4619)
!4627 = !DILocation(line: 42, column: 38, scope: !4619)
!4628 = !DILocation(line: 43, column: 5, scope: !4619)
!4629 = !DILocation(line: 45, column: 5, scope: !4619)
!4630 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14BufferedSerial14spaceAvailableEv", scope: !970, file: !968, line: 48, type: !1124, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1128, retainedNodes: !4631)
!4631 = !{!4632, !4633}
!4632 = !DILocalVariable(name: "this", arg: 1, scope: !4630, type: !4622, flags: DIFlagArtificial | DIFlagObjectPointer)
!4633 = !DILocalVariable(name: "spaceAvailable", scope: !4630, file: !968, line: 51, type: !699)
!4634 = !DILocation(line: 0, scope: !4630)
!4635 = !DILocation(line: 50, column: 5, scope: !4630)
!4636 = !DILocation(line: 51, column: 27, scope: !4630)
!4637 = !DILocation(line: 51, column: 40, scope: !4630)
!4638 = !DILocation(line: 52, column: 5, scope: !4630)
!4639 = !DILocation(line: 54, column: 5, scope: !4630)
!4640 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEPhy", scope: !970, file: !968, line: 57, type: !1130, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1129, retainedNodes: !4641)
!4641 = !{!4642, !4643, !4644, !4645, !4646}
!4642 = !DILocalVariable(name: "this", arg: 1, scope: !4640, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!4643 = !DILocalVariable(name: "data", arg: 2, scope: !4640, file: !968, line: 57, type: !670)
!4644 = !DILocalVariable(name: "size", arg: 3, scope: !4640, file: !968, line: 57, type: !699)
!4645 = !DILocalVariable(name: "avail", scope: !4640, file: !968, line: 59, type: !699)
!4646 = !DILocalVariable(name: "readCount", scope: !4640, file: !968, line: 63, type: !699)
!4647 = !DILocation(line: 0, scope: !4640)
!4648 = !DILocation(line: 59, column: 18, scope: !4640)
!4649 = !DILocation(line: 60, column: 14, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4640, file: !968, line: 60, column: 9)
!4651 = !DILocation(line: 60, column: 9, scope: !4640)
!4652 = !DILocation(line: 65, column: 22, scope: !4640)
!4653 = !DILocation(line: 65, column: 5, scope: !4640)
!4654 = !DILocation(line: 66, column: 29, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4640, file: !968, line: 65, column: 30)
!4656 = !DILocation(line: 66, column: 23, scope: !4655)
!4657 = !DILocation(line: 66, column: 9, scope: !4655)
!4658 = !DILocation(line: 66, column: 27, scope: !4655)
!4659 = distinct !{!4659, !4653, !4660, !1450, !1451}
!4660 = !DILocation(line: 67, column: 5, scope: !4640)
!4661 = !DILocation(line: 69, column: 5, scope: !4640)
!4662 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKhy", scope: !970, file: !968, line: 81, type: !1136, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1135, retainedNodes: !4663)
!4663 = !{!4664, !4665, !4666, !4667, !4668}
!4664 = !DILocalVariable(name: "this", arg: 1, scope: !4662, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!4665 = !DILocalVariable(name: "data", arg: 2, scope: !4662, file: !968, line: 81, type: !770)
!4666 = !DILocalVariable(name: "size", arg: 3, scope: !4662, file: !968, line: 81, type: !699)
!4667 = !DILocalVariable(name: "space", scope: !4662, file: !968, line: 83, type: !699)
!4668 = !DILocalVariable(name: "writeCount", scope: !4662, file: !968, line: 87, type: !699)
!4669 = !DILocation(line: 0, scope: !4662)
!4670 = !DILocation(line: 83, column: 18, scope: !4662)
!4671 = !DILocation(line: 84, column: 14, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4662, file: !968, line: 84, column: 9)
!4673 = !DILocation(line: 84, column: 9, scope: !4662)
!4674 = !DILocation(line: 89, column: 23, scope: !4662)
!4675 = !DILocation(line: 89, column: 5, scope: !4662)
!4676 = !DILocation(line: 90, column: 37, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4662, file: !968, line: 89, column: 31)
!4678 = !DILocation(line: 90, column: 22, scope: !4677)
!4679 = !DILocation(line: 90, column: 9, scope: !4677)
!4680 = distinct !{!4680, !4675, !4681, !1450, !1451}
!4681 = !DILocation(line: 91, column: 5, scope: !4662)
!4682 = !DILocation(line: 93, column: 5, scope: !4662)
!4683 = !DILocation(line: 95, column: 5, scope: !4662)
!4684 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14BufferedSerial4readEv", scope: !970, file: !968, line: 72, type: !1133, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1132, retainedNodes: !4685)
!4685 = !{!4686, !4687}
!4686 = !DILocalVariable(name: "this", arg: 1, scope: !4684, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!4687 = !DILocalVariable(name: "c", scope: !4684, file: !968, line: 75, type: !117)
!4688 = !DILocation(line: 0, scope: !4684)
!4689 = !DILocation(line: 74, column: 5, scope: !4684)
!4690 = !DILocation(line: 75, column: 17, scope: !4684)
!4691 = !DILocation(line: 75, column: 29, scope: !4684)
!4692 = !DILocation(line: 76, column: 5, scope: !4684)
!4693 = !DILocation(line: 78, column: 5, scope: !4684)
!4694 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEPKh", scope: !970, file: !968, line: 98, type: !1139, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1138, retainedNodes: !4695)
!4695 = !{!4696, !4697, !4698, !4699}
!4696 = !DILocalVariable(name: "this", arg: 1, scope: !4694, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!4697 = !DILocalVariable(name: "data", arg: 2, scope: !4694, file: !968, line: 98, type: !770)
!4698 = !DILocalVariable(name: "space", scope: !4694, file: !968, line: 100, type: !699)
!4699 = !DILocalVariable(name: "writeCount", scope: !4694, file: !968, line: 102, type: !699)
!4700 = !DILocation(line: 0, scope: !4694)
!4701 = !DILocation(line: 100, column: 18, scope: !4694)
!4702 = !DILocation(line: 104, column: 12, scope: !4694)
!4703 = !DILocation(line: 104, column: 29, scope: !4694)
!4704 = !DILocation(line: 104, column: 37, scope: !4694)
!4705 = !DILocation(line: 104, column: 5, scope: !4694)
!4706 = !DILocation(line: 105, column: 37, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4694, file: !968, line: 104, column: 60)
!4708 = !DILocation(line: 105, column: 9, scope: !4707)
!4709 = distinct !{!4709, !4705, !4710, !1450, !1451}
!4710 = !DILocation(line: 106, column: 5, scope: !4694)
!4711 = !DILocation(line: 108, column: 5, scope: !4694)
!4712 = !DILocation(line: 110, column: 5, scope: !4694)
!4713 = distinct !DISubprogram(name: "write", linkageName: "_ZN6Cicada14BufferedSerial5writeEh", scope: !970, file: !968, line: 113, type: !1142, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1141, retainedNodes: !4714)
!4714 = !{!4715, !4716}
!4715 = !DILocalVariable(name: "this", arg: 1, scope: !4713, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!4716 = !DILocalVariable(name: "data", arg: 2, scope: !4713, file: !968, line: 113, type: !117)
!4717 = !DILocation(line: 0, scope: !4713)
!4718 = !DILocation(line: 115, column: 5, scope: !4713)
!4719 = !DILocation(line: 116, column: 5, scope: !4713)
!4720 = !DILocation(line: 117, column: 1, scope: !4713)
!4721 = distinct !DISubprogram(name: "canReadLine", linkageName: "_ZNK6Cicada14BufferedSerial11canReadLineEv", scope: !970, file: !968, line: 126, type: !1145, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1144, retainedNodes: !4722)
!4722 = !{!4723, !4724}
!4723 = !DILocalVariable(name: "this", arg: 1, scope: !4721, type: !4622, flags: DIFlagArtificial | DIFlagObjectPointer)
!4724 = !DILocalVariable(name: "lines", scope: !4721, file: !968, line: 129, type: !699)
!4725 = !DILocation(line: 0, scope: !4721)
!4726 = !DILocation(line: 128, column: 5, scope: !4721)
!4727 = !DILocation(line: 129, column: 18, scope: !4721)
!4728 = !DILocation(line: 129, column: 30, scope: !4721)
!4729 = !DILocation(line: 130, column: 5, scope: !4721)
!4730 = !DILocation(line: 132, column: 18, scope: !4721)
!4731 = !DILocation(line: 132, column: 5, scope: !4721)
!4732 = distinct !DISubprogram(name: "readLine", linkageName: "_ZN6Cicada14BufferedSerial8readLineEPhy", scope: !970, file: !968, line: 135, type: !1130, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1147, retainedNodes: !4733)
!4733 = !{!4734, !4735, !4736, !4737, !4738}
!4734 = !DILocalVariable(name: "this", arg: 1, scope: !4732, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!4735 = !DILocalVariable(name: "data", arg: 2, scope: !4732, file: !968, line: 135, type: !670)
!4736 = !DILocalVariable(name: "size", arg: 3, scope: !4732, file: !968, line: 135, type: !699)
!4737 = !DILocalVariable(name: "readCount", scope: !4732, file: !968, line: 137, type: !699)
!4738 = !DILocalVariable(name: "c", scope: !4732, file: !968, line: 138, type: !117)
!4739 = !DILocation(line: 0, scope: !4732)
!4740 = !DILocation(line: 140, column: 14, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4732, file: !968, line: 140, column: 9)
!4742 = !DILocation(line: 140, column: 9, scope: !4732)
!4743 = !DILocation(line: 143, column: 12, scope: !4732)
!4744 = !DILocation(line: 143, column: 5, scope: !4732)
!4745 = !DILocation(line: 144, column: 13, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4732, file: !968, line: 143, column: 43)
!4747 = !DILocation(line: 145, column: 23, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4746, file: !968, line: 145, column: 13)
!4749 = !DILocation(line: 145, column: 13, scope: !4746)
!4750 = !DILocation(line: 146, column: 27, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4748, file: !968, line: 145, column: 35)
!4752 = !DILocation(line: 146, column: 13, scope: !4751)
!4753 = !DILocation(line: 146, column: 31, scope: !4751)
!4754 = !DILocation(line: 147, column: 9, scope: !4751)
!4755 = !DILocation(line: 143, column: 29, scope: !4732)
!4756 = distinct !{!4756, !4744, !4757, !1450, !1451}
!4757 = !DILocation(line: 148, column: 5, scope: !4732)
!4758 = !DILocation(line: 149, column: 5, scope: !4732)
!4759 = !DILocation(line: 149, column: 21, scope: !4732)
!4760 = !DILocation(line: 151, column: 5, scope: !4732)
!4761 = !DILocation(line: 152, column: 1, scope: !4732)
!4762 = distinct !DISubprogram(name: "flushReceiveBuffers", linkageName: "_ZN6Cicada14BufferedSerial19flushReceiveBuffersEv", scope: !970, file: !968, line: 154, type: !1149, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1148, retainedNodes: !4763)
!4763 = !{!4764}
!4764 = !DILocalVariable(name: "this", arg: 1, scope: !4762, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!4765 = !DILocation(line: 0, scope: !4762)
!4766 = !DILocation(line: 156, column: 5, scope: !4762)
!4767 = !DILocation(line: 157, column: 5, scope: !4762)
!4768 = !DILocation(line: 157, column: 17, scope: !4762)
!4769 = !DILocation(line: 158, column: 5, scope: !4762)
!4770 = !DILocation(line: 159, column: 1, scope: !4762)
!4771 = distinct !DISubprogram(name: "readBufferSize", linkageName: "_ZN6Cicada14BufferedSerial14readBufferSizeEv", scope: !970, file: !968, line: 161, type: !1152, scopeLine: 162, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1151, retainedNodes: !4772)
!4772 = !{!4773}
!4773 = !DILocalVariable(name: "this", arg: 1, scope: !4771, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!4774 = !DILocation(line: 0, scope: !4771)
!4775 = !DILocation(line: 163, column: 12, scope: !4771)
!4776 = !DILocation(line: 163, column: 24, scope: !4771)
!4777 = !DILocation(line: 163, column: 5, scope: !4771)
!4778 = distinct !DISubprogram(name: "writeBufferSize", linkageName: "_ZN6Cicada14BufferedSerial15writeBufferSizeEv", scope: !970, file: !968, line: 166, type: !1152, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1154, retainedNodes: !4779)
!4779 = !{!4780}
!4780 = !DILocalVariable(name: "this", arg: 1, scope: !4778, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!4781 = !DILocation(line: 0, scope: !4778)
!4782 = !DILocation(line: 168, column: 12, scope: !4778)
!4783 = !DILocation(line: 168, column: 25, scope: !4778)
!4784 = !DILocation(line: 168, column: 5, scope: !4778)
!4785 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada14BufferedSerialD1Ev", scope: !90, file: !90, line: 42, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !283)
!4786 = !DILocation(line: 0, scope: !4785)
!4787 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada14BufferedSerialD0Ev", scope: !90, file: !90, line: 42, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !283)
!4788 = !DILocation(line: 0, scope: !4787)
!4789 = distinct !DISubprogram(name: "size", linkageName: "_ZNK6Cicada14CircularBufferIcE4sizeEv", scope: !1041, file: !1042, line: 190, type: !1079, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1082, retainedNodes: !4790)
!4790 = !{!4791}
!4791 = !DILocalVariable(name: "this", arg: 1, scope: !4789, type: !4457, flags: DIFlagArtificial | DIFlagObjectPointer)
!4792 = !DILocation(line: 0, scope: !4789)
!4793 = !DILocation(line: 192, column: 16, scope: !4789)
!4794 = !{!4461, !4462, i64 32}
!4795 = !DILocation(line: 192, column: 9, scope: !4789)
!4796 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada18LineCircularBuffer5flushEv", scope: !1037, file: !1038, line: 123, type: !1113, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1112, retainedNodes: !4797)
!4797 = !{!4798}
!4798 = !DILocalVariable(name: "this", arg: 1, scope: !4796, type: !4799, flags: DIFlagArtificial | DIFlagObjectPointer)
!4799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!4800 = !DILocation(line: 0, scope: !4796)
!4801 = !DILocation(line: 125, column: 9, scope: !4796)
!4802 = !DILocation(line: 125, column: 24, scope: !4796)
!4803 = !{!4804, !1429, i64 44}
!4804 = !{!"_ZTSN6Cicada18LineCircularBufferE", !1429, i64 44}
!4805 = !DILocation(line: 126, column: 25, scope: !4796)
!4806 = !DILocation(line: 127, column: 5, scope: !4796)
!4807 = distinct !DISubprogram(name: "flush", linkageName: "_ZN6Cicada14CircularBufferIcE5flushEv", scope: !1041, file: !1042, line: 148, type: !1056, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1071, retainedNodes: !4808)
!4808 = !{!4809}
!4809 = !DILocalVariable(name: "this", arg: 1, scope: !4807, type: !4479, flags: DIFlagArtificial | DIFlagObjectPointer)
!4810 = !DILocation(line: 0, scope: !4807)
!4811 = !DILocation(line: 150, column: 9, scope: !4807)
!4812 = !DILocation(line: 153, column: 5, scope: !4807)
!4813 = !DILocation(line: 151, column: 19, scope: !4807)
!4814 = distinct !DISubprogram(name: "numBufferedLines", linkageName: "_ZNK6Cicada18LineCircularBuffer16numBufferedLinesEv", scope: !1037, file: !1038, line: 97, type: !1107, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1106, retainedNodes: !4815)
!4815 = !{!4816}
!4816 = !DILocalVariable(name: "this", arg: 1, scope: !4814, type: !4817, flags: DIFlagArtificial | DIFlagObjectPointer)
!4817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!4818 = !DILocation(line: 0, scope: !4814)
!4819 = !DILocation(line: 99, column: 16, scope: !4814)
!4820 = !DILocation(line: 99, column: 9, scope: !4814)
!4821 = distinct !DISubprogram(name: "copyToBuffer", linkageName: "_ZN6Cicada14BufferedSerial12copyToBufferEh", scope: !970, file: !968, line: 119, type: !1142, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1156, retainedNodes: !4822)
!4822 = !{!4823, !4824}
!4823 = !DILocalVariable(name: "this", arg: 1, scope: !4821, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!4824 = !DILocalVariable(name: "data", arg: 2, scope: !4821, file: !968, line: 119, type: !117)
!4825 = !DILocation(line: 0, scope: !4821)
!4826 = !DILocation(line: 121, column: 5, scope: !4821)
!4827 = !DILocation(line: 122, column: 5, scope: !4821)
!4828 = !DILocation(line: 122, column: 18, scope: !4821)
!4829 = !DILocation(line: 123, column: 5, scope: !4821)
!4830 = !DILocation(line: 124, column: 1, scope: !4821)
!4831 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEc", scope: !1037, file: !1038, line: 60, type: !1098, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1097, retainedNodes: !4832)
!4832 = !{!4833, !4834}
!4833 = !DILocalVariable(name: "this", arg: 1, scope: !4831, type: !4799, flags: DIFlagArtificial | DIFlagObjectPointer)
!4834 = !DILocalVariable(name: "data", arg: 2, scope: !4831, file: !1038, line: 60, type: !105)
!4835 = !DILocation(line: 0, scope: !4831)
!4836 = !DILocation(line: 62, column: 31, scope: !4831)
!4837 = !DILocation(line: 64, column: 18, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4831, file: !1038, line: 64, column: 13)
!4839 = !DILocation(line: 64, column: 13, scope: !4831)
!4840 = !DILocation(line: 65, column: 13, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4838, file: !1038, line: 64, column: 27)
!4842 = !DILocation(line: 65, column: 27, scope: !4841)
!4843 = !DILocation(line: 66, column: 9, scope: !4841)
!4844 = !DILocation(line: 67, column: 5, scope: !4831)
!4845 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEc", scope: !1041, file: !1042, line: 88, type: !1062, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1061, retainedNodes: !4846)
!4846 = !{!4847, !4848}
!4847 = !DILocalVariable(name: "this", arg: 1, scope: !4845, type: !4479, flags: DIFlagArtificial | DIFlagObjectPointer)
!4848 = !DILocalVariable(name: "data", arg: 2, scope: !4845, file: !1042, line: 88, type: !105)
!4849 = !DILocation(line: 0, scope: !4845)
!4850 = !DILocation(line: 90, column: 9, scope: !4845)
!4851 = !{!4461, !1319, i64 40}
!4852 = !DILocation(line: 90, column: 17, scope: !4845)
!4853 = !{!4461, !4462, i64 8}
!4854 = !DILocation(line: 90, column: 29, scope: !4845)
!4855 = !DILocation(line: 91, column: 9, scope: !4845)
!4856 = !DILocation(line: 92, column: 13, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4845, file: !1042, line: 92, column: 13)
!4858 = !DILocation(line: 92, column: 30, scope: !4857)
!4859 = !DILocation(line: 92, column: 28, scope: !4857)
!4860 = !DILocation(line: 92, column: 13, scope: !4845)
!4861 = !DILocation(line: 93, column: 27, scope: !4857)
!4862 = !DILocation(line: 93, column: 13, scope: !4857)
!4863 = !DILocation(line: 94, column: 5, scope: !4845)
!4864 = distinct !DISubprogram(name: "incrementOrResetHead", linkageName: "_ZN6Cicada14CircularBufferIcE20incrementOrResetHeadERy", scope: !1041, file: !1042, line: 202, type: !1084, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1083, retainedNodes: !4865)
!4865 = !{!4866, !4867}
!4866 = !DILocalVariable(name: "this", arg: 1, scope: !4864, type: !4479, flags: DIFlagArtificial | DIFlagObjectPointer)
!4867 = !DILocalVariable(name: "head", arg: 2, scope: !4864, file: !1042, line: 202, type: !1086)
!4868 = !DILocation(line: 0, scope: !4864)
!4869 = !DILocation(line: 204, column: 13, scope: !4864)
!4870 = !{!4462, !4462, i64 0}
!4871 = !DILocation(line: 205, column: 21, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4864, file: !1042, line: 205, column: 13)
!4873 = !DILocation(line: 205, column: 18, scope: !4872)
!4874 = !DILocation(line: 205, column: 13, scope: !4864)
!4875 = !DILocation(line: 207, column: 5, scope: !4864)
!4876 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEv", scope: !1037, file: !1038, line: 83, type: !1104, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1103, retainedNodes: !4877)
!4877 = !{!4878, !4879}
!4878 = !DILocalVariable(name: "this", arg: 1, scope: !4876, type: !4799, flags: DIFlagArtificial | DIFlagObjectPointer)
!4879 = !DILocalVariable(name: "data", scope: !4876, file: !1038, line: 85, type: !105)
!4880 = !DILocation(line: 0, scope: !4876)
!4881 = !DILocation(line: 85, column: 43, scope: !4876)
!4882 = !DILocation(line: 87, column: 18, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4876, file: !1038, line: 87, column: 13)
!4884 = !DILocation(line: 87, column: 13, scope: !4876)
!4885 = !DILocation(line: 88, column: 13, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4883, file: !1038, line: 87, column: 27)
!4887 = !DILocation(line: 88, column: 27, scope: !4886)
!4888 = !DILocation(line: 89, column: 9, scope: !4886)
!4889 = !DILocation(line: 91, column: 9, scope: !4876)
!4890 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEv", scope: !1041, file: !1042, line: 124, type: !1068, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1067, retainedNodes: !4891)
!4891 = !{!4892, !4893}
!4892 = !DILocalVariable(name: "this", arg: 1, scope: !4890, type: !4479, flags: DIFlagArtificial | DIFlagObjectPointer)
!4893 = !DILocalVariable(name: "data", scope: !4890, file: !1042, line: 126, type: !105)
!4894 = !DILocation(line: 0, scope: !4890)
!4895 = !DILocation(line: 126, column: 18, scope: !4890)
!4896 = !DILocation(line: 126, column: 26, scope: !4890)
!4897 = !{!4461, !4462, i64 16}
!4898 = !DILocation(line: 127, column: 9, scope: !4890)
!4899 = !DILocation(line: 128, column: 13, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4890, file: !1042, line: 128, column: 13)
!4901 = !DILocation(line: 128, column: 28, scope: !4900)
!4902 = !DILocation(line: 128, column: 13, scope: !4890)
!4903 = !DILocation(line: 129, column: 27, scope: !4900)
!4904 = !DILocation(line: 129, column: 13, scope: !4900)
!4905 = !DILocation(line: 131, column: 9, scope: !4890)
!4906 = distinct !DISubprogram(name: "spaceAvailable", linkageName: "_ZNK6Cicada14CircularBufferIcE14spaceAvailableEv", scope: !1041, file: !1042, line: 182, type: !1079, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1081, retainedNodes: !4907)
!4907 = !{!4908}
!4908 = !DILocalVariable(name: "this", arg: 1, scope: !4906, type: !4457, flags: DIFlagArtificial | DIFlagObjectPointer)
!4909 = !DILocation(line: 0, scope: !4906)
!4910 = !DILocation(line: 184, column: 16, scope: !4906)
!4911 = !DILocation(line: 184, column: 30, scope: !4906)
!4912 = !DILocation(line: 184, column: 28, scope: !4906)
!4913 = !DILocation(line: 184, column: 9, scope: !4906)
!4914 = distinct !DISubprogram(name: "BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialC2EPcS1_yy", scope: !970, file: !968, line: 30, type: !1117, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1116, retainedNodes: !4915)
!4915 = !{!4916, !4917, !4918, !4919, !4920}
!4916 = !DILocalVariable(name: "this", arg: 1, scope: !4914, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!4917 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !4914, file: !968, line: 31, type: !229)
!4918 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !4914, file: !968, line: 31, type: !229)
!4919 = !DILocalVariable(name: "readBufferSize", arg: 4, scope: !4914, file: !968, line: 31, type: !699)
!4920 = !DILocalVariable(name: "writeBufferSize", arg: 5, scope: !4914, file: !968, line: 31, type: !699)
!4921 = !DILocation(line: 0, scope: !4914)
!4922 = !DILocation(line: 33, column: 1, scope: !4914)
!4923 = !DILocation(line: 30, column: 17, scope: !4914)
!4924 = !DILocation(line: 32, column: 5, scope: !4914)
!4925 = !DILocation(line: 32, column: 46, scope: !4914)
!4926 = !DILocation(line: 33, column: 2, scope: !4914)
!4927 = distinct !DISubprogram(name: "IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialC2Ev", scope: !973, file: !974, line: 39, type: !1007, scopeLine: 39, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !4928, retainedNodes: !4929)
!4928 = !DISubprogram(name: "IBufferedSerial", scope: !973, type: !1007, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4929 = !{!4930}
!4930 = !DILocalVariable(name: "this", arg: 1, scope: !4927, type: !4485, flags: DIFlagArtificial | DIFlagObjectPointer)
!4931 = !DILocation(line: 0, scope: !4927)
!4932 = !DILocation(line: 39, column: 7, scope: !4927)
!4933 = distinct !DISubprogram(name: "LineCircularBuffer", linkageName: "_ZN6Cicada18LineCircularBufferC2EPcy", scope: !1037, file: !1038, line: 41, type: !1091, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1090, retainedNodes: !4934)
!4934 = !{!4935, !4936, !4937}
!4935 = !DILocalVariable(name: "this", arg: 1, scope: !4933, type: !4799, flags: DIFlagArtificial | DIFlagObjectPointer)
!4936 = !DILocalVariable(name: "buffer", arg: 2, scope: !4933, file: !1038, line: 41, type: !229)
!4937 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !4933, file: !1038, line: 41, type: !699)
!4938 = !DILocation(line: 0, scope: !4933)
!4939 = !DILocation(line: 44, column: 5, scope: !4933)
!4940 = !DILocation(line: 42, column: 9, scope: !4933)
!4941 = !DILocation(line: 43, column: 9, scope: !4933)
!4942 = !DILocation(line: 44, column: 7, scope: !4933)
!4943 = distinct !DISubprogram(name: "CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcEC2EPcy", scope: !1041, file: !1042, line: 48, type: !1052, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1051, retainedNodes: !4944)
!4944 = !{!4945, !4946, !4947}
!4945 = !DILocalVariable(name: "this", arg: 1, scope: !4943, type: !4479, flags: DIFlagArtificial | DIFlagObjectPointer)
!4946 = !DILocalVariable(name: "buffer", arg: 2, scope: !4943, file: !1042, line: 48, type: !229)
!4947 = !DILocalVariable(name: "bufferSize", arg: 3, scope: !4943, file: !1042, line: 48, type: !699)
!4948 = !DILocation(line: 0, scope: !4943)
!4949 = !DILocation(line: 54, column: 5, scope: !4943)
!4950 = !DILocation(line: 49, column: 9, scope: !4943)
!4951 = !DILocation(line: 52, column: 9, scope: !4943)
!4952 = !DILocation(line: 50, column: 9, scope: !4943)
!4953 = !DILocation(line: 53, column: 9, scope: !4943)
!4954 = !DILocation(line: 54, column: 7, scope: !4943)
!4955 = distinct !DISubprogram(name: "~LineCircularBuffer", linkageName: "_ZN6Cicada18LineCircularBufferD0Ev", scope: !1037, file: !1038, line: 38, type: !1113, scopeLine: 38, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !4956, retainedNodes: !4957)
!4956 = !DISubprogram(name: "~LineCircularBuffer", scope: !1037, type: !1113, containingType: !1037, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!4957 = !{!4958}
!4958 = !DILocalVariable(name: "this", arg: 1, scope: !4955, type: !4799, flags: DIFlagArtificial | DIFlagObjectPointer)
!4959 = !DILocation(line: 0, scope: !4955)
!4960 = !DILocation(line: 38, column: 7, scope: !4955)
!4961 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada18LineCircularBuffer4pushEPKcy", scope: !1037, file: !1038, line: 46, type: !1095, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1094, retainedNodes: !4962)
!4962 = !{!4963, !4964, !4965, !4966}
!4963 = !DILocalVariable(name: "this", arg: 1, scope: !4961, type: !4799, flags: DIFlagArtificial | DIFlagObjectPointer)
!4964 = !DILocalVariable(name: "data", arg: 2, scope: !4961, file: !1038, line: 46, type: !230)
!4965 = !DILocalVariable(name: "size", arg: 3, scope: !4961, file: !1038, line: 46, type: !699)
!4966 = !DILocalVariable(name: "writeCount", scope: !4961, file: !1038, line: 51, type: !699)
!4967 = !DILocation(line: 0, scope: !4961)
!4968 = !DILocation(line: 48, column: 42, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4961, file: !1038, line: 48, column: 13)
!4970 = !DILocation(line: 48, column: 18, scope: !4969)
!4971 = !DILocation(line: 48, column: 13, scope: !4961)
!4972 = !DILocation(line: 49, column: 42, scope: !4969)
!4973 = !DILocation(line: 49, column: 13, scope: !4969)
!4974 = !DILocation(line: 53, column: 27, scope: !4961)
!4975 = !DILocation(line: 53, column: 9, scope: !4961)
!4976 = !DILocation(line: 54, column: 33, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4961, file: !1038, line: 53, column: 35)
!4978 = !DILocation(line: 54, column: 18, scope: !4977)
!4979 = !DILocation(line: 54, column: 13, scope: !4977)
!4980 = distinct !{!4980, !4975, !4981, !1450, !1451}
!4981 = !DILocation(line: 55, column: 9, scope: !4961)
!4982 = !DILocation(line: 57, column: 9, scope: !4961)
!4983 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada18LineCircularBuffer4pullEPcy", scope: !1037, file: !1038, line: 69, type: !1101, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1100, retainedNodes: !4984)
!4984 = !{!4985, !4986, !4987, !4988}
!4985 = !DILocalVariable(name: "this", arg: 1, scope: !4983, type: !4799, flags: DIFlagArtificial | DIFlagObjectPointer)
!4986 = !DILocalVariable(name: "data", arg: 2, scope: !4983, file: !1038, line: 69, type: !229)
!4987 = !DILocalVariable(name: "size", arg: 3, scope: !4983, file: !1038, line: 69, type: !699)
!4988 = !DILocalVariable(name: "readCount", scope: !4983, file: !1038, line: 74, type: !699)
!4989 = !DILocation(line: 0, scope: !4983)
!4990 = !DILocation(line: 71, column: 42, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4983, file: !1038, line: 71, column: 13)
!4992 = !DILocation(line: 71, column: 18, scope: !4991)
!4993 = !DILocation(line: 71, column: 13, scope: !4983)
!4994 = !DILocation(line: 72, column: 42, scope: !4991)
!4995 = !DILocation(line: 72, column: 13, scope: !4991)
!4996 = !DILocation(line: 76, column: 26, scope: !4983)
!4997 = !DILocation(line: 76, column: 9, scope: !4983)
!4998 = !DILocation(line: 77, column: 33, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4983, file: !1038, line: 76, column: 34)
!5000 = !DILocation(line: 77, column: 27, scope: !4999)
!5001 = !DILocation(line: 77, column: 13, scope: !4999)
!5002 = !DILocation(line: 77, column: 31, scope: !4999)
!5003 = distinct !{!5003, !4997, !5004, !1450, !1451}
!5004 = !DILocation(line: 78, column: 9, scope: !4983)
!5005 = !DILocation(line: 80, column: 9, scope: !4983)
!5006 = distinct !DISubprogram(name: "read", linkageName: "_ZN6Cicada14CircularBufferIcE4readEv", scope: !1041, file: !1042, line: 140, type: !1068, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1070, retainedNodes: !5007)
!5007 = !{!5008}
!5008 = !DILocalVariable(name: "this", arg: 1, scope: !5006, type: !4479, flags: DIFlagArtificial | DIFlagObjectPointer)
!5009 = !DILocation(line: 0, scope: !5006)
!5010 = !DILocation(line: 142, column: 16, scope: !5006)
!5011 = !DILocation(line: 142, column: 24, scope: !5006)
!5012 = !DILocation(line: 142, column: 9, scope: !5006)
!5013 = distinct !DISubprogram(name: "isEmpty", linkageName: "_ZNK6Cicada14CircularBufferIcE7isEmptyEv", scope: !1041, file: !1042, line: 158, type: !1073, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1072, retainedNodes: !5014)
!5014 = !{!5015}
!5015 = !DILocalVariable(name: "this", arg: 1, scope: !5013, type: !4457, flags: DIFlagArtificial | DIFlagObjectPointer)
!5016 = !DILocation(line: 0, scope: !5013)
!5017 = !DILocation(line: 160, column: 16, scope: !5013)
!5018 = !DILocation(line: 160, column: 31, scope: !5013)
!5019 = !DILocation(line: 160, column: 9, scope: !5013)
!5020 = distinct !DISubprogram(name: "isFull", linkageName: "_ZNK6Cicada14CircularBufferIcE6isFullEv", scope: !1041, file: !1042, line: 166, type: !1073, scopeLine: 167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1077, retainedNodes: !5021)
!5021 = !{!5022}
!5022 = !DILocalVariable(name: "this", arg: 1, scope: !5020, type: !4457, flags: DIFlagArtificial | DIFlagObjectPointer)
!5023 = !DILocation(line: 0, scope: !5020)
!5024 = !DILocation(line: 168, column: 16, scope: !5020)
!5025 = !DILocation(line: 168, column: 34, scope: !5020)
!5026 = !DILocation(line: 168, column: 31, scope: !5020)
!5027 = !DILocation(line: 168, column: 9, scope: !5020)
!5028 = distinct !DISubprogram(name: "~CircularBuffer", linkageName: "_ZN6Cicada14CircularBufferIcED0Ev", scope: !1041, file: !1042, line: 56, type: !1056, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1055, retainedNodes: !5029)
!5029 = !{!5030}
!5030 = !DILocalVariable(name: "this", arg: 1, scope: !5028, type: !4479, flags: DIFlagArtificial | DIFlagObjectPointer)
!5031 = !DILocation(line: 0, scope: !5028)
!5032 = !DILocation(line: 57, column: 5, scope: !5028)
!5033 = !DILocation(line: 57, column: 7, scope: !5028)
!5034 = distinct !DISubprogram(name: "push", linkageName: "_ZN6Cicada14CircularBufferIcE4pushEPKcy", scope: !1041, file: !1042, line: 65, type: !1059, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1058, retainedNodes: !5035)
!5035 = !{!5036, !5037, !5038, !5039}
!5036 = !DILocalVariable(name: "this", arg: 1, scope: !5034, type: !4479, flags: DIFlagArtificial | DIFlagObjectPointer)
!5037 = !DILocalVariable(name: "data", arg: 2, scope: !5034, file: !1042, line: 65, type: !230)
!5038 = !DILocalVariable(name: "size", arg: 3, scope: !5034, file: !1042, line: 65, type: !699)
!5039 = !DILocalVariable(name: "writeCount", scope: !5034, file: !1042, line: 70, type: !699)
!5040 = !DILocation(line: 0, scope: !5034)
!5041 = !DILocation(line: 67, column: 20, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5034, file: !1042, line: 67, column: 13)
!5043 = !DILocation(line: 67, column: 18, scope: !5042)
!5044 = !DILocation(line: 67, column: 13, scope: !5034)
!5045 = !DILocation(line: 68, column: 20, scope: !5042)
!5046 = !DILocation(line: 68, column: 13, scope: !5042)
!5047 = !DILocation(line: 72, column: 27, scope: !5034)
!5048 = !DILocation(line: 72, column: 9, scope: !5034)
!5049 = !DILocation(line: 73, column: 50, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5034, file: !1042, line: 72, column: 35)
!5051 = !DILocation(line: 73, column: 35, scope: !5050)
!5052 = !DILocation(line: 73, column: 13, scope: !5050)
!5053 = !DILocation(line: 73, column: 21, scope: !5050)
!5054 = !DILocation(line: 73, column: 33, scope: !5050)
!5055 = !DILocation(line: 74, column: 13, scope: !5050)
!5056 = distinct !{!5056, !5048, !5057, !1450, !1451}
!5057 = !DILocation(line: 75, column: 9, scope: !5034)
!5058 = !DILocation(line: 76, column: 9, scope: !5034)
!5059 = !DILocation(line: 76, column: 24, scope: !5034)
!5060 = !DILocation(line: 78, column: 9, scope: !5034)
!5061 = distinct !DISubprogram(name: "pull", linkageName: "_ZN6Cicada14CircularBufferIcE4pullEPcy", scope: !1041, file: !1042, line: 102, type: !1065, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1064, retainedNodes: !5062)
!5062 = !{!5063, !5064, !5065, !5066}
!5063 = !DILocalVariable(name: "this", arg: 1, scope: !5061, type: !4479, flags: DIFlagArtificial | DIFlagObjectPointer)
!5064 = !DILocalVariable(name: "data", arg: 2, scope: !5061, file: !1042, line: 102, type: !229)
!5065 = !DILocalVariable(name: "size", arg: 3, scope: !5061, file: !1042, line: 102, type: !699)
!5066 = !DILocalVariable(name: "readCount", scope: !5061, file: !1042, line: 107, type: !699)
!5067 = !DILocation(line: 0, scope: !5061)
!5068 = !DILocation(line: 104, column: 20, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5061, file: !1042, line: 104, column: 13)
!5070 = !DILocation(line: 104, column: 18, scope: !5069)
!5071 = !DILocation(line: 104, column: 13, scope: !5061)
!5072 = !DILocation(line: 105, column: 20, scope: !5069)
!5073 = !DILocation(line: 105, column: 13, scope: !5069)
!5074 = !DILocation(line: 109, column: 26, scope: !5061)
!5075 = !DILocation(line: 109, column: 9, scope: !5061)
!5076 = !DILocation(line: 110, column: 33, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5061, file: !1042, line: 109, column: 34)
!5078 = !DILocation(line: 110, column: 41, scope: !5077)
!5079 = !DILocation(line: 110, column: 27, scope: !5077)
!5080 = !DILocation(line: 110, column: 13, scope: !5077)
!5081 = !DILocation(line: 110, column: 31, scope: !5077)
!5082 = !DILocation(line: 111, column: 13, scope: !5077)
!5083 = distinct !{!5083, !5075, !5084, !1450, !1451}
!5084 = !DILocation(line: 112, column: 9, scope: !5061)
!5085 = !DILocation(line: 113, column: 9, scope: !5061)
!5086 = !DILocation(line: 113, column: 24, scope: !5061)
!5087 = !DILocation(line: 115, column: 9, scope: !5061)
!5088 = distinct !DISubprogram(name: "ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceC2Ev", scope: !747, file: !748, line: 43, type: !752, scopeLine: 43, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !5089, retainedNodes: !5090)
!5089 = !DISubprogram(name: "ICommDevice", scope: !747, type: !752, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5090 = !{!5091}
!5091 = !DILocalVariable(name: "this", arg: 1, scope: !5088, type: !4499, flags: DIFlagArtificial | DIFlagObjectPointer)
!5092 = !DILocation(line: 0, scope: !5088)
!5093 = !DILocation(line: 43, column: 7, scope: !5088)
!5094 = distinct !DISubprogram(name: "ISerial", linkageName: "_ZN6Cicada7ISerialC2Ev", scope: !978, file: !979, line: 37, type: !983, scopeLine: 37, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !5095, retainedNodes: !5096)
!5095 = !DISubprogram(name: "ISerial", scope: !978, type: !983, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5096 = !{!5097}
!5097 = !DILocalVariable(name: "this", arg: 1, scope: !5094, type: !4493, flags: DIFlagArtificial | DIFlagObjectPointer)
!5098 = !DILocation(line: 0, scope: !5094)
!5099 = !DILocation(line: 37, column: 7, scope: !5094)
!5100 = distinct !DISubprogram(name: "~IBufferedSerial", linkageName: "_ZN6Cicada15IBufferedSerialD0Ev", scope: !973, file: !974, line: 42, type: !1007, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1006, retainedNodes: !5101)
!5101 = !{!5102}
!5102 = !DILocalVariable(name: "this", arg: 1, scope: !5100, type: !4485, flags: DIFlagArtificial | DIFlagObjectPointer)
!5103 = !DILocation(line: 0, scope: !5100)
!5104 = !DILocation(line: 42, column: 32, scope: !5100)
!5105 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15IBufferedSerialD1Ev", scope: !974, file: !974, line: 42, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !283)
!5106 = !DILocation(line: 0, scope: !5105)
!5107 = distinct !DISubprogram(linkageName: "_ZThn4_N6Cicada15IBufferedSerialD0Ev", scope: !974, file: !974, line: 42, type: !4383, flags: DIFlagArtificial | DIFlagThunk | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !283)
!5108 = !DILocation(line: 0, scope: !5107)
!5109 = distinct !DISubprogram(name: "~ISerial", linkageName: "_ZN6Cicada7ISerialD0Ev", scope: !978, file: !979, line: 40, type: !983, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !982, retainedNodes: !5110)
!5110 = !{!5111}
!5111 = !DILocalVariable(name: "this", arg: 1, scope: !5109, type: !4493, flags: DIFlagArtificial | DIFlagObjectPointer)
!5112 = !DILocation(line: 0, scope: !5109)
!5113 = !DILocation(line: 40, column: 24, scope: !5109)
!5114 = distinct !DISubprogram(name: "~ICommDevice", linkageName: "_ZN6Cicada11ICommDeviceD0Ev", scope: !747, file: !748, line: 46, type: !752, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !751, retainedNodes: !5115)
!5115 = !{!5116}
!5116 = !DILocalVariable(name: "this", arg: 1, scope: !5114, type: !4499, flags: DIFlagArtificial | DIFlagObjectPointer)
!5117 = !DILocation(line: 0, scope: !5114)
!5118 = !DILocation(line: 46, column: 28, scope: !5114)
!5119 = distinct !DISubprogram(name: "BufferedSerial", linkageName: "_ZN6Cicada14BufferedSerialC2EPcS1_y", scope: !970, file: !968, line: 35, type: !1121, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1120, retainedNodes: !5120)
!5120 = !{!5121, !5122, !5123, !5124}
!5121 = !DILocalVariable(name: "this", arg: 1, scope: !5119, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!5122 = !DILocalVariable(name: "readBuffer", arg: 2, scope: !5119, file: !968, line: 35, type: !229)
!5123 = !DILocalVariable(name: "writeBuffer", arg: 3, scope: !5119, file: !968, line: 35, type: !229)
!5124 = !DILocalVariable(name: "bufferSize", arg: 4, scope: !5119, file: !968, line: 35, type: !699)
!5125 = !DILocation(line: 0, scope: !5119)
!5126 = !DILocation(line: 37, column: 1, scope: !5119)
!5127 = !DILocation(line: 35, column: 17, scope: !5119)
!5128 = !DILocation(line: 36, column: 5, scope: !5119)
!5129 = !DILocation(line: 36, column: 42, scope: !5119)
!5130 = !DILocation(line: 37, column: 2, scope: !5119)
!5131 = distinct !DISubprogram(name: "transferToAndFromBuffer", linkageName: "_ZN6Cicada14BufferedSerial23transferToAndFromBufferEv", scope: !970, file: !968, line: 171, type: !1149, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, declaration: !1155, retainedNodes: !5132)
!5132 = !{!5133, !5134}
!5133 = !DILocalVariable(name: "this", arg: 1, scope: !5131, type: !4616, flags: DIFlagArtificial | DIFlagObjectPointer)
!5134 = !DILocalVariable(name: "data", scope: !5131, file: !968, line: 173, type: !117)
!5135 = !DILocation(line: 0, scope: !5131)
!5136 = !DILocation(line: 173, column: 5, scope: !5131)
!5137 = !DILocation(line: 174, column: 9, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5131, file: !968, line: 174, column: 9)
!5139 = !DILocation(line: 174, column: 23, scope: !5138)
!5140 = !DILocation(line: 174, column: 27, scope: !5138)
!5141 = !DILocation(line: 174, column: 39, scope: !5138)
!5142 = !DILocation(line: 174, column: 9, scope: !5131)
!5143 = !DILocation(line: 175, column: 26, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5138, file: !968, line: 174, column: 49)
!5145 = !DILocation(line: 175, column: 21, scope: !5144)
!5146 = !DILocation(line: 176, column: 5, scope: !5144)
!5147 = !DILocation(line: 178, column: 9, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5131, file: !968, line: 178, column: 9)
!5149 = !DILocation(line: 178, column: 22, scope: !5148)
!5150 = !DILocation(line: 178, column: 9, scope: !5131)
!5151 = !DILocation(line: 179, column: 35, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5153, file: !968, line: 179, column: 13)
!5153 = distinct !DILexicalBlock(scope: !5148, file: !968, line: 178, column: 40)
!5154 = !DILocation(line: 179, column: 13, scope: !5152)
!5155 = !DILocation(line: 179, column: 13, scope: !5153)
!5156 = !DILocation(line: 180, column: 26, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5152, file: !968, line: 179, column: 44)
!5158 = !DILocation(line: 181, column: 9, scope: !5157)
!5159 = !DILocation(line: 183, column: 1, scope: !5131)
!5160 = distinct !DISubprogram(name: "eDisableInterrupts", linkageName: "_Z18eDisableInterruptsv", scope: !1160, file: !1160, line: 27, type: !4, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !283)
!5161 = !DILocation(line: 142, column: 3, scope: !5162, inlinedAt: !5163)
!5162 = distinct !DISubprogram(name: "__disable_irq", linkageName: "_ZL13__disable_irqv", scope: !3555, file: !3555, line: 140, type: !4, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !283)
!5163 = distinct !DILocation(line: 29, column: 5, scope: !5160)
!5164 = !{i64 1184613}
!5165 = !DILocation(line: 30, column: 1, scope: !5160)
!5166 = distinct !DISubprogram(name: "eEnableInterrupts", linkageName: "_Z17eEnableInterruptsv", scope: !1160, file: !1160, line: 32, type: !4, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !283)
!5167 = !DILocation(line: 131, column: 3, scope: !5168, inlinedAt: !5169)
!5168 = distinct !DISubprogram(name: "__enable_irq", linkageName: "_ZL12__enable_irqv", scope: !3555, file: !3555, line: 129, type: !4, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !283)
!5169 = distinct !DILocation(line: 34, column: 5, scope: !5166)
!5170 = !{i64 1184341}
!5171 = !DILocation(line: 35, column: 1, scope: !5166)
!5172 = distinct !DISubprogram(name: "HAL_UART_Init", scope: !1162, file: !1162, line: 314, type: !5173, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5175)
!5173 = !DISubroutineType(types: !5174)
!5174 = !{!2496, !1187}
!5175 = !{!5176}
!5176 = !DILocalVariable(name: "huart", arg: 1, scope: !5172, file: !1162, line: 314, type: !1187)
!5177 = !DILocation(line: 0, scope: !5172)
!5178 = !DILocation(line: 317, column: 13, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5172, file: !1162, line: 317, column: 7)
!5180 = !DILocation(line: 317, column: 7, scope: !5172)
!5181 = !DILocation(line: 338, column: 14, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5172, file: !1162, line: 338, column: 7)
!5183 = !{!5184, !1600, i64 60}
!5184 = !{!"__UART_HandleTypeDef", !1599, i64 0, !3813, i64 4, !1599, i64 32, !5185, i64 36, !5185, i64 38, !1599, i64 40, !5185, i64 44, !5185, i64 46, !1599, i64 48, !1599, i64 52, !1600, i64 56, !1600, i64 60, !1600, i64 64, !2442, i64 68}
!5185 = !{!"short", !1600, i64 0}
!5186 = !DILocation(line: 338, column: 21, scope: !5182)
!5187 = !DILocation(line: 338, column: 7, scope: !5172)
!5188 = !DILocation(line: 341, column: 12, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5182, file: !1162, line: 339, column: 3)
!5190 = !DILocation(line: 341, column: 17, scope: !5189)
!5191 = !{!5184, !1600, i64 56}
!5192 = !DILocation(line: 355, column: 5, scope: !5189)
!5193 = !DILocation(line: 357, column: 3, scope: !5189)
!5194 = !DILocation(line: 359, column: 17, scope: !5172)
!5195 = !DILocation(line: 362, column: 3, scope: !5172)
!5196 = !{!5184, !1599, i64 0}
!5197 = !DILocation(line: 365, column: 3, scope: !5172)
!5198 = !DILocation(line: 370, column: 3, scope: !5172)
!5199 = !DILocation(line: 371, column: 3, scope: !5172)
!5200 = !DILocation(line: 374, column: 3, scope: !5172)
!5201 = !DILocation(line: 377, column: 10, scope: !5172)
!5202 = !DILocation(line: 377, column: 20, scope: !5172)
!5203 = !{!5184, !2442, i64 68}
!5204 = !DILocation(line: 378, column: 17, scope: !5172)
!5205 = !DILocation(line: 379, column: 10, scope: !5172)
!5206 = !DILocation(line: 379, column: 18, scope: !5172)
!5207 = !{!5184, !1600, i64 64}
!5208 = !DILocation(line: 381, column: 3, scope: !5172)
!5209 = !DILocation(line: 382, column: 1, scope: !5172)
!5210 = distinct !DISubprogram(name: "HAL_UART_MspInit", scope: !1162, file: !1162, line: 672, type: !5211, scopeLine: 673, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5213)
!5211 = !DISubroutineType(types: !5212)
!5212 = !{null, !1187}
!5213 = !{!5214}
!5214 = !DILocalVariable(name: "huart", arg: 1, scope: !5210, file: !1162, line: 672, type: !1187)
!5215 = !DILocation(line: 0, scope: !5210)
!5216 = !DILocation(line: 679, column: 1, scope: !5210)
!5217 = distinct !DISubprogram(name: "UART_SetConfig", scope: !1162, file: !1162, line: 3063, type: !5211, scopeLine: 3064, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5218)
!5218 = !{!5219, !5220, !5221}
!5219 = !DILocalVariable(name: "huart", arg: 1, scope: !5217, file: !1162, line: 3063, type: !1187)
!5220 = !DILocalVariable(name: "tmpreg", scope: !5217, file: !1162, line: 3065, type: !24)
!5221 = !DILocalVariable(name: "pclk", scope: !5217, file: !1162, line: 3066, type: !24)
!5222 = !DILocation(line: 0, scope: !5217)
!5223 = !DILocation(line: 3077, column: 3, scope: !5217)
!5224 = !{!5184, !2442, i64 12}
!5225 = !DILocation(line: 3092, column: 34, scope: !5217)
!5226 = !{!5184, !2442, i64 8}
!5227 = !DILocation(line: 3092, column: 59, scope: !5217)
!5228 = !{!5184, !2442, i64 16}
!5229 = !DILocation(line: 3092, column: 45, scope: !5217)
!5230 = !DILocation(line: 3092, column: 80, scope: !5217)
!5231 = !{!5184, !2442, i64 20}
!5232 = !DILocation(line: 3092, column: 66, scope: !5217)
!5233 = !DILocation(line: 3093, column: 3, scope: !5217)
!5234 = !DILocation(line: 3100, column: 3, scope: !5217)
!5235 = !{!5184, !2442, i64 24}
!5236 = !DILocation(line: 3134, column: 22, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5217, file: !1162, line: 3134, column: 6)
!5238 = !DILocation(line: 3134, column: 6, scope: !5217)
!5239 = !DILocation(line: 3136, column: 12, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5237, file: !1162, line: 3135, column: 3)
!5241 = !DILocation(line: 3138, column: 3, scope: !5240)
!5242 = !DILocation(line: 3141, column: 12, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5237, file: !1162, line: 3140, column: 3)
!5244 = !DILocation(line: 0, scope: !5237)
!5245 = !{!5184, !2442, i64 4}
!5246 = !DILocation(line: 3145, column: 1, scope: !5217)
!5247 = distinct !DISubprogram(name: "HAL_HalfDuplex_Init", scope: !1162, file: !1162, line: 391, type: !5173, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5248)
!5248 = !{!5249}
!5249 = !DILocalVariable(name: "huart", arg: 1, scope: !5247, file: !1162, line: 391, type: !1187)
!5250 = !DILocation(line: 0, scope: !5247)
!5251 = !DILocation(line: 394, column: 13, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5247, file: !1162, line: 394, column: 7)
!5253 = !DILocation(line: 394, column: 7, scope: !5247)
!5254 = !DILocation(line: 406, column: 14, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5247, file: !1162, line: 406, column: 7)
!5256 = !DILocation(line: 406, column: 21, scope: !5255)
!5257 = !DILocation(line: 406, column: 7, scope: !5247)
!5258 = !DILocation(line: 409, column: 12, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5255, file: !1162, line: 407, column: 3)
!5260 = !DILocation(line: 409, column: 17, scope: !5259)
!5261 = !DILocation(line: 423, column: 5, scope: !5259)
!5262 = !DILocation(line: 425, column: 3, scope: !5259)
!5263 = !DILocation(line: 427, column: 17, scope: !5247)
!5264 = !DILocation(line: 430, column: 3, scope: !5247)
!5265 = !DILocation(line: 433, column: 3, scope: !5247)
!5266 = !DILocation(line: 438, column: 3, scope: !5247)
!5267 = !DILocation(line: 439, column: 3, scope: !5247)
!5268 = !DILocation(line: 442, column: 3, scope: !5247)
!5269 = !DILocation(line: 445, column: 3, scope: !5247)
!5270 = !DILocation(line: 448, column: 10, scope: !5247)
!5271 = !DILocation(line: 448, column: 20, scope: !5247)
!5272 = !DILocation(line: 449, column: 17, scope: !5247)
!5273 = !DILocation(line: 450, column: 10, scope: !5247)
!5274 = !DILocation(line: 450, column: 18, scope: !5247)
!5275 = !DILocation(line: 452, column: 3, scope: !5247)
!5276 = !DILocation(line: 453, column: 1, scope: !5247)
!5277 = distinct !DISubprogram(name: "HAL_LIN_Init", scope: !1162, file: !1162, line: 466, type: !5278, scopeLine: 467, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5280)
!5278 = !DISubroutineType(types: !5279)
!5279 = !{!2496, !1187, !24}
!5280 = !{!5281, !5282}
!5281 = !DILocalVariable(name: "huart", arg: 1, scope: !5277, file: !1162, line: 466, type: !1187)
!5282 = !DILocalVariable(name: "BreakDetectLength", arg: 2, scope: !5277, file: !1162, line: 466, type: !24)
!5283 = !DILocation(line: 0, scope: !5277)
!5284 = !DILocation(line: 469, column: 13, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5277, file: !1162, line: 469, column: 7)
!5286 = !DILocation(line: 469, column: 7, scope: !5277)
!5287 = !DILocation(line: 484, column: 14, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5277, file: !1162, line: 484, column: 7)
!5289 = !DILocation(line: 484, column: 21, scope: !5288)
!5290 = !DILocation(line: 484, column: 7, scope: !5277)
!5291 = !DILocation(line: 487, column: 12, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5288, file: !1162, line: 485, column: 3)
!5293 = !DILocation(line: 487, column: 17, scope: !5292)
!5294 = !DILocation(line: 501, column: 5, scope: !5292)
!5295 = !DILocation(line: 503, column: 3, scope: !5292)
!5296 = !DILocation(line: 505, column: 17, scope: !5277)
!5297 = !DILocation(line: 508, column: 3, scope: !5277)
!5298 = !DILocation(line: 511, column: 3, scope: !5277)
!5299 = !DILocation(line: 516, column: 3, scope: !5277)
!5300 = !DILocation(line: 517, column: 3, scope: !5277)
!5301 = !DILocation(line: 520, column: 3, scope: !5277)
!5302 = !DILocation(line: 523, column: 3, scope: !5277)
!5303 = !DILocation(line: 524, column: 3, scope: !5277)
!5304 = !DILocation(line: 527, column: 3, scope: !5277)
!5305 = !DILocation(line: 530, column: 10, scope: !5277)
!5306 = !DILocation(line: 530, column: 20, scope: !5277)
!5307 = !DILocation(line: 531, column: 17, scope: !5277)
!5308 = !DILocation(line: 532, column: 10, scope: !5277)
!5309 = !DILocation(line: 532, column: 18, scope: !5277)
!5310 = !DILocation(line: 534, column: 3, scope: !5277)
!5311 = !DILocation(line: 535, column: 1, scope: !5277)
!5312 = distinct !DISubprogram(name: "HAL_MultiProcessor_Init", scope: !1162, file: !1162, line: 549, type: !5313, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5315)
!5313 = !DISubroutineType(types: !5314)
!5314 = !{!2496, !1187, !117, !24}
!5315 = !{!5316, !5317, !5318}
!5316 = !DILocalVariable(name: "huart", arg: 1, scope: !5312, file: !1162, line: 549, type: !1187)
!5317 = !DILocalVariable(name: "Address", arg: 2, scope: !5312, file: !1162, line: 549, type: !117)
!5318 = !DILocalVariable(name: "WakeUpMethod", arg: 3, scope: !5312, file: !1162, line: 549, type: !24)
!5319 = !DILocation(line: 0, scope: !5312)
!5320 = !DILocation(line: 552, column: 13, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5312, file: !1162, line: 552, column: 7)
!5322 = !DILocation(line: 552, column: 7, scope: !5312)
!5323 = !DILocation(line: 568, column: 14, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5312, file: !1162, line: 568, column: 7)
!5325 = !DILocation(line: 568, column: 21, scope: !5324)
!5326 = !DILocation(line: 568, column: 7, scope: !5312)
!5327 = !DILocation(line: 571, column: 12, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5324, file: !1162, line: 569, column: 3)
!5329 = !DILocation(line: 571, column: 17, scope: !5328)
!5330 = !DILocation(line: 585, column: 5, scope: !5328)
!5331 = !DILocation(line: 587, column: 3, scope: !5328)
!5332 = !DILocation(line: 589, column: 17, scope: !5312)
!5333 = !DILocation(line: 592, column: 3, scope: !5312)
!5334 = !DILocation(line: 595, column: 3, scope: !5312)
!5335 = !DILocation(line: 600, column: 3, scope: !5312)
!5336 = !DILocation(line: 601, column: 3, scope: !5312)
!5337 = !DILocation(line: 604, column: 3, scope: !5312)
!5338 = !DILocation(line: 605, column: 3, scope: !5312)
!5339 = !DILocation(line: 608, column: 3, scope: !5312)
!5340 = !DILocation(line: 609, column: 3, scope: !5312)
!5341 = !DILocation(line: 612, column: 3, scope: !5312)
!5342 = !DILocation(line: 615, column: 10, scope: !5312)
!5343 = !DILocation(line: 615, column: 20, scope: !5312)
!5344 = !DILocation(line: 616, column: 17, scope: !5312)
!5345 = !DILocation(line: 617, column: 10, scope: !5312)
!5346 = !DILocation(line: 617, column: 18, scope: !5312)
!5347 = !DILocation(line: 619, column: 3, scope: !5312)
!5348 = !DILocation(line: 620, column: 1, scope: !5312)
!5349 = distinct !DISubprogram(name: "HAL_UART_DeInit", scope: !1162, file: !1162, line: 628, type: !5173, scopeLine: 629, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5350)
!5350 = !{!5351}
!5351 = !DILocalVariable(name: "huart", arg: 1, scope: !5349, file: !1162, line: 628, type: !1187)
!5352 = !DILocation(line: 0, scope: !5349)
!5353 = !DILocation(line: 631, column: 13, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5349, file: !1162, line: 631, column: 7)
!5355 = !DILocation(line: 631, column: 7, scope: !5349)
!5356 = !DILocation(line: 639, column: 10, scope: !5349)
!5357 = !DILocation(line: 639, column: 17, scope: !5349)
!5358 = !DILocation(line: 642, column: 3, scope: !5349)
!5359 = !DILocation(line: 653, column: 3, scope: !5349)
!5360 = !DILocation(line: 656, column: 10, scope: !5349)
!5361 = !DILocation(line: 656, column: 20, scope: !5349)
!5362 = !DILocation(line: 657, column: 17, scope: !5349)
!5363 = !DILocation(line: 658, column: 10, scope: !5349)
!5364 = !DILocation(line: 658, column: 18, scope: !5349)
!5365 = !DILocation(line: 661, column: 3, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5349, file: !1162, line: 661, column: 3)
!5367 = !DILocation(line: 663, column: 3, scope: !5349)
!5368 = !DILocation(line: 664, column: 1, scope: !5349)
!5369 = distinct !DISubprogram(name: "HAL_UART_MspDeInit", scope: !1162, file: !1162, line: 687, type: !5211, scopeLine: 688, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5370)
!5370 = !{!5371}
!5371 = !DILocalVariable(name: "huart", arg: 1, scope: !5369, file: !1162, line: 687, type: !1187)
!5372 = !DILocation(line: 0, scope: !5369)
!5373 = !DILocation(line: 694, column: 1, scope: !5369)
!5374 = distinct !DISubprogram(name: "HAL_UART_Transmit", scope: !1162, file: !1162, line: 1027, type: !5375, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5377)
!5375 = !DISubroutineType(types: !5376)
!5376 = !{!2496, !1187, !670, !37, !24}
!5377 = !{!5378, !5379, !5380, !5381, !5382, !5383}
!5378 = !DILocalVariable(name: "huart", arg: 1, scope: !5374, file: !1162, line: 1027, type: !1187)
!5379 = !DILocalVariable(name: "pData", arg: 2, scope: !5374, file: !1162, line: 1027, type: !670)
!5380 = !DILocalVariable(name: "Size", arg: 3, scope: !5374, file: !1162, line: 1027, type: !37)
!5381 = !DILocalVariable(name: "Timeout", arg: 4, scope: !5374, file: !1162, line: 1027, type: !24)
!5382 = !DILocalVariable(name: "tmp", scope: !5374, file: !1162, line: 1029, type: !1185)
!5383 = !DILocalVariable(name: "tickstart", scope: !5374, file: !1162, line: 1030, type: !24)
!5384 = !DILocation(line: 0, scope: !5374)
!5385 = !DILocation(line: 1033, column: 14, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5374, file: !1162, line: 1033, column: 7)
!5387 = !DILocation(line: 1033, column: 21, scope: !5386)
!5388 = !DILocation(line: 1033, column: 7, scope: !5374)
!5389 = !DILocation(line: 1035, column: 16, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5391, file: !1162, line: 1035, column: 9)
!5391 = distinct !DILexicalBlock(scope: !5386, file: !1162, line: 1034, column: 3)
!5392 = !DILocation(line: 1035, column: 25, scope: !5390)
!5393 = !DILocation(line: 1041, column: 5, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !1162, line: 1041, column: 5)
!5395 = distinct !DILexicalBlock(scope: !5391, file: !1162, line: 1041, column: 5)
!5396 = !DILocation(line: 1041, column: 5, scope: !5395)
!5397 = !DILocation(line: 1041, column: 5, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5394, file: !1162, line: 1041, column: 5)
!5399 = !DILocation(line: 1043, column: 12, scope: !5391)
!5400 = !DILocation(line: 1043, column: 22, scope: !5391)
!5401 = !DILocation(line: 1044, column: 19, scope: !5391)
!5402 = !DILocation(line: 1047, column: 17, scope: !5391)
!5403 = !DILocation(line: 1049, column: 12, scope: !5391)
!5404 = !DILocation(line: 1049, column: 23, scope: !5391)
!5405 = !{!5184, !5185, i64 36}
!5406 = !DILocation(line: 1050, column: 12, scope: !5391)
!5407 = !DILocation(line: 1050, column: 24, scope: !5391)
!5408 = !{!5184, !5185, i64 38}
!5409 = !DILocation(line: 1051, column: 19, scope: !5391)
!5410 = !DILocation(line: 1051, column: 31, scope: !5391)
!5411 = !DILocation(line: 1051, column: 5, scope: !5391)
!5412 = !DILocation(line: 1053, column: 25, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5391, file: !1162, line: 1052, column: 5)
!5414 = !DILocation(line: 1054, column: 23, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5413, file: !1162, line: 1054, column: 11)
!5416 = !DILocation(line: 1054, column: 34, scope: !5415)
!5417 = !DILocation(line: 0, scope: !5415)
!5418 = !DILocation(line: 1054, column: 11, scope: !5413)
!5419 = !DILocation(line: 1056, column: 13, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5415, file: !1162, line: 1055, column: 7)
!5421 = !DILocation(line: 1060, column: 15, scope: !5420)
!5422 = !DILocation(line: 1061, column: 32, scope: !5420)
!5423 = !{!5185, !5185, i64 0}
!5424 = !DILocation(line: 1061, column: 37, scope: !5420)
!5425 = !DILocation(line: 1061, column: 16, scope: !5420)
!5426 = !DILocation(line: 1061, column: 26, scope: !5420)
!5427 = !DILocation(line: 1061, column: 29, scope: !5420)
!5428 = !{!3813, !2442, i64 4}
!5429 = !DILocation(line: 1062, column: 25, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5420, file: !1162, line: 1062, column: 13)
!5431 = !DILocation(line: 1062, column: 32, scope: !5430)
!5432 = !DILocation(line: 1062, column: 13, scope: !5420)
!5433 = !DILocation(line: 1064, column: 17, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5430, file: !1162, line: 1063, column: 9)
!5435 = !DILocation(line: 1065, column: 9, scope: !5434)
!5436 = !DILocation(line: 1068, column: 17, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5430, file: !1162, line: 1067, column: 9)
!5438 = !DILocation(line: 1073, column: 13, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5415, file: !1162, line: 1072, column: 7)
!5440 = !DILocation(line: 1077, column: 38, scope: !5439)
!5441 = !DILocation(line: 1077, column: 32, scope: !5439)
!5442 = !DILocation(line: 1077, column: 16, scope: !5439)
!5443 = !DILocation(line: 1077, column: 26, scope: !5439)
!5444 = !DILocation(line: 1077, column: 29, scope: !5439)
!5445 = distinct !{!5445, !5411, !5446, !1450, !1451}
!5446 = !DILocation(line: 1079, column: 5, scope: !5391)
!5447 = !DILocation(line: 1081, column: 9, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5391, file: !1162, line: 1081, column: 9)
!5449 = !DILocation(line: 1081, column: 85, scope: !5448)
!5450 = !DILocation(line: 1081, column: 9, scope: !5391)
!5451 = !DILocation(line: 1087, column: 19, scope: !5391)
!5452 = !DILocation(line: 1090, column: 5, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5391, file: !1162, line: 1090, column: 5)
!5454 = !DILocation(line: 1092, column: 5, scope: !5391)
!5455 = !DILocation(line: 0, scope: !5386)
!5456 = !DILocation(line: 1098, column: 1, scope: !5374)
!5457 = distinct !DISubprogram(name: "UART_WaitOnFlagUntilTimeout", scope: !1162, file: !1162, line: 2690, type: !5458, scopeLine: 2691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5460)
!5458 = !DISubroutineType(types: !5459)
!5459 = !{!2496, !1187, !24, !2594, !24, !24}
!5460 = !{!5461, !5462, !5463, !5464, !5465}
!5461 = !DILocalVariable(name: "huart", arg: 1, scope: !5457, file: !1162, line: 2690, type: !1187)
!5462 = !DILocalVariable(name: "Flag", arg: 2, scope: !5457, file: !1162, line: 2690, type: !24)
!5463 = !DILocalVariable(name: "Status", arg: 3, scope: !5457, file: !1162, line: 2690, type: !2594)
!5464 = !DILocalVariable(name: "Tickstart", arg: 4, scope: !5457, file: !1162, line: 2690, type: !24)
!5465 = !DILocalVariable(name: "Timeout", arg: 5, scope: !5457, file: !1162, line: 2690, type: !24)
!5466 = !DILocation(line: 0, scope: !5457)
!5467 = !DILocation(line: 2693, column: 11, scope: !5457)
!5468 = !{!3813, !2442, i64 0}
!5469 = !DILocation(line: 2693, column: 3, scope: !5457)
!5470 = !DILocation(line: 2696, column: 9, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5457, file: !1162, line: 2694, column: 3)
!5472 = !DILocation(line: 2698, column: 32, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5474, file: !1162, line: 2698, column: 11)
!5474 = distinct !DILexicalBlock(scope: !5475, file: !1162, line: 2697, column: 5)
!5475 = distinct !DILexicalBlock(scope: !5471, file: !1162, line: 2696, column: 9)
!5476 = !DILocation(line: 2698, column: 46, scope: !5473)
!5477 = !DILocation(line: 2698, column: 59, scope: !5473)
!5478 = !DILocation(line: 2698, column: 11, scope: !5474)
!5479 = !DILocation(line: 2701, column: 9, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5473, file: !1162, line: 2699, column: 7)
!5481 = !DILocation(line: 2702, column: 9, scope: !5480)
!5482 = !DILocation(line: 2704, column: 16, scope: !5480)
!5483 = !DILocation(line: 2704, column: 24, scope: !5480)
!5484 = !DILocation(line: 2705, column: 16, scope: !5480)
!5485 = !DILocation(line: 2705, column: 24, scope: !5480)
!5486 = !DILocation(line: 2708, column: 9, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5480, file: !1162, line: 2708, column: 9)
!5488 = !DILocation(line: 2710, column: 9, scope: !5480)
!5489 = distinct !{!5489, !5469, !5490, !1450, !1451}
!5490 = !DILocation(line: 2713, column: 3, scope: !5457)
!5491 = !DILocation(line: 2715, column: 1, scope: !5457)
!5492 = distinct !DISubprogram(name: "HAL_UART_Receive", scope: !1162, file: !1162, line: 1112, type: !5375, scopeLine: 1113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5493)
!5493 = !{!5494, !5495, !5496, !5497, !5498, !5499}
!5494 = !DILocalVariable(name: "huart", arg: 1, scope: !5492, file: !1162, line: 1112, type: !1187)
!5495 = !DILocalVariable(name: "pData", arg: 2, scope: !5492, file: !1162, line: 1112, type: !670)
!5496 = !DILocalVariable(name: "Size", arg: 3, scope: !5492, file: !1162, line: 1112, type: !37)
!5497 = !DILocalVariable(name: "Timeout", arg: 4, scope: !5492, file: !1162, line: 1112, type: !24)
!5498 = !DILocalVariable(name: "tmp", scope: !5492, file: !1162, line: 1114, type: !1185)
!5499 = !DILocalVariable(name: "tickstart", scope: !5492, file: !1162, line: 1115, type: !24)
!5500 = !DILocation(line: 0, scope: !5492)
!5501 = !DILocation(line: 1118, column: 14, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5492, file: !1162, line: 1118, column: 7)
!5503 = !DILocation(line: 1118, column: 22, scope: !5502)
!5504 = !DILocation(line: 1118, column: 7, scope: !5492)
!5505 = !DILocation(line: 1120, column: 16, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5507, file: !1162, line: 1120, column: 9)
!5507 = distinct !DILexicalBlock(scope: !5502, file: !1162, line: 1119, column: 3)
!5508 = !DILocation(line: 1120, column: 25, scope: !5506)
!5509 = !DILocation(line: 1126, column: 5, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5511, file: !1162, line: 1126, column: 5)
!5511 = distinct !DILexicalBlock(scope: !5507, file: !1162, line: 1126, column: 5)
!5512 = !DILocation(line: 1126, column: 5, scope: !5511)
!5513 = !DILocation(line: 1126, column: 5, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5510, file: !1162, line: 1126, column: 5)
!5515 = !DILocation(line: 1128, column: 12, scope: !5507)
!5516 = !DILocation(line: 1128, column: 22, scope: !5507)
!5517 = !DILocation(line: 1129, column: 20, scope: !5507)
!5518 = !DILocation(line: 1132, column: 17, scope: !5507)
!5519 = !DILocation(line: 1134, column: 12, scope: !5507)
!5520 = !DILocation(line: 1134, column: 23, scope: !5507)
!5521 = !{!5184, !5185, i64 44}
!5522 = !DILocation(line: 1135, column: 12, scope: !5507)
!5523 = !DILocation(line: 1135, column: 24, scope: !5507)
!5524 = !{!5184, !5185, i64 46}
!5525 = !DILocation(line: 1138, column: 19, scope: !5507)
!5526 = !DILocation(line: 1138, column: 31, scope: !5507)
!5527 = !DILocation(line: 1138, column: 5, scope: !5507)
!5528 = !DILocation(line: 1140, column: 25, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5507, file: !1162, line: 1139, column: 5)
!5530 = !DILocation(line: 1141, column: 23, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5529, file: !1162, line: 1141, column: 11)
!5532 = !DILocation(line: 1141, column: 34, scope: !5531)
!5533 = !DILocation(line: 0, scope: !5531)
!5534 = !DILocation(line: 1141, column: 11, scope: !5529)
!5535 = !DILocation(line: 1143, column: 13, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5531, file: !1162, line: 1142, column: 7)
!5537 = !DILocation(line: 1147, column: 15, scope: !5536)
!5538 = !DILocation(line: 1148, column: 25, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5536, file: !1162, line: 1148, column: 13)
!5540 = !DILocation(line: 1148, column: 32, scope: !5539)
!5541 = !DILocation(line: 1148, column: 13, scope: !5536)
!5542 = !DILocation(line: 1150, column: 36, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5539, file: !1162, line: 1149, column: 9)
!5544 = !DILocation(line: 1150, column: 46, scope: !5543)
!5545 = !DILocation(line: 1150, column: 18, scope: !5543)
!5546 = !DILocation(line: 1150, column: 16, scope: !5543)
!5547 = !DILocation(line: 1151, column: 17, scope: !5543)
!5548 = !DILocation(line: 1152, column: 9, scope: !5543)
!5549 = !DILocation(line: 1155, column: 36, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5539, file: !1162, line: 1154, column: 9)
!5551 = !DILocation(line: 1155, column: 46, scope: !5550)
!5552 = !DILocation(line: 1155, column: 18, scope: !5550)
!5553 = !DILocation(line: 1155, column: 16, scope: !5550)
!5554 = !DILocation(line: 1156, column: 17, scope: !5550)
!5555 = !DILocation(line: 1162, column: 13, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5531, file: !1162, line: 1161, column: 7)
!5557 = !DILocation(line: 1166, column: 25, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5556, file: !1162, line: 1166, column: 13)
!5559 = !DILocation(line: 1166, column: 32, scope: !5558)
!5560 = !DILocation(line: 1166, column: 13, scope: !5556)
!5561 = !DILocation(line: 1168, column: 39, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5558, file: !1162, line: 1167, column: 9)
!5563 = !DILocation(line: 1168, column: 49, scope: !5562)
!5564 = !DILocation(line: 1168, column: 22, scope: !5562)
!5565 = !DILocation(line: 1168, column: 17, scope: !5562)
!5566 = !DILocation(line: 1168, column: 20, scope: !5562)
!5567 = !DILocation(line: 1169, column: 9, scope: !5562)
!5568 = !DILocation(line: 1172, column: 39, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5558, file: !1162, line: 1171, column: 9)
!5570 = !DILocation(line: 1172, column: 49, scope: !5569)
!5571 = !DILocation(line: 1172, column: 22, scope: !5569)
!5572 = !DILocation(line: 1172, column: 17, scope: !5569)
!5573 = !DILocation(line: 1172, column: 20, scope: !5569)
!5574 = distinct !{!5574, !5527, !5575, !1450, !1451}
!5575 = !DILocation(line: 1176, column: 5, scope: !5507)
!5576 = !DILocation(line: 1179, column: 20, scope: !5507)
!5577 = !DILocation(line: 1182, column: 5, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5507, file: !1162, line: 1182, column: 5)
!5579 = !DILocation(line: 1184, column: 5, scope: !5507)
!5580 = !DILocation(line: 0, scope: !5502)
!5581 = !DILocation(line: 1190, column: 1, scope: !5492)
!5582 = distinct !DISubprogram(name: "HAL_UART_Transmit_IT", scope: !1162, file: !1162, line: 1203, type: !5583, scopeLine: 1204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5585)
!5583 = !DISubroutineType(types: !5584)
!5584 = !{!2496, !1187, !670, !37}
!5585 = !{!5586, !5587, !5588}
!5586 = !DILocalVariable(name: "huart", arg: 1, scope: !5582, file: !1162, line: 1203, type: !1187)
!5587 = !DILocalVariable(name: "pData", arg: 2, scope: !5582, file: !1162, line: 1203, type: !670)
!5588 = !DILocalVariable(name: "Size", arg: 3, scope: !5582, file: !1162, line: 1203, type: !37)
!5589 = !DILocation(line: 0, scope: !5582)
!5590 = !DILocation(line: 1206, column: 14, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5582, file: !1162, line: 1206, column: 7)
!5592 = !DILocation(line: 1206, column: 21, scope: !5591)
!5593 = !DILocation(line: 1206, column: 7, scope: !5582)
!5594 = !DILocation(line: 1208, column: 16, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !1162, line: 1208, column: 9)
!5596 = distinct !DILexicalBlock(scope: !5591, file: !1162, line: 1207, column: 3)
!5597 = !DILocation(line: 1208, column: 25, scope: !5595)
!5598 = !DILocation(line: 1214, column: 5, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5600, file: !1162, line: 1214, column: 5)
!5600 = distinct !DILexicalBlock(scope: !5596, file: !1162, line: 1214, column: 5)
!5601 = !DILocation(line: 1214, column: 5, scope: !5600)
!5602 = !DILocation(line: 1214, column: 5, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5599, file: !1162, line: 1214, column: 5)
!5604 = !DILocation(line: 1216, column: 12, scope: !5596)
!5605 = !DILocation(line: 1216, column: 23, scope: !5596)
!5606 = !{!5184, !1599, i64 32}
!5607 = !DILocation(line: 1217, column: 12, scope: !5596)
!5608 = !DILocation(line: 1217, column: 23, scope: !5596)
!5609 = !DILocation(line: 1218, column: 12, scope: !5596)
!5610 = !DILocation(line: 1218, column: 24, scope: !5596)
!5611 = !DILocation(line: 1220, column: 12, scope: !5596)
!5612 = !DILocation(line: 1220, column: 22, scope: !5596)
!5613 = !DILocation(line: 1221, column: 19, scope: !5596)
!5614 = !DILocation(line: 1224, column: 5, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5596, file: !1162, line: 1224, column: 5)
!5616 = !DILocation(line: 1227, column: 5, scope: !5596)
!5617 = !DILocation(line: 1229, column: 5, scope: !5596)
!5618 = !DILocation(line: 0, scope: !5591)
!5619 = !DILocation(line: 1235, column: 1, scope: !5582)
!5620 = distinct !DISubprogram(name: "HAL_UART_Receive_IT", scope: !1162, file: !1162, line: 1248, type: !5583, scopeLine: 1249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5621)
!5621 = !{!5622, !5623, !5624}
!5622 = !DILocalVariable(name: "huart", arg: 1, scope: !5620, file: !1162, line: 1248, type: !1187)
!5623 = !DILocalVariable(name: "pData", arg: 2, scope: !5620, file: !1162, line: 1248, type: !670)
!5624 = !DILocalVariable(name: "Size", arg: 3, scope: !5620, file: !1162, line: 1248, type: !37)
!5625 = !DILocation(line: 0, scope: !5620)
!5626 = !DILocation(line: 1251, column: 14, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5620, file: !1162, line: 1251, column: 7)
!5628 = !DILocation(line: 1251, column: 22, scope: !5627)
!5629 = !DILocation(line: 1251, column: 7, scope: !5620)
!5630 = !DILocation(line: 1253, column: 16, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !1162, line: 1253, column: 9)
!5632 = distinct !DILexicalBlock(scope: !5627, file: !1162, line: 1252, column: 3)
!5633 = !DILocation(line: 1253, column: 25, scope: !5631)
!5634 = !DILocation(line: 1259, column: 5, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5636, file: !1162, line: 1259, column: 5)
!5636 = distinct !DILexicalBlock(scope: !5632, file: !1162, line: 1259, column: 5)
!5637 = !DILocation(line: 1259, column: 5, scope: !5636)
!5638 = !DILocation(line: 1259, column: 5, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5635, file: !1162, line: 1259, column: 5)
!5640 = !DILocation(line: 1261, column: 12, scope: !5632)
!5641 = !DILocation(line: 1261, column: 23, scope: !5632)
!5642 = !{!5184, !1599, i64 40}
!5643 = !DILocation(line: 1262, column: 12, scope: !5632)
!5644 = !DILocation(line: 1262, column: 23, scope: !5632)
!5645 = !DILocation(line: 1263, column: 12, scope: !5632)
!5646 = !DILocation(line: 1263, column: 24, scope: !5632)
!5647 = !DILocation(line: 1265, column: 12, scope: !5632)
!5648 = !DILocation(line: 1265, column: 22, scope: !5632)
!5649 = !DILocation(line: 1266, column: 20, scope: !5632)
!5650 = !DILocation(line: 1269, column: 5, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5632, file: !1162, line: 1269, column: 5)
!5652 = !DILocation(line: 1272, column: 5, scope: !5632)
!5653 = !DILocation(line: 1275, column: 5, scope: !5632)
!5654 = !DILocation(line: 1278, column: 5, scope: !5632)
!5655 = !DILocation(line: 1280, column: 5, scope: !5632)
!5656 = !DILocation(line: 0, scope: !5627)
!5657 = !DILocation(line: 1286, column: 1, scope: !5620)
!5658 = distinct !DISubprogram(name: "HAL_UART_Transmit_DMA", scope: !1162, file: !1162, line: 1299, type: !5583, scopeLine: 1300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5659)
!5659 = !{!5660, !5661, !5662, !5663}
!5660 = !DILocalVariable(name: "huart", arg: 1, scope: !5658, file: !1162, line: 1299, type: !1187)
!5661 = !DILocalVariable(name: "pData", arg: 2, scope: !5658, file: !1162, line: 1299, type: !670)
!5662 = !DILocalVariable(name: "Size", arg: 3, scope: !5658, file: !1162, line: 1299, type: !37)
!5663 = !DILocalVariable(name: "tmp", scope: !5658, file: !1162, line: 1301, type: !538)
!5664 = !DILocation(line: 0, scope: !5658)
!5665 = !DILocation(line: 1304, column: 14, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5658, file: !1162, line: 1304, column: 7)
!5667 = !DILocation(line: 1304, column: 21, scope: !5666)
!5668 = !DILocation(line: 1304, column: 7, scope: !5658)
!5669 = !DILocation(line: 1306, column: 16, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5671, file: !1162, line: 1306, column: 9)
!5671 = distinct !DILexicalBlock(scope: !5666, file: !1162, line: 1305, column: 3)
!5672 = !DILocation(line: 1306, column: 25, scope: !5670)
!5673 = !DILocation(line: 1312, column: 5, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5675, file: !1162, line: 1312, column: 5)
!5675 = distinct !DILexicalBlock(scope: !5671, file: !1162, line: 1312, column: 5)
!5676 = !DILocation(line: 1312, column: 5, scope: !5675)
!5677 = !DILocation(line: 1312, column: 5, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5674, file: !1162, line: 1312, column: 5)
!5679 = !DILocation(line: 1314, column: 12, scope: !5671)
!5680 = !DILocation(line: 1314, column: 23, scope: !5671)
!5681 = !DILocation(line: 1315, column: 12, scope: !5671)
!5682 = !DILocation(line: 1315, column: 23, scope: !5671)
!5683 = !DILocation(line: 1316, column: 12, scope: !5671)
!5684 = !DILocation(line: 1316, column: 24, scope: !5671)
!5685 = !DILocation(line: 1318, column: 12, scope: !5671)
!5686 = !DILocation(line: 1318, column: 22, scope: !5671)
!5687 = !DILocation(line: 1319, column: 19, scope: !5671)
!5688 = !DILocation(line: 1322, column: 12, scope: !5671)
!5689 = !{!5184, !1599, i64 48}
!5690 = !DILocation(line: 1322, column: 20, scope: !5671)
!5691 = !DILocation(line: 1322, column: 37, scope: !5671)
!5692 = !{!5693, !1599, i64 44}
!5693 = !{!"__DMA_HandleTypeDef", !1599, i64 0, !3813, i64 4, !1600, i64 32, !1600, i64 36, !1599, i64 40, !1599, i64 44, !1599, i64 48, !1599, i64 52, !1599, i64 56, !2442, i64 60, !1599, i64 64, !2442, i64 68}
!5694 = !DILocation(line: 1325, column: 20, scope: !5671)
!5695 = !DILocation(line: 1325, column: 41, scope: !5671)
!5696 = !{!5693, !1599, i64 48}
!5697 = !DILocation(line: 1328, column: 20, scope: !5671)
!5698 = !DILocation(line: 1328, column: 38, scope: !5671)
!5699 = !{!5693, !1599, i64 52}
!5700 = !DILocation(line: 1331, column: 20, scope: !5671)
!5701 = !DILocation(line: 1331, column: 38, scope: !5671)
!5702 = !{!5693, !1599, i64 56}
!5703 = !DILocation(line: 1335, column: 37, scope: !5671)
!5704 = !DILocation(line: 1335, column: 73, scope: !5671)
!5705 = !DILocation(line: 1335, column: 83, scope: !5671)
!5706 = !DILocation(line: 1335, column: 55, scope: !5671)
!5707 = !DILocation(line: 1335, column: 5, scope: !5671)
!5708 = !DILocation(line: 1338, column: 5, scope: !5671)
!5709 = !DILocation(line: 1341, column: 5, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5671, file: !1162, line: 1341, column: 5)
!5711 = !DILocation(line: 1345, column: 5, scope: !5671)
!5712 = !DILocation(line: 1347, column: 5, scope: !5671)
!5713 = !DILocation(line: 0, scope: !5666)
!5714 = !DILocation(line: 1353, column: 1, scope: !5658)
!5715 = distinct !DISubprogram(name: "UART_DMATransmitCplt", scope: !1162, file: !1162, line: 2542, type: !5716, scopeLine: 2543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5718)
!5716 = !DISubroutineType(types: !5717)
!5717 = !{null, !1221}
!5718 = !{!5719, !5720}
!5719 = !DILocalVariable(name: "hdma", arg: 1, scope: !5715, file: !1162, line: 2542, type: !1221)
!5720 = !DILocalVariable(name: "huart", scope: !5715, file: !1162, line: 2544, type: !1187)
!5721 = !DILocation(line: 0, scope: !5715)
!5722 = !DILocation(line: 2544, column: 82, scope: !5715)
!5723 = !{!5693, !1599, i64 40}
!5724 = !DILocation(line: 2546, column: 14, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5715, file: !1162, line: 2546, column: 7)
!5726 = !{!5693, !1599, i64 0}
!5727 = !DILocation(line: 2546, column: 24, scope: !5725)
!5728 = !DILocation(line: 2546, column: 28, scope: !5725)
!5729 = !DILocation(line: 2546, column: 44, scope: !5725)
!5730 = !DILocation(line: 2546, column: 7, scope: !5715)
!5731 = !DILocation(line: 2548, column: 12, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5725, file: !1162, line: 2547, column: 3)
!5733 = !DILocation(line: 2548, column: 24, scope: !5732)
!5734 = !DILocation(line: 2552, column: 5, scope: !5732)
!5735 = !DILocation(line: 2555, column: 5, scope: !5732)
!5736 = !DILocation(line: 2557, column: 3, scope: !5732)
!5737 = !DILocation(line: 2566, column: 5, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5725, file: !1162, line: 2560, column: 3)
!5739 = !DILocation(line: 2569, column: 1, scope: !5715)
!5740 = distinct !DISubprogram(name: "UART_DMATxHalfCplt", scope: !1162, file: !1162, line: 2577, type: !5716, scopeLine: 2578, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5741)
!5741 = !{!5742, !5743}
!5742 = !DILocalVariable(name: "hdma", arg: 1, scope: !5740, file: !1162, line: 2577, type: !1221)
!5743 = !DILocalVariable(name: "huart", scope: !5740, file: !1162, line: 2579, type: !1187)
!5744 = !DILocation(line: 0, scope: !5740)
!5745 = !DILocation(line: 2579, column: 82, scope: !5740)
!5746 = !DILocation(line: 2586, column: 3, scope: !5740)
!5747 = !DILocation(line: 2588, column: 1, scope: !5740)
!5748 = distinct !DISubprogram(name: "UART_DMAError", scope: !1162, file: !1162, line: 2649, type: !5716, scopeLine: 2650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5749)
!5749 = !{!5750, !5751, !5752}
!5750 = !DILocalVariable(name: "hdma", arg: 1, scope: !5748, file: !1162, line: 2649, type: !1221)
!5751 = !DILocalVariable(name: "dmarequest", scope: !5748, file: !1162, line: 2651, type: !24)
!5752 = !DILocalVariable(name: "huart", scope: !5748, file: !1162, line: 2652, type: !1187)
!5753 = !DILocation(line: 0, scope: !5748)
!5754 = !DILocation(line: 2652, column: 82, scope: !5748)
!5755 = !DILocation(line: 2655, column: 16, scope: !5748)
!5756 = !DILocation(line: 2656, column: 15, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5748, file: !1162, line: 2656, column: 7)
!5758 = !DILocation(line: 2656, column: 22, scope: !5757)
!5759 = !DILocation(line: 2656, column: 49, scope: !5757)
!5760 = !DILocation(line: 2658, column: 12, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5757, file: !1162, line: 2657, column: 3)
!5762 = !DILocation(line: 2658, column: 24, scope: !5761)
!5763 = !DILocation(line: 2659, column: 5, scope: !5761)
!5764 = !DILocation(line: 2660, column: 3, scope: !5761)
!5765 = !DILocation(line: 2663, column: 16, scope: !5748)
!5766 = !DILocation(line: 2664, column: 15, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5748, file: !1162, line: 2664, column: 7)
!5768 = !DILocation(line: 2664, column: 23, scope: !5767)
!5769 = !DILocation(line: 2664, column: 50, scope: !5767)
!5770 = !DILocation(line: 2666, column: 12, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5767, file: !1162, line: 2665, column: 3)
!5772 = !DILocation(line: 2666, column: 24, scope: !5771)
!5773 = !DILocation(line: 2667, column: 5, scope: !5771)
!5774 = !DILocation(line: 2668, column: 3, scope: !5771)
!5775 = !DILocation(line: 2670, column: 10, scope: !5748)
!5776 = !DILocation(line: 2670, column: 20, scope: !5748)
!5777 = !DILocation(line: 2676, column: 3, scope: !5748)
!5778 = !DILocation(line: 2678, column: 1, scope: !5748)
!5779 = !DISubprogram(name: "HAL_DMA_Start_IT", scope: !680, file: !680, line: 378, type: !5780, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !283)
!5780 = !DISubroutineType(types: !5781)
!5781 = !{!2496, !1221, !24, !24, !24}
!5782 = distinct !DISubprogram(name: "UART_EndTxTransfer", scope: !1162, file: !1162, line: 2722, type: !5211, scopeLine: 2723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5783)
!5783 = !{!5784}
!5784 = !DILocalVariable(name: "huart", arg: 1, scope: !5782, file: !1162, line: 2722, type: !1187)
!5785 = !DILocation(line: 0, scope: !5782)
!5786 = !DILocation(line: 2725, column: 3, scope: !5782)
!5787 = !DILocation(line: 2728, column: 10, scope: !5782)
!5788 = !DILocation(line: 2728, column: 17, scope: !5782)
!5789 = !DILocation(line: 2729, column: 1, scope: !5782)
!5790 = distinct !DISubprogram(name: "UART_EndRxTransfer", scope: !1162, file: !1162, line: 2736, type: !5211, scopeLine: 2737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5791)
!5791 = !{!5792}
!5792 = !DILocalVariable(name: "huart", arg: 1, scope: !5790, file: !1162, line: 2736, type: !1187)
!5793 = !DILocation(line: 0, scope: !5790)
!5794 = !DILocation(line: 2739, column: 3, scope: !5790)
!5795 = !DILocation(line: 2740, column: 3, scope: !5790)
!5796 = !DILocation(line: 2743, column: 10, scope: !5790)
!5797 = !DILocation(line: 2743, column: 18, scope: !5790)
!5798 = !DILocation(line: 2744, column: 1, scope: !5790)
!5799 = distinct !DISubprogram(name: "HAL_UART_ErrorCallback", scope: !1162, file: !1162, line: 2227, type: !5211, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5800)
!5800 = !{!5801}
!5801 = !DILocalVariable(name: "huart", arg: 1, scope: !5799, file: !1162, line: 2227, type: !1187)
!5802 = !DILocation(line: 0, scope: !5799)
!5803 = !DILocation(line: 2234, column: 1, scope: !5799)
!5804 = distinct !DISubprogram(name: "HAL_UART_TxHalfCpltCallback", scope: !1162, file: !1162, line: 2182, type: !5211, scopeLine: 2183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5805)
!5805 = !{!5806}
!5806 = !DILocalVariable(name: "huart", arg: 1, scope: !5804, file: !1162, line: 2182, type: !1187)
!5807 = !DILocation(line: 0, scope: !5804)
!5808 = !DILocation(line: 2189, column: 1, scope: !5804)
!5809 = distinct !DISubprogram(name: "HAL_UART_TxCpltCallback", scope: !1162, file: !1162, line: 2167, type: !5211, scopeLine: 2168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5810)
!5810 = !{!5811}
!5811 = !DILocalVariable(name: "huart", arg: 1, scope: !5809, file: !1162, line: 2167, type: !1187)
!5812 = !DILocation(line: 0, scope: !5809)
!5813 = !DILocation(line: 2174, column: 1, scope: !5809)
!5814 = distinct !DISubprogram(name: "HAL_UART_Receive_DMA", scope: !1162, file: !1162, line: 1367, type: !5583, scopeLine: 1368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5815)
!5815 = !{!5816, !5817, !5818, !5819, !5820}
!5816 = !DILocalVariable(name: "huart", arg: 1, scope: !5814, file: !1162, line: 1367, type: !1187)
!5817 = !DILocalVariable(name: "pData", arg: 2, scope: !5814, file: !1162, line: 1367, type: !670)
!5818 = !DILocalVariable(name: "Size", arg: 3, scope: !5814, file: !1162, line: 1367, type: !37)
!5819 = !DILocalVariable(name: "tmp", scope: !5814, file: !1162, line: 1369, type: !538)
!5820 = !DILocalVariable(name: "tmpreg", scope: !5821, file: !1162, line: 1405, type: !23)
!5821 = distinct !DILexicalBlock(scope: !5822, file: !1162, line: 1405, column: 5)
!5822 = distinct !DILexicalBlock(scope: !5823, file: !1162, line: 1373, column: 3)
!5823 = distinct !DILexicalBlock(scope: !5814, file: !1162, line: 1372, column: 7)
!5824 = !DILocation(line: 0, scope: !5814)
!5825 = !DILocation(line: 1372, column: 14, scope: !5823)
!5826 = !DILocation(line: 1372, column: 22, scope: !5823)
!5827 = !DILocation(line: 1372, column: 7, scope: !5814)
!5828 = !DILocation(line: 1374, column: 16, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5822, file: !1162, line: 1374, column: 9)
!5830 = !DILocation(line: 1374, column: 25, scope: !5829)
!5831 = !DILocation(line: 1380, column: 5, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5833, file: !1162, line: 1380, column: 5)
!5833 = distinct !DILexicalBlock(scope: !5822, file: !1162, line: 1380, column: 5)
!5834 = !DILocation(line: 1380, column: 5, scope: !5833)
!5835 = !DILocation(line: 1380, column: 5, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5832, file: !1162, line: 1380, column: 5)
!5837 = !DILocation(line: 1382, column: 12, scope: !5822)
!5838 = !DILocation(line: 1382, column: 23, scope: !5822)
!5839 = !DILocation(line: 1383, column: 12, scope: !5822)
!5840 = !DILocation(line: 1383, column: 23, scope: !5822)
!5841 = !DILocation(line: 1385, column: 12, scope: !5822)
!5842 = !DILocation(line: 1385, column: 22, scope: !5822)
!5843 = !DILocation(line: 1386, column: 20, scope: !5822)
!5844 = !DILocation(line: 1389, column: 12, scope: !5822)
!5845 = !{!5184, !1599, i64 52}
!5846 = !DILocation(line: 1389, column: 20, scope: !5822)
!5847 = !DILocation(line: 1389, column: 37, scope: !5822)
!5848 = !DILocation(line: 1392, column: 20, scope: !5822)
!5849 = !DILocation(line: 1392, column: 41, scope: !5822)
!5850 = !DILocation(line: 1395, column: 20, scope: !5822)
!5851 = !DILocation(line: 1395, column: 38, scope: !5822)
!5852 = !DILocation(line: 1398, column: 20, scope: !5822)
!5853 = !DILocation(line: 1398, column: 38, scope: !5822)
!5854 = !DILocation(line: 1402, column: 55, scope: !5822)
!5855 = !DILocation(line: 1402, column: 65, scope: !5822)
!5856 = !DILocation(line: 1402, column: 37, scope: !5822)
!5857 = !DILocation(line: 1402, column: 69, scope: !5822)
!5858 = !DILocation(line: 1402, column: 5, scope: !5822)
!5859 = !DILocation(line: 1405, column: 5, scope: !5821)
!5860 = !DILocation(line: 1405, column: 5, scope: !5822)
!5861 = !DILocation(line: 1408, column: 5, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5822, file: !1162, line: 1408, column: 5)
!5863 = !DILocation(line: 1411, column: 5, scope: !5822)
!5864 = !DILocation(line: 1414, column: 5, scope: !5822)
!5865 = !DILocation(line: 1418, column: 5, scope: !5822)
!5866 = !DILocation(line: 1420, column: 5, scope: !5822)
!5867 = !DILocation(line: 0, scope: !5823)
!5868 = !DILocation(line: 1426, column: 1, scope: !5814)
!5869 = distinct !DISubprogram(name: "UART_DMAReceiveCplt", scope: !1162, file: !1162, line: 2596, type: !5716, scopeLine: 2597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5870)
!5870 = !{!5871, !5872}
!5871 = !DILocalVariable(name: "hdma", arg: 1, scope: !5869, file: !1162, line: 2596, type: !1221)
!5872 = !DILocalVariable(name: "huart", scope: !5869, file: !1162, line: 2598, type: !1187)
!5873 = !DILocation(line: 0, scope: !5869)
!5874 = !DILocation(line: 2598, column: 82, scope: !5869)
!5875 = !DILocation(line: 2600, column: 14, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5869, file: !1162, line: 2600, column: 7)
!5877 = !DILocation(line: 2600, column: 24, scope: !5876)
!5878 = !DILocation(line: 2600, column: 28, scope: !5876)
!5879 = !DILocation(line: 2600, column: 44, scope: !5876)
!5880 = !DILocation(line: 2600, column: 7, scope: !5869)
!5881 = !DILocation(line: 2602, column: 12, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5876, file: !1162, line: 2601, column: 3)
!5883 = !DILocation(line: 2602, column: 24, scope: !5882)
!5884 = !DILocation(line: 2605, column: 5, scope: !5882)
!5885 = !DILocation(line: 2606, column: 5, scope: !5882)
!5886 = !DILocation(line: 2610, column: 5, scope: !5882)
!5887 = !DILocation(line: 2613, column: 12, scope: !5882)
!5888 = !DILocation(line: 2613, column: 20, scope: !5882)
!5889 = !DILocation(line: 2614, column: 3, scope: !5882)
!5890 = !DILocation(line: 2620, column: 3, scope: !5869)
!5891 = !DILocation(line: 2622, column: 1, scope: !5869)
!5892 = distinct !DISubprogram(name: "UART_DMARxHalfCplt", scope: !1162, file: !1162, line: 2630, type: !5716, scopeLine: 2631, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5893)
!5893 = !{!5894, !5895}
!5894 = !DILocalVariable(name: "hdma", arg: 1, scope: !5892, file: !1162, line: 2630, type: !1221)
!5895 = !DILocalVariable(name: "huart", scope: !5892, file: !1162, line: 2632, type: !1187)
!5896 = !DILocation(line: 0, scope: !5892)
!5897 = !DILocation(line: 2632, column: 82, scope: !5892)
!5898 = !DILocation(line: 2639, column: 3, scope: !5892)
!5899 = !DILocation(line: 2641, column: 1, scope: !5892)
!5900 = distinct !DISubprogram(name: "HAL_UART_RxHalfCpltCallback", scope: !1162, file: !1162, line: 2212, type: !5211, scopeLine: 2213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5901)
!5901 = !{!5902}
!5902 = !DILocalVariable(name: "huart", arg: 1, scope: !5900, file: !1162, line: 2212, type: !1187)
!5903 = !DILocation(line: 0, scope: !5900)
!5904 = !DILocation(line: 2219, column: 1, scope: !5900)
!5905 = distinct !DISubprogram(name: "HAL_UART_RxCpltCallback", scope: !1162, file: !1162, line: 2197, type: !5211, scopeLine: 2198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5906)
!5906 = !{!5907}
!5907 = !DILocalVariable(name: "huart", arg: 1, scope: !5905, file: !1162, line: 2197, type: !1187)
!5908 = !DILocation(line: 0, scope: !5905)
!5909 = !DILocation(line: 2204, column: 1, scope: !5905)
!5910 = distinct !DISubprogram(name: "HAL_UART_DMAPause", scope: !1162, file: !1162, line: 1434, type: !5173, scopeLine: 1435, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5911)
!5911 = !{!5912, !5913}
!5912 = !DILocalVariable(name: "huart", arg: 1, scope: !5910, file: !1162, line: 1434, type: !1187)
!5913 = !DILocalVariable(name: "dmarequest", scope: !5910, file: !1162, line: 1436, type: !24)
!5914 = !DILocation(line: 0, scope: !5910)
!5915 = !DILocation(line: 1439, column: 3, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5917, file: !1162, line: 1439, column: 3)
!5917 = distinct !DILexicalBlock(scope: !5910, file: !1162, line: 1439, column: 3)
!5918 = !DILocation(line: 1439, column: 3, scope: !5917)
!5919 = !DILocation(line: 1439, column: 3, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5916, file: !1162, line: 1439, column: 3)
!5921 = !DILocation(line: 1441, column: 16, scope: !5910)
!5922 = !DILocation(line: 1442, column: 15, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5910, file: !1162, line: 1442, column: 7)
!5924 = !DILocation(line: 1442, column: 22, scope: !5923)
!5925 = !DILocation(line: 1442, column: 49, scope: !5923)
!5926 = !DILocation(line: 1445, column: 5, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5923, file: !1162, line: 1443, column: 3)
!5928 = !DILocation(line: 1446, column: 3, scope: !5927)
!5929 = !DILocation(line: 1448, column: 16, scope: !5910)
!5930 = !DILocation(line: 1449, column: 15, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5910, file: !1162, line: 1449, column: 7)
!5932 = !DILocation(line: 1449, column: 23, scope: !5931)
!5933 = !DILocation(line: 1449, column: 50, scope: !5931)
!5934 = !DILocation(line: 1452, column: 5, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5931, file: !1162, line: 1450, column: 3)
!5936 = !DILocation(line: 1453, column: 5, scope: !5935)
!5937 = !DILocation(line: 1456, column: 5, scope: !5935)
!5938 = !DILocation(line: 1457, column: 3, scope: !5935)
!5939 = !DILocation(line: 1460, column: 3, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5910, file: !1162, line: 1460, column: 3)
!5941 = !DILocation(line: 1462, column: 3, scope: !5910)
!5942 = !DILocation(line: 1463, column: 1, scope: !5910)
!5943 = distinct !DISubprogram(name: "HAL_UART_DMAResume", scope: !1162, file: !1162, line: 1471, type: !5173, scopeLine: 1472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5944)
!5944 = !{!5945, !5946}
!5945 = !DILocalVariable(name: "huart", arg: 1, scope: !5943, file: !1162, line: 1471, type: !1187)
!5946 = !DILocalVariable(name: "tmpreg", scope: !5947, file: !1162, line: 1485, type: !23)
!5947 = distinct !DILexicalBlock(scope: !5948, file: !1162, line: 1485, column: 5)
!5948 = distinct !DILexicalBlock(scope: !5949, file: !1162, line: 1483, column: 3)
!5949 = distinct !DILexicalBlock(scope: !5943, file: !1162, line: 1482, column: 7)
!5950 = !DILocation(line: 0, scope: !5943)
!5951 = !DILocation(line: 1474, column: 3, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5953, file: !1162, line: 1474, column: 3)
!5953 = distinct !DILexicalBlock(scope: !5943, file: !1162, line: 1474, column: 3)
!5954 = !DILocation(line: 1474, column: 3, scope: !5953)
!5955 = !DILocation(line: 1474, column: 3, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5952, file: !1162, line: 1474, column: 3)
!5957 = !DILocation(line: 1476, column: 14, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5943, file: !1162, line: 1476, column: 7)
!5959 = !DILocation(line: 1476, column: 21, scope: !5958)
!5960 = !DILocation(line: 1476, column: 7, scope: !5943)
!5961 = !DILocation(line: 1479, column: 5, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5958, file: !1162, line: 1477, column: 3)
!5963 = !DILocation(line: 1480, column: 3, scope: !5962)
!5964 = !DILocation(line: 1482, column: 14, scope: !5949)
!5965 = !DILocation(line: 1482, column: 22, scope: !5949)
!5966 = !DILocation(line: 1482, column: 7, scope: !5943)
!5967 = !DILocation(line: 1485, column: 5, scope: !5947)
!5968 = !DILocation(line: 1485, column: 5, scope: !5948)
!5969 = !DILocation(line: 1488, column: 5, scope: !5948)
!5970 = !DILocation(line: 1489, column: 5, scope: !5948)
!5971 = !DILocation(line: 1492, column: 5, scope: !5948)
!5972 = !DILocation(line: 1493, column: 3, scope: !5948)
!5973 = !DILocation(line: 1496, column: 3, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5943, file: !1162, line: 1496, column: 3)
!5975 = !DILocation(line: 1498, column: 3, scope: !5943)
!5976 = !DILocation(line: 1499, column: 1, scope: !5943)
!5977 = distinct !DISubprogram(name: "HAL_UART_DMAStop", scope: !1162, file: !1162, line: 1507, type: !5173, scopeLine: 1508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !5978)
!5978 = !{!5979, !5980}
!5979 = !DILocalVariable(name: "huart", arg: 1, scope: !5977, file: !1162, line: 1507, type: !1187)
!5980 = !DILocalVariable(name: "dmarequest", scope: !5977, file: !1162, line: 1509, type: !24)
!5981 = !DILocation(line: 0, scope: !5977)
!5982 = !DILocation(line: 1517, column: 16, scope: !5977)
!5983 = !DILocation(line: 1518, column: 15, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5977, file: !1162, line: 1518, column: 7)
!5985 = !DILocation(line: 1518, column: 22, scope: !5984)
!5986 = !DILocation(line: 1518, column: 49, scope: !5984)
!5987 = !DILocation(line: 1520, column: 5, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5984, file: !1162, line: 1519, column: 3)
!5989 = !DILocation(line: 1523, column: 16, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5988, file: !1162, line: 1523, column: 9)
!5991 = !DILocation(line: 1523, column: 23, scope: !5990)
!5992 = !DILocation(line: 1523, column: 9, scope: !5988)
!5993 = !DILocation(line: 1525, column: 7, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5990, file: !1162, line: 1524, column: 5)
!5995 = !DILocation(line: 1526, column: 5, scope: !5994)
!5996 = !DILocation(line: 1527, column: 5, scope: !5988)
!5997 = !DILocation(line: 1528, column: 3, scope: !5988)
!5998 = !DILocation(line: 1531, column: 16, scope: !5977)
!5999 = !DILocation(line: 1532, column: 15, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5977, file: !1162, line: 1532, column: 7)
!6001 = !DILocation(line: 1532, column: 23, scope: !6000)
!6002 = !DILocation(line: 1532, column: 50, scope: !6000)
!6003 = !DILocation(line: 1534, column: 5, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6000, file: !1162, line: 1533, column: 3)
!6005 = !DILocation(line: 1537, column: 16, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6004, file: !1162, line: 1537, column: 9)
!6007 = !DILocation(line: 1537, column: 23, scope: !6006)
!6008 = !DILocation(line: 1537, column: 9, scope: !6004)
!6009 = !DILocation(line: 1539, column: 7, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6006, file: !1162, line: 1538, column: 5)
!6011 = !DILocation(line: 1540, column: 5, scope: !6010)
!6012 = !DILocation(line: 1541, column: 5, scope: !6004)
!6013 = !DILocation(line: 1542, column: 3, scope: !6004)
!6014 = !DILocation(line: 1544, column: 3, scope: !5977)
!6015 = !DISubprogram(name: "HAL_DMA_Abort", scope: !680, file: !680, line: 379, type: !6016, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !283)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{!2496, !1221}
!6018 = distinct !DISubprogram(name: "HAL_UART_Abort", scope: !1162, file: !1162, line: 1559, type: !5173, scopeLine: 1560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6019)
!6019 = !{!6020}
!6020 = !DILocalVariable(name: "huart", arg: 1, scope: !6018, file: !1162, line: 1559, type: !1187)
!6021 = !DILocation(line: 0, scope: !6018)
!6022 = !DILocation(line: 1562, column: 3, scope: !6018)
!6023 = !DILocation(line: 1563, column: 3, scope: !6018)
!6024 = !DILocation(line: 1566, column: 7, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6018, file: !1162, line: 1566, column: 7)
!6026 = !DILocation(line: 1566, column: 7, scope: !6018)
!6027 = !DILocation(line: 1568, column: 5, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6025, file: !1162, line: 1567, column: 3)
!6029 = !DILocation(line: 1571, column: 16, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6028, file: !1162, line: 1571, column: 9)
!6031 = !DILocation(line: 1571, column: 23, scope: !6030)
!6032 = !DILocation(line: 1571, column: 9, scope: !6028)
!6033 = !DILocation(line: 1575, column: 22, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6030, file: !1162, line: 1572, column: 5)
!6035 = !DILocation(line: 1575, column: 40, scope: !6034)
!6036 = !DILocation(line: 1577, column: 11, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6034, file: !1162, line: 1577, column: 11)
!6038 = !DILocation(line: 1577, column: 40, scope: !6037)
!6039 = !DILocation(line: 1577, column: 11, scope: !6034)
!6040 = !DILocation(line: 1579, column: 37, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6042, file: !1162, line: 1579, column: 13)
!6042 = distinct !DILexicalBlock(scope: !6037, file: !1162, line: 1578, column: 7)
!6043 = !DILocation(line: 1579, column: 13, scope: !6041)
!6044 = !DILocation(line: 1579, column: 45, scope: !6041)
!6045 = !DILocation(line: 1579, column: 13, scope: !6042)
!6046 = !DILocation(line: 1582, column: 18, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6041, file: !1162, line: 1580, column: 9)
!6048 = !DILocation(line: 1582, column: 28, scope: !6047)
!6049 = !DILocation(line: 1584, column: 11, scope: !6047)
!6050 = !DILocation(line: 1591, column: 7, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6018, file: !1162, line: 1591, column: 7)
!6052 = !DILocation(line: 1591, column: 7, scope: !6018)
!6053 = !DILocation(line: 1593, column: 5, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6051, file: !1162, line: 1592, column: 3)
!6055 = !DILocation(line: 1596, column: 16, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6054, file: !1162, line: 1596, column: 9)
!6057 = !DILocation(line: 1596, column: 23, scope: !6056)
!6058 = !DILocation(line: 1596, column: 9, scope: !6054)
!6059 = !DILocation(line: 1600, column: 22, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6056, file: !1162, line: 1597, column: 5)
!6061 = !DILocation(line: 1600, column: 40, scope: !6060)
!6062 = !DILocation(line: 1602, column: 11, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6060, file: !1162, line: 1602, column: 11)
!6064 = !DILocation(line: 1602, column: 40, scope: !6063)
!6065 = !DILocation(line: 1602, column: 11, scope: !6060)
!6066 = !DILocation(line: 1604, column: 37, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6068, file: !1162, line: 1604, column: 13)
!6068 = distinct !DILexicalBlock(scope: !6063, file: !1162, line: 1603, column: 7)
!6069 = !DILocation(line: 1604, column: 13, scope: !6067)
!6070 = !DILocation(line: 1604, column: 45, scope: !6067)
!6071 = !DILocation(line: 1604, column: 13, scope: !6068)
!6072 = !DILocation(line: 1607, column: 18, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6067, file: !1162, line: 1605, column: 9)
!6074 = !DILocation(line: 1607, column: 28, scope: !6073)
!6075 = !DILocation(line: 1609, column: 11, scope: !6073)
!6076 = !DILocation(line: 1616, column: 10, scope: !6018)
!6077 = !DILocation(line: 1616, column: 22, scope: !6018)
!6078 = !DILocation(line: 1617, column: 10, scope: !6018)
!6079 = !DILocation(line: 1617, column: 22, scope: !6018)
!6080 = !DILocation(line: 1620, column: 10, scope: !6018)
!6081 = !DILocation(line: 1620, column: 20, scope: !6018)
!6082 = !DILocation(line: 1623, column: 10, scope: !6018)
!6083 = !DILocation(line: 1623, column: 18, scope: !6018)
!6084 = !DILocation(line: 1624, column: 10, scope: !6018)
!6085 = !DILocation(line: 1624, column: 17, scope: !6018)
!6086 = !DILocation(line: 1626, column: 3, scope: !6018)
!6087 = !DILocation(line: 1627, column: 1, scope: !6018)
!6088 = !DISubprogram(name: "HAL_DMA_GetError", scope: !680, file: !680, line: 395, type: !6089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !283)
!6089 = !DISubroutineType(types: !6090)
!6090 = !{!24, !1221}
!6091 = distinct !DISubprogram(name: "HAL_UART_AbortTransmit", scope: !1162, file: !1162, line: 1641, type: !5173, scopeLine: 1642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6092)
!6092 = !{!6093}
!6093 = !DILocalVariable(name: "huart", arg: 1, scope: !6091, file: !1162, line: 1641, type: !1187)
!6094 = !DILocation(line: 0, scope: !6091)
!6095 = !DILocation(line: 1644, column: 3, scope: !6091)
!6096 = !DILocation(line: 1647, column: 7, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6091, file: !1162, line: 1647, column: 7)
!6098 = !DILocation(line: 1647, column: 7, scope: !6091)
!6099 = !DILocation(line: 1649, column: 5, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6097, file: !1162, line: 1648, column: 3)
!6101 = !DILocation(line: 1652, column: 16, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6100, file: !1162, line: 1652, column: 9)
!6103 = !DILocation(line: 1652, column: 23, scope: !6102)
!6104 = !DILocation(line: 1652, column: 9, scope: !6100)
!6105 = !DILocation(line: 1656, column: 22, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6102, file: !1162, line: 1653, column: 5)
!6107 = !DILocation(line: 1656, column: 40, scope: !6106)
!6108 = !DILocation(line: 1658, column: 11, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6106, file: !1162, line: 1658, column: 11)
!6110 = !DILocation(line: 1658, column: 40, scope: !6109)
!6111 = !DILocation(line: 1658, column: 11, scope: !6106)
!6112 = !DILocation(line: 1660, column: 37, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6114, file: !1162, line: 1660, column: 13)
!6114 = distinct !DILexicalBlock(scope: !6109, file: !1162, line: 1659, column: 7)
!6115 = !DILocation(line: 1660, column: 13, scope: !6113)
!6116 = !DILocation(line: 1660, column: 45, scope: !6113)
!6117 = !DILocation(line: 1660, column: 13, scope: !6114)
!6118 = !DILocation(line: 1663, column: 18, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6113, file: !1162, line: 1661, column: 9)
!6120 = !DILocation(line: 1663, column: 28, scope: !6119)
!6121 = !DILocation(line: 1665, column: 11, scope: !6119)
!6122 = !DILocation(line: 1672, column: 10, scope: !6091)
!6123 = !DILocation(line: 1672, column: 22, scope: !6091)
!6124 = !DILocation(line: 1675, column: 10, scope: !6091)
!6125 = !DILocation(line: 1675, column: 17, scope: !6091)
!6126 = !DILocation(line: 1677, column: 3, scope: !6091)
!6127 = !DILocation(line: 1678, column: 1, scope: !6091)
!6128 = distinct !DISubprogram(name: "HAL_UART_AbortReceive", scope: !1162, file: !1162, line: 1692, type: !5173, scopeLine: 1693, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6129)
!6129 = !{!6130}
!6130 = !DILocalVariable(name: "huart", arg: 1, scope: !6128, file: !1162, line: 1692, type: !1187)
!6131 = !DILocation(line: 0, scope: !6128)
!6132 = !DILocation(line: 1695, column: 3, scope: !6128)
!6133 = !DILocation(line: 1696, column: 3, scope: !6128)
!6134 = !DILocation(line: 1699, column: 7, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6128, file: !1162, line: 1699, column: 7)
!6136 = !DILocation(line: 1699, column: 7, scope: !6128)
!6137 = !DILocation(line: 1701, column: 5, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6135, file: !1162, line: 1700, column: 3)
!6139 = !DILocation(line: 1704, column: 16, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6138, file: !1162, line: 1704, column: 9)
!6141 = !DILocation(line: 1704, column: 23, scope: !6140)
!6142 = !DILocation(line: 1704, column: 9, scope: !6138)
!6143 = !DILocation(line: 1708, column: 22, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6140, file: !1162, line: 1705, column: 5)
!6145 = !DILocation(line: 1708, column: 40, scope: !6144)
!6146 = !DILocation(line: 1710, column: 11, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6144, file: !1162, line: 1710, column: 11)
!6148 = !DILocation(line: 1710, column: 40, scope: !6147)
!6149 = !DILocation(line: 1710, column: 11, scope: !6144)
!6150 = !DILocation(line: 1712, column: 37, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6152, file: !1162, line: 1712, column: 13)
!6152 = distinct !DILexicalBlock(scope: !6147, file: !1162, line: 1711, column: 7)
!6153 = !DILocation(line: 1712, column: 13, scope: !6151)
!6154 = !DILocation(line: 1712, column: 45, scope: !6151)
!6155 = !DILocation(line: 1712, column: 13, scope: !6152)
!6156 = !DILocation(line: 1715, column: 18, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6151, file: !1162, line: 1713, column: 9)
!6158 = !DILocation(line: 1715, column: 28, scope: !6157)
!6159 = !DILocation(line: 1717, column: 11, scope: !6157)
!6160 = !DILocation(line: 1724, column: 10, scope: !6128)
!6161 = !DILocation(line: 1724, column: 22, scope: !6128)
!6162 = !DILocation(line: 1727, column: 10, scope: !6128)
!6163 = !DILocation(line: 1727, column: 18, scope: !6128)
!6164 = !DILocation(line: 1729, column: 3, scope: !6128)
!6165 = !DILocation(line: 1730, column: 1, scope: !6128)
!6166 = distinct !DISubprogram(name: "HAL_UART_Abort_IT", scope: !1162, file: !1162, line: 1746, type: !5173, scopeLine: 1747, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6167)
!6167 = !{!6168, !6169}
!6168 = !DILocalVariable(name: "huart", arg: 1, scope: !6166, file: !1162, line: 1746, type: !1187)
!6169 = !DILocalVariable(name: "AbortCplt", scope: !6166, file: !1162, line: 1748, type: !24)
!6170 = !DILocation(line: 0, scope: !6166)
!6171 = !DILocation(line: 1751, column: 3, scope: !6166)
!6172 = !DILocation(line: 1752, column: 3, scope: !6166)
!6173 = !DILocation(line: 1757, column: 14, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6166, file: !1162, line: 1757, column: 7)
!6175 = !DILocation(line: 1757, column: 21, scope: !6174)
!6176 = !DILocation(line: 1757, column: 7, scope: !6166)
!6177 = !DILocation(line: 1761, column: 9, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6179, file: !1162, line: 1761, column: 9)
!6179 = distinct !DILexicalBlock(scope: !6174, file: !1162, line: 1758, column: 3)
!6180 = !DILocation(line: 0, scope: !6178)
!6181 = !DILocation(line: 1771, column: 14, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6166, file: !1162, line: 1771, column: 7)
!6183 = !DILocation(line: 1771, column: 21, scope: !6182)
!6184 = !DILocation(line: 1771, column: 7, scope: !6166)
!6185 = !DILocation(line: 1775, column: 9, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6187, file: !1162, line: 1775, column: 9)
!6187 = distinct !DILexicalBlock(scope: !6182, file: !1162, line: 1772, column: 3)
!6188 = !DILocation(line: 0, scope: !6186)
!6189 = !DILocation(line: 1786, column: 7, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6166, file: !1162, line: 1786, column: 7)
!6191 = !DILocation(line: 1786, column: 7, scope: !6166)
!6192 = !DILocation(line: 1789, column: 5, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6190, file: !1162, line: 1787, column: 3)
!6194 = !DILocation(line: 1792, column: 9, scope: !6193)
!6195 = !DILocation(line: 1798, column: 11, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6197, file: !1162, line: 1798, column: 11)
!6197 = distinct !DILexicalBlock(scope: !6198, file: !1162, line: 1793, column: 5)
!6198 = distinct !DILexicalBlock(scope: !6193, file: !1162, line: 1792, column: 9)
!6199 = !DILocation(line: 1798, column: 43, scope: !6196)
!6200 = !DILocation(line: 1798, column: 11, scope: !6197)
!6201 = !DILocation(line: 1800, column: 16, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6196, file: !1162, line: 1799, column: 7)
!6203 = !DILocation(line: 1800, column: 24, scope: !6202)
!6204 = !DILocation(line: 1800, column: 42, scope: !6202)
!6205 = !DILocation(line: 1801, column: 7, scope: !6202)
!6206 = !DILocation(line: 1810, column: 7, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6166, file: !1162, line: 1810, column: 7)
!6208 = !DILocation(line: 1810, column: 7, scope: !6166)
!6209 = !DILocation(line: 1812, column: 5, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6207, file: !1162, line: 1811, column: 3)
!6211 = !DILocation(line: 1815, column: 16, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6210, file: !1162, line: 1815, column: 9)
!6213 = !DILocation(line: 1815, column: 23, scope: !6212)
!6214 = !DILocation(line: 1815, column: 9, scope: !6210)
!6215 = !DILocation(line: 1821, column: 11, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !1162, line: 1821, column: 11)
!6217 = distinct !DILexicalBlock(scope: !6212, file: !1162, line: 1816, column: 5)
!6218 = !DILocation(line: 1821, column: 43, scope: !6216)
!6219 = !DILocation(line: 1821, column: 11, scope: !6217)
!6220 = !DILocation(line: 1823, column: 16, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6216, file: !1162, line: 1822, column: 7)
!6222 = !DILocation(line: 1823, column: 24, scope: !6221)
!6223 = !DILocation(line: 1823, column: 42, scope: !6221)
!6224 = !DILocation(line: 1825, column: 7, scope: !6221)
!6225 = !DILocation(line: 1834, column: 17, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6166, file: !1162, line: 1834, column: 7)
!6227 = !DILocation(line: 1834, column: 7, scope: !6166)
!6228 = !DILocation(line: 1837, column: 12, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6226, file: !1162, line: 1835, column: 3)
!6230 = !DILocation(line: 1837, column: 24, scope: !6229)
!6231 = !DILocation(line: 1838, column: 12, scope: !6229)
!6232 = !DILocation(line: 1838, column: 24, scope: !6229)
!6233 = !DILocation(line: 1841, column: 12, scope: !6229)
!6234 = !DILocation(line: 1841, column: 22, scope: !6229)
!6235 = !DILocation(line: 1844, column: 12, scope: !6229)
!6236 = !DILocation(line: 1844, column: 20, scope: !6229)
!6237 = !DILocation(line: 1845, column: 12, scope: !6229)
!6238 = !DILocation(line: 1845, column: 20, scope: !6229)
!6239 = !DILocation(line: 1853, column: 5, scope: !6229)
!6240 = !DILocation(line: 1855, column: 3, scope: !6229)
!6241 = !DILocation(line: 1857, column: 3, scope: !6166)
!6242 = distinct !DISubprogram(name: "UART_DMATxAbortCallback", scope: !1162, file: !1162, line: 2777, type: !5716, scopeLine: 2778, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6243)
!6243 = !{!6244, !6245}
!6244 = !DILocalVariable(name: "hdma", arg: 1, scope: !6242, file: !1162, line: 2777, type: !1221)
!6245 = !DILocalVariable(name: "huart", scope: !6242, file: !1162, line: 2779, type: !1187)
!6246 = !DILocation(line: 0, scope: !6242)
!6247 = !DILocation(line: 2779, column: 82, scope: !6242)
!6248 = !DILocation(line: 2781, column: 10, scope: !6242)
!6249 = !DILocation(line: 2781, column: 18, scope: !6242)
!6250 = !DILocation(line: 2781, column: 36, scope: !6242)
!6251 = !DILocation(line: 2784, column: 14, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6242, file: !1162, line: 2784, column: 7)
!6253 = !DILocation(line: 2784, column: 21, scope: !6252)
!6254 = !DILocation(line: 2784, column: 7, scope: !6242)
!6255 = !DILocation(line: 2786, column: 24, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6257, file: !1162, line: 2786, column: 9)
!6257 = distinct !DILexicalBlock(scope: !6252, file: !1162, line: 2785, column: 3)
!6258 = !DILocation(line: 2786, column: 42, scope: !6256)
!6259 = !DILocation(line: 2786, column: 9, scope: !6257)
!6260 = !DILocation(line: 2793, column: 10, scope: !6242)
!6261 = !DILocation(line: 2793, column: 22, scope: !6242)
!6262 = !DILocation(line: 2794, column: 10, scope: !6242)
!6263 = !DILocation(line: 2794, column: 22, scope: !6242)
!6264 = !DILocation(line: 2797, column: 10, scope: !6242)
!6265 = !DILocation(line: 2797, column: 20, scope: !6242)
!6266 = !DILocation(line: 2800, column: 10, scope: !6242)
!6267 = !DILocation(line: 2800, column: 18, scope: !6242)
!6268 = !DILocation(line: 2801, column: 10, scope: !6242)
!6269 = !DILocation(line: 2801, column: 18, scope: !6242)
!6270 = !DILocation(line: 2809, column: 3, scope: !6242)
!6271 = !DILocation(line: 2811, column: 1, scope: !6242)
!6272 = distinct !DISubprogram(name: "UART_DMARxAbortCallback", scope: !1162, file: !1162, line: 2822, type: !5716, scopeLine: 2823, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6273)
!6273 = !{!6274, !6275}
!6274 = !DILocalVariable(name: "hdma", arg: 1, scope: !6272, file: !1162, line: 2822, type: !1221)
!6275 = !DILocalVariable(name: "huart", scope: !6272, file: !1162, line: 2824, type: !1187)
!6276 = !DILocation(line: 0, scope: !6272)
!6277 = !DILocation(line: 2824, column: 82, scope: !6272)
!6278 = !DILocation(line: 2826, column: 10, scope: !6272)
!6279 = !DILocation(line: 2826, column: 18, scope: !6272)
!6280 = !DILocation(line: 2826, column: 36, scope: !6272)
!6281 = !DILocation(line: 2829, column: 14, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6272, file: !1162, line: 2829, column: 7)
!6283 = !DILocation(line: 2829, column: 21, scope: !6282)
!6284 = !DILocation(line: 2829, column: 7, scope: !6272)
!6285 = !DILocation(line: 2831, column: 24, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !1162, line: 2831, column: 9)
!6287 = distinct !DILexicalBlock(scope: !6282, file: !1162, line: 2830, column: 3)
!6288 = !DILocation(line: 2831, column: 42, scope: !6286)
!6289 = !DILocation(line: 2831, column: 9, scope: !6287)
!6290 = !DILocation(line: 2838, column: 10, scope: !6272)
!6291 = !DILocation(line: 2838, column: 22, scope: !6272)
!6292 = !DILocation(line: 2839, column: 10, scope: !6272)
!6293 = !DILocation(line: 2839, column: 22, scope: !6272)
!6294 = !DILocation(line: 2842, column: 10, scope: !6272)
!6295 = !DILocation(line: 2842, column: 20, scope: !6272)
!6296 = !DILocation(line: 2845, column: 10, scope: !6272)
!6297 = !DILocation(line: 2845, column: 18, scope: !6272)
!6298 = !DILocation(line: 2846, column: 10, scope: !6272)
!6299 = !DILocation(line: 2846, column: 18, scope: !6272)
!6300 = !DILocation(line: 2854, column: 3, scope: !6272)
!6301 = !DILocation(line: 2856, column: 1, scope: !6272)
!6302 = !DISubprogram(name: "HAL_DMA_Abort_IT", scope: !680, file: !680, line: 380, type: !6016, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !283)
!6303 = distinct !DISubprogram(name: "HAL_UART_AbortCpltCallback", scope: !1162, file: !1162, line: 2241, type: !5211, scopeLine: 2242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6304)
!6304 = !{!6305}
!6305 = !DILocalVariable(name: "huart", arg: 1, scope: !6303, file: !1162, line: 2241, type: !1187)
!6306 = !DILocation(line: 0, scope: !6303)
!6307 = !DILocation(line: 2249, column: 1, scope: !6303)
!6308 = distinct !DISubprogram(name: "HAL_UART_AbortTransmit_IT", scope: !1162, file: !1162, line: 1874, type: !5173, scopeLine: 1875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6309)
!6309 = !{!6310}
!6310 = !DILocalVariable(name: "huart", arg: 1, scope: !6308, file: !1162, line: 1874, type: !1187)
!6311 = !DILocation(line: 0, scope: !6308)
!6312 = !DILocation(line: 1877, column: 3, scope: !6308)
!6313 = !DILocation(line: 1880, column: 7, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6308, file: !1162, line: 1880, column: 7)
!6315 = !DILocation(line: 1880, column: 7, scope: !6308)
!6316 = !DILocation(line: 1882, column: 5, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6314, file: !1162, line: 1881, column: 3)
!6318 = !DILocation(line: 1885, column: 16, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6317, file: !1162, line: 1885, column: 9)
!6320 = !DILocation(line: 1885, column: 23, scope: !6319)
!6321 = !DILocation(line: 1885, column: 9, scope: !6317)
!6322 = !DILocation(line: 1889, column: 22, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6319, file: !1162, line: 1886, column: 5)
!6324 = !DILocation(line: 1889, column: 40, scope: !6323)
!6325 = !DILocation(line: 1892, column: 11, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6323, file: !1162, line: 1892, column: 11)
!6327 = !DILocation(line: 1892, column: 43, scope: !6326)
!6328 = !DILocation(line: 1892, column: 11, scope: !6323)
!6329 = !DILocation(line: 1895, column: 16, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6326, file: !1162, line: 1893, column: 7)
!6331 = !DILocation(line: 1895, column: 24, scope: !6330)
!6332 = !DILocation(line: 1895, column: 9, scope: !6330)
!6333 = !DILocation(line: 1896, column: 7, scope: !6330)
!6334 = !DILocation(line: 1901, column: 14, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6319, file: !1162, line: 1899, column: 5)
!6336 = !DILocation(line: 1901, column: 26, scope: !6335)
!6337 = !DILocation(line: 1904, column: 14, scope: !6335)
!6338 = !DILocation(line: 1904, column: 21, scope: !6335)
!6339 = !DILocation(line: 1912, column: 7, scope: !6335)
!6340 = !DILocation(line: 1919, column: 12, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6314, file: !1162, line: 1917, column: 3)
!6342 = !DILocation(line: 1919, column: 24, scope: !6341)
!6343 = !DILocation(line: 1922, column: 12, scope: !6341)
!6344 = !DILocation(line: 1922, column: 19, scope: !6341)
!6345 = !DILocation(line: 1930, column: 5, scope: !6341)
!6346 = !DILocation(line: 1934, column: 3, scope: !6308)
!6347 = distinct !DISubprogram(name: "UART_DMATxOnlyAbortCallback", scope: !1162, file: !1162, line: 2867, type: !5716, scopeLine: 2868, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6348)
!6348 = !{!6349, !6350}
!6349 = !DILocalVariable(name: "hdma", arg: 1, scope: !6347, file: !1162, line: 2867, type: !1221)
!6350 = !DILocalVariable(name: "huart", scope: !6347, file: !1162, line: 2869, type: !1187)
!6351 = !DILocation(line: 0, scope: !6347)
!6352 = !DILocation(line: 2869, column: 82, scope: !6347)
!6353 = !DILocation(line: 2871, column: 10, scope: !6347)
!6354 = !DILocation(line: 2871, column: 22, scope: !6347)
!6355 = !DILocation(line: 2874, column: 10, scope: !6347)
!6356 = !DILocation(line: 2874, column: 17, scope: !6347)
!6357 = !DILocation(line: 2882, column: 3, scope: !6347)
!6358 = !DILocation(line: 2884, column: 1, scope: !6347)
!6359 = distinct !DISubprogram(name: "HAL_UART_AbortTransmitCpltCallback", scope: !1162, file: !1162, line: 2256, type: !5211, scopeLine: 2257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6360)
!6360 = !{!6361}
!6361 = !DILocalVariable(name: "huart", arg: 1, scope: !6359, file: !1162, line: 2256, type: !1187)
!6362 = !DILocation(line: 0, scope: !6359)
!6363 = !DILocation(line: 2264, column: 1, scope: !6359)
!6364 = distinct !DISubprogram(name: "HAL_UART_AbortReceive_IT", scope: !1162, file: !1162, line: 1951, type: !5173, scopeLine: 1952, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6365)
!6365 = !{!6366}
!6366 = !DILocalVariable(name: "huart", arg: 1, scope: !6364, file: !1162, line: 1951, type: !1187)
!6367 = !DILocation(line: 0, scope: !6364)
!6368 = !DILocation(line: 1954, column: 3, scope: !6364)
!6369 = !DILocation(line: 1955, column: 3, scope: !6364)
!6370 = !DILocation(line: 1958, column: 7, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6364, file: !1162, line: 1958, column: 7)
!6372 = !DILocation(line: 1958, column: 7, scope: !6364)
!6373 = !DILocation(line: 1960, column: 5, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6371, file: !1162, line: 1959, column: 3)
!6375 = !DILocation(line: 1963, column: 16, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6374, file: !1162, line: 1963, column: 9)
!6377 = !DILocation(line: 1963, column: 23, scope: !6376)
!6378 = !DILocation(line: 1963, column: 9, scope: !6374)
!6379 = !DILocation(line: 1967, column: 22, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6376, file: !1162, line: 1964, column: 5)
!6381 = !DILocation(line: 1967, column: 40, scope: !6380)
!6382 = !DILocation(line: 1970, column: 11, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6380, file: !1162, line: 1970, column: 11)
!6384 = !DILocation(line: 1970, column: 43, scope: !6383)
!6385 = !DILocation(line: 1970, column: 11, scope: !6380)
!6386 = !DILocation(line: 1973, column: 16, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6383, file: !1162, line: 1971, column: 7)
!6388 = !DILocation(line: 1973, column: 24, scope: !6387)
!6389 = !DILocation(line: 1973, column: 9, scope: !6387)
!6390 = !DILocation(line: 1974, column: 7, scope: !6387)
!6391 = !DILocation(line: 1979, column: 14, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6376, file: !1162, line: 1977, column: 5)
!6393 = !DILocation(line: 1979, column: 26, scope: !6392)
!6394 = !DILocation(line: 1982, column: 14, scope: !6392)
!6395 = !DILocation(line: 1982, column: 22, scope: !6392)
!6396 = !DILocation(line: 1990, column: 7, scope: !6392)
!6397 = !DILocation(line: 1997, column: 12, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6371, file: !1162, line: 1995, column: 3)
!6399 = !DILocation(line: 1997, column: 24, scope: !6398)
!6400 = !DILocation(line: 2000, column: 12, scope: !6398)
!6401 = !DILocation(line: 2000, column: 20, scope: !6398)
!6402 = !DILocation(line: 2008, column: 5, scope: !6398)
!6403 = !DILocation(line: 2012, column: 3, scope: !6364)
!6404 = distinct !DISubprogram(name: "UART_DMARxOnlyAbortCallback", scope: !1162, file: !1162, line: 2895, type: !5716, scopeLine: 2896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6405)
!6405 = !{!6406, !6407}
!6406 = !DILocalVariable(name: "hdma", arg: 1, scope: !6404, file: !1162, line: 2895, type: !1221)
!6407 = !DILocalVariable(name: "huart", scope: !6404, file: !1162, line: 2897, type: !1187)
!6408 = !DILocation(line: 0, scope: !6404)
!6409 = !DILocation(line: 2897, column: 82, scope: !6404)
!6410 = !DILocation(line: 2899, column: 10, scope: !6404)
!6411 = !DILocation(line: 2899, column: 22, scope: !6404)
!6412 = !DILocation(line: 2902, column: 10, scope: !6404)
!6413 = !DILocation(line: 2902, column: 18, scope: !6404)
!6414 = !DILocation(line: 2910, column: 3, scope: !6404)
!6415 = !DILocation(line: 2912, column: 1, scope: !6404)
!6416 = distinct !DISubprogram(name: "HAL_UART_AbortReceiveCpltCallback", scope: !1162, file: !1162, line: 2271, type: !5211, scopeLine: 2272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6417)
!6417 = !{!6418}
!6418 = !DILocalVariable(name: "huart", arg: 1, scope: !6416, file: !1162, line: 2271, type: !1187)
!6419 = !DILocation(line: 0, scope: !6416)
!6420 = !DILocation(line: 2279, column: 1, scope: !6416)
!6421 = distinct !DISubprogram(name: "HAL_UART_IRQHandler", scope: !1162, file: !1162, line: 2021, type: !5211, scopeLine: 2022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6422)
!6422 = !{!6423, !6424, !6425, !6426, !6427, !6428}
!6423 = !DILocalVariable(name: "huart", arg: 1, scope: !6421, file: !1162, line: 2021, type: !1187)
!6424 = !DILocalVariable(name: "isrflags", scope: !6421, file: !1162, line: 2023, type: !24)
!6425 = !DILocalVariable(name: "cr1its", scope: !6421, file: !1162, line: 2024, type: !24)
!6426 = !DILocalVariable(name: "cr3its", scope: !6421, file: !1162, line: 2025, type: !24)
!6427 = !DILocalVariable(name: "errorflags", scope: !6421, file: !1162, line: 2026, type: !24)
!6428 = !DILocalVariable(name: "dmarequest", scope: !6421, file: !1162, line: 2027, type: !24)
!6429 = !DILocation(line: 0, scope: !6421)
!6430 = !DILocation(line: 2023, column: 25, scope: !6421)
!6431 = !DILocation(line: 2024, column: 25, scope: !6421)
!6432 = !DILocation(line: 2025, column: 25, scope: !6421)
!6433 = !DILocation(line: 2031, column: 7, scope: !6421)
!6434 = !DILocation(line: 2036, column: 7, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6436, file: !1162, line: 2035, column: 5)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !1162, line: 2034, column: 9)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !1162, line: 2032, column: 3)
!6438 = distinct !DILexicalBlock(scope: !6421, file: !1162, line: 2031, column: 7)
!6439 = !DILocation(line: 2037, column: 7, scope: !6435)
!6440 = !DILocation(line: 2030, column: 26, scope: !6421)
!6441 = !DILocation(line: 2042, column: 19, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6421, file: !1162, line: 2042, column: 7)
!6443 = !DILocation(line: 2042, column: 29, scope: !6442)
!6444 = !DILocation(line: 2042, column: 42, scope: !6442)
!6445 = !DILocation(line: 2042, column: 59, scope: !6442)
!6446 = !DILocation(line: 2042, column: 69, scope: !6442)
!6447 = !DILocation(line: 2045, column: 20, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6449, file: !1162, line: 2045, column: 9)
!6449 = distinct !DILexicalBlock(scope: !6442, file: !1162, line: 2043, column: 3)
!6450 = !DILocation(line: 2045, column: 35, scope: !6448)
!6451 = !DILocation(line: 2045, column: 45, scope: !6448)
!6452 = !DILocation(line: 2047, column: 14, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6448, file: !1162, line: 2046, column: 5)
!6454 = !DILocation(line: 2047, column: 24, scope: !6453)
!6455 = !DILocation(line: 2048, column: 5, scope: !6453)
!6456 = !DILocation(line: 2051, column: 20, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6449, file: !1162, line: 2051, column: 9)
!6458 = !DILocation(line: 2051, column: 35, scope: !6457)
!6459 = !DILocation(line: 2051, column: 45, scope: !6457)
!6460 = !DILocation(line: 2053, column: 14, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6457, file: !1162, line: 2052, column: 5)
!6462 = !DILocation(line: 2053, column: 24, scope: !6461)
!6463 = !DILocation(line: 2054, column: 5, scope: !6461)
!6464 = !DILocation(line: 2057, column: 20, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6449, file: !1162, line: 2057, column: 9)
!6466 = !DILocation(line: 2057, column: 35, scope: !6465)
!6467 = !DILocation(line: 2057, column: 45, scope: !6465)
!6468 = !DILocation(line: 2059, column: 14, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6465, file: !1162, line: 2058, column: 5)
!6470 = !DILocation(line: 2059, column: 24, scope: !6469)
!6471 = !DILocation(line: 2060, column: 5, scope: !6469)
!6472 = !DILocation(line: 2063, column: 20, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6449, file: !1162, line: 2063, column: 9)
!6474 = !DILocation(line: 2063, column: 36, scope: !6473)
!6475 = !DILocation(line: 2063, column: 46, scope: !6473)
!6476 = !DILocation(line: 2065, column: 14, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6473, file: !1162, line: 2064, column: 5)
!6478 = !DILocation(line: 2065, column: 24, scope: !6477)
!6479 = !DILocation(line: 2066, column: 5, scope: !6477)
!6480 = !DILocation(line: 2069, column: 16, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6449, file: !1162, line: 2069, column: 9)
!6482 = !DILocation(line: 2069, column: 26, scope: !6481)
!6483 = !DILocation(line: 2069, column: 9, scope: !6449)
!6484 = !DILocation(line: 2072, column: 49, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6486, file: !1162, line: 2072, column: 11)
!6486 = distinct !DILexicalBlock(scope: !6481, file: !1162, line: 2070, column: 5)
!6487 = !DILocation(line: 2074, column: 9, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6485, file: !1162, line: 2073, column: 7)
!6489 = !DILocation(line: 2075, column: 7, scope: !6488)
!6490 = !DILocation(line: 2079, column: 20, scope: !6486)
!6491 = !DILocation(line: 2080, column: 20, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6486, file: !1162, line: 2080, column: 11)
!6493 = !DILocation(line: 2080, column: 30, scope: !6492)
!6494 = !DILocation(line: 2080, column: 52, scope: !6492)
!6495 = !DILocation(line: 2080, column: 62, scope: !6492)
!6496 = !DILocation(line: 2085, column: 9, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6492, file: !1162, line: 2081, column: 7)
!6498 = !DILocation(line: 2088, column: 13, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6497, file: !1162, line: 2088, column: 13)
!6500 = !DILocation(line: 2088, column: 13, scope: !6497)
!6501 = !DILocation(line: 2090, column: 11, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6499, file: !1162, line: 2089, column: 9)
!6503 = !DILocation(line: 2093, column: 22, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6502, file: !1162, line: 2093, column: 15)
!6505 = !DILocation(line: 2093, column: 29, scope: !6504)
!6506 = !DILocation(line: 2093, column: 15, scope: !6502)
!6507 = !DILocation(line: 2097, column: 28, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6504, file: !1162, line: 2094, column: 11)
!6509 = !DILocation(line: 2097, column: 46, scope: !6508)
!6510 = !DILocation(line: 2098, column: 17, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6508, file: !1162, line: 2098, column: 17)
!6512 = !DILocation(line: 2098, column: 49, scope: !6511)
!6513 = !DILocation(line: 2098, column: 17, scope: !6508)
!6514 = !DILocation(line: 2101, column: 22, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6511, file: !1162, line: 2099, column: 13)
!6516 = !DILocation(line: 2101, column: 30, scope: !6515)
!6517 = !DILocation(line: 2101, column: 15, scope: !6515)
!6518 = !DILocation(line: 2102, column: 13, scope: !6515)
!6519 = !DILocation(line: 2112, column: 13, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6504, file: !1162, line: 2105, column: 11)
!6521 = !DILocation(line: 2124, column: 11, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6499, file: !1162, line: 2117, column: 9)
!6523 = !DILocation(line: 2137, column: 9, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6492, file: !1162, line: 2129, column: 7)
!6525 = !DILocation(line: 2140, column: 26, scope: !6524)
!6526 = !DILocation(line: 2147, column: 18, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6421, file: !1162, line: 2147, column: 7)
!6528 = !DILocation(line: 2147, column: 34, scope: !6527)
!6529 = !DILocation(line: 2147, column: 44, scope: !6527)
!6530 = !DILocation(line: 2149, column: 5, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6527, file: !1162, line: 2148, column: 3)
!6532 = !DILocation(line: 2150, column: 5, scope: !6531)
!6533 = !DILocation(line: 2154, column: 18, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6421, file: !1162, line: 2154, column: 7)
!6535 = !DILocation(line: 2154, column: 33, scope: !6534)
!6536 = !DILocation(line: 2154, column: 43, scope: !6534)
!6537 = !DILocation(line: 2156, column: 5, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6534, file: !1162, line: 2155, column: 3)
!6539 = !DILocation(line: 2157, column: 5, scope: !6538)
!6540 = !DILocation(line: 2159, column: 1, scope: !6421)
!6541 = distinct !DISubprogram(name: "UART_Receive_IT", scope: !1162, file: !1162, line: 2992, type: !5173, scopeLine: 2993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6542)
!6542 = !{!6543, !6544}
!6543 = !DILocalVariable(name: "huart", arg: 1, scope: !6541, file: !1162, line: 2992, type: !1187)
!6544 = !DILocalVariable(name: "tmp", scope: !6541, file: !1162, line: 2994, type: !1185)
!6545 = !DILocation(line: 0, scope: !6541)
!6546 = !DILocation(line: 2997, column: 14, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6541, file: !1162, line: 2997, column: 7)
!6548 = !DILocation(line: 2997, column: 22, scope: !6547)
!6549 = !DILocation(line: 2997, column: 7, scope: !6541)
!6550 = !DILocation(line: 2999, column: 21, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6552, file: !1162, line: 2999, column: 9)
!6552 = distinct !DILexicalBlock(scope: !6547, file: !1162, line: 2998, column: 3)
!6553 = !DILocation(line: 2999, column: 32, scope: !6551)
!6554 = !DILocation(line: 2999, column: 9, scope: !6552)
!6555 = !DILocation(line: 3001, column: 33, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6551, file: !1162, line: 3000, column: 5)
!6557 = !DILocation(line: 3002, column: 23, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6556, file: !1162, line: 3002, column: 11)
!6559 = !DILocation(line: 3002, column: 30, scope: !6558)
!6560 = !DILocation(line: 0, scope: !6558)
!6561 = !DILocation(line: 3002, column: 11, scope: !6556)
!6562 = !DILocation(line: 3004, column: 16, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6558, file: !1162, line: 3003, column: 7)
!6564 = !DILocation(line: 3004, column: 14, scope: !6563)
!6565 = !DILocation(line: 3005, column: 27, scope: !6563)
!6566 = !DILocation(line: 3006, column: 7, scope: !6563)
!6567 = !DILocation(line: 3009, column: 16, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6558, file: !1162, line: 3008, column: 7)
!6569 = !DILocation(line: 3009, column: 14, scope: !6568)
!6570 = !DILocation(line: 3010, column: 27, scope: !6568)
!6571 = !DILocation(line: 3015, column: 23, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6573, file: !1162, line: 3015, column: 11)
!6573 = distinct !DILexicalBlock(scope: !6551, file: !1162, line: 3014, column: 5)
!6574 = !DILocation(line: 3015, column: 30, scope: !6572)
!6575 = !DILocation(line: 0, scope: !6572)
!6576 = !DILocation(line: 3015, column: 11, scope: !6573)
!6577 = !DILocation(line: 3017, column: 17, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6572, file: !1162, line: 3016, column: 7)
!6579 = !DILocation(line: 3017, column: 27, scope: !6578)
!6580 = !DILocation(line: 3017, column: 30, scope: !6578)
!6581 = !DILocation(line: 3018, column: 7, scope: !6578)
!6582 = !DILocation(line: 3021, column: 32, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6572, file: !1162, line: 3020, column: 7)
!6584 = !DILocation(line: 3021, column: 17, scope: !6583)
!6585 = !DILocation(line: 3021, column: 27, scope: !6583)
!6586 = !DILocation(line: 3021, column: 30, scope: !6583)
!6587 = !DILocation(line: 3025, column: 18, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6552, file: !1162, line: 3025, column: 9)
!6589 = !DILocation(line: 3025, column: 9, scope: !6588)
!6590 = !DILocation(line: 3025, column: 30, scope: !6588)
!6591 = !DILocation(line: 3025, column: 9, scope: !6552)
!6592 = !DILocation(line: 3028, column: 7, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6588, file: !1162, line: 3026, column: 5)
!6594 = !DILocation(line: 3031, column: 7, scope: !6593)
!6595 = !DILocation(line: 3034, column: 7, scope: !6593)
!6596 = !DILocation(line: 3037, column: 22, scope: !6593)
!6597 = !DILocation(line: 3044, column: 7, scope: !6593)
!6598 = !DILocation(line: 3047, column: 7, scope: !6593)
!6599 = !DILocation(line: 3055, column: 1, scope: !6541)
!6600 = distinct !DISubprogram(name: "UART_DMAAbortOnError", scope: !1162, file: !1162, line: 2753, type: !5716, scopeLine: 2754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6601)
!6601 = !{!6602, !6603}
!6602 = !DILocalVariable(name: "hdma", arg: 1, scope: !6600, file: !1162, line: 2753, type: !1221)
!6603 = !DILocalVariable(name: "huart", scope: !6600, file: !1162, line: 2755, type: !1187)
!6604 = !DILocation(line: 0, scope: !6600)
!6605 = !DILocation(line: 2755, column: 82, scope: !6600)
!6606 = !DILocation(line: 2756, column: 10, scope: !6600)
!6607 = !DILocation(line: 2756, column: 22, scope: !6600)
!6608 = !DILocation(line: 2757, column: 10, scope: !6600)
!6609 = !DILocation(line: 2757, column: 22, scope: !6600)
!6610 = !DILocation(line: 2764, column: 3, scope: !6600)
!6611 = !DILocation(line: 2766, column: 1, scope: !6600)
!6612 = distinct !DISubprogram(name: "UART_Transmit_IT", scope: !1162, file: !1162, line: 2920, type: !5173, scopeLine: 2921, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6613)
!6613 = !{!6614, !6615}
!6614 = !DILocalVariable(name: "huart", arg: 1, scope: !6612, file: !1162, line: 2920, type: !1187)
!6615 = !DILocalVariable(name: "tmp", scope: !6612, file: !1162, line: 2922, type: !1185)
!6616 = !DILocation(line: 0, scope: !6612)
!6617 = !DILocation(line: 2925, column: 14, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6612, file: !1162, line: 2925, column: 7)
!6619 = !DILocation(line: 2925, column: 21, scope: !6618)
!6620 = !DILocation(line: 2925, column: 7, scope: !6612)
!6621 = !DILocation(line: 2927, column: 21, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6623, file: !1162, line: 2927, column: 9)
!6623 = distinct !DILexicalBlock(scope: !6618, file: !1162, line: 2926, column: 3)
!6624 = !DILocation(line: 2927, column: 32, scope: !6622)
!6625 = !DILocation(line: 0, scope: !6622)
!6626 = !DILocation(line: 2927, column: 9, scope: !6623)
!6627 = !DILocation(line: 2929, column: 33, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6622, file: !1162, line: 2928, column: 5)
!6629 = !DILocation(line: 2930, column: 40, scope: !6628)
!6630 = !DILocation(line: 2930, column: 45, scope: !6628)
!6631 = !DILocation(line: 2930, column: 29, scope: !6628)
!6632 = !DILocation(line: 2930, column: 14, scope: !6628)
!6633 = !DILocation(line: 2930, column: 24, scope: !6628)
!6634 = !DILocation(line: 2930, column: 27, scope: !6628)
!6635 = !DILocation(line: 2931, column: 23, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6628, file: !1162, line: 2931, column: 11)
!6637 = !DILocation(line: 2931, column: 30, scope: !6636)
!6638 = !DILocation(line: 0, scope: !6636)
!6639 = !DILocation(line: 2931, column: 11, scope: !6628)
!6640 = !DILocation(line: 2933, column: 27, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6636, file: !1162, line: 2932, column: 7)
!6642 = !DILocation(line: 2934, column: 7, scope: !6641)
!6643 = !DILocation(line: 2937, column: 27, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6636, file: !1162, line: 2936, column: 7)
!6645 = !DILocation(line: 2942, column: 57, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6622, file: !1162, line: 2941, column: 5)
!6647 = !DILocation(line: 2942, column: 39, scope: !6646)
!6648 = !DILocation(line: 2942, column: 29, scope: !6646)
!6649 = !DILocation(line: 2942, column: 14, scope: !6646)
!6650 = !DILocation(line: 2942, column: 24, scope: !6646)
!6651 = !DILocation(line: 2942, column: 27, scope: !6646)
!6652 = !DILocation(line: 2945, column: 18, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6623, file: !1162, line: 2945, column: 9)
!6654 = !DILocation(line: 2945, column: 9, scope: !6653)
!6655 = !DILocation(line: 2945, column: 30, scope: !6653)
!6656 = !DILocation(line: 2945, column: 9, scope: !6623)
!6657 = !DILocation(line: 2948, column: 7, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6653, file: !1162, line: 2946, column: 5)
!6659 = !DILocation(line: 2951, column: 7, scope: !6658)
!6660 = !DILocation(line: 2952, column: 5, scope: !6658)
!6661 = !DILocation(line: 2959, column: 1, scope: !6612)
!6662 = distinct !DISubprogram(name: "UART_EndTransmit_IT", scope: !1162, file: !1162, line: 2967, type: !5173, scopeLine: 2968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6663)
!6663 = !{!6664}
!6664 = !DILocalVariable(name: "huart", arg: 1, scope: !6662, file: !1162, line: 2967, type: !1187)
!6665 = !DILocation(line: 0, scope: !6662)
!6666 = !DILocation(line: 2970, column: 3, scope: !6662)
!6667 = !DILocation(line: 2973, column: 10, scope: !6662)
!6668 = !DILocation(line: 2973, column: 17, scope: !6662)
!6669 = !DILocation(line: 2980, column: 3, scope: !6662)
!6670 = !DILocation(line: 2983, column: 3, scope: !6662)
!6671 = distinct !DISubprogram(name: "HAL_LIN_SendBreak", scope: !1162, file: !1162, line: 2310, type: !5173, scopeLine: 2311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6672)
!6672 = !{!6673}
!6673 = !DILocalVariable(name: "huart", arg: 1, scope: !6671, file: !1162, line: 2310, type: !1187)
!6674 = !DILocation(line: 0, scope: !6671)
!6675 = !DILocation(line: 2316, column: 3, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6677, file: !1162, line: 2316, column: 3)
!6677 = distinct !DILexicalBlock(scope: !6671, file: !1162, line: 2316, column: 3)
!6678 = !DILocation(line: 2316, column: 3, scope: !6677)
!6679 = !DILocation(line: 2316, column: 3, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6676, file: !1162, line: 2316, column: 3)
!6681 = !DILocation(line: 2318, column: 10, scope: !6671)
!6682 = !DILocation(line: 2318, column: 17, scope: !6671)
!6683 = !DILocation(line: 2321, column: 3, scope: !6671)
!6684 = !DILocation(line: 2323, column: 17, scope: !6671)
!6685 = !DILocation(line: 2326, column: 3, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6671, file: !1162, line: 2326, column: 3)
!6687 = !DILocation(line: 2328, column: 3, scope: !6671)
!6688 = !DILocation(line: 2329, column: 1, scope: !6671)
!6689 = distinct !DISubprogram(name: "HAL_MultiProcessor_EnterMuteMode", scope: !1162, file: !1162, line: 2337, type: !5173, scopeLine: 2338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6690)
!6690 = !{!6691}
!6691 = !DILocalVariable(name: "huart", arg: 1, scope: !6689, file: !1162, line: 2337, type: !1187)
!6692 = !DILocation(line: 0, scope: !6689)
!6693 = !DILocation(line: 2343, column: 3, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6695, file: !1162, line: 2343, column: 3)
!6695 = distinct !DILexicalBlock(scope: !6689, file: !1162, line: 2343, column: 3)
!6696 = !DILocation(line: 2343, column: 3, scope: !6695)
!6697 = !DILocation(line: 2343, column: 3, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6694, file: !1162, line: 2343, column: 3)
!6699 = !DILocation(line: 2345, column: 10, scope: !6689)
!6700 = !DILocation(line: 2345, column: 17, scope: !6689)
!6701 = !DILocation(line: 2348, column: 3, scope: !6689)
!6702 = !DILocation(line: 2350, column: 17, scope: !6689)
!6703 = !DILocation(line: 2353, column: 3, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6689, file: !1162, line: 2353, column: 3)
!6705 = !DILocation(line: 2355, column: 3, scope: !6689)
!6706 = !DILocation(line: 2356, column: 1, scope: !6689)
!6707 = distinct !DISubprogram(name: "HAL_MultiProcessor_ExitMuteMode", scope: !1162, file: !1162, line: 2364, type: !5173, scopeLine: 2365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6708)
!6708 = !{!6709}
!6709 = !DILocalVariable(name: "huart", arg: 1, scope: !6707, file: !1162, line: 2364, type: !1187)
!6710 = !DILocation(line: 0, scope: !6707)
!6711 = !DILocation(line: 2370, column: 3, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6713, file: !1162, line: 2370, column: 3)
!6713 = distinct !DILexicalBlock(scope: !6707, file: !1162, line: 2370, column: 3)
!6714 = !DILocation(line: 2370, column: 3, scope: !6713)
!6715 = !DILocation(line: 2370, column: 3, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6712, file: !1162, line: 2370, column: 3)
!6717 = !DILocation(line: 2372, column: 10, scope: !6707)
!6718 = !DILocation(line: 2372, column: 17, scope: !6707)
!6719 = !DILocation(line: 2375, column: 3, scope: !6707)
!6720 = !DILocation(line: 2377, column: 17, scope: !6707)
!6721 = !DILocation(line: 2380, column: 3, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6707, file: !1162, line: 2380, column: 3)
!6723 = !DILocation(line: 2382, column: 3, scope: !6707)
!6724 = !DILocation(line: 2383, column: 1, scope: !6707)
!6725 = distinct !DISubprogram(name: "HAL_HalfDuplex_EnableTransmitter", scope: !1162, file: !1162, line: 2391, type: !5173, scopeLine: 2392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6726)
!6726 = !{!6727, !6728}
!6727 = !DILocalVariable(name: "huart", arg: 1, scope: !6725, file: !1162, line: 2391, type: !1187)
!6728 = !DILocalVariable(name: "tmpreg", scope: !6725, file: !1162, line: 2393, type: !24)
!6729 = !DILocation(line: 0, scope: !6725)
!6730 = !DILocation(line: 2396, column: 3, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6732, file: !1162, line: 2396, column: 3)
!6732 = distinct !DILexicalBlock(scope: !6725, file: !1162, line: 2396, column: 3)
!6733 = !DILocation(line: 2396, column: 3, scope: !6732)
!6734 = !DILocation(line: 2396, column: 3, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6731, file: !1162, line: 2396, column: 3)
!6736 = !DILocation(line: 2398, column: 10, scope: !6725)
!6737 = !DILocation(line: 2398, column: 17, scope: !6725)
!6738 = !DILocation(line: 2401, column: 19, scope: !6725)
!6739 = !DILocation(line: 2401, column: 29, scope: !6725)
!6740 = !DILocation(line: 2404, column: 10, scope: !6725)
!6741 = !DILocation(line: 2407, column: 10, scope: !6725)
!6742 = !DILocation(line: 2410, column: 3, scope: !6725)
!6743 = !DILocation(line: 2412, column: 17, scope: !6725)
!6744 = !DILocation(line: 2415, column: 3, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6725, file: !1162, line: 2415, column: 3)
!6746 = !DILocation(line: 2417, column: 3, scope: !6725)
!6747 = !DILocation(line: 2418, column: 1, scope: !6725)
!6748 = distinct !DISubprogram(name: "HAL_HalfDuplex_EnableReceiver", scope: !1162, file: !1162, line: 2426, type: !5173, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6749)
!6749 = !{!6750, !6751}
!6750 = !DILocalVariable(name: "huart", arg: 1, scope: !6748, file: !1162, line: 2426, type: !1187)
!6751 = !DILocalVariable(name: "tmpreg", scope: !6748, file: !1162, line: 2428, type: !24)
!6752 = !DILocation(line: 0, scope: !6748)
!6753 = !DILocation(line: 2431, column: 3, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6755, file: !1162, line: 2431, column: 3)
!6755 = distinct !DILexicalBlock(scope: !6748, file: !1162, line: 2431, column: 3)
!6756 = !DILocation(line: 2431, column: 3, scope: !6755)
!6757 = !DILocation(line: 2431, column: 3, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6754, file: !1162, line: 2431, column: 3)
!6759 = !DILocation(line: 2433, column: 10, scope: !6748)
!6760 = !DILocation(line: 2433, column: 17, scope: !6748)
!6761 = !DILocation(line: 2436, column: 19, scope: !6748)
!6762 = !DILocation(line: 2436, column: 29, scope: !6748)
!6763 = !DILocation(line: 2439, column: 10, scope: !6748)
!6764 = !DILocation(line: 2442, column: 10, scope: !6748)
!6765 = !DILocation(line: 2445, column: 3, scope: !6748)
!6766 = !DILocation(line: 2447, column: 17, scope: !6748)
!6767 = !DILocation(line: 2450, column: 3, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6748, file: !1162, line: 2450, column: 3)
!6769 = !DILocation(line: 2452, column: 3, scope: !6748)
!6770 = !DILocation(line: 2453, column: 1, scope: !6748)
!6771 = distinct !DISubprogram(name: "HAL_UART_GetState", scope: !1162, file: !1162, line: 2483, type: !6772, scopeLine: 2484, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6774)
!6772 = !DISubroutineType(types: !6773)
!6773 = !{!1186, !1187}
!6774 = !{!6775, !6776, !6777}
!6775 = !DILocalVariable(name: "huart", arg: 1, scope: !6771, file: !1162, line: 2483, type: !1187)
!6776 = !DILocalVariable(name: "temp1", scope: !6771, file: !1162, line: 2485, type: !24)
!6777 = !DILocalVariable(name: "temp2", scope: !6771, file: !1162, line: 2485, type: !24)
!6778 = !DILocation(line: 0, scope: !6771)
!6779 = !DILocation(line: 2486, column: 18, scope: !6771)
!6780 = !DILocation(line: 2487, column: 18, scope: !6771)
!6781 = !DILocation(line: 2489, column: 40, scope: !6771)
!6782 = !DILocation(line: 2489, column: 3, scope: !6771)
!6783 = distinct !DISubprogram(name: "HAL_UART_GetError", scope: !1162, file: !1162, line: 2498, type: !6784, scopeLine: 2499, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1161, retainedNodes: !6786)
!6784 = !DISubroutineType(types: !6785)
!6785 = !{!24, !1187}
!6786 = !{!6787}
!6787 = !DILocalVariable(name: "huart", arg: 1, scope: !6783, file: !1162, line: 2498, type: !1187)
!6788 = !DILocation(line: 0, scope: !6783)
!6789 = !DILocation(line: 2500, column: 17, scope: !6783)
!6790 = !DILocation(line: 2500, column: 3, scope: !6783)
